$().loadJavaScript("/js/cNGJpPRjrlEySoCA.js");$().loadJavaScript("/js/1hyf9OWY93mTBudZ.js");Class.ns("Bankingapp.functions.openaccount");Bankingapp.functions.openaccount.TransactionDetails=Class.extend(Bankingapp.framework.View,{progressIndicatorStepCount:Functions.transferfunds.TransferUtils.OPENACCOUNT_STEPCOUNT_C,progressIndicatorCurrentStep:1,showPageInstructions:true,showProgressIndicator:true,containerId:"detailsCt",containerClass:"internaltransfer maincontainer",form:null,formId:"transferDetailsForm",formClass:"transfer-details-form",groupContainer:null,groupContainerClass:"groupcontainer",submitButtonLabelResourceKey:"bankingapp_brd_function_finances_openaccount_transferdetails_continue",submitButtonClass:"submit",accountTypeField:null,friendlyNameField:null,currency:null,accountTypes:[],pageInstructionsClass:"pagetitle separator textcenter",pageInstructionsResourceKey:"bankingapp_brd_function_finances_openaccount_transferdetails_information_label",accountTypeResourceKey:"bankingapp_brd_function_finances_openaccount_transferdetails_accounttype",currencyResourceKey:"bankingapp_brd_function_finances_openaccount_transferdetails_currency",friendlyNameFieldResourceKey:"bankingapp_brd_function_finances_openaccount_transferdetails_friendlyname",currencyPopupResourceKey:"bankingapp_brd_function_finances_openaccount_currency_popup_title",accountTypePopupResourceKey:"bankingapp_brd_function_finances_openaccount_accounttype_popup_title",comboClass:"selectComboContainer combo inputfirst",emptyStringResourceKey:"bankingapp_brd_function_finances_openaccount_select",formDataFunctionAttributeId:Functions.transferfunds.TransferUtils.OPENACCOUNT_FORMDATA,formData:null,$this:null,layoutRender:function(){$this=this;this.transferType=getFunctionAttribute("TransferType");this.formData={};this.container=$("<div>",{id:this.containerId,"class":this.containerClass});if(this.showProgressIndicator){this.container.append(new Bankingapp.ui.ProgressIndicator(this.progressIndicatorStepCount,this.progressIndicatorCurrentStep));}if(this.showPageInstructions){this.container.append(new Bankingapp.ui.Label(resolve(this.pageInstructionsResourceKey),{"class":this.pageInstructionsClass}));}this.form=new Bankingapp.ui.Form({id:this.formId,submitHandler:$.proxy(this.submitHandler,this),businessValidationHandler:$.proxy(this.businessValidator,this),"class":this.formClass});this.groupContainer=$("<div>",{"class":this.groupContainerClass});this.form.append(this.groupContainer);this.container.append(this.form);this.renderForm();this.renderSubmitButton();return this.container;},renderForm:function(){debugLog("Transfer details renderForm ...");this.transferType=getFunctionAttribute("TransferType");debugLog("TransferDetails, account type: "+this.transferType);return this.container;},run:function(){debugLog("run ...");this.accountTypeField=new Bankingapp.ui.InputField({labelText:resolve(this.accountTypeResourceKey),inputRenderer:Bankingapp.ui.SelectButton,required:true,inputConfig:{id:"accountTypeSelect",value:null,emptyString:resolve(this.emptyStringResourceKey),popupName:resolve(this.accountTypePopupResourceKey)},baseInputContainerClass:this.comboClass});this.accountTypeField.getInputComponent().bind("afterSelect",$.proxy(this.onSelectAccountType,this));this.currencyField=new Bankingapp.ui.InputField({labelText:resolve(this.currencyResourceKey),inputRenderer:Bankingapp.ui.SelectButton,required:true,inputConfig:{id:"currencySelect",value:null,emptyString:resolve(this.emptyStringResourceKey),popupName:resolve(this.currencyPopupResourceKey)},baseInputContainerClass:this.comboClass});this.groupContainer.append(this.currencyField);this.currencyField.getInputComponent().bind("afterSelect",$.proxy(this.onSelectCurrency,this));this.friendlyNameField=new Bankingapp.ui.InputField(resolve(this.friendlyNameFieldResourceKey),{id:"friendlyNameField",name:"friendlyNameField",type:"text",value:"",validation:{required:false,whitelist:false,maxlength:200}});this.groupContainer.append(this.friendlyNameField);this.getAccountTypes();},getAccountTypes:function(){debugLog("Get account types ...");Bankingapp.framework.Application.callService("/openaccount/getAccountTypes",{GetAccountTypesRequest:{AccountGroup:this.transferType}},$.proxy(this.handleAccountTypesResult,this));},handleAccountTypesResult:function(a){debugLog("Account Types result ...");$this.accountTypeList=null;$this.accountTypes=[];if((a!=undefined)&&a!=null&&a.accountTypes!=undefined&&a.accountTypes!=null){this.accountTypeList=a.accountTypes;$.each($this.accountTypeList,function(c,d){debugLog("value: "+d.accountTypeName);if($.inArray(d.accountTypeName,$this.accountTypes)==-1){$this.accountTypes.push(d.accountTypeName);debugLog("added ...");}});}else{debugLog("No available account types");showError(resolve("bankingapp_brd_function_finances_openaccount_no_response"));return;}debugLog($this.accountTypes);this.accountTypeField.getInputComponent().setDatas($this.accountTypes);if($this.accountTypeList!=undefined&&$this.accountTypeList[0]!=undefined){var b=$this.accountTypeList[0];if(b.accountTypeName!=undefined){this.accountTypeField.setValue(b.accountTypeName);}if(b.accountTypeCode!=undefined){debugLog("firstAccountType");debugLog(b);this.getCurrencyData(b.accountTypeCode);}else{this.currencyField.disable();}if($this.accountTypes.length==1){debugLog("only one account found ...");$this.accountTypeField.disable();}else{debugLog("enable account field ...");$this.accountTypeField.enable();}}else{$this.accountTypeField.disable();$this.currencyField.disable();}$this.accountTypeField.getInputComponent().bind("afterSelect",$.proxy($this.onSelectAccountType,$this));debugLog("handleAccountTypeResult ready");},onSelectAccountType:function(b,a){debugLog("onSelectAccountType ...");this.selectedAccountName=a.selected;debugLog("Selected account name: "+this.selectedAccountName);this.getCurrencyData(this.getSelectedAccountTypeCode(this.selectedAccountName));},getSelectedAccountTypeCode:function(a){$.each($this.accountTypeList,function(b,c){debugLog("accountTypeName: "+c.accountTypeName);debugLog("accountTypeCode: "+c.accountTypeCode);if(c.accountTypeName==a){debugLog("break each ...");$this.selectedAccountTypeCode=c.accountTypeCode;return false;}});debugLog("return: "+$this.selectedAccountTypeCode);return $this.selectedAccountTypeCode;},getCurrencyData:function(a){debugLog("Get currencies ...");debugLog("Selected account type code: "+a);Bankingapp.framework.Application.callService("/openaccount/getCurrencies",{GetCurrenciesRequest:{accountTypeCode:a}},$.proxy(this.handleCurrenciesResult,this));},handleCurrenciesResult:function(a){debugLog("Currencies result ...");var b=this;this.currencyList=null;this.currencies=[];if((a!=undefined)&&a!=null&&a.currencies!=undefined&&a.currencies!=null){this.currencyList=a.currencies;$.each(this.currencyList,function(c,d){debugLog("value: "+d.currencyCode);if($.inArray(d.currencyCode,b.currencies)==-1){b.currencies.push(d.currencyCode);debugLog("added ...");}});}debugLog(this.currencies);this.currencyField.getInputComponent().setDatas(this.currencies);this.currencyField.setValue(this.currencies[0]);if(this.currencies.length==1){this.currencyField.disable();}else{debugLog("enable currency field ...");this.currencyField.enable();}},onSelectCurrency:function(){debugLog("onSelectCurrency ...");},submitHandler:function(){debugLog("submitHandler ...");if(!this.businessValidator()){debugLog("The form is not valid!");return;}Bankingapp.framework.Application.callService("/openaccount/getAccountType",{GetAccountTypeRequest:{accountTypeCode:this.getSelectedAccountTypeCode(this.accountTypeField.val()),currency:this.currencyField.val()}},$.proxy(this.handleAccountTypeResult,this));},handleAccountTypeResult:function(a){debugLog("Account Type result ...");if(a==undefined||a.accountType==undefined){debugLog("No account type response ...");showError(resolve("bankingapp_brd_function_finances_openaccount_no_response"));return;}$.extend(this.formData,{initialAmountNeeded:a.accountType.initialAmountNeeded==undefined?"":a.accountType.initialAmountNeeded,interestRate:a.accountType.interestRate==undefined?"":a.accountType.interestRate,interestType:a.accountType.interestType==undefined?"":a.accountType.interestType,minInitialAmount:a.accountType.minInitialAmount==undefined?"":a.accountType.minInitialAmount,transactionType:this.transferType==undefined?"C":this.transferType,accountType:this.selectedAccountTypeCode,accountTypeName:a.accountType.accountTypeName,currency:this.currencyField.val(),friendlyName:this.friendlyNameField.val(),valueDate:(new Date()).toISOString()});setFunctionAttribute(this.formDataFunctionAttributeId,this.formData);debugLog("Formdata udpated ...");if(this.transferType=="C"||a.accountType.initialAmountNeeded!=true){debugLog("Forecast is possible ...");this.forecastRequest={InitialAmountNeeded:this.formData.initialAmountNeeded,InterestRate:this.formData.interestRate,MinInitialAmount:this.formData.minInitialAmount,TransactionType:this.formData.transactionType,AccountType:this.formData.accountType,Currency:this.formData.currency,FriendlyName:this.formData.friendlyName};setFunctionAttribute(Functions.transferfunds.TransferUtils.OPENACCOUNT_FORECAST_REQUEST,this.forecastRequest);callService({serviceName:"/openaccount/forecast",request:{OpenAccountTransferRequest:getFunctionAttribute(Functions.transferfunds.TransferUtils.OPENACCOUNT_FORECAST_REQUEST)},callback:Bankingapp.framework.Application.proxy(this.handleForecastRequest,this,true)});}else{debugLog("Forecast is not possible yet, initial amount needed ...");loadView("view://brd/bankingapp/function/openaccount/sourceaccountselection",null);}debugLog("submitHandler ready!");},handleForecastRequest:function(a){setFunctionAttribute(Functions.transferfunds.TransferUtils.OPENACCOUNT_FORECAST_REPLY,a);loadView("view://brd/bankingapp/function/openaccount/forecast"+this.transferType,null);},businessValidator:function(){if(this.accountTypeField.val()==undefined||this.accountTypeField.val()==""){return false;}if(this.currencyField.val()==undefined||this.currencyField.val()==""){return false;}return true;},renderSubmitButton:function(){var a={labelResourceKey:this.submitButtonLabelResourceKey,"class":this.submitButtonClass};this.submitButton=new Bankingapp.ui.SubmitButton(resolve(a.labelResourceKey),{"class":a["class"]});this.form.append(this.submitButton);}});Bankingapp.framework.Application.setView(Bankingapp.functions.openaccount.TransactionDetails);