{"findings": [{"title": "Electronic Codebook (ECB) used for encryption", "stat": "high", "description": "\n            Using the same encryption key, in ECB mode data blocks are enciphered individually \n            from each other and cause identical message blocks to be transformed to identical ciphertext \n            blocks. The independency of encrypted blocks also implies that the malicious substitution of a \n            block has no impact on adjacent blocks. As a consequence, data patterns are not well hidden and \n            message confidentiality may be compromised.\n            \n            On Android, the Cipher API provides access to implementations of cryptographic schemes\n            for the encryption and decryption of arbitrary data. To request an instance of a particular cipher,\n            an application has to invoke the method getInstance, passing a suitable transformation string as\n            parameter. Typically, this value is composed of the desired algorithm name, a mode of operation,\n            and the padding scheme to apply. For example, to request an object instance that provides AES in\n            ECB mode with PKCS5 padding, the transformation AES/ECB/PKCS5Padding has to be specified.\n            \n            While it is indispensable to declare the algorithm to use, explicitly setting the mode and\n            padding may be omitted. To fill the gap, the underlying Cryptographic Service Provider (CSP)\n            relies on predefined values that do not necessarily reflect the recommended practice. Precisely, if\n            the transformation indicates no operation mode, ECB mode is put in place. Moreover, the initially\n            described problem with ECB is not limited to a specific cipher, such as AES but affects all symmetric\n            block ciphers. Stream ciphers and asymmetric cryptosystems are not concerned since they\n            do not involve an operation mode to repeatedly encipher blocks of contiguous data.\n        ", "recommendation": "It is recommended not to use ECB for encryption. Use an asymmetric encryption algorithm instead", "evidence": ["/home/miki/Documents/GITHUB/AndroidPermissions/apks/comparison_androart/ro_ing_mobile_banking_android_activity/app/smali/\ufc5f.smali", "/home/miki/Documents/GITHUB/AndroidPermissions/apks/comparison_androart/ro_ing_mobile_banking_android_activity/app/smali/\ufc5f.smali", "/home/miki/Documents/GITHUB/AndroidPermissions/apks/comparison_androart/ro_ing_mobile_banking_android_activity/app/smali/de/neom/neoreadersdk/License.smali", "/home/miki/Documents/GITHUB/AndroidPermissions/apks/comparison_androart/ro_ing_mobile_banking_android_activity/app/smali/de/neom/neoreadersdk/License.smali"]}]}