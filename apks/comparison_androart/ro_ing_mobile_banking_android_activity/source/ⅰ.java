import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import com.google.android.gms.common.api.Status;
import java.util.concurrent.TimeUnit;

public final class ⅰ<R extends ᴸ>
  extends ᵣ<R>
{
  private final Status mStatus;
  
  public ⅰ(Status paramStatus)
  {
    ʅ.checkNotNull(paramStatus, "Status must not be null");
    boolean bool;
    if (!paramStatus.isSuccess()) {
      bool = true;
    } else {
      bool = false;
    }
    ʅ.checkArgument(bool, "Status must not be success");
    this.mStatus = paramStatus;
  }
  
  @NonNull
  public final R await()
  {
    throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
  }
  
  @NonNull
  public final R await(long paramLong, @NonNull TimeUnit paramTimeUnit)
  {
    throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
  }
  
  public final void cancel()
  {
    throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
  }
  
  public final boolean isCanceled()
  {
    throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
  }
  
  public final void setResultCallback(@NonNull ᴶ<? super R> paramᴶ)
  {
    throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
  }
  
  public final void setResultCallback(@NonNull ᴶ<? super R> paramᴶ, long paramLong, @NonNull TimeUnit paramTimeUnit)
  {
    throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
  }
  
  @NonNull
  public final <S extends ᴸ> ᵀ<S> then(@NonNull ᔇ<? super R, ? extends S> paramᔇ)
  {
    throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
  }
  
  public final void zza(@NonNull ᵣ.ˊ paramˊ)
  {
    throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
  }
  
  @Nullable
  public final Integer zzagv()
  {
    throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
  }
  
  @NonNull
  final Status ˏ()
  {
    return this.mStatus;
  }
}
