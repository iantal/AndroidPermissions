package com.baidu.mobads;

import android.app.Activity;
import android.content.Context;
import android.graphics.Rect;
import android.widget.RelativeLayout;
import com.baidu.mobads.a.b;
import com.baidu.mobads.a.d;
import java.lang.reflect.Method;

public final class MultiFuncService
{
  private static Class<?> a;
  private static final MultiFuncService b = new MultiFuncService();
  private static Object c = null;
  
  private MultiFuncService() {}
  
  public static MultiFuncService getInstance(Context paramContext)
  {
    try
    {
      if (c == null)
      {
        if (a == null) {
          a = b.b(paramContext, "com.baidu.mobads.remote.MultiFuncService");
        }
        Method localMethod = a.getDeclaredMethod("getInstance", new Class[] { Context.class });
        localMethod.setAccessible(true);
        c = localMethod.invoke(null, new Object[] { paramContext });
      }
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        d.b(paramContext);
      }
    }
    return b;
  }
  
  public void removeFromFloatView(Activity paramActivity, AdView paramAdView)
  {
    try
    {
      if ((a == null) || (c == null))
      {
        d.b("You should invode like MultiFuncService.getInstance().removeFromFloatView(...)");
        return;
      }
      Method localMethod = a.getDeclaredMethod("removeFromFloatView", new Class[] { Activity.class, RelativeLayout.class });
      localMethod.setAccessible(true);
      localMethod.invoke(c, new Object[] { paramActivity, paramAdView });
      return;
    }
    catch (Exception paramActivity)
    {
      d.b(paramActivity);
    }
  }
  
  public void showInFloatView(Activity paramActivity, AdView paramAdView, Rect paramRect)
  {
    try
    {
      if ((a == null) || (c == null))
      {
        d.b("You should invode like MultiFuncService.getInstance().showInFloatView(...)");
        return;
      }
      Method localMethod = a.getDeclaredMethod("showInFloatView", new Class[] { Activity.class, RelativeLayout.class, Rect.class });
      localMethod.setAccessible(true);
      localMethod.invoke(c, new Object[] { paramActivity, paramAdView, paramRect });
      return;
    }
    catch (Exception paramActivity)
    {
      d.b(paramActivity);
    }
  }
  
  public void videoPreLoad(Activity paramActivity, String paramString)
  {
    try
    {
      if ((a == null) || (c == null))
      {
        d.b("You should invode like MultiFuncService.getInstance().videoPreLoad(...)");
        return;
      }
      Method localMethod = a.getDeclaredMethod("videoPreLoad", new Class[] { Activity.class, String.class });
      localMethod.setAccessible(true);
      localMethod.invoke(c, new Object[] { paramActivity, paramString });
      return;
    }
    catch (Exception paramActivity)
    {
      d.b(paramActivity);
    }
  }
}
