package cqmbkjulys.hienfdz.euul.a;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.app.ProgressDialog;
import android.os.Bundle;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.LayoutInflater;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RelativeLayout;
import cqmbkjulys.hienfdz.euul.tools.l;
import cqmbkjulys.hienfdz.euul.tools.s;
import cqmbkjulys.hienfdz.euul.tools.t;
import java.lang.ref.SoftReference;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;

public abstract class a
  extends Activity
{
  public static int v;
  public static int w;
  public static float x;
  protected AlertDialog A;
  protected AlertDialog.Builder B;
  private LinearLayout a;
  private LinearLayout b;
  private LinearLayout c;
  public final HashMap k = new HashMap();
  protected boolean l;
  protected boolean m;
  protected boolean n;
  protected boolean o;
  protected boolean p;
  protected boolean q;
  protected boolean r;
  protected String s = "";
  protected RelativeLayout t;
  public DisplayMetrics u;
  protected ProgressDialog y;
  protected AlertDialog z;
  
  public a() {}
  
  private final void d()
  {
    Thread.currentThread().setUncaughtExceptionHandler(new b(this));
  }
  
  private void e()
  {
    if (this.p)
    {
      t.b().a().add(new SoftReference(this));
      l.a("SingletonTopUtil hashCode: " + t.b().hashCode());
      return;
    }
    s.b().a().add(new SoftReference(this));
    l.a("SingletonChildUtil hashCode : " + s.b().hashCode());
  }
  
  public static void k()
  {
    ArrayList localArrayList = s.b().a();
    l.a(" SingletonChildUtil.getInstance().getActivityList().size() = " + s.b().a().size());
    Iterator localIterator = localArrayList.iterator();
    for (;;)
    {
      if (!localIterator.hasNext())
      {
        localArrayList.clear();
        return;
      }
      Activity localActivity = (Activity)((SoftReference)localIterator.next()).get();
      if ((localActivity != null) && (!localActivity.isFinishing())) {
        localActivity.finish();
      }
    }
  }
  
  public static void l()
  {
    k();
    ArrayList localArrayList = t.b().a();
    l.a(" SingletonTopUtil.getInstance().getActivityList().size() = " + t.b().a().size());
    Iterator localIterator = localArrayList.iterator();
    for (;;)
    {
      if (!localIterator.hasNext())
      {
        localArrayList.clear();
        return;
      }
      Activity localActivity = (Activity)((SoftReference)localIterator.next()).get();
      if ((localActivity != null) && (!localActivity.isFinishing())) {
        localActivity.finish();
      }
    }
  }
  
  private void n()
  {
    if (this.p)
    {
      t.b().a().remove(this);
      return;
    }
    s.b().a().remove(this);
  }
  
  private void o()
  {
    this.t = ((RelativeLayout)getLayoutInflater().inflate(2130903043, null));
    this.a = ((LinearLayout)this.t.findViewById(2131230729));
    this.b = ((LinearLayout)this.t.findViewById(2131230732));
    this.c = ((LinearLayout)this.t.findViewById(2131230730));
    setContentView(this.t);
  }
  
  private void p()
  {
    if (this.l) {
      getWindow().setFlags(1024, 1024);
    }
    if (this.m) {
      requestWindowFeature(1);
    }
  }
  
  private void q()
  {
    if (this.n)
    {
      LinearLayout.LayoutParams localLayoutParams = new LinearLayout.LayoutParams(-1, (int)(50.0F * this.u.density));
      View localView = b();
      if (localView != null) {
        this.a.addView(localView, localLayoutParams);
      }
    }
  }
  
  private void r()
  {
    LinearLayout.LayoutParams localLayoutParams;
    View localView;
    if (this.o)
    {
      localLayoutParams = new LinearLayout.LayoutParams(-1, -1);
      localView = g();
      if (localView == null) {
        break label79;
      }
      this.b.setVisibility(0);
      this.b.addView(localView, localLayoutParams);
    }
    for (;;)
    {
      localView = c();
      if (localView == null) {
        break;
      }
      this.c.setVisibility(0);
      this.b.setVisibility(8);
      this.c.addView(localView, localLayoutParams);
      return;
      label79:
      this.b.setVisibility(8);
    }
    this.c.setVisibility(8);
  }
  
  protected abstract void a();
  
  protected void a(Bundle paramBundle) {}
  
  protected View b()
  {
    new c(this);
    return (RelativeLayout)getLayoutInflater().inflate(2130903041, null);
  }
  
  protected View c()
  {
    return null;
  }
  
  protected void f() {}
  
  protected View g()
  {
    return null;
  }
  
  public void h()
  {
    if (this.y != null) {
      this.y.dismiss();
    }
  }
  
  public void i()
  {
    if (this.z != null) {
      this.z.dismiss();
    }
  }
  
  public void j()
  {
    if (this.A != null) {
      this.A.dismiss();
    }
  }
  
  public void m()
  {
    l();
    finish();
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    this.B = new AlertDialog.Builder(this);
    d();
    l.a("BaseActivity.onCreate(): " + this);
    a();
    p();
    e();
    this.u = new DisplayMetrics();
    getWindowManager().getDefaultDisplay().getMetrics(this.u);
    v = this.u.widthPixels;
    w = this.u.heightPixels;
    x = this.u.density;
    o();
    q();
    r();
    a(paramBundle);
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
    l.a("BaseActivity.onDestroy(): " + this);
    n();
  }
  
  protected void onPause()
  {
    super.onPause();
    l.a("BaseActivity.onPause(): " + this);
  }
  
  protected void onResume()
  {
    super.onResume();
    if (this.p) {
      k();
    }
    l.a("BaseActivity.onResume(): " + this);
    if (!this.r) {
      f();
    }
  }
  
  protected void onStart()
  {
    super.onStart();
    l.a("BaseActivity.onStart(): " + this);
    this.q = true;
  }
  
  protected void onStop()
  {
    super.onStop();
    l.a("BaseActivity.onStop(): " + this);
    this.q = false;
    h();
    i();
    j();
  }
}
