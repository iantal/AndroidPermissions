package cn.banny.rp;

import java.io.DataInput;

public class RequestConnect
{
  private final String host;
  private final boolean keepAlive;
  private final boolean oobInline;
  private final int port;
  private final int receiveBufferSize;
  private final boolean reuseAddress;
  private final int sendBufferSize;
  private final boolean tcpNoDelay;
  private final int timeout;
  private final int trafficClass;
  
  private RequestConnect(String paramString, int paramInt1, int paramInt2, boolean paramBoolean1, boolean paramBoolean2, int paramInt3, boolean paramBoolean3, int paramInt4, boolean paramBoolean4, int paramInt5)
  {
    this.host = paramString;
    this.port = paramInt1;
    this.timeout = paramInt2;
    this.keepAlive = paramBoolean1;
    this.oobInline = paramBoolean2;
    this.receiveBufferSize = paramInt3;
    this.reuseAddress = paramBoolean3;
    this.sendBufferSize = paramInt4;
    this.tcpNoDelay = paramBoolean4;
    this.trafficClass = paramInt5;
  }
  
  public static RequestConnect parseRequestConnect(DataInput paramDataInput)
  {
    return new RequestConnect(paramDataInput.readUTF(), paramDataInput.readUnsignedShort(), paramDataInput.readInt(), paramDataInput.readBoolean(), paramDataInput.readBoolean(), paramDataInput.readInt(), paramDataInput.readBoolean(), paramDataInput.readInt(), paramDataInput.readBoolean(), paramDataInput.readUnsignedByte());
  }
  
  public String getHost()
  {
    return this.host;
  }
  
  public int getPort()
  {
    return this.port;
  }
  
  public int getReceiveBufferSize()
  {
    return this.receiveBufferSize;
  }
  
  public int getSendBufferSize()
  {
    return this.sendBufferSize;
  }
  
  public int getTimeout()
  {
    return this.timeout;
  }
  
  public int getTrafficClass()
  {
    return this.trafficClass;
  }
  
  public boolean isKeepAlive()
  {
    return this.keepAlive;
  }
  
  public boolean isOobInline()
  {
    return this.oobInline;
  }
  
  public boolean isReuseAddress()
  {
    return this.reuseAddress;
  }
  
  public boolean isTcpNoDelay()
  {
    return this.tcpNoDelay;
  }
}
