package cn.banny.rp.client;

import android.annotation.SuppressLint;
import cn.banny.rp.MessageDeliver;
import cn.banny.rp.RequestConnect;
import cn.banny.rp.ReverseProxy;
import cn.banny.rp.auth.AuthResult;
import cn.banny.rp.handler.ExtDataHandler;
import java.io.DataInput;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.Selector;
import java.nio.channels.SocketChannel;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public class ReverseProxyClient
  implements MessageDeliver, SocketSession, Runnable
{
  private static final int READ_BUFFER_SIZE = 65536;
  private int aliveTimeMillis;
  private AuthListener authListener;
  private AuthResult authResult;
  private boolean canStop;
  private long checkNetworkChangeTime;
  private long checkSessionTime;
  private ExtDataHandler dataHandler;
  private DataInputStream dis;
  private final String host;
  private long lastAliveTime;
  private int lastCode;
  private int networkDelay;
  private int packetSize = -1;
  private String password;
  private PipedInputStream pipedIn;
  private PipedOutputStream pipedOut;
  private final int port;
  private ByteBuffer readBuffer = ByteBuffer.allocate(5120);
  private Selector selector;
  private SocketChannel session;
  @SuppressLint({"UseSparseArrays"})
  private final Map socketMap = new HashMap();
  private String username;
  
  public ReverseProxyClient(String paramString, int paramInt)
  {
    this.host = paramString;
    this.port = paramInt;
  }
  
  /* Error */
  private void checkNetworkChange(long paramLong)
  {
    // Byte code:
    //   0: lload_1
    //   1: aload_0
    //   2: getfield 82	cn/banny/rp/client/ReverseProxyClient:checkNetworkChangeTime	J
    //   5: lsub
    //   6: ldc2_w 83
    //   9: lcmp
    //   10: ifge +4 -> 14
    //   13: return
    //   14: aload_0
    //   15: lload_1
    //   16: putfield 82	cn/banny/rp/client/ReverseProxyClient:checkNetworkChangeTime	J
    //   19: new 86	java/lang/StringBuffer
    //   22: dup
    //   23: invokespecial 87	java/lang/StringBuffer:<init>	()V
    //   26: astore 6
    //   28: invokestatic 93	java/net/NetworkInterface:getNetworkInterfaces	()Ljava/util/Enumeration;
    //   31: astore 7
    //   33: aload 7
    //   35: invokeinterface 99 1 0
    //   40: ifne +44 -> 84
    //   43: aload 6
    //   45: invokevirtual 103	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   48: invokevirtual 109	java/lang/String:hashCode	()I
    //   51: istore 4
    //   53: aload_0
    //   54: getfield 111	cn/banny/rp/client/ReverseProxyClient:lastCode	I
    //   57: ifeq +12 -> 69
    //   60: iload 4
    //   62: aload_0
    //   63: getfield 111	cn/banny/rp/client/ReverseProxyClient:lastCode	I
    //   66: if_icmpne +102 -> 168
    //   69: aload_0
    //   70: iload 4
    //   72: putfield 111	cn/banny/rp/client/ReverseProxyClient:lastCode	I
    //   75: return
    //   76: astore 6
    //   78: aload 6
    //   80: invokevirtual 114	java/net/SocketException:printStackTrace	()V
    //   83: return
    //   84: aload 7
    //   86: invokeinterface 118 1 0
    //   91: checkcast 89	java/net/NetworkInterface
    //   94: astore 8
    //   96: aload 8
    //   98: invokevirtual 121	java/net/NetworkInterface:isLoopback	()Z
    //   101: ifne -68 -> 33
    //   104: aload 8
    //   106: invokevirtual 124	java/net/NetworkInterface:isUp	()Z
    //   109: ifeq -76 -> 33
    //   112: aload 8
    //   114: invokevirtual 127	java/net/NetworkInterface:getInetAddresses	()Ljava/util/Enumeration;
    //   117: astore 8
    //   119: aload 8
    //   121: invokeinterface 99 1 0
    //   126: ifeq -93 -> 33
    //   129: aload 8
    //   131: invokeinterface 118 1 0
    //   136: checkcast 129	java/net/InetAddress
    //   139: astore 9
    //   141: aload 9
    //   143: invokevirtual 132	java/net/InetAddress:isLoopbackAddress	()Z
    //   146: ifne -27 -> 119
    //   149: aload 6
    //   151: aload 9
    //   153: invokevirtual 135	java/net/InetAddress:getHostAddress	()Ljava/lang/String;
    //   156: invokevirtual 139	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   159: bipush 44
    //   161: invokevirtual 142	java/lang/StringBuffer:append	(C)Ljava/lang/StringBuffer;
    //   164: pop
    //   165: goto -46 -> 119
    //   168: aload_0
    //   169: invokespecial 146	cn/banny/rp/client/ReverseProxyClient:getProxies	()[Lcn/banny/rp/client/SocketProxy;
    //   172: astore 6
    //   174: aload 6
    //   176: arraylength
    //   177: istore 5
    //   179: iconst_0
    //   180: istore_3
    //   181: iload_3
    //   182: iload 5
    //   184: if_icmplt +10 -> 194
    //   187: aload_0
    //   188: iload 4
    //   190: putfield 111	cn/banny/rp/client/ReverseProxyClient:lastCode	I
    //   193: return
    //   194: aload 6
    //   196: iload_3
    //   197: aaload
    //   198: invokevirtual 151	cn/banny/rp/client/SocketProxy:close	()V
    //   201: iload_3
    //   202: iconst_1
    //   203: iadd
    //   204: istore_3
    //   205: goto -24 -> 181
    //   208: astore 6
    //   210: aload_0
    //   211: iload 4
    //   213: putfield 111	cn/banny/rp/client/ReverseProxyClient:lastCode	I
    //   216: aload 6
    //   218: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	219	0	this	ReverseProxyClient
    //   0	219	1	paramLong	long
    //   180	25	3	i	int
    //   51	161	4	j	int
    //   177	8	5	k	int
    //   26	18	6	localStringBuffer	StringBuffer
    //   76	74	6	localSocketException	java.net.SocketException
    //   172	23	6	arrayOfSocketProxy	SocketProxy[]
    //   208	9	6	localObject1	Object
    //   31	54	7	localEnumeration	java.util.Enumeration
    //   94	36	8	localObject2	Object
    //   139	13	9	localInetAddress	java.net.InetAddress
    // Exception table:
    //   from	to	target	type
    //   19	33	76	java/net/SocketException
    //   33	69	76	java/net/SocketException
    //   69	75	76	java/net/SocketException
    //   84	119	76	java/net/SocketException
    //   119	165	76	java/net/SocketException
    //   187	193	76	java/net/SocketException
    //   210	219	76	java/net/SocketException
    //   168	179	208	finally
    //   194	201	208	finally
  }
  
  private void checkSelectionKeys(Iterator paramIterator)
  {
    for (;;)
    {
      if (!paramIterator.hasNext()) {
        return;
      }
      SelectionKey localSelectionKey = (SelectionKey)paramIterator.next();
      paramIterator.remove();
      SocketChannel localSocketChannel = (SocketChannel)localSelectionKey.channel();
      SocketSession localSocketSession = (SocketSession)localSelectionKey.attachment();
      try
      {
        if (localSelectionKey.isReadable()) {
          processRead(localSocketChannel, localSocketSession, localSelectionKey);
        }
        if (localSelectionKey.isConnectable()) {
          localSocketSession.processConnect(localSocketChannel);
        }
      }
      catch (Exception localException)
      {
        localSelectionKey.cancel();
        ReverseProxy.closeQuietly(localSocketChannel);
        localSocketSession.exceptionCaught(localSocketChannel, localException);
        localSocketSession.sessionClosed(localSocketChannel);
      }
    }
  }
  
  /* Error */
  private void checkSession(SocketChannel paramSocketChannel, long paramLong)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: lload_2
    //   4: aload_0
    //   5: getfield 213	cn/banny/rp/client/ReverseProxyClient:checkSessionTime	J
    //   8: lsub
    //   9: ldc2_w 214
    //   12: lcmp
    //   13: ifge +4 -> 17
    //   16: return
    //   17: aload_0
    //   18: lload_2
    //   19: putfield 213	cn/banny/rp/client/ReverseProxyClient:checkSessionTime	J
    //   22: aload_0
    //   23: getfield 217	cn/banny/rp/client/ReverseProxyClient:aliveTimeMillis	I
    //   26: ifle +32 -> 58
    //   29: aload_0
    //   30: getfield 219	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   33: lconst_0
    //   34: lcmp
    //   35: ifle +23 -> 58
    //   38: lload_2
    //   39: aload_0
    //   40: getfield 219	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   43: lsub
    //   44: aload_0
    //   45: getfield 217	cn/banny/rp/client/ReverseProxyClient:aliveTimeMillis	I
    //   48: i2l
    //   49: lcmp
    //   50: ifle +8 -> 58
    //   53: aload_0
    //   54: invokevirtual 222	cn/banny/rp/client/ReverseProxyClient:logout	()V
    //   57: return
    //   58: new 224	java/io/ByteArrayOutputStream
    //   61: dup
    //   62: invokespecial 225	java/io/ByteArrayOutputStream:<init>	()V
    //   65: astore 5
    //   67: new 227	java/io/DataOutputStream
    //   70: dup
    //   71: aload 5
    //   73: invokespecial 230	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   76: astore 4
    //   78: aload 4
    //   80: bipush 8
    //   82: invokevirtual 234	java/io/DataOutputStream:writeByte	(I)V
    //   85: aload 4
    //   87: aload_0
    //   88: getfield 236	cn/banny/rp/client/ReverseProxyClient:networkDelay	I
    //   91: invokevirtual 239	java/io/DataOutputStream:writeInt	(I)V
    //   94: aload 4
    //   96: lload_2
    //   97: invokevirtual 242	java/io/DataOutputStream:writeLong	(J)V
    //   100: aload_0
    //   101: aload 5
    //   103: invokevirtual 246	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   106: invokevirtual 250	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   109: aload 5
    //   111: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   114: aload 4
    //   116: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   119: return
    //   120: astore 6
    //   122: aconst_null
    //   123: astore 7
    //   125: aload 4
    //   127: astore 5
    //   129: aload 7
    //   131: astore 4
    //   133: aload 6
    //   135: invokevirtual 253	java/io/IOException:printStackTrace	()V
    //   138: aload_0
    //   139: aload_1
    //   140: invokespecial 256	cn/banny/rp/client/ReverseProxyClient:closeSession	(Ljava/nio/channels/SocketChannel;)V
    //   143: aload 5
    //   145: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   148: aload 4
    //   150: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   153: return
    //   154: astore_1
    //   155: aconst_null
    //   156: astore 4
    //   158: aconst_null
    //   159: astore 5
    //   161: aload 5
    //   163: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   166: aload 4
    //   168: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   171: aload_1
    //   172: athrow
    //   173: astore_1
    //   174: aconst_null
    //   175: astore 4
    //   177: goto -16 -> 161
    //   180: astore_1
    //   181: goto -20 -> 161
    //   184: astore_1
    //   185: goto -24 -> 161
    //   188: astore 6
    //   190: aconst_null
    //   191: astore 4
    //   193: goto -60 -> 133
    //   196: astore 6
    //   198: goto -65 -> 133
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	201	0	this	ReverseProxyClient
    //   0	201	1	paramSocketChannel	SocketChannel
    //   0	201	2	paramLong	long
    //   1	191	4	localObject1	Object
    //   65	97	5	localObject2	Object
    //   120	14	6	localIOException1	IOException
    //   188	1	6	localIOException2	IOException
    //   196	1	6	localIOException3	IOException
    //   123	7	7	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   58	67	120	java/io/IOException
    //   58	67	154	finally
    //   67	78	173	finally
    //   78	109	180	finally
    //   133	143	184	finally
    //   67	78	188	java/io/IOException
    //   78	109	196	java/io/IOException
  }
  
  private void closeSession(SocketChannel paramSocketChannel)
  {
    SelectionKey localSelectionKey = paramSocketChannel.keyFor(this.selector);
    if (localSelectionKey != null) {
      localSelectionKey.cancel();
    }
    ReverseProxy.closeQuietly(paramSocketChannel);
    sessionClosed(paramSocketChannel);
  }
  
  private void connectReverseProxyServer()
  {
    SocketChannel localSocketChannel = SocketChannel.open();
    localSocketChannel.configureBlocking(true);
    localSocketChannel.socket().setKeepAlive(true);
    localSocketChannel.connect(new InetSocketAddress(this.host, this.port));
    localSocketChannel.configureBlocking(false);
    localSocketChannel.register(this.selector, 1).attach(this);
    sessionOpened(localSocketChannel);
  }
  
  private SocketProxy[] getProxies()
  {
    synchronized (this.socketMap)
    {
      SocketProxy[] arrayOfSocketProxy = (SocketProxy[])this.socketMap.values().toArray(new SocketProxy[0]);
      return arrayOfSocketProxy;
    }
  }
  
  /* Error */
  private void messageReceived(SocketChannel paramSocketChannel, Object paramObject)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 7
    //   3: aload_2
    //   4: checkcast 319	[B
    //   7: astore_2
    //   8: new 321	java/io/ByteArrayInputStream
    //   11: dup
    //   12: aload_2
    //   13: invokespecial 323	java/io/ByteArrayInputStream:<init>	([B)V
    //   16: astore 6
    //   18: new 325	java/io/DataInputStream
    //   21: dup
    //   22: aload 6
    //   24: invokespecial 328	java/io/DataInputStream:<init>	(Ljava/io/InputStream;)V
    //   27: astore 7
    //   29: invokestatic 334	java/lang/System:currentTimeMillis	()J
    //   32: lstore 4
    //   34: aload 7
    //   36: invokevirtual 337	java/io/DataInputStream:readUnsignedByte	()I
    //   39: istore_3
    //   40: iload_3
    //   41: tableswitch	default:+51->92, 1:+62->103, 2:+108->149, 3:+143->184, 4:+51->92, 5:+51->92, 6:+51->92, 7:+163->204, 8:+209->250, 9:+226->267
    //   92: aload 6
    //   94: invokestatic 339	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/InputStream;)V
    //   97: aload 7
    //   99: invokestatic 339	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/InputStream;)V
    //   102: return
    //   103: aload_0
    //   104: lload 4
    //   106: putfield 219	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   109: aload_0
    //   110: aload 7
    //   112: invokevirtual 342	java/io/DataInputStream:readInt	()I
    //   115: aload 7
    //   117: invokespecial 346	cn/banny/rp/client/ReverseProxyClient:parseConnect	(ILjava/io/DataInputStream;)V
    //   120: goto -28 -> 92
    //   123: astore 8
    //   125: aload 6
    //   127: astore_2
    //   128: aload 7
    //   130: astore_1
    //   131: aload 8
    //   133: astore 6
    //   135: aload 6
    //   137: invokevirtual 253	java/io/IOException:printStackTrace	()V
    //   140: aload_2
    //   141: invokestatic 339	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/InputStream;)V
    //   144: aload_1
    //   145: invokestatic 339	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/InputStream;)V
    //   148: return
    //   149: aload_0
    //   150: lload 4
    //   152: putfield 219	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   155: aload_0
    //   156: aload 7
    //   158: invokevirtual 342	java/io/DataInputStream:readInt	()I
    //   161: aload 7
    //   163: invokespecial 350	cn/banny/rp/client/ReverseProxyClient:parseWriteData	(ILjava/io/DataInput;)V
    //   166: goto -74 -> 92
    //   169: astore_2
    //   170: aload 7
    //   172: astore_1
    //   173: aload 6
    //   175: invokestatic 339	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/InputStream;)V
    //   178: aload_1
    //   179: invokestatic 339	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/InputStream;)V
    //   182: aload_2
    //   183: athrow
    //   184: aload_0
    //   185: lload 4
    //   187: putfield 219	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   190: aload_0
    //   191: aload 7
    //   193: invokevirtual 342	java/io/DataInputStream:readInt	()I
    //   196: aload 7
    //   198: invokespecial 353	cn/banny/rp/client/ReverseProxyClient:parseClose	(ILjava/io/DataInput;)V
    //   201: goto -109 -> 92
    //   204: aload_0
    //   205: lload 4
    //   207: putfield 219	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   210: aload_0
    //   211: aload 7
    //   213: invokestatic 359	cn/banny/rp/auth/AuthResult:readAuthResult	(Ljava/io/DataInput;)Lcn/banny/rp/auth/AuthResult;
    //   216: putfield 361	cn/banny/rp/client/ReverseProxyClient:authResult	Lcn/banny/rp/auth/AuthResult;
    //   219: aload_0
    //   220: getfield 363	cn/banny/rp/client/ReverseProxyClient:authListener	Lcn/banny/rp/client/AuthListener;
    //   223: ifnull -131 -> 92
    //   226: aload_0
    //   227: getfield 363	cn/banny/rp/client/ReverseProxyClient:authListener	Lcn/banny/rp/client/AuthListener;
    //   230: aload_0
    //   231: getfield 361	cn/banny/rp/client/ReverseProxyClient:authResult	Lcn/banny/rp/auth/AuthResult;
    //   234: invokeinterface 369 2 0
    //   239: ifeq -147 -> 92
    //   242: aload_0
    //   243: aload_1
    //   244: invokespecial 256	cn/banny/rp/client/ReverseProxyClient:closeSession	(Ljava/nio/channels/SocketChannel;)V
    //   247: goto -155 -> 92
    //   250: aload_0
    //   251: invokestatic 334	java/lang/System:currentTimeMillis	()J
    //   254: aload 7
    //   256: invokevirtual 372	java/io/DataInputStream:readLong	()J
    //   259: lsub
    //   260: l2i
    //   261: putfield 236	cn/banny/rp/client/ReverseProxyClient:networkDelay	I
    //   264: goto -172 -> 92
    //   267: aload_0
    //   268: lload 4
    //   270: putfield 219	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   273: aload_0
    //   274: getfield 374	cn/banny/rp/client/ReverseProxyClient:dataHandler	Lcn/banny/rp/handler/ExtDataHandler;
    //   277: ifnull -185 -> 92
    //   280: aload 7
    //   282: invokevirtual 342	java/io/DataInputStream:readInt	()I
    //   285: newarray byte
    //   287: astore_1
    //   288: aload 7
    //   290: aload_1
    //   291: invokevirtual 377	java/io/DataInputStream:readFully	([B)V
    //   294: aload_0
    //   295: getfield 374	cn/banny/rp/client/ReverseProxyClient:dataHandler	Lcn/banny/rp/handler/ExtDataHandler;
    //   298: aload_1
    //   299: aload_0
    //   300: invokeinterface 383 3 0
    //   305: goto -213 -> 92
    //   308: astore_2
    //   309: aconst_null
    //   310: astore_1
    //   311: aconst_null
    //   312: astore 6
    //   314: goto -141 -> 173
    //   317: astore_2
    //   318: aconst_null
    //   319: astore_1
    //   320: goto -147 -> 173
    //   323: astore 7
    //   325: aload_2
    //   326: astore 6
    //   328: aload 7
    //   330: astore_2
    //   331: goto -158 -> 173
    //   334: astore 6
    //   336: aconst_null
    //   337: astore_1
    //   338: aload 7
    //   340: astore_2
    //   341: goto -206 -> 135
    //   344: astore 7
    //   346: aconst_null
    //   347: astore_1
    //   348: aload 6
    //   350: astore_2
    //   351: aload 7
    //   353: astore 6
    //   355: goto -220 -> 135
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	358	0	this	ReverseProxyClient
    //   0	358	1	paramSocketChannel	SocketChannel
    //   0	358	2	paramObject	Object
    //   39	2	3	i	int
    //   32	237	4	l	long
    //   16	311	6	localObject1	Object
    //   334	15	6	localIOException1	IOException
    //   353	1	6	localIOException2	IOException
    //   1	288	7	localDataInputStream	DataInputStream
    //   323	16	7	localObject2	Object
    //   344	8	7	localIOException3	IOException
    //   123	9	8	localIOException4	IOException
    // Exception table:
    //   from	to	target	type
    //   29	40	123	java/io/IOException
    //   103	120	123	java/io/IOException
    //   149	166	123	java/io/IOException
    //   184	201	123	java/io/IOException
    //   204	247	123	java/io/IOException
    //   250	264	123	java/io/IOException
    //   267	305	123	java/io/IOException
    //   29	40	169	finally
    //   103	120	169	finally
    //   149	166	169	finally
    //   184	201	169	finally
    //   204	247	169	finally
    //   250	264	169	finally
    //   267	305	169	finally
    //   8	18	308	finally
    //   18	29	317	finally
    //   135	140	323	finally
    //   8	18	334	java/io/IOException
    //   18	29	344	java/io/IOException
  }
  
  private void messageSent(SocketChannel paramSocketChannel, Object paramObject)
  {
    this.checkSessionTime = System.currentTimeMillis();
  }
  
  /* Error */
  private void parseClose(int paramInt, DataInput paramDataInput)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aload_0
    //   4: getfield 71	cn/banny/rp/client/ReverseProxyClient:socketMap	Ljava/util/Map;
    //   7: astore_2
    //   8: aload_2
    //   9: monitorenter
    //   10: aload_0
    //   11: getfield 71	cn/banny/rp/client/ReverseProxyClient:socketMap	Ljava/util/Map;
    //   14: iload_1
    //   15: invokestatic 390	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   18: invokeinterface 393 2 0
    //   23: checkcast 148	cn/banny/rp/client/SocketProxy
    //   26: astore 5
    //   28: aload_2
    //   29: monitorexit
    //   30: aload 5
    //   32: ifnonnull +19 -> 51
    //   35: new 395	java/io/EOFException
    //   38: dup
    //   39: ldc_w 396
    //   42: invokespecial 399	java/io/EOFException:<init>	(Ljava/lang/String;)V
    //   45: athrow
    //   46: astore_3
    //   47: aload_2
    //   48: monitorexit
    //   49: aload_3
    //   50: athrow
    //   51: aload 5
    //   53: invokevirtual 151	cn/banny/rp/client/SocketProxy:close	()V
    //   56: new 224	java/io/ByteArrayOutputStream
    //   59: dup
    //   60: invokespecial 225	java/io/ByteArrayOutputStream:<init>	()V
    //   63: astore_2
    //   64: new 227	java/io/DataOutputStream
    //   67: dup
    //   68: aload_2
    //   69: invokespecial 230	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   72: astore_3
    //   73: aload_3
    //   74: iconst_3
    //   75: invokevirtual 234	java/io/DataOutputStream:writeByte	(I)V
    //   78: aload_3
    //   79: aload 5
    //   81: invokevirtual 402	cn/banny/rp/client/SocketProxy:getSocket	()I
    //   84: invokevirtual 239	java/io/DataOutputStream:writeInt	(I)V
    //   87: aload_0
    //   88: aload_2
    //   89: invokevirtual 246	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   92: invokevirtual 250	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   95: aload_2
    //   96: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   99: aload_3
    //   100: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   103: return
    //   104: astore_2
    //   105: aconst_null
    //   106: astore_3
    //   107: aload 4
    //   109: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   112: aload_3
    //   113: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   116: aload_2
    //   117: athrow
    //   118: astore 5
    //   120: aconst_null
    //   121: astore_3
    //   122: aload_2
    //   123: astore 4
    //   125: aload 5
    //   127: astore_2
    //   128: goto -21 -> 107
    //   131: astore 5
    //   133: aload_2
    //   134: astore 4
    //   136: aload 5
    //   138: astore_2
    //   139: goto -32 -> 107
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	142	0	this	ReverseProxyClient
    //   0	142	1	paramInt	int
    //   0	142	2	paramDataInput	DataInput
    //   46	4	3	localObject1	Object
    //   72	50	3	localDataOutputStream	java.io.DataOutputStream
    //   1	134	4	localObject2	Object
    //   26	54	5	localSocketProxy	SocketProxy
    //   118	8	5	localObject3	Object
    //   131	6	5	localObject4	Object
    // Exception table:
    //   from	to	target	type
    //   10	30	46	finally
    //   47	49	46	finally
    //   51	64	104	finally
    //   64	73	118	finally
    //   73	95	131	finally
  }
  
  private void parseConnect(int paramInt, DataInputStream arg2)
  {
    try
    {
      SocketProxy localSocketProxy = new SocketProxy(paramInt, RequestConnect.parseRequestConnect(???), this, this.selector);
      localSocketProxy.connect();
      synchronized (this.socketMap)
      {
        this.socketMap.put(Integer.valueOf(paramInt), localSocketProxy);
        return;
      }
      return;
    }
    catch (IOException ???)
    {
      ???.printStackTrace();
      sendException(paramInt, ???);
    }
  }
  
  private void parseWriteData(int paramInt, DataInput paramDataInput)
  {
    SocketProxy localSocketProxy;
    synchronized (this.socketMap)
    {
      localSocketProxy = (SocketProxy)this.socketMap.get(Integer.valueOf(paramInt));
      if (localSocketProxy == null) {
        throw new EOFException("parseWriteData");
      }
    }
    ??? = new byte[paramDataInput.readInt()];
    paramDataInput.readFully((byte[])???);
    localSocketProxy.writeData((byte[])???);
  }
  
  private void processRead(SocketChannel paramSocketChannel, SocketSession paramSocketSession, SelectionKey paramSelectionKey)
  {
    for (;;)
    {
      this.readBuffer.clear();
      int i = paramSocketChannel.read(this.readBuffer);
      if (i == -1) {
        throw new EOFException();
      }
      if (i < 1) {
        return;
      }
      this.readBuffer.flip();
      paramSelectionKey = new byte[i];
      this.readBuffer.get(paramSelectionKey);
      paramSocketSession.pushData(paramSocketChannel, paramSelectionKey);
    }
  }
  
  private void receivedPacket(SocketChannel paramSocketChannel, byte[] paramArrayOfByte)
  {
    if (ReverseProxy.debug) {
      ReverseProxy.inspect(paramArrayOfByte, "receivedPacket");
    }
    messageReceived(paramSocketChannel, paramArrayOfByte);
  }
  
  /* Error */
  private void requestAuth()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_3
    //   2: new 224	java/io/ByteArrayOutputStream
    //   5: dup
    //   6: invokespecial 225	java/io/ByteArrayOutputStream:<init>	()V
    //   9: astore_1
    //   10: new 227	java/io/DataOutputStream
    //   13: dup
    //   14: aload_1
    //   15: invokespecial 230	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   18: astore_2
    //   19: aload_2
    //   20: bipush 7
    //   22: invokevirtual 234	java/io/DataOutputStream:writeByte	(I)V
    //   25: aload_2
    //   26: aload_0
    //   27: getfield 462	cn/banny/rp/client/ReverseProxyClient:username	Ljava/lang/String;
    //   30: invokevirtual 465	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   33: aload_2
    //   34: aload_0
    //   35: getfield 467	cn/banny/rp/client/ReverseProxyClient:password	Ljava/lang/String;
    //   38: invokevirtual 465	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   41: aload_0
    //   42: aload_1
    //   43: invokevirtual 246	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   46: invokevirtual 250	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   49: aload_1
    //   50: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   53: aload_2
    //   54: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   57: return
    //   58: astore_1
    //   59: aconst_null
    //   60: astore_2
    //   61: aload_3
    //   62: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   65: aload_2
    //   66: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   69: aload_1
    //   70: athrow
    //   71: astore 4
    //   73: aconst_null
    //   74: astore_2
    //   75: aload_1
    //   76: astore_3
    //   77: aload 4
    //   79: astore_1
    //   80: goto -19 -> 61
    //   83: astore 4
    //   85: aload_1
    //   86: astore_3
    //   87: aload 4
    //   89: astore_1
    //   90: goto -29 -> 61
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	93	0	this	ReverseProxyClient
    //   9	41	1	localByteArrayOutputStream	java.io.ByteArrayOutputStream
    //   58	18	1	localObject1	Object
    //   79	11	1	localObject2	Object
    //   18	57	2	localDataOutputStream	java.io.DataOutputStream
    //   1	86	3	localObject3	Object
    //   71	7	4	localObject4	Object
    //   83	5	4	localObject5	Object
    // Exception table:
    //   from	to	target	type
    //   2	10	58	finally
    //   10	19	71	finally
    //   19	49	83	finally
  }
  
  private void sessionIdle(SocketChannel paramSocketChannel)
  {
    closeSession(paramSocketChannel);
  }
  
  /* Error */
  public void deliverMessage(byte[] paramArrayOfByte)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_3
    //   2: new 224	java/io/ByteArrayOutputStream
    //   5: dup
    //   6: invokespecial 225	java/io/ByteArrayOutputStream:<init>	()V
    //   9: astore_2
    //   10: new 227	java/io/DataOutputStream
    //   13: dup
    //   14: aload_2
    //   15: invokespecial 230	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   18: astore 4
    //   20: aload 4
    //   22: bipush 9
    //   24: invokevirtual 234	java/io/DataOutputStream:writeByte	(I)V
    //   27: aload 4
    //   29: aload_1
    //   30: arraylength
    //   31: invokevirtual 239	java/io/DataOutputStream:writeInt	(I)V
    //   34: aload 4
    //   36: aload_1
    //   37: invokevirtual 472	java/io/DataOutputStream:write	([B)V
    //   40: aload_0
    //   41: aload_2
    //   42: invokevirtual 246	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   45: invokevirtual 250	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   48: aload_2
    //   49: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   52: aload 4
    //   54: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   57: return
    //   58: astore_1
    //   59: aconst_null
    //   60: astore_2
    //   61: aload_3
    //   62: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   65: aload_2
    //   66: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   69: aload_1
    //   70: athrow
    //   71: astore_1
    //   72: aconst_null
    //   73: astore 4
    //   75: aload_2
    //   76: astore_3
    //   77: aload 4
    //   79: astore_2
    //   80: goto -19 -> 61
    //   83: astore_1
    //   84: aload_2
    //   85: astore_3
    //   86: aload 4
    //   88: astore_2
    //   89: goto -28 -> 61
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	92	0	this	ReverseProxyClient
    //   0	92	1	paramArrayOfByte	byte[]
    //   9	80	2	localObject1	Object
    //   1	85	3	localObject2	Object
    //   18	69	4	localDataOutputStream	java.io.DataOutputStream
    // Exception table:
    //   from	to	target	type
    //   2	10	58	finally
    //   10	20	71	finally
    //   20	48	83	finally
  }
  
  public void destroy()
  {
    this.canStop = true;
    if (this.selector != null)
    {
      ReverseProxy.closeQuietly(this.selector);
      this.selector = null;
    }
    if (this.session != null) {
      closeSession(this.session);
    }
  }
  
  public void exceptionCaught(SocketChannel paramSocketChannel, Throwable paramThrowable)
  {
    paramThrowable.printStackTrace();
  }
  
  public String getAuthUser()
  {
    return this.username;
  }
  
  public void initialize()
  {
    this.selector = Selector.open();
    this.canStop = false;
    new Thread(this, getClass().getSimpleName()).start();
  }
  
  public boolean isAuthOK()
  {
    return (this.username != null) && (this.password != null) && (this.authResult != null) && (this.authResult.getStatus() == 0);
  }
  
  public boolean isConnected()
  {
    return this.session != null;
  }
  
  public void login(String paramString1, String paramString2)
  {
    login(paramString1, paramString2, 0);
  }
  
  public void login(String paramString1, String paramString2, int paramInt)
  {
    this.authResult = null;
    this.username = paramString1;
    this.password = paramString2;
    this.aliveTimeMillis = paramInt;
    connectReverseProxyServer();
  }
  
  public void logout()
  {
    this.username = null;
    this.password = null;
    if (this.session != null) {
      closeSession(this.session);
    }
  }
  
  /* Error */
  void notifySessionClosed(int paramInt)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aload_0
    //   4: getfield 71	cn/banny/rp/client/ReverseProxyClient:socketMap	Ljava/util/Map;
    //   7: astore_2
    //   8: aload_2
    //   9: monitorenter
    //   10: aload_0
    //   11: getfield 71	cn/banny/rp/client/ReverseProxyClient:socketMap	Ljava/util/Map;
    //   14: iload_1
    //   15: invokestatic 390	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   18: invokeinterface 522 2 0
    //   23: pop
    //   24: aload_2
    //   25: monitorexit
    //   26: new 224	java/io/ByteArrayOutputStream
    //   29: dup
    //   30: invokespecial 225	java/io/ByteArrayOutputStream:<init>	()V
    //   33: astore_2
    //   34: new 227	java/io/DataOutputStream
    //   37: dup
    //   38: aload_2
    //   39: invokespecial 230	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   42: astore_3
    //   43: aload_3
    //   44: iconst_5
    //   45: invokevirtual 234	java/io/DataOutputStream:writeByte	(I)V
    //   48: aload_3
    //   49: iload_1
    //   50: invokevirtual 239	java/io/DataOutputStream:writeInt	(I)V
    //   53: aload_0
    //   54: aload_2
    //   55: invokevirtual 246	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   58: invokevirtual 250	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   61: aload_2
    //   62: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   65: aload_3
    //   66: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   69: return
    //   70: astore_3
    //   71: aload_2
    //   72: monitorexit
    //   73: aload_3
    //   74: athrow
    //   75: astore_2
    //   76: aconst_null
    //   77: astore_3
    //   78: aload 4
    //   80: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   83: aload_3
    //   84: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   87: aload_2
    //   88: athrow
    //   89: astore 5
    //   91: aconst_null
    //   92: astore_3
    //   93: aload_2
    //   94: astore 4
    //   96: aload 5
    //   98: astore_2
    //   99: goto -21 -> 78
    //   102: astore 5
    //   104: aload_2
    //   105: astore 4
    //   107: aload 5
    //   109: astore_2
    //   110: goto -32 -> 78
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	113	0	this	ReverseProxyClient
    //   0	113	1	paramInt	int
    //   7	65	2	localObject1	Object
    //   75	19	2	localObject2	Object
    //   98	12	2	localObject3	Object
    //   42	24	3	localDataOutputStream	java.io.DataOutputStream
    //   70	4	3	localObject4	Object
    //   77	16	3	localOutputStream	java.io.OutputStream
    //   1	105	4	localObject5	Object
    //   89	8	5	localObject6	Object
    //   102	6	5	localObject7	Object
    // Exception table:
    //   from	to	target	type
    //   10	26	70	finally
    //   71	73	70	finally
    //   3	10	75	finally
    //   26	34	75	finally
    //   73	75	75	finally
    //   34	43	89	finally
    //   43	61	102	finally
  }
  
  public void processConnect(SocketChannel paramSocketChannel)
  {
    throw new UnsupportedOperationException("processConnect");
  }
  
  public void pushData(SocketChannel paramSocketChannel, byte[] paramArrayOfByte)
  {
    if (this.pipedIn.available() + paramArrayOfByte.length > 65536) {
      throw new IOException("pushData buffer overflow");
    }
    this.pipedOut.write(paramArrayOfByte);
    for (;;)
    {
      if (this.packetSize == -1) {
        if (this.dis.available() >= 4) {}
      }
      while (this.dis.available() < this.packetSize)
      {
        return;
        this.packetSize = this.dis.readInt();
      }
      paramArrayOfByte = new byte[this.packetSize];
      this.dis.readFully(paramArrayOfByte);
      this.packetSize = -1;
      receivedPacket(paramSocketChannel, paramArrayOfByte);
    }
  }
  
  public void run()
  {
    for (;;)
    {
      if (this.canStop) {
        return;
      }
      SocketChannel localSocketChannel;
      try
      {
        checkNetworkChange(System.currentTimeMillis());
        localSocketChannel = this.session;
        if (localSocketChannel != null) {
          break label58;
        }
        if (!isAuthOK()) {
          continue;
        }
        connectReverseProxyServer();
      }
      catch (Throwable localThrowable1)
      {
        localThrowable1.printStackTrace();
        try
        {
          Thread.sleep(1000L);
        }
        catch (Throwable localThrowable2) {}
      }
      continue;
      label58:
      Set localSet;
      if (this.selector.select(500L) > 0) {
        localSet = this.selector.selectedKeys();
      }
      try
      {
        checkSelectionKeys(localSet.iterator());
        localSet.clear();
        long l = System.currentTimeMillis();
        checkSession(localSocketChannel, l);
        if ((this.checkSessionTime <= 0L) || (l - this.checkSessionTime <= 15000L)) {
          continue;
        }
        sessionIdle(localSocketChannel);
      }
      finally
      {
        localSet.clear();
      }
    }
  }
  
  /* Error */
  void sendException(int paramInt, Throwable paramThrowable)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_3
    //   2: new 224	java/io/ByteArrayOutputStream
    //   5: dup
    //   6: invokespecial 225	java/io/ByteArrayOutputStream:<init>	()V
    //   9: astore 4
    //   11: new 227	java/io/DataOutputStream
    //   14: dup
    //   15: aload 4
    //   17: invokespecial 230	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   20: astore 5
    //   22: aload 5
    //   24: bipush 6
    //   26: invokevirtual 234	java/io/DataOutputStream:writeByte	(I)V
    //   29: aload 5
    //   31: iload_1
    //   32: invokevirtual 239	java/io/DataOutputStream:writeInt	(I)V
    //   35: aload_2
    //   36: invokevirtual 585	java/lang/Throwable:getMessage	()Ljava/lang/String;
    //   39: astore_3
    //   40: aload_3
    //   41: ifnull +29 -> 70
    //   44: aload 5
    //   46: aload_3
    //   47: invokevirtual 465	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   50: aload_0
    //   51: aload 4
    //   53: invokevirtual 246	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   56: invokevirtual 250	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   59: aload 4
    //   61: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   64: aload 5
    //   66: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   69: return
    //   70: aload 5
    //   72: aload_2
    //   73: invokevirtual 496	java/lang/Object:getClass	()Ljava/lang/Class;
    //   76: invokevirtual 588	java/lang/Class:getCanonicalName	()Ljava/lang/String;
    //   79: invokevirtual 465	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   82: goto -32 -> 50
    //   85: astore 6
    //   87: aload 4
    //   89: astore_3
    //   90: aload 5
    //   92: astore_2
    //   93: aload 6
    //   95: astore 4
    //   97: aload 4
    //   99: invokevirtual 253	java/io/IOException:printStackTrace	()V
    //   102: aload_3
    //   103: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   106: aload_2
    //   107: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   110: return
    //   111: astore_3
    //   112: aconst_null
    //   113: astore_2
    //   114: aconst_null
    //   115: astore 4
    //   117: aload 4
    //   119: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   122: aload_2
    //   123: invokestatic 252	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   126: aload_3
    //   127: athrow
    //   128: astore_3
    //   129: aconst_null
    //   130: astore_2
    //   131: goto -14 -> 117
    //   134: astore_3
    //   135: aload 5
    //   137: astore_2
    //   138: goto -21 -> 117
    //   141: astore 5
    //   143: aload_3
    //   144: astore 4
    //   146: aload 5
    //   148: astore_3
    //   149: goto -32 -> 117
    //   152: astore 4
    //   154: aconst_null
    //   155: astore_2
    //   156: goto -59 -> 97
    //   159: astore 5
    //   161: aconst_null
    //   162: astore_2
    //   163: aload 4
    //   165: astore_3
    //   166: aload 5
    //   168: astore 4
    //   170: goto -73 -> 97
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	173	0	this	ReverseProxyClient
    //   0	173	1	paramInt	int
    //   0	173	2	paramThrowable	Throwable
    //   1	102	3	localObject1	Object
    //   111	16	3	localObject2	Object
    //   128	1	3	localObject3	Object
    //   134	10	3	localObject4	Object
    //   148	18	3	localObject5	Object
    //   9	136	4	localObject6	Object
    //   152	12	4	localIOException1	IOException
    //   168	1	4	localObject7	Object
    //   20	116	5	localDataOutputStream	java.io.DataOutputStream
    //   141	6	5	localObject8	Object
    //   159	8	5	localIOException2	IOException
    //   85	9	6	localIOException3	IOException
    // Exception table:
    //   from	to	target	type
    //   22	40	85	java/io/IOException
    //   44	50	85	java/io/IOException
    //   50	59	85	java/io/IOException
    //   70	82	85	java/io/IOException
    //   2	11	111	finally
    //   11	22	128	finally
    //   22	40	134	finally
    //   44	50	134	finally
    //   50	59	134	finally
    //   70	82	134	finally
    //   97	102	141	finally
    //   2	11	152	java/io/IOException
    //   11	22	159	java/io/IOException
  }
  
  void sendResponse(byte[] paramArrayOfByte)
  {
    if (this.session == null) {
      return;
    }
    if (ReverseProxy.debug) {
      ReverseProxy.inspect(paramArrayOfByte, "encode");
    }
    ByteBuffer localByteBuffer = ByteBuffer.allocate(paramArrayOfByte.length + 4);
    localByteBuffer.putInt(paramArrayOfByte.length);
    localByteBuffer.put(paramArrayOfByte);
    localByteBuffer.flip();
    do
    {
      if (this.session.write(localByteBuffer) < 1) {
        Thread.yield();
      }
    } while (localByteBuffer.hasRemaining());
    messageSent(this.session, paramArrayOfByte);
  }
  
  public void sessionClosed(SocketChannel paramSocketChannel)
  {
    int j;
    int i;
    if (this.session == paramSocketChannel)
    {
      SelectionKey localSelectionKey = paramSocketChannel.keyFor(this.selector);
      if (localSelectionKey != null) {
        localSelectionKey.cancel();
      }
      ReverseProxy.closeQuietly(paramSocketChannel);
      ReverseProxy.closeQuietly(this.dis);
      ReverseProxy.closeQuietly(this.pipedOut);
      ReverseProxy.closeQuietly(this.pipedIn);
      this.session = null;
      paramSocketChannel = getProxies();
      j = paramSocketChannel.length;
      i = 0;
    }
    for (;;)
    {
      if (i >= j)
      {
        if (this.authListener != null) {
          this.authListener.onDisconnect(this.authResult);
        }
        return;
      }
      paramSocketChannel[i].close();
      i += 1;
    }
  }
  
  public void sessionOpened(SocketChannel paramSocketChannel)
  {
    if (this.session == null)
    {
      this.packetSize = -1;
      this.pipedIn = new PipedInputStream(65536);
      this.pipedOut = new PipedOutputStream(this.pipedIn);
      this.dis = new DataInputStream(this.pipedIn);
      this.session = paramSocketChannel;
      this.checkSessionTime = System.currentTimeMillis();
      this.lastAliveTime = this.checkSessionTime;
      requestAuth();
    }
  }
  
  public void setAuthListener(AuthListener paramAuthListener)
  {
    this.authListener = paramAuthListener;
  }
  
  public void setDataHandler(ExtDataHandler paramExtDataHandler)
  {
    this.dataHandler = paramExtDataHandler;
  }
}
