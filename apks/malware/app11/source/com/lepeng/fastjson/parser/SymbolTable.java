package com.lepeng.fastjson.parser;

public class SymbolTable
{
  public static final int DEFAULT_TABLE_SIZE = 256;
  public static final int MAX_BUCKET_LENTH = 8;
  public static final int MAX_SIZE = 1024;
  private final SymbolTable.Entry[] jdField_a_of_type_ArrayOfComLepengFastjsonParserSymbolTable$Entry;
  private final String[] jdField_a_of_type_ArrayOfJavaLangString;
  private final char[][] jdField_a_of_type_Array2dOfChar;
  private final int k;
  private int size = 0;
  
  public SymbolTable()
  {
    this(256);
    addSymbol("$ref", 0, 4, "$ref".hashCode());
    addSymbol("@type", 0, 4, "$type".hashCode());
  }
  
  public SymbolTable(int paramInt)
  {
    this.k = (paramInt - 1);
    this.jdField_a_of_type_ArrayOfComLepengFastjsonParserSymbolTable$Entry = new SymbolTable.Entry[paramInt];
    this.jdField_a_of_type_ArrayOfJavaLangString = new String[paramInt];
    this.jdField_a_of_type_Array2dOfChar = new char[paramInt][];
  }
  
  public static final int hash(char[] paramArrayOfChar, int paramInt1, int paramInt2)
  {
    int j = 0;
    int m = 0;
    int i = paramInt1;
    for (paramInt1 = m;; paramInt1 = paramInt1 * 31 + m)
    {
      if (j >= paramInt2) {
        return paramInt1;
      }
      m = paramArrayOfChar[i];
      j += 1;
      i += 1;
    }
  }
  
  public String addSymbol(String paramString, int paramInt1, int paramInt2, int paramInt3)
  {
    int n = paramInt3 & this.k;
    Object localObject = this.jdField_a_of_type_ArrayOfJavaLangString[n];
    char[] arrayOfChar;
    int i;
    if (localObject != null)
    {
      if (((String)localObject).length() == paramInt2)
      {
        arrayOfChar = this.jdField_a_of_type_Array2dOfChar[n];
        i = 0;
        for (;;)
        {
          if (i >= paramInt2) {}
          for (i = 1;; i = 0)
          {
            if (i == 0) {
              break label323;
            }
            return localObject;
            if (paramString.charAt(paramInt1 + i) == arrayOfChar[i]) {
              break;
            }
          }
          i += 1;
        }
      }
      i = 0;
    }
    for (;;)
    {
      localObject = this.jdField_a_of_type_ArrayOfComLepengFastjsonParserSymbolTable$Entry[n];
      int j = 0;
      if (localObject == null)
      {
        if (j >= 8) {
          return paramString.substring(paramInt1, paramInt1 + paramInt2);
        }
      }
      else
      {
        arrayOfChar = ((SymbolTable.Entry)localObject).characters;
        int m = j;
        if (paramInt2 == arrayOfChar.length)
        {
          m = j;
          if (paramInt3 == ((SymbolTable.Entry)localObject).hashCode) {
            m = 0;
          }
        }
        for (;;)
        {
          if (m >= paramInt2) {}
          for (m = 1;; m = 0)
          {
            if (m != 0) {
              break label228;
            }
            m = j + 1;
            localObject = ((SymbolTable.Entry)localObject).next;
            j = m;
            break;
            if (paramString.charAt(paramInt1 + m) == arrayOfChar[m]) {
              break label219;
            }
          }
          label219:
          m += 1;
        }
        label228:
        return ((SymbolTable.Entry)localObject).symbol;
      }
      if (this.size >= 1024) {
        return paramString.substring(paramInt1, paramInt1 + paramInt2);
      }
      paramString = new SymbolTable.Entry(paramString, paramInt1, paramInt2, paramInt3, this.jdField_a_of_type_ArrayOfComLepengFastjsonParserSymbolTable$Entry[n]);
      this.jdField_a_of_type_ArrayOfComLepengFastjsonParserSymbolTable$Entry[n] = paramString;
      if (i != 0)
      {
        this.jdField_a_of_type_ArrayOfJavaLangString[n] = paramString.symbol;
        this.jdField_a_of_type_Array2dOfChar[n] = paramString.characters;
      }
      this.size += 1;
      return paramString.symbol;
      label323:
      continue;
      i = 1;
    }
  }
  
  public String addSymbol(char[] paramArrayOfChar, int paramInt1, int paramInt2)
  {
    return addSymbol(paramArrayOfChar, paramInt1, paramInt2, hash(paramArrayOfChar, paramInt1, paramInt2));
  }
  
  public String addSymbol(char[] paramArrayOfChar, int paramInt1, int paramInt2, int paramInt3)
  {
    int n = paramInt3 & this.k;
    Object localObject = this.jdField_a_of_type_ArrayOfJavaLangString[n];
    char[] arrayOfChar;
    int i;
    if (localObject != null)
    {
      if (((String)localObject).length() == paramInt2)
      {
        arrayOfChar = this.jdField_a_of_type_Array2dOfChar[n];
        i = 0;
        for (;;)
        {
          if (i >= paramInt2) {}
          for (i = 1;; i = 0)
          {
            if (i == 0) {
              break label323;
            }
            return localObject;
            if (paramArrayOfChar[(paramInt1 + i)] == arrayOfChar[i]) {
              break;
            }
          }
          i += 1;
        }
      }
      i = 0;
    }
    for (;;)
    {
      localObject = this.jdField_a_of_type_ArrayOfComLepengFastjsonParserSymbolTable$Entry[n];
      int j = 0;
      if (localObject == null)
      {
        if (j >= 8) {
          return new String(paramArrayOfChar, paramInt1, paramInt2);
        }
      }
      else
      {
        arrayOfChar = ((SymbolTable.Entry)localObject).characters;
        int m = j;
        if (paramInt2 == arrayOfChar.length)
        {
          m = j;
          if (paramInt3 == ((SymbolTable.Entry)localObject).hashCode) {
            m = 0;
          }
        }
        for (;;)
        {
          if (m >= paramInt2) {}
          for (m = 1;; m = 0)
          {
            if (m != 0) {
              break label226;
            }
            m = j + 1;
            localObject = ((SymbolTable.Entry)localObject).next;
            j = m;
            break;
            if (paramArrayOfChar[(paramInt1 + m)] == arrayOfChar[m]) {
              break label217;
            }
          }
          label217:
          m += 1;
        }
        label226:
        return ((SymbolTable.Entry)localObject).symbol;
      }
      if (this.size >= 1024) {
        return new String(paramArrayOfChar, paramInt1, paramInt2);
      }
      paramArrayOfChar = new SymbolTable.Entry(paramArrayOfChar, paramInt1, paramInt2, paramInt3, this.jdField_a_of_type_ArrayOfComLepengFastjsonParserSymbolTable$Entry[n]);
      this.jdField_a_of_type_ArrayOfComLepengFastjsonParserSymbolTable$Entry[n] = paramArrayOfChar;
      if (i != 0)
      {
        this.jdField_a_of_type_ArrayOfJavaLangString[n] = paramArrayOfChar.symbol;
        this.jdField_a_of_type_Array2dOfChar[n] = paramArrayOfChar.characters;
      }
      this.size += 1;
      return paramArrayOfChar.symbol;
      label323:
      continue;
      i = 1;
    }
  }
  
  public int size()
  {
    return this.size;
  }
}
