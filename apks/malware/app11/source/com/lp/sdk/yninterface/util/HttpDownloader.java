package com.lp.sdk.yninterface.util;

import android.content.Context;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

public class HttpDownloader
{
  private static URL url = null;
  
  public HttpDownloader(Context paramContext) {}
  
  /* Error */
  public static String download(String paramString)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 5
    //   3: aconst_null
    //   4: astore_2
    //   5: aconst_null
    //   6: astore_3
    //   7: aconst_null
    //   8: astore 4
    //   10: new 23	java/lang/StringBuffer
    //   13: dup
    //   14: invokespecial 24	java/lang/StringBuffer:<init>	()V
    //   17: astore 6
    //   19: aload_0
    //   20: invokestatic 28	com/lp/sdk/yninterface/util/HttpDownloader:getInputStreamFromUrl	(Ljava/lang/String;)Ljava/io/InputStream;
    //   23: astore_0
    //   24: aload_0
    //   25: astore_1
    //   26: aload_3
    //   27: astore_2
    //   28: new 30	java/io/BufferedReader
    //   31: dup
    //   32: new 32	java/io/InputStreamReader
    //   35: dup
    //   36: aload_0
    //   37: invokespecial 35	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   40: invokespecial 38	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   43: astore_3
    //   44: aload_3
    //   45: invokevirtual 42	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   48: astore_1
    //   49: aload_1
    //   50: ifnonnull +25 -> 75
    //   53: aload_3
    //   54: ifnull +7 -> 61
    //   57: aload_3
    //   58: invokevirtual 45	java/io/BufferedReader:close	()V
    //   61: aload_0
    //   62: ifnull +7 -> 69
    //   65: aload_0
    //   66: invokevirtual 48	java/io/InputStream:close	()V
    //   69: aload 6
    //   71: invokevirtual 51	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   74: areturn
    //   75: aload 6
    //   77: aload_1
    //   78: invokevirtual 55	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   81: pop
    //   82: goto -38 -> 44
    //   85: astore_1
    //   86: aload_3
    //   87: astore 4
    //   89: aload_1
    //   90: astore_3
    //   91: aload_0
    //   92: astore_1
    //   93: aload 4
    //   95: astore_2
    //   96: aload_3
    //   97: invokevirtual 58	java/net/MalformedURLException:printStackTrace	()V
    //   100: aload 4
    //   102: ifnull +8 -> 110
    //   105: aload 4
    //   107: invokevirtual 45	java/io/BufferedReader:close	()V
    //   110: aload_0
    //   111: ifnull -42 -> 69
    //   114: aload_0
    //   115: invokevirtual 48	java/io/InputStream:close	()V
    //   118: goto -49 -> 69
    //   121: astore_0
    //   122: aload_0
    //   123: invokevirtual 59	java/io/IOException:printStackTrace	()V
    //   126: goto -57 -> 69
    //   129: astore_3
    //   130: aconst_null
    //   131: astore_0
    //   132: aload 5
    //   134: astore 4
    //   136: aload_0
    //   137: astore_1
    //   138: aload 4
    //   140: astore_2
    //   141: aload_3
    //   142: invokevirtual 59	java/io/IOException:printStackTrace	()V
    //   145: aload 4
    //   147: ifnull +8 -> 155
    //   150: aload 4
    //   152: invokevirtual 45	java/io/BufferedReader:close	()V
    //   155: aload_0
    //   156: ifnull -87 -> 69
    //   159: aload_0
    //   160: invokevirtual 48	java/io/InputStream:close	()V
    //   163: goto -94 -> 69
    //   166: astore_0
    //   167: aload_0
    //   168: invokevirtual 59	java/io/IOException:printStackTrace	()V
    //   171: goto -102 -> 69
    //   174: astore_3
    //   175: aconst_null
    //   176: astore_0
    //   177: aload_2
    //   178: ifnull +7 -> 185
    //   181: aload_2
    //   182: invokevirtual 45	java/io/BufferedReader:close	()V
    //   185: aload_0
    //   186: ifnull +7 -> 193
    //   189: aload_0
    //   190: invokevirtual 48	java/io/InputStream:close	()V
    //   193: aload_3
    //   194: athrow
    //   195: astore_0
    //   196: aload_0
    //   197: invokevirtual 59	java/io/IOException:printStackTrace	()V
    //   200: goto -7 -> 193
    //   203: astore_0
    //   204: aload_0
    //   205: invokevirtual 59	java/io/IOException:printStackTrace	()V
    //   208: goto -139 -> 69
    //   211: astore_3
    //   212: aload_1
    //   213: astore_0
    //   214: goto -37 -> 177
    //   217: astore_1
    //   218: aload_3
    //   219: astore_2
    //   220: aload_1
    //   221: astore_3
    //   222: goto -45 -> 177
    //   225: astore_3
    //   226: aload 5
    //   228: astore 4
    //   230: goto -94 -> 136
    //   233: astore_1
    //   234: aload_3
    //   235: astore 4
    //   237: aload_1
    //   238: astore_3
    //   239: goto -103 -> 136
    //   242: astore_3
    //   243: aconst_null
    //   244: astore_0
    //   245: goto -154 -> 91
    //   248: astore_3
    //   249: goto -158 -> 91
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	252	0	paramString	String
    //   25	53	1	str1	String
    //   85	5	1	localMalformedURLException1	MalformedURLException
    //   92	121	1	str2	String
    //   217	4	1	localObject1	Object
    //   233	5	1	localIOException1	IOException
    //   4	216	2	localObject2	Object
    //   6	91	3	localObject3	Object
    //   129	13	3	localIOException2	IOException
    //   174	20	3	localObject4	Object
    //   211	8	3	localObject5	Object
    //   221	1	3	localObject6	Object
    //   225	10	3	localIOException3	IOException
    //   238	1	3	localObject7	Object
    //   242	1	3	localMalformedURLException2	MalformedURLException
    //   248	1	3	localMalformedURLException3	MalformedURLException
    //   8	228	4	localObject8	Object
    //   1	226	5	localObject9	Object
    //   17	59	6	localStringBuffer	StringBuffer
    // Exception table:
    //   from	to	target	type
    //   44	49	85	java/net/MalformedURLException
    //   75	82	85	java/net/MalformedURLException
    //   105	110	121	java/io/IOException
    //   114	118	121	java/io/IOException
    //   19	24	129	java/io/IOException
    //   150	155	166	java/io/IOException
    //   159	163	166	java/io/IOException
    //   19	24	174	finally
    //   181	185	195	java/io/IOException
    //   189	193	195	java/io/IOException
    //   57	61	203	java/io/IOException
    //   65	69	203	java/io/IOException
    //   28	44	211	finally
    //   96	100	211	finally
    //   141	145	211	finally
    //   44	49	217	finally
    //   75	82	217	finally
    //   28	44	225	java/io/IOException
    //   44	49	233	java/io/IOException
    //   75	82	233	java/io/IOException
    //   19	24	242	java/net/MalformedURLException
    //   28	44	248	java/net/MalformedURLException
  }
  
  public static InputStream getInputStreamFromUrl(String paramString)
  {
    url = new URL(paramString);
    return ((HttpURLConnection)url.openConnection()).getInputStream();
  }
  
  public int downloadFile(String paramString1, String paramString2, String paramString3)
  {
    int i = -1;
    Object localObject4 = null;
    Object localObject6 = null;
    Object localObject5 = null;
    Object localObject3 = localObject5;
    Object localObject2 = localObject4;
    Object localObject1 = localObject6;
    do
    {
      for (;;)
      {
        try
        {
          localFileUtils = new FileUtils();
          localObject3 = localObject5;
          localObject2 = localObject4;
          localObject1 = localObject6;
          boolean bool = localFileUtils.isFileExist(paramString2 + paramString3);
          if (!bool) {
            continue;
          }
          if (0 == 0) {}
        }
        catch (MalformedURLException paramString1)
        {
          FileUtils localFileUtils;
          localObject1 = localObject3;
          paramString1.printStackTrace();
          if (localObject3 == null) {
            continue;
          }
          try
          {
            ((InputStream)localObject3).close();
            return -1;
          }
          catch (IOException paramString1)
          {
            paramString1.printStackTrace();
            return -1;
          }
        }
        catch (IOException paramString1)
        {
          localObject1 = localObject2;
          paramString1.printStackTrace();
          if (localObject2 == null) {
            continue;
          }
          try
          {
            ((InputStream)localObject2).close();
            return -1;
          }
          catch (IOException paramString1)
          {
            paramString1.printStackTrace();
            return -1;
          }
        }
        finally
        {
          if (localObject1 == null) {
            continue;
          }
          try
          {
            ((InputStream)localObject1).close();
            throw paramString1;
          }
          catch (IOException paramString2)
          {
            paramString2.printStackTrace();
            continue;
          }
          if (paramString1 == null) {
            break label242;
          }
        }
        try
        {
          throw new NullPointerException();
          i = 1;
          return i;
        }
        catch (IOException paramString1)
        {
          paramString1.printStackTrace();
        }
      }
      localObject3 = localObject5;
      localObject2 = localObject4;
      localObject1 = localObject6;
      paramString1 = getInputStreamFromUrl(paramString1);
      localObject3 = paramString1;
      localObject2 = paramString1;
      localObject1 = paramString1;
      paramString2 = localFileUtils.write2SDFromInput(paramString2, paramString3, paramString1);
      if (paramString2 != null) {
        break label234;
      }
    } while (paramString1 == null);
    try
    {
      paramString1.close();
      return -1;
    }
    catch (IOException paramString1)
    {
      paramString1.printStackTrace();
      return -1;
    }
    try
    {
      label234:
      paramString1.close();
      label242:
      return 0;
    }
    catch (IOException paramString1)
    {
      for (;;)
      {
        paramString1.printStackTrace();
      }
    }
  }
}
