package com.zdtpay;

import com.duowan.mobile.netroid.q;
import com.zdtpay.a.g;
import com.zdtpay.net.DataRequestTask.RequestCallBack;
import com.zdtpay.tools.b;
import com.zdtpay.tools.c;
import java.util.HashMap;
import java.util.Map;
import org.json.JSONException;
import org.json.JSONObject;

class p
  implements DataRequestTask.RequestCallBack
{
  p(ZDTPayQueryOrderService paramZDTPayQueryOrderService) {}
  
  public void error(q paramQ)
  {
    paramQ.printStackTrace();
  }
  
  public void requestData(Object paramObject)
  {
    try
    {
      Object localObject = new JSONObject((String)paramObject);
      paramObject = new g();
      paramObject.d(((JSONObject)localObject).optString("code"));
      paramObject.b(((JSONObject)localObject).optString("order"));
      paramObject.h(((JSONObject)localObject).optString("order_status"));
      paramObject.e(((JSONObject)localObject).optString("appid"));
      paramObject.f(((JSONObject)localObject).optString("mobile"));
      paramObject.c(((JSONObject)localObject).optString("realmoney"));
      paramObject.g(((JSONObject)localObject).optString("paymoney"));
      paramObject.a(((JSONObject)localObject).optString("extra"));
      HashMap localHashMap;
      if (b.b != null)
      {
        localObject = paramObject.c();
        String str = paramObject.f();
        localHashMap = new HashMap();
        localHashMap.put("code", localObject);
        localHashMap.put("order_status", paramObject.f());
        localHashMap.put("appid", paramObject.d());
        localHashMap.put("realmoney", paramObject.b());
        localHashMap.put("paymoney", paramObject.e());
        localHashMap.put("extra", paramObject.a());
        if ((!((String)localObject).equals("0")) || (!str.equals("1"))) {
          break label242;
        }
        b.b.done(localHashMap);
      }
      for (;;)
      {
        this.a.a();
        return;
        label242:
        b.b.done(localHashMap);
      }
      return;
    }
    catch (JSONException paramObject)
    {
      paramObject.printStackTrace();
      this.a.b(paramObject.getMessage());
      paramObject = new HashMap();
      paramObject.put(c.t, "-1");
      paramObject.put(c.u, "获取数据失败");
      b.a.onFail(paramObject);
      this.a.a();
    }
  }
}
