package com.zhangzhifu.sdk.util.sms;

import java.io.StringReader;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.util.Stack;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;

public class WapPushWbxmlParser
{
  private String eD;
  private byte[] fv;
  private String fw;
  private String fx;
  Stack fy = new Stack();
  
  public WapPushWbxmlParser(byte[] paramArrayOfByte)
  {
    this.fv = paramArrayOfByte;
    this.fw = "";
    this.fx = "";
    this.eD = "";
    this.fy.clear();
    z();
  }
  
  private void z()
  {
    if (this.fv.length == 0) {
      throw new Exception("data zero length");
    }
    this.fw = "<?xml version=\"1.0\" encoding=\"\"?>";
    int n = 1;
    int k = 0;
    int j = 0;
    int m = 0;
    int i = 0;
    Object localObject;
    if (n >= this.fv.length)
    {
      localObject = new InputSource(new StringReader(this.fw));
      localObject = (Element)DocumentBuilderFactory.newInstance().newDocumentBuilder().parse((InputSource)localObject).getDocumentElement().getElementsByTagName("indication").item(0);
      this.eD = URLDecoder.decode(((Element)localObject).getAttribute("href"), "UTF-8");
      this.fx = ((Element)localObject).getFirstChild().getNodeValue();
      return;
    }
    int i1;
    if (m != 0) {
      switch (this.fv[n])
      {
      default: 
        i1 = k;
        k = m;
        m = i;
        i = i1;
      }
    }
    for (;;)
    {
      i1 = n + 1;
      n = m;
      m = k;
      k = i;
      i = n;
      n = i1;
      break;
      localObject = new byte[n - i];
      System.arraycopy(this.fv, i, localObject, 0, n - i);
      if (j != 0)
      {
        this.fw += URLEncoder.encode(new String((byte[])localObject, "UTF-8"), "UTF-8");
        j = 0;
      }
      for (;;)
      {
        if (k != 0)
        {
          this.fw += "\"";
          k = 0;
          m = i;
          i = 0;
          break;
          this.fw += new String((byte[])localObject, "UTF-8");
          continue;
          switch (this.fv[n])
          {
          default: 
            String str = Integer.toHexString(this.fv[n] & 0xFF);
            localObject = str;
            if (str.length() == 1) {
              localObject = "0" + str;
            }
            throw new Exception("Unkonwn byte: 0x" + ((String)localObject).toUpperCase() + " pos: " + n);
          case 5: 
            this.fw += "<!DOCTYPE si PUBLIC \"-//WAPFORUM//DTD SI 1.0//EN\" \"http://www.wapforum.org/DTD/si.dtd\">";
            i1 = i;
            i = k;
            k = m;
            m = i1;
            break;
          case 106: 
            this.fw = this.fw.replaceAll("encoding=\"\"", "encoding=\"UTF-8\"");
            i1 = i;
            i = k;
            k = m;
            m = i1;
            break;
          case 0: 
          case 7: 
          case 8: 
            i1 = i;
            i = k;
            k = m;
            m = i1;
            break;
          case 3: 
            m = n + 1;
            i = k;
            k = 1;
            break;
          case 69: 
            this.fw += "<si>";
            this.fy.add("si");
            i1 = i;
            i = k;
            k = m;
            m = i1;
            break;
          case -58: 
            this.fw += "<indication ";
            this.fy.add("indication");
            this.fy.add(">");
            i1 = i;
            i = k;
            k = m;
            m = i1;
            break;
          case 12: 
            this.fw += "href=\"http://";
            i1 = 1;
            j = 1;
            k = m;
            m = i;
            i = i1;
            break;
          case -61: 
            i1 = i;
            i = k;
            k = m;
            m = i1;
            break;
          case 1: 
            localObject = (String)this.fy.pop();
            if (((String)localObject).equals(">"))
            {
              this.fw += ">";
              i1 = i;
              i = k;
              k = m;
              m = i1;
              break;
            }
            this.fw = (this.fw + "</" + (String)localObject + ">");
            i1 = i;
            i = k;
            k = m;
            m = i1;
            break;
          }
        }
      }
      i1 = 0;
      m = i;
      i = k;
      k = i1;
    }
  }
  
  public String getContent()
  {
    return this.eD;
  }
  
  public String getSI()
  {
    return this.fw;
  }
  
  public String getTitle()
  {
    return this.fx;
  }
}
