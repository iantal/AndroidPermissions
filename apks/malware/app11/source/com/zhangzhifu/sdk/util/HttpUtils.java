package com.zhangzhifu.sdk.util;

import android.content.Context;
import com.zhangzhifu.sdk.db.SharePreferUtil;
import java.io.InputStream;
import java.io.OutputStreamWriter;
import java.net.URL;
import java.net.URLConnection;
import java.util.HashMap;
import java.util.Map;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ByteArrayEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;

public class HttpUtils
{
  public HttpUtils() {}
  
  public static String post(String paramString, byte[] paramArrayOfByte)
  {
    DefaultHttpClient localDefaultHttpClient = new DefaultHttpClient();
    paramArrayOfByte = new ByteArrayEntity(paramArrayOfByte);
    paramString = new HttpPost(paramString);
    paramString.setHeader("Charset", " UTF-8");
    paramString.setHeader("Accept-Encoding", " gzip");
    paramString.setHeader("Content-Type", " application/octet-stream");
    try
    {
      paramString.setEntity(paramArrayOfByte);
      localDefaultHttpClient.execute(paramString).getEntity();
      paramString = new DefaultHttpClient().execute(paramString);
      if (paramString.getStatusLine().getStatusCode() == 200)
      {
        paramString = EntityUtils.toString(paramString.getEntity());
        return paramString;
      }
      return null;
    }
    catch (Exception paramString)
    {
      throw new RuntimeException(paramString);
    }
  }
  
  public static String sendPost(String paramString1, String paramString2, String paramString3, Context paramContext)
  {
    HashMap localHashMap = new HashMap();
    paramString1 = new URL(paramString1).openConnection();
    paramString1.setDoInput(true);
    paramString1.setDoOutput(true);
    paramString1.setRequestProperty("Content-type", "text/plain; charset=UTF-8");
    if (paramString3 != null) {
      paramString1.setRequestProperty("sessionid", paramString3);
    }
    paramString3 = new OutputStreamWriter(paramString1.getOutputStream(), "utf-8");
    paramString3.write(paramString2);
    paramString3.flush();
    paramString2 = paramString1.getInputStream();
    paramString3 = SharePreferUtil.getInstance().getSessionId(paramContext);
    paramString1 = paramString1.getHeaderField("sessionid");
    if (paramString3 == paramString1) {
      SharePreferUtil.getInstance().setSessionId(paramContext, paramString1);
    }
    if (paramString3 != paramString1) {
      SharePreferUtil.getInstance().setSessionId(paramContext, paramString1);
    }
    if (paramString1 == null) {
      SharePreferUtil.getInstance().setSessionId(paramContext, paramString3);
    }
    paramString1 = new StringBuffer();
    int i = 0;
    for (;;)
    {
      if (i == -1)
      {
        paramString2.close();
        paramString1 = new String(paramString1.toString().getBytes("iso-8859-1"), "UTF-8");
        localHashMap.put("result", paramString1);
        return paramString1;
      }
      int j = paramString2.read();
      i = j;
      if (j != -1)
      {
        paramString1.append((char)j);
        i = j;
      }
    }
  }
}
