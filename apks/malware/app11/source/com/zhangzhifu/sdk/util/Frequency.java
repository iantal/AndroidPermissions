package com.zhangzhifu.sdk.util;

import java.io.PrintStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

public class Frequency
{
  private Set dK = new TreeSet();
  private boolean dL = true;
  private Map map = new HashMap();
  
  public Frequency() {}
  
  private void dataChanged()
  {
    Iterator localIterator;
    if (this.dL) {
      localIterator = this.map.keySet().iterator();
    }
    for (;;)
    {
      if (!localIterator.hasNext()) {
        return;
      }
      String str = (String)localIterator.next();
      this.dK.add(new Frequency.Entiry(this, str, (Integer)this.map.get(str)));
      this.dL = false;
    }
  }
  
  public void addStatistics(String paramString)
  {
    Integer localInteger = (Integer)this.map.get(paramString);
    Map localMap = this.map;
    if (localInteger == null) {}
    for (int i = 1;; i = localInteger.intValue() + 1)
    {
      localMap.put(paramString, Integer.valueOf(i));
      return;
    }
  }
  
  public List getDataDesc()
  {
    dataChanged();
    Iterator localIterator = this.dK.iterator();
    ArrayList localArrayList = new ArrayList();
    for (;;)
    {
      if (!localIterator.hasNext()) {
        return localArrayList;
      }
      Frequency.Entiry localEntiry = (Frequency.Entiry)localIterator.next();
      localArrayList.add(localEntiry);
      System.out.println(localEntiry.toString());
    }
  }
  
  public Frequency.Entiry getMaxValueItem()
  {
    dataChanged();
    Iterator localIterator = this.dK.iterator();
    Frequency.Entiry localEntiry = null;
    if (localIterator.hasNext())
    {
      localEntiry = (Frequency.Entiry)localIterator.next();
      System.out.println(localEntiry.toString());
    }
    return localEntiry;
  }
}
