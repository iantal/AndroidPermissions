package com.zhangzhifu.sdk.onlinegame;

import android.content.Context;
import com.zhangzhifu.sdk.ZhangPayCallback;
import com.zhangzhifu.sdk.ZhangPayEngine;
import com.zhangzhifu.sdk.ZhangPayRecodeServer;
import com.zhangzhifu.sdk.db.PcOnlineGameWapDBManager;
import com.zhangzhifu.sdk.db.SharePreferUtil;
import com.zhangzhifu.sdk.modle.PcOnlineProcedure;
import com.zhangzhifu.sdk.modle.PcOnlineWap;
import com.zhangzhifu.sdk.util.JudgeTimeUtil;
import com.zhangzhifu.sdk.util.ZhangPayLog;
import com.zhangzhifu.sdk.util.json.MsgResponse_pc;
import java.util.Iterator;
import java.util.List;

public class ZhangPayPCOF
{
  public static int allFlow;
  public static String currentWapUrl;
  private static ZhangPayPCOF cz;
  private String bA;
  private Context bZ;
  private PcOnlineProcedure cA;
  private MsgResponse_pc cB;
  public String contentsid = null;
  public int count;
  public boolean isSend = false;
  public boolean isSendNext = false;
  public String smsCode = null;
  public ZhangPayCallback zhangPayCallback;
  
  public ZhangPayPCOF(Context paramContext)
  {
    this.bZ = paramContext;
  }
  
  private static String A(Context paramContext)
  {
    try
    {
      if (SharePreferUtil.getInstance().getAuthCode(paramContext) != null)
      {
        if (SharePreferUtil.getInstance().getAuthCode(paramContext).equals("")) {
          return null;
        }
        paramContext = SharePreferUtil.getInstance().getAuthCode(paramContext);
        return paramContext;
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  private void B(Context paramContext)
  {
    this.smsCode = null;
    int i = 0;
    for (;;)
    {
      if (i >= 12) {
        return;
      }
      try
      {
        Thread.sleep(5000L);
        if (A(paramContext) != null)
        {
          this.smsCode = A(paramContext);
          SharePreferUtil.getInstance().setSmsResult(paramContext, 1001);
          ZhangPayEngine.getInstance().sendMsg(2);
          d(paramContext, 1001);
          return;
        }
      }
      catch (InterruptedException paramContext)
      {
        paramContext.printStackTrace();
        return;
      }
      i += 1;
    }
  }
  
  private static void d(Context paramContext, int paramInt)
  {
    ZhangPayRecodeServer localZhangPayRecodeServer = ZhangPayRecodeServer.getInstance();
    SharePreferUtil.getInstance();
    localZhangPayRecodeServer.sentMessServer(paramContext, SharePreferUtil.getPriciePointId(paramContext), paramInt);
  }
  
  public static ZhangPayPCOF getInstance(Context paramContext)
  {
    if (cz == null) {
      cz = new ZhangPayPCOF(paramContext);
    }
    return cz;
  }
  
  public void deelOnlineGameWap(List paramList)
  {
    if ((paramList != null) && (paramList.size() > 0)) {
      paramList = paramList.iterator();
    }
    for (;;)
    {
      if (!paramList.hasNext()) {
        return;
      }
      PcOnlineWap localPcOnlineWap = (PcOnlineWap)paramList.next();
      if (!JudgeTimeUtil.isMax(2, this.bZ)) {
        break;
      }
      if (localPcOnlineWap == null)
      {
        ZhangPayLog.d("zhangPay_log", "计费失败");
      }
      else if ((localPcOnlineWap.getAllProcedure() != null) && (localPcOnlineWap.getAllProcedure().size() != 0))
      {
        new h(this, localPcOnlineWap).execute(new String[] { "" });
        PcOnlineGameWapDBManager.getInstance().delWapById(this.bZ, localPcOnlineWap);
      }
    }
    SharePreferUtil.getInstance().setSmsResult(this.bZ, 1005);
    ZhangPayLog.d("zhangPay_log", "该设备今日已超过可计费次数上限");
  }
}
