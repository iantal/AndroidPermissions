package app.ld.ap.utils;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Proxy;
import android.text.TextUtils;
import java.util.List;
import org.apache.http.HttpHost;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.params.HttpClientParams;
import org.apache.http.conn.ClientConnectionManager;
import org.apache.http.conn.scheme.Scheme;
import org.apache.http.conn.scheme.SchemeRegistry;
import org.apache.http.conn.ssl.SSLSocketFactory;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;

public class i
{
  public static HttpResponse a(Context paramContext, String paramString)
  {
    String str = paramString.replaceAll(" ", "%20");
    paramString = b(paramContext, str);
    a(paramContext, paramString);
    paramContext = paramString.getParams();
    HttpConnectionParams.setConnectionTimeout(paramContext, 60000);
    HttpConnectionParams.setSoTimeout(paramContext, 90000);
    HttpClientParams.setRedirecting(paramContext, false);
    paramContext = new HttpGet(str);
    paramContext.setHeader("Content-Type", "application/x-www-form-urlencoded");
    paramContext.setHeader("Charset", "UTF-8");
    paramContext.setHeader("User-Agent", "NokiaN73-1/4.0850.43.1.1 Series60/3.0 Profile/MIDP-2.0 Configuration/CLDC-1.1");
    try
    {
      paramContext = paramString.execute(paramContext);
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static HttpResponse a(Context paramContext, String paramString, List paramList)
  {
    paramString = paramString.replaceAll(" ", "%20");
    paramContext = b(paramContext, paramString);
    HttpParams localHttpParams = paramContext.getParams();
    HttpConnectionParams.setConnectionTimeout(localHttpParams, 60000);
    HttpConnectionParams.setSoTimeout(localHttpParams, 90000);
    HttpClientParams.setRedirecting(localHttpParams, false);
    paramString = new HttpPost(paramString);
    paramString.setHeader("Content-Type", "application/x-www-form-urlencoded");
    paramString.setHeader("Charset", "UTF-8");
    paramString.setHeader("User-Agent", "NokiaN73-1/4.0850.43.1.1 Series60/3.0 Profile/MIDP-2.0 Configuration/CLDC-1.1");
    if (paramList != null) {}
    try
    {
      paramString.setEntity(new UrlEncodedFormEntity(paramList));
      paramContext = paramContext.execute(paramString);
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  private static void a(Context paramContext, HttpClient paramHttpClient)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    int i;
    if ((paramContext != null) && (paramContext.isAvailable()) && (paramContext.getType() == 0))
    {
      paramContext = Proxy.getDefaultHost();
      i = Proxy.getDefaultPort();
      if ((!TextUtils.isEmpty(paramContext)) || (i >= 0)) {}
    }
    else
    {
      return;
    }
    paramContext = new HttpHost(paramContext, i);
    paramHttpClient.getParams().setParameter("http.route.default-proxy", paramContext);
  }
  
  private static HttpClient b(Context paramContext, String paramString)
  {
    try
    {
      if (paramString.startsWith("https://"))
      {
        paramContext = new DefaultHttpClient().getConnectionManager();
        paramString = new Scheme("https", SSLSocketFactory.getSocketFactory(), 443);
        paramContext.getSchemeRegistry().register(paramString);
        paramString = new BasicHttpParams();
        paramString.setParameter("http.connection.timeout", Integer.valueOf(60000));
        return new DefaultHttpClient(paramContext, paramString);
      }
      paramContext = new DefaultHttpClient();
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
}
