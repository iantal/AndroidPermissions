package app.ld.ap.utils;

import android.content.Context;
import android.os.AsyncTask;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import javax.net.ssl.SSLHandshakeException;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;

public class p
  extends AsyncTask
{
  private int a;
  private o b;
  private ArrayList c;
  private boolean d;
  private Context e;
  
  public p(Context paramContext)
  {
    this.e = paramContext;
  }
  
  /* Error */
  private static String a(InputStream paramInputStream)
  {
    // Byte code:
    //   0: new 27	java/io/BufferedReader
    //   3: dup
    //   4: new 29	java/io/InputStreamReader
    //   7: dup
    //   8: aload_0
    //   9: invokespecial 32	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   12: invokespecial 35	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   15: astore_2
    //   16: new 37	java/lang/StringBuilder
    //   19: dup
    //   20: invokespecial 38	java/lang/StringBuilder:<init>	()V
    //   23: astore_1
    //   24: aload_2
    //   25: invokevirtual 42	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   28: astore_3
    //   29: aload_3
    //   30: ifnonnull +12 -> 42
    //   33: aload_0
    //   34: invokevirtual 47	java/io/InputStream:close	()V
    //   37: aload_1
    //   38: invokevirtual 50	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   41: areturn
    //   42: aload_1
    //   43: aload_3
    //   44: invokevirtual 54	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   47: pop
    //   48: goto -24 -> 24
    //   51: astore_2
    //   52: aload_2
    //   53: invokevirtual 57	java/io/IOException:printStackTrace	()V
    //   56: aload_0
    //   57: invokevirtual 47	java/io/InputStream:close	()V
    //   60: goto -23 -> 37
    //   63: astore_0
    //   64: aload_0
    //   65: invokevirtual 57	java/io/IOException:printStackTrace	()V
    //   68: goto -31 -> 37
    //   71: astore_1
    //   72: aload_0
    //   73: invokevirtual 47	java/io/InputStream:close	()V
    //   76: aload_1
    //   77: athrow
    //   78: astore_0
    //   79: aload_0
    //   80: invokevirtual 57	java/io/IOException:printStackTrace	()V
    //   83: goto -7 -> 76
    //   86: astore_0
    //   87: aload_0
    //   88: invokevirtual 57	java/io/IOException:printStackTrace	()V
    //   91: goto -54 -> 37
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	94	0	paramInputStream	InputStream
    //   23	20	1	localStringBuilder	StringBuilder
    //   71	6	1	localObject	Object
    //   15	10	2	localBufferedReader	java.io.BufferedReader
    //   51	2	2	localIOException	IOException
    //   28	16	3	str	String
    // Exception table:
    //   from	to	target	type
    //   24	29	51	java/io/IOException
    //   42	48	51	java/io/IOException
    //   56	60	63	java/io/IOException
    //   24	29	71	finally
    //   42	48	71	finally
    //   52	56	71	finally
    //   72	76	78	java/io/IOException
    //   33	37	86	java/io/IOException
  }
  
  private HttpResponse a(Context paramContext, String paramString)
  {
    if (this.d) {
      return i.a(paramContext, paramString, this.c);
    }
    return i.a(paramContext, paramString);
  }
  
  protected String a(String... paramVarArgs)
  {
    Object localObject2;
    for (localObject1 = null;; localObject1 = localObject2)
    {
      if ((localObject1 != null) || (this.a >= 3)) {
        return localObject1;
      }
      if (isCancelled()) {
        return null;
      }
      localObject2 = paramVarArgs[0];
      try
      {
        j.c("SdkHttpTask", toString() + "||mRetryCount=" + this.a);
        j.c("SdkHttpTask", toString() + "||request=" + (String)localObject2);
        Object localObject7 = a(this.e, (String)localObject2);
        localObject2 = localObject1;
        if (localObject7 != null)
        {
          localObject2 = localObject1;
          if (!isCancelled())
          {
            int i = ((HttpResponse)localObject7).getStatusLine().getStatusCode();
            j.c("SdkHttpTask", toString() + "||st=" + i);
            localObject7 = ((HttpResponse)localObject7).getEntity();
            localObject2 = localObject1;
            if (localObject7 != null)
            {
              localObject7 = ((HttpEntity)localObject7).getContent();
              localObject2 = localObject1;
              if (localObject7 != null) {
                localObject2 = a((InputStream)localObject7);
              }
            }
          }
        }
      }
      catch (SSLHandshakeException localSSLHandshakeException)
      {
        for (;;)
        {
          localSSLHandshakeException.printStackTrace();
          Object localObject3 = localObject1;
        }
      }
      catch (UnsupportedEncodingException localUnsupportedEncodingException)
      {
        for (;;)
        {
          localUnsupportedEncodingException.printStackTrace();
          Object localObject4 = localObject1;
        }
      }
      catch (ClientProtocolException localClientProtocolException)
      {
        for (;;)
        {
          localClientProtocolException.printStackTrace();
          Object localObject5 = localObject1;
        }
      }
      catch (IOException localIOException)
      {
        for (;;)
        {
          localIOException.printStackTrace();
          Object localObject6 = localObject1;
        }
      }
      j.c("SdkHttpTask", toString() + "||response=" + (String)localObject2);
      this.a += 1;
    }
  }
  
  public void a(o paramO, String paramString)
  {
    this.b = paramO;
    this.d = false;
    this.a = 0;
    execute(new String[] { paramString });
  }
  
  protected void a(String paramString)
  {
    super.onPostExecute(paramString);
    if ((this.b != null) && (!isCancelled()))
    {
      j.c("SdkHttpTask", toString() + "||onResponse");
      this.b.a(paramString);
      this.b = null;
    }
  }
  
  protected void onCancelled()
  {
    super.onCancelled();
    if (this.b != null)
    {
      j.c("SdkHttpTask", toString() + "||onCancelled");
      this.b.b();
      this.b = null;
    }
  }
}
