.class public Lcn/banny/rp/client/ReverseProxyClient;
.super Ljava/lang/Object;

# interfaces
.implements Lcn/banny/rp/MessageDeliver;
.implements Lcn/banny/rp/client/SocketSession;
.implements Ljava/lang/Runnable;


# static fields
.field private static final READ_BUFFER_SIZE:I = 0x10000


# instance fields
.field private aliveTimeMillis:I

.field private authListener:Lcn/banny/rp/client/AuthListener;

.field private authResult:Lcn/banny/rp/auth/AuthResult;

.field private canStop:Z

.field private checkNetworkChangeTime:J

.field private checkSessionTime:J

.field private dataHandler:Lcn/banny/rp/handler/ExtDataHandler;

.field private dis:Ljava/io/DataInputStream;

.field private final host:Ljava/lang/String;

.field private lastAliveTime:J

.field private lastCode:I

.field private networkDelay:I

.field private packetSize:I

.field private password:Ljava/lang/String;

.field private pipedIn:Ljava/io/PipedInputStream;

.field private pipedOut:Ljava/io/PipedOutputStream;

.field private final port:I

.field private readBuffer:Ljava/nio/ByteBuffer;

.field private selector:Ljava/nio/channels/Selector;

.field private session:Ljava/nio/channels/SocketChannel;

.field private final socketMap:Ljava/util/Map;
    .annotation build Landroid/annotation/SuppressLint;
        value = {
            "UseSparseArrays"
        }
    .end annotation
.end field

.field private username:Ljava/lang/String;


# direct methods
.method public constructor <init>(Ljava/lang/String;I)V
    .locals 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, -0x1

    iput v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->packetSize:I

    const/16 v0, 0x1400

    invoke-static {v0}, Ljava/nio/ByteBuffer;->allocate(I)Ljava/nio/ByteBuffer;

    move-result-object v0

    iput-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->readBuffer:Ljava/nio/ByteBuffer;

    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->socketMap:Ljava/util/Map;

    iput-object p1, p0, Lcn/banny/rp/client/ReverseProxyClient;->host:Ljava/lang/String;

    iput p2, p0, Lcn/banny/rp/client/ReverseProxyClient;->port:I

    return-void
.end method

.method private checkNetworkChange(J)V
    .locals 5

    iget-wide v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->checkNetworkChangeTime:J

    sub-long v0, p1, v0

    const-wide/16 v2, 0x1388

    cmp-long v0, v0, v2

    if-gez v0, :cond_0

    :goto_0
    return-void

    :cond_0
    iput-wide p1, p0, Lcn/banny/rp/client/ReverseProxyClient;->checkNetworkChangeTime:J

    :try_start_0
    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    invoke-static {}, Ljava/net/NetworkInterface;->getNetworkInterfaces()Ljava/util/Enumeration;

    move-result-object v2

    :cond_1
    invoke-interface {v2}, Ljava/util/Enumeration;->hasMoreElements()Z

    move-result v0

    if-nez v0, :cond_3

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->hashCode()I

    move-result v1

    iget v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastCode:I

    if-eqz v0, :cond_2

    iget v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastCode:I

    if-ne v1, v0, :cond_5

    :cond_2
    iput v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastCode:I
    :try_end_0
    .catch Ljava/net/SocketException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    invoke-virtual {v0}, Ljava/net/SocketException;->printStackTrace()V

    goto :goto_0

    :cond_3
    :try_start_1
    invoke-interface {v2}, Ljava/util/Enumeration;->nextElement()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/net/NetworkInterface;

    invoke-virtual {v0}, Ljava/net/NetworkInterface;->isLoopback()Z

    move-result v3

    if-nez v3, :cond_1

    invoke-virtual {v0}, Ljava/net/NetworkInterface;->isUp()Z

    move-result v3

    if-eqz v3, :cond_1

    invoke-virtual {v0}, Ljava/net/NetworkInterface;->getInetAddresses()Ljava/util/Enumeration;

    move-result-object v3

    :cond_4
    :goto_1
    invoke-interface {v3}, Ljava/util/Enumeration;->hasMoreElements()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-interface {v3}, Ljava/util/Enumeration;->nextElement()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/net/InetAddress;

    invoke-virtual {v0}, Ljava/net/InetAddress;->isLoopbackAddress()Z

    move-result v4

    if-nez v4, :cond_4

    invoke-virtual {v0}, Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    const/16 v4, 0x2c

    invoke-virtual {v0, v4}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;
    :try_end_1
    .catch Ljava/net/SocketException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_1

    :cond_5
    :try_start_2
    invoke-direct {p0}, Lcn/banny/rp/client/ReverseProxyClient;->getProxies()[Lcn/banny/rp/client/SocketProxy;

    move-result-object v2

    array-length v3, v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    const/4 v0, 0x0

    :goto_2
    if-lt v0, v3, :cond_6

    :try_start_3
    iput v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastCode:I
    :try_end_3
    .catch Ljava/net/SocketException; {:try_start_3 .. :try_end_3} :catch_0

    goto :goto_0

    :cond_6
    :try_start_4
    aget-object v4, v2, v0

    invoke-virtual {v4}, Lcn/banny/rp/client/SocketProxy;->close()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    :catchall_0
    move-exception v0

    :try_start_5
    iput v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastCode:I

    throw v0
    :try_end_5
    .catch Ljava/net/SocketException; {:try_start_5 .. :try_end_5} :catch_0
.end method

.method private checkSelectionKeys(Ljava/util/Iterator;)V
    .locals 4

    :cond_0
    :goto_0
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-nez v0, :cond_1

    return-void

    :cond_1
    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/nio/channels/SelectionKey;

    invoke-interface {p1}, Ljava/util/Iterator;->remove()V

    invoke-virtual {v0}, Ljava/nio/channels/SelectionKey;->channel()Ljava/nio/channels/SelectableChannel;

    move-result-object v1

    check-cast v1, Ljava/nio/channels/SocketChannel;

    invoke-virtual {v0}, Ljava/nio/channels/SelectionKey;->attachment()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcn/banny/rp/client/SocketSession;

    :try_start_0
    invoke-virtual {v0}, Ljava/nio/channels/SelectionKey;->isReadable()Z

    move-result v3

    if-eqz v3, :cond_2

    invoke-direct {p0, v1, v2, v0}, Lcn/banny/rp/client/ReverseProxyClient;->processRead(Ljava/nio/channels/SocketChannel;Lcn/banny/rp/client/SocketSession;Ljava/nio/channels/SelectionKey;)V

    :cond_2
    invoke-virtual {v0}, Ljava/nio/channels/SelectionKey;->isConnectable()Z

    move-result v3

    if-eqz v3, :cond_0

    invoke-interface {v2, v1}, Lcn/banny/rp/client/SocketSession;->processConnect(Ljava/nio/channels/SocketChannel;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v3

    invoke-virtual {v0}, Ljava/nio/channels/SelectionKey;->cancel()V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/nio/channels/Channel;)V

    invoke-interface {v2, v1, v3}, Lcn/banny/rp/client/SocketSession;->exceptionCaught(Ljava/nio/channels/SocketChannel;Ljava/lang/Throwable;)V

    invoke-interface {v2, v1}, Lcn/banny/rp/client/SocketSession;->sessionClosed(Ljava/nio/channels/SocketChannel;)V

    goto :goto_0
.end method

.method private checkSession(Ljava/nio/channels/SocketChannel;J)V
    .locals 6

    const/4 v2, 0x0

    iget-wide v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->checkSessionTime:J

    sub-long v0, p2, v0

    const-wide/16 v4, 0x2710

    cmp-long v0, v0, v4

    if-gez v0, :cond_0

    :goto_0
    return-void

    :cond_0
    iput-wide p2, p0, Lcn/banny/rp/client/ReverseProxyClient;->checkSessionTime:J

    iget v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->aliveTimeMillis:I

    if-lez v0, :cond_1

    iget-wide v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastAliveTime:J

    const-wide/16 v4, 0x0

    cmp-long v0, v0, v4

    if-lez v0, :cond_1

    iget-wide v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastAliveTime:J

    sub-long v0, p2, v0

    iget v3, p0, Lcn/banny/rp/client/ReverseProxyClient;->aliveTimeMillis:I

    int-to-long v4, v3

    cmp-long v0, v0, v4

    if-lez v0, :cond_1

    invoke-virtual {p0}, Lcn/banny/rp/client/ReverseProxyClient;->logout()V

    goto :goto_0

    :cond_1
    :try_start_0
    new-instance v3, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v3}, Ljava/io/ByteArrayOutputStream;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :try_start_1
    new-instance v1, Ljava/io/DataOutputStream;

    invoke-direct {v1, v3}, Ljava/io/DataOutputStream;-><init>(Ljava/io/OutputStream;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    const/16 v0, 0x8

    :try_start_2
    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeByte(I)V

    iget v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->networkDelay:I

    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeInt(I)V

    invoke-virtual {v1, p2, p3}, Ljava/io/DataOutputStream;->writeLong(J)V

    invoke-virtual {v3}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v0

    invoke-virtual {p0, v0}, Lcn/banny/rp/client/ReverseProxyClient;->sendResponse([B)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    goto :goto_0

    :catch_0
    move-exception v0

    move-object v1, v2

    :goto_1
    :try_start_3
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    invoke-direct {p0, p1}, Lcn/banny/rp/client/ReverseProxyClient;->closeSession(Ljava/nio/channels/SocketChannel;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    invoke-static {v2}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    goto :goto_0

    :catchall_0
    move-exception v0

    move-object v1, v2

    move-object v3, v2

    :goto_2
    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    throw v0

    :catchall_1
    move-exception v0

    move-object v1, v2

    goto :goto_2

    :catchall_2
    move-exception v0

    goto :goto_2

    :catchall_3
    move-exception v0

    move-object v3, v2

    goto :goto_2

    :catch_1
    move-exception v0

    move-object v1, v2

    move-object v2, v3

    goto :goto_1

    :catch_2
    move-exception v0

    move-object v2, v3

    goto :goto_1
.end method

.method private closeSession(Ljava/nio/channels/SocketChannel;)V
    .locals 1

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->selector:Ljava/nio/channels/Selector;

    invoke-virtual {p1, v0}, Ljava/nio/channels/SocketChannel;->keyFor(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Ljava/nio/channels/SelectionKey;->cancel()V

    :cond_0
    invoke-static {p1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/nio/channels/Channel;)V

    invoke-virtual {p0, p1}, Lcn/banny/rp/client/ReverseProxyClient;->sessionClosed(Ljava/nio/channels/SocketChannel;)V

    return-void
.end method

.method private connectReverseProxyServer()V
    .locals 5

    const/4 v4, 0x1

    invoke-static {}, Ljava/nio/channels/SocketChannel;->open()Ljava/nio/channels/SocketChannel;

    move-result-object v0

    invoke-virtual {v0, v4}, Ljava/nio/channels/SocketChannel;->configureBlocking(Z)Ljava/nio/channels/SelectableChannel;

    invoke-virtual {v0}, Ljava/nio/channels/SocketChannel;->socket()Ljava/net/Socket;

    move-result-object v1

    invoke-virtual {v1, v4}, Ljava/net/Socket;->setKeepAlive(Z)V

    new-instance v1, Ljava/net/InetSocketAddress;

    iget-object v2, p0, Lcn/banny/rp/client/ReverseProxyClient;->host:Ljava/lang/String;

    iget v3, p0, Lcn/banny/rp/client/ReverseProxyClient;->port:I

    invoke-direct {v1, v2, v3}, Ljava/net/InetSocketAddress;-><init>(Ljava/lang/String;I)V

    invoke-virtual {v0, v1}, Ljava/nio/channels/SocketChannel;->connect(Ljava/net/SocketAddress;)Z

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Ljava/nio/channels/SocketChannel;->configureBlocking(Z)Ljava/nio/channels/SelectableChannel;

    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->selector:Ljava/nio/channels/Selector;

    invoke-virtual {v0, v1, v4}, Ljava/nio/channels/SocketChannel;->register(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;

    move-result-object v1

    invoke-virtual {v1, p0}, Ljava/nio/channels/SelectionKey;->attach(Ljava/lang/Object;)Ljava/lang/Object;

    invoke-virtual {p0, v0}, Lcn/banny/rp/client/ReverseProxyClient;->sessionOpened(Ljava/nio/channels/SocketChannel;)V

    return-void
.end method

.method private getProxies()[Lcn/banny/rp/client/SocketProxy;
    .locals 3

    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->socketMap:Ljava/util/Map;

    monitor-enter v1

    :try_start_0
    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->socketMap:Ljava/util/Map;

    invoke-interface {v0}, Ljava/util/Map;->values()Ljava/util/Collection;

    move-result-object v0

    const/4 v2, 0x0

    new-array v2, v2, [Lcn/banny/rp/client/SocketProxy;

    invoke-interface {v0, v2}, Ljava/util/Collection;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Lcn/banny/rp/client/SocketProxy;

    monitor-exit v1

    return-object v0

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method private messageReceived(Ljava/nio/channels/SocketChannel;Ljava/lang/Object;)V
    .locals 8

    const/4 v2, 0x0

    check-cast p2, [B

    :try_start_0
    new-instance v3, Ljava/io/ByteArrayInputStream;

    invoke-direct {v3, p2}, Ljava/io/ByteArrayInputStream;-><init>([B)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    new-instance v1, Ljava/io/DataInputStream;

    invoke-direct {v1, v3}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_2
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    :try_start_2
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v4

    invoke-virtual {v1}, Ljava/io/DataInputStream;->readUnsignedByte()I
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v0

    packed-switch v0, :pswitch_data_0

    :cond_0
    :goto_0
    :pswitch_0
    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/InputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/InputStream;)V

    :goto_1
    return-void

    :pswitch_1
    :try_start_3
    iput-wide v4, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastAliveTime:J

    invoke-virtual {v1}, Ljava/io/DataInputStream;->readInt()I

    move-result v0

    invoke-direct {p0, v0, v1}, Lcn/banny/rp/client/ReverseProxyClient;->parseConnect(ILjava/io/DataInputStream;)V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    :catch_0
    move-exception v0

    move-object v2, v3

    :goto_2
    :try_start_4
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    invoke-static {v2}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/InputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/InputStream;)V

    goto :goto_1

    :pswitch_2
    :try_start_5
    iput-wide v4, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastAliveTime:J

    invoke-virtual {v1}, Ljava/io/DataInputStream;->readInt()I

    move-result v0

    invoke-direct {p0, v0, v1}, Lcn/banny/rp/client/ReverseProxyClient;->parseWriteData(ILjava/io/DataInput;)V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto :goto_0

    :catchall_0
    move-exception v0

    :goto_3
    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/InputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/InputStream;)V

    throw v0

    :pswitch_3
    :try_start_6
    iput-wide v4, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastAliveTime:J

    invoke-virtual {v1}, Ljava/io/DataInputStream;->readInt()I

    move-result v0

    invoke-direct {p0, v0, v1}, Lcn/banny/rp/client/ReverseProxyClient;->parseClose(ILjava/io/DataInput;)V

    goto :goto_0

    :pswitch_4
    iput-wide v4, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastAliveTime:J

    invoke-static {v1}, Lcn/banny/rp/auth/AuthResult;->readAuthResult(Ljava/io/DataInput;)Lcn/banny/rp/auth/AuthResult;

    move-result-object v0

    iput-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->authResult:Lcn/banny/rp/auth/AuthResult;

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->authListener:Lcn/banny/rp/client/AuthListener;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->authListener:Lcn/banny/rp/client/AuthListener;

    iget-object v2, p0, Lcn/banny/rp/client/ReverseProxyClient;->authResult:Lcn/banny/rp/auth/AuthResult;

    invoke-interface {v0, v2}, Lcn/banny/rp/client/AuthListener;->onAuthResponse(Lcn/banny/rp/auth/AuthResult;)Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-direct {p0, p1}, Lcn/banny/rp/client/ReverseProxyClient;->closeSession(Ljava/nio/channels/SocketChannel;)V

    goto :goto_0

    :pswitch_5
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v4

    invoke-virtual {v1}, Ljava/io/DataInputStream;->readLong()J

    move-result-wide v6

    sub-long/2addr v4, v6

    long-to-int v0, v4

    iput v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->networkDelay:I

    goto :goto_0

    :pswitch_6
    iput-wide v4, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastAliveTime:J

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->dataHandler:Lcn/banny/rp/handler/ExtDataHandler;

    if-eqz v0, :cond_0

    invoke-virtual {v1}, Ljava/io/DataInputStream;->readInt()I

    move-result v0

    new-array v0, v0, [B

    invoke-virtual {v1, v0}, Ljava/io/DataInputStream;->readFully([B)V

    iget-object v2, p0, Lcn/banny/rp/client/ReverseProxyClient;->dataHandler:Lcn/banny/rp/handler/ExtDataHandler;

    invoke-interface {v2, v0, p0}, Lcn/banny/rp/handler/ExtDataHandler;->handle([BLcn/banny/rp/MessageDeliver;)V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    goto :goto_0

    :catchall_1
    move-exception v0

    move-object v1, v2

    move-object v3, v2

    goto :goto_3

    :catchall_2
    move-exception v0

    move-object v1, v2

    goto :goto_3

    :catchall_3
    move-exception v0

    move-object v3, v2

    goto :goto_3

    :catch_1
    move-exception v0

    move-object v1, v2

    goto :goto_2

    :catch_2
    move-exception v0

    move-object v1, v2

    move-object v2, v3

    goto :goto_2

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_2
        :pswitch_3
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_4
        :pswitch_5
        :pswitch_6
    .end packed-switch
.end method

.method private messageSent(Ljava/nio/channels/SocketChannel;Ljava/lang/Object;)V
    .locals 2

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->checkSessionTime:J

    return-void
.end method

.method private parseClose(ILjava/io/DataInput;)V
    .locals 4

    const/4 v2, 0x0

    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->socketMap:Ljava/util/Map;

    monitor-enter v1

    :try_start_0
    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->socketMap:Ljava/util/Map;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v0, v3}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcn/banny/rp/client/SocketProxy;

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_0

    new-instance v0, Ljava/io/EOFException;

    const-string v1, "parseClose"

    invoke-direct {v0, v1}, Ljava/io/EOFException;-><init>(Ljava/lang/String;)V

    throw v0

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    :cond_0
    :try_start_2
    invoke-virtual {v0}, Lcn/banny/rp/client/SocketProxy;->close()V

    new-instance v3, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v3}, Ljava/io/ByteArrayOutputStream;-><init>()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :try_start_3
    new-instance v1, Ljava/io/DataOutputStream;

    invoke-direct {v1, v3}, Ljava/io/DataOutputStream;-><init>(Ljava/io/OutputStream;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    const/4 v2, 0x3

    :try_start_4
    invoke-virtual {v1, v2}, Ljava/io/DataOutputStream;->writeByte(I)V

    invoke-virtual {v0}, Lcn/banny/rp/client/SocketProxy;->getSocket()I

    move-result v0

    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeInt(I)V

    invoke-virtual {v3}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v0

    invoke-virtual {p0, v0}, Lcn/banny/rp/client/ReverseProxyClient;->sendResponse([B)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    return-void

    :catchall_1
    move-exception v0

    move-object v1, v2

    :goto_0
    invoke-static {v2}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    throw v0

    :catchall_2
    move-exception v0

    move-object v1, v2

    move-object v2, v3

    goto :goto_0

    :catchall_3
    move-exception v0

    move-object v2, v3

    goto :goto_0
.end method

.method private parseConnect(ILjava/io/DataInputStream;)V
    .locals 4

    :try_start_0
    new-instance v0, Lcn/banny/rp/client/SocketProxy;

    invoke-static {p2}, Lcn/banny/rp/RequestConnect;->parseRequestConnect(Ljava/io/DataInput;)Lcn/banny/rp/RequestConnect;

    move-result-object v1

    iget-object v2, p0, Lcn/banny/rp/client/ReverseProxyClient;->selector:Ljava/nio/channels/Selector;

    invoke-direct {v0, p1, v1, p0, v2}, Lcn/banny/rp/client/SocketProxy;-><init>(ILcn/banny/rp/RequestConnect;Lcn/banny/rp/client/ReverseProxyClient;Ljava/nio/channels/Selector;)V

    invoke-virtual {v0}, Lcn/banny/rp/client/SocketProxy;->connect()V

    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->socketMap:Ljava/util/Map;

    monitor-enter v1
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    :try_start_1
    iget-object v2, p0, Lcn/banny/rp/client/ReverseProxyClient;->socketMap:Ljava/util/Map;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v2, v3, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    monitor-exit v1

    :goto_0
    return-void

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v0
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    :catch_0
    move-exception v0

    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    invoke-virtual {p0, p1, v0}, Lcn/banny/rp/client/ReverseProxyClient;->sendException(ILjava/lang/Throwable;)V

    goto :goto_0
.end method

.method private parseWriteData(ILjava/io/DataInput;)V
    .locals 3

    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->socketMap:Ljava/util/Map;

    monitor-enter v1

    :try_start_0
    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->socketMap:Ljava/util/Map;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v0, v2}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcn/banny/rp/client/SocketProxy;

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_0

    new-instance v0, Ljava/io/EOFException;

    const-string v1, "parseWriteData"

    invoke-direct {v0, v1}, Ljava/io/EOFException;-><init>(Ljava/lang/String;)V

    throw v0

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    :cond_0
    invoke-interface {p2}, Ljava/io/DataInput;->readInt()I

    move-result v1

    new-array v1, v1, [B

    invoke-interface {p2, v1}, Ljava/io/DataInput;->readFully([B)V

    invoke-virtual {v0, v1}, Lcn/banny/rp/client/SocketProxy;->writeData([B)V

    return-void
.end method

.method private processRead(Ljava/nio/channels/SocketChannel;Lcn/banny/rp/client/SocketSession;Ljava/nio/channels/SelectionKey;)V
    .locals 2

    :goto_0
    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->readBuffer:Ljava/nio/ByteBuffer;

    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->clear()Ljava/nio/Buffer;

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->readBuffer:Ljava/nio/ByteBuffer;

    invoke-virtual {p1, v0}, Ljava/nio/channels/SocketChannel;->read(Ljava/nio/ByteBuffer;)I

    move-result v0

    const/4 v1, -0x1

    if-ne v0, v1, :cond_0

    new-instance v0, Ljava/io/EOFException;

    invoke-direct {v0}, Ljava/io/EOFException;-><init>()V

    throw v0

    :cond_0
    const/4 v1, 0x1

    if-ge v0, v1, :cond_1

    return-void

    :cond_1
    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->readBuffer:Ljava/nio/ByteBuffer;

    invoke-virtual {v1}, Ljava/nio/ByteBuffer;->flip()Ljava/nio/Buffer;

    new-array v0, v0, [B

    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->readBuffer:Ljava/nio/ByteBuffer;

    invoke-virtual {v1, v0}, Ljava/nio/ByteBuffer;->get([B)Ljava/nio/ByteBuffer;

    invoke-interface {p2, p1, v0}, Lcn/banny/rp/client/SocketSession;->pushData(Ljava/nio/channels/SocketChannel;[B)V

    goto :goto_0
.end method

.method private receivedPacket(Ljava/nio/channels/SocketChannel;[B)V
    .locals 1

    sget-boolean v0, Lcn/banny/rp/ReverseProxy;->debug:Z

    if-eqz v0, :cond_0

    const-string v0, "receivedPacket"

    invoke-static {p2, v0}, Lcn/banny/rp/ReverseProxy;->inspect([BLjava/lang/String;)V

    :cond_0
    invoke-direct {p0, p1, p2}, Lcn/banny/rp/client/ReverseProxyClient;->messageReceived(Ljava/nio/channels/SocketChannel;Ljava/lang/Object;)V

    return-void
.end method

.method private requestAuth()V
    .locals 4

    const/4 v2, 0x0

    :try_start_0
    new-instance v3, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v3}, Ljava/io/ByteArrayOutputStream;-><init>()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :try_start_1
    new-instance v1, Ljava/io/DataOutputStream;

    invoke-direct {v1, v3}, Ljava/io/DataOutputStream;-><init>(Ljava/io/OutputStream;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    const/4 v0, 0x7

    :try_start_2
    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeByte(I)V

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->username:Ljava/lang/String;

    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->password:Ljava/lang/String;

    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    invoke-virtual {v3}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v0

    invoke-virtual {p0, v0}, Lcn/banny/rp/client/ReverseProxyClient;->sendResponse([B)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    return-void

    :catchall_0
    move-exception v0

    move-object v1, v2

    :goto_0
    invoke-static {v2}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    throw v0

    :catchall_1
    move-exception v0

    move-object v1, v2

    move-object v2, v3

    goto :goto_0

    :catchall_2
    move-exception v0

    move-object v2, v3

    goto :goto_0
.end method

.method private sessionIdle(Ljava/nio/channels/SocketChannel;)V
    .locals 0

    invoke-direct {p0, p1}, Lcn/banny/rp/client/ReverseProxyClient;->closeSession(Ljava/nio/channels/SocketChannel;)V

    return-void
.end method


# virtual methods
.method public deliverMessage([B)V
    .locals 4

    const/4 v2, 0x0

    :try_start_0
    new-instance v3, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v3}, Ljava/io/ByteArrayOutputStream;-><init>()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :try_start_1
    new-instance v1, Ljava/io/DataOutputStream;

    invoke-direct {v1, v3}, Ljava/io/DataOutputStream;-><init>(Ljava/io/OutputStream;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    const/16 v0, 0x9

    :try_start_2
    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeByte(I)V

    array-length v0, p1

    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeInt(I)V

    invoke-virtual {v1, p1}, Ljava/io/DataOutputStream;->write([B)V

    invoke-virtual {v3}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v0

    invoke-virtual {p0, v0}, Lcn/banny/rp/client/ReverseProxyClient;->sendResponse([B)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    return-void

    :catchall_0
    move-exception v0

    move-object v1, v2

    :goto_0
    invoke-static {v2}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    throw v0

    :catchall_1
    move-exception v0

    move-object v1, v2

    move-object v2, v3

    goto :goto_0

    :catchall_2
    move-exception v0

    move-object v2, v3

    goto :goto_0
.end method

.method public destroy()V
    .locals 1

    const/4 v0, 0x1

    iput-boolean v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->canStop:Z

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->selector:Ljava/nio/channels/Selector;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->selector:Ljava/nio/channels/Selector;

    invoke-static {v0}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/nio/channels/Selector;)V

    const/4 v0, 0x0

    iput-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->selector:Ljava/nio/channels/Selector;

    :cond_0
    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    invoke-direct {p0, v0}, Lcn/banny/rp/client/ReverseProxyClient;->closeSession(Ljava/nio/channels/SocketChannel;)V

    :cond_1
    return-void
.end method

.method public exceptionCaught(Ljava/nio/channels/SocketChannel;Ljava/lang/Throwable;)V
    .locals 0

    invoke-virtual {p2}, Ljava/lang/Throwable;->printStackTrace()V

    return-void
.end method

.method public getAuthUser()Ljava/lang/String;
    .locals 1

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->username:Ljava/lang/String;

    return-object v0
.end method

.method public initialize()V
    .locals 2

    invoke-static {}, Ljava/nio/channels/Selector;->open()Ljava/nio/channels/Selector;

    move-result-object v0

    iput-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->selector:Ljava/nio/channels/Selector;

    const/4 v0, 0x0

    iput-boolean v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->canStop:Z

    new-instance v0, Ljava/lang/Thread;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, p0, v1}, Ljava/lang/Thread;-><init>(Ljava/lang/Runnable;Ljava/lang/String;)V

    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    return-void
.end method

.method public isAuthOK()Z
    .locals 1

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->username:Ljava/lang/String;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->password:Ljava/lang/String;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->authResult:Lcn/banny/rp/auth/AuthResult;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->authResult:Lcn/banny/rp/auth/AuthResult;

    invoke-virtual {v0}, Lcn/banny/rp/auth/AuthResult;->getStatus()I

    move-result v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isConnected()Z
    .locals 1

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public login(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1

    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, Lcn/banny/rp/client/ReverseProxyClient;->login(Ljava/lang/String;Ljava/lang/String;I)V

    return-void
.end method

.method public login(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 1

    const/4 v0, 0x0

    iput-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->authResult:Lcn/banny/rp/auth/AuthResult;

    iput-object p1, p0, Lcn/banny/rp/client/ReverseProxyClient;->username:Ljava/lang/String;

    iput-object p2, p0, Lcn/banny/rp/client/ReverseProxyClient;->password:Ljava/lang/String;

    iput p3, p0, Lcn/banny/rp/client/ReverseProxyClient;->aliveTimeMillis:I

    invoke-direct {p0}, Lcn/banny/rp/client/ReverseProxyClient;->connectReverseProxyServer()V

    return-void
.end method

.method public logout()V
    .locals 1

    const/4 v0, 0x0

    iput-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->username:Ljava/lang/String;

    iput-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->password:Ljava/lang/String;

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    invoke-direct {p0, v0}, Lcn/banny/rp/client/ReverseProxyClient;->closeSession(Ljava/nio/channels/SocketChannel;)V

    :cond_0
    return-void
.end method

.method notifySessionClosed(I)V
    .locals 4

    const/4 v2, 0x0

    :try_start_0
    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->socketMap:Ljava/util/Map;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->socketMap:Ljava/util/Map;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v0, v3}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    new-instance v3, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v3}, Ljava/io/ByteArrayOutputStream;-><init>()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :try_start_3
    new-instance v1, Ljava/io/DataOutputStream;

    invoke-direct {v1, v3}, Ljava/io/DataOutputStream;-><init>(Ljava/io/OutputStream;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    const/4 v0, 0x5

    :try_start_4
    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeByte(I)V

    invoke-virtual {v1, p1}, Ljava/io/DataOutputStream;->writeInt(I)V

    invoke-virtual {v3}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v0

    invoke-virtual {p0, v0}, Lcn/banny/rp/client/ReverseProxyClient;->sendResponse([B)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    return-void

    :catchall_0
    move-exception v0

    :try_start_5
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :catchall_1
    move-exception v0

    move-object v1, v2

    :goto_0
    invoke-static {v2}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    throw v0

    :catchall_2
    move-exception v0

    move-object v1, v2

    move-object v2, v3

    goto :goto_0

    :catchall_3
    move-exception v0

    move-object v2, v3

    goto :goto_0
.end method

.method public processConnect(Ljava/nio/channels/SocketChannel;)V
    .locals 2

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "processConnect"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public pushData(Ljava/nio/channels/SocketChannel;[B)V
    .locals 3

    const/4 v2, -0x1

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->pipedIn:Ljava/io/PipedInputStream;

    invoke-virtual {v0}, Ljava/io/PipedInputStream;->available()I

    move-result v0

    array-length v1, p2

    add-int/2addr v0, v1

    const/high16 v1, 0x10000

    if-le v0, v1, :cond_0

    new-instance v0, Ljava/io/IOException;

    const-string v1, "pushData buffer overflow"

    invoke-direct {v0, v1}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->pipedOut:Ljava/io/PipedOutputStream;

    invoke-virtual {v0, p2}, Ljava/io/PipedOutputStream;->write([B)V

    :goto_0
    iget v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->packetSize:I

    if-ne v0, v2, :cond_3

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->dis:Ljava/io/DataInputStream;

    invoke-virtual {v0}, Ljava/io/DataInputStream;->available()I

    move-result v0

    const/4 v1, 0x4

    if-ge v0, v1, :cond_2

    :cond_1
    return-void

    :cond_2
    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->dis:Ljava/io/DataInputStream;

    invoke-virtual {v0}, Ljava/io/DataInputStream;->readInt()I

    move-result v0

    iput v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->packetSize:I

    :cond_3
    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->dis:Ljava/io/DataInputStream;

    invoke-virtual {v0}, Ljava/io/DataInputStream;->available()I

    move-result v0

    iget v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->packetSize:I

    if-lt v0, v1, :cond_1

    iget v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->packetSize:I

    new-array v0, v0, [B

    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->dis:Ljava/io/DataInputStream;

    invoke-virtual {v1, v0}, Ljava/io/DataInputStream;->readFully([B)V

    iput v2, p0, Lcn/banny/rp/client/ReverseProxyClient;->packetSize:I

    invoke-direct {p0, p1, v0}, Lcn/banny/rp/client/ReverseProxyClient;->receivedPacket(Ljava/nio/channels/SocketChannel;[B)V

    goto :goto_0
.end method

.method public run()V
    .locals 8

    :cond_0
    :goto_0
    iget-boolean v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->canStop:Z

    if-eqz v0, :cond_1

    return-void

    :cond_1
    :try_start_0
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    invoke-direct {p0, v0, v1}, Lcn/banny/rp/client/ReverseProxyClient;->checkNetworkChange(J)V

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    if-nez v0, :cond_2

    invoke-virtual {p0}, Lcn/banny/rp/client/ReverseProxyClient;->isAuthOK()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-direct {p0}, Lcn/banny/rp/client/ReverseProxyClient;->connectReverseProxyServer()V
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    invoke-virtual {v0}, Ljava/lang/Throwable;->printStackTrace()V

    const-wide/16 v0, 0x3e8

    :try_start_1
    invoke-static {v0, v1}, Ljava/lang/Thread;->sleep(J)V
    :try_end_1
    .catch Ljava/lang/Throwable; {:try_start_1 .. :try_end_1} :catch_1

    goto :goto_0

    :catch_1
    move-exception v0

    goto :goto_0

    :cond_2
    :try_start_2
    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->selector:Ljava/nio/channels/Selector;

    const-wide/16 v2, 0x1f4

    invoke-virtual {v1, v2, v3}, Ljava/nio/channels/Selector;->select(J)I

    move-result v1

    if-lez v1, :cond_3

    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->selector:Ljava/nio/channels/Selector;

    invoke-virtual {v1}, Ljava/nio/channels/Selector;->selectedKeys()Ljava/util/Set;
    :try_end_2
    .catch Ljava/lang/Throwable; {:try_start_2 .. :try_end_2} :catch_0

    move-result-object v1

    :try_start_3
    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    invoke-direct {p0, v2}, Lcn/banny/rp/client/ReverseProxyClient;->checkSelectionKeys(Ljava/util/Iterator;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-interface {v1}, Ljava/util/Set;->clear()V

    :cond_3
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v2

    invoke-direct {p0, v0, v2, v3}, Lcn/banny/rp/client/ReverseProxyClient;->checkSession(Ljava/nio/channels/SocketChannel;J)V

    iget-wide v4, p0, Lcn/banny/rp/client/ReverseProxyClient;->checkSessionTime:J

    const-wide/16 v6, 0x0

    cmp-long v1, v4, v6

    if-lez v1, :cond_0

    iget-wide v4, p0, Lcn/banny/rp/client/ReverseProxyClient;->checkSessionTime:J

    sub-long/2addr v2, v4

    const-wide/16 v4, 0x3a98

    cmp-long v1, v2, v4

    if-lez v1, :cond_0

    invoke-direct {p0, v0}, Lcn/banny/rp/client/ReverseProxyClient;->sessionIdle(Ljava/nio/channels/SocketChannel;)V

    goto :goto_0

    :catchall_0
    move-exception v0

    invoke-interface {v1}, Ljava/util/Set;->clear()V

    throw v0
    :try_end_4
    .catch Ljava/lang/Throwable; {:try_start_4 .. :try_end_4} :catch_0
.end method

.method sendException(ILjava/lang/Throwable;)V
    .locals 4

    const/4 v2, 0x0

    :try_start_0
    new-instance v3, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v3}, Ljava/io/ByteArrayOutputStream;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :try_start_1
    new-instance v1, Ljava/io/DataOutputStream;

    invoke-direct {v1, v3}, Ljava/io/DataOutputStream;-><init>(Ljava/io/OutputStream;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_2
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    const/4 v0, 0x6

    :try_start_2
    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeByte(I)V

    invoke-virtual {v1, p1}, Ljava/io/DataOutputStream;->writeInt(I)V

    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    :goto_0
    invoke-virtual {v3}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v0

    invoke-virtual {p0, v0}, Lcn/banny/rp/client/ReverseProxyClient;->sendResponse([B)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    :goto_1
    return-void

    :cond_0
    :try_start_3
    invoke-virtual {p2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Class;->getCanonicalName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    goto :goto_0

    :catch_0
    move-exception v0

    move-object v2, v3

    :goto_2
    :try_start_4
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    invoke-static {v2}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    goto :goto_1

    :catchall_0
    move-exception v0

    move-object v1, v2

    move-object v3, v2

    :goto_3
    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    throw v0

    :catchall_1
    move-exception v0

    move-object v1, v2

    goto :goto_3

    :catchall_2
    move-exception v0

    goto :goto_3

    :catchall_3
    move-exception v0

    move-object v3, v2

    goto :goto_3

    :catch_1
    move-exception v0

    move-object v1, v2

    goto :goto_2

    :catch_2
    move-exception v0

    move-object v1, v2

    move-object v2, v3

    goto :goto_2
.end method

.method sendResponse([B)V
    .locals 3

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    if-nez v0, :cond_0

    :goto_0
    return-void

    :cond_0
    sget-boolean v0, Lcn/banny/rp/ReverseProxy;->debug:Z

    if-eqz v0, :cond_1

    const-string v0, "encode"

    invoke-static {p1, v0}, Lcn/banny/rp/ReverseProxy;->inspect([BLjava/lang/String;)V

    :cond_1
    array-length v0, p1

    add-int/lit8 v0, v0, 0x4

    invoke-static {v0}, Ljava/nio/ByteBuffer;->allocate(I)Ljava/nio/ByteBuffer;

    move-result-object v0

    array-length v1, p1

    invoke-virtual {v0, v1}, Ljava/nio/ByteBuffer;->putInt(I)Ljava/nio/ByteBuffer;

    invoke-virtual {v0, p1}, Ljava/nio/ByteBuffer;->put([B)Ljava/nio/ByteBuffer;

    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->flip()Ljava/nio/Buffer;

    :cond_2
    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    invoke-virtual {v1, v0}, Ljava/nio/channels/SocketChannel;->write(Ljava/nio/ByteBuffer;)I

    move-result v1

    const/4 v2, 0x1

    if-ge v1, v2, :cond_3

    invoke-static {}, Ljava/lang/Thread;->yield()V

    :cond_3
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v1

    if-nez v1, :cond_2

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    invoke-direct {p0, v0, p1}, Lcn/banny/rp/client/ReverseProxyClient;->messageSent(Ljava/nio/channels/SocketChannel;Ljava/lang/Object;)V

    goto :goto_0
.end method

.method public sessionClosed(Ljava/nio/channels/SocketChannel;)V
    .locals 4

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    if-ne v0, p1, :cond_1

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->selector:Ljava/nio/channels/Selector;

    invoke-virtual {p1, v0}, Ljava/nio/channels/SocketChannel;->keyFor(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Ljava/nio/channels/SelectionKey;->cancel()V

    :cond_0
    invoke-static {p1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/nio/channels/Channel;)V

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->dis:Ljava/io/DataInputStream;

    invoke-static {v0}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/InputStream;)V

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->pipedOut:Ljava/io/PipedOutputStream;

    invoke-static {v0}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->pipedIn:Ljava/io/PipedInputStream;

    invoke-static {v0}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/InputStream;)V

    const/4 v0, 0x0

    iput-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    invoke-direct {p0}, Lcn/banny/rp/client/ReverseProxyClient;->getProxies()[Lcn/banny/rp/client/SocketProxy;

    move-result-object v1

    array-length v2, v1

    const/4 v0, 0x0

    :goto_0
    if-lt v0, v2, :cond_2

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->authListener:Lcn/banny/rp/client/AuthListener;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->authListener:Lcn/banny/rp/client/AuthListener;

    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->authResult:Lcn/banny/rp/auth/AuthResult;

    invoke-interface {v0, v1}, Lcn/banny/rp/client/AuthListener;->onDisconnect(Lcn/banny/rp/auth/AuthResult;)V

    :cond_1
    return-void

    :cond_2
    aget-object v3, v1, v0

    invoke-virtual {v3}, Lcn/banny/rp/client/SocketProxy;->close()V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0
.end method

.method public sessionOpened(Ljava/nio/channels/SocketChannel;)V
    .locals 2

    iget-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    if-nez v0, :cond_0

    const/4 v0, -0x1

    iput v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->packetSize:I

    new-instance v0, Ljava/io/PipedInputStream;

    const/high16 v1, 0x10000

    invoke-direct {v0, v1}, Ljava/io/PipedInputStream;-><init>(I)V

    iput-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->pipedIn:Ljava/io/PipedInputStream;

    new-instance v0, Ljava/io/PipedOutputStream;

    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->pipedIn:Ljava/io/PipedInputStream;

    invoke-direct {v0, v1}, Ljava/io/PipedOutputStream;-><init>(Ljava/io/PipedInputStream;)V

    iput-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->pipedOut:Ljava/io/PipedOutputStream;

    new-instance v0, Ljava/io/DataInputStream;

    iget-object v1, p0, Lcn/banny/rp/client/ReverseProxyClient;->pipedIn:Ljava/io/PipedInputStream;

    invoke-direct {v0, v1}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V

    iput-object v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->dis:Ljava/io/DataInputStream;

    iput-object p1, p0, Lcn/banny/rp/client/ReverseProxyClient;->session:Ljava/nio/channels/SocketChannel;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->checkSessionTime:J

    iget-wide v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->checkSessionTime:J

    iput-wide v0, p0, Lcn/banny/rp/client/ReverseProxyClient;->lastAliveTime:J

    invoke-direct {p0}, Lcn/banny/rp/client/ReverseProxyClient;->requestAuth()V

    :cond_0
    return-void
.end method

.method public setAuthListener(Lcn/banny/rp/client/AuthListener;)V
    .locals 0

    iput-object p1, p0, Lcn/banny/rp/client/ReverseProxyClient;->authListener:Lcn/banny/rp/client/AuthListener;

    return-void
.end method

.method public setDataHandler(Lcn/banny/rp/handler/ExtDataHandler;)V
    .locals 0

    iput-object p1, p0, Lcn/banny/rp/client/ReverseProxyClient;->dataHandler:Lcn/banny/rp/handler/ExtDataHandler;

    return-void
.end method
