.class public Lcn/banny/rp/client/SocketProxy;
.super Ljava/lang/Object;

# interfaces
.implements Lcn/banny/rp/client/SocketSession;


# instance fields
.field private final client:Lcn/banny/rp/client/ReverseProxyClient;

.field private final connect:Lcn/banny/rp/RequestConnect;

.field private final selector:Ljava/nio/channels/Selector;

.field session:Ljava/nio/channels/SocketChannel;

.field private final socket:I


# direct methods
.method public constructor <init>(ILcn/banny/rp/RequestConnect;Lcn/banny/rp/client/ReverseProxyClient;Ljava/nio/channels/Selector;)V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput p1, p0, Lcn/banny/rp/client/SocketProxy;->socket:I

    iput-object p2, p0, Lcn/banny/rp/client/SocketProxy;->connect:Lcn/banny/rp/RequestConnect;

    iput-object p3, p0, Lcn/banny/rp/client/SocketProxy;->client:Lcn/banny/rp/client/ReverseProxyClient;

    iput-object p4, p0, Lcn/banny/rp/client/SocketProxy;->selector:Ljava/nio/channels/Selector;

    return-void
.end method

.method private messageReceived(Ljava/nio/channels/SocketChannel;Ljava/lang/Object;)V
    .locals 4

    const/4 v2, 0x0

    check-cast p2, [B

    :try_start_0
    new-instance v3, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v3}, Ljava/io/ByteArrayOutputStream;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :try_start_1
    new-instance v1, Ljava/io/DataOutputStream;

    invoke-direct {v1, v3}, Ljava/io/DataOutputStream;-><init>(Ljava/io/OutputStream;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    const/4 v0, 0x4

    :try_start_2
    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeByte(I)V

    iget v0, p0, Lcn/banny/rp/client/SocketProxy;->socket:I

    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeInt(I)V

    array-length v0, p2

    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeInt(I)V

    invoke-virtual {v1, p2}, Ljava/io/DataOutputStream;->write([B)V

    iget-object v0, p0, Lcn/banny/rp/client/SocketProxy;->client:Lcn/banny/rp/client/ReverseProxyClient;

    invoke-virtual {v3}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v2

    invoke-virtual {v0, v2}, Lcn/banny/rp/client/ReverseProxyClient;->sendResponse([B)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    :goto_0
    return-void

    :catch_0
    move-exception v0

    move-object v1, v2

    :goto_1
    :try_start_3
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    invoke-virtual {p0}, Lcn/banny/rp/client/SocketProxy;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    invoke-static {v2}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    goto :goto_0

    :catchall_0
    move-exception v0

    move-object v1, v2

    move-object v3, v2

    :goto_2
    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    throw v0

    :catchall_1
    move-exception v0

    move-object v1, v2

    goto :goto_2

    :catchall_2
    move-exception v0

    goto :goto_2

    :catchall_3
    move-exception v0

    move-object v3, v2

    goto :goto_2

    :catch_1
    move-exception v0

    move-object v1, v2

    move-object v2, v3

    goto :goto_1

    :catch_2
    move-exception v0

    move-object v2, v3

    goto :goto_1
.end method

.method private sessionOpened(Ljava/nio/channels/SocketChannel;)V
    .locals 1

    iget-object v0, p0, Lcn/banny/rp/client/SocketProxy;->session:Ljava/nio/channels/SocketChannel;

    if-nez v0, :cond_0

    iput-object p1, p0, Lcn/banny/rp/client/SocketProxy;->session:Ljava/nio/channels/SocketChannel;

    :cond_0
    return-void
.end method


# virtual methods
.method close()V
    .locals 2

    iget-object v0, p0, Lcn/banny/rp/client/SocketProxy;->session:Ljava/nio/channels/SocketChannel;

    if-nez v0, :cond_0

    :goto_0
    return-void

    :cond_0
    iget-object v0, p0, Lcn/banny/rp/client/SocketProxy;->session:Ljava/nio/channels/SocketChannel;

    iget-object v1, p0, Lcn/banny/rp/client/SocketProxy;->selector:Ljava/nio/channels/Selector;

    invoke-virtual {v0, v1}, Ljava/nio/channels/SocketChannel;->keyFor(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;

    move-result-object v0

    if-eqz v0, :cond_1

    invoke-virtual {v0}, Ljava/nio/channels/SelectionKey;->cancel()V

    :cond_1
    iget-object v0, p0, Lcn/banny/rp/client/SocketProxy;->session:Ljava/nio/channels/SocketChannel;

    invoke-static {v0}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/nio/channels/Channel;)V

    const/4 v0, 0x0

    iput-object v0, p0, Lcn/banny/rp/client/SocketProxy;->session:Ljava/nio/channels/SocketChannel;

    :try_start_0
    iget-object v0, p0, Lcn/banny/rp/client/SocketProxy;->client:Lcn/banny/rp/client/ReverseProxyClient;

    iget v1, p0, Lcn/banny/rp/client/SocketProxy;->socket:I

    invoke-virtual {v0, v1}, Lcn/banny/rp/client/ReverseProxyClient;->notifySessionClosed(I)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_0
.end method

.method connect()V
    .locals 5

    invoke-static {}, Ljava/nio/channels/SocketChannel;->open()Ljava/nio/channels/SocketChannel;

    move-result-object v0

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Ljava/nio/channels/SocketChannel;->configureBlocking(Z)Ljava/nio/channels/SelectableChannel;

    invoke-virtual {v0}, Ljava/nio/channels/SocketChannel;->socket()Ljava/net/Socket;

    move-result-object v1

    iget-object v2, p0, Lcn/banny/rp/client/SocketProxy;->connect:Lcn/banny/rp/RequestConnect;

    invoke-virtual {v2}, Lcn/banny/rp/RequestConnect;->isKeepAlive()Z

    move-result v2

    invoke-virtual {v1, v2}, Ljava/net/Socket;->setKeepAlive(Z)V

    iget-object v2, p0, Lcn/banny/rp/client/SocketProxy;->connect:Lcn/banny/rp/RequestConnect;

    invoke-virtual {v2}, Lcn/banny/rp/RequestConnect;->getReceiveBufferSize()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/net/Socket;->setReceiveBufferSize(I)V

    iget-object v2, p0, Lcn/banny/rp/client/SocketProxy;->connect:Lcn/banny/rp/RequestConnect;

    invoke-virtual {v2}, Lcn/banny/rp/RequestConnect;->getSendBufferSize()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/net/Socket;->setSendBufferSize(I)V

    iget-object v2, p0, Lcn/banny/rp/client/SocketProxy;->connect:Lcn/banny/rp/RequestConnect;

    invoke-virtual {v2}, Lcn/banny/rp/RequestConnect;->isOobInline()Z

    move-result v2

    invoke-virtual {v1, v2}, Ljava/net/Socket;->setOOBInline(Z)V

    iget-object v2, p0, Lcn/banny/rp/client/SocketProxy;->connect:Lcn/banny/rp/RequestConnect;

    invoke-virtual {v2}, Lcn/banny/rp/RequestConnect;->isReuseAddress()Z

    move-result v2

    invoke-virtual {v1, v2}, Ljava/net/Socket;->setReuseAddress(Z)V

    iget-object v2, p0, Lcn/banny/rp/client/SocketProxy;->connect:Lcn/banny/rp/RequestConnect;

    invoke-virtual {v2}, Lcn/banny/rp/RequestConnect;->isTcpNoDelay()Z

    move-result v2

    invoke-virtual {v1, v2}, Ljava/net/Socket;->setTcpNoDelay(Z)V

    iget-object v2, p0, Lcn/banny/rp/client/SocketProxy;->connect:Lcn/banny/rp/RequestConnect;

    invoke-virtual {v2}, Lcn/banny/rp/RequestConnect;->getTrafficClass()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/net/Socket;->setTrafficClass(I)V

    iget-object v1, p0, Lcn/banny/rp/client/SocketProxy;->selector:Ljava/nio/channels/Selector;

    const/16 v2, 0x8

    invoke-virtual {v0, v1, v2}, Ljava/nio/channels/SocketChannel;->register(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;

    move-result-object v1

    invoke-virtual {v1, p0}, Ljava/nio/channels/SelectionKey;->attach(Ljava/lang/Object;)Ljava/lang/Object;

    :try_start_0
    new-instance v2, Ljava/net/InetSocketAddress;

    iget-object v3, p0, Lcn/banny/rp/client/SocketProxy;->connect:Lcn/banny/rp/RequestConnect;

    invoke-virtual {v3}, Lcn/banny/rp/RequestConnect;->getHost()Ljava/lang/String;

    move-result-object v3

    iget-object v4, p0, Lcn/banny/rp/client/SocketProxy;->connect:Lcn/banny/rp/RequestConnect;

    invoke-virtual {v4}, Lcn/banny/rp/RequestConnect;->getPort()I

    move-result v4

    invoke-direct {v2, v3, v4}, Ljava/net/InetSocketAddress;-><init>(Ljava/lang/String;I)V

    invoke-virtual {v0, v2}, Ljava/nio/channels/SocketChannel;->connect(Ljava/net/SocketAddress;)Z

    invoke-direct {p0, v0}, Lcn/banny/rp/client/SocketProxy;->sessionOpened(Ljava/nio/channels/SocketChannel;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    return-void

    :catch_0
    move-exception v0

    invoke-virtual {v1}, Ljava/nio/channels/SelectionKey;->cancel()V

    throw v0
.end method

.method public exceptionCaught(Ljava/nio/channels/SocketChannel;Ljava/lang/Throwable;)V
    .locals 0

    invoke-virtual {p2}, Ljava/lang/Throwable;->printStackTrace()V

    return-void
.end method

.method public getSocket()I
    .locals 1

    iget v0, p0, Lcn/banny/rp/client/SocketProxy;->socket:I

    return v0
.end method

.method public processConnect(Ljava/nio/channels/SocketChannel;)V
    .locals 5

    const/4 v2, 0x0

    :try_start_0
    invoke-virtual {p1}, Ljava/nio/channels/SocketChannel;->finishConnect()Z

    iget-object v0, p0, Lcn/banny/rp/client/SocketProxy;->selector:Ljava/nio/channels/Selector;

    const/4 v1, 0x1

    invoke-virtual {p1, v0, v1}, Ljava/nio/channels/SocketChannel;->register(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;

    move-result-object v0

    invoke-virtual {v0, p0}, Ljava/nio/channels/SelectionKey;->attach(Ljava/lang/Object;)Ljava/lang/Object;

    invoke-virtual {p1}, Ljava/nio/channels/SocketChannel;->socket()Ljava/net/Socket;

    move-result-object v0

    new-instance v3, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v3}, Ljava/io/ByteArrayOutputStream;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :try_start_1
    new-instance v1, Ljava/io/DataOutputStream;

    invoke-direct {v1, v3}, Ljava/io/DataOutputStream;-><init>(Ljava/io/OutputStream;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    const/4 v2, 0x1

    :try_start_2
    invoke-virtual {v1, v2}, Ljava/io/DataOutputStream;->writeByte(I)V

    iget v2, p0, Lcn/banny/rp/client/SocketProxy;->socket:I

    invoke-virtual {v1, v2}, Ljava/io/DataOutputStream;->writeInt(I)V

    invoke-virtual {v0}, Ljava/net/Socket;->getLocalAddress()Ljava/net/InetAddress;

    move-result-object v2

    invoke-virtual {v2}, Ljava/net/InetAddress;->getAddress()[B

    move-result-object v2

    array-length v4, v2

    invoke-virtual {v1, v4}, Ljava/io/DataOutputStream;->writeByte(I)V

    invoke-virtual {v1, v2}, Ljava/io/DataOutputStream;->write([B)V

    invoke-virtual {v0}, Ljava/net/Socket;->getLocalPort()I

    move-result v0

    invoke-virtual {v1, v0}, Ljava/io/DataOutputStream;->writeShort(I)V

    iget-object v0, p0, Lcn/banny/rp/client/SocketProxy;->client:Lcn/banny/rp/client/ReverseProxyClient;

    invoke-virtual {v3}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v2

    invoke-virtual {v0, v2}, Lcn/banny/rp/client/ReverseProxyClient;->sendResponse([B)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    :goto_0
    return-void

    :catch_0
    move-exception v0

    move-object v1, v2

    :goto_1
    :try_start_3
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    iget-object v3, p0, Lcn/banny/rp/client/SocketProxy;->client:Lcn/banny/rp/client/ReverseProxyClient;

    iget v4, p0, Lcn/banny/rp/client/SocketProxy;->socket:I

    invoke-virtual {v3, v4, v0}, Lcn/banny/rp/client/ReverseProxyClient;->sendException(ILjava/lang/Throwable;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    invoke-static {v2}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    goto :goto_0

    :catchall_0
    move-exception v0

    move-object v1, v2

    move-object v3, v2

    :goto_2
    invoke-static {v3}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    invoke-static {v1}, Lcn/banny/rp/ReverseProxy;->closeQuietly(Ljava/io/OutputStream;)V

    throw v0

    :catchall_1
    move-exception v0

    move-object v1, v2

    goto :goto_2

    :catchall_2
    move-exception v0

    goto :goto_2

    :catchall_3
    move-exception v0

    move-object v3, v2

    goto :goto_2

    :catch_1
    move-exception v0

    move-object v1, v2

    move-object v2, v3

    goto :goto_1

    :catch_2
    move-exception v0

    move-object v2, v3

    goto :goto_1
.end method

.method public pushData(Ljava/nio/channels/SocketChannel;[B)V
    .locals 1

    sget-boolean v0, Lcn/banny/rp/ReverseProxy;->debug:Z

    invoke-direct {p0, p1, p2}, Lcn/banny/rp/client/SocketProxy;->messageReceived(Ljava/nio/channels/SocketChannel;Ljava/lang/Object;)V

    return-void
.end method

.method public sessionClosed(Ljava/nio/channels/SocketChannel;)V
    .locals 1

    iget-object v0, p0, Lcn/banny/rp/client/SocketProxy;->session:Ljava/nio/channels/SocketChannel;

    if-eq v0, p1, :cond_0

    :goto_0
    return-void

    :cond_0
    invoke-virtual {p0}, Lcn/banny/rp/client/SocketProxy;->close()V

    goto :goto_0
.end method

.method writeData([B)V
    .locals 2

    :try_start_0
    iget-object v0, p0, Lcn/banny/rp/client/SocketProxy;->session:Ljava/nio/channels/SocketChannel;

    invoke-static {p1}, Ljava/nio/ByteBuffer;->wrap([B)Ljava/nio/ByteBuffer;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/nio/channels/SocketChannel;->write(Ljava/nio/ByteBuffer;)I

    move-result v0

    const/4 v1, 0x1

    if-ge v0, v1, :cond_0

    new-instance v0, Ljava/io/EOFException;

    invoke-direct {v0}, Ljava/io/EOFException;-><init>()V

    throw v0
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    move-exception v0

    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    invoke-virtual {p0}, Lcn/banny/rp/client/SocketProxy;->close()V

    :cond_0
    return-void
.end method
