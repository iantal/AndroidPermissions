package roijf.sdfqlkj.sfakjdfa;

import android.content.Context;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.json.JSONArray;
import org.json.JSONObject;

public class bw
{
  public int e;
  public String f;
  public String g;
  public int h;
  
  public bw() {}
  
  public static String a(Context paramContext, List paramList)
  {
    try
    {
      paramList = a(paramList).toString();
      return paramList;
    }
    catch (Exception paramList)
    {
      new by(paramContext).a(paramList);
    }
    return "";
  }
  
  public static List a(Context paramContext, String paramString)
  {
    try
    {
      paramString = a(paramContext, new JSONArray(paramString));
      return paramString;
    }
    catch (Exception paramString)
    {
      new by(paramContext).a(paramString);
    }
    return new ArrayList();
  }
  
  public static List a(Context paramContext, JSONArray paramJSONArray)
  {
    localArrayList = new ArrayList();
    int i = 0;
    try
    {
      for (;;)
      {
        if (i >= paramJSONArray.length()) {
          return localArrayList;
        }
        bw localBw = new bw();
        localBw.a(paramJSONArray.getJSONObject(i));
        localArrayList.add(localBw);
        i += 1;
      }
      return localArrayList;
    }
    catch (Exception paramJSONArray)
    {
      new by(paramContext).a(paramJSONArray);
    }
  }
  
  public static JSONArray a(List paramList)
  {
    localJSONArray = new JSONArray();
    int i = 0;
    try
    {
      for (;;)
      {
        if (i >= paramList.size()) {
          return localJSONArray;
        }
        localJSONArray.put(((bw)paramList.get(i)).a());
        i += 1;
      }
      return localJSONArray;
    }
    catch (Exception paramList)
    {
      paramList.printStackTrace();
    }
  }
  
  private boolean a(String paramString1, String paramString2)
  {
    return Pattern.compile(paramString2, 32).matcher(paramString1).matches();
  }
  
  public JSONObject a()
  {
    JSONObject localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put(j.a, this.e);
      localJSONObject.put(j.b, this.f);
      localJSONObject.put(j.c, this.g);
      localJSONObject.put(j.d, this.h);
      return localJSONObject;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return localJSONObject;
  }
  
  public boolean a(JSONObject paramJSONObject)
  {
    try
    {
      this.e = paramJSONObject.getInt(j.a);
      this.f = paramJSONObject.getString(j.b);
      this.g = paramJSONObject.getString(j.c);
      this.h = paramJSONObject.getInt(j.d);
      return true;
    }
    catch (Exception paramJSONObject)
    {
      paramJSONObject.printStackTrace();
    }
    return false;
  }
  
  public void b()
  {
    this.h -= 1;
  }
  
  public boolean b(String paramString1, String paramString2)
  {
    boolean bool2 = true;
    boolean bool1;
    if (this.e == 1) {
      bool1 = a(paramString1, this.f);
    }
    do
    {
      do
      {
        return bool1;
        if (this.e == 2) {
          return a(paramString2, this.g);
        }
        if (this.e != 3) {
          break;
        }
        bool1 = bool2;
      } while (a(paramString1, this.f));
      bool1 = bool2;
    } while (a(paramString2, this.g));
    while ((this.e != 4) || (!a(paramString1, this.f)) || (!a(paramString2, this.g))) {
      return false;
    }
    return true;
  }
  
  public boolean equals(Object paramObject)
  {
    if (paramObject == null) {}
    do
    {
      do
      {
        return false;
        if (this == paramObject) {
          return true;
        }
      } while (getClass() != paramObject.getClass());
      paramObject = (bw)paramObject;
    } while ((paramObject.e != this.e) || (!paramObject.f.equals(this.f)) || (!paramObject.g.equals(this.g)) || (paramObject.h != this.h));
    return true;
  }
}
