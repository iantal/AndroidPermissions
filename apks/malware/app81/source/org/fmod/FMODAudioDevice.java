package org.fmod;

import android.media.AudioTrack;
import android.util.Log;
import java.nio.ByteBuffer;

public class FMODAudioDevice
  implements Runnable
{
  private static int k = 0;
  private static int l = 1;
  private static int m = 2;
  private static int n = 3;
  private volatile Thread a = null;
  private volatile boolean b = false;
  private volatile a c = null;
  private AudioTrack d = null;
  private boolean e = false;
  private ByteBuffer f = null;
  private byte[] g = null;
  private volatile a h;
  private Object i = new Object[0];
  private boolean j = false;
  
  public FMODAudioDevice() {}
  
  private void blockStreaming()
  {
    try
    {
      if ((isInitialized()) && (this.c == null))
      {
        this.c = new a();
        this.c.start();
      }
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  private native int fmodBlockStreaming();
  
  private native int fmodGetInfo(int paramInt);
  
  private native int fmodInitJni();
  
  private native int fmodProcess(ByteBuffer paramByteBuffer);
  
  private native int fmodUnblockStreaming();
  
  private void releaseAudioTrack()
  {
    if (this.d != null)
    {
      if (this.d.getState() == 1) {
        this.d.stop();
      }
      this.d.release();
      this.d = null;
    }
    this.f = null;
    this.g = null;
    this.e = false;
  }
  
  /* Error */
  private void unblockStreaming()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield 51	org/fmod/FMODAudioDevice:c	Lorg/fmod/FMODAudioDevice$a;
    //   6: astore_1
    //   7: aload_1
    //   8: ifnull +35 -> 43
    //   11: aload_0
    //   12: getfield 51	org/fmod/FMODAudioDevice:c	Lorg/fmod/FMODAudioDevice$a;
    //   15: invokestatic 107	org/fmod/FMODAudioDevice$a:a	(Lorg/fmod/FMODAudioDevice$a;)V
    //   18: aload_0
    //   19: getfield 51	org/fmod/FMODAudioDevice:c	Lorg/fmod/FMODAudioDevice$a;
    //   22: ldc2_w 108
    //   25: invokevirtual 113	org/fmod/FMODAudioDevice$a:join	(J)V
    //   28: aload_0
    //   29: getfield 51	org/fmod/FMODAudioDevice:c	Lorg/fmod/FMODAudioDevice$a;
    //   32: invokevirtual 116	org/fmod/FMODAudioDevice$a:isAlive	()Z
    //   35: ifne -24 -> 11
    //   38: aload_0
    //   39: aconst_null
    //   40: putfield 51	org/fmod/FMODAudioDevice:c	Lorg/fmod/FMODAudioDevice$a;
    //   43: aload_0
    //   44: monitorexit
    //   45: return
    //   46: astore_1
    //   47: aload_0
    //   48: monitorexit
    //   49: aload_1
    //   50: athrow
    //   51: astore_1
    //   52: goto -9 -> 43
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	55	0	this	FMODAudioDevice
    //   6	2	1	localA	a
    //   46	4	1	localObject	Object
    //   51	1	1	localInterruptedException	InterruptedException
    // Exception table:
    //   from	to	target	type
    //   2	7	46	finally
    //   11	43	46	finally
    //   11	43	51	java/lang/InterruptedException
  }
  
  public void audioTrackInitialized()
  {
    synchronized (this.i)
    {
      this.j = true;
      this.i.notifyAll();
      return;
    }
  }
  
  public void close()
  {
    try
    {
      stop();
      unblockStreaming();
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  native int fmodProcessMicData(ByteBuffer paramByteBuffer, int paramInt);
  
  public boolean isInitialized()
  {
    return fmodGetInfo(k) > 0;
  }
  
  public boolean isRunning()
  {
    return (this.a != null) && (this.a.isAlive());
  }
  
  public void run()
  {
    int i1 = 3;
    if ((!this.b) || (!isInitialized())) {}
    label360:
    label363:
    for (;;)
    {
      try
      {
        synchronized (this.i)
        {
          if (!this.j) {
            this.i.wait();
          }
        }
        if ((this.e) || (i1 <= 0)) {
          break label363;
        }
        releaseAudioTrack();
        int i4 = fmodGetInfo(k);
        int i3 = Math.round(AudioTrack.getMinBufferSize(i4, 3, 2) * 1.1F) & 0xFFFFFFFC;
        int i5 = fmodGetInfo(l);
        int i6 = fmodGetInfo(m);
        int i2 = i3;
        if (i5 * i6 * 4 > i3) {
          i2 = i6 * i5 * 4;
        }
        this.d = new AudioTrack(3, i4, 3, 2, i2, 1);
        if (this.d.getState() == 1)
        {
          bool = true;
          this.e = bool;
          if (!this.e) {
            continue;
          }
          this.f = ByteBuffer.allocateDirect(i5 * 2 * 2);
          this.g = new byte[this.f.capacity()];
          this.d.play();
          i1 = 3;
          if (!this.e) {
            break label360;
          }
          if (fmodGetInfo(n) != 1) {
            continue;
          }
          fmodProcess(this.f);
          this.f.get(this.g, 0, this.f.capacity());
          this.d.write(this.g, 0, this.f.capacity());
          this.f.position(0);
          break;
        }
        boolean bool = false;
        continue;
        Log.e("FMOD", "AudioTrack failed to initialize (status " + this.d.getState() + ")");
        releaseAudioTrack();
        i1 -= 1;
        continue;
        releaseAudioTrack();
        break;
        releaseAudioTrack();
        return;
      }
      catch (InterruptedException localInterruptedException)
      {
        continue;
      }
      break;
    }
  }
  
  public void start()
  {
    try
    {
      if (this.a != null) {
        stop();
      }
      this.a = new Thread(this, "FMODAudioDevice");
      this.a.setPriority(10);
      this.b = true;
      fmodInitJni();
      unblockStreaming();
      this.a.start();
      if (this.h != null) {
        this.h.b();
      }
      return;
    }
    finally {}
  }
  
  public int startAudioRecord(int paramInt1, int paramInt2, int paramInt3)
  {
    try
    {
      if (this.h == null)
      {
        this.h = new a(this, paramInt1, paramInt2);
        this.h.b();
      }
      paramInt1 = this.h.a();
      return paramInt1;
    }
    finally {}
  }
  
  /* Error */
  public void stop()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield 47	org/fmod/FMODAudioDevice:a	Ljava/lang/Thread;
    //   6: ifnull +57 -> 63
    //   9: aload_0
    //   10: iconst_0
    //   11: putfield 49	org/fmod/FMODAudioDevice:b	Z
    //   14: aload_0
    //   15: getfield 61	org/fmod/FMODAudioDevice:i	Ljava/lang/Object;
    //   18: astore_1
    //   19: aload_1
    //   20: monitorenter
    //   21: aload_0
    //   22: getfield 61	org/fmod/FMODAudioDevice:i	Ljava/lang/Object;
    //   25: invokevirtual 120	java/lang/Object:notifyAll	()V
    //   28: aload_1
    //   29: monitorexit
    //   30: aload_0
    //   31: getfield 47	org/fmod/FMODAudioDevice:a	Ljava/lang/Thread;
    //   34: invokevirtual 231	java/lang/Thread:join	()V
    //   37: aload_0
    //   38: aconst_null
    //   39: putfield 47	org/fmod/FMODAudioDevice:a	Ljava/lang/Thread;
    //   42: aload_0
    //   43: invokespecial 233	org/fmod/FMODAudioDevice:blockStreaming	()V
    //   46: goto -44 -> 2
    //   49: astore_1
    //   50: goto -48 -> 2
    //   53: astore_2
    //   54: aload_1
    //   55: monitorexit
    //   56: aload_2
    //   57: athrow
    //   58: astore_1
    //   59: aload_0
    //   60: monitorexit
    //   61: aload_1
    //   62: athrow
    //   63: aload_0
    //   64: getfield 219	org/fmod/FMODAudioDevice:h	Lorg/fmod/a;
    //   67: ifnull +10 -> 77
    //   70: aload_0
    //   71: getfield 219	org/fmod/FMODAudioDevice:h	Lorg/fmod/a;
    //   74: invokevirtual 235	org/fmod/a:c	()V
    //   77: aload_0
    //   78: monitorexit
    //   79: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	80	0	this	FMODAudioDevice
    //   49	6	1	localInterruptedException	InterruptedException
    //   58	4	1	localObject2	Object
    //   53	4	2	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   14	21	49	java/lang/InterruptedException
    //   30	46	49	java/lang/InterruptedException
    //   56	58	49	java/lang/InterruptedException
    //   21	30	53	finally
    //   54	56	53	finally
    //   2	14	58	finally
    //   14	21	58	finally
    //   30	46	58	finally
    //   56	58	58	finally
    //   63	77	58	finally
  }
  
  public void stopAudioRecord()
  {
    try
    {
      if (this.h != null)
      {
        this.h.c();
        this.h = null;
      }
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  private final class a
    extends Thread
  {
    private Object b = new Object();
    
    a()
    {
      super();
    }
    
    private void a()
    {
      synchronized (this.b)
      {
        this.b.notifyAll();
        return;
      }
    }
    
    public final void run()
    {
      if (FMODAudioDevice.this.fmodBlockStreaming() != 0) {
        throw new RuntimeException("Unable to block fmod streaming thread");
      }
      try
      {
        synchronized (this.b)
        {
          this.b.wait();
          if (FMODAudioDevice.this.fmodUnblockStreaming() != 0) {
            throw new RuntimeException("Unable to unblock fmod streaming thread");
          }
        }
        return;
      }
      catch (InterruptedException localInterruptedException)
      {
        for (;;) {}
      }
    }
  }
}
