package cu_iipsmobile;

import android.app.Activity;
import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.net.wifi.WifiManager;
import android.net.wifi.WifiManager.WifiLock;
import android.os.Environment;
import android.os.PowerManager;
import android.os.PowerManager.WakeLock;
import android.util.Log;
import java.io.File;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;

class CuIIPSMobile
{
  PowerManager.WakeLock wakeLock = null;
  WifiManager.WifiLock wifiLock = null;
  
  CuIIPSMobile() {}
  
  public boolean acquireWakeLock(Object paramObject, int paramInt)
  {
    paramObject = (Activity)paramObject;
    if (this.wakeLock == null)
    {
      paramObject = (PowerManager)paramObject.getSystemService("power");
      if (paramInt == 1) {
        this.wakeLock = paramObject.newWakeLock(536870913, "PostLocationService");
      }
      if (paramInt == 2) {
        this.wakeLock = paramObject.newWakeLock(536870918, "PostLocationService");
      }
      if (paramInt == 3) {
        this.wakeLock = paramObject.newWakeLock(536870922, "PostLocationService");
      }
      if (paramInt == 4) {
        this.wakeLock = paramObject.newWakeLock(536870938, "PostLocationService");
      }
      if (paramInt == 5) {
        this.wakeLock = paramObject.newWakeLock(805306368, "PostLocationService");
      }
      if (this.wakeLock != null)
      {
        this.wakeLock.acquire();
        return true;
      }
    }
    return false;
  }
  
  public boolean createWifiLock(Object paramObject, int paramInt)
  {
    paramObject = (Context)paramObject;
    Log.v("CuIIPSMobile::toggleWiFi", "changeobject end");
    this.wifiLock = ((WifiManager)paramObject.getSystemService("wifi")).createWifiLock(paramInt, "cu_iipsmobile_wifilock");
    return this.wifiLock != null;
  }
  
  public int installAPK(String paramString, Object paramObject)
  {
    paramObject = (Activity)paramObject;
    if ((paramString == null) || (paramString.length() == 0)) {}
    while (!isFileExist(paramString)) {
      return -1;
    }
    File localFile = new File(paramString);
    String str1;
    if (!paramString.startsWith(Environment.getExternalStorageDirectory().getPath()))
    {
      str1 = paramObject.getFilesDir().getPath();
      paramString = localFile.getAbsolutePath();
    }
    for (;;)
    {
      if ((paramString == null) || (str1.equals(paramString)))
      {
        paramString = new Intent();
        paramString.addFlags(268435456);
        paramString.setAction("android.intent.action.VIEW");
        paramString.setDataAndType(Uri.fromFile(localFile), "application/vnd.android.package-archive");
      }
      for (;;)
      {
        try
        {
          paramObject.startActivity(paramString);
          return 0;
        }
        catch (ActivityNotFoundException paramString)
        {
          String str2;
          paramString.printStackTrace();
        }
        try
        {
          str2 = "chmod 777 " + paramString;
          Runtime.getRuntime().exec(str2);
          paramString = new File(paramString).getParent();
        }
        catch (IOException paramString)
        {
          paramString.printStackTrace();
          return -2;
        }
      }
    }
    return -3;
  }
  
  public boolean isFileExist(String paramString)
  {
    paramString = new File(paramString);
    return (paramString.exists()) && (paramString.isFile());
  }
  
  public boolean isWifiLocked()
  {
    if (this.wifiLock != null) {
      return this.wifiLock.isHeld();
    }
    return false;
  }
  
  public boolean lockWifi()
  {
    if (isWifiLocked()) {
      return true;
    }
    if (this.wifiLock != null)
    {
      this.wifiLock.acquire();
      return true;
    }
    return false;
  }
  
  public boolean releaseLock()
  {
    if ((this.wifiLock != null) && (this.wifiLock.isHeld())) {
      this.wifiLock.release();
    }
    while (this.wifiLock == null) {
      return true;
    }
    return false;
  }
  
  public boolean releaseWakeLock()
  {
    if (this.wakeLock != null)
    {
      this.wakeLock.release();
      this.wakeLock = null;
      return true;
    }
    return false;
  }
  
  public boolean testnet(String paramString)
  {
    boolean bool = false;
    try
    {
      int i = ((HttpURLConnection)new URL(paramString).openConnection()).getResponseCode();
      Log.v("CuIIPSMobile::testnet", "connect code" + i);
      if (i == 200)
      {
        Log.v("CuIIPSMobile::testnet", "testnet net is ok");
        bool = true;
      }
      return bool;
    }
    catch (Exception paramString) {}
    return false;
  }
  
  public int toggleWiFi(Object paramObject, boolean paramBoolean)
  {
    Log.v("CuIIPSMobile::toggleWiFi", "starttoggleWiFi");
    paramObject = (Context)paramObject;
    Log.v("CuIIPSMobile::toggleWiFi", "changeobject end");
    paramObject = (WifiManager)paramObject.getSystemService("wifi");
    Log.v("CuIIPSMobile::toggleWiFi", "getservice");
    paramObject.setWifiEnabled(paramBoolean);
    Log.v("CuIIPSMobile::toggleWiFi", "enable end");
    return 1;
  }
}
