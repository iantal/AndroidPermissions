package com.pay.http;

import android.os.Message;
import java.util.HashMap;

public class APBaseHttpAns
  implements IAPHttpAns
{
  private APHttpHandle a;
  private HashMap b;
  private IAPHttpAnsObserver c;
  private APBaseHttpReq d;
  private int e = 0;
  public String errorMsg = "";
  private final int f = 1;
  public String httpReqKey = "";
  public int resultCode = -1;
  public String resultMsg = "";
  
  public APBaseHttpAns(APHttpHandle paramAPHttpHandle, IAPHttpAnsObserver paramIAPHttpAnsObserver, HashMap paramHashMap, String paramString)
  {
    this.a = paramAPHttpHandle;
    this.b = paramHashMap;
    this.httpReqKey = paramString;
    this.c = paramIAPHttpAnsObserver;
    this.a.register(this.httpReqKey, paramIAPHttpAnsObserver);
  }
  
  private void a()
  {
    Message localMessage = new Message();
    localMessage.what = 4;
    localMessage.obj = this;
    this.a.sendMessage(localMessage);
  }
  
  private void a(APBaseHttpReq paramAPBaseHttpReq)
  {
    this.b.put(this.httpReqKey, paramAPBaseHttpReq);
  }
  
  private void a(byte[] paramArrayOfByte)
  {
    paramArrayOfByte = new Message();
    paramArrayOfByte.what = 3;
    paramArrayOfByte.obj = this;
    this.a.sendMessage(paramArrayOfByte);
  }
  
  private void b()
  {
    Message localMessage = new Message();
    localMessage.what = 5;
    localMessage.obj = this;
    this.a.sendMessage(localMessage);
  }
  
  private void c()
  {
    this.b.remove(this.httpReqKey);
  }
  
  public String getErrorMessage()
  {
    return this.errorMsg;
  }
  
  public String getHttpReqKey()
  {
    return this.httpReqKey;
  }
  
  public int getResultCode()
  {
    return this.resultCode;
  }
  
  public String getResultMessage()
  {
    return this.resultMsg;
  }
  
  public void onError(APBaseHttpReq paramAPBaseHttpReq, int paramInt, String paramString)
  {
    this.errorMsg = paramString;
    this.resultMsg = paramString;
    this.resultCode = paramInt;
    c();
    onErrorAns(paramAPBaseHttpReq);
    a();
  }
  
  public void onErrorAns(APBaseHttpReq paramAPBaseHttpReq) {}
  
  public void onFinish(APBaseHttpReq paramAPBaseHttpReq)
  {
    c();
    if (paramAPBaseHttpReq.getContent() == null)
    {
      this.resultCode = -1;
      this.resultMsg = "";
      a();
      return;
    }
    this.d = paramAPBaseHttpReq;
    onFinishAns(paramAPBaseHttpReq.getContent(), paramAPBaseHttpReq);
    a(paramAPBaseHttpReq.getContent());
  }
  
  public void onFinishAns(byte[] paramArrayOfByte, APBaseHttpReq paramAPBaseHttpReq) {}
  
  public void onReceive(byte[] paramArrayOfByte, int paramInt, long paramLong, APBaseHttpReq paramAPBaseHttpReq)
  {
    onReceiveAns(paramArrayOfByte, paramInt, paramLong, paramAPBaseHttpReq);
  }
  
  public void onReceiveAns(byte[] paramArrayOfByte, int paramInt, long paramLong, APBaseHttpReq paramAPBaseHttpReq) {}
  
  public void onStart(APBaseHttpReq paramAPBaseHttpReq)
  {
    a(paramAPBaseHttpReq);
    onStartAns(paramAPBaseHttpReq);
  }
  
  public void onStartAns(APBaseHttpReq paramAPBaseHttpReq) {}
  
  public void onStop(APBaseHttpReq paramAPBaseHttpReq)
  {
    c();
    onStopAns(paramAPBaseHttpReq);
    b();
  }
  
  public void onStopAns(APBaseHttpReq paramAPBaseHttpReq) {}
  
  public void reRegister()
  {
    this.a.register(this.httpReqKey, this.c);
  }
  
  public void requestAgain()
  {
    if ((this.d != null) && (this.e <= 1))
    {
      this.e += 1;
      reRegister();
      new Thread(new a(this)).start();
      return;
    }
    reRegister();
    onError(this.d, -1, "");
  }
}
