package com.lucifer.phoneinfo;

import android.os.Bundle;
import android.util.Log;
import com.unity3d.player.UnityPlayerActivity;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class PhoneInfoMainActivity
  extends UnityPlayerActivity
{
  private static long KB = 1024L;
  private static String TAG = "Unity";
  
  public PhoneInfoMainActivity() {}
  
  public static String getCpuFrequence()
  {
    String[] arrayOfString = getCpuInfo();
    if (arrayOfString == null) {
      return "NoneFrequenceInfo";
    }
    return arrayOfString[1];
  }
  
  private static String[] getCpuInfo()
  {
    String[] arrayOfString = new String[3];
    arrayOfString[0] = "";
    arrayOfString[1] = "";
    arrayOfString[2] = "";
    for (;;)
    {
      try
      {
        BufferedReader localBufferedReader = new BufferedReader(new FileReader("/proc/cpuinfo"), 8192);
        localObject = localBufferedReader.readLine().split("\\s+");
        i = 2;
        if (i < localObject.length) {
          continue;
        }
        localObject = localBufferedReader.readLine().split("\\s+");
        arrayOfString[1] = (arrayOfString[1] + localObject[2]);
        localObject = localBufferedReader.readLine();
        if (localObject != null) {
          continue;
        }
        localBufferedReader.close();
      }
      catch (IOException localIOException)
      {
        Object localObject;
        int i;
        continue;
      }
      Log.i(TAG, "cpuinfo:" + arrayOfString[0] + " " + arrayOfString[1] + "  " + arrayOfString[2]);
      return arrayOfString;
      arrayOfString[0] = (arrayOfString[0] + localObject[i] + " ");
      i += 1;
      continue;
      if (((String)localObject).startsWith("Hardware"))
      {
        localObject = ((String)localObject).split("\\s+");
        arrayOfString[2] = (arrayOfString[2] + localObject[2]);
      }
    }
  }
  
  public static String getCpuType()
  {
    String[] arrayOfString = getCpuInfo();
    if (arrayOfString == null) {
      return "NoneCpuType";
    }
    return arrayOfString[0];
  }
  
  public static String getHardware()
  {
    String[] arrayOfString = getCpuInfo();
    if (arrayOfString == null) {
      return "NoneHardwareInfo";
    }
    return arrayOfString[2];
  }
  
  public static String getTotalMemory()
  {
    long l2 = 0L;
    long l1 = l2;
    for (;;)
    {
      try
      {
        BufferedReader localBufferedReader = new BufferedReader(new FileReader("/proc/meminfo"), 8192);
        l1 = l2;
        str = localBufferedReader.readLine();
        l1 = l2;
        arrayOfString = str.split("\\s+");
        l1 = l2;
        int j = arrayOfString.length;
        i = 0;
        if (i < j) {
          continue;
        }
        l1 = l2;
        l2 = Integer.valueOf(arrayOfString[1]).intValue() * KB;
        l1 = l2;
        localBufferedReader.close();
        l1 = l2;
      }
      catch (IOException localIOException)
      {
        String str;
        String[] arrayOfString;
        int i;
        continue;
      }
      return String.valueOf(l1);
      l1 = l2;
      Log.i(str, arrayOfString[i] + "\t");
      i += 1;
    }
  }
  
  public String getAvailMemory()
  {
    return "NoData";
  }
  
  public String getBasicInfo()
  {
    return "NoData";
  }
  
  public String getMacAddress()
  {
    return "NoData";
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
  }
}
