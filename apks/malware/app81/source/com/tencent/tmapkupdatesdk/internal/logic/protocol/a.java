package com.tencent.tmapkupdatesdk.internal.logic.protocol;

import com.qq.taf.jce.JceStruct;
import com.tencent.tmapkupdatesdk.internal.logic.protocol.jce.Response;
import com.tencent.tmassistantbase.util.TMLog;
import java.io.InputStream;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.entity.ByteArrayEntity;
import org.apache.http.util.ByteArrayBuffer;

public abstract class a
  implements Runnable
{
  private static String a = "BaseHttpRequest";
  private JceStruct b = null;
  private boolean c = false;
  
  public a() {}
  
  protected void a() {}
  
  public void a(JceStruct paramJceStruct)
  {
    this.b = paramJceStruct;
  }
  
  protected abstract void a(JceStruct paramJceStruct1, JceStruct paramJceStruct2);
  
  protected abstract void b();
  
  public boolean c()
  {
    return this.c;
  }
  
  public void run()
  {
    if (c()) {}
    do
    {
      return;
      a();
    } while (this.b == null);
    Object localObject3 = c.a(c.c(this.b));
    Object localObject1 = new HttpPost("http://masdk.3g.qq.com/");
    ((HttpPost)localObject1).addHeader("User-Agent", "AssistantDownloader");
    ((HttpPost)localObject1).setEntity(new ByteArrayEntity((byte[])localObject3));
    try
    {
      localObject3 = com.tencent.tmapkupdatesdk.internal.b.a.a();
      TMLog.i(a, "url:http://masdk.3g.qq.com/");
      localObject1 = ((HttpClient)localObject3).execute((HttpUriRequest)localObject1);
      if (c())
      {
        TMLog.i(a, "request is cancel");
        return;
      }
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
      b();
      TMLog.e(a, "exception:", localException);
      return;
    }
    if (localException != null)
    {
      TMLog.i(a, "url:http://masdk.3g.qq.com/; httpCode=" + localException.getStatusLine().getStatusCode());
      if (localException.getStatusLine().getStatusCode() == 200)
      {
        localObject3 = localException.getEntity();
        if (localObject3 != null)
        {
          Object localObject2 = new ByteArrayBuffer((int)((HttpEntity)localObject3).getContentLength());
          localObject3 = ((HttpEntity)localObject3).getContent();
          byte[] arrayOfByte = new byte['à €'];
          for (;;)
          {
            int i = ((InputStream)localObject3).read(arrayOfByte);
            if (i == -1) {
              break;
            }
            ((ByteArrayBuffer)localObject2).append(arrayOfByte, 0, i);
          }
          localObject2 = ((ByteArrayBuffer)localObject2).buffer();
          if ((localObject2 != null) && (localObject2.length > 4))
          {
            TMLog.i(a, "onDataReceiveSuccess(data != null && data.length > 4)");
            localObject2 = c.a((byte[])localObject2);
            if ((localObject2 != null) && (((Response)localObject2).body != null))
            {
              localObject2 = c.a(this.b, ((Response)localObject2).body);
              if (localObject2 != null) {
                a(this.b, (JceStruct)localObject2);
              }
            }
          }
          else
          {
            TMLog.i(a, "onDataReceiveFailed()(data == null || data.length <= 4)");
            b();
          }
        }
      }
    }
    TMLog.i(a, "onDataReceiveFailed()");
    b();
  }
}
