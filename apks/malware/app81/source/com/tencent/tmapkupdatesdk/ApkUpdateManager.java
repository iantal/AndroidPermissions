package com.tencent.tmapkupdatesdk;

import android.content.Context;
import android.content.pm.PackageManager;
import android.os.Message;
import com.tencent.tmapkupdatesdk.internal.a.f;
import com.tencent.tmapkupdatesdk.internal.logic.protocol.b;
import com.tencent.tmassistantbase.util.GlobalUtil;
import com.tencent.tmassistantbase.util.TMLog;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class ApkUpdateManager
{
  protected static final String TAG = "ApkUpdateManager";
  private static ApkUpdateManager instance = null;
  
  public ApkUpdateManager() {}
  
  public static ApkUpdateManager getInstance()
  {
    try
    {
      if (instance == null) {
        instance = new ApkUpdateManager();
      }
      ApkUpdateManager localApkUpdateManager = instance;
      return localApkUpdateManager;
    }
    finally {}
  }
  
  public void addListener(ApkUpdateListener paramApkUpdateListener)
  {
    TMLog.i("ApkUpdateManager", "enter");
    if (paramApkUpdateListener == null)
    {
      TMLog.i("ApkUpdateManager", "listener == null");
      TMLog.i("ApkUpdateManager", "exit");
      return;
    }
    com.tencent.tmapkupdatesdk.internal.logic.a.a().a(paramApkUpdateListener);
    TMLog.i("ApkUpdateManager", "exit");
  }
  
  public void checkUpdate(List paramList)
  {
    TMLog.i("ApkUpdateManager", "enter");
    if ((paramList != null) && (paramList.size() > 0))
    {
      TMLog.i("ApkUpdateManager", "packageNameList.size: " + paramList.size());
      ArrayList localArrayList = new ArrayList();
      StringBuilder localStringBuilder = new StringBuilder();
      paramList = paramList.iterator();
      while (paramList.hasNext())
      {
        String str = (String)paramList.next();
        localArrayList.add(new ApkUpdateParam(str, 0, 0));
        localStringBuilder.append(str);
        localStringBuilder.append(";");
      }
      TMLog.i("ApkUpdateManager", "packageNameList: " + localStringBuilder.toString());
      checkUpdateList(localArrayList);
    }
    for (;;)
    {
      TMLog.i("ApkUpdateManager", "exit");
      return;
      TMLog.i("ApkUpdateManager", "packageNameList == null || packageNameList.size() <= 0");
    }
  }
  
  public void checkUpdateList(List paramList)
  {
    TMLog.i("ApkUpdateManager", "enter");
    if ((paramList != null) && (paramList.size() > 0))
    {
      TMLog.i("ApkUpdateManager", "updateParamList size: " + paramList.size());
      TMLog.i("ApkUpdateManager", "send Message ApkUpdateMessageHandler.GetApkInfo ");
      Message localMessage = com.tencent.tmapkupdatesdk.internal.logic.a.a().obtainMessage();
      localMessage.what = 5;
      localMessage.obj = paramList;
      localMessage.sendToTarget();
    }
    for (;;)
    {
      TMLog.i("ApkUpdateManager", "exit");
      return;
      TMLog.i("ApkUpdateManager", "updateParamList == null || updateParamList.size() <= 0");
    }
  }
  
  public void destory()
  {
    TMLog.i("ApkUpdateManager", "enter");
    b.a().c();
    TMLog.i("ApkUpdateManager", "exit");
  }
  
  public void init(Context paramContext)
  {
    TMLog.i("ApkUpdateManager", "enter");
    if (paramContext == null)
    {
      TMLog.i("ApkUpdateManager", "appContext is null");
      TMLog.i("ApkUpdateManager", "exit");
      return;
    }
    TMLog.i("ApkUpdateManager", "appContext:" + paramContext);
    b.a().a(paramContext);
    com.tencent.tmapkupdatesdk.internal.c.a.a().a(paramContext);
    GlobalUtil.getInstance().setContext(paramContext);
    TMLog.i("ApkUpdateManager", "exit");
  }
  
  public int patchNewApk(String paramString1, String paramString2, String paramString3)
  {
    TMLog.i("ApkUpdateManager", "enter");
    TMLog.i("ApkUpdateManager", "packageName:" + paramString1 + "; patchPath:" + paramString2 + "; newGenApkPath:" + paramString3);
    int i = f.b(paramString1, paramString2, paramString3);
    TMLog.i("ApkUpdateManager", "patchNewApk resultCode:" + i);
    TMLog.i("ApkUpdateManager", "exit");
    return i;
  }
  
  public int patchNewApkByPath(String paramString1, String paramString2, String paramString3)
  {
    TMLog.i("ApkUpdateManager", "enter");
    TMLog.i("ApkUpdateManager", "oldPath:" + paramString1 + "; patchPath:" + paramString2 + "; newGenApkPath:" + paramString3);
    PackageManager localPackageManager = b.a().b().getPackageManager();
    int i = new f().a(paramString1, paramString2, paramString3);
    if (i == 0)
    {
      TMLog.i("ApkUpdateManager", "genNewApk succeed");
      if (localPackageManager.getPackageArchiveInfo(paramString3, 1) == null)
      {
        TMLog.i("ApkUpdateManager", "exit");
        return -11;
      }
    }
    else
    {
      TMLog.i("ApkUpdateManager", "genNewApk failed errcode: " + i);
    }
    TMLog.i("ApkUpdateManager", "patchNewApkByPath resultCode: " + i);
    TMLog.i("ApkUpdateManager", "exit");
    return i;
  }
  
  public void removeListener(ApkUpdateListener paramApkUpdateListener)
  {
    TMLog.i("ApkUpdateManager", "enter");
    if (paramApkUpdateListener == null)
    {
      TMLog.i("ApkUpdateManager", "listener == null");
      TMLog.i("ApkUpdateManager", "exit");
      return;
    }
    com.tencent.tmapkupdatesdk.internal.logic.a.a().b(paramApkUpdateListener);
    TMLog.i("ApkUpdateManager", "exit");
  }
}
