package com.tencent.tmassistantbase.kapalai;

import android.accounts.Account;
import android.accounts.AccountManager;
import android.content.ContentUris;
import android.content.Context;
import android.net.Uri;
import android.net.Uri.Builder;
import android.os.Build;
import android.os.Build.VERSION;
import android.provider.ContactsContract.Groups;
import android.provider.Settings.System;
import com.tencent.tmassistantbase.kapalai.commonmethods.CommonDualSimInfo00;
import com.tencent.tmassistantbase.kapalai.commonmethods.CommonDualSimInfo01;
import com.tencent.tmassistantbase.kapalai.commonmethods.CommonDualSimInfo02;
import com.tencent.tmassistantbase.kapalai.commonmethods.CommonDualSimInfo03;
import com.tencent.tmassistantbase.kapalai.commonmethods.CommonDualSimInfo04;
import com.tencent.tmassistantbase.kapalai.commonmethods.CommonDualSimInfo05;
import com.tencent.tmassistantbase.kapalai.commonmethods.CommonDualSimInfo06;
import com.tencent.tmassistantbase.kapalai.commonmethods.CommonDualSimInfo07;
import com.tencent.tmassistantbase.kapalai.commonmethods.CommonDualSimInfo08;
import com.tencent.tmassistantbase.kapalai.commonmethods.IDualSimInfo;

public class KapalaiAdapterUtil
{
  private static IDualSimInfo[] allDualSimInfo = { new CommonDualSimInfo00(), new CommonDualSimInfo01(), new CommonDualSimInfo02(), new CommonDualSimInfo03(), new CommonDualSimInfo04(), new CommonDualSimInfo05(), new CommonDualSimInfo06(), new CommonDualSimInfo07(), new CommonDualSimInfo08() };
  
  private KapalaiAdapterUtil() {}
  
  public static KapalaiAdapterUtil getKAUInstance()
  {
    return KapalaiAdapterUtil.KAUHolder.kauInstance;
  }
  
  public String[] getContactGroupAccountNameAndType(Context paramContext)
  {
    String[] arrayOfString = new String[2];
    String str1 = "";
    String str2 = "";
    String str3 = Build.MANUFACTURER.toLowerCase();
    String str4 = Build.MODEL.toLowerCase();
    int i = Build.VERSION.SDK_INT;
    if ((str4.equals("galaxy nexus")) && (i >= 14))
    {
      paramContext = AccountManager.get(paramContext).getAccounts();
      if (paramContext.length > 0)
      {
        arrayOfString[0] = paramContext[0].name;
        arrayOfString[1] = paramContext[0].type;
        return arrayOfString;
      }
    }
    if ((str3.indexOf("samsung") >= 0) || (str3.indexOf("samsng") >= 0))
    {
      str1 = "vnd.sec.contact.phone";
      paramContext = "vnd.sec.contact.phone";
    }
    for (;;)
    {
      arrayOfString[0] = str1;
      arrayOfString[1] = paramContext;
      return arrayOfString;
      if (str3.indexOf("htc") >= 0)
      {
        str1 = "pcsc";
        paramContext = "com.htc.android.pcsc";
      }
      else if (str3.indexOf("sony ericsson") >= 0)
      {
        str1 = "Phone contacts";
        paramContext = "com.sonyericsson.localcontacts";
      }
      else if (str3.indexOf("zte") >= 0)
      {
        str1 = "local@ztespecial_local.com";
        paramContext = "ztespecial_local.com";
      }
      else
      {
        paramContext = str2;
        if (str3.indexOf("moto") >= 0)
        {
          str1 = "phone-contacts";
          paramContext = "com.contacts.phone";
        }
      }
    }
  }
  
  public Uri getContactGroupUri(long paramLong)
  {
    return ContentUris.withAppendedId(ContactsContract.Groups.CONTENT_URI, paramLong).buildUpon().appendQueryParameter("caller_is_syncadapter", "true").build();
  }
  
  public String[] getDualSimIMEIInfoMethod(Context paramContext)
  {
    String[] arrayOfString = new String[2];
    int i = 0;
    int j = arrayOfString.length;
    while (i < j)
    {
      arrayOfString[i] = allDualSimInfo[MobileIssueSettings.dualSimIMEISolutionNum[i]].getKapalaiDualSimIMEI(MobileIssueSettings.IMEIPos[i], paramContext);
      i += 1;
    }
    return arrayOfString;
  }
  
  public String[] getDualSimIMEIInfoNormalMethod(Context paramContext)
  {
    String[] arrayOfString = new String[2];
    int m = MobileIssueSettings.CommonIMEIPos.length;
    int j = 0;
    int i = 0;
    int k;
    if ((j < m) && (i < 2))
    {
      int n = allDualSimInfo.length;
      k = 0;
      label36:
      if (k >= n) {
        break label120;
      }
      String str = allDualSimInfo[k].getKapalaiDualSimIMEI(MobileIssueSettings.CommonIMEIPos[j], paramContext);
      if ((str != null) && (str.length() != 0) && (!str.equals(arrayOfString[0])))
      {
        k = i + 1;
        arrayOfString[i] = str;
        i = k;
      }
    }
    label120:
    for (;;)
    {
      j += 1;
      break;
      k += 1;
      break label36;
      return arrayOfString;
    }
  }
  
  public String[] getDualSimIMSIInfoMethod(Context paramContext)
  {
    String[] arrayOfString = new String[2];
    int i = 0;
    int j = arrayOfString.length;
    while (i < j)
    {
      arrayOfString[i] = allDualSimInfo[MobileIssueSettings.dualSimIMSISolutionNum[i]].getKapalaiDualSimIMSI(MobileIssueSettings.IMSISimPos[i], paramContext);
      i += 1;
    }
    return arrayOfString;
  }
  
  public String[] getDualSimIMSIInfoNormalMethod(Context paramContext)
  {
    String[] arrayOfString = new String[2];
    int k = arrayOfString.length;
    int i = 0;
    if (i < k)
    {
      int m = allDualSimInfo.length;
      int j = 0;
      for (;;)
      {
        if (j < m)
        {
          arrayOfString[i] = allDualSimInfo[j].getKapalaiDualSimIMSI(MobileIssueSettings.IMSISimPos[i], paramContext);
          if ((arrayOfString[i] == null) || (arrayOfString[i].length() == 0)) {}
        }
        else
        {
          i += 1;
          break;
        }
        j += 1;
      }
    }
    return arrayOfString;
  }
  
  public String getHasShortcutUri()
  {
    String str = Build.MODEL.toLowerCase();
    if (str.equals("gt-i9300")) {
      return "content://com.sec.android.app.launcher.settings/favorites?notify=true";
    }
    if (str.equals("mi 1s")) {
      return "content://com.miui.home.launcher.settings/favorites?notify=true";
    }
    return "content://com.android.launcher.settings/favorites?notify=true";
  }
  
  public boolean getNotSupportBluetoothInAirplaneMode(Context paramContext)
  {
    paramContext = paramContext.getContentResolver();
    if (paramContext != null) {
      return Settings.System.getInt(paramContext, "airplane_mode_on", 0) == 1;
    }
    return false;
  }
}
