package com.tencent.msdk.handle;

import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.os.Handler.Callback;
import android.os.Looper;
import android.os.Message;
import com.tencent.msdk.WeGame;
import com.tencent.msdk.ad.ADManager;
import com.tencent.msdk.ad.request.ADReqManage;
import com.tencent.msdk.ad.request.ADRequestPara;
import com.tencent.msdk.api.LoginRet;
import com.tencent.msdk.api.WakeupRet;
import com.tencent.msdk.api.eADType;
import com.tencent.msdk.db.QQLoginModel;
import com.tencent.msdk.db.WxLoginModel;
import com.tencent.msdk.lbs.LocationInfo;
import com.tencent.msdk.login.LoginManager;
import com.tencent.msdk.login.LoginUtils;
import com.tencent.msdk.login.WxFirstLoginInfo;
import com.tencent.msdk.notice.NoticeManager;
import com.tencent.msdk.notice.NoticeRequestPara;
import com.tencent.msdk.notice.eMSG_NOTICETYPE;
import com.tencent.msdk.remote.api.GetWXDeeplink;
import com.tencent.msdk.remote.api.RemoteApiWrapper;
import com.tencent.msdk.request.NoticeMsgMng;
import com.tencent.msdk.request.PfKeyRequestMng;
import com.tencent.msdk.request.QQA8RequestMng;
import com.tencent.msdk.request.WxRequestMng;
import com.tencent.msdk.tools.Logger;
import com.tencent.msdk.tools.T;
import com.tencent.msdk.webview.WebViewManager;
import com.tencent.msdk.weixin.BtnBase;
import com.tencent.msdk.weixin.MsgBase;
import com.tencent.msdk.weixin.MsgWechatWrapper;

public class MsdkThreadManager
{
  private static volatile MsdkThreadManager instance = null;
  private Handler mainHandler = null;
  private Handler msdkHandler = null;
  private MsdkThread msdkThread = null;
  
  public MsdkThreadManager() {}
  
  public static MsdkThreadManager getInstance()
  {
    if (instance == null) {}
    try
    {
      if (instance == null) {
        instance = new MsdkThreadManager();
      }
      return instance;
    }
    finally {}
  }
  
  public void WGAddCardToWXCardPackage(String paramString1, String paramString2, String paramString3)
  {
    Logger.d("WGAddCardToWXCardPackage");
    Message localMessage = new Message();
    AddCardToWXCardPackagePara localAddCardToWXCardPackagePara = new AddCardToWXCardPackagePara();
    localAddCardToWXCardPackagePara.cardId = paramString1;
    localAddCardToWXCardPackagePara.timestamp = paramString2;
    localAddCardToWXCardPackagePara.sign = paramString3;
    localMessage.what = 44;
    localMessage.obj = localAddCardToWXCardPackagePara;
    this.mainHandler.sendMessage(localMessage);
    Logger.d("WGAddCardToWXCardPackage");
  }
  
  public void WGAddGameFriendToQQ(String paramString1, String paramString2, String paramString3)
  {
    Logger.d("WGAddGameFriendToQQ");
    Message localMessage = new Message();
    AddGameFriendToQQ localAddGameFriendToQQ = new AddGameFriendToQQ();
    localAddGameFriendToQQ.fopenid = paramString1;
    localAddGameFriendToQQ.desc = paramString2;
    localAddGameFriendToQQ.message = paramString3;
    localMessage.what = 37;
    localMessage.obj = localAddGameFriendToQQ;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void WGBindQQGroup(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    Logger.d("WGBindQQGroup");
    Message localMessage = new Message();
    BindQQGroup localBindQQGroup = new BindQQGroup();
    localBindQQGroup.unionid = paramString1;
    localBindQQGroup.union_name = paramString2;
    localBindQQGroup.zoneid = paramString3;
    localBindQQGroup.signature = paramString4;
    localMessage.what = 38;
    localMessage.obj = localBindQQGroup;
    this.mainHandler.sendMessage(localMessage);
    Logger.d("WGBindQQGroup");
  }
  
  public void WGJoinQQGroup(String paramString)
  {
    Logger.d("WGJoinQQGroup");
    Message localMessage = new Message();
    localMessage.what = 39;
    localMessage.obj = paramString;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void WGOpenWeiXinDeeplink(String paramString)
  {
    Logger.d("WGOpenWeiXinDeeplink");
    Message localMessage = new Message();
    localMessage.what = 43;
    localMessage.obj = paramString;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void WGQueryQQGroupInfo(String paramString1, String paramString2)
  {
    Logger.d("WGQueryQQGroup");
    Message localMessage = new Message();
    QueryQQGroup localQueryQQGroup = new QueryQQGroup();
    localQueryQQGroup.unionid = paramString1;
    localQueryQQGroup.zoneid = paramString2;
    localMessage.what = 42;
    localMessage.obj = localQueryQQGroup;
    this.msdkHandler.sendMessage(localMessage);
    Logger.d("WGQueryQQGroup");
  }
  
  public void WGQueryQQGroupKey(String paramString)
  {
    Logger.d("WGQueryQQGroupKey");
    Message localMessage = new Message();
    localMessage.what = 43;
    localMessage.obj = paramString;
    this.msdkHandler.sendMessage(localMessage);
    Logger.d("WGQueryQQGroupKey");
  }
  
  public void WGUnbindQQGroup(String paramString1, String paramString2)
  {
    Logger.d("WGUnbindQQGroup");
    Message localMessage = new Message();
    UnbindQQGroup localUnbindQQGroup = new UnbindQQGroup();
    localUnbindQQGroup.groupOpenid = paramString1;
    localUnbindQQGroup.unionid = paramString2;
    localMessage.what = 41;
    localMessage.obj = localUnbindQQGroup;
    this.msdkHandler.sendMessage(localMessage);
    Logger.d("WGUnbindQQGroup");
  }
  
  public boolean clearLocation()
  {
    if (LoginUtils.getLocalLoginRet(new LoginRet()) == 0) {
      return false;
    }
    Logger.d("called");
    Message localMessage = new Message();
    localMessage.what = 25;
    this.mainHandler.sendMessage(localMessage);
    return true;
  }
  
  public void closeAD(eADType paramEADType)
  {
    if (paramEADType == null)
    {
      Logger.w("closeAD params is empty!");
      return;
    }
    Message localMessage = new Message();
    localMessage.what = 34;
    localMessage.arg1 = paramEADType.val();
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void closeScrollNotice()
  {
    Logger.d("closeScrollNotice");
    this.mainHandler.sendEmptyMessage(22);
  }
  
  public void getAD(ADRequestPara paramADRequestPara)
  {
    Logger.d("getAD");
    Message localMessage = new Message();
    localMessage.what = 35;
    localMessage.obj = paramADRequestPara;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void getLocationInfo(LocationInfo paramLocationInfo)
  {
    Logger.d("called");
    Message localMessage = new Message();
    localMessage.what = 36;
    localMessage.obj = paramLocationInfo;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void getNearbyPlayer(LocationInfo paramLocationInfo)
  {
    Logger.d("called");
    Message localMessage = new Message();
    localMessage.what = 24;
    localMessage.obj = paramLocationInfo;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void getNoticeReq(NoticeRequestPara paramNoticeRequestPara)
  {
    Logger.d("getNoticeReq");
    Message localMessage = new Message();
    localMessage.what = 20;
    localMessage.obj = paramNoticeRequestPara;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void init()
  {
    this.msdkThread = new MsdkThread("MsdkThread");
    this.msdkThread.start();
    this.msdkHandler = new Handler(this.msdkThread.getLooper(), this.msdkThread);
    this.mainHandler = new Handler(Looper.getMainLooper(), new Handler.Callback()
    {
      public boolean handleMessage(Message paramAnonymousMessage)
      {
        switch (paramAnonymousMessage.what)
        {
        case 4: 
        case 7: 
        case 12: 
        case 17: 
        case 19: 
        case 28: 
        case 29: 
        case 30: 
        case 40: 
        case 41: 
        case 42: 
        default: 
          Logger.d("invalid message");
        }
        for (;;)
        {
          return false;
          WeGame.getInstance().login(paramAnonymousMessage.arg1);
          continue;
          paramAnonymousMessage = (WxFirstLoginInfo)paramAnonymousMessage.obj;
          if (paramAnonymousMessage != null)
          {
            new WxRequestMng().wxFirstLoginReq(paramAnonymousMessage.wxCode, paramAnonymousMessage.notifyState);
            continue;
            boolean bool = false;
            if (paramAnonymousMessage.obj != null) {
              bool = ((Boolean)paramAnonymousMessage.obj).booleanValue();
            }
            new WxRequestMng().wxExpiredLoginReq(paramAnonymousMessage.arg1, bool);
            continue;
            paramAnonymousMessage = (QQLoginModel)paramAnonymousMessage.obj;
            if (paramAnonymousMessage != null)
            {
              new PfKeyRequestMng().getQQFirstLoginPfKeyReq(paramAnonymousMessage);
            }
            else
            {
              LoginManager.getInstance().setIsCheckingToken(false);
              continue;
              paramAnonymousMessage = (QQLoginModel)paramAnonymousMessage.obj;
              if (paramAnonymousMessage != null)
              {
                new PfKeyRequestMng().verifyLocalQQToken(paramAnonymousMessage);
              }
              else
              {
                LoginManager.getInstance().setIsCheckingToken(false);
                continue;
                Object localObject = (WxLoginModel)paramAnonymousMessage.obj;
                if (localObject != null)
                {
                  new WxRequestMng().verifyLocalAndRefreshWxToken((WxLoginModel)localObject, paramAnonymousMessage.arg1);
                }
                else
                {
                  LoginManager.getInstance().setIsCheckingToken(false);
                  continue;
                  localObject = (WakeupRet)paramAnonymousMessage.obj;
                  if (localObject != null)
                  {
                    new PfKeyRequestMng().getPfKeyWithWakeup(paramAnonymousMessage.arg1, (WakeupRet)localObject);
                  }
                  else
                  {
                    LoginManager.getInstance().setIsCheckingToken(false);
                    continue;
                    paramAnonymousMessage = (MsdkThreadManager.QQA8Info)paramAnonymousMessage.obj;
                    if (paramAnonymousMessage != null)
                    {
                      new QQA8RequestMng().qqA8Req(paramAnonymousMessage.openAuthData, paramAnonymousMessage.openAuthSt, paramAnonymousMessage.notifyState);
                    }
                    else
                    {
                      LoginManager.getInstance().setIsCheckingToken(false);
                      continue;
                      paramAnonymousMessage = (MsdkThreadManager.SendToQQGameFriend)paramAnonymousMessage.obj;
                      if (paramAnonymousMessage != null)
                      {
                        RemoteApiWrapper.WGSendToQQGameFriend(paramAnonymousMessage.act, paramAnonymousMessage.friendOpenId, paramAnonymousMessage.title, paramAnonymousMessage.summary, paramAnonymousMessage.targetUrl, paramAnonymousMessage.imageUrl, paramAnonymousMessage.previewText, paramAnonymousMessage.gameTag, paramAnonymousMessage.msdkExtInfo);
                        continue;
                        paramAnonymousMessage = (MsdkThreadManager.SendToWXGameFriend)paramAnonymousMessage.obj;
                        if (paramAnonymousMessage != null)
                        {
                          RemoteApiWrapper.WGSendToWXGameFriend(paramAnonymousMessage.friendOpenid, paramAnonymousMessage.title, paramAnonymousMessage.description, paramAnonymousMessage.messageExt, paramAnonymousMessage.mediaTagName, paramAnonymousMessage.thumbMediaId, paramAnonymousMessage.msdkExtInfo);
                          continue;
                          RemoteApiWrapper.WGQueryQQUserInfo();
                          continue;
                          RemoteApiWrapper.WGQueryQQGameFriendsInfo();
                          continue;
                          RemoteApiWrapper.WGQueryWXUserInfo();
                          continue;
                          RemoteApiWrapper.WGQueryWXGameFriendsInfo();
                          continue;
                          paramAnonymousMessage = (NoticeRequestPara)paramAnonymousMessage.obj;
                          if (paramAnonymousMessage != null)
                          {
                            new NoticeMsgMng().getNoticeReq(paramAnonymousMessage);
                          }
                          else
                          {
                            Logger.w("noticeInfo is null");
                            continue;
                            paramAnonymousMessage = (MsdkThreadManager.ShowNoticeInfoByScene)paramAnonymousMessage.obj;
                            if (paramAnonymousMessage != null)
                            {
                              NoticeManager.getInstance().showNoticeByScene(paramAnonymousMessage.type, paramAnonymousMessage.scene);
                              continue;
                              NoticeManager.getInstance().closeScrollNotice();
                              continue;
                              paramAnonymousMessage = (ADRequestPara)paramAnonymousMessage.obj;
                              if (paramAnonymousMessage != null)
                              {
                                new ADReqManage().getADReq(paramAnonymousMessage);
                              }
                              else
                              {
                                Logger.w("ad para Info is null");
                                continue;
                                RemoteApiWrapper.Feedback((String)paramAnonymousMessage.obj);
                                continue;
                                if (paramAnonymousMessage.obj == null)
                                {
                                  Logger.d("location info null");
                                  return false;
                                }
                                if (!(paramAnonymousMessage.obj instanceof LocationInfo))
                                {
                                  Logger.d("obj is not a LocationInfo");
                                  return false;
                                }
                                RemoteApiWrapper.QueryNearbyPlayer((LocationInfo)paramAnonymousMessage.obj);
                                continue;
                                RemoteApiWrapper.ClearLocation();
                                continue;
                                if (paramAnonymousMessage.obj == null)
                                {
                                  Logger.d("openUrl info null");
                                  return false;
                                }
                                WebViewManager.getInstance().openUrl((String)paramAnonymousMessage.obj);
                                continue;
                                if (paramAnonymousMessage.arg1 == 0)
                                {
                                  Logger.d("openAD info null");
                                  return false;
                                }
                                ADManager.getInstance().closeADDialog(paramAnonymousMessage.arg1);
                                ADManager.getInstance().openAdDialog(paramAnonymousMessage.arg1);
                                continue;
                                if (paramAnonymousMessage.arg1 == 0)
                                {
                                  Logger.d("openAD info null");
                                  return false;
                                }
                                ADManager.getInstance().closeADDialog(paramAnonymousMessage.arg1);
                                continue;
                                if (paramAnonymousMessage.obj == null)
                                {
                                  Logger.d("sendMessageToWechatGameCenter info null");
                                  return false;
                                }
                                if (!(paramAnonymousMessage.obj instanceof MsdkThreadManager.SendMessageToWechatGameCenterReq))
                                {
                                  Logger.d("obj is not a SendMessageToWechatGameCenterReq");
                                  return false;
                                }
                                paramAnonymousMessage = (MsdkThreadManager.SendMessageToWechatGameCenterReq)paramAnonymousMessage.obj;
                                RemoteApiWrapper.SendMessageToWechatGameCenter(paramAnonymousMessage.wechatMsg, paramAnonymousMessage.msdkExtInfo);
                                continue;
                                if (paramAnonymousMessage.obj == null)
                                {
                                  Logger.d("addGameFriendToQQ null");
                                  return false;
                                }
                                if (!(paramAnonymousMessage.obj instanceof MsdkThreadManager.AddGameFriendToQQ))
                                {
                                  Logger.d("obj is not a AddGameFriendToQQ");
                                  return false;
                                }
                                paramAnonymousMessage = (MsdkThreadManager.AddGameFriendToQQ)paramAnonymousMessage.obj;
                                WeGame.getInstance().WGAddGameFriendToQQ(paramAnonymousMessage.fopenid, paramAnonymousMessage.desc, paramAnonymousMessage.message);
                                continue;
                                if (paramAnonymousMessage.obj == null)
                                {
                                  Logger.d("BindQQGroup null");
                                  return false;
                                }
                                if (!(paramAnonymousMessage.obj instanceof MsdkThreadManager.BindQQGroup))
                                {
                                  Logger.d("obj is not a BindQQGroup");
                                  return false;
                                }
                                paramAnonymousMessage = (MsdkThreadManager.BindQQGroup)paramAnonymousMessage.obj;
                                WeGame.getInstance().WGBindQQGroup(paramAnonymousMessage.unionid, paramAnonymousMessage.union_name, paramAnonymousMessage.zoneid, paramAnonymousMessage.signature);
                                continue;
                                if (paramAnonymousMessage.obj == null)
                                {
                                  Logger.d("joinQQGroup null");
                                  return false;
                                }
                                if (!(paramAnonymousMessage.obj instanceof String))
                                {
                                  Logger.d("obj is not a String");
                                  return false;
                                }
                                WeGame.getInstance().WGJoinQQGroup((String)paramAnonymousMessage.obj);
                                continue;
                                if (paramAnonymousMessage.obj == null)
                                {
                                  Logger.d("location info null");
                                  return false;
                                }
                                if (!(paramAnonymousMessage.obj instanceof LocationInfo))
                                {
                                  Logger.d("obj is not a LocationInfo");
                                  return false;
                                }
                                RemoteApiWrapper.GetLocationInfo((LocationInfo)paramAnonymousMessage.obj);
                                continue;
                                if (paramAnonymousMessage.obj == null)
                                {
                                  Logger.d("AddCardToWXCardPackagePara null");
                                  return false;
                                }
                                if (!(paramAnonymousMessage.obj instanceof MsdkThreadManager.AddCardToWXCardPackagePara))
                                {
                                  Logger.d("obj is not a AddCardToWXCardPackagePara");
                                  return false;
                                }
                                paramAnonymousMessage = (MsdkThreadManager.AddCardToWXCardPackagePara)paramAnonymousMessage.obj;
                                WeGame.getInstance().WGAddCardToWXCardPackage(paramAnonymousMessage.cardId, paramAnonymousMessage.timestamp, paramAnonymousMessage.sign);
                                continue;
                                if (paramAnonymousMessage.obj == null)
                                {
                                  Logger.d("Deeplink null");
                                  return false;
                                }
                                if (!(paramAnonymousMessage.obj instanceof String))
                                {
                                  Logger.d("obj is not a String");
                                  return false;
                                }
                                new GetWXDeeplink((String)paramAnonymousMessage.obj).send();
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    });
  }
  
  public void openAD(eADType paramEADType)
  {
    if (paramEADType == null)
    {
      Logger.w("openAD params is empty!");
      return;
    }
    Message localMessage = new Message();
    localMessage.what = 33;
    localMessage.arg1 = paramEADType.val();
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void openUrl(String paramString)
  {
    if (T.ckIsEmpty(paramString))
    {
      Logger.w("Url is empty!");
      return;
    }
    Logger.d("called");
    Message localMessage = new Message();
    localMessage.what = 27;
    localMessage.obj = paramString;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void qqA8Req(String paramString1, String paramString2, int paramInt)
  {
    Logger.d("qqA8Req");
    Message localMessage = new Message();
    localMessage.what = 9;
    QQA8Info localQQA8Info = new QQA8Info();
    localQQA8Info.openAuthData = paramString1;
    localQQA8Info.openAuthSt = paramString2;
    localQQA8Info.notifyState = paramInt;
    localMessage.obj = localQQA8Info;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void queryForeignNetInfo()
  {
    Logger.d("foreignet query start");
    this.msdkHandler.sendEmptyMessage(40);
  }
  
  public void queryQQGameFriendsInfo()
  {
    Logger.d("queryQQGameFriendsInfo");
    Message localMessage = new Message();
    localMessage.what = 14;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void queryQQUserInfo()
  {
    Logger.d("queryQQMyInfo");
    Message localMessage = new Message();
    localMessage.what = 13;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void queryWXGameFriendsInfo()
  {
    Logger.d("queryWXGameFriendsInfo");
    Message localMessage = new Message();
    localMessage.what = 16;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void queryWXUserInfo()
  {
    Logger.d("queryWXMyInfo");
    Message localMessage = new Message();
    localMessage.what = 15;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void sendFeedback(String paramString1, String paramString2, int paramInt, String paramString3)
  {
    Logger.d("sendFeedback");
    Message localMessage = new Message();
    localMessage.what = 4;
    Bundle localBundle = new Bundle();
    localBundle.putString("platID", "" + paramInt);
    localBundle.putString("gameID", paramString1);
    localBundle.putString("openID", paramString3);
    localBundle.putString("question", paramString2);
    localMessage.setData(localBundle);
    this.msdkHandler.sendMessage(localMessage);
  }
  
  public void sendFeedbackWithAppid(String paramString)
  {
    Logger.d("sendFeedbackWithAppid");
    Message localMessage = new Message();
    localMessage.what = 23;
    localMessage.obj = paramString;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void sendGetPermissionMsg()
  {
    Logger.d("sendGetPermissionMsg");
    this.msdkHandler.sendEmptyMessage(0);
  }
  
  public void sendGetSchedulingMsg(Context paramContext)
  {
    Logger.d("sendGetSchedulingMsg");
    Message localMessage = new Message();
    localMessage.what = 1;
    localMessage.obj = paramContext;
    this.msdkHandler.sendMessage(localMessage);
  }
  
  public void sendHandlerMessage(Message paramMessage)
  {
    this.mainHandler.sendMessage(paramMessage);
  }
  
  public void sendLoginMsg(int paramInt)
  {
    Logger.d("sendLoginMsg");
    Message localMessage = new Message();
    localMessage.what = 3;
    localMessage.arg1 = paramInt;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public boolean sendMessageToWechatGameCenter(String paramString1, String paramString2, String paramString3, MsgBase paramMsgBase, BtnBase paramBtnBase, String paramString4)
  {
    if (LoginUtils.getLocalLoginRet(new LoginRet()) == 0) {
      return false;
    }
    Logger.d("called");
    Message localMessage = new Message();
    localMessage.what = 26;
    paramString1 = new MsgWechatWrapper(paramString1, paramString2, paramString3, paramBtnBase, paramMsgBase);
    paramString2 = new SendMessageToWechatGameCenterReq();
    paramString2.wechatMsg = paramString1;
    paramString2.msdkExtInfo = paramString4;
    localMessage.obj = paramString2;
    this.mainHandler.sendMessage(localMessage);
    return true;
  }
  
  public void sendReportLogin(String paramString, int paramInt)
  {
    Logger.d("sendReportLogin");
    Bundle localBundle = new Bundle();
    localBundle.putString("openId", paramString);
    localBundle.putInt("platId", paramInt);
    paramString = new Message();
    paramString.what = 2;
    paramString.setData(localBundle);
    this.msdkHandler.sendMessage(paramString);
  }
  
  public void sendToQQGameFriend(int paramInt, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8)
  {
    Logger.d("sendToQQGameFriend");
    Message localMessage = new Message();
    localMessage.what = 10;
    SendToQQGameFriend localSendToQQGameFriend = new SendToQQGameFriend();
    localSendToQQGameFriend.act = paramInt;
    localSendToQQGameFriend.friendOpenId = paramString1;
    localSendToQQGameFriend.title = paramString2;
    localSendToQQGameFriend.summary = paramString3;
    localSendToQQGameFriend.targetUrl = paramString4;
    localSendToQQGameFriend.imageUrl = paramString5;
    localSendToQQGameFriend.previewText = paramString6;
    localSendToQQGameFriend.gameTag = paramString7;
    localSendToQQGameFriend.msdkExtInfo = paramString8;
    localMessage.obj = localSendToQQGameFriend;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void sendToWXGameFriend(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7)
  {
    Logger.d("sendToWXGameFriend");
    Message localMessage = new Message();
    localMessage.what = 11;
    SendToWXGameFriend localSendToWXGameFriend = new SendToWXGameFriend();
    localSendToWXGameFriend.friendOpenid = paramString1;
    localSendToWXGameFriend.title = paramString2;
    localSendToWXGameFriend.description = paramString3;
    localSendToWXGameFriend.messageExt = paramString4;
    localSendToWXGameFriend.mediaTagName = paramString5;
    localSendToWXGameFriend.thumbMediaId = paramString6;
    localSendToWXGameFriend.msdkExtInfo = paramString7;
    localMessage.obj = localSendToWXGameFriend;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public void showNoticeByScene(eMSG_NOTICETYPE paramEMSG_NOTICETYPE, String paramString)
  {
    Logger.d("showNotice");
    Message localMessage = new Message();
    ShowNoticeInfoByScene localShowNoticeInfoByScene = new ShowNoticeInfoByScene();
    localShowNoticeInfoByScene.scene = paramString;
    localShowNoticeInfoByScene.type = paramEMSG_NOTICETYPE;
    localMessage.what = 21;
    localMessage.obj = localShowNoticeInfoByScene;
    this.mainHandler.sendMessage(localMessage);
  }
  
  public class AddCardToWXCardPackagePara
  {
    String cardId = "";
    String sign = "";
    String timestamp = "";
    
    public AddCardToWXCardPackagePara() {}
  }
  
  public class AddGameFriendToQQ
  {
    String desc = "";
    String fopenid = "";
    String message = "";
    
    public AddGameFriendToQQ() {}
  }
  
  public class BindQQGroup
  {
    String signature = "";
    String union_name = "";
    String unionid = "";
    String zoneid = "";
    
    public BindQQGroup() {}
  }
  
  public class QQA8Info
  {
    int notifyState = 0;
    String openAuthData = "";
    String openAuthSt = "";
    
    public QQA8Info() {}
  }
  
  public class QueryQQGroup
  {
    String unionid = "";
    String zoneid = "";
    
    public QueryQQGroup() {}
  }
  
  public class SendMessageToWechatGameCenterReq
  {
    String msdkExtInfo = "";
    MsgWechatWrapper wechatMsg;
    
    public SendMessageToWechatGameCenterReq() {}
  }
  
  public class SendToQQGameFriend
  {
    int act = 0;
    String friendOpenId = "";
    String gameTag = "";
    String imageUrl = "";
    String msdkExtInfo = "";
    String previewText = "";
    String summary = "";
    String targetUrl = "";
    String title = "";
    
    public SendToQQGameFriend() {}
  }
  
  public class SendToQzone
  {
    String description = "";
    String imageUrl = "";
    String summary = "";
    String targetUrl = "";
    String title = "";
    
    public SendToQzone() {}
  }
  
  public class SendToWXGameFriend
  {
    String description = "";
    String friendOpenid = "";
    String mediaTagName = "";
    String messageExt = "";
    String msdkExtInfo = "";
    String thumbMediaId = "";
    String title = "";
    
    public SendToWXGameFriend() {}
  }
  
  public class ShowNoticeInfoByOpenId
  {
    String openId = "";
    int type = 0;
    
    public ShowNoticeInfoByOpenId() {}
  }
  
  public class ShowNoticeInfoByScene
  {
    String scene = "1";
    eMSG_NOTICETYPE type = eMSG_NOTICETYPE.eMSG_NOTICETYPE_ALERT;
    
    public ShowNoticeInfoByScene() {}
  }
  
  public class UnbindQQGroup
  {
    String groupOpenid = "";
    String unionid = "";
    
    public UnbindQQGroup() {}
  }
}
