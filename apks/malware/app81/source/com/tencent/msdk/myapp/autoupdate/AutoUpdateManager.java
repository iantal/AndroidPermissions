package com.tencent.msdk.myapp.autoupdate;

import android.app.Activity;
import android.app.Application;
import com.tencent.msdk.Singleton;
import com.tencent.msdk.WeGame;
import com.tencent.msdk.config.ConfigManager;
import com.tencent.msdk.tools.Logger;
import com.tencent.tmselfupdatesdk.ITMSelfUpdateListener;
import com.tencent.tmselfupdatesdk.TMSelfUpdateManager;
import com.tencent.tmselfupdatesdk.YYBDownloadListener;
import com.tencent.tmselfupdatesdk.model.TMSelfUpdateUpdateInfo;

public class AutoUpdateManager
{
  private static final String CLOSED_WARNNING = "SAVE_UPDATE is closed, open it in msdkconfig.ini";
  private static final String YYB_CHANNELID = "992183";
  private static AutoUpdateListener mAutoUpdateListener = new AutoUpdateListener();
  private static YYBUpdateListener mYYBUpdateListener = new YYBUpdateListener();
  
  public AutoUpdateManager() {}
  
  public static void checkSelfUpdate()
  {
    if (isOpen())
    {
      TMSelfUpdateManager.getInstance().checkSelfUpdate();
      return;
    }
    Logger.w("SAVE_UPDATE is closed, open it in msdkconfig.ini");
  }
  
  public static int checkYYBInstalled()
  {
    return TMSelfUpdateManager.getInstance().checkYYBInstallState();
  }
  
  public static void init()
  {
    try
    {
      Application localApplication = WeGame.getInstance().getActivity().getApplication();
      TMSelfUpdateManager.getInstance().init(localApplication, "992183", mAutoUpdateListener, mYYBUpdateListener, null);
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public static boolean isOpen()
  {
    return "true".equals(ConfigManager.readValueByKey(WeGame.getInstance().getActivity(), "SAVE_UPDATE"));
  }
  
  public static void onDestory(Activity paramActivity)
  {
    if (isOpen())
    {
      TMSelfUpdateManager.getInstance().destroy();
      return;
    }
    Logger.w("SAVE_UPDATE is closed, open it in msdkconfig.ini");
  }
  
  public static void onResume(Activity paramActivity)
  {
    if (isOpen())
    {
      TMSelfUpdateManager.getInstance().onActivityResume();
      return;
    }
    Logger.w("SAVE_UPDATE is closed, open it in msdkconfig.ini");
  }
  
  public static void startSelfUpdate(boolean paramBoolean)
  {
    if (isOpen())
    {
      TMSelfUpdateManager.getInstance().startSelfUpdate(paramBoolean);
      return;
    }
    Logger.w("SAVE_UPDATE is closed, open it in msdkconfig.ini");
  }
  
  static class AutoUpdateListener
    implements ITMSelfUpdateListener
  {
    AutoUpdateListener() {}
    
    public void onDownloadAppProgressChanged(long paramLong1, long paramLong2)
    {
      Logger.d("called");
      ((WGSaveUpdateObserverProxy)WGSaveUpdateObserverProxy.gDefault.get()).OnDownloadAppProgressChanged(paramLong1, paramLong2);
    }
    
    public void onDownloadAppStateChanged(int paramInt1, int paramInt2, String paramString)
    {
      Logger.d("called");
      ((WGSaveUpdateObserverProxy)WGSaveUpdateObserverProxy.gDefault.get()).OnDownloadAppStateChanged(paramInt1, paramInt2, paramString);
    }
    
    public void onUpdateInfoReceived(TMSelfUpdateUpdateInfo paramTMSelfUpdateUpdateInfo)
    {
      Logger.d("called");
      ((WGSaveUpdateObserverProxy)WGSaveUpdateObserverProxy.gDefault.get()).OnCheckNeedUpdateInfo(paramTMSelfUpdateUpdateInfo.getNewApkSize(), paramTMSelfUpdateUpdateInfo.getNewFeature(), paramTMSelfUpdateUpdateInfo.getPatchSize(), paramTMSelfUpdateUpdateInfo.getStatus(), paramTMSelfUpdateUpdateInfo.getUpdateDownloadUrl(), paramTMSelfUpdateUpdateInfo.getUpdateMethod());
    }
  }
  
  static class YYBUpdateListener
    implements YYBDownloadListener
  {
    YYBUpdateListener() {}
    
    public void onDownloadYYBProgressChanged(String paramString, long paramLong1, long paramLong2)
    {
      Logger.d("called");
      ((WGSaveUpdateObserverProxy)WGSaveUpdateObserverProxy.gDefault.get()).OnDownloadYYBProgressChanged(paramString, paramLong1, paramLong2);
    }
    
    public void onDownloadYYBStateChanged(String paramString1, int paramInt1, int paramInt2, String paramString2)
    {
      Logger.d("called");
      ((WGSaveUpdateObserverProxy)WGSaveUpdateObserverProxy.gDefault.get()).OnDownloadYYBStateChanged(paramString1, paramInt1, paramInt2, paramString2);
    }
  }
}
