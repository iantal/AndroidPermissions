package com.tencent.msdk.api;

import com.tencent.msdk.WeGame;
import com.tencent.msdk.tools.Logger;
import java.util.Vector;

public class LoginRet
  extends CallbackRet
{
  public String open_id = "";
  public String pf = "";
  public String pf_key = "";
  public Vector<TokenRet> token = new Vector();
  public String user_id = "";
  
  public LoginRet() {}
  
  public LoginRet(int paramInt1, int paramInt2, String paramString)
  {
    super(paramInt1, paramInt2, paramString);
  }
  
  public String getAccessToken()
  {
    int i = this.platform;
    String str = "";
    if ((i == WeGame.QQPLATID) || (i == WeGame.QQHALL)) {
      str = getTokenByType(1);
    }
    while (i != WeGame.WXPLATID) {
      return str;
    }
    return getTokenByType(3);
  }
  
  public String getTokenByType(int paramInt)
  {
    int i = 0;
    while (i < this.token.size())
    {
      if (((TokenRet)this.token.get(i)).type == paramInt) {
        return ((TokenRet)this.token.get(i)).value;
      }
      i += 1;
    }
    return "";
  }
  
  public long getTokenExpireByType(int paramInt)
  {
    int i = 0;
    while (i < this.token.size())
    {
      if (((TokenRet)this.token.get(i)).type == paramInt) {
        return ((TokenRet)this.token.get(i)).expiration;
      }
      i += 1;
    }
    return 0L;
  }
  
  public void toLog()
  {
    Logger.d("***********************LoginInfo***********************");
    Logger.d("desc: " + this.desc);
    Logger.d("open_id: " + this.open_id);
    Logger.d("pf: " + this.pf);
    Logger.d("pf_key: " + this.pf_key);
    Logger.d("user_id: " + this.user_id);
    Logger.d("flag: " + this.flag);
    Logger.d("platform: " + this.platform);
    int i = 0;
    if (i < this.token.size())
    {
      String str;
      switch (((TokenRet)this.token.get(i)).type)
      {
      default: 
        str = "errorType";
      }
      for (;;)
      {
        Logger.d(str + ":" + ((TokenRet)this.token.get(i)).value);
        Logger.d(str + ":" + ((TokenRet)this.token.get(i)).expiration);
        i += 1;
        break;
        str = "eToken_QQ_Access";
        continue;
        str = "eToken_QQ_Pay";
        continue;
        str = "eToken_WX_Access";
        continue;
        str = "eToken_WX_Code";
        continue;
        str = "eToken_WX_Refresh";
      }
    }
    Logger.d("***********************LoginInfo***********************");
  }
  
  public String toLogStr()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("loginRet==>");
    localStringBuilder.append("open_id: " + this.open_id + ",");
    localStringBuilder.append("pf: " + this.pf + ",");
    localStringBuilder.append("pf_key: " + this.pf_key + ",");
    localStringBuilder.append("user_id: " + this.user_id + ",");
    localStringBuilder.append("flag: " + this.flag + ",");
    localStringBuilder.append("platform: " + this.platform + ",");
    localStringBuilder.append("desc: " + this.desc + ",");
    int i = 0;
    if (i < this.token.size())
    {
      String str;
      switch (((TokenRet)this.token.get(i)).type)
      {
      default: 
        str = "errorType";
      }
      for (;;)
      {
        localStringBuilder.append(str + ":" + ((TokenRet)this.token.get(i)).value + ",");
        localStringBuilder.append(str + ":" + ((TokenRet)this.token.get(i)).expiration);
        i += 1;
        break;
        str = "eToken_QQ_Access";
        continue;
        str = "eToken_QQ_Pay";
        continue;
        str = "eToken_WX_Access";
        continue;
        str = "eToken_WX_Code";
        continue;
        str = "eToken_WX_Refresh";
      }
    }
    return localStringBuilder.toString();
  }
  
  public String toString()
  {
    toLog();
    return "LoginRet";
  }
}
