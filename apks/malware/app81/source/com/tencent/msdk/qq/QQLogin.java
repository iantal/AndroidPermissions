package com.tencent.msdk.qq;

import android.content.Intent;
import com.tencent.msdk.WeGame;
import com.tencent.msdk.WeGameNotifyGame;
import com.tencent.msdk.api.LoginRet;
import com.tencent.msdk.api.TokenRet;
import com.tencent.msdk.db.QQLoginModel;
import com.tencent.msdk.locallog.SaveLogHelper;
import com.tencent.msdk.login.LoginManager;
import com.tencent.msdk.stat.BeaconHelper;
import com.tencent.msdk.tools.Logger;
import com.tencent.tauth.IUiListener;
import com.tencent.tauth.Tencent;
import com.tencent.tauth.UiError;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import org.json.JSONException;
import org.json.JSONObject;

public class QQLogin
{
  private long requestStartTime = 0L;
  
  public QQLogin() {}
  
  public void lauchQQPlatForm()
  {
    Logger.d("lauchQQPlatForm");
    Tencent localTencent = WeGame.getInstance().getTencent();
    if (localTencent == null) {}
    do
    {
      return;
      WeGame.getInstance().setPlatId(WeGame.QQPLATID);
    } while (WeGame.getInstance().checkQQEnv() != 0);
    this.requestStartTime = System.currentTimeMillis();
    localTencent.setOpenId("");
    localTencent.setAccessToken("", "0");
    localTencent.login(WeGame.getInstance().getActivity(), WeGame.getInstance().mPermission, new QQLoginCallback("loginAction"));
  }
  
  public void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    if ((paramInt1 == 10100) && (paramInt2 == 10101)) {
      WeGame.getInstance().getTencent().handleLoginData(paramIntent, new QQLoginCallback("onActivityResult"));
    }
  }
  
  private class QQLoginCallback
    implements IUiListener
  {
    public QQLoginCallback() {}
    
    public QQLoginCallback(String paramString)
    {
      this();
      Logger.d(paramString);
    }
    
    public void onCancel()
    {
      Logger.d("qq login onCancel");
      Object localObject = new HashMap();
      ((Map)localObject).put("param_FailCode", "1000");
      ((Map)localObject).put("msdk_logic_error", "1");
      BeaconHelper.reportMSDKEvent("qqEntryFirstLogin", QQLogin.this.requestStartTime, false, (Map)localObject, true);
      localObject = new LoginRet();
      ((LoginRet)localObject).flag = 1001;
      ((LoginRet)localObject).platform = WeGame.QQPLATID;
      WeGameNotifyGame.getInstance().OnPlatformLoginNotify((LoginRet)localObject);
    }
    
    public void onComplete(Object paramObject)
    {
      Logger.d("qq login onComplete");
      if (!(paramObject instanceof JSONObject))
      {
        Logger.d("not JSONObject" + paramObject);
        paramObject = new LoginRet();
        paramObject.flag = 1002;
        paramObject.desc = "not JSONObject";
        WeGameNotifyGame.getInstance().OnPlatformLoginNotify(paramObject);
        paramObject = new HashMap();
        paramObject.put("platform", "" + WeGame.QQPLATID);
        paramObject.put("failure", "not JSONObject");
        SaveLogHelper.getInstance().reportLog("WGLogin", paramObject, true);
        return;
      }
      Object localObject2 = (JSONObject)paramObject;
      for (;;)
      {
        try
        {
          WeGame.getInstance().setPlatId(WeGame.QQPLATID);
          if (!((JSONObject)localObject2).has("pay_token")) {
            ((JSONObject)localObject2).put("pay_token", "");
          }
          paramObject = new LoginRet();
          paramObject.platform = WeGame.QQPLATID;
          paramObject.open_id = ((JSONObject)localObject2).getString("openid");
          Object localObject3 = ((JSONObject)localObject2).getString("access_token");
          if ((localObject3 == null) || (((String)localObject3).equals("")))
          {
            paramObject.flag = 1000;
            localObject1 = new TokenRet();
            ((TokenRet)localObject1).type = 1;
            ((TokenRet)localObject1).value = ((String)localObject3);
            ((TokenRet)localObject1).expiration = Integer.valueOf(((JSONObject)localObject2).getString("expires_in")).intValue();
            paramObject.token.add(localObject1);
            localObject3 = new TokenRet();
            ((TokenRet)localObject3).type = 2;
            ((TokenRet)localObject3).value = ((JSONObject)localObject2).getString("pay_token");
            ((TokenRet)localObject3).expiration = 518400L;
            paramObject.token.add(localObject3);
            paramObject.pf = ((JSONObject)localObject2).getString("pf");
            Logger.d("QQEntryActivity pf: " + paramObject.pf);
            paramObject.pf_key = ((JSONObject)localObject2).getString("pfkey");
            Logger.d("QQEntryActivity pfkey: " + paramObject.pf_key);
            long l = System.currentTimeMillis() / 1000L;
            localObject2 = new QQLoginModel();
            ((QQLoginModel)localObject2).open_id = paramObject.open_id;
            ((QQLoginModel)localObject2).access_token = ((TokenRet)localObject1).value;
            ((QQLoginModel)localObject2).access_token_expire = (((TokenRet)localObject1).expiration + l);
            ((QQLoginModel)localObject2).pay_token = ((TokenRet)localObject3).value;
            ((QQLoginModel)localObject2).pay_token_expire = (((TokenRet)localObject3).expiration + l);
            ((QQLoginModel)localObject2).pf = paramObject.pf;
            ((QQLoginModel)localObject2).pf_key = paramObject.pf_key;
            LoginManager.getInstance().getQQFirstLoginPfKeyReq((QQLoginModel)localObject2);
            BeaconHelper.reportMSDKEvent("qqEntryFirstLogin", QQLogin.this.requestStartTime, true, null, true);
            return;
          }
        }
        catch (JSONException paramObject)
        {
          Object localObject1 = new LoginRet();
          ((LoginRet)localObject1).flag = 1002;
          WeGameNotifyGame.getInstance().OnPlatformLoginNotify((LoginRet)localObject1);
          paramObject.printStackTrace();
          paramObject = new HashMap();
          paramObject.put("param_FailCode", "1001");
          paramObject.put("msdk_logic_error", "0");
          BeaconHelper.reportMSDKEvent("qqEntryFirstLogin", QQLogin.this.requestStartTime, false, paramObject, true);
          paramObject = new HashMap();
          paramObject.put("platform", "" + WeGame.QQPLATID);
          paramObject.put("failure", "JSONException error");
          SaveLogHelper.getInstance().reportLog("WGLogin", paramObject, true);
          return;
        }
        paramObject.flag = 0;
      }
    }
    
    public void onError(UiError paramUiError)
    {
      Logger.d("qq login onError arg0 errorCode:" + paramUiError.errorCode);
      Logger.d("qq login onError arg0 errorDetail:" + paramUiError.errorDetail);
      Object localObject = new LoginRet();
      ((LoginRet)localObject).platform = WeGame.QQPLATID;
      ((LoginRet)localObject).flag = 1002;
      HashMap localHashMap = new HashMap();
      localHashMap.put("param_FailCode", "1003");
      localHashMap.put("msdk_logic_error", "0");
      BeaconHelper.reportMSDKEvent("qqEntryFirstLogin", QQLogin.this.requestStartTime, false, localHashMap, true);
      WeGameNotifyGame.getInstance().OnPlatformLoginNotify((LoginRet)localObject);
      localObject = new HashMap();
      ((HashMap)localObject).put("errCode", "" + paramUiError.errorCode);
      ((HashMap)localObject).put("failure", paramUiError.errorDetail);
      SaveLogHelper.getInstance().reportLog("WGLogin", (HashMap)localObject, true);
    }
  }
}
