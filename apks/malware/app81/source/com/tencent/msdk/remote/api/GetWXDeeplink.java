package com.tencent.msdk.remote.api;

import com.tencent.msdk.WeGame;
import com.tencent.msdk.tools.Logger;
import com.tencent.msdk.tools.T;
import org.json.JSONException;
import org.json.JSONObject;

public class GetWXDeeplink
  extends RemoteApiBase
{
  private static final String EVENT_NAME = "GetWXDeeplink";
  private static final String PATH = "/profile/wxdeeplink/";
  
  public GetWXDeeplink(String paramString)
  {
    try
    {
      this.jsonBody.put("url", paramString);
      return;
    }
    catch (JSONException paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  protected int getMyId()
  {
    return RemoteApiWhat.GetWXDeeplink.ordinal();
  }
  
  protected String getPath()
  {
    return "/profile/wxdeeplink/";
  }
  
  public void onFailure(String paramString, int paramInt1, int paramInt2)
  {
    if (paramInt2 != getMyId())
    {
      Logger.d("a wrong callback");
      return;
    }
    Logger.d("onFailure " + paramString + " statusCode: " + paramInt1);
    reportEventToBeacon("GetWXDeeplink", false, paramInt1, false);
  }
  
  public void onSuccess(String paramString, int paramInt1, int paramInt2)
  {
    if (paramInt2 != getMyId()) {
      Logger.d("a wrong callback");
    }
    String str;
    for (;;)
    {
      return;
      if (paramString == null)
      {
        Logger.d("onsuccess response data is null");
        reportEventToBeacon("GetWXDeeplink", false, 1002, false);
        return;
      }
      Logger.d("onSuccess " + paramString);
      try
      {
        Object localObject = new SafeJSONObject(paramString);
        if (localObject != null)
        {
          paramInt2 = ((JSONObject)localObject).getInt("ret");
          str = ((JSONObject)localObject).getString("msg");
          if (paramInt2 == 0)
          {
            localObject = ((JSONObject)localObject).getString("openlink");
            Logger.d("GetWXDeeplink , deeplink:" + (String)localObject);
            if (!T.ckIsEmpty((String)localObject)) {
              WeGame.getInstance().OpenWXDeeplink((String)localObject);
            }
            reportEventToBeacon("GetWXDeeplink", true, 0, false);
            return;
          }
        }
      }
      catch (JSONException localJSONException)
      {
        localJSONException.printStackTrace();
        Logger.d("json error(GetWXDeeplink): " + paramString + " statusCode: " + paramInt1);
        reportEventToBeacon("GetWXDeeplink", false, 1001, false);
        return;
      }
    }
    Logger.d("GetWXDeeplink , ret:" + paramInt2 + " msg: " + str);
    reportEventToBeacon("GetWXDeeplink", false, paramInt2, true);
  }
}
