package com.tencent.msdk.remote.api;

import com.tencent.msdk.WeGame;
import com.tencent.msdk.WeGameNotifyGame;
import com.tencent.msdk.api.LoginRet;
import com.tencent.msdk.lbs.LocationInfo;
import com.tencent.msdk.login.LoginUtils;
import com.tencent.msdk.tools.Logger;
import java.util.Vector;
import org.json.JSONException;
import org.json.JSONObject;

class QueryNearbyPlayer
  extends RemoteApiBase
{
  private static final String EVENT_NAME = "getNearbyPlayer";
  private static final String PATH = "/relation/nearby/";
  private LocationInfo location = new LocationInfo();
  
  public QueryNearbyPlayer(LocationInfo paramLocationInfo)
  {
    this.location = paramLocationInfo;
    try
    {
      this.jsonBody.put("location", this.location);
      return;
    }
    catch (JSONException paramLocationInfo)
    {
      paramLocationInfo.printStackTrace();
    }
  }
  
  private void callback(int paramInt, String paramString, Vector<PersonInfo> paramVector)
  {
    RelationRet localRelationRet = new RelationRet();
    localRelationRet.flag = paramInt;
    localRelationRet.desc = paramString;
    if (paramVector != null) {}
    for (localRelationRet.persons = paramVector;; localRelationRet.persons = new Vector())
    {
      paramString = new LoginRet();
      LoginUtils.getLocalLoginRet(paramString);
      localRelationRet.platform = paramString.platform;
      WeGameNotifyGame.getInstance().OnGetNearbyPlayerCallback(localRelationRet);
      return;
    }
  }
  
  protected int getMyId()
  {
    return RemoteApiWhat.QueryNearbyPlayer.ordinal();
  }
  
  protected String getPath()
  {
    return "/relation/nearby/";
  }
  
  public void onFailure(String paramString, int paramInt1, int paramInt2)
  {
    if (paramInt2 != getMyId())
    {
      Logger.d("a wrong callback");
      return;
    }
    Logger.d("onFailure " + paramString + " statusCode: " + paramInt1);
    callback(-1, paramString, null);
    reportEventToBeacon("getNearbyPlayer", false, paramInt1, false);
  }
  
  public void onSuccess(String paramString, int paramInt1, int paramInt2)
  {
    Vector localVector = new Vector();
    if (paramInt2 != getMyId())
    {
      Logger.d("a wrong callback");
      return;
    }
    if (paramString == null)
    {
      Logger.d("getNearbyPlayer onsuccess response data is null");
      reportEventToBeacon("getNearbyPlayer", false, 1002, false);
      return;
    }
    Object localObject1 = "";
    Object localObject2 = localVector;
    String str;
    for (;;)
    {
      SafeJSONObject localSafeJSONObject;
      LoginRet localLoginRet;
      try
      {
        str = getNetDesc(new SafeJSONObject(paramString), getClass().getName());
        localObject1 = str;
        localObject2 = localVector;
        localSafeJSONObject = new SafeJSONObject(paramString);
        localObject1 = str;
        localObject2 = localVector;
        paramInt1 = localSafeJSONObject.getInt("ret");
        if (paramInt1 != 0) {
          break;
        }
        localObject1 = str;
        localObject2 = localVector;
        reportEventToBeacon("getNearbyPlayer", true, 0, false);
        localObject1 = str;
        localObject2 = localVector;
        localLoginRet = new LoginRet();
        localObject1 = str;
        localObject2 = localVector;
        LoginUtils.getLocalLoginRet(localLoginRet);
        localObject1 = str;
        localObject2 = localVector;
        if (localLoginRet.platform == WeGame.QQPLATID)
        {
          localObject1 = str;
          localObject2 = localVector;
          paramString = QQInfoFormatter.formatNearby(localSafeJSONObject.getJSONArray("lists"));
          localObject1 = str;
          localObject2 = paramString;
          callback(0, str, paramString);
          return;
        }
      }
      catch (JSONException paramString)
      {
        reportEventToBeacon("getNearbyPlayer", false, 1001, false);
        Logger.d("decode json from server failed!");
        paramString.printStackTrace();
        callback(-1, (String)localObject1, (Vector)localObject2);
        return;
      }
      paramString = localVector;
      localObject1 = str;
      localObject2 = localVector;
      if (localLoginRet.platform == WeGame.WXPLATID)
      {
        localObject1 = str;
        localObject2 = localVector;
        paramString = WxInfoFormatter.formatNearby(localSafeJSONObject.getJSONArray("lists"));
      }
    }
    localObject1 = str;
    localObject2 = localVector;
    Logger.d("getNearbyPlayer onsuccess, ret:" + paramInt1);
    localObject1 = str;
    localObject2 = localVector;
    reportEventToBeacon("getNearbyPlayer", false, paramInt1, true);
  }
}
