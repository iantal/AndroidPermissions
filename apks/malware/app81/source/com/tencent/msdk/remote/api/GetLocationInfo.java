package com.tencent.msdk.remote.api;

import com.tencent.msdk.WeGameNotifyGame;
import com.tencent.msdk.api.LocationRet;
import com.tencent.msdk.api.LoginRet;
import com.tencent.msdk.lbs.LocationInfo;
import com.tencent.msdk.login.LoginUtils;
import com.tencent.msdk.tools.Logger;
import org.json.JSONException;
import org.json.JSONObject;

class GetLocationInfo
  extends RemoteApiBase
{
  private static final String EVENT_NAME = "GetLocationInfo";
  private static final String PATH = "/relation/set_location/";
  private LocationInfo location = new LocationInfo();
  
  public GetLocationInfo(LocationInfo paramLocationInfo)
  {
    this.location = paramLocationInfo;
    try
    {
      this.jsonBody.put("locInfo", this.location);
      this.jsonBody.put("pf", "openmobile_android");
      return;
    }
    catch (JSONException paramLocationInfo)
    {
      paramLocationInfo.printStackTrace();
    }
  }
  
  private void callback(int paramInt, String paramString, double paramDouble1, double paramDouble2)
  {
    LocationRet localLocationRet = new LocationRet();
    localLocationRet.flag = paramInt;
    localLocationRet.desc = paramString;
    paramString = new LoginRet();
    LoginUtils.getLocalLoginRet(paramString);
    localLocationRet.platform = paramString.platform;
    localLocationRet.latitude = paramDouble1;
    localLocationRet.longitude = paramDouble2;
    WeGameNotifyGame.getInstance().OnGetLocationInfoCallback(localLocationRet);
  }
  
  protected int getMyId()
  {
    return RemoteApiWhat.GetLocationInfo.ordinal();
  }
  
  protected String getPath()
  {
    return "/relation/set_location/";
  }
  
  public void onFailure(String paramString, int paramInt1, int paramInt2)
  {
    if (paramInt2 != getMyId())
    {
      Logger.d("a wrong callback");
      return;
    }
    String str = "";
    try
    {
      paramString = getNetDesc(new SafeJSONObject(paramString), getClass().getName());
      callback(-1, paramString, 0.0D, 0.0D);
      reportEventToBeacon("GetLocationInfo", false, paramInt1, false);
      return;
    }
    catch (JSONException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
        paramString = str;
      }
    }
  }
  
  public void onSuccess(String paramString, int paramInt1, int paramInt2)
  {
    if (paramInt2 != getMyId())
    {
      Logger.d("a wrong callback");
      return;
    }
    localObject2 = "";
    double d4 = 0.0D;
    d5 = 0.0D;
    localObject1 = localObject2;
    d1 = d4;
    try
    {
      SafeJSONObject localSafeJSONObject = new SafeJSONObject(paramString);
      localObject1 = localObject2;
      d1 = d4;
      paramString = getNetDesc(localSafeJSONObject, getClass().getName());
      localObject2 = paramString;
      d2 = d4;
      d3 = d5;
      localObject1 = paramString;
      d1 = d4;
      if (localSafeJSONObject.getInt("ret") == 0)
      {
        localObject1 = paramString;
        d1 = d4;
        d2 = localSafeJSONObject.getDouble("latitude");
        localObject1 = paramString;
        d1 = d2;
        d3 = localSafeJSONObject.getDouble("longitude");
        localObject2 = paramString;
      }
    }
    catch (JSONException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
        localObject2 = localObject1;
        double d2 = d1;
        double d3 = d5;
      }
    }
    reportEventToBeacon("GetLocationInfo", true, 0, false);
    callback(0, (String)localObject2, d2, d3);
  }
}
