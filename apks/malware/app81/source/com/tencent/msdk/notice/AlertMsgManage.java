package com.tencent.msdk.notice;

import android.content.res.Resources;
import android.graphics.Bitmap;
import android.net.Uri;
import android.text.method.ScrollingMovementMethod;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.tencent.msdk.stat.ReportEvent;
import com.tencent.msdk.stat.eEVENT_TYPE;
import com.tencent.msdk.tools.Logger;
import com.tencent.msdk.tools.T;
import com.tencent.msdk.webview.WebViewManager;
import com.tencent.smtt.sdk.WebSettings;
import com.tencent.smtt.sdk.WebView;
import com.tencent.smtt.sdk.WebViewClient;
import java.io.File;

public class AlertMsgManage
  extends RelativeLayout
  implements View.OnClickListener
{
  private AlertMsgActivity mAlertAct;
  
  public AlertMsgManage(AlertMsgActivity paramAlertMsgActivity)
  {
    super(paramAlertMsgActivity);
    this.mAlertAct = paramAlertMsgActivity;
  }
  
  public void closeNotice()
  {
    this.mAlertAct.finish();
    NoticeManager.getInstance().deleteAlertNoticeItemFromList();
  }
  
  public void displayImageNotice(final NoticeInfo paramNoticeInfo)
  {
    ((ImageView)this.mAlertAct.findViewById(NoticeResID.alertNoticeImage)).setImageResource(NoticeResID.notice_alert_drawable);
    Object localObject1 = (Button)this.mAlertAct.findViewById(NoticeResID.confirmbtn);
    Object localObject2 = (Button)this.mAlertAct.findViewById(NoticeResID.morebtn);
    ((Button)localObject1).setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        AlertMsgManage.this.closeNotice();
      }
    });
    if (!T.ckIsEmpty(paramNoticeInfo.mNoticeUrl)) {
      ((Button)localObject2).setOnClickListener(new View.OnClickListener()
      {
        public void onClick(View paramAnonymousView)
        {
          WebViewManager.getInstance().openUrl(paramNoticeInfo.mNoticeUrl);
          AlertMsgManage.this.closeNotice();
          ReportEvent.ReportNoticeEvent(eEVENT_TYPE.eEVENT_NOTICE_MORE, paramNoticeInfo.mNoticeId);
        }
      });
    }
    localObject1 = (ImageView)this.mAlertAct.findViewById(NoticeResID.noticeContent);
    if (eMSDK_SCREENDIR.eMSDK_SCREENDIR_LANDSCAPE == eMSDK_SCREENDIR.getEnum(this.mAlertAct.getResources().getConfiguration()))
    {
      if (T.ckIsEmpty(paramNoticeInfo.mNoticeHImgUrl))
      {
        Logger.e("mNoticeHImgUrl is null");
        return;
      }
      localObject2 = Uri.fromFile(new File(paramNoticeInfo.mNoticeHImgUrl));
      if (localObject2 != null) {
        ((ImageView)localObject1).setImageURI((Uri)localObject2);
      }
    }
    for (;;)
    {
      ReportEvent.ReportNoticeEvent(eEVENT_TYPE.eEVENT_NOTICE_SHOW, paramNoticeInfo.mNoticeId);
      return;
      Logger.e("Uri is null");
      return;
      if (T.ckIsEmpty(paramNoticeInfo.mNoticeVImgUrl))
      {
        Logger.e("mNoticeHImgUrl is null");
        return;
      }
      localObject2 = Uri.fromFile(new File(paramNoticeInfo.mNoticeVImgUrl));
      if (localObject2 == null) {
        break;
      }
      ((ImageView)localObject1).setImageURI((Uri)localObject2);
    }
    Logger.e("Uri is null");
  }
  
  public void displayTextNotice(final NoticeInfo paramNoticeInfo)
  {
    ((ImageView)this.mAlertAct.findViewById(NoticeResID.alertNoticeImage)).setImageResource(NoticeResID.notice_alert_drawable);
    ((TextView)this.mAlertAct.findViewById(NoticeResID.noticeTitle)).setText(paramNoticeInfo.mNoticeTitle);
    Object localObject = (TextView)this.mAlertAct.findViewById(NoticeResID.noticeContent);
    ((TextView)localObject).setText(paramNoticeInfo.mNoticeContent);
    ((TextView)localObject).setMovementMethod(ScrollingMovementMethod.getInstance());
    localObject = (Button)this.mAlertAct.findViewById(NoticeResID.confirmbtn);
    Button localButton = (Button)this.mAlertAct.findViewById(NoticeResID.morebtn);
    ((Button)localObject).setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        AlertMsgManage.this.closeNotice();
      }
    });
    if (!T.ckIsEmpty(paramNoticeInfo.mNoticeUrl)) {
      localButton.setOnClickListener(new View.OnClickListener()
      {
        public void onClick(View paramAnonymousView)
        {
          WebViewManager.getInstance().openUrl(paramNoticeInfo.mNoticeUrl);
          AlertMsgManage.this.closeNotice();
          ReportEvent.ReportNoticeEvent(eEVENT_TYPE.eEVENT_NOTICE_MORE, paramNoticeInfo.mNoticeId);
        }
      });
    }
    ReportEvent.ReportNoticeEvent(eEVENT_TYPE.eEVENT_NOTICE_SHOW, paramNoticeInfo.mNoticeId);
  }
  
  public void displayWebNotice(final NoticeInfo paramNoticeInfo)
  {
    ((ImageView)this.mAlertAct.findViewById(NoticeResID.alertNoticeImage)).setImageResource(NoticeResID.notice_alert_drawable);
    Object localObject = (Button)this.mAlertAct.findViewById(NoticeResID.confirmbtn);
    Button localButton = (Button)this.mAlertAct.findViewById(NoticeResID.morebtn);
    final LinearLayout localLinearLayout1 = (LinearLayout)this.mAlertAct.findViewById(NoticeResID.noticeContentLine);
    final LinearLayout localLinearLayout2 = (LinearLayout)this.mAlertAct.findViewById(NoticeResID.tempLoadLayer);
    final LinearLayout localLinearLayout3 = (LinearLayout)this.mAlertAct.findViewById(NoticeResID.tempLoadFailed);
    ((Button)localObject).setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        AlertMsgManage.this.closeNotice();
      }
    });
    if (!T.ckIsEmpty(paramNoticeInfo.mNoticeUrl)) {
      localButton.setOnClickListener(new View.OnClickListener()
      {
        public void onClick(View paramAnonymousView)
        {
          WebViewManager.getInstance().openUrl(paramNoticeInfo.mNoticeUrl);
          AlertMsgManage.this.closeNotice();
          ReportEvent.ReportNoticeEvent(eEVENT_TYPE.eEVENT_NOTICE_MORE, paramNoticeInfo.mNoticeId);
        }
      });
    }
    localObject = (WebView)this.mAlertAct.findViewById(NoticeResID.noticeContent);
    ((WebView)localObject).setWebViewClient(new WebViewClient()
    {
      boolean isFailed = false;
      
      public void onLoadResource(WebView paramAnonymousWebView, String paramAnonymousString)
      {
        Logger.d("onLoadResource");
      }
      
      public void onPageFinished(WebView paramAnonymousWebView, String paramAnonymousString)
      {
        Logger.d("onPageFinished");
        if (this.isFailed)
        {
          showError();
          return;
        }
        showContent();
      }
      
      public void onPageStarted(WebView paramAnonymousWebView, String paramAnonymousString, Bitmap paramAnonymousBitmap)
      {
        Logger.d("onPageStart");
        showLoading();
      }
      
      public void onReceivedError(WebView paramAnonymousWebView, int paramAnonymousInt, String paramAnonymousString1, String paramAnonymousString2)
      {
        Logger.d("onReceivedError");
        showError();
      }
      
      public boolean shouldOverrideUrlLoading(WebView paramAnonymousWebView, String paramAnonymousString)
      {
        Logger.d("shouldOverrideUrlLoading url:" + paramAnonymousString);
        paramAnonymousWebView.loadUrl(paramAnonymousString);
        return true;
      }
      
      public void showContent()
      {
        Logger.d("showError");
        localLinearLayout2.setVisibility(8);
        localLinearLayout1.setVisibility(0);
        localLinearLayout3.setVisibility(8);
      }
      
      public void showError()
      {
        Logger.d("showError");
        this.val$noticeContent.stopLoading();
        localLinearLayout2.setVisibility(8);
        localLinearLayout1.setVisibility(8);
        localLinearLayout3.setVisibility(0);
        this.isFailed = true;
        localLinearLayout3.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymous2View)
          {
            AlertMsgManage.7.this.showLoading();
            AlertMsgManage.7.this.val$noticeContent.reload();
            AlertMsgManage.7.this.isFailed = false;
          }
        });
      }
      
      public void showLoading()
      {
        Logger.d("showLoading");
        localLinearLayout2.setVisibility(0);
        localLinearLayout1.setVisibility(8);
        localLinearLayout3.setVisibility(8);
      }
    });
    ((WebView)localObject).getSettings().setJavaScriptEnabled(true);
    ((WebView)localObject).loadUrl(paramNoticeInfo.mNoticeContentWebUrl);
    ReportEvent.ReportNoticeEvent(eEVENT_TYPE.eEVENT_NOTICE_SHOW, paramNoticeInfo.mNoticeId);
  }
  
  public void onClick(View paramView) {}
  
  public void refresh()
  {
    invalidate();
  }
}
