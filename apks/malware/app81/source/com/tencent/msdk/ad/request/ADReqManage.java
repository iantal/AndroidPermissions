package com.tencent.msdk.ad.request;

import com.tencent.msdk.WeGame;
import com.tencent.msdk.ad.ADInfo;
import com.tencent.msdk.ad.ADManager;
import com.tencent.msdk.ad.ADPosInfo;
import com.tencent.msdk.ad.BriefADInfo;
import com.tencent.msdk.ad.db.ADDBModel;
import com.tencent.msdk.ad.db.ADPosDBModel;
import com.tencent.msdk.communicator.HttpRequestManager;
import com.tencent.msdk.communicator.IHttpRequestListener;
import com.tencent.msdk.communicator.UrlManager;
import com.tencent.msdk.config.ConfigManager;
import com.tencent.msdk.tools.Logger;
import com.tencent.msdk.tools.T;
import java.util.ArrayList;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class ADReqManage
  implements IHttpRequestListener
{
  public ADReqManage() {}
  
  private JSONArray getReqAdInfoListJsonStr(ArrayList<BriefADInfo> paramArrayList)
  {
    JSONArray localJSONArray = new JSONArray();
    if (paramArrayList == null) {
      return localJSONArray;
    }
    int i = 0;
    while (i < paramArrayList.size())
    {
      BriefADInfo localBriefADInfo = (BriefADInfo)paramArrayList.get(i);
      JSONObject localJSONObject = new JSONObject();
      try
      {
        localJSONObject.put("adid", localBriefADInfo.mADId);
        localJSONObject.put("timestamp", localBriefADInfo.mTimestamp);
        localJSONArray.put(localJSONObject);
        i += 1;
      }
      catch (JSONException localJSONException)
      {
        for (;;)
        {
          localJSONException.printStackTrace();
        }
      }
    }
  }
  
  public void getADReq(ADRequestPara paramADRequestPara)
  {
    JSONObject localJSONObject = getReqJsonPacket(paramADRequestPara);
    if (paramADRequestPara.mAppId.indexOf("|") > 0) {}
    for (String str1 = (String)paramADRequestPara.mAppId.subSequence(0, paramADRequestPara.mAppId.indexOf("|"));; str1 = paramADRequestPara.mAppId)
    {
      String str2 = paramADRequestPara.mMSDKKey;
      paramADRequestPara = UrlManager.getUrl("/notice/gather_data/", ConfigManager.getApiDomain(WeGame.getInstance().getActivity()), str1, str2, paramADRequestPara.mMsdkVersion);
      Logger.d("ADReq json:" + localJSONObject.toString());
      new HttpRequestManager(this).postTextAsync(paramADRequestPara, localJSONObject.toString(), 3000);
      return;
    }
  }
  
  public JSONObject getReqJsonPacket(ADRequestPara paramADRequestPara)
  {
    JSONObject localJSONObject = new JSONObject();
    if (paramADRequestPara == null) {
      return localJSONObject;
    }
    localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("rptType", ADRequestPara.REQUEST_TYPE.value);
      localJSONObject.put("appid", paramADRequestPara.mAppId);
      localJSONObject.put("openid", paramADRequestPara.mOpenId);
      localJSONObject.put("matid", paramADRequestPara.mMatId);
      localJSONObject.put("os", paramADRequestPara.mOs);
      localJSONObject.put("osVersion", paramADRequestPara.mOsVersion);
      localJSONObject.put("tradeMark", paramADRequestPara.mTradeMark);
      localJSONObject.put("resolution", paramADRequestPara.mResolution);
      localJSONObject.put("apn", paramADRequestPara.mApn);
      localJSONObject.put("msdkVersion", paramADRequestPara.mMsdkVersion);
      localJSONObject.put("protocolVer", paramADRequestPara.mProtocolVer);
      localJSONObject.put("mid", paramADRequestPara.mXGId);
      localJSONObject.put("adVersion", ADManager.sADVersion);
      localJSONObject.put("lastTime", paramADRequestPara.mLastTime);
      localJSONObject.put("adInfoList", getReqAdInfoListJsonStr(paramADRequestPara.mAdInfoList));
      return localJSONObject;
    }
    catch (JSONException paramADRequestPara)
    {
      paramADRequestPara.printStackTrace();
    }
    return localJSONObject;
  }
  
  public void onFailure(String paramString, int paramInt1, int paramInt2)
  {
    Logger.d("onFailure:" + paramInt1 + ";" + paramString);
  }
  
  public void onSuccess(String paramString, int paramInt1, int paramInt2)
  {
    try
    {
      Logger.d("onSuccess:" + paramInt1);
      if (paramString == null)
      {
        Logger.d("getAD onSuccess,but content is null!");
        return;
      }
      paramString = new JSONObject(paramString);
      if (paramString != null)
      {
        Logger.d(paramString);
        processMsgRsp(paramString);
        return;
      }
    }
    catch (JSONException paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  public void processMsgRsp(JSONObject paramJSONObject)
  {
    if (paramJSONObject == null) {
      Logger.w("Json is null!");
    }
    label241:
    label302:
    label334:
    label339:
    for (;;)
    {
      return;
      ADDBModel localADDBModel;
      try
      {
        if (!paramJSONObject.has("adInfoList")) {
          break label302;
        }
        localObject1 = paramJSONObject.getJSONArray("adInfoList");
        localADDBModel = new ADDBModel();
        i = 0;
        if (i < ((JSONArray)localObject1).length())
        {
          localObject2 = ADInfo.newInstance(((JSONArray)localObject1).getJSONObject(i));
          if (localObject2 != null)
          {
            ADPic.savePics((ADInfo)localObject2);
            localADDBModel.save((ADInfo)localObject2);
          }
          else
          {
            Logger.w("tempADInfo is null");
          }
        }
      }
      catch (JSONException paramJSONObject)
      {
        Logger.e("decodeNoticeJson JSONException");
        paramJSONObject.printStackTrace();
        return;
      }
      Object localObject1 = "";
      if (paramJSONObject.has("sendTime")) {
        localObject1 = paramJSONObject.getString("sendTime");
      }
      Object localObject2 = localObject1;
      if (T.ckIsEmpty((String)localObject1))
      {
        Logger.e("sendTime lost in the response!");
        localObject2 = String.valueOf(System.currentTimeMillis() / 1000L);
      }
      Logger.d("updateTime:" + (String)localObject2);
      localObject1 = localADDBModel.getADIdByTime((String)localObject2);
      int i = 0;
      while (i < ((ArrayList)localObject1).size())
      {
        ADPic.deletePicById(((Integer)((ArrayList)localObject1).get(i)).intValue());
        i += 1;
      }
      i = localADDBModel.deleteADByTime((String)localObject2);
      Logger.d("deletedNum is ï¼š" + i);
      if (paramJSONObject.has("adPosList"))
      {
        localObject1 = new ADPosDBModel();
        paramJSONObject = paramJSONObject.getJSONArray("adPosList");
        i = 0;
      }
      for (;;)
      {
        if (i >= paramJSONObject.length()) {
          break label339;
        }
        localObject2 = ADPosInfo.newInstance(paramJSONObject.getJSONObject(i));
        if (localObject2 != null)
        {
          ((ADPosDBModel)localObject1).save((ADPosInfo)localObject2);
          break label334;
          Logger.e("adInfo lost in the response!");
          break label241;
        }
        Logger.w("tempAdPosInfo is null");
        break label334;
        Logger.e("adPosInfo lost in the response!");
        return;
        i += 1;
        break;
        i += 1;
      }
    }
  }
}
