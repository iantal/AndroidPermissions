package com.tencent.msdk.weixin;

import android.app.Activity;
import android.content.ComponentName;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.view.Window;
import com.tencent.mm.sdk.modelbase.BaseReq;
import com.tencent.mm.sdk.modelbase.BaseResp;
import com.tencent.mm.sdk.modelmsg.LaunchFromWX.Req;
import com.tencent.mm.sdk.modelmsg.SendAuth.Resp;
import com.tencent.mm.sdk.modelmsg.ShowMessageFromWX.Req;
import com.tencent.mm.sdk.modelmsg.WXAppExtendObject;
import com.tencent.mm.sdk.modelmsg.WXMediaMessage;
import com.tencent.mm.sdk.openapi.IWXAPI;
import com.tencent.mm.sdk.openapi.IWXAPIEventHandler;
import com.tencent.mm.sdk.openapi.WXAPIFactory;
import com.tencent.msdk.WeGame;
import com.tencent.msdk.tools.Logger;
import com.tencent.msdk.tools.T;

public class BaseWXEntryActivity
  extends Activity
  implements IWXAPIEventHandler
{
  private static final String TAG = BaseWXEntryActivity.class.getName();
  private String messageExt;
  private String platformId;
  private String wx_card_list;
  
  public BaseWXEntryActivity() {}
  
  private void TestPlatform(Intent paramIntent)
  {
    if (paramIntent == null)
    {
      Logger.d(TAG, "wx intent is NULL");
      return;
    }
    try
    {
      paramIntent = paramIntent.getExtras();
      if (paramIntent == null)
      {
        Logger.d(TAG, "wx getExtras is NULL");
        return;
      }
    }
    catch (Exception paramIntent)
    {
      paramIntent.printStackTrace();
    }
    for (;;)
    {
      Logger.d(TAG, "intent content end");
      return;
      Logger.d(paramIntent);
    }
  }
  
  private void initEntry()
  {
    WeGame.getInstance().api = WXAPIFactory.createWXAPI(this, WeGame.getInstance().wx_appid, true);
    WeGame.getInstance().api.registerApp(WeGame.getInstance().wx_appid);
    try
    {
      WeGame.getInstance().api.handleIntent(getIntent(), this);
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  private void setPlatformInfo(Intent paramIntent)
  {
    if (paramIntent != null) {}
    try
    {
      if (paramIntent.getExtras() != null)
      {
        paramIntent = getIntent().getExtras();
        this.platformId = paramIntent.getString("platformId");
        this.messageExt = paramIntent.getString("_wxobject_message_ext");
        this.wx_card_list = paramIntent.getString("_wxapi_add_card_to_wx_card_list");
      }
      return;
    }
    catch (Exception paramIntent)
    {
      paramIntent.printStackTrace();
    }
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    requestWindowFeature(1);
    getWindow().setFlags(1024, 1024);
    TestPlatform(getIntent());
    setPlatformInfo(getIntent());
    initEntry();
  }
  
  protected void onNewIntent(Intent paramIntent)
  {
    super.onNewIntent(paramIntent);
    TestPlatform(getIntent());
    setIntent(paramIntent);
    setPlatformInfo(paramIntent);
    initEntry();
  }
  
  public void onReq(BaseReq paramBaseReq)
  {
    Intent localIntent;
    Object localObject;
    if (paramBaseReq.openId == null)
    {
      Logger.d("OpenID Null");
      if (paramBaseReq.openId == null) {
        paramBaseReq.openId = "";
      }
      localIntent = getPackageManager().getLaunchIntentForPackage(getPackageName());
      localIntent.setFlags(268435456);
      localIntent.addFlags(536870912);
      localIntent.putExtra("wx_callback", "onReq");
      Logger.d("onReq" + this.messageExt);
      if (!(paramBaseReq instanceof LaunchFromWX.Req)) {
        break label244;
      }
      localIntent.putExtra("wx_mediaTagName", "wgWXGameRecommend");
      localObject = (LaunchFromWX.Req)paramBaseReq;
      localIntent.putExtra("messageExt", ((LaunchFromWX.Req)localObject).messageExt);
      localIntent.putExtra("country", ((LaunchFromWX.Req)localObject).country);
      localIntent.putExtra("lang", ((LaunchFromWX.Req)localObject).lang);
    }
    for (;;)
    {
      localIntent.putExtra("wx_transaction", paramBaseReq.transaction);
      localIntent.putExtra("wx_openId", paramBaseReq.openId);
      localIntent.putExtra("platformId", this.platformId);
      Logger.d("打印最终给msdk 的intent ---- s\n");
      Logger.d(localIntent);
      Logger.d("打印最终给msdk 的intent ---- e\n");
      startActivity(localIntent);
      finish();
      return;
      if ("".equals(paramBaseReq.openId))
      {
        Logger.d("OpenID is empty");
        break;
      }
      Logger.d("OpenID : " + paramBaseReq.openId);
      break;
      label244:
      if ((paramBaseReq instanceof ShowMessageFromWX.Req))
      {
        localObject = (ShowMessageFromWX.Req)paramBaseReq;
        localIntent.putExtra("wx_mediaTagName", ((WXAppExtendObject)((ShowMessageFromWX.Req)localObject).message.mediaObject).extInfo);
        WXMediaMessage localWXMediaMessage = ((ShowMessageFromWX.Req)localObject).message;
        localIntent.putExtra("country", ((ShowMessageFromWX.Req)localObject).country);
        localIntent.putExtra("lang", ((ShowMessageFromWX.Req)localObject).lang);
        Logger.d("mediaMsg.messageExt" + localWXMediaMessage.messageExt);
        if (T.ckIsEmpty(localWXMediaMessage.messageExt)) {
          localIntent.putExtra("messageExt", this.messageExt);
        } else {
          localIntent.putExtra("messageExt", localWXMediaMessage.messageExt);
        }
      }
    }
  }
  
  public void onResp(BaseResp paramBaseResp)
  {
    Object localObject = getPackageManager().getLaunchIntentForPackage(getPackageName());
    try
    {
      Intent localIntent = new Intent(this, Class.forName(((Intent)localObject).getComponent().getClassName()));
      localIntent.setFlags(268435456);
      localIntent.addFlags(536870912);
      Logger.d("getComponent" + ((Intent)localObject).getComponent().flattenToString());
      Logger.d("getComponent" + ((Intent)localObject).getComponent().getClassName());
      localIntent.putExtra("wx_callback", "onResp");
      localIntent.putExtra("wx_errCode", paramBaseResp.errCode);
      localIntent.putExtra("wx_errStr", paramBaseResp.errStr);
      localIntent.putExtra("wx_respType", paramBaseResp.getType());
      localIntent.putExtra("wx_transaction", paramBaseResp.transaction);
      localIntent.putExtra("wx_openId", paramBaseResp.openId);
      localIntent.putExtra("platformId", this.platformId);
      if ((paramBaseResp instanceof SendAuth.Resp))
      {
        localObject = (SendAuth.Resp)paramBaseResp;
        Logger.d("code: " + ((SendAuth.Resp)localObject).code);
        localIntent.putExtra("wx_token", ((SendAuth.Resp)localObject).code);
      }
      if ("wechatAddCardToWXCardPackage".equals(paramBaseResp.transaction)) {
        localIntent.putExtra("wxapi_add_card_to_wx_card_list", this.wx_card_list);
      }
      if (!"msdkwebpage".equals(paramBaseResp.transaction)) {
        startActivity(localIntent);
      }
      finish();
      return;
    }
    catch (ClassNotFoundException paramBaseResp)
    {
      paramBaseResp.printStackTrace();
    }
  }
}
