package com.tencent.open.yyb;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Bundle;
import android.text.TextUtils;
import android.widget.Toast;
import com.tencent.connect.auth.QQToken;
import com.tencent.connect.common.BaseApi;
import com.tencent.open.a.f;
import com.tencent.open.utils.Global;
import com.tencent.open.utils.SystemUtils;
import java.util.Iterator;
import java.util.Set;
import java.util.regex.Pattern;

public class AppbarAgent
  extends BaseApi
{
  public static final String TO_APPBAR_DETAIL = "siteIndex";
  public static final String TO_APPBAR_NEWS = "myMessage";
  public static final String TO_APPBAR_SEND_BLOG = "newThread";
  public static final String wx_appid = "wx8e8dc60535c9cd93";
  private Bundle a;
  private String b;
  
  public AppbarAgent(QQToken paramQQToken)
  {
    super(paramQQToken);
  }
  
  private String a()
  {
    Bundle localBundle = new Bundle();
    if ((this.mToken != null) && (this.mToken.getAppId() != null) && (this.mToken.getAccessToken() != null) && (this.mToken.getOpenId() != null))
    {
      localBundle.putString("qOpenAppId", this.mToken.getAppId());
      localBundle.putString("qOpenId", this.mToken.getOpenId());
      localBundle.putString("qAccessToken", this.mToken.getAccessToken());
    }
    localBundle.putString("qPackageName", Global.getContext().getPackageName());
    return "&" + a(localBundle);
  }
  
  private String a(Bundle paramBundle)
  {
    if ((paramBundle == null) || (paramBundle.isEmpty())) {
      return "";
    }
    Object localObject = new StringBuilder();
    Iterator localIterator = paramBundle.keySet().iterator();
    while (localIterator.hasNext())
    {
      String str = (String)localIterator.next();
      ((StringBuilder)localObject).append(str).append("=").append(paramBundle.get(str)).append("&");
    }
    localObject = ((StringBuilder)localObject).toString();
    paramBundle = (Bundle)localObject;
    if (((String)localObject).endsWith("&")) {
      paramBundle = ((String)localObject).substring(0, ((String)localObject).length() - 1);
    }
    f.b("AppbarAgent", "-->encodeParams, result: " + paramBundle);
    return paramBundle;
  }
  
  private void a(Activity paramActivity, String paramString)
  {
    if (this.mToken == null) {
      return;
    }
    Intent localIntent = new Intent(paramActivity, AppbarActivity.class);
    localIntent.putExtra("appid", this.mToken.getAppId());
    if ((this.mToken.getAccessToken() != null) && (this.mToken.getOpenId() != null))
    {
      a.a localA = new a.a();
      localA.b = this.mToken.getAccessToken();
      localA.c = Long.parseLong(this.mToken.getAppId());
      localA.a = this.mToken.getOpenId();
      a.a(paramActivity, paramString, this.mToken.getOpenId(), this.mToken.getAccessToken(), this.mToken.getAppId());
    }
    localIntent.putExtra("url", paramString);
    f.b("AppbarAgent", "-->(AppbarAgent)startAppbar H5 : url = " + paramString);
    try
    {
      paramActivity.startActivityForResult(localIntent, 10102);
      return;
    }
    catch (Exception paramActivity)
    {
      f.b("AppbarAgent", "-->(AppbarAgent)startAppbar : activity not found, start H5");
    }
  }
  
  private boolean a(String paramString)
  {
    return ("siteIndex".equals(paramString)) || ("myMessage".equals(paramString)) || ("newThread".equals(paramString)) || ("sId".equals(paramString)) || ("toThread".equals(paramString));
  }
  
  private Bundle b(String paramString)
  {
    Bundle localBundle = new Bundle();
    localBundle.putString("pkgName", Global.getContext().getPackageName());
    String str = paramString;
    if (!"siteIndex".equals(paramString))
    {
      if (!"newThread".equals(paramString)) {
        break label51;
      }
      str = paramString;
    }
    for (;;)
    {
      localBundle.putString("route", str);
      return localBundle;
      label51:
      if ("myMessage".equals(paramString))
      {
        localBundle.putString("source", "myapp");
        str = paramString;
      }
      else if ("sId".equals(paramString))
      {
        str = paramString;
        if (this.a != null)
        {
          localBundle.putAll(this.a);
          str = paramString;
        }
      }
      else
      {
        str = paramString;
        if ("toThread".equals(paramString)) {
          str = String.format("sId/t/%s", new Object[] { this.b });
        }
      }
    }
  }
  
  private String b()
  {
    try
    {
      PackageInfo localPackageInfo = Global.getContext().getPackageManager().getPackageInfo("com.tencent.android.qqdownloader", 0);
      if (localPackageInfo == null) {
        return null;
      }
    }
    catch (PackageManager.NameNotFoundException localNameNotFoundException)
    {
      localNameNotFoundException.printStackTrace();
      return null;
    }
    return localNameNotFoundException.versionName;
  }
  
  private String c(String paramString)
  {
    StringBuilder localStringBuilder = new StringBuilder("http://m.wsq.qq.com/direct?");
    localStringBuilder.append(a(b(paramString)));
    return localStringBuilder.toString();
  }
  
  private boolean d(String paramString)
  {
    return (!TextUtils.isEmpty(paramString)) && (Pattern.matches("^[1-9][0-9]*$", paramString));
  }
  
  public void startAppbar(Activity paramActivity, String paramString)
  {
    if (!a(paramString))
    {
      Toast.makeText(paramActivity, "传入参数有误!", 0).show();
      return;
    }
    paramString = c(paramString);
    String str = b();
    if ((!TextUtils.isEmpty(str)) && (SystemUtils.compareVersion(str, "4.2") >= 0))
    {
      str = paramString + a();
      f.b("AppbarAgent", "-->(AppbarAgent)startAppbar : yybUrl = " + str);
      try
      {
        Intent localIntent = new Intent();
        localIntent.setClassName("com.tencent.android.qqdownloader", "com.tencent.assistant.activity.ExportBrowserActivity");
        localIntent.putExtra("com.tencent.assistant.BROWSER_URL", str);
        paramActivity.startActivity(localIntent);
        paramActivity.overridePendingTransition(17432576, 17432577);
        return;
      }
      catch (Exception localException)
      {
        f.b("AppbarAgent", "-->(AppbarAgent)startAppbar : ExportBrowserActivity not found, start H5");
        a(paramActivity, paramString);
        return;
      }
    }
    a(paramActivity, paramString);
  }
  
  public void startAppbarLabel(Activity paramActivity, String paramString)
  {
    if (TextUtils.isEmpty(paramString))
    {
      Toast.makeText(paramActivity, "传入参数有误!", 0).show();
      return;
    }
    this.a = new Bundle();
    this.a.putString("params", "label/" + paramString);
    startAppbar(paramActivity, "sId");
  }
  
  public void startAppbarThread(Activity paramActivity, String paramString)
  {
    if (!d(paramString))
    {
      Toast.makeText(paramActivity, "传入参数有误!", 0).show();
      return;
    }
    this.b = paramString;
    startAppbar(paramActivity, "toThread");
  }
}
