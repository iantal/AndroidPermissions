package com.tencent.tmdownloader;

import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.os.RemoteCallbackList;
import android.os.RemoteException;
import android.os.SystemClock;
import com.tencent.tmassistantbase.network.NetworkMonitorReceiver;
import com.tencent.tmassistantbase.util.GlobalUtil;
import com.tencent.tmassistantbase.util.TMLog;
import com.tencent.tmdownloader.internal.downloadclient.MobileQQCloseServiceReceiver;
import com.tencent.tmdownloader.internal.logreport.AppInstallReportReceiver;
import com.tencent.tmdownloader.internal.logreport.i;
import java.util.HashMap;

public class TMAssistantDownloadService
  extends Service
  implements com.tencent.tmdownloader.internal.a.a.a
{
  protected static final String TAG = "TMAssistantDownloadService";
  protected final c downloadSDKServiceImpl = new c(this);
  protected final HashMap mCallbackHashMap = new HashMap();
  protected final RemoteCallbackList mCallbacks = new RemoteCallbackList();
  com.tencent.tmdownloader.internal.a.a.c mServiceDownloadTaskManager = null;
  
  public TMAssistantDownloadService() {}
  
  public void OnDownloadProgressChanged(String paramString1, String paramString2, long paramLong1, long paramLong2)
  {
    TMLog.i("TMAssistantDownloadService", "enter");
    TMLog.i("TMAssistantDownloadService", "clientKey:" + paramString1 + ",receivedLen:" + paramLong1 + ",url:" + paramString2 + "; totalLen: " + paramLong2);
    for (;;)
    {
      try
      {
        int j = this.mCallbacks.beginBroadcast();
        i = 0;
        if (i >= j) {}
      }
      catch (Throwable paramString1)
      {
        int i;
        com.tencent.tmassistant.aidl.a localA;
        String str;
        TMLog.e("TMAssistantDownloadService", "exception: ", paramString1);
        continue;
      }
      try
      {
        localA = (com.tencent.tmassistant.aidl.a)this.mCallbacks.getBroadcastItem(i);
        str = (String)this.mCallbackHashMap.get(localA);
        if ((str != null) && (str.equals(paramString1) == true))
        {
          TMLog.i("TMAssistantDownloadService", "clientKey:" + paramString1 + ",receivedLen:" + paramLong1 + ",url:" + paramString2);
          localA.a(paramString1, paramString2, paramLong1, paramLong2);
          this.mCallbacks.finishBroadcast();
          TMLog.i("TMAssistantDownloadService", "exit");
          return;
        }
      }
      catch (RemoteException localRemoteException)
      {
        TMLog.e("TMAssistantDownloadService", "exception: ", localRemoteException);
        i += 1;
      }
    }
  }
  
  public void OnDownloadStateChanged(String paramString1, String paramString2, int paramInt1, int paramInt2, String paramString3)
  {
    TMLog.i("TMAssistantDownloadService", "enter");
    TMLog.i("TMAssistantDownloadService", "clientKey:" + paramString1 + "; url: " + paramString2 + "; state:" + paramInt1 + "; errorCode: " + paramInt2 + "; errorMsg: " + paramString3);
    for (;;)
    {
      try
      {
        int j = this.mCallbacks.beginBroadcast();
        i = 0;
        if (i >= j) {}
      }
      catch (Throwable paramString1)
      {
        int i;
        com.tencent.tmassistant.aidl.a localA;
        String str;
        TMLog.e("TMAssistantDownloadService", "exception: ", paramString1);
        continue;
      }
      try
      {
        localA = (com.tencent.tmassistant.aidl.a)this.mCallbacks.getBroadcastItem(i);
        str = (String)this.mCallbackHashMap.get(localA);
        if ((str != null) && (str.equals(paramString1) == true))
        {
          TMLog.i("TMAssistantDownloadService", "serviceCallback.OnDownloadSDKServiceTaskStateChanged");
          localA.a(paramString1, paramString2, paramInt1, paramInt2, paramString3);
          this.mCallbacks.finishBroadcast();
          TMLog.i("TMAssistantDownloadService", "exit");
          return;
        }
      }
      catch (RemoteException localRemoteException)
      {
        TMLog.e("TMAssistantDownloadService", "exception: ", localRemoteException);
        i += 1;
      }
    }
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    TMLog.i("TMAssistantDownloadService", "enter");
    TMLog.i("TMAssistantDownloadService", "intent:" + paramIntent);
    TMLog.i("TMAssistantDownloadService", "returnValue: " + this.downloadSDKServiceImpl);
    TMLog.i("TMAssistantDownloadService", "exit");
    return this.downloadSDKServiceImpl;
  }
  
  public void onCreate()
  {
    TMLog.i("TMAssistantDownloadService", "enter");
    super.onCreate();
    GlobalUtil.getInstance().setContext(this);
    NetworkMonitorReceiver.getInstance().registerReceiver();
    AppInstallReportReceiver.a().b();
    this.mServiceDownloadTaskManager = new com.tencent.tmdownloader.internal.a.a.c(com.tencent.tmdownloader.internal.b.a.a().c());
    this.mServiceDownloadTaskManager.a(this);
    this.mServiceDownloadTaskManager.a();
    com.tencent.tmdownloader.internal.a.a.a().b();
    new Thread(new b(this)).start();
    TMLog.i("TMAssistantDownloadService", "exit");
  }
  
  public void onDestroy()
  {
    TMLog.i("TMAssistantDownloadService", "enter");
    super.onDestroy();
    com.tencent.tmdownloader.internal.a.a.a().c();
    i.a().d();
    i.a().b();
    this.mServiceDownloadTaskManager.b();
    this.mServiceDownloadTaskManager.a(null);
    this.mServiceDownloadTaskManager = null;
    NetworkMonitorReceiver.getInstance().unregisterReceiver();
    AppInstallReportReceiver.a().c();
    GlobalUtil.getInstance().destroy();
    SystemClock.sleep(300L);
    TMLog.i("TMAssistantDownloadService", "exit");
    MobileQQCloseServiceReceiver.a().d(this);
  }
  
  public boolean onUnbind(Intent paramIntent)
  {
    TMLog.i("TMAssistantDownloadService", "enter");
    TMLog.i("TMAssistantDownloadService", "intent:" + paramIntent);
    boolean bool = super.onUnbind(paramIntent);
    TMLog.i("TMAssistantDownloadService", "returnValue: " + bool);
    TMLog.i("TMAssistantDownloadService", "exit");
    return bool;
  }
}
