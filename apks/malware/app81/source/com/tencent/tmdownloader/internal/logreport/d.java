package com.tencent.tmdownloader.internal.logreport;

import android.text.TextUtils;
import com.tencent.tmassistantbase.util.TMLog;
import com.tencent.tmdownloader.internal.a.c;
import com.tencent.tmdownloader.internal.b.c.a;
import com.tencent.tmdownloader.internal.b.c.e;
import com.tencent.tmdownloader.internal.b.c.h;
import com.tencent.tmdownloader.internal.protocol.jce.DownloadNewChunkLogInfo;
import com.tencent.tmdownloader.internal.protocol.jce.DownloadQualityLogInfo;
import java.util.ArrayList;
import java.util.Iterator;

public class d
  extends b
{
  protected static d d = null;
  
  protected d() {}
  
  public static DownloadQualityLogInfo a(com.tencent.tmdownloader.internal.a.d paramD)
  {
    DownloadQualityLogInfo localDownloadQualityLogInfo = new DownloadQualityLogInfo();
    if (paramD != null)
    {
      localDownloadQualityLogInfo.taskId = paramD.f;
      localDownloadQualityLogInfo.sdkVersion = "1.0";
      localDownloadQualityLogInfo.usedcard = com.tencent.tmdownloader.internal.b.b.b(paramD.l);
      localDownloadQualityLogInfo.memorySize = c.d();
      localDownloadQualityLogInfo.remainsdCardSize = c.e();
      localDownloadQualityLogInfo.pkg_size = paramD.k;
      localDownloadQualityLogInfo.startTime = paramD.x;
      localDownloadQualityLogInfo.downType = ((byte)paramD.F);
      localDownloadQualityLogInfo.extMsg = paramD.H;
      localDownloadQualityLogInfo.taskResult = paramD.o;
      localDownloadQualityLogInfo.result = ((byte)paramD.i);
      localDownloadQualityLogInfo.downloadChunkLogList = b(localDownloadQualityLogInfo.taskId);
      TMLog.i("DownloadQualityReportManager", "qulitylogInfo : info.taskId = " + localDownloadQualityLogInfo.taskId + " info.sdkVersion = " + localDownloadQualityLogInfo.sdkVersion + "info.usedcard = " + localDownloadQualityLogInfo.usedcard + " info.memorySize = " + localDownloadQualityLogInfo.memorySize + " info.remainsdCardSize = " + localDownloadQualityLogInfo.remainsdCardSize + " info.pkg_size = " + localDownloadQualityLogInfo.pkg_size + " info.startTime = " + localDownloadQualityLogInfo.startTime + " info.endTime= " + localDownloadQualityLogInfo.endTime + " info.extMsg =" + localDownloadQualityLogInfo.extMsg + "info.downType = " + localDownloadQualityLogInfo.downType + "info.taskResult =" + localDownloadQualityLogInfo.taskResult + "info.Result =" + localDownloadQualityLogInfo.result);
      if ((localDownloadQualityLogInfo.downloadChunkLogList != null) && (!localDownloadQualityLogInfo.downloadChunkLogList.isEmpty()))
      {
        paramD = localDownloadQualityLogInfo.downloadChunkLogList.iterator();
        while (paramD.hasNext())
        {
          DownloadNewChunkLogInfo localDownloadNewChunkLogInfo = (DownloadNewChunkLogInfo)paramD.next();
          TMLog.i("DownloadQualityReportManager", "downloadChunkLogList: chunkinfo.segId =" + localDownloadNewChunkLogInfo.segId + " chunkinfo.taskId = " + localDownloadNewChunkLogInfo.taskId + "chunkinfo.downUrl = " + localDownloadNewChunkLogInfo.downUrl + " chunkinfo.jumpUrl=" + localDownloadNewChunkLogInfo.jumpUrl + "chunkinfo.finalDownloadUrl = " + localDownloadNewChunkLogInfo.finalDownloadUrl + " chunkinfo.networkType = " + localDownloadNewChunkLogInfo.networkType + " chunkinfo.contentType= " + localDownloadNewChunkLogInfo.contentType + " chunkinfo.down_Size=" + localDownloadNewChunkLogInfo.down_Size + " chunkinfo.costTime =" + localDownloadNewChunkLogInfo.costTime + " chunkinfo.startTime= " + localDownloadNewChunkLogInfo.startTime + " chunkinfo.endTime= " + localDownloadNewChunkLogInfo.endTime + " chunkinfo.taskResult = " + localDownloadNewChunkLogInfo.taskResult + " chunkinfo.result = " + localDownloadNewChunkLogInfo.result);
        }
      }
    }
    return localDownloadQualityLogInfo;
  }
  
  public static void a(String paramString)
  {
    try
    {
      TMLog.i("DownloadQualityReportManager", "delDownloadNewChunkLogData enter:" + paramString);
      if (!TextUtils.isEmpty(paramString)) {
        e.a(paramString);
      }
      TMLog.i("DownloadQualityReportManager", "exit");
      return;
    }
    finally {}
  }
  
  public static ArrayList b(String paramString)
  {
    TMLog.i("DownloadQualityReportManager", "getDownloadNewChunkLogInfoList enter:" + paramString);
    if (!TextUtils.isEmpty(paramString)) {
      return e.b(paramString);
    }
    TMLog.i("DownloadQualityReportManager", "exit");
    return null;
  }
  
  public static d h()
  {
    try
    {
      if (d == null) {
        d = new d();
      }
      d localD = d;
      return localD;
    }
    finally {}
  }
  
  public DownloadNewChunkLogInfo a(byte paramByte)
  {
    TMLog.i("DownloadQualityReportManager", "createNewChunkLogInfo enter");
    DownloadNewChunkLogInfo localDownloadNewChunkLogInfo = new DownloadNewChunkLogInfo();
    localDownloadNewChunkLogInfo.networkType = c.b();
    localDownloadNewChunkLogInfo.startTime = System.currentTimeMillis();
    TMLog.i("DownloadQualityReportManager", "exit");
    return localDownloadNewChunkLogInfo;
  }
  
  public void a(DownloadNewChunkLogInfo paramDownloadNewChunkLogInfo)
  {
    try
    {
      TMLog.i("DownloadQualityReportManager", "addDownloadNewChunkLogData enter:" + paramDownloadNewChunkLogInfo.taskId);
      if (paramDownloadNewChunkLogInfo != null)
      {
        long l = e.a(paramDownloadNewChunkLogInfo);
        TMLog.i("DownloadQualityReportManager", "addDownloadNewChunkLogData ret: " + l);
      }
      TMLog.i("DownloadQualityReportManager", "exit");
      return;
    }
    finally {}
  }
  
  protected a e()
  {
    return h.g();
  }
  
  protected byte f()
  {
    return 6;
  }
  
  protected boolean g()
  {
    return false;
  }
}
