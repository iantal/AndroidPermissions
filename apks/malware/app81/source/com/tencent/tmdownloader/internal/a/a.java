package com.tencent.tmdownloader.internal.a;

import android.os.Bundle;
import com.qq.taf.jce.JceStruct;
import com.tencent.tmassistantbase.network.INetworkChangedObserver;
import com.tencent.tmassistantbase.network.NetworkMonitorReceiver;
import com.tencent.tmassistantbase.util.TMLog;
import com.tencent.tmdownloader.TMAssistantDownloadConst;
import com.tencent.tmdownloader.internal.protocol.jce.DownloadStatLogInfo;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.UUID;
import java.util.concurrent.ConcurrentHashMap;

public class a
  implements INetworkChangedObserver
{
  protected static a a = null;
  final ConcurrentHashMap b = new ConcurrentHashMap();
  
  private a() {}
  
  public static a a()
  {
    if (a == null) {
      a = new a();
    }
    return a;
  }
  
  public int a(String paramString1, int paramInt, String paramString2, String paramString3, Map paramMap, Bundle paramBundle)
  {
    TMLog.i("ApkDownloadManager", "call startDownload, url: " + paramString1 + "priority: " + paramInt);
    if (!c.c())
    {
      TMLog.i("ApkDownloadManager", "call startDownload, return errCode: 1");
      return 1;
    }
    if ((!c.b().equalsIgnoreCase("wifi")) && (f.a().b()))
    {
      TMLog.i("ApkDownloadManager", "call startDownload, return errCode: 2");
      return 2;
    }
    if (!c.f(paramString1))
    {
      TMLog.i("ApkDownloadManager", "call startDownload, return errCode: 3");
      return 3;
    }
    if (c.b(paramString1, paramString2))
    {
      TMLog.i("ApkDownloadManager", "call startDownload, return errCode: 4");
      return 4;
    }
    Object localObject1 = (d)this.b.get(paramString1);
    Object localObject2;
    if (localObject1 == null)
    {
      localObject1 = com.tencent.tmdownloader.internal.b.a.a().b(paramString1);
      if (localObject1 == null)
      {
        localObject2 = new d(paramString1, paramInt, paramString2);
        ((d)localObject2).t = paramBundle.getLong(TMAssistantDownloadConst.PARAM_APPID);
        ((d)localObject2).u = paramBundle.getString(TMAssistantDownloadConst.PARAM_TASK_PACKNAME);
        ((d)localObject2).v = paramBundle.getString(TMAssistantDownloadConst.PARAM_TASK_VERSION);
        ((d)localObject2).B = paramBundle.getString(TMAssistantDownloadConst.PARAM_VIA);
        ((d)localObject2).z = paramBundle.getLong(TMAssistantDownloadConst.PARAM_UIN);
        ((d)localObject2).A = paramBundle.getString(TMAssistantDownloadConst.PARAM_UIN_TYPE);
        ((d)localObject2).C = paramBundle.getString(TMAssistantDownloadConst.PARAM_CHANNELID);
        ((d)localObject2).D = UUID.randomUUID().toString();
        ((d)localObject2).E = paramBundle.getString(TMAssistantDownloadConst.PARAM_EXTRA_DATA);
        ((d)localObject2).F = paramBundle.getByte(TMAssistantDownloadConst.PARAM_DOWNLOADTYPE);
        if (((d)localObject2).a.equals("resource/tm.android.unknown")) {
          ((d)localObject2).l = paramString3;
        }
        com.tencent.tmdownloader.internal.logreport.c localC = com.tencent.tmdownloader.internal.logreport.c.h();
        localObject1 = localObject2;
        if (localC != null)
        {
          localObject1 = com.tencent.tmdownloader.internal.logreport.c.a((d)localObject2);
          if (((d)localObject2).i == 0) {
            ((DownloadStatLogInfo)localObject1).result = 2;
          }
          localC.a((JceStruct)localObject1);
          localC.c();
          localObject1 = localObject2;
        }
        this.b.put(paramString1, localObject1);
      }
    }
    for (;;)
    {
      ((d)localObject1).a((HashMap)paramMap);
      if (((d)localObject1).a.equals("application/tm.android.apkdiff")) {}
      for (boolean bool = c.b(paramString1, ((d)localObject1).a);; bool = c.g(((d)localObject1).l))
      {
        localObject2 = localObject1;
        if (((d)localObject1).a())
        {
          localObject2 = localObject1;
          if (!bool)
          {
            this.b.remove(paramString1);
            com.tencent.tmdownloader.internal.b.a.a().a(paramString1);
            paramString2 = new d(paramString1, paramInt, paramString2);
            paramString2.t = paramBundle.getLong(TMAssistantDownloadConst.PARAM_APPID);
            paramString2.u = paramBundle.getString(TMAssistantDownloadConst.PARAM_TASK_PACKNAME);
            paramString2.v = paramBundle.getString(TMAssistantDownloadConst.PARAM_TASK_VERSION);
            paramString2.B = paramBundle.getString(TMAssistantDownloadConst.PARAM_VIA);
            paramString2.z = paramBundle.getLong(TMAssistantDownloadConst.PARAM_UIN);
            paramString2.A = paramBundle.getString(TMAssistantDownloadConst.PARAM_UIN_TYPE);
            paramString2.C = paramBundle.getString(TMAssistantDownloadConst.PARAM_CHANNELID);
            paramString2.D = UUID.randomUUID().toString();
            paramString2.E = paramBundle.getString(TMAssistantDownloadConst.PARAM_EXTRA_DATA);
            paramString2.F = paramBundle.getByte(TMAssistantDownloadConst.PARAM_DOWNLOADTYPE);
            if (paramString2.a.equals("resource/tm.android.unknown")) {
              paramString2.l = paramString3;
            }
            paramString2.a((HashMap)paramMap);
            this.b.put(paramString1, paramString2);
            paramString1 = com.tencent.tmdownloader.internal.logreport.c.h();
            localObject2 = paramString2;
            if (paramString1 != null)
            {
              paramString3 = com.tencent.tmdownloader.internal.logreport.c.a(paramString2);
              if (paramString2.i == 0) {
                paramString3.result = 2;
              }
              paramString1.a(paramString3);
              paramString1.c();
              localObject2 = paramString2;
            }
          }
        }
        paramInt = ((d)localObject2).d();
        TMLog.i("ApkDownloadManager", "call startDownload, return errCode: " + paramInt);
        return paramInt;
        if (((d)localObject1).a.equals("application/tm.android.apkdiff")) {}
        for (bool = c.b(paramString1, ((d)localObject1).a); bool; bool = c.g(((d)localObject1).l))
        {
          TMLog.i("ApkDownloadManager", "call startDownload, return errCode: 4");
          return 4;
        }
        break;
      }
    }
  }
  
  public void a(l paramL)
  {
    TMLog.i("ApkDownloadManager", "call AddDownloadListener, dl: " + paramL);
    e.a().a(paramL);
  }
  
  public void a(String paramString)
  {
    TMLog.i("ApkDownloadManager", "call pauseDownload, url: " + paramString);
    paramString = (d)this.b.get(paramString);
    if (paramString != null) {
      paramString.e();
    }
  }
  
  public void b()
  {
    TMLog.i("ApkDownloadManager", "Start to load DownloadInfo list.");
    this.b.clear();
    Object localObject = com.tencent.tmdownloader.internal.b.a.a().b();
    if (localObject != null)
    {
      TMLog.i("ApkDownloadManager", "The size of downloadinfo_list: " + ((ArrayList)localObject).size());
      localObject = ((ArrayList)localObject).iterator();
      while (((Iterator)localObject).hasNext())
      {
        d localD = (d)((Iterator)localObject).next();
        TMLog.i("ApkDownloadManager", "---------------load download info---------------");
        localD.a("ApkDownloadManager");
        this.b.put(localD.b, localD);
        if (!localD.c()) {
          localD.a(3);
        }
      }
    }
    TMLog.i("ApkDownloadManager", "Add NetworkChangedObserver to NetworkMonitorReceiver");
    NetworkMonitorReceiver.getInstance().addNetworkChangedObserver(this);
  }
  
  public void b(l paramL)
  {
    TMLog.i("ApkDownloadManager", "call RemoveDownloadListener, dl: " + paramL);
    e.a().b(paramL);
  }
  
  public void b(String paramString)
  {
    TMLog.i("ApkDownloadManager", "call cancelDownload, url: " + paramString);
    paramString = (d)this.b.remove(paramString);
    if (paramString != null) {
      paramString.f();
    }
  }
  
  public d c(String paramString)
  {
    TMLog.i("ApkDownloadManager", "call queryDownloadInfo, url: " + paramString);
    Object localObject2 = (d)this.b.get(paramString);
    Object localObject1 = localObject2;
    if (localObject2 == null) {
      localObject1 = com.tencent.tmdownloader.internal.b.a.a().b(paramString);
    }
    boolean bool = false;
    if (localObject1 != null) {
      if (!((d)localObject1).a.equals("application/tm.android.apkdiff")) {
        break label127;
      }
    }
    label127:
    for (bool = c.b(paramString, ((d)localObject1).a);; bool = c.g(((d)localObject1).l))
    {
      localObject2 = localObject1;
      if (localObject1 != null)
      {
        localObject2 = localObject1;
        if (((d)localObject1).a())
        {
          localObject2 = localObject1;
          if (!bool)
          {
            this.b.remove(paramString);
            com.tencent.tmdownloader.internal.b.a.a().a(paramString);
            localObject2 = null;
          }
        }
      }
      return localObject2;
    }
  }
  
  public void c()
  {
    NetworkMonitorReceiver.getInstance().removeNetworkChangedObserver(this);
    ArrayList localArrayList = new ArrayList();
    if (!this.b.isEmpty())
    {
      Iterator localIterator = this.b.keySet().iterator();
      while (localIterator.hasNext())
      {
        d localD = (d)this.b.get(localIterator.next());
        if (localD.i == 2) {
          a(localD.b);
        }
        localArrayList.add(localD);
      }
    }
    TMLog.i("ApkDownloadManager", "Start to save DownloadInfo list.");
    com.tencent.tmdownloader.internal.b.a.a().a(localArrayList);
  }
  
  public Boolean d()
  {
    Iterator localIterator = this.b.keySet().iterator();
    while (localIterator.hasNext()) {
      if (!((d)this.b.get(localIterator.next())).c()) {
        return Boolean.valueOf(false);
      }
    }
    return Boolean.valueOf(true);
  }
  
  public void onNetworkChanged()
  {
    TMLog.i("ApkDownloadManager", "onNetworkChanged");
    if ((c.c()) && (f.a().d()))
    {
      String str = c.b();
      Iterator localIterator = this.b.keySet().iterator();
      while (localIterator.hasNext())
      {
        d localD = (d)this.b.get(localIterator.next());
        if ((f.a().a(localD.p, str)) && ((localD.o == 601) || (localD.o == 602) || (localD.o == 605)) && (System.currentTimeMillis() - localD.q < 120000L)) {
          localD.d();
        }
      }
    }
  }
}
