package com.tencent.mid.a;

import android.content.Context;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.Looper;
import android.util.Log;
import com.tencent.mid.api.MidCallback;
import com.tencent.mid.api.MidEntity;
import com.tencent.mid.api.MidService;
import com.tencent.mid.b.a;
import com.tencent.mid.util.Util;
import com.tencent.mid.util.j;
import java.util.HashMap;
import java.util.Map;
import org.json.JSONObject;

public class d
{
  private static String b = "iikVs3FGzEQ23RaD1JlHsSWSI5Z26m2hX3gO51mH3ag=";
  private static d c = null;
  private static Context d = null;
  Handler a = null;
  
  private d(Context paramContext)
  {
    try
    {
      HandlerThread localHandlerThread = new HandlerThread("HttpManager");
      localHandlerThread.start();
      this.a = new Handler(localHandlerThread.getLooper());
      d = paramContext.getApplicationContext();
      return;
    }
    catch (Throwable paramContext)
    {
      Util.logWarn(paramContext);
    }
  }
  
  static Context a()
  {
    return d;
  }
  
  public static d a(Context paramContext)
  {
    try
    {
      if (c == null) {
        c = new d(paramContext);
      }
      paramContext = c;
      return paramContext;
    }
    finally {}
  }
  
  private String a(f paramF, MidCallback paramMidCallback)
  {
    int n = -1;
    int i = paramF.a();
    Object localObject = paramF.b();
    paramF = "0";
    int k;
    int j;
    label222:
    int m;
    if (i == 200)
    {
      k = 0;
      j = 0;
      if (!Util.isStringValid((String)localObject)) {
        break label360;
      }
      JSONObject localJSONObject = new JSONObject((String)localObject);
      i = j;
      if (!localJSONObject.isNull("mid"))
      {
        localObject = localJSONObject.optString("mid");
        i = j;
        paramF = (f)localObject;
        if (Util.isMidValid((String)localObject))
        {
          paramF = new MidEntity();
          paramF.setMid((String)localObject);
          paramF.setMac(Util.getWifiMacAddress(d));
          paramF.setImei(Util.getImei(d));
          if (localJSONObject.isNull("ts")) {
            break label299;
          }
          long l = localJSONObject.optLong("ts");
          if (l > 0L) {
            paramF.setTimestamps(l);
          }
          Util.logInfo("new mid midEntity:" + paramF.toString());
          paramMidCallback.onSuccess(paramF.toString());
          com.tencent.mid.b.g.a(d).a(paramF);
          i = 1;
          paramF = (f)localObject;
        }
      }
      if (localJSONObject.isNull(a.c)) {
        break label354;
      }
      j = localJSONObject.getInt(a.c);
      k = i;
      localObject = paramF;
      m = j;
      if (!localJSONObject.isNull(a.d))
      {
        n = localJSONObject.getInt(a.d);
        m = j;
        localObject = paramF;
        k = i;
      }
    }
    for (;;)
    {
      com.tencent.mid.b.g.a(d).a(m, n);
      if (k == 0) {
        paramMidCallback.onSuccess(com.tencent.mid.b.g.a(d).a());
      }
      return localObject;
      label299:
      paramF.setTimestamps(System.currentTimeMillis());
      break;
      paramF = "Server response error code:" + i + ", error:" + (String)localObject;
      Util.logInfo(paramF);
      paramMidCallback.onFail(i, paramF);
      return "0";
      label354:
      j = -1;
      break label222;
      label360:
      m = -1;
      localObject = paramF;
    }
  }
  
  private String b()
  {
    return Util.decode(b);
  }
  
  private void b(g paramG, MidCallback paramMidCallback)
  {
    for (;;)
    {
      int i;
      try
      {
        localObject1 = Util.getHttpUrl();
        localObject2 = b.a((String)localObject1);
        if (((f)localObject2).a() != 200)
        {
          str = "response code invalid:" + ((f)localObject2).a();
          Util.logInfo(str);
          paramMidCallback.onFail(((f)localObject2).a(), str);
          return;
        }
        i = 0;
        str = null;
        localObject2 = new JSONObject(((f)localObject2).b());
        if (((JSONObject)localObject2).isNull("rand")) {
          break label481;
        }
        i = ((JSONObject)localObject2).getInt("rand");
        str = j.a(Util.getHMAC(b(), String.valueOf(i)));
      }
      catch (Throwable localThrowable)
      {
        Object localObject1;
        Object localObject2;
        String str;
        if (!MidService.isEnableDebug()) {
          continue;
        }
        Log.w("MID", "request MID from MID server failed, try to connect MTA server", localThrowable);
        try
        {
          localObject1 = new JSONObject();
          paramG.a((JSONObject)localObject1);
          ((JSONObject)localObject1).put("ky", "A81AG9CN6AE8");
          Util.jsonPut((JSONObject)localObject1, "rip", Util.getRemoteUrlIp("http://pingma.qq.com:80"));
          a(b.a("http://pingma.qq.com:80/mstat/report/", "[" + ((JSONObject)localObject1).toString() + "]"), paramMidCallback);
          return;
          return;
        }
        catch (Throwable paramG)
        {
          paramMidCallback.onFail(55506, localThrowable.toString());
          Log.e("MID", "request MID  failed", localThrowable);
          continue;
        }
      }
      finally
      {
        b.b();
      }
      Util.logInfo("hmac == null");
      b.b();
      return;
      localObject2 = new HashMap();
      ((HashMap)localObject2).put("k", str);
      ((HashMap)localObject2).put("s", String.valueOf(i));
      str = (String)localObject1 + b.a((Map)localObject2);
      localObject1 = b.a(str);
      if (((f)localObject1).a() != 200)
      {
        Util.logInfo("hmac invalid.");
        paramMidCallback.onFail(((f)localObject1).a(), "hmac invalid.");
        b.b();
        return;
      }
      localObject1 = new JSONObject();
      paramG.a((JSONObject)localObject1);
      Util.jsonPut((JSONObject)localObject1, "rip", Util.getRemoteUrlIp(Util.getHttpUrl()));
      str = a(b.a(str, "[" + ((JSONObject)localObject1).toString() + "]"), paramMidCallback);
      if ((!Util.isMidValid(((JSONObject)localObject1).optString("mid"))) && (!Util.isMidValid(str))) {
        throw new Exception("get Mid failed, something wrong");
      }
      label481:
      if (localThrowable != null) {
        if (i != 0) {}
      }
    }
  }
  
  void a(g paramG, MidCallback paramMidCallback)
  {
    if ((paramG == null) || (this.a == null) || (paramMidCallback == null))
    {
      if (paramMidCallback != null) {
        paramMidCallback.onFail(55536, "packet == null || handler == null");
      }
      return;
    }
    if (Thread.currentThread().getId() == this.a.getLooper().getThread().getId())
    {
      b(paramG, paramMidCallback);
      return;
    }
    this.a.post(new e(this, paramG, paramMidCallback));
  }
}
