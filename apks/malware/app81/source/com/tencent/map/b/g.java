package com.tencent.map.b;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.wifi.ScanResult;
import android.net.wifi.WifiManager;
import android.os.Handler;
import android.os.Looper;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public final class g
{
  private Context a = null;
  private WifiManager b = null;
  private a c = null;
  private Handler d = null;
  private Runnable e = new Runnable()
  {
    public final void run()
    {
      g.a(g.this);
    }
  };
  private int f = 1;
  private c g = null;
  private b h = null;
  private boolean i = false;
  private byte[] j = new byte[0];
  
  public g() {}
  
  public final void a()
  {
    synchronized (this.j)
    {
      if (!this.i) {
        return;
      }
      if ((this.a == null) || (this.c == null)) {
        return;
      }
    }
    try
    {
      this.a.unregisterReceiver(this.c);
      this.d.removeCallbacks(this.e);
      this.i = false;
      return;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  public final void a(long paramLong)
  {
    if ((this.d != null) && (this.i))
    {
      this.d.removeCallbacks(this.e);
      this.d.postDelayed(this.e, paramLong);
    }
  }
  
  public final boolean a(Context paramContext, c paramC, int paramInt)
  {
    synchronized (this.j)
    {
      if (this.i) {
        return true;
      }
      if ((paramContext == null) || (paramC == null)) {
        return false;
      }
      this.d = new Handler(Looper.getMainLooper());
      this.a = paramContext;
      this.g = paramC;
      this.f = 1;
      try
      {
        this.b = ((WifiManager)this.a.getSystemService("wifi"));
        paramContext = new IntentFilter();
        this.c = new a();
        if (this.b != null)
        {
          paramC = this.c;
          if (paramC != null) {}
        }
        else
        {
          return false;
        }
        paramContext.addAction("android.net.wifi.WIFI_STATE_CHANGED");
        paramContext.addAction("android.net.wifi.SCAN_RESULTS");
        this.a.registerReceiver(this.c, paramContext);
        a(0L);
        this.i = true;
        return this.i;
      }
      catch (Exception paramContext)
      {
        return false;
      }
    }
  }
  
  public final boolean b()
  {
    return this.i;
  }
  
  public final boolean c()
  {
    if ((this.a == null) || (this.b == null)) {
      return false;
    }
    return this.b.isWifiEnabled();
  }
  
  public final class a
    extends BroadcastReceiver
  {
    private int a = 4;
    private List<ScanResult> b = null;
    private boolean c = false;
    
    public a() {}
    
    private void a(List<ScanResult> paramList)
    {
      if (paramList == null) {
        return;
      }
      label47:
      ScanResult localScanResult;
      if (this.c)
      {
        if (this.b == null) {
          this.b = new ArrayList();
        }
        int j = this.b.size();
        paramList = paramList.iterator();
        int i;
        if (paramList.hasNext())
        {
          localScanResult = (ScanResult)paramList.next();
          i = 0;
        }
        for (;;)
        {
          if (i < j)
          {
            if (((ScanResult)this.b.get(i)).BSSID.equals(localScanResult.BSSID)) {
              this.b.remove(i);
            }
          }
          else
          {
            this.b.add(localScanResult);
            break label47;
            break;
          }
          i += 1;
        }
      }
      if (this.b == null) {
        this.b = new ArrayList();
      }
      for (;;)
      {
        paramList = paramList.iterator();
        while (paramList.hasNext())
        {
          localScanResult = (ScanResult)paramList.next();
          this.b.add(localScanResult);
        }
        break;
        this.b.clear();
      }
    }
    
    public final void onReceive(Context paramContext, Intent paramIntent)
    {
      if (paramIntent.getAction().equals("android.net.wifi.WIFI_STATE_CHANGED"))
      {
        this.a = paramIntent.getIntExtra("wifi_state", 4);
        if (g.b(g.this) != null) {
          g.b(g.this).b(this.a);
        }
      }
      if ((paramIntent.getAction().equals("android.net.wifi.SCAN_RESULTS")) || (paramIntent.getAction().equals("android.net.wifi.WIFI_STATE_CHANGED")))
      {
        paramContext = null;
        if (g.c(g.this) != null) {
          paramContext = g.c(g.this).getScanResults();
        }
        if ((!paramIntent.getAction().equals("android.net.wifi.WIFI_STATE_CHANGED")) || ((paramContext != null) && ((paramContext == null) || (paramContext.size() != 0)))) {}
      }
      else
      {
        return;
      }
      if ((!this.c) && (this.b != null) && (this.b.size() >= 4) && (paramContext != null) && (paramContext.size() <= 2))
      {
        a(paramContext);
        this.c = true;
        g.this.a(0L);
        return;
      }
      a(paramContext);
      this.c = false;
      g.a(g.this, new g.b(g.this, this.b, System.currentTimeMillis(), this.a));
      if (g.b(g.this) != null) {
        g.b(g.this).a(g.d(g.this));
      }
      g.this.a(g.e(g.this) * 20000L);
    }
  }
  
  public final class b
    implements Cloneable
  {
    private List<ScanResult> a = null;
    
    public b(long paramLong, int paramInt)
    {
      if (paramLong != null)
      {
        this.a = new ArrayList();
        this$1 = paramLong.iterator();
        while (this$1.hasNext())
        {
          paramLong = (ScanResult)this$1.next();
          this.a.add(paramLong);
        }
      }
    }
    
    public final List<ScanResult> a()
    {
      return this.a;
    }
    
    public final Object clone()
    {
      try
      {
        b localB = (b)super.clone();
        if (this.a != null)
        {
          localB.a = new ArrayList();
          localB.a.addAll(this.a);
        }
        return localB;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          Object localObject = null;
        }
      }
    }
  }
  
  public static abstract interface c
  {
    public abstract void a(g.b paramB);
    
    public abstract void b(int paramInt);
  }
}
