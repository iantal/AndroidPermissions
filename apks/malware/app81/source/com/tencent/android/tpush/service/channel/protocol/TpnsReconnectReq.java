package com.tencent.android.tpush.service.channel.protocol;

import com.qq.taf.jce.JceDisplayer;
import com.qq.taf.jce.JceInputStream;
import com.qq.taf.jce.JceOutputStream;
import com.qq.taf.jce.JceStruct;
import com.qq.taf.jce.JceUtil;
import java.util.ArrayList;

public final class TpnsReconnectReq
  extends JceStruct
  implements Cloneable
{
  static ArrayList cache_msgClickList;
  static MutableInfo cache_mutableInfo;
  static ArrayList cache_recvMsgList;
  static ArrayList cache_unregInfoList;
  public String deviceId = "";
  public short deviceType = 0;
  public ArrayList msgClickList = null;
  public MutableInfo mutableInfo = null;
  public short networkType = 0;
  public ArrayList recvMsgList = null;
  public String reserved = "";
  public String sdkVersion = "";
  public String token = "";
  public ArrayList unregInfoList = null;
  
  static
  {
    if (!TpnsReconnectReq.class.desiredAssertionStatus()) {}
    for (boolean bool = true;; bool = false)
    {
      $assertionsDisabled = bool;
      return;
    }
  }
  
  public TpnsReconnectReq() {}
  
  public TpnsReconnectReq(String paramString1, String paramString2, short paramShort1, ArrayList paramArrayList1, ArrayList paramArrayList2, MutableInfo paramMutableInfo, short paramShort2, ArrayList paramArrayList3, String paramString3, String paramString4)
  {
    this.token = paramString1;
    this.deviceId = paramString2;
    this.networkType = paramShort1;
    this.unregInfoList = paramArrayList1;
    this.recvMsgList = paramArrayList2;
    this.mutableInfo = paramMutableInfo;
    this.deviceType = paramShort2;
    this.msgClickList = paramArrayList3;
    this.sdkVersion = paramString3;
    this.reserved = paramString4;
  }
  
  public String className()
  {
    return "TPNS_CLIENT_PROTOCOL.TpnsReconnectReq";
  }
  
  public Object clone()
  {
    Object localObject1 = null;
    try
    {
      Object localObject2 = super.clone();
      localObject1 = localObject2;
    }
    catch (CloneNotSupportedException localCloneNotSupportedException)
    {
      while ($assertionsDisabled) {}
      throw new AssertionError();
    }
    return localObject1;
  }
  
  public void display(StringBuilder paramStringBuilder, int paramInt)
  {
    paramStringBuilder = new JceDisplayer(paramStringBuilder, paramInt);
    paramStringBuilder.display(this.token, "token");
    paramStringBuilder.display(this.deviceId, "deviceId");
    paramStringBuilder.display(this.networkType, "networkType");
    paramStringBuilder.display(this.unregInfoList, "unregInfoList");
    paramStringBuilder.display(this.recvMsgList, "recvMsgList");
    paramStringBuilder.display(this.mutableInfo, "mutableInfo");
    paramStringBuilder.display(this.deviceType, "deviceType");
    paramStringBuilder.display(this.msgClickList, "msgClickList");
    paramStringBuilder.display(this.sdkVersion, "sdkVersion");
    paramStringBuilder.display(this.reserved, "reserved");
  }
  
  public void displaySimple(StringBuilder paramStringBuilder, int paramInt)
  {
    paramStringBuilder = new JceDisplayer(paramStringBuilder, paramInt);
    paramStringBuilder.displaySimple(this.token, true);
    paramStringBuilder.displaySimple(this.deviceId, true);
    paramStringBuilder.displaySimple(this.networkType, true);
    paramStringBuilder.displaySimple(this.unregInfoList, true);
    paramStringBuilder.displaySimple(this.recvMsgList, true);
    paramStringBuilder.displaySimple(this.mutableInfo, true);
    paramStringBuilder.displaySimple(this.deviceType, true);
    paramStringBuilder.displaySimple(this.msgClickList, true);
    paramStringBuilder.displaySimple(this.sdkVersion, true);
    paramStringBuilder.displaySimple(this.reserved, false);
  }
  
  public boolean equals(Object paramObject)
  {
    if (paramObject == null) {}
    do
    {
      return false;
      paramObject = (TpnsReconnectReq)paramObject;
    } while ((!JceUtil.equals(this.token, paramObject.token)) || (!JceUtil.equals(this.deviceId, paramObject.deviceId)) || (!JceUtil.equals(this.networkType, paramObject.networkType)) || (!JceUtil.equals(this.unregInfoList, paramObject.unregInfoList)) || (!JceUtil.equals(this.recvMsgList, paramObject.recvMsgList)) || (!JceUtil.equals(this.mutableInfo, paramObject.mutableInfo)) || (!JceUtil.equals(this.deviceType, paramObject.deviceType)) || (!JceUtil.equals(this.msgClickList, paramObject.msgClickList)) || (!JceUtil.equals(this.sdkVersion, paramObject.sdkVersion)) || (!JceUtil.equals(this.reserved, paramObject.reserved)));
    return true;
  }
  
  public String fullClassName()
  {
    return "com.tencent.android.tpush.service.channel.protocol.TpnsReconnectReq";
  }
  
  public String getDeviceId()
  {
    return this.deviceId;
  }
  
  public short getDeviceType()
  {
    return this.deviceType;
  }
  
  public ArrayList getMsgClickList()
  {
    return this.msgClickList;
  }
  
  public MutableInfo getMutableInfo()
  {
    return this.mutableInfo;
  }
  
  public short getNetworkType()
  {
    return this.networkType;
  }
  
  public ArrayList getRecvMsgList()
  {
    return this.recvMsgList;
  }
  
  public String getReserved()
  {
    return this.reserved;
  }
  
  public String getSdkVersion()
  {
    return this.sdkVersion;
  }
  
  public String getToken()
  {
    return this.token;
  }
  
  public ArrayList getUnregInfoList()
  {
    return this.unregInfoList;
  }
  
  public int hashCode()
  {
    try
    {
      throw new Exception("Need define key first!");
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return 0;
  }
  
  public void readFrom(JceInputStream paramJceInputStream)
  {
    this.token = paramJceInputStream.readString(0, true);
    this.deviceId = paramJceInputStream.readString(1, true);
    this.networkType = paramJceInputStream.read(this.networkType, 2, true);
    Object localObject;
    if (cache_unregInfoList == null)
    {
      cache_unregInfoList = new ArrayList();
      localObject = new UnregInfo();
      cache_unregInfoList.add(localObject);
    }
    this.unregInfoList = ((ArrayList)paramJceInputStream.read(cache_unregInfoList, 3, false));
    if (cache_recvMsgList == null)
    {
      cache_recvMsgList = new ArrayList();
      localObject = new TpnsPushClientReport();
      cache_recvMsgList.add(localObject);
    }
    this.recvMsgList = ((ArrayList)paramJceInputStream.read(cache_recvMsgList, 4, false));
    if (cache_mutableInfo == null) {
      cache_mutableInfo = new MutableInfo();
    }
    this.mutableInfo = ((MutableInfo)paramJceInputStream.read(cache_mutableInfo, 5, false));
    this.deviceType = paramJceInputStream.read(this.deviceType, 6, false);
    if (cache_msgClickList == null)
    {
      cache_msgClickList = new ArrayList();
      localObject = new TpnsClickClientReport();
      cache_msgClickList.add(localObject);
    }
    this.msgClickList = ((ArrayList)paramJceInputStream.read(cache_msgClickList, 7, false));
    this.sdkVersion = paramJceInputStream.readString(8, false);
    this.reserved = paramJceInputStream.readString(9, false);
  }
  
  public void setDeviceId(String paramString)
  {
    this.deviceId = paramString;
  }
  
  public void setDeviceType(short paramShort)
  {
    this.deviceType = paramShort;
  }
  
  public void setMsgClickList(ArrayList paramArrayList)
  {
    this.msgClickList = paramArrayList;
  }
  
  public void setMutableInfo(MutableInfo paramMutableInfo)
  {
    this.mutableInfo = paramMutableInfo;
  }
  
  public void setNetworkType(short paramShort)
  {
    this.networkType = paramShort;
  }
  
  public void setRecvMsgList(ArrayList paramArrayList)
  {
    this.recvMsgList = paramArrayList;
  }
  
  public void setReserved(String paramString)
  {
    this.reserved = paramString;
  }
  
  public void setSdkVersion(String paramString)
  {
    this.sdkVersion = paramString;
  }
  
  public void setToken(String paramString)
  {
    this.token = paramString;
  }
  
  public void setUnregInfoList(ArrayList paramArrayList)
  {
    this.unregInfoList = paramArrayList;
  }
  
  public void writeTo(JceOutputStream paramJceOutputStream)
  {
    paramJceOutputStream.write(this.token, 0);
    paramJceOutputStream.write(this.deviceId, 1);
    paramJceOutputStream.write(this.networkType, 2);
    if (this.unregInfoList != null) {
      paramJceOutputStream.write(this.unregInfoList, 3);
    }
    if (this.recvMsgList != null) {
      paramJceOutputStream.write(this.recvMsgList, 4);
    }
    if (this.mutableInfo != null) {
      paramJceOutputStream.write(this.mutableInfo, 5);
    }
    paramJceOutputStream.write(this.deviceType, 6);
    if (this.msgClickList != null) {
      paramJceOutputStream.write(this.msgClickList, 7);
    }
    if (this.sdkVersion != null) {
      paramJceOutputStream.write(this.sdkVersion, 8);
    }
    if (this.reserved != null) {
      paramJceOutputStream.write(this.reserved, 9);
    }
  }
}
