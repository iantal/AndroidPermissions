package com.tencent.android.tpush.service;

import android.content.Context;
import android.content.pm.ActivityInfo;
import android.content.pm.ResolveInfo;
import android.os.Build.VERSION;
import android.os.Handler;
import android.os.HandlerThread;
import com.jg.JgClassChecked;
import com.tencent.android.tpush.XGPush4Msdk;
import com.tencent.android.tpush.XGPushConfig;
import com.tencent.android.tpush.XGPushManager;
import com.tencent.android.tpush.logging.TLog;
import com.tencent.android.tpush.service.a.c;
import com.tencent.android.tpush.service.cache.CacheManager;
import com.tencent.android.tpush.service.d.d;
import java.io.File;
import java.net.InetAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Random;

@JgClassChecked(author=1, fComment="确认已进行安全校验", lastDate="20150316", reviewer=3, vComment={com.jg.EType.SERVICESCHECK})
public class XGWatchdog
{
  public static Integer CURRENT_WD_VERSION;
  private static final String LIB_FULL_NAME = "libtpnsWatchdog.so";
  private static final String LIB_NAME = "tpnsWatchdog";
  public static final String TAG = "TpnsWatchdog";
  private static String WatchdogPath = "";
  private static int defaultWatchdogPort = 55550;
  private static Handler handler;
  private static volatile XGWatchdog instance;
  private static Random random;
  private static HandlerThread thread;
  private static final String watchdogPortName = "com.tencent.tpnsWatchdogPort";
  private Context context = null;
  volatile boolean isStarted = false;
  
  static
  {
    CURRENT_WD_VERSION = Integer.valueOf(2);
    random = new Random();
    thread = null;
    handler = null;
    instance = null;
  }
  
  private XGWatchdog(Context paramContext)
  {
    this.context = paramContext.getApplicationContext();
    if (l.f() == null) {
      l.b(this.context);
    }
  }
  
  /* Error */
  private String directSendContent(String paramString)
  {
    // Byte code:
    //   0: new 113	java/net/Socket
    //   3: dup
    //   4: ldc 115
    //   6: aload_0
    //   7: invokevirtual 119	com/tencent/android/tpush/service/XGWatchdog:getWatchdogPort	()I
    //   10: invokespecial 122	java/net/Socket:<init>	(Ljava/lang/String;I)V
    //   13: astore 4
    //   15: aload 4
    //   17: sipush 2000
    //   20: invokevirtual 126	java/net/Socket:setSoTimeout	(I)V
    //   23: new 128	java/io/BufferedReader
    //   26: dup
    //   27: new 130	java/io/InputStreamReader
    //   30: dup
    //   31: aload 4
    //   33: invokevirtual 134	java/net/Socket:getInputStream	()Ljava/io/InputStream;
    //   36: invokespecial 137	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   39: invokespecial 140	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   42: astore_3
    //   43: new 142	java/io/BufferedWriter
    //   46: dup
    //   47: new 144	java/io/OutputStreamWriter
    //   50: dup
    //   51: aload 4
    //   53: invokevirtual 148	java/net/Socket:getOutputStream	()Ljava/io/OutputStream;
    //   56: invokespecial 151	java/io/OutputStreamWriter:<init>	(Ljava/io/OutputStream;)V
    //   59: invokespecial 154	java/io/BufferedWriter:<init>	(Ljava/io/Writer;)V
    //   62: astore 8
    //   64: aload 8
    //   66: astore 7
    //   68: aload_3
    //   69: astore 6
    //   71: aload 4
    //   73: astore 5
    //   75: new 156	java/lang/StringBuilder
    //   78: dup
    //   79: invokespecial 157	java/lang/StringBuilder:<init>	()V
    //   82: ldc -97
    //   84: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   87: aload_0
    //   88: invokevirtual 167	com/tencent/android/tpush/service/XGWatchdog:getLocalXGApps	()Ljava/lang/String;
    //   91: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   94: invokevirtual 170	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   97: astore_2
    //   98: aload_1
    //   99: ifnull +428 -> 527
    //   102: aload 8
    //   104: astore 7
    //   106: aload_3
    //   107: astore 6
    //   109: aload 4
    //   111: astore 5
    //   113: aload 8
    //   115: aload_1
    //   116: invokevirtual 174	java/io/BufferedWriter:write	(Ljava/lang/String;)V
    //   119: aload 8
    //   121: astore 7
    //   123: aload_3
    //   124: astore 6
    //   126: aload 4
    //   128: astore 5
    //   130: aload 8
    //   132: invokevirtual 177	java/io/BufferedWriter:flush	()V
    //   135: aload 8
    //   137: astore 7
    //   139: aload_3
    //   140: astore 6
    //   142: aload 4
    //   144: astore 5
    //   146: ldc 28
    //   148: new 156	java/lang/StringBuilder
    //   151: dup
    //   152: invokespecial 157	java/lang/StringBuilder:<init>	()V
    //   155: ldc -77
    //   157: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   160: aload_1
    //   161: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   164: invokevirtual 170	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   167: invokestatic 185	com/tencent/android/tpush/logging/TLog:i	(Ljava/lang/String;Ljava/lang/String;)V
    //   170: aload 8
    //   172: astore 7
    //   174: aload_3
    //   175: astore 6
    //   177: aload 4
    //   179: astore 5
    //   181: aload_3
    //   182: invokevirtual 188	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   185: astore_1
    //   186: aload 8
    //   188: astore 7
    //   190: aload_3
    //   191: astore 6
    //   193: aload 4
    //   195: astore 5
    //   197: ldc 28
    //   199: new 156	java/lang/StringBuilder
    //   202: dup
    //   203: invokespecial 157	java/lang/StringBuilder:<init>	()V
    //   206: ldc -66
    //   208: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   211: aload_1
    //   212: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   215: invokevirtual 170	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   218: invokestatic 185	com/tencent/android/tpush/logging/TLog:i	(Ljava/lang/String;Ljava/lang/String;)V
    //   221: aload 4
    //   223: ifnull +8 -> 231
    //   226: aload 4
    //   228: invokevirtual 193	java/net/Socket:close	()V
    //   231: aload_3
    //   232: ifnull +7 -> 239
    //   235: aload_3
    //   236: invokevirtual 194	java/io/BufferedReader:close	()V
    //   239: aload 8
    //   241: ifnull +8 -> 249
    //   244: aload 8
    //   246: invokevirtual 195	java/io/BufferedWriter:close	()V
    //   249: aload_1
    //   250: areturn
    //   251: astore_2
    //   252: ldc 28
    //   254: new 156	java/lang/StringBuilder
    //   257: dup
    //   258: invokespecial 157	java/lang/StringBuilder:<init>	()V
    //   261: ldc -59
    //   263: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   266: aload_2
    //   267: invokevirtual 200	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   270: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   273: invokevirtual 170	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   276: invokestatic 203	com/tencent/android/tpush/logging/TLog:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   279: goto -48 -> 231
    //   282: astore_2
    //   283: aconst_null
    //   284: astore_1
    //   285: aconst_null
    //   286: astore_3
    //   287: aconst_null
    //   288: astore 4
    //   290: aload_1
    //   291: astore 7
    //   293: aload_3
    //   294: astore 6
    //   296: aload 4
    //   298: astore 5
    //   300: ldc 28
    //   302: new 156	java/lang/StringBuilder
    //   305: dup
    //   306: invokespecial 157	java/lang/StringBuilder:<init>	()V
    //   309: ldc -51
    //   311: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   314: aload_2
    //   315: invokevirtual 206	java/lang/Exception:toString	()Ljava/lang/String;
    //   318: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   321: invokevirtual 170	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   324: invokestatic 185	com/tencent/android/tpush/logging/TLog:i	(Ljava/lang/String;Ljava/lang/String;)V
    //   327: aload 4
    //   329: ifnull +8 -> 337
    //   332: aload 4
    //   334: invokevirtual 193	java/net/Socket:close	()V
    //   337: aload_3
    //   338: ifnull +7 -> 345
    //   341: aload_3
    //   342: invokevirtual 194	java/io/BufferedReader:close	()V
    //   345: aload_1
    //   346: ifnull +7 -> 353
    //   349: aload_1
    //   350: invokevirtual 195	java/io/BufferedWriter:close	()V
    //   353: aconst_null
    //   354: areturn
    //   355: astore_2
    //   356: ldc 28
    //   358: new 156	java/lang/StringBuilder
    //   361: dup
    //   362: invokespecial 157	java/lang/StringBuilder:<init>	()V
    //   365: ldc -59
    //   367: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   370: aload_2
    //   371: invokevirtual 200	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   374: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   377: invokevirtual 170	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   380: invokestatic 203	com/tencent/android/tpush/logging/TLog:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   383: goto -46 -> 337
    //   386: astore_1
    //   387: aconst_null
    //   388: astore_2
    //   389: aconst_null
    //   390: astore_3
    //   391: aconst_null
    //   392: astore 4
    //   394: aload 4
    //   396: ifnull +8 -> 404
    //   399: aload 4
    //   401: invokevirtual 193	java/net/Socket:close	()V
    //   404: aload_3
    //   405: ifnull +7 -> 412
    //   408: aload_3
    //   409: invokevirtual 194	java/io/BufferedReader:close	()V
    //   412: aload_2
    //   413: ifnull +7 -> 420
    //   416: aload_2
    //   417: invokevirtual 195	java/io/BufferedWriter:close	()V
    //   420: aload_1
    //   421: athrow
    //   422: astore 4
    //   424: ldc 28
    //   426: new 156	java/lang/StringBuilder
    //   429: dup
    //   430: invokespecial 157	java/lang/StringBuilder:<init>	()V
    //   433: ldc -59
    //   435: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   438: aload 4
    //   440: invokevirtual 200	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   443: invokevirtual 163	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   446: invokevirtual 170	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   449: invokestatic 203	com/tencent/android/tpush/logging/TLog:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   452: goto -48 -> 404
    //   455: astore_2
    //   456: goto -217 -> 239
    //   459: astore_2
    //   460: aload_1
    //   461: areturn
    //   462: astore_2
    //   463: goto -118 -> 345
    //   466: astore_1
    //   467: goto -114 -> 353
    //   470: astore_3
    //   471: goto -59 -> 412
    //   474: astore_2
    //   475: goto -55 -> 420
    //   478: astore_1
    //   479: aconst_null
    //   480: astore_2
    //   481: aconst_null
    //   482: astore_3
    //   483: goto -89 -> 394
    //   486: astore_1
    //   487: aconst_null
    //   488: astore_2
    //   489: goto -95 -> 394
    //   492: astore_1
    //   493: aload 7
    //   495: astore_2
    //   496: aload 6
    //   498: astore_3
    //   499: aload 5
    //   501: astore 4
    //   503: goto -109 -> 394
    //   506: astore_2
    //   507: aconst_null
    //   508: astore_1
    //   509: aconst_null
    //   510: astore_3
    //   511: goto -221 -> 290
    //   514: astore_2
    //   515: aconst_null
    //   516: astore_1
    //   517: goto -227 -> 290
    //   520: astore_2
    //   521: aload 8
    //   523: astore_1
    //   524: goto -234 -> 290
    //   527: aload_2
    //   528: astore_1
    //   529: goto -427 -> 102
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	532	0	this	XGWatchdog
    //   0	532	1	paramString	String
    //   97	1	2	str	String
    //   251	16	2	localException1	Exception
    //   282	33	2	localException2	Exception
    //   355	16	2	localException3	Exception
    //   388	29	2	localObject1	Object
    //   455	1	2	localException4	Exception
    //   459	1	2	localException5	Exception
    //   462	1	2	localException6	Exception
    //   474	1	2	localException7	Exception
    //   480	16	2	localObject2	Object
    //   506	1	2	localException8	Exception
    //   514	1	2	localException9	Exception
    //   520	8	2	localException10	Exception
    //   42	367	3	localBufferedReader1	java.io.BufferedReader
    //   470	1	3	localException11	Exception
    //   482	29	3	localObject3	Object
    //   13	387	4	localSocket1	java.net.Socket
    //   422	17	4	localException12	Exception
    //   501	1	4	localObject4	Object
    //   73	427	5	localSocket2	java.net.Socket
    //   69	428	6	localBufferedReader2	java.io.BufferedReader
    //   66	428	7	localObject5	Object
    //   62	460	8	localBufferedWriter	java.io.BufferedWriter
    // Exception table:
    //   from	to	target	type
    //   226	231	251	java/lang/Exception
    //   0	15	282	java/lang/Exception
    //   332	337	355	java/lang/Exception
    //   0	15	386	finally
    //   399	404	422	java/lang/Exception
    //   235	239	455	java/lang/Exception
    //   244	249	459	java/lang/Exception
    //   341	345	462	java/lang/Exception
    //   349	353	466	java/lang/Exception
    //   408	412	470	java/lang/Exception
    //   416	420	474	java/lang/Exception
    //   15	43	478	finally
    //   43	64	486	finally
    //   75	98	492	finally
    //   113	119	492	finally
    //   130	135	492	finally
    //   146	170	492	finally
    //   181	186	492	finally
    //   197	221	492	finally
    //   300	327	492	finally
    //   15	43	506	java/lang/Exception
    //   43	64	514	java/lang/Exception
    //   75	98	520	java/lang/Exception
    //   113	119	520	java/lang/Exception
    //   130	135	520	java/lang/Exception
    //   146	170	520	java/lang/Exception
    //   181	186	520	java/lang/Exception
    //   197	221	520	java/lang/Exception
  }
  
  private void directStartWatchdog()
  {
    if (com.tencent.android.tpush.service.a.a.y == 0)
    {
      TLog.i("TpnsWatchdog", "Watchdog is disable.");
      return;
    }
    if (!loadWatchdog(this.context.getPackageName()))
    {
      TLog.i("TpnsWatchdog", "Watchdog lib is not exist.");
      return;
    }
    if (!XGPushManager.isEnableService(this.context))
    {
      TLog.i("TpnsWatchdog", "xg is disable.");
      return;
    }
    int i = getWatchdogPort();
    Object localObject4 = CacheManager.getRegisterInfo(this.context);
    Object localObject1 = new StringBuffer();
    Object localObject2 = new StringBuffer();
    Object localObject3 = new StringBuffer();
    localObject4 = ((List)localObject4).iterator();
    while (((Iterator)localObject4).hasNext())
    {
      com.tencent.android.tpush.data.b localB = (com.tencent.android.tpush.data.b)((Iterator)localObject4).next();
      ((StringBuffer)localObject1).append(localB.a).append(",");
      ((StringBuffer)localObject2).append(localB.b).append(",");
      ((StringBuffer)localObject3).append(localB.d).append(",");
    }
    localObject2 = new String[7];
    localObject2[0] = WatchdogPath;
    localObject2[1] = getLocalXGApps();
    localObject2[2] = String.valueOf(i);
    localObject2[3] = domainToIp();
    localObject2[4] = new com.tencent.android.tpush.b.a(this.context).a();
    localObject3 = new StringBuilder().append("");
    if (XGPushConfig.isEnableDebug(this.context)) {}
    String str;
    for (localObject1 = "1";; str = "0")
    {
      localObject2[5] = ((String)localObject1);
      localObject2[6] = ("" + Build.VERSION.SDK_INT);
      TLog.i("TpnsWatchdog", "start Watchdog, params:" + Arrays.asList((Object[])localObject2));
      try
      {
        Runtime.getRuntime().exec((String[])localObject2);
        return;
      }
      catch (Exception localException)
      {
        TLog.e("TpnsWatchdog", "Exception", localException);
        return;
      }
    }
  }
  
  private String domainToIp()
  {
    try
    {
      String str = InetAddress.getByName("pingma.qq.com").getHostAddress();
      return str;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return "14.18.245.161";
  }
  
  public static XGWatchdog getInstance(Context paramContext)
  {
    
    if (instance == null) {}
    try
    {
      if (instance == null) {
        instance = new XGWatchdog(paramContext);
      }
      return instance;
    }
    finally {}
  }
  
  public static int getRandomInt(int paramInt)
  {
    return random.nextInt(paramInt);
  }
  
  public static int getRandomPort()
  {
    return getRandomInt(1000) + 55000;
  }
  
  private static void initHandler()
  {
    if ((thread == null) || (!thread.isAlive()) || (thread.isInterrupted()) || (thread.getState() == Thread.State.TERMINATED))
    {
      thread = new HandlerThread("XGWatchdog.thread");
      thread.start();
      handler = new Handler(thread.getLooper());
      TLog.i("TpnsWatchdog", ">>> Create new working thread." + thread.getId());
    }
  }
  
  private static boolean loadWatchdog(String paramString)
  {
    boolean bool1;
    if (!d.a(WatchdogPath)) {
      bool1 = true;
    }
    for (;;)
    {
      return bool1;
      WatchdogPath = "";
      try
      {
        paramString = new File(File.separator + "data" + File.separator + "data" + File.separator + paramString + File.separator + "lib" + File.separator + "libtpnsWatchdog.so");
        boolean bool2 = paramString.exists();
        bool1 = bool2;
        if (bool2)
        {
          WatchdogPath = paramString.getAbsolutePath();
          return bool2;
        }
      }
      catch (Exception paramString)
      {
        TLog.e("TpnsWatchdog", "jniStartWatchdog loadWatchdog error:" + paramString.getMessage());
      }
    }
    return false;
  }
  
  public String getLocalXGApps()
  {
    if (l.f() == null) {
      l.b(this.context);
    }
    Object localObject2 = d.a(this.context);
    Object localObject1 = new ArrayList(10);
    Object localObject3;
    if (localObject2 != null)
    {
      localObject2 = ((List)localObject2).iterator();
      while (((Iterator)localObject2).hasNext())
      {
        localObject3 = ((ResolveInfo)((Iterator)localObject2).next()).activityInfo.packageName;
        if (!d.a((String)localObject3))
        {
          com.tencent.android.tpush.data.b localB = CacheManager.getRegisterInfoByPkgName((String)localObject3);
          if (localB != null)
          {
            Object localObject4 = com.tencent.android.tpush.service.a.b.a(this.context, (String)localObject3);
            float f = 1.0F;
            if (localObject4 != null) {
              f = ((c)localObject4).a;
            }
            localObject4 = new x();
            ((x)localObject4).a = ((String)localObject3);
            ((x)localObject4).c = localB.a;
            ((x)localObject4).b = f;
            ((List)localObject1).add(localObject4);
          }
        }
      }
    }
    Collections.sort((List)localObject1);
    long l2 = XGPushConfig.getAccessId(this.context);
    long l1 = l2;
    if (l2 <= 0L) {
      l1 = XGPush4Msdk.getQQAccessId(this.context);
    }
    localObject2 = new x();
    ((x)localObject2).a = this.context.getPackageName();
    ((x)localObject2).c = l1;
    ((x)localObject2).b = 2.37F;
    ((List)localObject1).add(0, localObject2);
    TLog.i("TpnsWatchdog", "list:" + localObject1);
    localObject2 = new StringBuilder(1024);
    localObject1 = ((List)localObject1).iterator();
    while (((Iterator)localObject1).hasNext())
    {
      localObject3 = (x)((Iterator)localObject1).next();
      ((StringBuilder)localObject2).append(((x)localObject3).a).append(",").append(((x)localObject3).c).append(";");
    }
    TLog.i("TpnsWatchdog", "local apps:" + ((StringBuilder)localObject2).toString());
    return ((StringBuilder)localObject2).toString();
  }
  
  /* Error */
  public int getWatchdogPort()
  {
    // Byte code:
    //   0: aload_0
    //   1: getfield 82	com/tencent/android/tpush/service/XGWatchdog:context	Landroid/content/Context;
    //   4: invokevirtual 506	android/content/Context:getContentResolver	()Landroid/content/ContentResolver;
    //   7: ldc 43
    //   9: invokestatic 512	android/provider/Settings$System:getInt	(Landroid/content/ContentResolver;Ljava/lang/String;)I
    //   12: istore_1
    //   13: iload_1
    //   14: ireturn
    //   15: astore_3
    //   16: ldc 28
    //   18: ldc_w 514
    //   21: aload_3
    //   22: invokestatic 517	com/tencent/android/tpush/logging/TLog:w	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
    //   25: iconst_0
    //   26: istore_1
    //   27: iload_1
    //   28: bipush 10
    //   30: if_icmpge +101 -> 131
    //   33: invokestatic 519	com/tencent/android/tpush/service/XGWatchdog:getRandomPort	()I
    //   36: istore_2
    //   37: new 521	java/net/ServerSocket
    //   40: dup
    //   41: iload_2
    //   42: invokespecial 522	java/net/ServerSocket:<init>	(I)V
    //   45: astore 4
    //   47: aload 4
    //   49: astore_3
    //   50: aload_0
    //   51: getfield 82	com/tencent/android/tpush/service/XGWatchdog:context	Landroid/content/Context;
    //   54: invokevirtual 506	android/content/Context:getContentResolver	()Landroid/content/ContentResolver;
    //   57: ldc 43
    //   59: iload_2
    //   60: invokestatic 526	android/provider/Settings$System:putInt	(Landroid/content/ContentResolver;Ljava/lang/String;I)Z
    //   63: pop
    //   64: iload_2
    //   65: istore_1
    //   66: aload 4
    //   68: ifnull -55 -> 13
    //   71: aload 4
    //   73: invokevirtual 527	java/net/ServerSocket:close	()V
    //   76: iload_2
    //   77: ireturn
    //   78: astore_3
    //   79: iload_2
    //   80: ireturn
    //   81: astore 5
    //   83: aconst_null
    //   84: astore 4
    //   86: aload 4
    //   88: astore_3
    //   89: ldc 28
    //   91: ldc_w 529
    //   94: aload 5
    //   96: invokestatic 329	com/tencent/android/tpush/logging/TLog:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
    //   99: aload 4
    //   101: ifnull +8 -> 109
    //   104: aload 4
    //   106: invokevirtual 527	java/net/ServerSocket:close	()V
    //   109: iload_1
    //   110: iconst_1
    //   111: iadd
    //   112: istore_1
    //   113: goto -86 -> 27
    //   116: astore 4
    //   118: aconst_null
    //   119: astore_3
    //   120: aload_3
    //   121: ifnull +7 -> 128
    //   124: aload_3
    //   125: invokevirtual 527	java/net/ServerSocket:close	()V
    //   128: aload 4
    //   130: athrow
    //   131: getstatic 77	com/tencent/android/tpush/service/XGWatchdog:defaultWatchdogPort	I
    //   134: ireturn
    //   135: astore_3
    //   136: goto -27 -> 109
    //   139: astore_3
    //   140: goto -12 -> 128
    //   143: astore 4
    //   145: goto -25 -> 120
    //   148: astore 5
    //   150: goto -64 -> 86
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	153	0	this	XGWatchdog
    //   12	101	1	i	int
    //   36	44	2	j	int
    //   15	7	3	localSettingNotFoundException	android.provider.Settings.SettingNotFoundException
    //   49	1	3	localObject1	Object
    //   78	1	3	localException1	Exception
    //   88	37	3	localObject2	Object
    //   135	1	3	localException2	Exception
    //   139	1	3	localException3	Exception
    //   45	60	4	localServerSocket	java.net.ServerSocket
    //   116	13	4	localObject3	Object
    //   143	1	4	localObject4	Object
    //   81	14	5	localException4	Exception
    //   148	1	5	localException5	Exception
    // Exception table:
    //   from	to	target	type
    //   0	13	15	android/provider/Settings$SettingNotFoundException
    //   71	76	78	java/lang/Exception
    //   37	47	81	java/lang/Exception
    //   37	47	116	finally
    //   104	109	135	java/lang/Exception
    //   124	128	139	java/lang/Exception
    //   50	64	143	finally
    //   89	99	143	finally
    //   50	64	148	java/lang/Exception
  }
  
  public void sendAllLocalXGAppList()
  {
    sendHeartbeat2Watchdog(null);
  }
  
  public void sendDebugMode(boolean paramBoolean)
  {
    StringBuilder localStringBuilder = new StringBuilder().append("debug:");
    if (paramBoolean) {}
    for (String str = "1";; str = "0")
    {
      sendHeartbeat2Watchdog(str);
      return;
    }
  }
  
  public void sendHeartbeat2Watchdog(String paramString)
  {
    sendHeartbeat2Watchdog(paramString, null);
  }
  
  public void sendHeartbeat2Watchdog(String paramString, w paramW)
  {
    handler.post(new u(this, paramString, paramW));
  }
  
  public void sendXGApp(String paramString, long paramLong)
  {
    sendHeartbeat2Watchdog(paramString + "," + paramLong + ";");
  }
  
  public void startWatchdog()
  {
    handler.post(new v(this));
  }
}
