package com.tencent.android.tpush.service.channel.protocol;

import com.qq.taf.jce.JceDisplayer;
import com.qq.taf.jce.JceInputStream;
import com.qq.taf.jce.JceOutputStream;
import com.qq.taf.jce.JceStruct;
import com.qq.taf.jce.JceUtil;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public final class ApList
  extends JceStruct
  implements Cloneable
{
  static ArrayList cache_portList;
  static Map cache_primary;
  static Map cache_secondary;
  static ArrayList cache_speedTestIpList;
  public long backup = 0L;
  public String domain = "";
  public ArrayList portList = null;
  public Map primary = null;
  public Map secondary = null;
  public ArrayList speedTestIpList = null;
  
  static
  {
    if (!ApList.class.desiredAssertionStatus()) {}
    for (boolean bool = true;; bool = false)
    {
      $assertionsDisabled = bool;
      return;
    }
  }
  
  public ApList() {}
  
  public ApList(Map paramMap1, Map paramMap2, long paramLong, String paramString, ArrayList paramArrayList1, ArrayList paramArrayList2)
  {
    this.primary = paramMap1;
    this.secondary = paramMap2;
    this.backup = paramLong;
    this.domain = paramString;
    this.portList = paramArrayList1;
    this.speedTestIpList = paramArrayList2;
  }
  
  public String className()
  {
    return "TPNS_CLIENT_PROTOCOL.ApList";
  }
  
  public Object clone()
  {
    Object localObject1 = null;
    try
    {
      Object localObject2 = super.clone();
      localObject1 = localObject2;
    }
    catch (CloneNotSupportedException localCloneNotSupportedException)
    {
      while ($assertionsDisabled) {}
      throw new AssertionError();
    }
    return localObject1;
  }
  
  public void display(StringBuilder paramStringBuilder, int paramInt)
  {
    paramStringBuilder = new JceDisplayer(paramStringBuilder, paramInt);
    paramStringBuilder.display(this.primary, "primary");
    paramStringBuilder.display(this.secondary, "secondary");
    paramStringBuilder.display(this.backup, "backup");
    paramStringBuilder.display(this.domain, "domain");
    paramStringBuilder.display(this.portList, "portList");
    paramStringBuilder.display(this.speedTestIpList, "speedTestIpList");
  }
  
  public void displaySimple(StringBuilder paramStringBuilder, int paramInt)
  {
    paramStringBuilder = new JceDisplayer(paramStringBuilder, paramInt);
    paramStringBuilder.displaySimple(this.primary, true);
    paramStringBuilder.displaySimple(this.secondary, true);
    paramStringBuilder.displaySimple(this.backup, true);
    paramStringBuilder.displaySimple(this.domain, true);
    paramStringBuilder.displaySimple(this.portList, true);
    paramStringBuilder.displaySimple(this.speedTestIpList, false);
  }
  
  public boolean equals(Object paramObject)
  {
    if (paramObject == null) {}
    do
    {
      return false;
      paramObject = (ApList)paramObject;
    } while ((!JceUtil.equals(this.primary, paramObject.primary)) || (!JceUtil.equals(this.secondary, paramObject.secondary)) || (!JceUtil.equals(this.backup, paramObject.backup)) || (!JceUtil.equals(this.domain, paramObject.domain)) || (!JceUtil.equals(this.portList, paramObject.portList)) || (!JceUtil.equals(this.speedTestIpList, paramObject.speedTestIpList)));
    return true;
  }
  
  public String fullClassName()
  {
    return "com.tencent.android.tpush.service.channel.protocol.TPNS_CLIENT_PROTOCOL.ApList";
  }
  
  public long getBackup()
  {
    return this.backup;
  }
  
  public String getDomain()
  {
    return this.domain;
  }
  
  public ArrayList getPortList()
  {
    return this.portList;
  }
  
  public Map getPrimary()
  {
    return this.primary;
  }
  
  public Map getSecondary()
  {
    return this.secondary;
  }
  
  public ArrayList getSpeedTestIpList()
  {
    return this.speedTestIpList;
  }
  
  public int hashCode()
  {
    try
    {
      throw new Exception("Need define key first!");
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return 0;
  }
  
  public void readFrom(JceInputStream paramJceInputStream)
  {
    if (cache_primary == null)
    {
      cache_primary = new HashMap();
      cache_primary.put(Byte.valueOf((byte)0), Long.valueOf(0L));
    }
    this.primary = ((Map)paramJceInputStream.read(cache_primary, 0, true));
    if (cache_secondary == null)
    {
      cache_secondary = new HashMap();
      cache_secondary.put(Byte.valueOf((byte)0), Long.valueOf(0L));
    }
    this.secondary = ((Map)paramJceInputStream.read(cache_secondary, 1, true));
    this.backup = paramJceInputStream.read(this.backup, 2, true);
    this.domain = paramJceInputStream.readString(3, true);
    if (cache_portList == null)
    {
      cache_portList = new ArrayList();
      cache_portList.add(Integer.valueOf(0));
    }
    this.portList = ((ArrayList)paramJceInputStream.read(cache_portList, 4, true));
    if (cache_speedTestIpList == null)
    {
      cache_speedTestIpList = new ArrayList();
      cache_speedTestIpList.add(Long.valueOf(0L));
    }
    this.speedTestIpList = ((ArrayList)paramJceInputStream.read(cache_speedTestIpList, 5, true));
  }
  
  public void setBackup(long paramLong)
  {
    this.backup = paramLong;
  }
  
  public void setDomain(String paramString)
  {
    this.domain = paramString;
  }
  
  public void setPortList(ArrayList paramArrayList)
  {
    this.portList = paramArrayList;
  }
  
  public void setPrimary(Map paramMap)
  {
    this.primary = paramMap;
  }
  
  public void setSecondary(Map paramMap)
  {
    this.secondary = paramMap;
  }
  
  public void setSpeedTestIpList(ArrayList paramArrayList)
  {
    this.speedTestIpList = paramArrayList;
  }
  
  public void writeTo(JceOutputStream paramJceOutputStream)
  {
    paramJceOutputStream.write(this.primary, 0);
    paramJceOutputStream.write(this.secondary, 1);
    paramJceOutputStream.write(this.backup, 2);
    paramJceOutputStream.write(this.domain, 3);
    paramJceOutputStream.write(this.portList, 4);
    paramJceOutputStream.write(this.speedTestIpList, 5);
  }
}
