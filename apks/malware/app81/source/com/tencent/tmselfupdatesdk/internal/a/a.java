package com.tencent.tmselfupdatesdk.internal.a;

import android.text.TextUtils;
import com.tencent.tmassistantbase.util.MD5;
import com.tencent.tmassistantbase.util.TMLog;
import java.io.RandomAccessFile;
import java.util.zip.ZipException;

public final class a
{
  private static final b a = new b(101010256L);
  private static final c b = new c(38650);
  
  public static boolean a(String paramString1, String paramString2)
  {
    int i = 0;
    TMLog.i("ApkExternalInfoTool", "enter");
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2)))
    {
      TMLog.i("ApkExternalInfoTool", "TextUtils.isEmpty(oldFilePath) || TextUtils.isEmpty(newFilePath)");
      TMLog.i("ApkExternalInfoTool", "exit");
      throw new Exception("Your file path is empty!");
    }
    TMLog.i("ApkExternalInfoTool", "oldFilePath =" + paramString1 + "; newFilePath = " + paramString2);
    paramString1 = new RandomAccessFile(paramString1, "r");
    paramString2 = new RandomAccessFile(paramString2, "rw");
    if ((paramString1.length() == 0L) || (paramString2.length() == 0L))
    {
      paramString1.close();
      paramString2.close();
      throw new Exception("Your file length is zero !!");
    }
    byte[] arrayOfByte1 = a(paramString1);
    byte[] arrayOfByte2 = a(paramString2);
    if (arrayOfByte1 != null)
    {
      TMLog.i("ApkExternalInfoTool", "old comment=" + MD5.convertHashToString(arrayOfByte1));
      int j = arrayOfByte1.length;
      if (arrayOfByte2 != null)
      {
        TMLog.i("ApkExternalInfoTool", "new comment=" + MD5.convertHashToString(arrayOfByte2));
        i = arrayOfByte2.length;
      }
      long l = paramString2.length() - i + j;
      TMLog.i("ApkExternalInfoTool", "oldCommentLength = " + j + ", newCommentLength = " + i + ", oldArchiveFileLength = " + paramString1.length() + ", newArchiveFileLength = " + l);
      paramString2.seek(paramString2.length() - 2L - i);
      paramString2.write(new c(j).a());
      paramString2.write(arrayOfByte1);
      paramString2.setLength(l);
      if (paramString1 != null) {
        paramString1.close();
      }
      if (paramString2 != null) {
        paramString2.close();
      }
      TMLog.i("ApkExternalInfoTool", "exit");
      return true;
    }
    TMLog.w("ApkExternalInfoTool", "old comment is null");
    return false;
  }
  
  public static byte[] a(RandomAccessFile paramRandomAccessFile)
  {
    int j = 1;
    long l = paramRandomAccessFile.length() - 22L;
    paramRandomAccessFile.seek(l);
    byte[] arrayOfByte = a.a();
    int i = paramRandomAccessFile.read();
    if (i != -1) {
      if ((i != arrayOfByte[0]) || (paramRandomAccessFile.read() != arrayOfByte[1]) || (paramRandomAccessFile.read() != arrayOfByte[2]) || (paramRandomAccessFile.read() != arrayOfByte[3])) {}
    }
    for (i = j;; i = 0)
    {
      if (i == 0)
      {
        TMLog.e("ApkExternalInfoTool", "archive is not a ZIP archive");
        throw new ZipException("archive is not a ZIP archive");
        l -= 1L;
        paramRandomAccessFile.seek(l);
        i = paramRandomAccessFile.read();
        break;
      }
      paramRandomAccessFile.seek(16L + l + 4L);
      arrayOfByte = new byte[2];
      paramRandomAccessFile.readFully(arrayOfByte);
      i = new c(arrayOfByte).b();
      if (i == 0) {
        return null;
      }
      arrayOfByte = new byte[i];
      paramRandomAccessFile.read(arrayOfByte);
      return arrayOfByte;
    }
  }
}
