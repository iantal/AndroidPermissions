package com.tencent.tp;

import android.app.Activity;
import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.telephony.TelephonyManager;
import com.tencent.tp.c.h;
import java.util.Collection;

public class TssSdkRuntime
{
  private static Context m_context;
  private static PackageInfo m_packageInfo;
  
  public TssSdkRuntime() {}
  
  public static Context getAppContext()
  {
    if (m_context == null) {}
    try
    {
      m_context = (Context)d.a("android.app.ActivityThread", d.a("android.app.ActivityThread", "currentActivityThread", new Class[0], new Object[0]), "mInitialApplication");
      return m_context;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        m_context = null;
      }
    }
  }
  
  public static String getAppName()
  {
    Context localContext = getAppContext();
    if (localContext != null) {
      return m.n(localContext);
    }
    return null;
  }
  
  public static String getAppVer()
  {
    PackageInfo localPackageInfo = getPackageInfo();
    if (localPackageInfo != null) {
      return localPackageInfo.versionName;
    }
    return null;
  }
  
  public static Activity getCurrentActivity()
  {
    Activity localActivity2 = getUnity3dCurrentActivity();
    Activity localActivity1 = localActivity2;
    if (localActivity2 == null) {
      localActivity1 = getFirstActivity();
    }
    return localActivity1;
  }
  
  private static Activity getFirstActivity()
  {
    int i = 0;
    try
    {
      Object localObject1 = ((Collection)d.a("java.util.Map", "values", d.a("android.app.ActivityThread", d.a("android.app.ActivityThread", "currentActivityThread", new Class[0], new Object[0]), "mActivities"), new Class[0], new Object[0])).toArray();
      while (i < localObject1.length)
      {
        Object localObject2 = localObject1[i];
        if (localObject2 != null)
        {
          localObject2 = d.a("android.app.ActivityThread$ActivityClientRecord", localObject2, "activity");
          if (localObject2 != null)
          {
            localObject1 = (Activity)localObject2;
            return localObject1;
          }
        }
        i += 1;
      }
      return null;
    }
    catch (Exception localException)
    {
      if (j.c() == 1) {
        localException.printStackTrace();
      }
      return null;
    }
  }
  
  public static int getNetProviderType()
  {
    int i = -1;
    Object localObject = getAppContext();
    if (localObject != null) {}
    try
    {
      NetworkInfo localNetworkInfo = ((ConnectivityManager)((Context)localObject).getSystemService("connectivity")).getActiveNetworkInfo();
      if ((localNetworkInfo != null) && (localNetworkInfo.getType() == 0))
      {
        localObject = (TelephonyManager)((Context)localObject).getSystemService("phone");
        if (localObject != null) {
          i = ((TelephonyManager)localObject).getNetworkType();
        }
      }
      switch (i)
      {
      case 9: 
      case 10: 
      case 11: 
      default: 
        i = -1;
      }
      for (;;)
      {
        return i;
        i = 1;
        continue;
        i = 2;
        continue;
        i = 3;
        continue;
        i = 5;
      }
      return -1;
    }
    catch (Throwable localThrowable) {}
  }
  
  public static int getNetWorkType()
  {
    int i = -1;
    Object localObject = getAppContext();
    if (localObject != null) {}
    try
    {
      localObject = ((ConnectivityManager)((Context)localObject).getSystemService("connectivity")).getActiveNetworkInfo();
      if (localObject != null) {
        i = ((NetworkInfo)localObject).getType();
      }
      switch (i)
      {
      default: 
        i = -1;
      }
      for (;;)
      {
        return i;
        i = 2;
        continue;
        i = 1;
      }
      return -1;
    }
    catch (Throwable localThrowable) {}
  }
  
  public static PackageInfo getPackageInfo()
  {
    if (m_packageInfo == null) {}
    for (;;)
    {
      try
      {
        localObject = getAppContext();
        str = getPackageName();
        if ((localObject != null) && (str != null))
        {
          localObject = ((Context)localObject).getPackageManager();
          if (localObject == null) {}
        }
      }
      catch (Exception localException2)
      {
        Object localObject;
        String str;
        m_packageInfo = null;
        continue;
      }
      try
      {
        m_packageInfo = ((PackageManager)localObject).getPackageInfo(str, 0);
        return m_packageInfo;
      }
      catch (Exception localException1)
      {
        m_packageInfo = null;
      }
    }
  }
  
  public static String getPackageName()
  {
    String str = null;
    try
    {
      Context localContext = getAppContext();
      if (localContext != null) {
        str = localContext.getPackageName();
      }
      return str;
    }
    catch (Exception localException) {}
    return null;
  }
  
  public static Activity getUnity3dCurrentActivity()
  {
    try
    {
      Activity localActivity = (Activity)d.a("com.unity3d.player.UnityPlayer", "currentActivity");
      return localActivity;
    }
    catch (Exception localException) {}
    return null;
  }
  
  public static void initialize()
  {
    String str = getPackageName();
    if (str != null) {}
    try
    {
      j.a("apk_name:" + str);
      str = getAppVer();
      if (str != null) {}
      try
      {
        j.a("ver:" + str);
        str = getAppName();
        if (str != null) {}
        try
        {
          j.a("app_name:" + str);
          for (;;)
          {
            try
            {
              if (m_context != null)
              {
                str = h.c(m_context);
                if (str != null) {
                  j.a("sdcard:" + str);
                }
              }
            }
            catch (Exception localException4)
            {
              boolean bool;
              StringBuilder localStringBuilder;
              continue;
            }
            try
            {
              bool = c.a();
              localStringBuilder = new StringBuilder().append("certenv:");
              if (bool)
              {
                str = "true";
                j.a(str);
              }
            }
            catch (Exception localException3)
            {
              continue;
            }
            try
            {
              j.a("jar_ver:1.7.1(2015/1/29)");
              j.a("info: on initialize done");
              try
              {
                j.a("net_type:" + getNetWorkType());
                j.a("net_provider:" + getNetProviderType());
                return;
              }
              catch (Exception localException1)
              {
                return;
              }
              str = "false";
            }
            catch (Exception localException2) {}
          }
        }
        catch (Exception localException5)
        {
          for (;;) {}
        }
      }
      catch (Exception localException6)
      {
        for (;;) {}
      }
    }
    catch (Exception localException7)
    {
      for (;;) {}
    }
  }
}
