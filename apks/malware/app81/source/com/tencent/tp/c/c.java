package com.tencent.tp.c;

import org.apache.http.HttpVersion;
import org.apache.http.client.HttpClient;
import org.apache.http.conn.params.ConnManagerParams;
import org.apache.http.conn.scheme.PlainSocketFactory;
import org.apache.http.conn.scheme.Scheme;
import org.apache.http.conn.scheme.SchemeRegistry;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;
import org.apache.http.params.HttpProtocolParams;

class c
{
  private static HttpClient a;
  
  private c() {}
  
  public static HttpClient a()
  {
    try
    {
      if (a == null)
      {
        localObject1 = new BasicHttpParams();
        HttpProtocolParams.setVersion((HttpParams)localObject1, HttpVersion.HTTP_1_1);
        HttpProtocolParams.setContentCharset((HttpParams)localObject1, "ISO-8859-1");
        HttpProtocolParams.setUseExpectContinue((HttpParams)localObject1, true);
        HttpProtocolParams.setUserAgent((HttpParams)localObject1, "Android Http Agent");
        ConnManagerParams.setTimeout((HttpParams)localObject1, 1000L);
        HttpConnectionParams.setConnectionTimeout((HttpParams)localObject1, 5000);
        HttpConnectionParams.setSoTimeout((HttpParams)localObject1, 10000);
        SchemeRegistry localSchemeRegistry = new SchemeRegistry();
        localSchemeRegistry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
        localSchemeRegistry.register(new Scheme("https", PlainSocketFactory.getSocketFactory(), 443));
        a = new DefaultHttpClient(new ThreadSafeClientConnManager((HttpParams)localObject1, localSchemeRegistry), (HttpParams)localObject1);
      }
      Object localObject1 = a;
      return localObject1;
    }
    finally {}
  }
  
  public Object clone()
    throws CloneNotSupportedException
  {
    throw new CloneNotSupportedException();
  }
}
