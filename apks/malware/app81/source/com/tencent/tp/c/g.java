package com.tencent.tp.c;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import org.apache.http.Header;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;

public class g
{
  public g() {}
  
  public static int a(String paramString1, String paramString2, int paramInt, e paramE)
    throws ClientProtocolException, IOException, InterruptedException
  {
    if (h.a(paramString2, paramInt))
    {
      if (paramE != null)
      {
        paramE.a(paramInt, paramInt);
        Thread.sleep(100L);
      }
      i = 200;
      return i;
    }
    if (paramE != null) {
      paramE.a(0, 0);
    }
    Object localObject = c.a().execute(new HttpGet(paramString1));
    int j = ((HttpResponse)localObject).getStatusLine().getStatusCode();
    paramString1 = ((HttpResponse)localObject).getEntity().getContent();
    String str = paramString2 + ".tmp";
    h.d(str);
    int k = a((HttpResponse)localObject);
    localObject = new FileOutputStream(str);
    byte[] arrayOfByte = new byte['ࠀ'];
    int i = 0;
    for (;;)
    {
      if ((paramE != null) && (paramE.a())) {
        paramInt = 801;
      }
      int m;
      do
      {
        ((FileOutputStream)localObject).close();
        paramString1.close();
        if (paramE != null) {
          paramE.a(i, k);
        }
        i = paramInt;
        if (paramInt == 801) {
          break;
        }
        h.a(str, paramString2);
        return paramInt;
        m = paramString1.read(arrayOfByte);
        paramInt = j;
      } while (m <= 0);
      ((FileOutputStream)localObject).write(arrayOfByte, 0, m);
      paramInt = i + m;
      i = paramInt;
      if (paramE != null)
      {
        paramE.a(paramInt, k);
        i = paramInt;
      }
    }
  }
  
  private static int a(HttpResponse paramHttpResponse)
  {
    paramHttpResponse = paramHttpResponse.getFirstHeader("Content-Length");
    if (paramHttpResponse != null) {
      return Integer.valueOf(paramHttpResponse.getValue()).intValue();
    }
    return 0;
  }
  
  public static d a(String paramString1, String paramString2)
    throws ClientProtocolException, IOException
  {
    Object localObject = c.a().execute(new HttpGet(paramString1));
    paramString1 = new d();
    paramString1.b = ((HttpResponse)localObject).getStatusLine().getStatusCode();
    localObject = ((HttpResponse)localObject).getEntity().getContent();
    ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
    byte[] arrayOfByte = new byte['က'];
    for (;;)
    {
      int i = ((InputStream)localObject).read(arrayOfByte);
      if (i <= 0) {
        break;
      }
      localByteArrayOutputStream.write(arrayOfByte, 0, i);
    }
    if (paramString2 == null) {}
    for (paramString1.a = localByteArrayOutputStream.toString("UTF-8");; paramString1.a = localByteArrayOutputStream.toString(paramString2))
    {
      localByteArrayOutputStream.close();
      ((InputStream)localObject).close();
      return paramString1;
    }
  }
  
  public static boolean a(Context paramContext)
  {
    paramContext = (ConnectivityManager)paramContext.getSystemService("connectivity");
    if (paramContext != null)
    {
      paramContext = paramContext.getActiveNetworkInfo();
      return (paramContext != null) && (paramContext.isAvailable());
    }
    return false;
  }
}
