package oicq.wlogin_sdk.push;

import android.app.AlarmManager;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.IBinder;
import android.os.RemoteException;
import dalvik.system.PathClassLoader;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.util.ArrayList;
import oicq.wlogin_sdk.request.oicq_request;
import oicq.wlogin_sdk.tools.util;

public class push_service
  extends Service
{
  private static final String ACTION_KEEPALIVE = "oicq.wlogin_sdk.push.KEEP_ALIVE";
  private static final String ACTION_RECONNECT = "oicq.wlogin_sdk.push.RECONNECT";
  public static final String ACTION_START = "oicq.wlogin_sdk.push.START";
  public static final String ACTION_STOP = "oicq.wlogin_sdk.push.STOP";
  private static final long INITIAL_RETRY_INTERVAL = 10000L;
  private static final long KEEP_ALIVE_INTERVAL = 270000L;
  private static final int NOTIF_CONNECTED = 0;
  public static final String TAG = "push_service";
  private static int mAppid = mAppid0;
  private static int mAppid0;
  private static long mMaxSeqence = 0L;
  private static int mNotifyId;
  private static int mNotifyId0 = 1610612736;
  private final push_service_aidl.Stub mBinder = new push_service_aidl.Stub()
  {
    public int invok_callback(int paramAnonymousInt)
      throws RemoteException
    {
      try
      {
        util.LOGI("service invok_callback:" + paramAnonymousInt);
        return paramAnonymousInt;
      }
      finally
      {
        localObject = finally;
        throw localObject;
      }
    }
    
    public int register(push_service_callback paramAnonymousPush_service_callback, long paramAnonymousLong1, long paramAnonymousLong2, uin_app_info paramAnonymousUin_app_info)
      throws RemoteException
    {
      i = 0;
      try
      {
        localObject = new uin_appid(paramAnonymousUin_app_info._uin, paramAnonymousUin_app_info._appid, paramAnonymousUin_app_info._sub_appid);
        localObject = push_service.this.mPushInfo.get((uin_appid)localObject);
        push_service.this.mPushInfo.put(new uin_appid(paramAnonymousLong1, paramAnonymousLong2, paramAnonymousUin_app_info._sub_appid), new uin_app_info(paramAnonymousUin_app_info), paramAnonymousPush_service_callback);
        if (localObject == null)
        {
          if (paramAnonymousUin_app_info._msg_type != 0)
          {
            int j = push_service.this.mPushInfo.get_used_appid(paramAnonymousLong2, paramAnonymousUin_app_info._sub_appid);
            i = j;
            if (j == 0)
            {
              j = push_service.mAppid;
              push_service.mAppid += 1;
              i = j;
              if (push_service.mAppid >= push_service.mNotifyId0)
              {
                push_service.mAppid = push_service.mAppid0;
                i = j;
              }
            }
            paramAnonymousUin_app_info._notify_id = i;
          }
          i = push_service.this.sendRequest(push_service.this.mPush.get_request_register(paramAnonymousLong1, paramAnonymousLong2, paramAnonymousUin_app_info._sub_appid, paramAnonymousUin_app_info._st, paramAnonymousUin_app_info._st_key, paramAnonymousUin_app_info._clear, paramAnonymousUin_app_info._guid, false));
          util.LOGI("send register request");
        }
      }
      catch (Exception paramAnonymousPush_service_callback)
      {
        for (;;)
        {
          paramAnonymousUin_app_info = new StringWriter();
          Object localObject = new PrintWriter(paramAnonymousUin_app_info, true);
          paramAnonymousPush_service_callback.printStackTrace((PrintWriter)localObject);
          ((PrintWriter)localObject).flush();
          paramAnonymousUin_app_info.flush();
          util.LOGW("exception:", paramAnonymousUin_app_info.toString());
          i = -1;
        }
      }
      finally {}
      return i;
    }
    
    public int set_push_test(int paramAnonymousInt, String paramAnonymousString)
    {
      try
      {
        oicq_request.set_push_test(paramAnonymousInt, paramAnonymousString);
        return 0;
      }
      finally
      {
        paramAnonymousString = finally;
        throw paramAnonymousString;
      }
    }
    
    /* Error */
    public int un_register(long paramAnonymousLong1, long paramAnonymousLong2, long paramAnonymousLong3, int paramAnonymousInt)
      throws RemoteException
    {
      // Byte code:
      //   0: aload_0
      //   1: monitorenter
      //   2: iconst_0
      //   3: istore 8
      //   5: new 22	java/lang/StringBuilder
      //   8: dup
      //   9: ldc -89
      //   11: invokespecial 27	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   14: new 169	java/lang/Long
      //   17: dup
      //   18: lload_1
      //   19: invokespecial 172	java/lang/Long:<init>	(J)V
      //   22: invokevirtual 173	java/lang/Long:toString	()Ljava/lang/String;
      //   25: invokevirtual 176	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   28: ldc -78
      //   30: invokevirtual 176	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   33: new 169	java/lang/Long
      //   36: dup
      //   37: lload_3
      //   38: invokespecial 172	java/lang/Long:<init>	(J)V
      //   41: invokevirtual 173	java/lang/Long:toString	()Ljava/lang/String;
      //   44: invokevirtual 176	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   47: ldc -76
      //   49: invokevirtual 176	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   52: new 169	java/lang/Long
      //   55: dup
      //   56: lload 5
      //   58: invokespecial 172	java/lang/Long:<init>	(J)V
      //   61: invokevirtual 173	java/lang/Long:toString	()Ljava/lang/String;
      //   64: invokevirtual 176	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   67: invokevirtual 35	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   70: invokestatic 40	oicq/wlogin_sdk/tools/util:LOGI	(Ljava/lang/String;)V
      //   73: aload_0
      //   74: getfield 12	oicq/wlogin_sdk/push/push_service$3:this$0	Loicq/wlogin_sdk/push/push_service;
      //   77: invokestatic 66	oicq/wlogin_sdk/push/push_service:access$0	(Loicq/wlogin_sdk/push/push_service;)Loicq/wlogin_sdk/push/push_info;
      //   80: new 47	oicq/wlogin_sdk/push/uin_appid
      //   83: dup
      //   84: lload_1
      //   85: lload_3
      //   86: lload 5
      //   88: invokespecial 62	oicq/wlogin_sdk/push/uin_appid:<init>	(JJJ)V
      //   91: invokevirtual 72	oicq/wlogin_sdk/push/push_info:get	(Loicq/wlogin_sdk/push/uin_appid;)Loicq/wlogin_sdk/push/uin_app_info;
      //   94: astore 9
      //   96: aload 9
      //   98: ifnull +43 -> 141
      //   101: aload_0
      //   102: getfield 12	oicq/wlogin_sdk/push/push_service$3:this$0	Loicq/wlogin_sdk/push/push_service;
      //   105: aload_0
      //   106: getfield 12	oicq/wlogin_sdk/push/push_service$3:this$0	Loicq/wlogin_sdk/push/push_service;
      //   109: invokestatic 108	oicq/wlogin_sdk/push/push_service:access$2	(Loicq/wlogin_sdk/push/push_service;)Loicq/wlogin_sdk/push/request_push;
      //   112: lload_1
      //   113: lload_3
      //   114: lload 5
      //   116: aload 9
      //   118: getfield 112	oicq/wlogin_sdk/push/uin_app_info:_st	[B
      //   121: aload 9
      //   123: getfield 115	oicq/wlogin_sdk/push/uin_app_info:_st_key	[B
      //   126: iload 7
      //   128: aload 9
      //   130: getfield 121	oicq/wlogin_sdk/push/uin_app_info:_guid	[B
      //   133: invokevirtual 184	oicq/wlogin_sdk/push/request_push:get_request_unregister	(JJJ[B[BI[B)[B
      //   136: invokevirtual 131	oicq/wlogin_sdk/push/push_service:sendRequest	([B)I
      //   139: istore 8
      //   141: iload 8
      //   143: ifge +8 -> 151
      //   146: aload_0
      //   147: monitorexit
      //   148: iload 8
      //   150: ireturn
      //   151: aload_0
      //   152: getfield 12	oicq/wlogin_sdk/push/push_service$3:this$0	Loicq/wlogin_sdk/push/push_service;
      //   155: invokestatic 66	oicq/wlogin_sdk/push/push_service:access$0	(Loicq/wlogin_sdk/push/push_service;)Loicq/wlogin_sdk/push/push_info;
      //   158: new 47	oicq/wlogin_sdk/push/uin_appid
      //   161: dup
      //   162: lload_1
      //   163: lload_3
      //   164: lload 5
      //   166: invokespecial 62	oicq/wlogin_sdk/push/uin_appid:<init>	(JJJ)V
      //   169: invokevirtual 188	oicq/wlogin_sdk/push/push_info:remove	(Loicq/wlogin_sdk/push/uin_appid;)V
      //   172: iconst_0
      //   173: istore 8
      //   175: goto -29 -> 146
      //   178: astore 9
      //   180: aload_0
      //   181: monitorexit
      //   182: aload 9
      //   184: athrow
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	185	0	this	3
      //   0	185	1	paramAnonymousLong1	long
      //   0	185	3	paramAnonymousLong2	long
      //   0	185	5	paramAnonymousLong3	long
      //   0	185	7	paramAnonymousInt	int
      //   3	171	8	i	int
      //   94	35	9	localUin_app_info	uin_app_info
      //   178	5	9	localObject	Object
      // Exception table:
      //   from	to	target	type
      //   5	96	178	finally
      //   101	141	178	finally
      //   151	172	178	finally
    }
  };
  private ConnectivityManager mConnMan;
  private boolean mConnected = false;
  private ConnectionThread mConnection;
  private BroadcastReceiver mConnectivityChanged = new BroadcastReceiver()
  {
    public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
    {
      paramAnonymousContext = (NetworkInfo)paramAnonymousIntent.getParcelableExtra("networkInfo");
      if ((paramAnonymousContext != null) && (paramAnonymousContext.isConnected())) {}
      for (boolean bool = true;; bool = false)
      {
        util.LOGI("Connecting changed: connected=" + bool);
        if (bool) {
          push_service.this.reconnectIfNecessary();
        }
        return;
      }
    }
  };
  private NotificationManager mNotifMan;
  private request_push mPush;
  private push_info mPushInfo = new push_info();
  private boolean mStarted = false;
  private BroadcastReceiver myBroadcastReceiver = new BroadcastReceiver()
  {
    public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
    {
      util.LOGI("Service BroadcastReceiver recved");
      if (paramAnonymousIntent.getAction().equals(push_client.PUSH_SET_UINFO_RECEIVED)) {
        try
        {
          paramAnonymousContext = paramAnonymousIntent.getParcelableArrayListExtra("UINFO");
          if ((paramAnonymousContext != null) && (paramAnonymousContext.size() > 0))
          {
            int i = 0;
            for (;;)
            {
              if (i >= paramAnonymousContext.size()) {
                return;
              }
              paramAnonymousIntent = new uin_appid(((uin_app_info)paramAnonymousContext.get(i))._uin, ((uin_app_info)paramAnonymousContext.get(i))._appid, ((uin_app_info)paramAnonymousContext.get(i))._sub_appid);
              push_service.this.mPushInfo.put(paramAnonymousIntent, new uin_app_info((uin_app_info)paramAnonymousContext.get(i)), null);
              if ((push_service.this.mPushInfo.get(paramAnonymousIntent) == null) && (push_service.this.mConnected))
              {
                util.LOGI("Service BroadcastReceiver resend register");
                push_service.this.sendRequest(push_service.this.mPush.get_request_register(paramAnonymousIntent._uin, paramAnonymousIntent._appid, paramAnonymousIntent._sub_appid, ((uin_app_info)paramAnonymousContext.get(i))._st, ((uin_app_info)paramAnonymousContext.get(i))._st_key, ((uin_app_info)paramAnonymousContext.get(i))._clear, ((uin_app_info)paramAnonymousContext.get(i))._guid, true));
              }
              i += 1;
            }
          }
          PrintWriter localPrintWriter;
          return;
        }
        catch (Exception paramAnonymousContext)
        {
          paramAnonymousIntent = new StringWriter();
          localPrintWriter = new PrintWriter(paramAnonymousIntent, true);
          paramAnonymousContext.printStackTrace(localPrintWriter);
          localPrintWriter.flush();
          paramAnonymousIntent.flush();
          util.LOGW("exception:", paramAnonymousIntent.toString());
        }
      }
    }
  };
  
  static
  {
    mNotifyId = mNotifyId0;
    mAppid0 = 1073741824;
  }
  
  public push_service() {}
  
  private void handleCrashedService()
  {
    stopKeepAlives();
    start();
  }
  
  private void hideNotification()
  {
    this.mNotifMan.cancel(0);
  }
  
  /* Error */
  private void keepAlive()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: ldc -104
    //   4: invokestatic 158	oicq/wlogin_sdk/tools/util:LOGI	(Ljava/lang/String;)V
    //   7: aload_0
    //   8: getfield 82	oicq/wlogin_sdk/push/push_service:mStarted	Z
    //   11: ifeq +27 -> 38
    //   14: aload_0
    //   15: getfield 110	oicq/wlogin_sdk/push/push_service:mConnection	Loicq/wlogin_sdk/push/push_service$ConnectionThread;
    //   18: ifnull +20 -> 38
    //   21: aload_0
    //   22: getfield 110	oicq/wlogin_sdk/push/push_service:mConnection	Loicq/wlogin_sdk/push/push_service$ConnectionThread;
    //   25: getfield 161	oicq/wlogin_sdk/push/push_service$ConnectionThread:mPingPending	Z
    //   28: ifeq +13 -> 41
    //   31: aload_0
    //   32: getfield 110	oicq/wlogin_sdk/push/push_service:mConnection	Loicq/wlogin_sdk/push/push_service$ConnectionThread;
    //   35: invokevirtual 164	oicq/wlogin_sdk/push/push_service$ConnectionThread:ManulClose	()V
    //   38: aload_0
    //   39: monitorexit
    //   40: return
    //   41: aload_0
    //   42: getfield 110	oicq/wlogin_sdk/push/push_service:mConnection	Loicq/wlogin_sdk/push/push_service$ConnectionThread;
    //   45: iconst_1
    //   46: putfield 161	oicq/wlogin_sdk/push/push_service$ConnectionThread:mPingPending	Z
    //   49: ldc -90
    //   51: invokestatic 158	oicq/wlogin_sdk/tools/util:LOGI	(Ljava/lang/String;)V
    //   54: aload_0
    //   55: getfield 110	oicq/wlogin_sdk/push/push_service:mConnection	Loicq/wlogin_sdk/push/push_service$ConnectionThread;
    //   58: invokevirtual 169	oicq/wlogin_sdk/push/push_service$ConnectionThread:sendKeepAlive	()V
    //   61: goto -23 -> 38
    //   64: astore_1
    //   65: new 171	java/io/StringWriter
    //   68: dup
    //   69: invokespecial 172	java/io/StringWriter:<init>	()V
    //   72: astore_2
    //   73: new 174	java/io/PrintWriter
    //   76: dup
    //   77: aload_2
    //   78: iconst_1
    //   79: invokespecial 177	java/io/PrintWriter:<init>	(Ljava/io/Writer;Z)V
    //   82: astore_3
    //   83: aload_1
    //   84: aload_3
    //   85: invokevirtual 181	java/io/IOException:printStackTrace	(Ljava/io/PrintWriter;)V
    //   88: aload_3
    //   89: invokevirtual 184	java/io/PrintWriter:flush	()V
    //   92: aload_2
    //   93: invokevirtual 185	java/io/StringWriter:flush	()V
    //   96: ldc -69
    //   98: aload_2
    //   99: invokevirtual 191	java/io/StringWriter:toString	()Ljava/lang/String;
    //   102: invokestatic 195	oicq/wlogin_sdk/tools/util:LOGW	(Ljava/lang/String;Ljava/lang/String;)V
    //   105: goto -67 -> 38
    //   108: astore_1
    //   109: aload_0
    //   110: monitorexit
    //   111: aload_1
    //   112: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	113	0	this	push_service
    //   64	20	1	localIOException	IOException
    //   108	4	1	localObject	Object
    //   72	27	2	localStringWriter	StringWriter
    //   82	7	3	localPrintWriter	PrintWriter
    // Exception table:
    //   from	to	target	type
    //   7	38	64	java/io/IOException
    //   41	61	64	java/io/IOException
    //   2	7	108	finally
    //   7	38	108	finally
    //   41	61	108	finally
    //   65	105	108	finally
  }
  
  private void reconnectIfNecessary()
  {
    try
    {
      if ((this.mStarted) && (this.mConnection == null))
      {
        util.LOGI("Reconnecting...");
        this.mConnection = new ConnectionThread();
        this.mConnection.start();
      }
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  private void setStarted(boolean paramBoolean)
  {
    this.mStarted = paramBoolean;
  }
  
  private void showNotification(Context paramContext, long paramLong, Class<?> paramClass, int paramInt1, int paramInt2, int paramInt3, push_msg[] paramArrayOfPush_msg)
  {
    int i = 0;
    for (;;)
    {
      Notification localNotification;
      try
      {
        if (i >= paramArrayOfPush_msg.length) {
          return;
        }
        if (!util.unsigned_bigthan(paramArrayOfPush_msg[i]._seq, mMaxSeqence)) {
          break label343;
        }
        mMaxSeqence = paramArrayOfPush_msg[i]._seq;
        util.LOGI("showNotification :" + paramClass + ", icon=" + new Integer(paramInt3).toString());
        localNotification = new Notification();
        localNotification.flags = 16;
        localNotification.defaults = -1;
        localNotification.icon = paramInt3;
        localNotification.when = System.currentTimeMillis();
        localNotification.tickerText = new String(paramArrayOfPush_msg[i]._status_title);
        Object localObject = new Intent(paramContext, paramClass);
        ((Intent)localObject).putExtra("BUFFER", paramArrayOfPush_msg[i]._buf);
        localObject = PendingIntent.getActivity(this, 0, (Intent)localObject, 0);
        localNotification.setLatestEventInfo(this, new String(paramArrayOfPush_msg[i]._title), new String(paramArrayOfPush_msg[i]._msg), (PendingIntent)localObject);
        if (paramInt1 == 0)
        {
          this.mNotifMan.notify(mNotifyId, localNotification);
          mNotifyId += 1;
          if (mNotifyId >= 0) {
            break label343;
          }
          mNotifyId = mNotifyId0;
        }
      }
      catch (Exception paramContext)
      {
        util.LOGI("showNotification exception:" + paramContext.toString());
        paramClass = new StringWriter();
        paramArrayOfPush_msg = new PrintWriter(paramClass, true);
        paramContext.printStackTrace(paramArrayOfPush_msg);
        paramArrayOfPush_msg.flush();
        paramClass.flush();
        util.LOGW("exception:", paramClass.toString());
        return;
      }
      this.mNotifMan.notify(paramInt2, localNotification);
      label343:
      i += 1;
    }
  }
  
  /* Error */
  private void start()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield 82	oicq/wlogin_sdk/push/push_service:mStarted	Z
    //   6: ifeq +15 -> 21
    //   9: ldc 39
    //   11: ldc_w 311
    //   14: invokestatic 317	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
    //   17: pop
    //   18: aload_0
    //   19: monitorexit
    //   20: return
    //   21: aload_0
    //   22: iconst_1
    //   23: invokespecial 319	oicq/wlogin_sdk/push/push_service:setStarted	(Z)V
    //   26: aload_0
    //   27: aload_0
    //   28: getfield 97	oicq/wlogin_sdk/push/push_service:mConnectivityChanged	Landroid/content/BroadcastReceiver;
    //   31: new 321	android/content/IntentFilter
    //   34: dup
    //   35: ldc_w 323
    //   38: invokespecial 324	android/content/IntentFilter:<init>	(Ljava/lang/String;)V
    //   41: invokevirtual 328	oicq/wlogin_sdk/push/push_service:registerReceiver	(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;
    //   44: pop
    //   45: ldc_w 330
    //   48: invokestatic 158	oicq/wlogin_sdk/tools/util:LOGI	(Ljava/lang/String;)V
    //   51: aload_0
    //   52: new 12	oicq/wlogin_sdk/push/push_service$ConnectionThread
    //   55: dup
    //   56: aload_0
    //   57: invokespecial 198	oicq/wlogin_sdk/push/push_service$ConnectionThread:<init>	(Loicq/wlogin_sdk/push/push_service;)V
    //   60: putfield 110	oicq/wlogin_sdk/push/push_service:mConnection	Loicq/wlogin_sdk/push/push_service$ConnectionThread;
    //   63: aload_0
    //   64: getfield 110	oicq/wlogin_sdk/push/push_service:mConnection	Loicq/wlogin_sdk/push/push_service$ConnectionThread;
    //   67: invokevirtual 199	oicq/wlogin_sdk/push/push_service$ConnectionThread:start	()V
    //   70: goto -52 -> 18
    //   73: astore_1
    //   74: aload_0
    //   75: monitorexit
    //   76: aload_1
    //   77: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	78	0	this	push_service
    //   73	4	1	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   2	18	73	finally
    //   21	70	73	finally
  }
  
  private void startKeepAlives()
  {
    util.LOGI("startKeepAlives");
    Object localObject = new Intent();
    ((Intent)localObject).setClass(this, push_service.class);
    ((Intent)localObject).setAction("oicq.wlogin_sdk.push.KEEP_ALIVE");
    localObject = PendingIntent.getService(this, 0, (Intent)localObject, 0);
    ((AlarmManager)getSystemService("alarm")).setRepeating(0, System.currentTimeMillis() + 270000L, 270000L, (PendingIntent)localObject);
  }
  
  /* Error */
  private void stop()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield 82	oicq/wlogin_sdk/push/push_service:mStarted	Z
    //   6: ifne +15 -> 21
    //   9: ldc 39
    //   11: ldc_w 358
    //   14: invokestatic 317	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
    //   17: pop
    //   18: aload_0
    //   19: monitorexit
    //   20: return
    //   21: aload_0
    //   22: iconst_0
    //   23: invokespecial 319	oicq/wlogin_sdk/push/push_service:setStarted	(Z)V
    //   26: aload_0
    //   27: aload_0
    //   28: getfield 97	oicq/wlogin_sdk/push/push_service:mConnectivityChanged	Landroid/content/BroadcastReceiver;
    //   31: invokevirtual 362	oicq/wlogin_sdk/push/push_service:unregisterReceiver	(Landroid/content/BroadcastReceiver;)V
    //   34: aload_0
    //   35: invokevirtual 365	oicq/wlogin_sdk/push/push_service:cancelReconnect	()V
    //   38: aload_0
    //   39: getfield 110	oicq/wlogin_sdk/push/push_service:mConnection	Loicq/wlogin_sdk/push/push_service$ConnectionThread;
    //   42: ifnull -24 -> 18
    //   45: aload_0
    //   46: getfield 110	oicq/wlogin_sdk/push/push_service:mConnection	Loicq/wlogin_sdk/push/push_service$ConnectionThread;
    //   49: invokevirtual 368	oicq/wlogin_sdk/push/push_service$ConnectionThread:abort	()V
    //   52: aload_0
    //   53: aconst_null
    //   54: putfield 110	oicq/wlogin_sdk/push/push_service:mConnection	Loicq/wlogin_sdk/push/push_service$ConnectionThread;
    //   57: goto -39 -> 18
    //   60: astore_1
    //   61: aload_0
    //   62: monitorexit
    //   63: aload_1
    //   64: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	65	0	this	push_service
    //   60	4	1	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   2	18	60	finally
    //   21	57	60	finally
  }
  
  private void stopKeepAlives()
  {
    util.LOGI("stopKeepAlives");
    try
    {
      Object localObject = new Intent();
      ((Intent)localObject).setClass(this, push_service.class);
      ((Intent)localObject).setAction("oicq.wlogin_sdk.push.KEEP_ALIVE");
      localObject = PendingIntent.getService(this, 0, (Intent)localObject, 0);
      ((AlarmManager)getSystemService("alarm")).cancel((PendingIntent)localObject);
      return;
    }
    catch (Exception localException)
    {
      StringWriter localStringWriter = new StringWriter();
      PrintWriter localPrintWriter = new PrintWriter(localStringWriter, true);
      localException.printStackTrace(localPrintWriter);
      localPrintWriter.flush();
      localStringWriter.flush();
      util.LOGW("exception:", localStringWriter.toString());
    }
  }
  
  public void cancelReconnect()
  {
    Object localObject = new Intent();
    ((Intent)localObject).setClass(this, push_service.class);
    ((Intent)localObject).setAction("oicq.wlogin_sdk.push.RECONNECT");
    localObject = PendingIntent.getService(this, 0, (Intent)localObject, 0);
    ((AlarmManager)getSystemService("alarm")).cancel((PendingIntent)localObject);
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    return this.mBinder;
  }
  
  public void onCreate()
  {
    super.onCreate();
    this.mConnMan = ((ConnectivityManager)getSystemService("connectivity"));
    this.mNotifMan = ((NotificationManager)getSystemService("notification"));
    this.mPush = new request_push(getApplicationContext(), this.mPushInfo, this);
    Object localObject = new IntentFilter(push_client.PUSH_SET_UINFO_RECEIVED);
    registerReceiver(this.myBroadcastReceiver, (IntentFilter)localObject);
    localObject = new Intent(push_client.PUSH_GET_UINFO_RECEIVED);
    getApplicationContext().sendBroadcast((Intent)localObject);
    util.LOGI("onCreate sendBroadcast for PUSH_GET_UINFO_RECEIVED");
    handleCrashedService();
  }
  
  public void onDestroy()
  {
    util.LOGI("Service destroyed (started=" + this.mStarted + ")");
    unregisterReceiver(this.myBroadcastReceiver);
    if (this.mStarted) {
      stop();
    }
  }
  
  public void onStart(Intent paramIntent, int paramInt)
  {
    util.LOGI("Service started with intent=" + paramIntent);
    super.onStart(paramIntent, paramInt);
    if (paramIntent.getAction().equals("oicq.wlogin_sdk.push.STOP"))
    {
      stop();
      stopSelf();
    }
    do
    {
      return;
      if (paramIntent.getAction().equals("oicq.wlogin_sdk.push.START"))
      {
        start();
        return;
      }
      if (paramIntent.getAction().equals("oicq.wlogin_sdk.push.KEEP_ALIVE"))
      {
        keepAlive();
        return;
      }
    } while (!paramIntent.getAction().equals("oicq.wlogin_sdk.push.RECONNECT"));
    reconnectIfNecessary();
  }
  
  public boolean pushCallback(long paramLong1, long paramLong2, long paramLong3, push_msg[] paramArrayOfPush_msg)
  {
    Object localObject1 = this.mPushInfo.get(paramLong1, paramLong2, paramLong3);
    if (localObject1 == null) {
      return true;
    }
    try
    {
      if ((this.mStarted) && (this.mConnection != null))
      {
        localObject2 = new PathClassLoader(((uin_app_info)localObject1)._cpath, ClassLoader.getSystemClassLoader());
        localObject2 = Class.forName(((uin_app_info)localObject1)._cname, true, (ClassLoader)localObject2);
        showNotification(createPackageContext(((uin_app_info)localObject1)._pkg_name, 2), paramLong2, (Class)localObject2, ((uin_app_info)localObject1)._msg_type, ((uin_app_info)localObject1)._notify_id, ((uin_app_info)localObject1)._icon, paramArrayOfPush_msg);
        return true;
      }
    }
    catch (Exception paramArrayOfPush_msg)
    {
      localObject1 = new StringWriter();
      Object localObject2 = new PrintWriter((Writer)localObject1, true);
      paramArrayOfPush_msg.printStackTrace((PrintWriter)localObject2);
      ((PrintWriter)localObject2).flush();
      ((StringWriter)localObject1).flush();
      util.LOGW("exception:", ((StringWriter)localObject1).toString());
      return false;
    }
    return false;
  }
  
  public void scheduleReconnect(long paramLong)
  {
    this.mPushInfo.set_all_unreg();
    paramLong = System.currentTimeMillis();
    util.LOGI("Rescheduling connection in " + 10000L + "ms.");
    Object localObject = new Intent();
    ((Intent)localObject).setClass(this, push_service.class);
    ((Intent)localObject).setAction("oicq.wlogin_sdk.push.RECONNECT");
    localObject = PendingIntent.getService(this, 0, (Intent)localObject, 0);
    ((AlarmManager)getSystemService("alarm")).set(0, paramLong + 10000L, (PendingIntent)localObject);
  }
  
  public int sendRequest(byte[] paramArrayOfByte)
  {
    try
    {
      if ((this.mStarted) && (this.mConnection != null)) {
        this.mConnection.sendRequest(paramArrayOfByte);
      }
      return 0;
    }
    catch (IOException paramArrayOfByte)
    {
      StringWriter localStringWriter = new StringWriter();
      PrintWriter localPrintWriter = new PrintWriter(localStringWriter, true);
      paramArrayOfByte.printStackTrace(localPrintWriter);
      localPrintWriter.flush();
      localStringWriter.flush();
      paramArrayOfByte = localStringWriter.toString();
      util.LOGI("exception:" + paramArrayOfByte);
    }
    return -1;
  }
  
  private class ConnectionThread
    extends Thread
  {
    private volatile boolean mAbort = false;
    private InetAddress mHost;
    public volatile boolean mPingPending = false;
    private int mPingPkLen = 8;
    private volatile int mPingSeqence = 0;
    private int mPort = 0;
    private final Socket mSocket = new Socket();
    
    public ConnectionThread() {}
    
    private boolean isNetworkAvailable()
    {
      NetworkInfo localNetworkInfo = push_service.this.mConnMan.getActiveNetworkInfo();
      if (localNetworkInfo == null) {
        return false;
      }
      return localNetworkInfo.isConnected();
    }
    
    public void ManulClose()
    {
      util.LOGI("ManulClose.");
      try
      {
        this.mSocket.shutdownOutput();
        try
        {
          this.mSocket.shutdownInput();
          try
          {
            this.mSocket.close();
            return;
          }
          catch (IOException localIOException1) {}
        }
        catch (IOException localIOException2)
        {
          for (;;) {}
        }
      }
      catch (IOException localIOException3)
      {
        for (;;) {}
      }
    }
    
    public void abort()
    {
      util.LOGI("Connection aborting.");
      this.mAbort = true;
      try
      {
        this.mSocket.shutdownOutput();
        try
        {
          this.mSocket.shutdownInput();
          try
          {
            this.mSocket.close();
            for (;;)
            {
              try
              {
                join();
                return;
              }
              catch (InterruptedException localInterruptedException) {}
            }
          }
          catch (IOException localIOException1)
          {
            for (;;) {}
          }
        }
        catch (IOException localIOException2)
        {
          for (;;) {}
        }
      }
      catch (IOException localIOException3)
      {
        for (;;) {}
      }
    }
    
    public boolean isConnected()
    {
      return this.mSocket.isConnected();
    }
    
    public void run()
    {
      Socket localSocket = this.mSocket;
      long l = System.currentTimeMillis();
      Object localObject1 = null;
      int i = 0;
      Object localObject8;
      for (;;)
      {
        if (i >= 3)
        {
          if (i < 3) {
            break label269;
          }
          if (localObject1 == null) {
            break label227;
          }
        }
        try
        {
          throw localObject1;
        }
        catch (Exception localException1)
        {
          localObject7 = new StringWriter();
          localObject8 = new PrintWriter((Writer)localObject7, true);
          localException1.printStackTrace((PrintWriter)localObject8);
          ((PrintWriter)localObject8).flush();
          ((StringWriter)localObject7).flush();
          util.LOGW("exception:", ((StringWriter)localObject7).toString());
          push_service.this.stopKeepAlives();
          push_service.this.mConnected = false;
          if (!this.mAbort) {
            break label652;
          }
          util.LOGI("Connection aborted, shutting down.");
          return;
          try
          {
            this.mPort = push_service.this.mPush.get_port();
            this.mHost = push_service.this.mPush.resolve_server_addr(i);
            if (this.mHost == null)
            {
              i += 1;
              continue;
            }
            util.LOGI("Connection to " + this.mHost.getHostAddress() + ":" + this.mPort);
            localSocket.connect(new InetSocketAddress(this.mHost, this.mPort), 20000);
          }
          catch (Exception localException2)
          {
            i += 1;
          }
          continue;
          label227:
          throw new Exception("retry");
        }
        finally
        {
          push_service.this.stopKeepAlives();
          push_service.this.mConnected = false;
          if (!this.mAbort) {
            break label702;
          }
        }
      }
      util.LOGI("Connection aborted, shutting down.");
      label266:
      throw localObject2;
      label269:
      util.LOGI("Connection established to " + localSocket.getInetAddress() + ":" + this.mPort);
      util.LOGI("resend register");
      push_service.this.mPushInfo.send_register(push_service.this, push_service.this.mPush);
      push_service.this.startKeepAlives();
      push_service.this.mConnected = true;
      ??? = localSocket.getInputStream();
      label352:
      Object localObject7 = new byte[push_service.this.mPush._rsp_head_len + 1];
      int j = 0;
      i = 0;
      break label819;
      label375:
      int m = push_service.this.mPush.get_rsp_length((byte[])localObject7);
      int k = i;
      if (m == this.mPingPkLen)
      {
        for (;;)
        {
          if (i >= this.mPingPkLen) {}
          label421:
          do
          {
            util.LOGI("mPingPending = false");
            this.mPingPending = false;
            break;
            k = ((InputStream)???).read((byte[])localObject7, i, localObject7.length - i);
            j = k;
            if (k < 0) {
              break label375;
            }
            i += k;
            j = k;
            break label819;
            j = ((InputStream)???).read((byte[])localObject7, i, this.mPingPkLen - i);
          } while (j < 0);
          i += j;
        }
        label476:
        i = ((InputStream)???).read((byte[])localObject7, k, localObject7.length - k);
        if (i < 0)
        {
          break label827;
          label496:
          break label555;
        }
      }
      label497:
      label555:
      label593:
      label652:
      label702:
      label819:
      label827:
      label834:
      label842:
      for (;;)
      {
        if (!this.mAbort) {
          util.LOGI("Server closed connection unexpectedly.");
        }
        push_service.this.stopKeepAlives();
        push_service.this.mConnected = false;
        if (this.mAbort)
        {
          util.LOGI("Connection aborted, shutting down.");
          return;
          k += i;
          j = i;
          if (k < localObject7.length) {
            break label476;
          }
          i = j;
          break label827;
          if (m <= localObject7.length) {
            continue;
          }
          j = localObject7.length;
          k = m - j;
          localObject8 = new byte[m];
          System.arraycopy(localObject7, 0, localObject8, 0, localObject7.length);
          break label834;
        }
        for (;;)
        {
          if (m == -1) {
            break label842;
          }
          if (push_service.this.mPush.get_response((byte[])localObject8, localObject8.length) != 64436) {
            break label352;
          }
          break label497;
          do
          {
            i = ((InputStream)???).read((byte[])localObject8, j, k);
            m = i;
            if (i == -1) {
              break label593;
            }
            j += i;
            k -= i;
            continue;
            try
            {
              localSocket.close();
              synchronized (push_service.this)
              {
                push_service.this.mConnection = null;
                if (!isNetworkAvailable()) {
                  break;
                }
                push_service.this.scheduleReconnect(l);
                return;
              }
            }
            catch (IOException localIOException3)
            {
              try
              {
                localObject5.close();
                synchronized (push_service.this)
                {
                  push_service.this.mConnection = null;
                  if (!isNetworkAvailable()) {
                    break label266;
                  }
                  push_service.this.scheduleReconnect(l);
                }
              }
              catch (IOException localIOException3)
              {
                try
                {
                  for (;;)
                  {
                    ???.close();
                    synchronized (push_service.this)
                    {
                      push_service.this.mConnection = null;
                      if (!isNetworkAvailable()) {
                        break;
                      }
                      push_service.this.scheduleReconnect(l);
                      return;
                    }
                    localIOException1 = localIOException1;
                  }
                  localIOException3 = localIOException3;
                }
                catch (IOException localIOException2)
                {
                  for (;;) {}
                }
              }
            }
            if (i < 3) {
              break label421;
            }
            break label375;
            if (i >= 0) {
              break label496;
            }
            break label497;
          } while (k > 0);
          m = i;
        }
      }
    }
    
    public void sendKeepAlive()
      throws IOException
    {
      Socket localSocket = this.mSocket;
      byte[] arrayOfByte = push_service.this.mPush.get_request_hello(0L, 0L, null, null, null, this.mPingSeqence);
      int i = this.mPingSeqence + 1;
      this.mPingSeqence = i;
      if (i < 0) {
        this.mPingSeqence = 0;
      }
      localSocket.getOutputStream().write(arrayOfByte);
      util.LOGI("Keep-alive sent.");
    }
    
    public void sendRequest(byte[] paramArrayOfByte)
      throws IOException
    {
      this.mSocket.getOutputStream().write(paramArrayOfByte);
      util.LOGI("sendRequest sent.");
    }
  }
}
