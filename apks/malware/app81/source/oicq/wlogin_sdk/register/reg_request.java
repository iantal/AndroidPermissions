package oicq.wlogin_sdk.register;

import oicq.wlogin_sdk.tools.MD5;
import oicq.wlogin_sdk.tools.cryptor;
import oicq.wlogin_sdk.tools.util;

public class reg_request
{
  public int _body_len = 0;
  public int _cmd = 0;
  public int _head_len = 11;
  public int _os_type = 5;
  
  public reg_request() {}
  
  public static int parse_0x5_rsp(byte[] paramArrayOfByte, reg_status paramReg_status)
  {
    if (1 > paramArrayOfByte.length) {
      return 64527;
    }
    int i = 0 + 1;
    if (3 > paramArrayOfByte.length) {
      return 64527;
    }
    if (util.buf_to_int16(paramArrayOfByte, i) != paramArrayOfByte.length) {
      return 64527;
    }
    if (7 > paramArrayOfByte.length) {
      return 64527;
    }
    i = i + 2 + 4;
    if (8 > paramArrayOfByte.length) {
      return 64527;
    }
    i = util.buf_to_int8(paramArrayOfByte, i);
    if (i + 8 > paramArrayOfByte.length) {
      return 64527;
    }
    i += 8;
    if (i + 1 > paramArrayOfByte.length) {
      return 64527;
    }
    paramReg_status.sec_ctrl_code = util.buf_to_int8(paramArrayOfByte, i);
    int j = i + 1;
    if (j + 1 > paramArrayOfByte.length) {
      return 64527;
    }
    i = util.buf_to_int8(paramArrayOfByte, j);
    j += 1;
    if (j + i > paramArrayOfByte.length) {
      return 64527;
    }
    paramReg_status.token = new byte[i];
    System.arraycopy(paramArrayOfByte, j, paramReg_status.token, 0, i);
    j += i;
    if (j + 2 > paramArrayOfByte.length) {
      return 64527;
    }
    i = util.buf_to_int16(paramArrayOfByte, j);
    j += 2;
    if (j + i > paramArrayOfByte.length) {
      return 64527;
    }
    paramReg_status.promptinfo = new byte[i];
    System.arraycopy(paramArrayOfByte, j, paramReg_status.promptinfo, 0, i);
    return 0;
  }
  
  public static int parse_0x6_rsp(byte[] paramArrayOfByte, reg_status paramReg_status)
  {
    if (1 > paramArrayOfByte.length) {
      return 64527;
    }
    int i = 0 + 1;
    if (3 > paramArrayOfByte.length) {
      return 64527;
    }
    if (util.buf_to_int16(paramArrayOfByte, i) != paramArrayOfByte.length) {
      return 64527;
    }
    if (7 > paramArrayOfByte.length) {
      return 64527;
    }
    i = i + 2 + 4;
    if (8 > paramArrayOfByte.length) {
      return 64527;
    }
    i = util.buf_to_int8(paramArrayOfByte, i);
    if (i + 8 > paramArrayOfByte.length) {
      return 64527;
    }
    i += 8;
    if (i + 1 > paramArrayOfByte.length) {
      return 64527;
    }
    paramReg_status.sec_ctrl_code = util.buf_to_int8(paramArrayOfByte, i);
    int j = i + 1;
    if (j + 1 > paramArrayOfByte.length) {
      return 64527;
    }
    i = util.buf_to_int8(paramArrayOfByte, j);
    j += 1;
    if (j + i > paramArrayOfByte.length) {
      return 64527;
    }
    byte[] arrayOfByte2 = new byte[i];
    System.arraycopy(paramArrayOfByte, j, arrayOfByte2, 0, i);
    i = j + i;
    if (paramReg_status.sec_ctrl_code == 0)
    {
      if ((paramReg_status.msgchk == null) || (paramReg_status.msgchk.length <= 0)) {}
      for (byte[] arrayOfByte1 = reg_status.STATIC_KEY.getBytes();; arrayOfByte1 = MD5.toMD5Byte(paramReg_status.msgchk))
      {
        arrayOfByte1 = cryptor.decrypt(arrayOfByte2, 0, arrayOfByte2.length, arrayOfByte1);
        if (1 <= arrayOfByte1.length) {
          break;
        }
        return 64527;
      }
      j = util.buf_to_int8(arrayOfByte1, 0);
      if (j + 1 > arrayOfByte1.length) {
        return 64527;
      }
      j += 1;
      if (j + 8 > arrayOfByte1.length) {
        return 64527;
      }
      paramReg_status.uin = util.buf_to_int64(arrayOfByte1, j);
      int k = j + 8;
      if (k + 2 > arrayOfByte1.length) {
        return 64527;
      }
      j = util.buf_to_int16(arrayOfByte1, k);
      k += 2;
      if (k + j > arrayOfByte1.length) {
        return 64527;
      }
      paramReg_status.supersig = new byte[j];
      System.arraycopy(arrayOfByte1, k, paramReg_status.supersig, 0, j);
    }
    if (i + 1 > paramArrayOfByte.length) {
      return 64527;
    }
    j = util.buf_to_int8(paramArrayOfByte, i);
    i += 1;
    if (i + j > paramArrayOfByte.length) {
      return 64527;
    }
    paramReg_status.token = new byte[j];
    System.arraycopy(paramArrayOfByte, i, paramReg_status.token, 0, j);
    j = i + j;
    if (j + 2 > paramArrayOfByte.length) {
      return 64527;
    }
    i = util.buf_to_int16(paramArrayOfByte, j);
    j += 2;
    if (j + i > paramArrayOfByte.length) {
      return 64527;
    }
    paramReg_status.promptinfo = new byte[i];
    System.arraycopy(paramArrayOfByte, j, paramReg_status.promptinfo, 0, i);
    return 0;
  }
  
  public static int parse_0x7_rsp(byte[] paramArrayOfByte, reg_status paramReg_status)
  {
    if (1 > paramArrayOfByte.length) {
      return 64527;
    }
    int i = 0 + 1;
    if (3 > paramArrayOfByte.length) {
      return 64527;
    }
    if (util.buf_to_int16(paramArrayOfByte, i) != paramArrayOfByte.length) {
      return 64527;
    }
    if (7 > paramArrayOfByte.length) {
      return 64527;
    }
    i = i + 2 + 4;
    if (8 > paramArrayOfByte.length) {
      return 64527;
    }
    i = util.buf_to_int8(paramArrayOfByte, i);
    if (i + 8 > paramArrayOfByte.length) {
      return 64527;
    }
    i += 8;
    if (i + 1 > paramArrayOfByte.length) {
      return 64527;
    }
    paramReg_status.sec_ctrl_code = util.buf_to_int8(paramArrayOfByte, i);
    int j = i + 1;
    if (j + 2 > paramArrayOfByte.length) {
      return 64527;
    }
    i = util.buf_to_int16(paramArrayOfByte, j);
    j += 2;
    if (j + i > paramArrayOfByte.length) {
      return 64527;
    }
    paramReg_status.promptinfo = new byte[i];
    System.arraycopy(paramArrayOfByte, j, paramReg_status.promptinfo, 0, i);
    return 0;
  }
  
  public static int parse_checkvalid_rsp(byte[] paramArrayOfByte, reg_status paramReg_status)
  {
    int k = 0;
    int i;
    if (1 > paramArrayOfByte.length) {
      i = 64527;
    }
    int j;
    byte[] arrayOfByte;
    do
    {
      return i;
      i = 0 + 1;
      if (3 > paramArrayOfByte.length) {
        return 64527;
      }
      if (util.buf_to_int16(paramArrayOfByte, i) != paramArrayOfByte.length) {
        return 64527;
      }
      if (7 > paramArrayOfByte.length) {
        return 64527;
      }
      i = i + 2 + 4;
      if (8 > paramArrayOfByte.length) {
        return 64527;
      }
      i = util.buf_to_int8(paramArrayOfByte, i);
      if (i + 8 > paramArrayOfByte.length) {
        return 64527;
      }
      i += 8;
      if (i + 1 > paramArrayOfByte.length) {
        return 64527;
      }
      paramReg_status.sec_ctrl_code = (util.buf_to_int8(paramArrayOfByte, i) & 0xFF);
      j = i + 1;
      if (j + 2 > paramArrayOfByte.length) {
        return 64527;
      }
      i = util.buf_to_int16(paramArrayOfByte, j);
      j += 2;
      if (j + i > paramArrayOfByte.length) {
        return 64527;
      }
      arrayOfByte = new byte[i];
      System.arraycopy(paramArrayOfByte, j, arrayOfByte, 0, i);
      j += i;
      if (j + 1 > paramArrayOfByte.length) {
        return 64527;
      }
      i = util.buf_to_int8(paramArrayOfByte, j);
      j += 1;
      if (j + i > paramArrayOfByte.length) {
        return 64527;
      }
      paramReg_status.token = new byte[i];
      System.arraycopy(paramArrayOfByte, j, paramReg_status.token, 0, i);
      j += i;
      if (j + 2 > paramArrayOfByte.length) {
        return 64527;
      }
      i = util.buf_to_int16(paramArrayOfByte, j);
      j += 2;
      if (j + i > paramArrayOfByte.length) {
        return 64527;
      }
      paramReg_status.promptinfo = new byte[i];
      System.arraycopy(paramArrayOfByte, j, paramReg_status.promptinfo, 0, i);
      i = k;
    } while (arrayOfByte.length <= 0);
    if (paramReg_status.sec_ctrl_code == 0)
    {
      if (4 > arrayOfByte.length) {
        return 64527;
      }
      paramReg_status.telnum_verify_result = util.buf_to_int32(arrayOfByte, 0);
      i = 0 + 4;
      if (5 > arrayOfByte.length) {
        return 64527;
      }
      j = util.buf_to_int8(arrayOfByte, i);
      if (j + 5 > arrayOfByte.length) {
        return 64527;
      }
      paramReg_status.return_msg = new byte[j];
      System.arraycopy(arrayOfByte, i + 1, paramReg_status.return_msg, 0, j);
      return 0;
    }
    if (paramReg_status.sec_ctrl_code == 1)
    {
      if (2 > arrayOfByte.length) {
        return 64527;
      }
      i = util.buf_to_int16(arrayOfByte, 0);
      if (i + 2 > arrayOfByte.length) {
        return 64527;
      }
      paramReg_status.picbuf = new byte[i];
      System.arraycopy(arrayOfByte, 0 + 2, paramReg_status.picbuf, 0, i);
      j = i + 2;
      if (j + 2 > arrayOfByte.length) {
        return 64527;
      }
      i = util.buf_to_int16(arrayOfByte, j);
      j += 2;
      if (j + i > arrayOfByte.length) {
        return 64527;
      }
      paramReg_status.sigbuf = new byte[i];
      System.arraycopy(arrayOfByte, j, paramReg_status.sigbuf, 0, i);
      return 0;
    }
    if (paramReg_status.sec_ctrl_code == 2)
    {
      if (1 > arrayOfByte.length) {
        return 64527;
      }
      i = util.buf_to_int8(arrayOfByte, 0);
      if (i + 1 > arrayOfByte.length) {
        return 64527;
      }
      paramReg_status.recvnum = new byte[i];
      System.arraycopy(arrayOfByte, 0 + 1, paramReg_status.recvnum, 0, i);
      paramReg_status.sendmsg = new byte[6];
      j = 0;
      for (;;)
      {
        i = k;
        if (j >= paramReg_status.sendmsg.length) {
          break;
        }
        paramReg_status.sendmsg[j] = ((byte)((byte)(util.get_rand_32() % 10) + 48));
        j += 1;
      }
    }
    if (paramReg_status.sec_ctrl_code == 3)
    {
      if (2 > arrayOfByte.length) {
        return 64527;
      }
      i = util.buf_to_int16(arrayOfByte, 0);
      if (i + 2 > arrayOfByte.length) {
        return 64527;
      }
      paramReg_status.url = new byte[i];
      System.arraycopy(arrayOfByte, 0 + 2, paramReg_status.url, 0, i);
      return 0;
    }
    if (paramReg_status.sec_ctrl_code == 4)
    {
      if (2 > arrayOfByte.length) {
        return 64527;
      }
      paramReg_status.next_check_time = util.buf_to_int16(arrayOfByte, 0);
      i = 0 + 2;
      if (4 > arrayOfByte.length) {
        return 64527;
      }
      paramReg_status.total_time_out = util.buf_to_int16(arrayOfByte, i);
      return 0;
    }
    if (paramReg_status.sec_ctrl_code == 5)
    {
      if (2 > arrayOfByte.length) {
        return 64527;
      }
      paramReg_status.next_check_time = util.buf_to_int16(arrayOfByte, 0);
      i = 0 + 2;
      if (4 > arrayOfByte.length) {
        return 64527;
      }
      paramReg_status.total_time_out = util.buf_to_int16(arrayOfByte, i);
      return 0;
    }
    util.LOGW("unhandle return code int parse_checkvalid_rsp", "");
    return 0;
  }
  
  public int get_cmd()
  {
    return this._cmd;
  }
  
  public byte[] get_encrypt_token(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
  {
    byte[] arrayOfByte = new byte[paramArrayOfByte1.length + 1];
    util.int8_to_buf(arrayOfByte, 0, paramArrayOfByte1.length);
    System.arraycopy(paramArrayOfByte1, 0, arrayOfByte, 1, paramArrayOfByte1.length);
    paramArrayOfByte1 = MD5.toMD5Byte(paramArrayOfByte2);
    return cryptor.encrypt(arrayOfByte, 0, arrayOfByte.length, paramArrayOfByte1);
  }
  
  public byte[] get_request(byte[] paramArrayOfByte)
  {
    byte[] arrayOfByte = new byte[this._head_len + 2 + paramArrayOfByte.length];
    util.int8_to_buf(arrayOfByte, 0, 2);
    int i = 0 + 1;
    util.int16_to_buf(arrayOfByte, i, this._head_len + paramArrayOfByte.length + 1);
    i += 2;
    util.int16_to_buf(arrayOfByte, i, 1);
    i += 2;
    util.int16_to_buf(arrayOfByte, i, this._cmd);
    i += 2;
    util.int8_to_buf(arrayOfByte, i, 4);
    i += 1;
    util.int32_to_buf(arrayOfByte, i, 0);
    System.arraycopy(paramArrayOfByte, 0, arrayOfByte, i + 4, paramArrayOfByte.length);
    i = paramArrayOfByte.length + 12;
    util.int8_to_buf(arrayOfByte, i, 3);
    return arrayOfByte;
  }
  
  public int get_response(byte[] paramArrayOfByte)
  {
    return 0;
  }
}
