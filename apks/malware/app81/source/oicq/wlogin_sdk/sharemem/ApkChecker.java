package oicq.wlogin_sdk.sharemem;

import android.content.Context;
import android.content.Intent;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Iterator;
import java.util.Set;
import java.util.TreeMap;
import oicq.wlogin_sdk.request.UinInfo;
import oicq.wlogin_sdk.request.WloginAllSigInfo;
import oicq.wlogin_sdk.request.account_sig_info_map;
import oicq.wlogin_sdk.request.request_app_signature;
import oicq.wlogin_sdk.request.request_global;
import oicq.wlogin_sdk.tools.util;

public class ApkChecker
  extends Thread
{
  request_app_signature mCheck;
  Context mContext;
  int mPid;
  sharemem_client mShare;
  
  public ApkChecker(Context paramContext, sharemem_client paramSharemem_client, request_app_signature paramRequest_app_signature, int paramInt)
  {
    this.mContext = paramContext;
    this.mShare = paramSharemem_client;
    this.mCheck = paramRequest_app_signature;
    this.mPid = paramInt;
  }
  
  public void run()
  {
    util.LOGI("ApkChecker Pid=" + this.mPid + " ...");
    if (this.mPid == 0)
    {
      util.LOGI("ApkChecker Pid=" + this.mPid + " return");
      return;
    }
    Object localObject1 = util.getPkgPublicKeyFromPid(this.mContext, this.mPid);
    localObject2 = request_global.get_siginfo(this.mContext);
    if (localObject2 == null)
    {
      util.LOGI("ApkChecker Pid=" + this.mPid + " do not find ticks");
      return;
    }
    this.mCheck._g._master_tgt_key = ((WloginSigInfo)localObject2)._TGTKey;
    localObject3 = util.getPkgNameFromPid(this.mContext, this.mPid);
    localObject4 = util.get_apk_v(this.mContext, (String)localObject3);
    int i = this.mCheck.make_request(((WloginSigInfo)localObject2)._app_pri, ((WloginSigInfo)localObject2)._ret_appid, 1L, util.SSO_VERSION, 996082, ((WloginSigInfo)localObject2)._TGT, 66560, 116, null, ((String)localObject3).getBytes(), 0L, 1L, 1L, (byte[])localObject4, (byte[])localObject1, null);
    if (i == 0) {
      this.mShare.set_checked(true);
    }
    for (;;)
    {
      try
      {
        new Intent(sharemem_client.SHAREMEM_SET_UINFO_RECEIVED);
        localObject1 = account_sig_info_map.loadTKTreeMap(this.mContext, "tk_file");
        if (localObject1 != null)
        {
          localObject2 = ((TreeMap)localObject1).keySet().iterator();
          if (((Iterator)localObject2).hasNext()) {
            continue;
          }
        }
        localObject1 = account_sig_info_map.loadTKTreeMap(this.mContext, "name_file");
        if (localObject1 == null) {
          continue;
        }
        localObject2 = ((TreeMap)localObject1).keySet().iterator();
      }
      catch (Exception localException)
      {
        boolean bool;
        Iterator localIterator;
        Long localLong;
        WloginSigInfo localWloginSigInfo;
        localObject2 = new StringWriter();
        localObject3 = new PrintWriter((Writer)localObject2, true);
        localException.printStackTrace((PrintWriter)localObject3);
        ((PrintWriter)localObject3).flush();
        ((StringWriter)localObject2).flush();
        util.LOGW("exception:", ((StringWriter)localObject2).toString());
        continue;
        localObject3 = (String)((Iterator)localObject2).next();
        localObject4 = (UinInfo)localException.get(localObject3);
        this.mShare.put_account((String)localObject3, ((UinInfo)localObject4)._uin.longValue());
        continue;
      }
      bool = ((Iterator)localObject2).hasNext();
      if (bool) {
        continue;
      }
      util.LOGI("ApkChecker Pid=" + this.mPid + " ret=" + i);
      return;
      localObject3 = (Long)((Iterator)localObject2).next();
      localObject4 = (WloginAllSigInfo)((TreeMap)localObject1).get(localObject3);
      localIterator = ((WloginAllSigInfo)localObject4)._tk_map.keySet().iterator();
      if (localIterator.hasNext())
      {
        localLong = (Long)localIterator.next();
        localWloginSigInfo = (WloginSigInfo)((WloginAllSigInfo)localObject4)._tk_map.get(localLong);
        if (!localWloginSigInfo.iSExpireA2(request_global.get_cur_time())) {
          this.mShare.put_siginfo(((Long)localObject3).longValue(), localLong.longValue(), ((WloginAllSigInfo)localObject4)._useInfo.getWloginRemoteData(), localWloginSigInfo.getWloginRemoteData());
        }
      }
    }
  }
}
