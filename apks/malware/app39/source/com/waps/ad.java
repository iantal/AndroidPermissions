package com.waps;

import android.content.Context;
import android.util.Xml;
import android.widget.LinearLayout;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import org.xmlpull.v1.XmlPullParser;

public class ad
{
  LinearLayout a;
  final String b = "Display Ad";
  private af c = null;
  private DisplayAdNotifier d;
  private z e = null;
  private Context f;
  private String g = "";
  private String h = "";
  private String i = "";
  
  public ad(Context paramContext)
  {
    this.f = paramContext;
    this.e = new z(this.f);
  }
  
  private boolean a(String paramString)
  {
    try
    {
      paramString = a(new ByteArrayInputStream(paramString.getBytes("UTF-8")));
      if ((paramString != null) && (paramString.size() > 0)) {
        this.d.getDisplayAdResponse(paramString);
      }
      this.a = null;
      return true;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
    return true;
  }
  
  protected List a(InputStream paramInputStream)
  {
    for (;;)
    {
      try
      {
        localXmlPullParser = Xml.newPullParser();
        localXmlPullParser.setInput(paramInputStream, "UTF-8");
        j = localXmlPullParser.getEventType();
        localObject1 = null;
        paramInputStream = null;
      }
      catch (Exception paramInputStream)
      {
        XmlPullParser localXmlPullParser;
        paramInputStream.printStackTrace();
        localObject2 = null;
        return localObject2;
      }
      int j = localXmlPullParser.next();
      break label574;
      paramInputStream = new ArrayList();
      continue;
      if ("Ad".equals(localXmlPullParser.getName())) {
        localObject1 = new a();
      }
      Object localObject2 = localObject1;
      if (localObject1 != null)
      {
        if ("Id".equals(localXmlPullParser.getName())) {
          ((a)localObject1).a(localXmlPullParser.nextText());
        }
        if ("Title".equals(localXmlPullParser.getName())) {
          ((a)localObject1).h(localXmlPullParser.nextText());
        }
        if ("Image".equals(localXmlPullParser.getName())) {
          ((a)localObject1).b(localXmlPullParser.nextText());
        }
        if ("Content".equals(localXmlPullParser.getName())) {
          ((a)localObject1).c(localXmlPullParser.nextText());
        }
        if ("ClickUrl".equals(localXmlPullParser.getName())) {
          ((a)localObject1).d(localXmlPullParser.nextText());
        }
        if ("Show_detail".equals(localXmlPullParser.getName())) {
          ((a)localObject1).e(localXmlPullParser.nextText());
        }
        if ("AdPackage".equals(localXmlPullParser.getName())) {
          ((a)localObject1).f(localXmlPullParser.nextText());
        }
        if ("NewBrowser".equals(localXmlPullParser.getName())) {
          ((a)localObject1).g(localXmlPullParser.nextText());
        }
        if ("Points".equals(localXmlPullParser.getName())) {
          ((a)localObject1).a(Integer.parseInt(localXmlPullParser.nextText()));
        }
        if ("Description".equals(localXmlPullParser.getName())) {
          ((a)localObject1).l(localXmlPullParser.nextText());
        }
        if ("Version".equals(localXmlPullParser.getName())) {
          ((a)localObject1).m(localXmlPullParser.nextText());
        }
        if ("Filesize".equals(localXmlPullParser.getName())) {
          ((a)localObject1).n(localXmlPullParser.nextText());
        }
        if ("Provider".equals(localXmlPullParser.getName())) {
          ((a)localObject1).o(localXmlPullParser.nextText());
        }
        if ("ImageUrls".equals(localXmlPullParser.getName())) {
          ((a)localObject1).a(localXmlPullParser.nextText().split("\\|"));
        }
        if ("DownUrl".equals(localXmlPullParser.getName())) {
          ((a)localObject1).p(localXmlPullParser.nextText());
        }
        localObject2 = localObject1;
        if ("Action".equals(localXmlPullParser.getName()))
        {
          ((a)localObject1).q(localXmlPullParser.nextText());
          continue;
          localObject2 = localObject1;
          if ("Ad".equals(localXmlPullParser.getName()))
          {
            localObject2 = localObject1;
            if (localObject1 != null)
            {
              localObject2 = localObject1;
              if (!SDKUtils.isNull(((a)localObject1).a()))
              {
                paramInputStream.add(localObject1);
                localObject1 = null;
                continue;
                label574:
                localObject2 = paramInputStream;
                if (j == 1) {
                  continue;
                }
                localObject2 = localObject1;
                switch (j)
                {
                case 0: 
                case 2: 
                case 3: 
                default: 
                  localObject2 = localObject1;
                }
              }
            }
          }
        }
      }
      Object localObject1 = localObject2;
    }
  }
  
  protected void a(String paramString1, String paramString2, DisplayAdNotifier paramDisplayAdNotifier)
  {
    this.h = paramString1;
    this.g = (this.h + "miniad/ad?");
    this.i = paramString2;
    this.d = paramDisplayAdNotifier;
    if (this.e != null) {
      AppConnect.a(this.f, this.e);
    }
    if ((AppConnect.K != null) && (AppConnect.K.size() > 0))
    {
      this.d.getDisplayAdResponse(AppConnect.K);
      return;
    }
    this.c = new af(this, null);
    this.c.execute(new Void[0]);
  }
}
