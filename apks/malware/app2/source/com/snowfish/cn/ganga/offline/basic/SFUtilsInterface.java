package com.snowfish.cn.ganga.offline.basic;

import android.content.Context;
import com.snowfish.cn.ganga.offline.b.a;
import com.snowfish.cn.ganga.offline.b.d;
import com.snowfish.cn.ganga.offline.b.f;
import com.snowfish.cn.ganga.offline.b.g;
import com.snowfish.cn.ganga.offline.b.h;
import java.util.Iterator;
import java.util.List;
import java.util.Random;

public class SFUtilsInterface
{
  public SFUtilsInterface() {}
  
  public static void a(byte[] paramArrayOfByte, int paramInt)
  {
    try
    {
      if (f.a == null) {
        f.a = new f();
      }
      f.a.a(paramArrayOfByte, paramInt);
      return;
    }
    catch (Throwable paramArrayOfByte) {}
  }
  
  public static String ba()
  {
    return new String(g.a);
  }
  
  public static byte[] call(Context paramContext, byte[] paramArrayOfByte)
  {
    return h.a(paramContext, paramArrayOfByte);
  }
  
  public static String cc()
  {
    return new String(g.e);
  }
  
  public static byte[] d(byte[] paramArrayOfByte, int paramInt)
  {
    return a.a(paramArrayOfByte, paramInt);
  }
  
  public static byte[] e(byte[] paramArrayOfByte, int paramInt, Random paramRandom)
  {
    return a.a(paramArrayOfByte, paramInt, paramRandom);
  }
  
  public static String gc(String paramString)
  {
    Object localObject = d.a();
    String str = new String(new byte[] { 83, 78, 79, 87, 70, 73, 83, 72 });
    if (((d)localObject).a != null) {
      localObject = ((d)localObject).a.iterator();
    }
    com.snowfish.cn.ganga.offline.a.b localB;
    do
    {
      if (!((Iterator)localObject).hasNext()) {
        return str;
      }
      localB = (com.snowfish.cn.ganga.offline.a.b)((Iterator)localObject).next();
    } while (!localB.a.equalsIgnoreCase(paramString));
    return localB.b;
  }
  
  public static Context getCtx()
  {
    return h.a();
  }
  
  public static long gi()
  {
    return h.d();
  }
  
  public static int gv(String paramString)
  {
    Object localObject = d.a();
    if (((d)localObject).a == null) {
      return 1;
    }
    localObject = ((d)localObject).a.iterator();
    com.snowfish.cn.ganga.offline.a.b localB;
    do
    {
      if (!((Iterator)localObject).hasNext()) {
        return 1;
      }
      localB = (com.snowfish.cn.ganga.offline.a.b)((Iterator)localObject).next();
    } while (!localB.a.equalsIgnoreCase(paramString));
    return localB.f;
  }
  
  public static boolean iU()
  {
    return h.e();
  }
  
  public static boolean iap(Context paramContext, String paramString, int paramInt1, int paramInt2)
  {
    return h.a(paramContext, paramString, paramInt1, paramInt2);
  }
  
  public static boolean ip()
  {
    return h.f();
  }
  
  public static IPR ir(IPR paramIPR, int paramInt)
  {
    return new com.snowfish.cn.ganga.offline.b.b(paramIPR, paramInt);
  }
  
  public static IPR ir(byte[] paramArrayOfByte)
  {
    return new com.snowfish.cn.ganga.offline.b.b(paramArrayOfByte);
  }
  
  public static IPR ir(byte[] paramArrayOfByte, int paramInt)
  {
    return new com.snowfish.cn.ganga.offline.b.b(paramArrayOfByte, paramInt);
  }
  
  public static IPR ir(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
  {
    return new com.snowfish.cn.ganga.offline.b.b(paramArrayOfByte, paramInt1, paramInt2);
  }
  
  public static IPW iw()
  {
    return new com.snowfish.cn.ganga.offline.b.c();
  }
  
  public static IPW iw(byte[] paramArrayOfByte)
  {
    return new com.snowfish.cn.ganga.offline.b.c(paramArrayOfByte);
  }
  
  public static IPW iw(byte[] paramArrayOfByte, int paramInt)
  {
    return new com.snowfish.cn.ganga.offline.b.c(paramArrayOfByte, paramInt);
  }
  
  public static IPW iw(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
  {
    return new com.snowfish.cn.ganga.offline.b.c(paramArrayOfByte, paramInt1, paramInt2);
  }
  
  public static int m()
  {
    return g.j;
  }
  
  public static long pl(String paramString)
  {
    return com.snowfish.cn.ganga.offline.a.c.a(paramString);
  }
  
  public static void psu(Context paramContext, boolean paramBoolean)
  {
    h.a(paramContext, paramBoolean);
  }
  
  public static void s(Context paramContext, int paramInt1, int paramInt2, int paramInt3)
  {
    h.a(paramContext, paramInt1, paramInt2, paramInt3);
  }
  
  public static void sp(boolean paramBoolean)
  {
    h.b(paramBoolean);
  }
  
  public static void up(Context paramContext)
  {
    try
    {
      IPW localIPW = iw();
      localIPW.writeI32(1);
      h.a(paramContext, localIPW.toByteArray());
      return;
    }
    catch (Throwable paramContext) {}
  }
}
