package com.a.a.c;

import android.opengl.GLES10;
import com.a.a.b.a.f;
import com.a.a.b.a.i;

public final class a
{
  private static f a;
  
  static
  {
    int[] arrayOfInt = new int[1];
    GLES10.glGetIntegerv(3379, arrayOfInt, 0);
    int i = Math.max(arrayOfInt[0], 2048);
    a = new f(i, i);
  }
  
  public static int a(f paramF)
  {
    int i = paramF.a();
    int j = paramF.b();
    int k = a.a();
    int m = a.b();
    return Math.max((int)Math.ceil(i / k), (int)Math.ceil(j / m));
  }
  
  public static int a(f paramF1, f paramF2, i paramI, boolean paramBoolean)
  {
    int k = paramF1.a();
    int j = paramF1.b();
    int n = paramF2.a();
    int i1 = paramF2.b();
    int i = k / n;
    int m = j / i1;
    switch (b.a[paramI.ordinal()])
    {
    default: 
      i = 1;
    }
    for (;;)
    {
      if (i < 1)
      {
        return 1;
        if (paramBoolean)
        {
          i = 1;
          m = k;
          k = j;
          for (;;)
          {
            if (m / 2 < n)
            {
              j = i;
              if (k / 2 < i1) {
                break;
              }
            }
            m /= 2;
            k /= 2;
            i *= 2;
          }
        }
        i = Math.max(i, m);
        continue;
        if (paramBoolean)
        {
          i = 1;
          m = k;
          k = j;
          for (;;)
          {
            j = i;
            if (m / 2 < n) {
              break;
            }
            j = i;
            if (k / 2 < i1) {
              break;
            }
            m /= 2;
            k /= 2;
            i *= 2;
          }
        }
        i = Math.min(i, m);
      }
      else
      {
        return i;
        i = j;
      }
    }
  }
  
  public static f a(com.a.a.b.e.a paramA, f paramF)
  {
    int j = paramA.a();
    int i = j;
    if (j <= 0) {
      i = paramF.a();
    }
    int k = paramA.b();
    j = k;
    if (k <= 0) {
      j = paramF.b();
    }
    return new f(i, j);
  }
  
  public static float b(f paramF1, f paramF2, i paramI, boolean paramBoolean)
  {
    int k = paramF1.a();
    int m = paramF1.b();
    int i = paramF2.a();
    int j = paramF2.b();
    float f1 = k / i;
    float f2 = m / j;
    if (((paramI == i.a) && (f1 >= f2)) || ((paramI == i.b) && (f1 < f2))) {
      j = (int)(m / f1);
    }
    for (;;)
    {
      f2 = 1.0F;
      if ((paramBoolean) || (i >= k) || (j >= m))
      {
        f1 = f2;
        if (paramBoolean)
        {
          f1 = f2;
          if (i != k)
          {
            f1 = f2;
            if (j == m) {}
          }
        }
      }
      else
      {
        f1 = i / k;
      }
      return f1;
      i = (int)(k / f2);
    }
  }
}
