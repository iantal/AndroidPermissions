package com.bx.pay;

import android.content.Context;
import android.os.Process;
import android.util.Log;
import com.bx.pay.a.d;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public final class l
  implements Thread.UncaughtExceptionHandler
{
  private static l b = new l();
  private Thread.UncaughtExceptionHandler a;
  private Context c;
  private Map d = new HashMap();
  private DateFormat e = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss");
  
  private l() {}
  
  public static l a()
  {
    return b;
  }
  
  public final void a(Context paramContext)
  {
    this.c = paramContext;
    this.a = Thread.getDefaultUncaughtExceptionHandler();
    Thread.setDefaultUncaughtExceptionHandler(this);
  }
  
  public final void uncaughtException(Thread paramThread, Throwable paramThrowable)
  {
    int i;
    if (paramThrowable == null)
    {
      i = 0;
      if ((i == 0) && (this.a != null)) {
        this.a.uncaughtException(paramThread, paramThrowable);
      }
    }
    else
    {
      new m(this).start();
      StringBuffer localStringBuffer = new StringBuffer();
      Object localObject1 = this.d.entrySet().iterator();
      label65:
      Object localObject2;
      Object localObject3;
      if (!((Iterator)localObject1).hasNext())
      {
        localObject2 = new StringWriter();
        localObject3 = new PrintWriter((Writer)localObject2);
        paramThrowable.printStackTrace((PrintWriter)localObject3);
      }
      for (localObject1 = paramThrowable.getCause();; localObject1 = ((Throwable)localObject1).getCause())
      {
        if (localObject1 == null)
        {
          ((PrintWriter)localObject3).close();
          localStringBuffer.append(localObject2.toString());
          d.a("UncaughtExceptionHandler", localStringBuffer.toString());
          i = 1;
          break;
          localObject3 = (Map.Entry)((Iterator)localObject1).next();
          localObject2 = (String)((Map.Entry)localObject3).getKey();
          localObject3 = (String)((Map.Entry)localObject3).getValue();
          localStringBuffer.append(localObject2 + "=" + (String)localObject3 + "\n");
          break label65;
        }
        ((Throwable)localObject1).printStackTrace((PrintWriter)localObject3);
      }
    }
    try
    {
      Thread.sleep(3000L);
      Process.killProcess(Process.myPid());
      System.exit(1);
      return;
    }
    catch (InterruptedException paramThread)
    {
      for (;;)
      {
        Log.e("WPayCrashHandler", "error : ", paramThread);
      }
    }
  }
}
