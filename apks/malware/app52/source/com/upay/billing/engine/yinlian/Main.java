package com.upay.billing.engine.yinlian;

import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import com.payeco.android.plugin.PayecoPluginLoadingActivity;
import com.upay.billing.Engine;
import com.upay.billing.UpayActivity;
import com.upay.billing.UpayCore;
import com.upay.billing.bean.Cmd;
import com.upay.billing.bean.Goods;
import com.upay.billing.bean.Op;
import com.upay.billing.bean.Plan;
import com.upay.billing.bean.PriceType;
import com.upay.billing.bean.Trade;
import com.upay.billing.utils.HttpRunner;
import com.upay.billing.utils.Json;
import com.upay.billing.utils.Util;
import java.io.File;
import java.util.List;
import org.json.JSONObject;

public class Main
  extends Engine
{
  private static final String PAYECO_PLUGIN_PAYEND_ACTION = "com.payeco.plugin.payend.broadcast";
  private static final String TAG = "YinlianMain";
  private Main.PayecoBroadcastReceiver mPayecoPayEndReceiver;
  private Trade mTrade;
  private String requestYinlianUrl = "http://121.52.218.66:8012/request_v2.php";
  
  public Main() {}
  
  private void logCharge(int paramInt, String paramString)
  {
    this.core.logEvent(this.mTrade.appKey, "charge_handle", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", "yinlian", "bt_key", "yinlian", "description", paramString, "mt_msg", "", "mt_num", "", "result", Integer.valueOf(paramInt), "sn", this.mTrade.id + "01", "ts", Long.valueOf(Util.getTs() + Util.getLong(this.core.getContext(), "Time-Diff")), "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
  }
  
  private void logPay(int paramInt, String paramString)
  {
    this.core.logEvent(this.mTrade.appKey, "exec_pay", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", "yinlian", "bt_key", "yinlian", "target", "", "sn", this.mTrade.id + "01", "request", "", "response", paramString, "result", Integer.valueOf(paramInt), "ts", Long.valueOf(Util.getTs() + Util.getLong(this.core.getContext(), "Time-Diff")), "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
  }
  
  private void submitOrderSuccess(String paramString)
  {
    this.mPayecoPayEndReceiver = new Main.PayecoBroadcastReceiver(this);
    Object localObject = new IntentFilter();
    ((IntentFilter)localObject).addAction("com.payeco.plugin.payend.broadcast");
    this.core.getContext().registerReceiver(this.mPayecoPayEndReceiver, (IntentFilter)localObject);
    localObject = new Intent(this.core.getContext(), PayecoPluginLoadingActivity.class);
    ((Intent)localObject).putExtra("upPay.Req", paramString);
    this.core.getContext().startActivity((Intent)localObject);
  }
  
  private void yinlianPay(Trade paramTrade)
  {
    showProgressUi(this.core.getPlan(paramTrade.appKey), paramTrade, "upay_progress_ui", "正在提交订单，请稍后...");
    Util.addTask(new Main.1(this, this.requestYinlianUrl, paramTrade).setDoGet().addParam("goodsName", this.core.getGoods(paramTrade.appKey, paramTrade.goodsKey).name).addParam("tradeId", paramTrade.id + "01").addParam("price", String.valueOf(paramTrade.price)));
  }
  
  public Op getOp()
  {
    return Op.NONE;
  }
  
  public PriceType getPriceType()
  {
    return PriceType.ANY;
  }
  
  public boolean hasCustomConfirmUi()
  {
    return true;
  }
  
  public boolean isAvailable(Op paramOp, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    return paramBoolean2;
  }
  
  public void pay(Trade paramTrade, List<Cmd> paramList)
  {
    this.mTrade = paramTrade;
    if (Util.isNetworkAvailable(this.core.getContext()))
    {
      yinlianPay(paramTrade);
      return;
    }
    this.core.paymentCompleted(paramTrade, 105);
    this.core.logEvent(paramTrade.appKey, "exec_pay", Json.createObject(new Object[] { "trade_id", paramTrade.id, "goods_key", paramTrade.goodsKey, "cmd_key", "yinlian", "bt_key", "yinlian", "target", "", "price", Integer.valueOf(paramTrade.price), "sn", paramTrade.id + "01", "ts", Long.valueOf(Util.getTs() + Util.getLong(this.core.getContext(), "Time-Diff")), "request", "", "response", "yinlian-no-network", "result", Integer.valueOf(121) }).asObject().toString());
  }
  
  public void showProgressUi(Plan paramPlan, Trade paramTrade, String paramString1, String paramString2)
  {
    paramPlan = paramPlan.getLocalResourcePath(paramString1);
    if ((paramPlan != null) && (new File(paramPlan).exists())) {}
    for (paramPlan = Util.loadLocalText(paramPlan);; paramPlan = Util.loadAssetsText(this.core.getContext(), paramString1 + ".json"))
    {
      UpayActivity.start(this.core.getContext(), paramString1, paramPlan, 0, new Main.2(this, paramTrade, paramString2));
      return;
    }
  }
}
