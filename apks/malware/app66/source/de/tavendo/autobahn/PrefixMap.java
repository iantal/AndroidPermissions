package de.tavendo.autobahn;

import java.util.HashMap;

public class PrefixMap
{
  private final HashMap mPrefixes = new HashMap();
  private final HashMap mUris = new HashMap();
  
  public PrefixMap() {}
  
  public void clear()
  {
    this.mPrefixes.clear();
    this.mUris.clear();
  }
  
  public String get(String paramString)
  {
    return (String)this.mPrefixes.get(paramString);
  }
  
  public String remove(String paramString)
  {
    if (this.mPrefixes.containsKey(paramString))
    {
      String str = (String)this.mPrefixes.get(paramString);
      this.mPrefixes.remove(paramString);
      this.mUris.remove(str);
      return str;
    }
    return null;
  }
  
  public String resolve(String paramString)
  {
    int i = paramString.indexOf(':');
    if (i > 0)
    {
      String str = paramString.substring(0, i);
      if (this.mPrefixes.containsKey(str)) {
        return (String)this.mPrefixes.get(str) + paramString.substring(i + 1);
      }
    }
    return null;
  }
  
  public String resolveOrPass(String paramString)
  {
    String str = resolve(paramString);
    if (str != null) {
      paramString = str;
    }
    return paramString;
  }
  
  public void set(String paramString1, String paramString2)
  {
    this.mPrefixes.put(paramString1, paramString2);
    this.mUris.put(paramString2, paramString1);
  }
  
  public String shrink(String paramString)
  {
    int i = paramString.length();
    for (;;)
    {
      if (i <= 0) {
        return paramString;
      }
      String str = paramString.substring(0, i);
      str = (String)this.mUris.get(str);
      if (str != null) {
        return str + ':' + paramString.substring(i);
      }
      i -= 1;
    }
  }
}
