package com.lepeng.utils.base;

import java.util.Iterator;

public abstract interface Deque
  extends Queue
{
  public abstract boolean add(Object paramObject);
  
  public abstract void addFirst(Object paramObject);
  
  public abstract void addLast(Object paramObject);
  
  public abstract boolean contains(Object paramObject);
  
  public abstract Iterator descendingIterator();
  
  public abstract Object element();
  
  public abstract Object getFirst();
  
  public abstract Object getLast();
  
  public abstract Iterator iterator();
  
  public abstract boolean offer(Object paramObject);
  
  public abstract boolean offerFirst(Object paramObject);
  
  public abstract boolean offerLast(Object paramObject);
  
  public abstract Object peek();
  
  public abstract Object peekFirst();
  
  public abstract Object peekLast();
  
  public abstract Object poll();
  
  public abstract Object pollFirst();
  
  public abstract Object pollLast();
  
  public abstract Object pop();
  
  public abstract void push(Object paramObject);
  
  public abstract Object remove();
  
  public abstract boolean remove(Object paramObject);
  
  public abstract Object removeFirst();
  
  public abstract boolean removeFirstOccurrence(Object paramObject);
  
  public abstract Object removeLast();
  
  public abstract boolean removeLastOccurrence(Object paramObject);
  
  public abstract int size();
}
