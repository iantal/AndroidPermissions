package com.lepeng.fastjson.serializer;

import com.lepeng.fastjson.annotation.JSONField;
import com.lepeng.fastjson.util.FieldInfo;
import java.lang.reflect.Field;
import java.lang.reflect.Method;

public abstract class FieldSerializer
{
  private boolean a = false;
  protected final FieldInfo fieldInfo;
  private final String h;
  private final String i;
  private final String j;
  
  public FieldSerializer(FieldInfo paramFieldInfo)
  {
    this.fieldInfo = paramFieldInfo;
    paramFieldInfo.setAccessible(true);
    this.h = ('"' + paramFieldInfo.getName() + "\":");
    this.i = ('\'' + paramFieldInfo.getName() + "':");
    this.j = (paramFieldInfo.getName() + ":");
    paramFieldInfo = (JSONField)paramFieldInfo.getAnnotation(JSONField.class);
    int m;
    int k;
    if (paramFieldInfo != null)
    {
      paramFieldInfo = paramFieldInfo.serialzeFeatures();
      m = paramFieldInfo.length;
      k = 0;
    }
    for (;;)
    {
      if (k >= m) {
        return;
      }
      if (paramFieldInfo[k] == SerializerFeature.WriteMapNullValue) {
        this.a = true;
      }
      k += 1;
    }
  }
  
  public Field getField()
  {
    return this.fieldInfo.getField();
  }
  
  public Method getMethod()
  {
    return this.fieldInfo.getMethod();
  }
  
  public String getName()
  {
    return this.fieldInfo.getName();
  }
  
  public Object getPropertyValue(Object paramObject)
  {
    return this.fieldInfo.get(paramObject);
  }
  
  public boolean isWriteNull()
  {
    return this.a;
  }
  
  public void writePrefix(JSONSerializer paramJSONSerializer)
  {
    SerializeWriter localSerializeWriter = paramJSONSerializer.getWriter();
    if (paramJSONSerializer.isEnabled(SerializerFeature.QuoteFieldNames))
    {
      if (paramJSONSerializer.isEnabled(SerializerFeature.UseSingleQuotes))
      {
        localSerializeWriter.write(this.i);
        return;
      }
      localSerializeWriter.write(this.h);
      return;
    }
    localSerializeWriter.write(this.j);
  }
  
  public abstract void writeProperty(JSONSerializer paramJSONSerializer, Object paramObject);
}
