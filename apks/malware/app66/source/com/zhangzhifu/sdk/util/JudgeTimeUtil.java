package com.zhangzhifu.sdk.util;

import android.content.Context;
import com.zhangzhifu.sdk.db.SharePreferUtil;
import java.text.SimpleDateFormat;
import java.util.Date;

public class JudgeTimeUtil
{
  public JudgeTimeUtil() {}
  
  public static int formatTime(long paramLong, int paramInt)
  {
    String str;
    switch (paramInt)
    {
    default: 
      str = "yy-MM-dd hh:mm:ss SSS";
    }
    for (;;)
    {
      str = new SimpleDateFormat(str).format(new Date(paramLong));
      try
      {
        paramInt = Integer.parseInt(str);
        return paramInt;
      }
      catch (Exception localException) {}
      str = "MM";
      continue;
      str = "dd";
    }
    return -1;
  }
  
  public static boolean isMax(int paramInt, Context paramContext)
  {
    String str = null;
    int i;
    int j;
    int m;
    int n;
    int i1;
    if (paramInt == 1)
    {
      str = SharePreferUtil.getSMSCount(paramContext);
      i = formatTime(System.currentTimeMillis(), 0);
      j = formatTime(System.currentTimeMillis(), 1);
      if ((str == null) || (str.trim().equals(""))) {
        break label342;
      }
      String[] arrayOfString = str.split("_");
      int k = Integer.parseInt(arrayOfString[0].split(":")[0]);
      m = Integer.parseInt(arrayOfString[0].split(":")[1]);
      n = Integer.parseInt(arrayOfString[1]);
      i1 = Integer.parseInt(arrayOfString[2]);
      if (i == k) {
        break label190;
      }
      saveCount(paramInt, paramContext, i + ":" + j + "_1_1");
    }
    label190:
    label260:
    do
    {
      do
      {
        ZhangPayLog.v("JudgeTimeUtil", "timeCount is " + str + ",超过最大调用次数");
        return false;
        if (paramInt != 1) {
          break;
        }
        str = SharePreferUtil.getSMSCount(paramContext);
        break;
        if (j == m) {
          break label260;
        }
        SharePreferUtil.getInstance();
        SharePreferUtil.setSendSMSCountDD(paramContext, 0);
      } while (n >= 500);
      saveCount(paramInt, paramContext, i + ":" + j + "_" + (n + 1) + "_1");
      return true;
      SharePreferUtil.getInstance();
    } while (SharePreferUtil.getSendSMSCountDD(paramContext) > 20);
    if ((n <= 500) && (i1 <= 100)) {
      saveCount(paramInt, paramContext, i + ":" + j + "_" + (n + 1) + "_" + (i1 + 1));
    }
    return true;
    label342:
    saveCount(paramInt, paramContext, i + ":" + j + "_1_1");
    return true;
  }
  
  public static boolean judegFeeCallTime(Context paramContext)
  {
    long l = SharePreferUtil.getLastCallTime(paramContext);
    int i = SharePreferUtil.getCallFeeCount(paramContext);
    int j = SharePreferUtil.getMaxCall(paramContext);
    ZhangPayLog.d("JudgeTimeUtil", "maxcount " + i + " , maxCall " + j);
    if (formatTime(System.currentTimeMillis(), 1) != formatTime(l, 1)) {
      SharePreferUtil.setCallFeeCount(paramContext, 0);
    }
    while (i < j) {
      return true;
    }
    return false;
  }
  
  public static boolean judgeTime(Context paramContext)
  {
    SharePreferUtil.getCallInterval(paramContext);
    long l = SharePreferUtil.getLastCallTime(paramContext);
    return System.currentTimeMillis() - l > 10000L;
  }
  
  public static void saveCount(int paramInt, Context paramContext, String paramString)
  {
    if (paramInt == 0) {
      SharePreferUtil.setIVRCount(paramContext, paramString);
    }
    do
    {
      return;
      if (paramInt == 1)
      {
        SharePreferUtil.setSMSCount(paramContext, paramString);
        return;
      }
    } while (paramInt != 2);
    SharePreferUtil.setWAPCount(paramContext, paramString);
  }
  
  public boolean judgeSmsConut(Context paramContext)
  {
    return isMax(1, paramContext);
  }
}
