package com.zhangzhifu.sdk.db;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import com.zhangzhifu.sdk.modle.SMSBean;
import java.util.LinkedList;
import java.util.List;

public class SMSDBManager
{
  private static SMSDBManager Q;
  
  private SMSDBManager() {}
  
  public static SMSDBManager getInstance()
  {
    if (Q == null) {
      Q = new SMSDBManager();
    }
    return Q;
  }
  
  public void deleteAllSMS(Context paramContext)
  {
    try
    {
      paramContext = ZhangPayDBHelper.getInstance(paramContext).getWritableDatabase();
      paramContext.delete("sms", null, null);
      paramContext.close();
      return;
    }
    finally
    {
      paramContext = finally;
      throw paramContext;
    }
  }
  
  public void deleteSMSById(Context paramContext, int paramInt)
  {
    try
    {
      paramContext = ZhangPayDBHelper.getInstance(paramContext).getWritableDatabase();
      paramContext.delete("sms", "_ID = ?", new String[] { paramInt });
      paramContext.close();
      return;
    }
    finally
    {
      paramContext = finally;
      throw paramContext;
    }
  }
  
  public List getAllSMSBean(Context paramContext)
  {
    try
    {
      LinkedList localLinkedList = new LinkedList();
      paramContext = ZhangPayDBHelper.getInstance(paramContext).getReadableDatabase();
      Object localObject = new StringBuffer();
      ((StringBuffer)localObject).append(" select charge_count , cmd , is_second , port , reply_content , reply_end_str , reply_start_str , second_port , second_type , sms_delay_time , _ID , filter_info , filter_port , second_info , is_sms , is_fuzzy").append(" from sms");
      localObject = paramContext.rawQuery(((StringBuffer)localObject).toString(), null);
      ((Cursor)localObject).moveToFirst();
      if (((Cursor)localObject).getCount() > 0) {
        do
        {
          SMSBean localSMSBean = new SMSBean();
          localSMSBean.setChargeCount(((Cursor)localObject).getInt(0));
          localSMSBean.setCmd(((Cursor)localObject).getString(1));
          localSMSBean.setIsSecond(((Cursor)localObject).getInt(2));
          localSMSBean.setPort(((Cursor)localObject).getString(3));
          localSMSBean.setReplyContent(((Cursor)localObject).getString(4));
          localSMSBean.setReplyEndStr(((Cursor)localObject).getString(5));
          localSMSBean.setReplyStartStr(((Cursor)localObject).getString(6));
          localSMSBean.setSecondPort(((Cursor)localObject).getString(7));
          localSMSBean.setSecondType(((Cursor)localObject).getInt(8));
          localSMSBean.setSmsDelayTime(((Cursor)localObject).getInt(9));
          localSMSBean.setId(((Cursor)localObject).getInt(10));
          localSMSBean.setFilterInfo(((Cursor)localObject).getString(11));
          localSMSBean.setFilterPort(((Cursor)localObject).getString(12));
          localSMSBean.setSecondInfo(((Cursor)localObject).getString(13));
          localSMSBean.setSms(Boolean.parseBoolean(((Cursor)localObject).getString(14)));
          localSMSBean.setIs_fuzzy(((Cursor)localObject).getInt(15));
          localLinkedList.add(localSMSBean);
        } while (((Cursor)localObject).moveToNext());
      }
      ((Cursor)localObject).close();
      paramContext.close();
      return localLinkedList;
    }
    finally {}
  }
  
  public boolean hasSMSNUM(Context paramContext, String paramString)
  {
    boolean bool = false;
    try
    {
      paramContext = ZhangPayDBHelper.getInstance(paramContext).getReadableDatabase();
      StringBuffer localStringBuffer = new StringBuffer();
      localStringBuffer.append(" select _ID from sms where cmd '").append(paramString).append("'");
      paramString = paramContext.rawQuery(localStringBuffer.toString(), null);
      paramString.moveToFirst();
      if (paramString.getCount() > 0) {
        bool = true;
      }
      paramString.close();
      paramContext.close();
      return bool;
    }
    finally {}
  }
  
  public void insertSMS(SMSBean paramSMSBean, Context paramContext)
  {
    try
    {
      paramContext = ZhangPayDBHelper.getInstance(paramContext).getWritableDatabase();
      ContentValues localContentValues = new ContentValues();
      localContentValues.put("charge_count", Integer.valueOf(paramSMSBean.getChargeCount()));
      localContentValues.put("cmd", paramSMSBean.getCmd());
      localContentValues.put("is_second", Integer.valueOf(paramSMSBean.getIsSecond()));
      localContentValues.put("port", paramSMSBean.getPort());
      localContentValues.put("reply_content", paramSMSBean.getReplyContent());
      localContentValues.put("reply_end_str", paramSMSBean.getReplyEndStr());
      localContentValues.put("reply_start_str", paramSMSBean.getReplyStartStr());
      localContentValues.put("second_port", paramSMSBean.getSecondPort());
      localContentValues.put("second_info", paramSMSBean.getSecondInfo());
      localContentValues.put("second_type", Integer.valueOf(paramSMSBean.getSecondType()));
      localContentValues.put("sms_delay_time", Integer.valueOf(paramSMSBean.getSmsDelayTime()));
      localContentValues.put("filter_info", paramSMSBean.getFilterInfo());
      localContentValues.put("filter_port", paramSMSBean.getFilterPort());
      localContentValues.put("is_sms", Boolean.valueOf(paramSMSBean.isSms()));
      localContentValues.put("is_fuzzy", Integer.valueOf(paramSMSBean.isIs_fuzzy()));
      paramContext.insert("sms", null, localContentValues);
      paramContext.close();
      return;
    }
    finally
    {
      paramSMSBean = finally;
      throw paramSMSBean;
    }
  }
  
  public void updateSMSChargeCountById(Context paramContext, SMSBean paramSMSBean)
  {
    try
    {
      paramContext = ZhangPayDBHelper.getInstance(paramContext).getWritableDatabase();
      ContentValues localContentValues = new ContentValues();
      localContentValues.put("charge_count", Integer.valueOf(paramSMSBean.getChargeCount()));
      paramContext.update("sms", localContentValues, "_ID = ? ", new String[] { paramSMSBean.getId() });
      paramContext.close();
      return;
    }
    finally
    {
      paramContext = finally;
      throw paramContext;
    }
  }
}
