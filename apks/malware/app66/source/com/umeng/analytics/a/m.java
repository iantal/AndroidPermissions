package com.umeng.analytics.a;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.text.TextUtils;
import com.umeng.analytics.f;
import com.umeng.analytics.j;
import com.umeng.common.Log;
import com.umeng.common.b;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import org.json.JSONArray;
import org.json.JSONObject;

public class m
  extends l
  implements g
{
  private static final String k = "duration";
  private static final String l = "activities";
  private static final String m = "terminate_time";
  public o a;
  public p b;
  public long c = 0L;
  private ArrayList d = new ArrayList();
  
  public m() {}
  
  public m(String paramString)
  {
    this.e = paramString;
  }
  
  public static SharedPreferences.Editor a(SharedPreferences paramSharedPreferences, String paramString, long paramLong1, long paramLong2)
  {
    paramLong1 = paramLong2 - paramLong1;
    long l1 = paramSharedPreferences.getLong("duration", 0L);
    SharedPreferences.Editor localEditor = paramSharedPreferences.edit();
    if (com.umeng.analytics.g.j)
    {
      String str = paramSharedPreferences.getString("activities", "");
      paramSharedPreferences = str;
      if (!"".equals(str)) {
        paramSharedPreferences = str + ";";
      }
      paramSharedPreferences = paramSharedPreferences + String.format("[\"%s\",%d]", new Object[] { paramString, Long.valueOf(paramLong1 / 1000L) });
      localEditor.remove("activities");
      localEditor.putString("activities", paramSharedPreferences);
    }
    localEditor.putLong("duration", paramLong1 + l1);
    localEditor.putLong("terminate_time", paramLong2);
    localEditor.commit();
    return localEditor;
  }
  
  public static SharedPreferences.Editor a(SharedPreferences paramSharedPreferences, ArrayList paramArrayList, long paramLong1, long paramLong2)
  {
    long l1 = paramSharedPreferences.getLong("duration", 0L);
    SharedPreferences.Editor localEditor = paramSharedPreferences.edit();
    if (paramArrayList.size() > 0)
    {
      Object localObject = paramSharedPreferences.getString("activities", "");
      paramSharedPreferences = new StringBuilder();
      if (!TextUtils.isEmpty((CharSequence)localObject))
      {
        paramSharedPreferences.append((String)localObject);
        paramSharedPreferences.append(";");
      }
      paramArrayList = paramArrayList.iterator();
      while (paramArrayList.hasNext())
      {
        localObject = (f)paramArrayList.next();
        paramSharedPreferences.append(String.format("[\"%s\",%d]", new Object[] { ((f)localObject).a, Long.valueOf(((f)localObject).b / 1000L) }));
        paramSharedPreferences.append(";");
      }
      paramSharedPreferences.deleteCharAt(paramSharedPreferences.length() - 1);
      localEditor.remove("activities");
      localEditor.putString("activities", paramSharedPreferences.toString());
    }
    localEditor.putLong("duration", paramLong2 - paramLong1 + l1);
    localEditor.putLong("terminate_time", paramLong2);
    localEditor.commit();
    return localEditor;
  }
  
  public static m a(Context paramContext)
  {
    SharedPreferences localSharedPreferences = j.e(paramContext);
    Object localObject = localSharedPreferences.getString("session_id", null);
    if (localObject == null) {
      return null;
    }
    localObject = new m((String)localObject);
    o localO = o.b(paramContext);
    if ((localO != null) && (localO.a())) {
      ((m)localObject).a = localO;
    }
    paramContext = p.a(paramContext);
    if ((paramContext != null) && (paramContext.a())) {
      ((m)localObject).b = paramContext;
    }
    ((m)localObject).d = c(localSharedPreferences);
    ((m)localObject).c = d(localSharedPreferences);
    paramContext = b(localSharedPreferences);
    if ((paramContext != null) && (paramContext.length == 2))
    {
      ((m)localObject).g = paramContext[0];
      ((m)localObject).h = paramContext[1];
    }
    a(localSharedPreferences);
    return localObject;
  }
  
  private static void a(SharedPreferences paramSharedPreferences)
  {
    paramSharedPreferences = paramSharedPreferences.edit();
    paramSharedPreferences.putLong("duration", 0L);
    paramSharedPreferences.putString("activities", "");
    paramSharedPreferences.commit();
  }
  
  private static String[] b(SharedPreferences paramSharedPreferences)
  {
    long l1 = paramSharedPreferences.getLong("terminate_time", 0L);
    if (l1 <= 0L) {
      return null;
    }
    return b.a(new Date(l1)).split(" ");
  }
  
  private static ArrayList c(SharedPreferences paramSharedPreferences)
  {
    Object localObject = paramSharedPreferences.getString("activities", "");
    if (!"".equals(localObject))
    {
      paramSharedPreferences = new ArrayList();
      try
      {
        localObject = ((String)localObject).split(";");
        int i = 0;
        while (i < localObject.length)
        {
          paramSharedPreferences.add(new k(new JSONArray(localObject[i])));
          i += 1;
        }
        return null;
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
        if (paramSharedPreferences.size() > 0) {
          return paramSharedPreferences;
        }
      }
    }
  }
  
  private void c(JSONObject paramJSONObject)
  {
    if (this.b != null) {
      this.b.b(paramJSONObject);
    }
  }
  
  private static long d(SharedPreferences paramSharedPreferences)
  {
    return paramSharedPreferences.getLong("duration", 0L) / 1000L;
  }
  
  private void d(JSONObject paramJSONObject)
  {
    if (this.a != null) {
      this.a.b(paramJSONObject);
    }
  }
  
  private void e(JSONObject paramJSONObject)
  {
    o localO = new o();
    localO.a(paramJSONObject);
    if (localO.a()) {
      this.a = localO;
    }
  }
  
  private void f(JSONObject paramJSONObject)
  {
    p localP = new p();
    localP.a(paramJSONObject);
    if (localP.a()) {
      this.b = localP;
    }
  }
  
  private void g(JSONObject paramJSONObject)
  {
    if (paramJSONObject.has("activities"))
    {
      paramJSONObject = paramJSONObject.getJSONArray("activities");
      int i = 0;
      while (i < paramJSONObject.length())
      {
        k localK = new k(paramJSONObject.getJSONArray(i));
        this.d.add(localK);
        i += 1;
      }
    }
  }
  
  private void h(JSONObject paramJSONObject)
  {
    if (this.d.size() == 0) {
      return;
    }
    JSONArray localJSONArray1 = new JSONArray();
    Iterator localIterator = this.d.iterator();
    while (localIterator.hasNext())
    {
      k localK = (k)localIterator.next();
      JSONArray localJSONArray2 = new JSONArray();
      localJSONArray2.put(localK.a);
      localJSONArray2.put(localK.b);
      localJSONArray1.put(localJSONArray2);
    }
    paramJSONObject.put("activities", localJSONArray1);
  }
  
  public void a(JSONObject paramJSONObject)
  {
    try
    {
      super.a(paramJSONObject);
      this.c = paramJSONObject.getLong("duration");
      f(paramJSONObject);
      e(paramJSONObject);
      g(paramJSONObject);
      return;
    }
    catch (Exception paramJSONObject)
    {
      paramJSONObject.printStackTrace();
    }
  }
  
  public boolean a()
  {
    if ((this.a == null) && (com.umeng.analytics.g.i)) {
      Log.c("MobclickAgent", "missing location info in Terminate");
    }
    if (this.b == null) {
      Log.e("MobclickAgent", "missing receive and transport Traffic in Terminate ");
    }
    if (this.c <= 0L)
    {
      Log.b("MobclickAgent", "missing Duration info in Terminate");
      return false;
    }
    if ((this.d == null) || (this.d.size() == 0)) {
      Log.e("MobclickAgent", "missing Activities info in Terminate");
    }
    return super.a();
  }
  
  public void b(JSONObject paramJSONObject)
  {
    super.b(paramJSONObject);
    if (this.c > 0L) {
      paramJSONObject.put("duration", this.c);
    }
    c(paramJSONObject);
    d(paramJSONObject);
    h(paramJSONObject);
  }
}
