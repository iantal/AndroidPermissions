package com.umeng.analytics;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.text.TextUtils;
import com.umeng.analytics.a.m;
import com.umeng.analytics.a.o;
import com.umeng.common.Log;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.Stack;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

class b
  extends d
{
  public ExecutorService a = Executors.newSingleThreadExecutor();
  String b = "";
  String c = "";
  private String m;
  private String n;
  private final int o = 0;
  private final int p = 1;
  private final String q = "start_millis";
  private final String r = "end_millis";
  private final String s = "last_fetch_location_time";
  private final long t = 10000L;
  private final int u = 128;
  private final int v = 256;
  private final Stack w = new Stack();
  private final ArrayList x = new ArrayList();
  
  b() {}
  
  private String a(Context paramContext, long paramLong)
  {
    if (this.l == null) {}
    for (String str = com.umeng.common.b.q(paramContext);; str = this.l)
    {
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append(paramLong).append(str).append(com.umeng.common.util.h.b(com.umeng.common.b.g(paramContext)));
      return com.umeng.common.util.h.a(localStringBuilder.toString());
    }
  }
  
  private void a(Context paramContext, SharedPreferences paramSharedPreferences)
  {
    long l = System.currentTimeMillis();
    if ((!g.i) || (l - paramSharedPreferences.getLong("last_fetch_location_time", 0L) < 10000L)) {}
    do
    {
      return;
      paramContext = o.a(paramContext, paramSharedPreferences);
    } while (paramContext == null);
    paramContext.putLong("last_fetch_location_time", l);
    paramContext.commit();
  }
  
  private boolean a(SharedPreferences paramSharedPreferences)
  {
    long l = paramSharedPreferences.getLong("end_millis", -1L);
    return System.currentTimeMillis() - l > g.d;
  }
  
  private String b(Context paramContext, SharedPreferences paramSharedPreferences)
  {
    long l = System.currentTimeMillis();
    String str = a(paramContext, l);
    com.umeng.analytics.a.h localH = new com.umeng.analytics.a.h(paramContext, str);
    m localM = m.a(paramContext);
    this.d.a(localH);
    this.d.a(localM);
    paramSharedPreferences = paramSharedPreferences.edit();
    paramSharedPreferences.putString("session_id", str);
    paramSharedPreferences.putLong("start_millis", l);
    paramSharedPreferences.putLong("end_millis", -1L);
    paramSharedPreferences.commit();
    getClass();
    a(paramContext, 4);
    return str;
  }
  
  private String c(Context paramContext, SharedPreferences paramSharedPreferences)
  {
    long l = System.currentTimeMillis();
    paramContext = paramSharedPreferences.edit();
    paramContext.putLong("start_millis", Long.valueOf(l).longValue());
    paramContext.putLong("end_millis", -1L);
    paramContext.commit();
    return paramSharedPreferences.getString("session_id", null);
  }
  
  private void d(Context paramContext, String paramString)
  {
    try
    {
      if (g.m)
      {
        this.d.a(paramString);
        return;
      }
      paramString = k.a(paramContext, paramString);
      paramString.a(Long.valueOf(System.currentTimeMillis()));
      paramString.a(paramContext);
      return;
    }
    catch (Exception paramContext)
    {
      Log.a("MobclickAgent", "exception in save event begin info");
    }
  }
  
  private int e(Context paramContext, String paramString)
  {
    try
    {
      if (g.m) {}
      for (long l = this.d.b(paramString); l > 0L; l = k.a(paramContext, paramString).a().longValue()) {
        return (int)(System.currentTimeMillis() - l);
      }
      return -1;
    }
    catch (Exception paramContext)
    {
      Log.a("MobclickAgent", "exception in get event duration", paramContext);
    }
  }
  
  private void h(Context paramContext)
  {
    if (paramContext == null)
    {
      Log.b("MobclickAgent", "unexpected null context in onResume");
      return;
    }
    this.m = paramContext.getClass().getName();
  }
  
  private void i(Context paramContext)
  {
    for (;;)
    {
      try
      {
        SharedPreferences localSharedPreferences = j.e(paramContext);
        if (localSharedPreferences == null) {
          return;
        }
        if (a(localSharedPreferences))
        {
          this.n = b(paramContext, localSharedPreferences);
          Log.a("MobclickAgent", "Start new session: " + this.n);
          continue;
        }
        this.n = c(paramContext, localSharedPreferences);
      }
      finally {}
      Log.a("MobclickAgent", "Extend current session: " + this.n);
    }
  }
  
  private void j(Context paramContext)
  {
    SharedPreferences localSharedPreferences;
    long l1;
    try
    {
      localSharedPreferences = j.e(paramContext);
      if (localSharedPreferences == null) {}
      for (;;)
      {
        return;
        l1 = localSharedPreferences.getLong("start_millis", -1L);
        if (l1 != -1L) {
          break;
        }
        Log.b("MobclickAgent", "onEndSession called before onStartSession");
        a(paramContext, localSharedPreferences);
        a(paramContext, 5);
      }
      l2 = System.currentTimeMillis();
    }
    finally {}
    long l2;
    SharedPreferences.Editor localEditor;
    if (g.j) {
      localEditor = m.a(localSharedPreferences, this.m, l1, l2);
    }
    for (;;)
    {
      localEditor.putLong("start_millis", -1L);
      localEditor.putLong("end_millis", l2);
      localEditor.commit();
      break;
      localEditor = m.a(localSharedPreferences, this.x, l1, l2);
      this.x.clear();
    }
  }
  
  void a(Context paramContext)
  {
    if (paramContext == null) {}
    try
    {
      Log.b("MobclickAgent", "unexpected null context in onPause");
      return;
    }
    catch (Exception paramContext)
    {
      Log.b("MobclickAgent", "Exception occurred in Mobclick.onRause(). ", paramContext);
      return;
    }
    if (!paramContext.getClass().getName().equals(this.m))
    {
      Log.b("MobclickAgent", "onPause() called without context from corresponding onResume()");
      return;
    }
    this.a.execute(new b.a(this, paramContext, 0));
  }
  
  void a(Context paramContext, String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return;
    }
    if (paramContext == null)
    {
      Log.b("MobclickAgent", "unexpected null context in reportError");
      return;
    }
    this.d.a(new com.umeng.analytics.a.d(paramString));
    e(paramContext);
  }
  
  void a(Context paramContext, String paramString1, String paramString2)
  {
    if ((paramContext == null) || (!a(paramString1, 128)) || (!a(paramString2, 256)))
    {
      Log.b("MobclickAgent", "invalid params in onEventBegin");
      return;
    }
    d(paramContext, "_tl" + paramString1 + paramString2);
  }
  
  void a(Context paramContext, String paramString1, String paramString2, long paramLong, int paramInt)
  {
    if (paramContext != null) {}
    try
    {
      if ((!a(paramString1, 128)) || (paramInt <= 0))
      {
        Log.b("MobclickAgent", "invalid params in onEvent");
        return;
      }
      if (this.n == null)
      {
        Log.e("MobclickAgent", "can't call onEvent before session is initialized");
        return;
      }
    }
    catch (Exception paramContext)
    {
      Log.b("MobclickAgent", "Exception occurred in Mobclick.onEvent(). ", paramContext);
      return;
    }
    if ((paramString2 != null) && (!a(paramString2, 256)))
    {
      Log.b("MobclickAgent", "invalid label in onEvent");
      return;
    }
    this.d.a(this.n, paramString1, paramString2, paramLong, paramInt);
    e(paramContext);
  }
  
  void a(Context paramContext, String paramString, HashMap paramHashMap, long paramLong)
  {
    if (paramContext != null) {}
    try
    {
      if (TextUtils.isEmpty(paramString))
      {
        Log.b("MobclickAgent", "invalid params in onKVEventEnd");
        return;
      }
      if (!a(paramHashMap)) {
        return;
      }
      if (this.n == null)
      {
        Log.e("MobclickAgent", "can't call onEvent before session is initialized");
        return;
      }
    }
    catch (Exception paramContext)
    {
      Log.b("MobclickAgent", "Exception occurred in Mobclick.onEvent(). ", paramContext);
      return;
    }
    this.d.a(this.n, paramString, paramHashMap, paramLong);
    e(paramContext);
  }
  
  void a(Context paramContext, String paramString1, HashMap paramHashMap, String paramString2)
  {
    if ((paramContext == null) || (TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      Log.b("MobclickAgent", "invalid params in onKVEventBegin");
    }
    while (!a(paramHashMap)) {
      return;
    }
    try
    {
      paramContext = paramString1 + paramString2;
      this.d.a(paramContext, paramHashMap);
      this.d.a(paramContext);
      return;
    }
    catch (Exception paramContext)
    {
      Log.e("MobclickAgent", "exception in save k-v event begin inof", paramContext);
    }
  }
  
  void a(Context paramContext, Throwable paramThrowable)
  {
    if ((paramContext == null) || (paramThrowable == null)) {
      return;
    }
    this.d.a(new com.umeng.analytics.a.d(paramThrowable));
    e(paramContext);
  }
  
  void a(String paramString)
  {
    try
    {
      this.w.push(new f(paramString, System.currentTimeMillis()));
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  void a(String paramString1, String paramString2)
  {
    this.e.E = paramString1;
    this.e.F = paramString2;
  }
  
  boolean a(String paramString, int paramInt)
  {
    if (paramString == null) {}
    int i;
    do
    {
      return false;
      i = paramString.getBytes().length;
    } while ((i == 0) || (i > paramInt));
    return true;
  }
  
  boolean a(Map paramMap)
  {
    if ((paramMap == null) || (paramMap.isEmpty()))
    {
      Log.b("MobclickAgent", "map is null or empty in onEvent");
      return false;
    }
    paramMap = paramMap.entrySet().iterator();
    while (paramMap.hasNext())
    {
      Map.Entry localEntry = (Map.Entry)paramMap.next();
      if ((!a((String)localEntry.getKey(), 128)) || (!a((String)localEntry.getValue(), 256)))
      {
        Log.b("MobclickAgent", String.format("invalid key-<%s> or value-<%s> ", new Object[] { localEntry.getKey(), localEntry.getValue() }));
        return false;
      }
    }
    return true;
  }
  
  void b(Context paramContext)
  {
    try
    {
      h(paramContext);
      ExecutorService localExecutorService = this.a;
      getClass();
      localExecutorService.execute(new b.a(this, paramContext, 1));
      return;
    }
    catch (Exception paramContext)
    {
      Log.b("MobclickAgent", "Exception occurred in Mobclick.onResume(). ", paramContext);
    }
  }
  
  void b(Context paramContext, String paramString)
  {
    if ((paramContext == null) || (!a(paramString, 128)))
    {
      Log.b("MobclickAgent", "invalid params in onEventBegin");
      return;
    }
    d(paramContext, "_t" + paramString);
  }
  
  void b(Context paramContext, String paramString1, String paramString2)
  {
    if ((paramContext == null) || (TextUtils.isEmpty(paramString2)))
    {
      Log.b("MobclickAgent", "invalid params in onEventEnd");
      return;
    }
    int i = e(paramContext, "_tl" + paramString1 + paramString2);
    if (i < 0)
    {
      Log.b("MobclickAgent", "event duration less than 0 in onEvnetEnd");
      return;
    }
    a(paramContext, paramString1, paramString2, i, 1);
  }
  
  public void b(Context paramContext, Throwable paramThrowable)
  {
    try
    {
      this.d.a(new com.umeng.analytics.a.d(paramThrowable));
      if (!this.w.isEmpty()) {
        b(((f)this.w.peek()).a);
      }
      j(paramContext);
      return;
    }
    catch (Exception paramContext)
    {
      Log.a("MobclickAgent", "Exception in onAppCrash", paramContext);
    }
  }
  
  void b(String paramString)
  {
    try
    {
      if ((!this.w.isEmpty()) && (((f)this.w.peek()).a.equals(paramString)))
      {
        paramString = (f)this.w.pop();
        paramString.b = (System.currentTimeMillis() - paramString.b);
        this.x.add(paramString);
        return;
      }
      Log.e("MobclickAgent", "onPageEnd called without 'PageName' from corresponding onPageStart");
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  void c(Context paramContext)
  {
    try
    {
      getClass();
      a(paramContext, 2);
      return;
    }
    catch (Exception paramContext)
    {
      Log.b("MobclickAgent", "Exception occurred in Mobclick.flush(). ", paramContext);
    }
  }
  
  void c(Context paramContext, String paramString)
  {
    if ((paramContext == null) || (TextUtils.isEmpty(paramString)))
    {
      Log.a("MobclickAgent", "input Context is null or event_id is empty");
      return;
    }
    int i = e(paramContext, "_t" + paramString);
    if (i < 0)
    {
      Log.b("MobclickAgent", "event duration less than 0 in onEventEnd");
      return;
    }
    a(paramContext, paramString, null, i, 1);
  }
  
  void c(Context paramContext, String paramString1, String paramString2)
  {
    if ((paramContext == null) || (TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2)))
    {
      Log.b("MobclickAgent", "invalid params in onKVEventEnd");
      return;
    }
    paramString2 = paramString1 + paramString2;
    int i = e(paramContext, paramString2);
    if (i < 0)
    {
      Log.b("MobclickAgent", "event duration less than 0 in onEvnetEnd");
      return;
    }
    a(paramContext, paramString1, this.d.c(paramString2), i);
  }
  
  void d(Context paramContext)
  {
    try
    {
      if (!this.w.isEmpty()) {
        b(((f)this.w.peek()).a);
      }
      j(paramContext);
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
}
