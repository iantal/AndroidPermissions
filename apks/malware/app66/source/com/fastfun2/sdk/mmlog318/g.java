package com.fastfun2.sdk.mmlog318;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.os.Build.VERSION;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.Display;
import android.view.WindowManager;
import java.io.BufferedReader;
import java.io.FileReader;
import java.security.MessageDigest;
import java.util.Locale;
import java.util.Random;

public final class g
{
  public g() {}
  
  public static String a()
  {
    return a(Build.MODEL);
  }
  
  public static String a(Context paramContext)
  {
    try
    {
      paramContext = ((TelephonyManager)paramContext.getSystemService("phone")).getDeviceId();
      return a(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = "";
      }
    }
  }
  
  public static String a(Context paramContext, String paramString)
  {
    try
    {
      int i = new Random().nextInt(10);
      paramContext = String.valueOf(b(System.currentTimeMillis() + paramString + a(paramContext) + g(paramContext) + i).toCharArray(), 8, 16);
      return c(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = "";
      }
    }
  }
  
  protected static String a(String paramString)
  {
    if (paramString == null) {
      return "";
    }
    String str = paramString;
    if (paramString.length() > 2000) {
      str = paramString.substring(0, 1999);
    }
    return str.replace("\\", "").replace("|", "");
  }
  
  protected static boolean a(String paramString, int paramInt)
  {
    return (paramString != null) && (paramString.length() > paramInt);
  }
  
  public static String b()
  {
    return a(Build.MANUFACTURER);
  }
  
  public static String b(Context paramContext)
  {
    try
    {
      String str = a(paramContext);
      if ((str != null) && (str.length() > 6)) {
        return String.valueOf(b(str).toCharArray(), 7, 18);
      }
      str = g(paramContext);
      if ((str != null) && (str.length() >= 9)) {
        return String.valueOf(b(str).toCharArray(), 7, 18);
      }
      paramContext = c(paramContext);
      if ((paramContext != null) && (paramContext.length() != 0)) {
        return String.valueOf(b(paramContext).toCharArray(), 7, 18);
      }
      paramContext = String.valueOf(b(a(Build.MODEL)).toCharArray(), 7, 18);
      return paramContext;
    }
    catch (Exception paramContext) {}
    return "";
  }
  
  private static String b(String paramString)
  {
    int j = 0;
    for (;;)
    {
      int i;
      try
      {
        Object localObject = MessageDigest.getInstance("MD5");
        paramString = paramString.toCharArray();
        byte[] arrayOfByte = new byte[paramString.length];
        i = 0;
        if (i >= paramString.length)
        {
          paramString = ((MessageDigest)localObject).digest(arrayOfByte);
          localObject = new StringBuffer();
          i = j;
          if (i >= paramString.length)
          {
            paramString = ((StringBuffer)localObject).toString();
            return paramString;
          }
          j = paramString[i] & 0xFF;
          if (j < 16) {
            ((StringBuffer)localObject).append("0");
          }
          ((StringBuffer)localObject).append(Integer.toHexString(j));
          i += 1;
          continue;
        }
        arrayOfByte[i] = ((byte)paramString[i]);
      }
      catch (Exception paramString)
      {
        paramString.printStackTrace();
        return "";
      }
      i += 1;
    }
  }
  
  private static boolean b(Context paramContext, String paramString)
  {
    boolean bool = false;
    try
    {
      int i = paramContext.getPackageManager().checkPermission(paramString, paramContext.getPackageName());
      if (i == 0) {
        bool = true;
      }
      return bool;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return false;
  }
  
  public static String c()
  {
    return a("android " + Build.VERSION.RELEASE);
  }
  
  public static String c(Context paramContext)
  {
    try
    {
      paramContext = (TelephonyManager)paramContext.getSystemService("phone");
      if (paramContext == null) {
        break label60;
      }
      paramContext = paramContext.getSubscriberId();
      if (paramContext == null) {
        break label54;
      }
      paramContext = paramContext.trim();
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = "";
        Log.i("MobileUtils", "can't not read imsi");
        continue;
        label54:
        paramContext = "";
        continue;
        label60:
        paramContext = "";
      }
    }
    e.a("MobileUtils", paramContext);
    return c(paramContext);
  }
  
  private static String c(String paramString)
  {
    String str = paramString;
    if (TextUtils.isEmpty(paramString)) {
      str = "";
    }
    return str;
  }
  
  public static int d(Context paramContext)
  {
    try
    {
      DisplayMetrics localDisplayMetrics = new DisplayMetrics();
      ((WindowManager)paramContext.getSystemService("window")).getDefaultDisplay().getMetrics(localDisplayMetrics);
      int i = localDisplayMetrics.widthPixels;
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  public static String d()
  {
    try
    {
      String str1 = Locale.getDefault().getCountry();
      return c(str1);
    }
    catch (Exception localException)
    {
      for (;;)
      {
        String str2 = "";
      }
    }
  }
  
  public static int e(Context paramContext)
  {
    try
    {
      DisplayMetrics localDisplayMetrics = new DisplayMetrics();
      ((WindowManager)paramContext.getSystemService("window")).getDefaultDisplay().getMetrics(localDisplayMetrics);
      int i = localDisplayMetrics.heightPixels;
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  public static String e()
  {
    try
    {
      String str1 = Locale.getDefault().getLanguage();
      return c(str1);
    }
    catch (Exception localException)
    {
      for (;;)
      {
        String str2 = "";
      }
    }
  }
  
  public static int f(Context paramContext)
  {
    try
    {
      DisplayMetrics localDisplayMetrics = new DisplayMetrics();
      ((WindowManager)paramContext.getSystemService("window")).getDefaultDisplay().getMetrics(localDisplayMetrics);
      int i = localDisplayMetrics.densityDpi;
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  /* Error */
  public static String f()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_2
    //   2: aconst_null
    //   3: astore_1
    //   4: ldc 38
    //   6: astore_3
    //   7: new 235	java/lang/ProcessBuilder
    //   10: dup
    //   11: iconst_2
    //   12: anewarray 56	java/lang/String
    //   15: dup
    //   16: iconst_0
    //   17: ldc -19
    //   19: aastore
    //   20: dup
    //   21: iconst_1
    //   22: ldc -17
    //   24: aastore
    //   25: invokespecial 242	java/lang/ProcessBuilder:<init>	([Ljava/lang/String;)V
    //   28: invokevirtual 246	java/lang/ProcessBuilder:start	()Ljava/lang/Process;
    //   31: invokevirtual 252	java/lang/Process:getInputStream	()Ljava/io/InputStream;
    //   34: astore 4
    //   36: aload 4
    //   38: astore_1
    //   39: aload 4
    //   41: astore_2
    //   42: bipush 24
    //   44: newarray byte
    //   46: astore 5
    //   48: aload 4
    //   50: astore_1
    //   51: aload 4
    //   53: astore_2
    //   54: aload 4
    //   56: aload 5
    //   58: invokevirtual 258	java/io/InputStream:read	([B)I
    //   61: istore_0
    //   62: iload_0
    //   63: iconst_m1
    //   64: if_icmpne +13 -> 77
    //   67: aload 4
    //   69: invokevirtual 261	java/io/InputStream:close	()V
    //   72: aload_3
    //   73: invokevirtual 170	java/lang/String:trim	()Ljava/lang/String;
    //   76: areturn
    //   77: aload 4
    //   79: astore_1
    //   80: aload 4
    //   82: astore_2
    //   83: new 48	java/lang/StringBuilder
    //   86: dup
    //   87: aload_3
    //   88: invokestatic 264	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   91: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   94: new 56	java/lang/String
    //   97: dup
    //   98: aload 5
    //   100: invokespecial 267	java/lang/String:<init>	([B)V
    //   103: invokevirtual 67	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   106: invokevirtual 78	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   109: astore_3
    //   110: goto -62 -> 48
    //   113: astore_3
    //   114: aload_1
    //   115: astore_2
    //   116: aload_3
    //   117: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   120: ldc 38
    //   122: astore_3
    //   123: aload_1
    //   124: invokevirtual 261	java/io/InputStream:close	()V
    //   127: goto -55 -> 72
    //   130: astore_1
    //   131: aload_1
    //   132: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   135: goto -63 -> 72
    //   138: astore_1
    //   139: aload_2
    //   140: invokevirtual 261	java/io/InputStream:close	()V
    //   143: aload_1
    //   144: athrow
    //   145: astore_2
    //   146: aload_2
    //   147: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   150: goto -7 -> 143
    //   153: astore_1
    //   154: aload_1
    //   155: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   158: goto -86 -> 72
    // Local variable table:
    //   start	length	slot	name	signature
    //   61	4	0	i	int
    //   3	121	1	localObject1	Object
    //   130	2	1	localException1	Exception
    //   138	6	1	localObject2	Object
    //   153	2	1	localException2	Exception
    //   1	139	2	localObject3	Object
    //   145	2	2	localException3	Exception
    //   6	104	3	str1	String
    //   113	4	3	localException4	Exception
    //   122	1	3	str2	String
    //   34	47	4	localInputStream	java.io.InputStream
    //   46	53	5	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   7	36	113	java/lang/Exception
    //   42	48	113	java/lang/Exception
    //   54	62	113	java/lang/Exception
    //   83	110	113	java/lang/Exception
    //   123	127	130	java/lang/Exception
    //   7	36	138	finally
    //   42	48	138	finally
    //   54	62	138	finally
    //   83	110	138	finally
    //   116	120	138	finally
    //   139	143	145	java/lang/Exception
    //   67	72	153	java/lang/Exception
  }
  
  public static String g()
  {
    try
    {
      FileReader localFileReader3 = new FileReader("/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq");
      FileReader localFileReader1 = localFileReader3;
      try
      {
        String str;
        FileReader localFileReader2;
        Object localObject1;
        localObject1.close();
        throw localObject2;
      }
      catch (Exception localException3)
      {
        for (;;)
        {
          localException3.printStackTrace();
        }
      }
    }
    catch (Exception localException4)
    {
      try
      {
        str = new BufferedReader(localFileReader3).readLine().trim();
        try
        {
          localFileReader3.close();
          return str;
        }
        catch (Exception localException1)
        {
          localException1.printStackTrace();
          return str;
        }
        localException4 = localException4;
        localFileReader3 = null;
      }
      catch (Exception localException5) {}finally
      {
        for (;;) {}
      }
      localFileReader2 = localFileReader3;
      localException4.printStackTrace();
      try
      {
        localFileReader3.close();
        return "";
      }
      catch (Exception localException2)
      {
        for (;;)
        {
          localException2.printStackTrace();
        }
      }
    }
    finally
    {
      localObject2 = finally;
      localObject1 = null;
    }
  }
  
  public static String g(Context paramContext)
  {
    try
    {
      if (b(paramContext, "android.permission.ACCESS_WIFI_STATE"))
      {
        paramContext = ((WifiManager)paramContext.getSystemService("wifi")).getConnectionInfo().getMacAddress();
        if (paramContext != null)
        {
          boolean bool = paramContext.equals("");
          if (!bool) {
            break label46;
          }
        }
      }
      for (paramContext = "unknown";; paramContext = "unknown")
      {
        label46:
        return c(paramContext);
        Log.w("MobileUtils", "Could not read MAC, forget to include ACCESS_WIFI_STATE permission?");
      }
      return "unknown";
    }
    catch (Exception paramContext)
    {
      Log.w("MobileUtils", "Could not read MAC, forget to include ACCESS_WIFI_STATE permission?", paramContext);
    }
  }
  
  /* Error */
  public static String h()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_2
    //   2: aconst_null
    //   3: astore_0
    //   4: new 269	java/io/FileReader
    //   7: dup
    //   8: ldc_w 315
    //   11: invokespecial 272	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   14: astore_1
    //   15: new 274	java/io/BufferedReader
    //   18: dup
    //   19: aload_1
    //   20: sipush 8192
    //   23: invokespecial 318	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   26: astore_0
    //   27: aload_0
    //   28: invokevirtual 280	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   31: astore_2
    //   32: aload_2
    //   33: ifnonnull +22 -> 55
    //   36: aload_1
    //   37: invokevirtual 281	java/io/FileReader:close	()V
    //   40: aload_0
    //   41: invokevirtual 319	java/io/BufferedReader:close	()V
    //   44: ldc 38
    //   46: areturn
    //   47: astore_0
    //   48: aload_0
    //   49: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   52: goto -8 -> 44
    //   55: aload_2
    //   56: aload_2
    //   57: ldc_w 321
    //   60: invokevirtual 325	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   63: iconst_2
    //   64: iadd
    //   65: aload_2
    //   66: ldc_w 327
    //   69: invokevirtual 325	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   72: iconst_1
    //   73: isub
    //   74: invokevirtual 99	java/lang/String:substring	(II)Ljava/lang/String;
    //   77: invokevirtual 170	java/lang/String:trim	()Ljava/lang/String;
    //   80: astore_2
    //   81: ldc -84
    //   83: aload_2
    //   84: invokestatic 177	com/fastfun2/sdk/mmlog318/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   87: aload_2
    //   88: invokestatic 91	com/fastfun2/sdk/mmlog318/g:c	(Ljava/lang/String;)Ljava/lang/String;
    //   91: astore_2
    //   92: aload_1
    //   93: invokevirtual 281	java/io/FileReader:close	()V
    //   96: aload_0
    //   97: invokevirtual 319	java/io/BufferedReader:close	()V
    //   100: aload_2
    //   101: areturn
    //   102: astore_0
    //   103: aload_0
    //   104: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   107: aload_2
    //   108: areturn
    //   109: astore_2
    //   110: aconst_null
    //   111: astore_3
    //   112: aload_0
    //   113: astore_1
    //   114: aload_3
    //   115: astore_0
    //   116: aload_2
    //   117: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   120: aload_1
    //   121: invokevirtual 281	java/io/FileReader:close	()V
    //   124: aload_0
    //   125: invokevirtual 319	java/io/BufferedReader:close	()V
    //   128: ldc 38
    //   130: areturn
    //   131: astore_0
    //   132: aload_0
    //   133: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   136: goto -8 -> 128
    //   139: astore_0
    //   140: aconst_null
    //   141: astore_1
    //   142: aload_1
    //   143: invokevirtual 281	java/io/FileReader:close	()V
    //   146: aload_2
    //   147: invokevirtual 319	java/io/BufferedReader:close	()V
    //   150: aload_0
    //   151: athrow
    //   152: astore_1
    //   153: aload_1
    //   154: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   157: goto -7 -> 150
    //   160: astore_0
    //   161: goto -19 -> 142
    //   164: astore_3
    //   165: aload_0
    //   166: astore_2
    //   167: aload_3
    //   168: astore_0
    //   169: goto -27 -> 142
    //   172: astore_3
    //   173: aload_0
    //   174: astore_2
    //   175: aload_3
    //   176: astore_0
    //   177: goto -35 -> 142
    //   180: astore_2
    //   181: goto -65 -> 116
    //   184: astore_2
    //   185: aconst_null
    //   186: astore_0
    //   187: goto -71 -> 116
    // Local variable table:
    //   start	length	slot	name	signature
    //   3	38	0	localBufferedReader	BufferedReader
    //   47	50	0	localException1	Exception
    //   102	11	0	localException2	Exception
    //   115	10	0	localObject1	Object
    //   131	2	0	localException3	Exception
    //   139	12	0	localObject2	Object
    //   160	6	0	localObject3	Object
    //   168	19	0	localObject4	Object
    //   14	129	1	localObject5	Object
    //   152	2	1	localException4	Exception
    //   1	107	2	str	String
    //   109	38	2	localException5	Exception
    //   166	9	2	localObject6	Object
    //   180	1	2	localException6	Exception
    //   184	1	2	localException7	Exception
    //   111	4	3	localObject7	Object
    //   164	4	3	localObject8	Object
    //   172	4	3	localObject9	Object
    // Exception table:
    //   from	to	target	type
    //   36	44	47	java/lang/Exception
    //   92	100	102	java/lang/Exception
    //   4	15	109	java/lang/Exception
    //   120	128	131	java/lang/Exception
    //   4	15	139	finally
    //   142	150	152	java/lang/Exception
    //   15	27	160	finally
    //   27	32	164	finally
    //   55	92	164	finally
    //   116	120	172	finally
    //   27	32	180	java/lang/Exception
    //   55	92	180	java/lang/Exception
    //   15	27	184	java/lang/Exception
  }
  
  public static String h(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getSharedPreferences("lxdMoblieAgent_sys_config", 0).getString("MOBILE_APPKEY", "");
      boolean bool;
      Object localObject;
      Context localContext;
      return paramContext;
    }
    catch (Exception paramContext)
    {
      try
      {
        bool = paramContext.equals("");
        if (!bool) {
          return paramContext;
        }
        return null;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          localObject = paramContext;
        }
      }
      paramContext = paramContext;
      localObject = null;
      localContext = paramContext;
      localContext.printStackTrace();
      return localObject;
    }
  }
  
  public static String i(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getSharedPreferences("lxdMoblieAgent_sys_config", 0).getString("MOBILE_CHANNEL", "");
      boolean bool;
      Object localObject;
      Context localContext;
      return paramContext;
    }
    catch (Exception paramContext)
    {
      try
      {
        bool = paramContext.equals("");
        if (!bool) {
          return paramContext;
        }
        return null;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          localObject = paramContext;
        }
      }
      paramContext = paramContext;
      localObject = null;
      localContext = paramContext;
      localContext.printStackTrace();
      return localObject;
    }
  }
  
  public static String j(Context paramContext)
  {
    paramContext = e.d(paramContext).getString("md5", "");
    if (paramContext.trim().equals("")) {
      return null;
    }
    return paramContext.trim();
  }
  
  public static String k(Context paramContext)
  {
    try
    {
      paramContext = ((TelephonyManager)paramContext.getSystemService("phone")).getNetworkOperatorName();
      return c(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
        paramContext = "";
      }
    }
  }
  
  public static String l(Context paramContext)
  {
    try
    {
      if (b(paramContext, "android.permission.ACCESS_NETWORK_STATE"))
      {
        paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
        if (paramContext == null) {
          return "unknown";
        }
        int i = paramContext.getType();
        if (i == 1) {
          return "wifi";
        }
        paramContext = paramContext.getExtraInfo();
        if (paramContext == null) {
          return "unknown";
        }
        e.a("MobileUtils", "net type:" + paramContext);
        paramContext = paramContext.trim();
        return paramContext;
      }
      return "unknown";
    }
    catch (Exception paramContext)
    {
      Log.w("MobileUtils", "Could not read ACCESSPOINT, forget to include ACCESS_NETSTATE_STATE permission?", paramContext);
    }
    return "unknown";
  }
  
  /* Error */
  public static long[] m(Context paramContext)
  {
    // Byte code:
    //   0: lconst_0
    //   1: lstore 6
    //   3: aconst_null
    //   4: astore 9
    //   6: aload_0
    //   7: invokestatic 379	com/fastfun2/sdk/mmlog318/g:w	(Landroid/content/Context;)I
    //   10: istore_1
    //   11: new 48	java/lang/StringBuilder
    //   14: dup
    //   15: ldc_w 381
    //   18: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   21: iload_1
    //   22: invokevirtual 75	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   25: ldc_w 383
    //   28: invokevirtual 67	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31: invokevirtual 78	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   34: astore_0
    //   35: new 48	java/lang/StringBuilder
    //   38: dup
    //   39: ldc_w 381
    //   42: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   45: iload_1
    //   46: invokevirtual 75	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   49: ldc_w 385
    //   52: invokevirtual 67	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   55: invokevirtual 78	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   58: astore 10
    //   60: new 269	java/io/FileReader
    //   63: dup
    //   64: aload_0
    //   65: invokespecial 272	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   68: astore 8
    //   70: new 274	java/io/BufferedReader
    //   73: dup
    //   74: aload 8
    //   76: sipush 500
    //   79: invokespecial 318	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   82: astore_0
    //   83: aload_0
    //   84: invokevirtual 280	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   87: invokevirtual 386	java/lang/String:toString	()Ljava/lang/String;
    //   90: invokevirtual 170	java/lang/String:trim	()Ljava/lang/String;
    //   93: invokestatic 392	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   96: lstore_2
    //   97: aload 8
    //   99: invokevirtual 281	java/io/FileReader:close	()V
    //   102: aload_0
    //   103: invokevirtual 319	java/io/BufferedReader:close	()V
    //   106: aconst_null
    //   107: astore 8
    //   109: aconst_null
    //   110: astore_0
    //   111: new 269	java/io/FileReader
    //   114: dup
    //   115: aload 10
    //   117: invokespecial 272	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   120: astore 9
    //   122: new 274	java/io/BufferedReader
    //   125: dup
    //   126: aload 9
    //   128: sipush 500
    //   131: invokespecial 318	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   134: astore 8
    //   136: aload 8
    //   138: invokevirtual 280	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   141: invokevirtual 386	java/lang/String:toString	()Ljava/lang/String;
    //   144: invokevirtual 170	java/lang/String:trim	()Ljava/lang/String;
    //   147: invokestatic 392	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   150: lstore 4
    //   152: aload 9
    //   154: invokevirtual 281	java/io/FileReader:close	()V
    //   157: aload 8
    //   159: invokevirtual 319	java/io/BufferedReader:close	()V
    //   162: ldc -84
    //   164: new 48	java/lang/StringBuilder
    //   167: dup
    //   168: ldc_w 394
    //   171: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   174: lload_2
    //   175: invokevirtual 397	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   178: ldc_w 399
    //   181: invokevirtual 67	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   184: lload 4
    //   186: invokevirtual 397	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   189: invokevirtual 78	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   192: invokestatic 177	com/fastfun2/sdk/mmlog318/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   195: lload_2
    //   196: lconst_0
    //   197: lcmp
    //   198: ifge +272 -> 470
    //   201: lconst_0
    //   202: lstore_2
    //   203: lload 4
    //   205: lconst_0
    //   206: lcmp
    //   207: ifge +188 -> 395
    //   210: lload 6
    //   212: lstore 4
    //   214: iconst_2
    //   215: newarray long
    //   217: dup
    //   218: iconst_0
    //   219: lload_2
    //   220: lastore
    //   221: dup
    //   222: iconst_1
    //   223: lload 4
    //   225: lastore
    //   226: areturn
    //   227: astore_0
    //   228: aconst_null
    //   229: astore 8
    //   231: aload 8
    //   233: ifnull +13 -> 246
    //   236: aload 8
    //   238: invokevirtual 281	java/io/FileReader:close	()V
    //   241: aload 9
    //   243: invokevirtual 319	java/io/BufferedReader:close	()V
    //   246: aload_0
    //   247: athrow
    //   248: astore 8
    //   250: aload 8
    //   252: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   255: goto -9 -> 246
    //   258: astore_0
    //   259: aconst_null
    //   260: astore 8
    //   262: aconst_null
    //   263: astore_0
    //   264: aload 8
    //   266: ifnull +183 -> 449
    //   269: aload 8
    //   271: invokevirtual 281	java/io/FileReader:close	()V
    //   274: aload_0
    //   275: invokevirtual 319	java/io/BufferedReader:close	()V
    //   278: lconst_0
    //   279: lstore_2
    //   280: aconst_null
    //   281: astore 8
    //   283: aconst_null
    //   284: astore_0
    //   285: goto -174 -> 111
    //   288: astore 9
    //   290: aload 9
    //   292: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   295: lconst_0
    //   296: lstore_2
    //   297: goto -186 -> 111
    //   300: astore 9
    //   302: aload 9
    //   304: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   307: goto -196 -> 111
    //   310: astore 10
    //   312: aload 8
    //   314: astore 9
    //   316: aload 10
    //   318: astore 8
    //   320: aload 9
    //   322: ifnull +12 -> 334
    //   325: aload 9
    //   327: invokevirtual 281	java/io/FileReader:close	()V
    //   330: aload_0
    //   331: invokevirtual 319	java/io/BufferedReader:close	()V
    //   334: aload 8
    //   336: athrow
    //   337: astore_0
    //   338: aload_0
    //   339: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   342: goto -8 -> 334
    //   345: astore 9
    //   347: aload 8
    //   349: astore 9
    //   351: aload_0
    //   352: astore 8
    //   354: aload 9
    //   356: astore_0
    //   357: aload_0
    //   358: ifnull +85 -> 443
    //   361: aload_0
    //   362: invokevirtual 281	java/io/FileReader:close	()V
    //   365: aload 8
    //   367: invokevirtual 319	java/io/BufferedReader:close	()V
    //   370: lconst_0
    //   371: lstore 4
    //   373: goto -211 -> 162
    //   376: astore_0
    //   377: aload_0
    //   378: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   381: lconst_0
    //   382: lstore 4
    //   384: goto -222 -> 162
    //   387: astore_0
    //   388: aload_0
    //   389: invokevirtual 143	java/lang/Exception:printStackTrace	()V
    //   392: goto -230 -> 162
    //   395: goto -181 -> 214
    //   398: astore 8
    //   400: goto -80 -> 320
    //   403: astore 10
    //   405: aload 8
    //   407: astore_0
    //   408: aload 10
    //   410: astore 8
    //   412: goto -92 -> 320
    //   415: astore_0
    //   416: aload 9
    //   418: astore_0
    //   419: goto -62 -> 357
    //   422: astore_0
    //   423: goto -192 -> 231
    //   426: astore 10
    //   428: aload_0
    //   429: astore 9
    //   431: aload 10
    //   433: astore_0
    //   434: goto -203 -> 231
    //   437: astore_0
    //   438: aconst_null
    //   439: astore_0
    //   440: goto -176 -> 264
    //   443: lconst_0
    //   444: lstore 4
    //   446: goto -284 -> 162
    //   449: lconst_0
    //   450: lstore_2
    //   451: aconst_null
    //   452: astore 8
    //   454: aconst_null
    //   455: astore_0
    //   456: goto -345 -> 111
    //   459: astore 8
    //   461: aload_0
    //   462: astore 8
    //   464: aload 9
    //   466: astore_0
    //   467: goto -110 -> 357
    //   470: goto -267 -> 203
    //   473: astore 9
    //   475: goto -211 -> 264
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	478	0	paramContext	Context
    //   10	36	1	i	int
    //   96	355	2	l1	long
    //   150	295	4	l2	long
    //   1	210	6	l3	long
    //   68	169	8	localObject1	Object
    //   248	3	8	localException1	Exception
    //   260	106	8	localObject2	Object
    //   398	8	8	localObject3	Object
    //   410	43	8	localObject4	Object
    //   459	1	8	localException2	Exception
    //   462	1	8	localContext	Context
    //   4	238	9	localFileReader	FileReader
    //   288	3	9	localException3	Exception
    //   300	3	9	localException4	Exception
    //   314	12	9	localObject5	Object
    //   345	1	9	localException5	Exception
    //   349	116	9	localObject6	Object
    //   473	1	9	localException6	Exception
    //   58	58	10	str	String
    //   310	7	10	localObject7	Object
    //   403	6	10	localObject8	Object
    //   426	6	10	localObject9	Object
    // Exception table:
    //   from	to	target	type
    //   60	70	227	finally
    //   236	246	248	java/lang/Exception
    //   60	70	258	java/lang/Exception
    //   269	278	288	java/lang/Exception
    //   97	106	300	java/lang/Exception
    //   111	122	310	finally
    //   325	334	337	java/lang/Exception
    //   111	122	345	java/lang/Exception
    //   361	370	376	java/lang/Exception
    //   152	162	387	java/lang/Exception
    //   122	136	398	finally
    //   136	152	403	finally
    //   136	152	415	java/lang/Exception
    //   70	83	422	finally
    //   83	97	426	finally
    //   70	83	437	java/lang/Exception
    //   122	136	459	java/lang/Exception
    //   83	97	473	java/lang/Exception
  }
  
  public static String n(Context paramContext)
  {
    try
    {
      Object localObject = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
      if ((localObject != null) && (((NetworkInfo)localObject).isConnected()))
      {
        localObject = ((NetworkInfo)localObject).getTypeName();
        boolean bool = ((String)localObject).equalsIgnoreCase("WIFI");
        if (bool) {
          return "WIFI";
        }
        if (((String)localObject).equalsIgnoreCase("MOBILE"))
        {
          int i = ((TelephonyManager)paramContext.getSystemService("phone")).getNetworkType();
          return String.valueOf(i);
        }
      }
      else
      {
        return "";
      }
    }
    catch (Exception paramContext)
    {
      return "";
    }
    return "";
  }
  
  private static int o(Context paramContext)
  {
    try
    {
      DisplayMetrics localDisplayMetrics = new DisplayMetrics();
      ((WindowManager)paramContext.getSystemService("window")).getDefaultDisplay().getMetrics(localDisplayMetrics);
      float f = localDisplayMetrics.density;
      return (int)f;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  private static String p(Context paramContext)
  {
    paramContext = paramContext.getSharedPreferences("lxdMoblieAgent_sys_config", 0).getString("MOBILE_WW_CHANNEL", "");
    if (paramContext.trim().equals("")) {
      return null;
    }
    return paramContext.trim();
  }
  
  private static String q(Context paramContext)
  {
    paramContext = paramContext.getSharedPreferences("lxdMoblieAgent_sys_config", 0).getString("MOBILE_VERSION", "");
    if (paramContext.trim().equals("")) {
      return null;
    }
    return paramContext.trim();
  }
  
  private static String r(Context paramContext)
  {
    paramContext = paramContext.getSharedPreferences("lxdMoblieAgent_sys_config", 0).getString("MOBILE_PACKAGE_NAME", "");
    if (paramContext.trim().equals("")) {
      return null;
    }
    return paramContext.trim();
  }
  
  private static String s(Context paramContext)
  {
    paramContext = paramContext.getSharedPreferences("lxdMoblieAgent_sys_config", 0).getString("MOBILE_PROGRAM_ID", "");
    if (paramContext.trim().equals("")) {
      return null;
    }
    return paramContext.trim();
  }
  
  private static String t(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getPackageName();
      return c(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = "";
      }
    }
  }
  
  private static String u(Context paramContext)
  {
    paramContext = paramContext.getSharedPreferences("lxdMoblieAgent_sys_config", 0).getString("MOBILE_VERSION_CODE", "");
    if (paramContext.trim().equals("")) {
      return null;
    }
    return paramContext.trim();
  }
  
  private static String v(Context paramContext)
  {
    paramContext = paramContext.getSharedPreferences("lxdMoblieAgent_sys_config", 0).getString("MOBILE_VERSION_NAME", "");
    if (paramContext.trim().equals("")) {
      return null;
    }
    return paramContext.trim();
  }
  
  private static int w(Context paramContext)
  {
    try
    {
      int i = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 1).uid;
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return -1;
  }
}
