package com.android.sdk.pay;

import java.net.URLEncoder;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.Iterator;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class o
{
  public static int a(int paramInt, ByteOrder paramByteOrder)
  {
    ByteBuffer localByteBuffer = ByteBuffer.wrap(a(paramInt));
    localByteBuffer.order(paramByteOrder);
    return localByteBuffer.getInt();
  }
  
  public static String a(String paramString)
  {
    paramString = Jsoup.parse(paramString).getElementsByTag("go").iterator();
    Element localElement;
    String str;
    do
    {
      if (!paramString.hasNext()) {
        return "";
      }
      localElement = (Element)paramString.next();
      str = localElement.attr("href");
      localElement.text();
    } while (str == null);
    return localElement.attr("href");
  }
  
  public static String a(String paramString1, String paramString2)
  {
    paramString1 = Jsoup.parse(paramString1).getElementsByTag("a").iterator();
    Element localElement;
    do
    {
      if (!paramString1.hasNext()) {
        return "";
      }
      localElement = (Element)paramString1.next();
      localElement.attr("href");
    } while (!paramString2.equals(localElement.text()));
    return localElement.attr("href");
  }
  
  public static String a(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    paramString1 = Jsoup.parse(paramString1).getElementsByTag(paramString2).iterator();
    do
    {
      if (!paramString1.hasNext()) {
        return "";
      }
      paramString2 = ((Element)paramString1.next()).attr(paramString3);
    } while (!paramString2.contains(paramString4));
    return paramString2;
  }
  
  public static String a(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5)
  {
    return a(Jsoup.parse(paramString1), paramString2, paramString3, paramString4, paramString5);
  }
  
  public static String a(Element paramElement)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    Iterator localIterator = paramElement.getAllElements().iterator();
    String str1 = "";
    label102:
    label120:
    label256:
    label262:
    label267:
    for (;;)
    {
      if (!localIterator.hasNext()) {
        return localStringBuffer.toString();
      }
      Element localElement = (Element)localIterator.next();
      if ((paramElement.tagName() != localElement.tagName()) && (localElement.attr("name") != null) && (localElement.attr("name").length() > 0))
      {
        String str2;
        String str3;
        if (localElement.attr("type") != null)
        {
          str2 = localElement.attr("type");
          if (localElement.attr("name") == null) {
            break label256;
          }
          str3 = localElement.attr("name");
          if (localElement.attr("value") == null) {
            break label262;
          }
        }
        for (String str4 = localElement.attr("value");; str4 = "")
        {
          if ((str2.contains("button")) || (str2.contains("reset")) || (str2.contains("image"))) {
            break label267;
          }
          if ((str2.contains("checkbox")) || (str2.contains("radio")))
          {
            str2 = localElement.attr("checked");
            if ((str2 == null) || (str2.contains("false"))) {
              break;
            }
          }
          localStringBuffer.append(str1);
          localStringBuffer.append(str3.trim());
          localStringBuffer.append("=");
          localStringBuffer.append(URLEncoder.encode(str4.trim()));
          str1 = "&";
          break;
          str2 = "";
          break label102;
          str3 = "";
          break label120;
        }
      }
    }
  }
  
  public static String a(Element paramElement, String paramString1, String paramString2, String paramString3, String paramString4)
  {
    paramElement = paramElement.getElementsByTag(paramString1).iterator();
    String str;
    do
    {
      if (!paramElement.hasNext()) {
        return "";
      }
      paramString1 = (Element)paramElement.next();
      str = paramString1.attr(paramString2);
    } while ((str == null) || (!str.equals(paramString3)));
    return paramString1.attr(paramString4);
  }
  
  /* Error */
  public static String a(byte[] paramArrayOfByte, int paramInt)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: new 149	java/net/URL
    //   6: dup
    //   7: new 151	java/lang/StringBuilder
    //   10: dup
    //   11: new 72	java/lang/String
    //   14: dup
    //   15: ldc -103
    //   17: iconst_0
    //   18: invokestatic 159	android/util/Base64:decode	(Ljava/lang/String;I)[B
    //   21: invokespecial 162	java/lang/String:<init>	([B)V
    //   24: invokestatic 166	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   27: invokespecial 169	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   30: iload_1
    //   31: invokevirtual 172	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   34: invokevirtual 173	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   37: invokespecial 174	java/net/URL:<init>	(Ljava/lang/String;)V
    //   40: invokevirtual 178	java/net/URL:openConnection	()Ljava/net/URLConnection;
    //   43: checkcast 180	java/net/HttpURLConnection
    //   46: astore_3
    //   47: aload_3
    //   48: iconst_1
    //   49: invokevirtual 184	java/net/HttpURLConnection:setDoOutput	(Z)V
    //   52: aload_3
    //   53: ldc -70
    //   55: invokevirtual 189	java/net/HttpURLConnection:setRequestMethod	(Ljava/lang/String;)V
    //   58: aload_3
    //   59: ldc -65
    //   61: ldc -63
    //   63: invokevirtual 197	java/net/HttpURLConnection:setRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   66: new 199	java/io/DataOutputStream
    //   69: dup
    //   70: aload_3
    //   71: invokevirtual 203	java/net/HttpURLConnection:getOutputStream	()Ljava/io/OutputStream;
    //   74: invokespecial 206	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   77: astore_2
    //   78: aload_2
    //   79: aload_0
    //   80: arraylength
    //   81: getstatic 212	java/nio/ByteOrder:BIG_ENDIAN	Ljava/nio/ByteOrder;
    //   84: invokestatic 214	com/android/sdk/pay/o:a	(ILjava/nio/ByteOrder;)I
    //   87: invokevirtual 218	java/io/DataOutputStream:writeInt	(I)V
    //   90: aload_2
    //   91: aload_0
    //   92: invokevirtual 221	java/io/DataOutputStream:write	([B)V
    //   95: aload_2
    //   96: invokevirtual 224	java/io/DataOutputStream:flush	()V
    //   99: aload_2
    //   100: invokevirtual 227	java/io/DataOutputStream:close	()V
    //   103: aload_3
    //   104: invokevirtual 230	java/net/HttpURLConnection:getResponseCode	()I
    //   107: sipush 200
    //   110: if_icmpne +100 -> 210
    //   113: new 232	java/io/DataInputStream
    //   116: dup
    //   117: aload_3
    //   118: invokevirtual 236	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
    //   121: invokespecial 239	java/io/DataInputStream:<init>	(Ljava/io/InputStream;)V
    //   124: astore_3
    //   125: aload_3
    //   126: astore 4
    //   128: aload_2
    //   129: astore_0
    //   130: aload_3
    //   131: invokevirtual 243	java/io/DataInputStream:readByte	()B
    //   134: istore_1
    //   135: aload_3
    //   136: astore 4
    //   138: aload_2
    //   139: astore_0
    //   140: aload_3
    //   141: invokevirtual 246	java/io/DataInputStream:readInt	()I
    //   144: getstatic 212	java/nio/ByteOrder:BIG_ENDIAN	Ljava/nio/ByteOrder;
    //   147: invokestatic 214	com/android/sdk/pay/o:a	(ILjava/nio/ByteOrder;)I
    //   150: newarray byte
    //   152: astore 5
    //   154: aload_3
    //   155: astore 4
    //   157: aload_2
    //   158: astore_0
    //   159: aload_3
    //   160: aload 5
    //   162: invokevirtual 250	java/io/DataInputStream:read	([B)I
    //   165: pop
    //   166: aload_3
    //   167: astore 4
    //   169: aload_2
    //   170: astore_0
    //   171: new 72	java/lang/String
    //   174: dup
    //   175: aload 5
    //   177: ldc -4
    //   179: invokespecial 255	java/lang/String:<init>	([BLjava/lang/String;)V
    //   182: astore 5
    //   184: iload_1
    //   185: iconst_1
    //   186: if_icmpne +275 -> 461
    //   189: aload 5
    //   191: astore_0
    //   192: aload_2
    //   193: ifnull +7 -> 200
    //   196: aload_2
    //   197: invokevirtual 227	java/io/DataOutputStream:close	()V
    //   200: aload_3
    //   201: ifnull +7 -> 208
    //   204: aload_3
    //   205: invokevirtual 256	java/io/DataInputStream:close	()V
    //   208: aload_0
    //   209: areturn
    //   210: new 258	java/io/BufferedReader
    //   213: dup
    //   214: new 260	java/io/InputStreamReader
    //   217: dup
    //   218: aload_3
    //   219: invokevirtual 236	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
    //   222: ldc_w 262
    //   225: invokespecial 265	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;Ljava/lang/String;)V
    //   228: invokespecial 268	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   231: astore_0
    //   232: new 88	java/lang/StringBuffer
    //   235: dup
    //   236: invokespecial 92	java/lang/StringBuffer:<init>	()V
    //   239: astore_3
    //   240: aload_0
    //   241: invokevirtual 270	java/io/BufferedReader:read	()I
    //   244: istore_1
    //   245: iload_1
    //   246: iconst_m1
    //   247: if_icmpne +14 -> 261
    //   250: aload_0
    //   251: invokevirtual 271	java/io/BufferedReader:close	()V
    //   254: aconst_null
    //   255: astore_3
    //   256: aconst_null
    //   257: astore_0
    //   258: goto -66 -> 192
    //   261: aload_3
    //   262: iload_1
    //   263: i2c
    //   264: invokevirtual 274	java/lang/StringBuffer:append	(C)Ljava/lang/StringBuffer;
    //   267: pop
    //   268: goto -28 -> 240
    //   271: astore 5
    //   273: aconst_null
    //   274: astore_3
    //   275: aload_3
    //   276: astore 4
    //   278: aload_2
    //   279: astore_0
    //   280: aload 5
    //   282: invokevirtual 277	java/net/MalformedURLException:printStackTrace	()V
    //   285: aload_2
    //   286: ifnull +7 -> 293
    //   289: aload_2
    //   290: invokevirtual 227	java/io/DataOutputStream:close	()V
    //   293: aload_3
    //   294: ifnull +165 -> 459
    //   297: aload_3
    //   298: invokevirtual 256	java/io/DataInputStream:close	()V
    //   301: aconst_null
    //   302: areturn
    //   303: astore_0
    //   304: aload_0
    //   305: invokevirtual 278	java/io/IOException:printStackTrace	()V
    //   308: goto -15 -> 293
    //   311: astore_0
    //   312: aload_0
    //   313: invokevirtual 278	java/io/IOException:printStackTrace	()V
    //   316: goto -15 -> 301
    //   319: astore 5
    //   321: aconst_null
    //   322: astore_3
    //   323: aconst_null
    //   324: astore_2
    //   325: aload_3
    //   326: astore 4
    //   328: aload_2
    //   329: astore_0
    //   330: aload 5
    //   332: invokevirtual 278	java/io/IOException:printStackTrace	()V
    //   335: aload_2
    //   336: ifnull +7 -> 343
    //   339: aload_2
    //   340: invokevirtual 227	java/io/DataOutputStream:close	()V
    //   343: aload_3
    //   344: ifnull +115 -> 459
    //   347: aload_3
    //   348: invokevirtual 256	java/io/DataInputStream:close	()V
    //   351: aconst_null
    //   352: areturn
    //   353: astore_0
    //   354: aload_0
    //   355: invokevirtual 278	java/io/IOException:printStackTrace	()V
    //   358: goto -15 -> 343
    //   361: astore_0
    //   362: aload_0
    //   363: invokevirtual 278	java/io/IOException:printStackTrace	()V
    //   366: goto -15 -> 351
    //   369: astore_3
    //   370: aconst_null
    //   371: astore_0
    //   372: aload_0
    //   373: ifnull +7 -> 380
    //   376: aload_0
    //   377: invokevirtual 227	java/io/DataOutputStream:close	()V
    //   380: aload 4
    //   382: ifnull +8 -> 390
    //   385: aload 4
    //   387: invokevirtual 256	java/io/DataInputStream:close	()V
    //   390: aload_3
    //   391: athrow
    //   392: astore_0
    //   393: aload_0
    //   394: invokevirtual 278	java/io/IOException:printStackTrace	()V
    //   397: goto -17 -> 380
    //   400: astore_0
    //   401: aload_0
    //   402: invokevirtual 278	java/io/IOException:printStackTrace	()V
    //   405: goto -15 -> 390
    //   408: astore_2
    //   409: aload_2
    //   410: invokevirtual 278	java/io/IOException:printStackTrace	()V
    //   413: goto -213 -> 200
    //   416: astore_2
    //   417: aload_2
    //   418: invokevirtual 278	java/io/IOException:printStackTrace	()V
    //   421: aload_0
    //   422: areturn
    //   423: astore_3
    //   424: aload_2
    //   425: astore_0
    //   426: goto -54 -> 372
    //   429: astore_3
    //   430: goto -58 -> 372
    //   433: astore 5
    //   435: aconst_null
    //   436: astore_3
    //   437: goto -112 -> 325
    //   440: astore 5
    //   442: goto -117 -> 325
    //   445: astore 5
    //   447: aconst_null
    //   448: astore_3
    //   449: aconst_null
    //   450: astore_2
    //   451: goto -176 -> 275
    //   454: astore 5
    //   456: goto -181 -> 275
    //   459: aconst_null
    //   460: areturn
    //   461: aconst_null
    //   462: astore_0
    //   463: goto -271 -> 192
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	466	0	paramArrayOfByte	byte[]
    //   0	466	1	paramInt	int
    //   77	263	2	localDataOutputStream	java.io.DataOutputStream
    //   408	2	2	localIOException1	java.io.IOException
    //   416	9	2	localIOException2	java.io.IOException
    //   450	1	2	localObject1	Object
    //   46	302	3	localObject2	Object
    //   369	22	3	localObject3	Object
    //   423	1	3	localObject4	Object
    //   429	1	3	localObject5	Object
    //   436	13	3	localObject6	Object
    //   1	385	4	localObject7	Object
    //   152	38	5	localObject8	Object
    //   271	10	5	localMalformedURLException1	java.net.MalformedURLException
    //   319	12	5	localIOException3	java.io.IOException
    //   433	1	5	localIOException4	java.io.IOException
    //   440	1	5	localIOException5	java.io.IOException
    //   445	1	5	localMalformedURLException2	java.net.MalformedURLException
    //   454	1	5	localMalformedURLException3	java.net.MalformedURLException
    // Exception table:
    //   from	to	target	type
    //   78	125	271	java/net/MalformedURLException
    //   210	240	271	java/net/MalformedURLException
    //   240	245	271	java/net/MalformedURLException
    //   250	254	271	java/net/MalformedURLException
    //   261	268	271	java/net/MalformedURLException
    //   289	293	303	java/io/IOException
    //   297	301	311	java/io/IOException
    //   3	78	319	java/io/IOException
    //   339	343	353	java/io/IOException
    //   347	351	361	java/io/IOException
    //   3	78	369	finally
    //   376	380	392	java/io/IOException
    //   385	390	400	java/io/IOException
    //   196	200	408	java/io/IOException
    //   204	208	416	java/io/IOException
    //   78	125	423	finally
    //   210	240	423	finally
    //   240	245	423	finally
    //   250	254	423	finally
    //   261	268	423	finally
    //   130	135	429	finally
    //   140	154	429	finally
    //   159	166	429	finally
    //   171	184	429	finally
    //   280	285	429	finally
    //   330	335	429	finally
    //   78	125	433	java/io/IOException
    //   210	240	433	java/io/IOException
    //   240	245	433	java/io/IOException
    //   250	254	433	java/io/IOException
    //   261	268	433	java/io/IOException
    //   130	135	440	java/io/IOException
    //   140	154	440	java/io/IOException
    //   159	166	440	java/io/IOException
    //   171	184	440	java/io/IOException
    //   3	78	445	java/net/MalformedURLException
    //   130	135	454	java/net/MalformedURLException
    //   140	154	454	java/net/MalformedURLException
    //   159	166	454	java/net/MalformedURLException
    //   171	184	454	java/net/MalformedURLException
  }
  
  public static boolean a(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6)
  {
    return a(Jsoup.parse(paramString1), paramString2, paramString3, paramString4, paramString5, paramString6);
  }
  
  public static boolean a(Element paramElement, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5)
  {
    paramElement = paramElement.getElementsByTag(paramString1).iterator();
    do
    {
      String str;
      do
      {
        if (!paramElement.hasNext()) {
          return false;
        }
        paramString1 = (Element)paramElement.next();
        str = paramString1.attr(paramString2);
      } while ((str == null) || (!str.equals(paramString3)));
      paramString1 = paramString1.attr(paramString4);
    } while ((paramString1 == null) || (!paramString1.equals(paramString5)));
    return true;
  }
  
  public static byte[] a(int paramInt)
  {
    return new byte[] { (byte)(paramInt & 0xFF), (byte)(paramInt >> 8 & 0xFF), (byte)(paramInt >> 16 & 0xFF), (byte)(paramInt >>> 24) };
  }
  
  public static String b(String paramString)
  {
    try
    {
      Matcher localMatcher = Pattern.compile("(&#x)(\\w{1,4});", 2).matcher(paramString);
      StringBuffer localStringBuffer = new StringBuffer();
      for (;;)
      {
        if (!localMatcher.find())
        {
          localMatcher.appendTail(localStringBuffer);
          return localStringBuffer.toString();
        }
        localMatcher.appendReplacement(localStringBuffer, c("/u" + localMatcher.group(2)));
      }
      return paramString;
    }
    catch (Exception localException) {}
  }
  
  public static String b(String paramString1, String paramString2)
  {
    paramString1 = Jsoup.parse(paramString1).getElementsByTag("a").iterator();
    Element localElement;
    do
    {
      if (!paramString1.hasNext()) {
        return "";
      }
      localElement = (Element)paramString1.next();
      localElement.attr("href");
    } while (!localElement.text().contains(paramString2));
    return localElement.attr("href");
  }
  
  public static Element b(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    paramString1 = Jsoup.parse(paramString1).getElementsByTag(paramString2).iterator();
    String str;
    do
    {
      if (!paramString1.hasNext()) {
        return null;
      }
      paramString2 = (Element)paramString1.next();
      str = paramString2.attr(paramString3);
    } while ((str == null) || (!str.contains(paramString4)));
    return paramString2;
  }
  
  public static String c(String paramString)
  {
    try
    {
      int k = paramString.length() / 6;
      StringBuilder localStringBuilder = new StringBuilder(k);
      int j = 0;
      int i = 2;
      for (;;)
      {
        if (j >= k) {
          return localStringBuilder.toString();
        }
        localStringBuilder.append((char)Integer.parseInt(paramString.substring(i, i + 4), 16));
        j += 1;
        i += 6;
      }
      return paramString;
    }
    catch (Exception localException) {}
  }
  
  public static String c(String paramString1, String paramString2)
  {
    String str = d(paramString1);
    paramString1 = paramString2.replace("&amp;", "&");
    if (paramString1.startsWith("http://")) {
      return paramString1;
    }
    if (paramString1.startsWith("/"))
    {
      int i = str.indexOf("/", 10);
      if (i > 0) {
        return str.substring(0, i) + paramString1;
      }
      return str + paramString1;
    }
    if (paramString1.startsWith("./"))
    {
      paramString2 = str.substring(0, str.lastIndexOf("/") + 1);
      paramString1 = paramString1.substring(2);
      return paramString2 + paramString1;
    }
    if (paramString1.startsWith("../"))
    {
      paramString2 = str.substring(0, str.lastIndexOf("/"));
      paramString2 = paramString2.substring(0, paramString2.lastIndexOf("/") + 1);
      paramString1 = paramString1.substring(3);
      return paramString2 + paramString1;
    }
    return str.substring(0, str.lastIndexOf("/") + 1) + paramString1;
  }
  
  public static String c(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    paramString1 = Jsoup.parse(paramString1).getElementsByTag(paramString2).iterator();
    String str;
    do
    {
      if (!paramString1.hasNext()) {
        return null;
      }
      paramString2 = (Element)paramString1.next();
      str = paramString2.attr(paramString3);
    } while ((str == null) || (!str.contains(paramString4)));
    return a(paramString2);
  }
  
  public static String d(String paramString)
  {
    String[] arrayOfString = paramString.split("[?]");
    String str = paramString;
    if (paramString.length() > 0)
    {
      str = paramString;
      if (arrayOfString.length > 1)
      {
        str = paramString;
        if (arrayOfString[0] != null) {
          str = arrayOfString[0];
        }
      }
    }
    return str;
  }
}
