package com.w545taxxxg9.Utils;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.net.Uri;
import android.view.View;
import android.webkit.GeolocationPermissions.Callback;
import android.webkit.JsResult;
import android.webkit.ValueCallback;
import android.webkit.WebChromeClient;
import android.webkit.WebChromeClient.CustomViewCallback;
import android.webkit.WebView;
import com.w545taxxxg9.Controllers.WebContentController;
import com.w545taxxxg9.Factory.Factory;
import com.w545taxxxg9.MainNavigationActivity;

public class BrowserWebChromeClient
  extends WebChromeClient
{
  private WebContentController _webController;
  
  public BrowserWebChromeClient(WebContentController paramWebContentController)
  {
    this._webController = paramWebContentController;
  }
  
  public View getVideoLoadingProgressView()
  {
    return Factory.getInstance().getMainNavigationActivity().getVideoLoadingProgressView();
  }
  
  public void onGeolocationPermissionsShowPrompt(String paramString, GeolocationPermissions.Callback paramCallback)
  {
    super.onGeolocationPermissionsShowPrompt(paramString, paramCallback);
    paramCallback.invoke(paramString, true, true);
  }
  
  public void onHideCustomView()
  {
    super.onHideCustomView();
    Factory.getInstance().getMainNavigationActivity().onHideCustomView();
  }
  
  public boolean onJsConfirm(WebView paramWebView, String paramString1, String paramString2, final JsResult paramJsResult)
  {
    SimpleDialogs.createConfirmDialog(Factory.getInstance().getMainNavigationActivity().getConfig().getWidgetName(), paramString2, paramWebView.getContext(), new DialogInterface.OnClickListener()new DialogInterface.OnClickListener
    {
      public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
      {
        paramJsResult.confirm();
      }
    }, new DialogInterface.OnClickListener()
    {
      public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
      {
        paramJsResult.cancel();
      }
    }).show();
    return true;
  }
  
  public void onProgressChanged(WebView paramWebView, int paramInt)
  {
    this._webController.setProgressBarState(paramInt);
  }
  
  public void onShowCustomView(View paramView, WebChromeClient.CustomViewCallback paramCustomViewCallback)
  {
    super.onShowCustomView(paramView, paramCustomViewCallback);
    Factory.getInstance().getMainNavigationActivity().onShowCustomView(paramView, paramCustomViewCallback);
  }
  
  public void openFileChooser(ValueCallback<Uri> paramValueCallback)
  {
    openFileChooser(paramValueCallback, "");
  }
  
  public void openFileChooser(ValueCallback<Uri> paramValueCallback, String paramString)
  {
    Factory.getInstance().getMainNavigationActivity().openFileChooser(paramValueCallback, paramString);
  }
  
  public void openFileChooser(ValueCallback<Uri> paramValueCallback, String paramString1, String paramString2)
  {
    openFileChooser(paramValueCallback, paramString1);
  }
}
