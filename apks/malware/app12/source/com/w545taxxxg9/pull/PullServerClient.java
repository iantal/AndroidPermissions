package com.w545taxxxg9.pull;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.res.Resources;
import com.w545taxxxg9.Utils.WebWidgetConfigurationManager;
import com.w545taxxxg9.Utils.WebWidgetConfigutation;
import java.net.URLEncoder;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.json.JSONArray;
import org.json.JSONObject;

public class PullServerClient
{
  private final String DOMAIN_URL_KEY = "domain_url";
  private final String LAST_REQUEST_TIME_KEY = "last_pull_request_time";
  private final int OK_RESPONSE = 200;
  private Context _context = null;
  private onMessageReceivedListener _listener;
  
  public PullServerClient(Context paramContext, onMessageReceivedListener paramOnMessageReceivedListener)
  {
    this._context = paramContext;
    this._listener = paramOnMessageReceivedListener;
  }
  
  private String _getDomainUrl(Context paramContext)
  {
    return paramContext.getSharedPreferences("AppsgeyserPrefs", 0).getString("domain_url", this._context.getResources().getString(2131230735));
  }
  
  private long _getLastRequestTime(Context paramContext)
  {
    return paramContext.getSharedPreferences("AppsgeyserPrefs", 0).getLong("last_pull_request_time", System.currentTimeMillis() / 1000L);
  }
  
  private void _rotateDomainUrls(Context paramContext)
  {
    String str1 = _getDomainUrl(paramContext);
    String str2 = this._context.getResources().getString(2131230735);
    String str3 = this._context.getResources().getString(2131230736);
    String str4 = this._context.getResources().getString(2131230737);
    if (str1.equalsIgnoreCase(str2))
    {
      _setDomainUrl(paramContext, str3);
      return;
    }
    if (str1.equalsIgnoreCase(str3))
    {
      _setDomainUrl(paramContext, str4);
      return;
    }
    if (str1.equalsIgnoreCase(str4))
    {
      _setDomainUrl(paramContext, str2);
      return;
    }
    _setDomainUrl(paramContext, str2);
  }
  
  private void _sendRequestAsync(final String paramString, final onMessageReceivedListener paramOnMessageReceivedListener)
  {
    new Thread()
    {
      public void run()
      {
        try
        {
          Object localObject1 = new DefaultHttpClient();
          Object localObject2 = new HttpGet(paramString);
          ((HttpGet)localObject2).setHeader("Cache-Control", "no-cache,no-store");
          localObject1 = ((HttpClient)localObject1).execute((HttpUriRequest)localObject2);
          if (((HttpResponse)localObject1).getStatusLine().getStatusCode() == 200)
          {
            localObject1 = ((HttpResponse)localObject1).getEntity();
            if (localObject1 != null)
            {
              localObject1 = new JSONObject(EntityUtils.toString((HttpEntity)localObject1));
              long l = ((JSONObject)localObject1).getLong("timestamp");
              PullServerClient.this._setLastRequestTime(PullServerClient.this._context, l);
              localObject1 = ((JSONObject)localObject1).getJSONArray("data");
              if (((JSONArray)localObject1).length() > 0)
              {
                localObject2 = new PullServerClient.Response[((JSONArray)localObject1).length()];
                int i = 0;
                while (i < ((JSONArray)localObject1).length())
                {
                  JSONObject localJSONObject = ((JSONArray)localObject1).getJSONObject(i);
                  localObject2[i] = new PullServerClient.Response(PullServerClient.this);
                  localObject2[i].url = localJSONObject.getString("data");
                  localObject2[i].message = localJSONObject.getString("message");
                  localObject2[i].title = localJSONObject.getString("title");
                  i += 1;
                }
                paramOnMessageReceivedListener.onMessage((PullServerClient.Response[])localObject2);
              }
            }
          }
          else
          {
            PullServerClient.this._rotateDomainUrls(PullServerClient.this._context);
            return;
          }
        }
        catch (Exception localException)
        {
          localException.printStackTrace();
        }
      }
    }.start();
  }
  
  private void _setDomainUrl(Context paramContext, String paramString)
  {
    paramContext.getSharedPreferences("AppsgeyserPrefs", 0).edit().putString("domain_url", paramString).commit();
  }
  
  private void _setLastRequestTime(Context paramContext, long paramLong)
  {
    paramContext.getSharedPreferences("AppsgeyserPrefs", 0).edit().putLong("last_pull_request_time", paramLong).commit();
  }
  
  public void tryLoadMessageAsync()
  {
    try
    {
      WebWidgetConfigutation localWebWidgetConfigutation = WebWidgetConfigurationManager.getInstance(this._context).loadConfiguration(this._context);
      String str1 = _getDomainUrl(this._context);
      String str2 = this._context.getString(2131230766);
      String str3 = localWebWidgetConfigutation.getAppGuid();
      _sendRequestAsync(str1 + "get_message.php?app_id=" + localWebWidgetConfigutation.getApplicationId() + "&name=" + URLEncoder.encode(localWebWidgetConfigutation.getWidgetName(), "utf-8") + "&last_request_timestamp=" + _getLastRequestTime(this._context) + "&guid=" + URLEncoder.encode(str3) + "&v=" + URLEncoder.encode(str2), this._listener);
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public class Response
  {
    String message = "";
    String title = "";
    String url = "";
    
    public Response() {}
  }
  
  public static abstract interface onMessageReceivedListener
  {
    public abstract void onMessage(PullServerClient.Response[] paramArrayOfResponse);
  }
}
