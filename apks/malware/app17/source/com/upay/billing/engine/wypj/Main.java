package com.upay.billing.engine.wypj;

import android.annotation.SuppressLint;
import android.util.Log;
import com.upay.billing.MtContext;
import com.upay.billing.UpayContext;
import com.upay.billing.UpayCore;
import com.upay.billing.bean.Cmd;
import com.upay.billing.bean.Op;
import com.upay.billing.bean.Trade;
import com.upay.billing.engine.CommonEngine;
import com.upay.billing.utils.Json;
import com.upay.billing.utils.Util;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class Main
  extends CommonEngine
{
  private static final String TAG = "wypj-Main";
  private static final String confirmNum = "1065889923";
  private static final String loginUrl = "http://$ip/cmcc/g/online/s2sAutoRegist?imei=$imei&imsi=$imsi&chargeId=$chargeId&pid=$pid&channelId=$channelId&userToken=$userToken&payId=$payId&version=$version";
  private static final String queryUrl = "http://$ip:10789/cmcc/g/online/s2sAutoChargeSMS?taskId=$taskId&pid=$pid&version=$version";
  private static final String registrationNum = "10658422";
  private List<String> confirmFail;
  private int count = 0;
  private String ip2 = null;
  private List<String> regFail;
  private List<String> regSmsFail;
  private List<String> reqFail;
  private int retry = 2;
  private List<String> sendFail;
  private List<String> sendSucc;
  private String taskId = null;
  private String userToken = "";
  
  public Main() {}
  
  private void confirmPay(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, Trade paramTrade, Cmd paramCmd, Json paramJson1, Json paramJson2, Json paramJson3, int paramInt1, String paramString7, String paramString8, int paramInt2)
  {
    Util.addTask(new Main.2(this, paramString5, paramString6, paramString1, paramString2, paramInt2, paramString3, paramTrade, paramString4, paramCmd, paramJson2, paramString7, paramJson3, paramInt1, paramString8, paramJson1));
  }
  
  public void brushes(String paramString)
  {
    Util.addTask(new Main.3(this, paramString));
  }
  
  public Op getOp()
  {
    return Op.CMCC;
  }
  
  public boolean hasCustomConfirmUi()
  {
    return false;
  }
  
  public boolean isAvailable(Op paramOp, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    return (paramOp == Op.CMCC) && (paramBoolean1) && (paramBoolean2);
  }
  
  public boolean isComposable()
  {
    return true;
  }
  
  @SuppressLint({"DefaultLocale"})
  public int onMtAction(MtContext paramMtContext, Json paramJson, String paramString1, String paramString2, String[] paramArrayOfString)
  {
    Log.i("wypj-Main", "onMtAction: exec=" + paramJson.asObject() + ",mtNum=" + paramString1 + ",mtMsg=" + paramString2);
    switch (Main.4.$SwitchMap$com$upay$billing$engine$wypj$Main$ExecType[Main.ExecType.valueOf(paramJson.getStr("type").toUpperCase()).ordinal()])
    {
    default: 
      return 0;
    case 1: 
      return 524288;
    case 2: 
      return 65736;
    }
    return 0x10000 | paramJson.getInt("code");
  }
  
  public void pay(Trade paramTrade, List<Cmd> paramList)
  {
    Log.i("wypj-Main", "pay");
    this.regFail = new ArrayList();
    this.sendSucc = new ArrayList();
    this.sendFail = new ArrayList();
    this.confirmFail = new ArrayList();
    this.reqFail = new ArrayList();
    this.regSmsFail = new ArrayList();
    this.count = 0;
    Iterator localIterator = Util.safeIter(paramTrade.subTrades).iterator();
    while (localIterator.hasNext())
    {
      Object localObject1 = (Json)localIterator.next();
      this.count += 1;
      int j = this.count;
      int k = paramTrade.subTrades.length();
      String str1 = ((Json)localObject1).getStr("sn");
      Object localObject2 = paramList.iterator();
      Cmd localCmd;
      do
      {
        boolean bool = ((Iterator)localObject2).hasNext();
        localCmd = null;
        if (!bool) {
          break;
        }
        localCmd = (Cmd)((Iterator)localObject2).next();
      } while (!localCmd.key.equals(((Json)localObject1).getStr("cmd_key")));
      Json localJson1 = Json.parse(localCmd.msg);
      localObject1 = localJson1.getStr("version");
      localObject2 = localJson1.getStr("ip");
      String str2 = localJson1.getStr("mode");
      localJson1 = localJson1.getArray("params");
      Json localJson2 = Json.createObject(new Object[] { "trade_id", paramTrade.id, "goods_key", paramTrade.goodsKey, "cmd_key", localCmd.key, "bt_key", this.key, "target", "", "sn", str1, "request", "", "response", "" });
      Json localJson3 = Json.createObject(new Object[] { "trade_id", paramTrade.id, "goods_key", paramTrade.goodsKey, "cmd_key", localCmd.key, "bt_key", this.key, "description", "wypj", "mt_msg", "", "mt_num", "", "sn", str1 });
      int m = localJson1.length();
      int i = 0;
      while (i < m)
      {
        Object localObject4 = localJson1.getObjectAt(i);
        Object localObject3 = this.core.getUpayContext();
        String str3 = Util.ifEmpty(((UpayContext)localObject3).imsi, "");
        localObject3 = Util.ifEmpty(((UpayContext)localObject3).imei, "");
        String str4 = ((Json)localObject4).getStr("chargeId");
        String str5 = ((Json)localObject4).getStr("pid");
        localObject4 = ((Json)localObject4).getStr("channelId");
        String str6 = "00" + Util.shortenSn(str1, true);
        userRegister("http://$ip/cmcc/g/online/s2sAutoRegist?imei=$imei&imsi=$imsi&chargeId=$chargeId&pid=$pid&channelId=$channelId&userToken=$userToken&payId=$payId&version=$version".replace("$ip", (CharSequence)localObject2).replace("$imsi", str3).replace("$imei", (CharSequence)localObject3).replace("$chargeId", str4).replace("$userToken", this.userToken).replace("$pid", str5).replace("$channelId", (CharSequence)localObject4).replace("$payId", str6).replace("$version", (CharSequence)localObject1), paramTrade, j, str5, (String)localObject1, str4, str1, localCmd, localJson1, localJson2, localJson3, k, str2, this.retry);
        i += 1;
      }
    }
  }
  
  public void userRegister(String paramString1, Trade paramTrade, int paramInt1, String paramString2, String paramString3, String paramString4, String paramString5, Cmd paramCmd, Json paramJson1, Json paramJson2, Json paramJson3, int paramInt2, String paramString6, int paramInt3)
  {
    Util.addTask(new Main.1(this, paramString1, paramInt1, paramString2, paramString3, paramString4, paramString5, paramTrade, paramCmd, paramJson1, paramJson2, paramJson3, paramInt2, paramString6, paramInt3));
  }
}
