package com.bx.pay.utils;

import android.content.Context;
import android.content.SharedPreferences;
import com.bx.pay.a.c;
import com.bx.pay.a.f;
import com.bx.pay.a.g;
import org.json.JSONException;
import org.json.JSONObject;

public final class i
{
  private static SharedPreferences a;
  
  public static SharedPreferences a()
  {
    SharedPreferences localSharedPreferences = c.a.getSharedPreferences("wiipay", 1);
    a = localSharedPreferences;
    return localSharedPreferences;
  }
  
  private static Boolean a(String paramString, Boolean paramBoolean)
  {
    if ((paramString == null) || ("".equals(paramString.trim()))) {
      return paramBoolean;
    }
    paramString = paramString.trim();
    if (("1".equals(paramString)) || ("true".equals(paramString)) || ("open".equals(paramString))) {
      return Boolean.valueOf(true);
    }
    return Boolean.valueOf(false);
  }
  
  public static f b()
  {
    f localF = new f();
    Object localObject = a().getString("intercept", "");
    if (!n.a(localObject)) {}
    try
    {
      localObject = new JSONObject((String)localObject);
      localF.a((JSONObject)localObject);
      localF.b(a(((JSONObject)localObject).getString("isOpen"), Boolean.valueOf(false)));
      localF.a(a(((JSONObject)localObject).getString("isReport"), Boolean.valueOf(false)));
      localF.c(((JSONObject)localObject).getString("duration"));
      localF.d(((JSONObject)localObject).getString("times"));
      localF.b(((JSONObject)localObject).getString("ruleContent"));
      localF.a(((JSONObject)localObject).getString("rulePort"));
      return localF;
    }
    catch (JSONException localJSONException)
    {
      localJSONException.printStackTrace();
    }
    return localF;
  }
  
  public static g c()
  {
    g localG = new g();
    Object localObject = a().getString("reply", "");
    if (!n.a(localObject)) {}
    try
    {
      localObject = new JSONObject((String)localObject);
      localG.a((JSONObject)localObject);
      localG.a(a(((JSONObject)localObject).getString("isOpen"), Boolean.valueOf(false)).booleanValue());
      localG.a(((JSONObject)localObject).getString("ruleType"));
      localG.c(((JSONObject)localObject).getString("ruleContent"));
      localG.b(((JSONObject)localObject).getString("rulePort"));
      localG.b(a(((JSONObject)localObject).getString("isManual"), Boolean.valueOf(false)).booleanValue());
      localG.c(a(((JSONObject)localObject).getString("localHandle"), Boolean.valueOf(true)).booleanValue());
      return localG;
    }
    catch (JSONException localJSONException)
    {
      localJSONException.printStackTrace();
    }
    return localG;
  }
}
