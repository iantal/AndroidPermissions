package com.bx.pay.netx.core.b;

import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.BitmapFactory;
import android.graphics.BitmapFactory.Options;
import com.bx.pay.netx.core.aa;
import com.bx.pay.netx.core.ab;
import com.bx.pay.netx.core.ad;
import com.bx.pay.netx.core.af;
import com.bx.pay.netx.core.u;
import com.bx.pay.netx.core.w;

public final class b
  extends ab
{
  private static final Object d = new Object();
  private Bitmap.Config a;
  private int b;
  private int c;
  
  private static int a(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    int i;
    if ((paramInt1 == 0) && (paramInt2 == 0)) {
      i = paramInt3;
    }
    double d1;
    do
    {
      do
      {
        return i;
        if (paramInt1 == 0) {
          return (int)(paramInt2 / paramInt4 * paramInt3);
        }
        i = paramInt1;
      } while (paramInt2 == 0);
      d1 = paramInt4 / paramInt3;
      i = paramInt1;
    } while (paramInt1 * d1 <= paramInt2);
    return (int)(paramInt2 / d1);
  }
  
  private static int b(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    double d1 = Math.min(paramInt1 / paramInt3, paramInt2 / paramInt4);
    for (float f = 1.0F;; f *= 2.0F) {
      if (f * 2.0F > d1) {
        return (int)f;
      }
    }
  }
  
  protected final af a(u paramU)
  {
    for (;;)
    {
      synchronized (d)
      {
        try
        {
          Object localObject1 = paramU.b;
          Object localObject2 = new BitmapFactory.Options();
          if ((this.b == 0) && (this.c == 0))
          {
            ((BitmapFactory.Options)localObject2).inPreferredConfig = this.a;
            localObject1 = BitmapFactory.decodeByteArray((byte[])localObject1, 0, localObject1.length, (BitmapFactory.Options)localObject2);
            if (localObject1 != null) {
              break label283;
            }
            localObject1 = af.a(new aa(paramU));
            paramU = (u)localObject1;
            return paramU;
          }
          ((BitmapFactory.Options)localObject2).inJustDecodeBounds = true;
          BitmapFactory.decodeByteArray((byte[])localObject1, 0, localObject1.length, (BitmapFactory.Options)localObject2);
          int i = ((BitmapFactory.Options)localObject2).outWidth;
          int j = ((BitmapFactory.Options)localObject2).outHeight;
          int k = a(this.b, this.c, i, j);
          int m = a(this.c, this.b, j, i);
          ((BitmapFactory.Options)localObject2).inJustDecodeBounds = false;
          ((BitmapFactory.Options)localObject2).inSampleSize = b(i, j, k, m);
          localObject1 = BitmapFactory.decodeByteArray((byte[])localObject1, 0, localObject1.length, (BitmapFactory.Options)localObject2);
          if ((localObject1 != null) && ((((Bitmap)localObject1).getWidth() > k) || (((Bitmap)localObject1).getHeight() > m)))
          {
            localObject2 = Bitmap.createScaledBitmap((Bitmap)localObject1, k, m, true);
            ((Bitmap)localObject1).recycle();
            localObject1 = localObject2;
            continue;
            paramU = finally;
          }
        }
        catch (OutOfMemoryError localOutOfMemoryError)
        {
          w.c("Caught OOM for %d byte image, url=%s", new Object[] { Integer.valueOf(paramU.b.length), d() });
          paramU = af.a(new aa(localOutOfMemoryError));
          return paramU;
        }
      }
      continue;
      label283:
      af localAf = af.a(localOutOfMemoryError, paramU);
      paramU = localAf;
    }
  }
  
  public final ad o()
  {
    return ad.a;
  }
}
