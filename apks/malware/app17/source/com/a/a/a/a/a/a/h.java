package com.a.a.a.a.a.a;

import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;
import com.a.a.a.a.b;
import com.a.a.c.c;
import com.a.a.c.e;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;

public class h
  implements b
{
  public static final Bitmap.CompressFormat a = Bitmap.CompressFormat.PNG;
  protected a b;
  protected final com.a.a.a.a.b.a c;
  protected int d = 32768;
  protected Bitmap.CompressFormat e = a;
  protected int f = 100;
  private File g;
  
  public h(File paramFile, com.a.a.a.a.b.a paramA, long paramLong, int paramInt)
  {
    if (paramFile == null) {
      throw new IllegalArgumentException("cacheDir argument must be not null");
    }
    if (paramLong < 0L) {
      throw new IllegalArgumentException("cacheMaxSize argument must be positive number");
    }
    if (paramInt < 0) {
      throw new IllegalArgumentException("cacheMaxFileCount argument must be positive number");
    }
    if (paramA == null) {
      throw new IllegalArgumentException("fileNameGenerator argument must be not null");
    }
    if (paramLong == 0L) {
      paramLong = Long.MAX_VALUE;
    }
    for (;;)
    {
      if (paramInt == 0) {
        paramInt = Integer.MAX_VALUE;
      }
      for (;;)
      {
        this.c = paramA;
        a(paramFile, this.g, paramLong, paramInt);
        return;
      }
    }
  }
  
  private void a(File paramFile1, File paramFile2, long paramLong, int paramInt)
  {
    try
    {
      this.b = a.a(paramFile1, 1, 1, paramLong, paramInt);
      return;
    }
    catch (IOException paramFile1)
    {
      do
      {
        e.a(paramFile1);
      } while (paramFile2 == null);
      a(paramFile2, null, paramLong, paramInt);
    }
  }
  
  private String b(String paramString)
  {
    return this.c.a(paramString);
  }
  
  public File a(String paramString)
  {
    try
    {
      paramString = this.b.a(b(paramString));
      if (paramString == null) {
        return null;
      }
      paramString = paramString.a(0);
      return paramString;
    }
    catch (IOException paramString)
    {
      e.a(paramString);
    }
    return null;
  }
  
  public void a(File paramFile)
  {
    this.g = paramFile;
  }
  
  public boolean a(String paramString, Bitmap paramBitmap)
  {
    d localD = this.b.b(b(paramString));
    if (localD == null) {
      return false;
    }
    paramString = new BufferedOutputStream(localD.a(0), this.d);
    boolean bool;
    try
    {
      bool = paramBitmap.compress(this.e, this.f, paramString);
      c.a(paramString);
      if (bool)
      {
        localD.a();
        return bool;
      }
    }
    finally
    {
      c.a(paramString);
    }
    localD.b();
    return bool;
  }
  
  public boolean a(String paramString, InputStream paramInputStream, com.a.a.c.d paramD)
  {
    paramString = this.b.b(b(paramString));
    if (paramString == null) {
      return false;
    }
    BufferedOutputStream localBufferedOutputStream = new BufferedOutputStream(paramString.a(0), this.d);
    try
    {
      boolean bool = c.a(paramInputStream, localBufferedOutputStream, paramD, this.d);
      c.a(localBufferedOutputStream);
      if (bool)
      {
        paramString.a();
        return bool;
      }
      paramString.b();
      return bool;
    }
    finally
    {
      c.a(localBufferedOutputStream);
      paramString.b();
    }
  }
}
