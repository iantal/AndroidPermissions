package com.baidu.mobads.a;

import android.content.Context;
import android.os.Build;
import android.os.Build.VERSION;
import java.io.File;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.jar.Attributes;
import java.util.jar.JarFile;
import java.util.jar.Manifest;
import org.apache.http.client.utils.URLEncodedUtils;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONObject;

final class c
  extends Thread
{
  c(File paramFile, Context paramContext) {}
  
  public void run()
  {
    try
    {
      d.a(new Object[] { "start version check in ", Integer.valueOf(10), "s" });
      sleep(10000L);
      d.a(">>>start version check");
      double d1 = 0.0D;
      try
      {
        d2 = Double.parseDouble(new JarFile(this.a).getManifest().getMainAttributes().getValue("Implementation-Version"));
        d1 = d2;
      }
      catch (Exception localException1)
      {
        for (;;)
        {
          double d2;
          Object localObject;
          d.a("baidu remote sdk is not ready");
        }
      }
      localObject = new ArrayList();
      ((List)localObject).add(new BasicNameValuePair("v", "" + d1));
      ((List)localObject).add(new BasicNameValuePair("tp", Build.MODEL));
      ((List)localObject).add(new BasicNameValuePair("os", "android"));
      ((List)localObject).add(new BasicNameValuePair("bdr", Build.VERSION.SDK));
      localObject = URLEncodedUtils.format((List)localObject, "utf-8");
      localObject = "http://mobads.baidu.com/ads/pa/" + a.g + "?" + (String)localObject;
      d.a(new Object[] { "update req url is:", localObject });
      localObject = b.a(this.b, (String)localObject);
      d.a(new Object[] { "update ret url is:", localObject });
      localObject = new JSONObject((String)localObject);
      d2 = ((JSONObject)localObject).getDouble("version");
      localObject = ((JSONObject)localObject).getString("url");
      d.a(new Object[] { "update serverVersion", Double.valueOf(d2), "localVersion", Double.valueOf(d1), "downloadUrl", localObject });
      if ((d2 > d1) && (!"".equals(localObject)))
      {
        b.b(false, this.b, new URL((String)localObject), this.a.getName());
        return;
      }
    }
    catch (Exception localException2)
    {
      b.a(false);
      d.b(localException2);
    }
  }
}
