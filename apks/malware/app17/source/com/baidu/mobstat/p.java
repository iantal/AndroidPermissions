package com.baidu.mobstat;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;
import org.apache.http.util.EntityUtils;
import org.json.JSONException;
import org.json.JSONObject;

public class p
{
  public static long a = 256L;
  public static String b = " HTTP.UTF_8";
  
  public static n a(String paramString1, String paramString2)
  {
    m.a().a(new Object[] { "Post_URL : " + paramString1 });
    localN = new n();
    Object localObject = new BasicHttpParams();
    HttpConnectionParams.setConnectionTimeout((HttpParams)localObject, 3000);
    HttpConnectionParams.setSoTimeout((HttpParams)localObject, 5000);
    localObject = new DefaultHttpClient((HttpParams)localObject);
    paramString1 = new HttpPost(paramString1);
    try
    {
      StringEntity localStringEntity = new StringEntity("content=" + paramString2, "UTF-8");
      m.a().a(new Object[] { "postdata content : " + paramString2 });
      localStringEntity.setContentType("application/x-www-form-urlencoded");
      paramString1.setEntity(localStringEntity);
      paramString1 = ((HttpClient)localObject).execute(paramString1);
      i = (int)paramString1.getEntity().getContentLength();
      m.a().a(new Object[] { "Response_Length : " + i });
      i = paramString1.getStatusLine().getStatusCode();
      m.a().a(new Object[] { "Status : " + i });
      paramString1 = EntityUtils.toString(paramString1.getEntity());
      m.a().a(new Object[] { "Return_Content : " + paramString1 });
      switch (i)
      {
      }
    }
    catch (Exception paramString1)
    {
      for (;;)
      {
        try
        {
          int i;
          localN.a(Integer.parseInt(new JSONObject(paramString1).getString("errNum")));
          localN.a(true);
          localN.a(paramString1);
          continue;
          paramString1 = paramString1;
          paramString2 = new JSONObject();
          paramString1.printStackTrace();
          try
          {
            paramString2.put("err", paramString1.toString());
            paramString1 = paramString2.toString();
            localN.a(false);
            localN.a(paramString1);
          }
          catch (JSONException paramString1)
          {
            paramString1.printStackTrace();
          }
        }
        catch (Exception paramString2)
        {
          m.a().b("Parse Response error!");
          paramString1 = paramString2.toString();
          localN.a(false);
          paramString2.printStackTrace();
        }
      }
    }
    m.a().b("Stauts : " + i + "; RetrunConetent : " + paramString1);
    localN.a(false);
    localN.a(paramString1);
    m.a().a(new Object[] { "ServerResponse : " + localN.c() });
    return localN;
  }
}
