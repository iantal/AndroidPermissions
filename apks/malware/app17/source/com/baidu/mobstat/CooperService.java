package com.baidu.mobstat;

import android.content.Context;
import android.os.Build;
import android.os.Build.VERSION;
import android.telephony.TelephonyManager;
import java.util.Date;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.json.JSONObject;

public class CooperService
  extends BasicStoreToolsBase
{
  private static r a = new r();
  private static JSONObject b = new JSONObject();
  private static String c = "activehead";
  private static HashMap<String, Object> d = new HashMap();
  
  public CooperService() {}
  
  static r a()
  {
    return a;
  }
  
  private static String a(Context paramContext)
  {
    String str = ao.g(paramContext);
    paramContext = str;
    if (str != null) {
      paramContext = str.replaceAll(":", "");
    }
    return paramContext;
  }
  
  private static String a(String paramString, Context paramContext)
  {
    String str;
    if (paramString == null) {
      str = null;
    }
    do
    {
      return str;
      str = paramString;
    } while (!paramString.equals("000000000000000"));
    paramString = a(paramContext);
    au.a().a("statsdk", "imei=null,mac=" + paramString);
    return paramString;
  }
  
  public static boolean checkCellLocationSetting(Context paramContext)
  {
    paramContext = ao.a(paramContext, "BaiduMobAd_CELL_LOCATION");
    return (paramContext == null) || (!paramContext.toLowerCase().equals("false"));
  }
  
  public static boolean checkGPSLocationSetting(Context paramContext)
  {
    paramContext = ao.a(paramContext, "BaiduMobAd_GPS_LOCATION");
    return (paramContext == null) || (!paramContext.toLowerCase().equals("false"));
  }
  
  public static boolean checkWifiLocationSetting(Context paramContext)
  {
    paramContext = ao.a(paramContext, "BaiduMobAd_WIFI_LOCATION");
    return (paramContext == null) || (!paramContext.toLowerCase().equals("false"));
  }
  
  public static String getAppChannel(Context paramContext)
  {
    try
    {
      if ((a.j == null) || (a.j.equals("")))
      {
        boolean bool = BasicStoreTools.getInstance().getAppChannelWithCode(paramContext);
        if (bool) {
          a.j = BasicStoreTools.getInstance().getAppChannelWithPreference(paramContext);
        }
        if ((!bool) || (a.j == null) || (a.j.equals(""))) {
          a.j = ao.a(paramContext, "BaiduMobAd_CHANNEL");
        }
      }
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        au.a().a(new Object[] { paramContext });
      }
    }
    return a.j;
  }
  
  public static String getAppKey(Context paramContext)
  {
    if (a.c == null) {
      a.c = ao.a(paramContext, "BaiduMobAd_STAT_ID");
    }
    return a.c;
  }
  
  public static int getAppVersionCode(Context paramContext)
  {
    if (a.e == -1) {
      a.e = ao.c(paramContext);
    }
    return a.e;
  }
  
  public static String getAppVersionName(Context paramContext)
  {
    if ((a.f == null) || ("".equals(a.f))) {
      a.f = ao.d(paramContext);
    }
    return a.f;
  }
  
  public static String getCUID(Context paramContext, boolean paramBoolean)
  {
    if (a.d == null)
    {
      a.d = BasicStoreTools.getInstance().getGenerateDeviceCUID(paramContext);
      if ((a.d != null) && (!"".equalsIgnoreCase(a.d))) {}
    }
    try
    {
      a.d = c.a(paramContext);
      Matcher localMatcher = Pattern.compile("\\s*|\t|\r|\n").matcher(a.d);
      a.d = localMatcher.replaceAll("");
      a.d = as.a(ap.a("30212102dicudiab", "30212102dicudiab", a.d.getBytes()), "utf-8");
      au.a().a("sdkstat", "加密=mHeadObject.cuid=" + a.d);
      BasicStoreTools.getInstance().setGenerateDeviceCUID(paramContext, a.d);
      if (paramBoolean) {
        return a.d;
      }
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        au.a().c(new Object[] { "sdkstat", paramContext.getMessage() });
      }
      try
      {
        if (a.d != null)
        {
          paramContext = new String(ap.b("30212102dicudiab", "30212102dicudiab", as.a(a.d.getBytes())));
          return paramContext;
        }
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
      }
    }
    return null;
  }
  
  public static String getDeviceId(TelephonyManager paramTelephonyManager, Context paramContext)
  {
    if (paramTelephonyManager == null) {
      return a.g;
    }
    Object localObject = a.g;
    Pattern localPattern;
    if ((localObject == null) || (((String)localObject).equals(""))) {
      localPattern = Pattern.compile("\\s*|\t|\r|\n");
    }
    try
    {
      paramTelephonyManager = localPattern.matcher(paramTelephonyManager.getDeviceId()).replaceAll("");
      localObject = paramTelephonyManager;
      paramTelephonyManager = a(paramTelephonyManager, paramContext);
      localObject = paramTelephonyManager;
    }
    catch (Exception paramTelephonyManager)
    {
      try
      {
        paramTelephonyManager = new String(ap.b("30212102dicudiab", "30212102dicudiab", as.a(a.g.getBytes())));
        au.a().a("sdkstat", "device_id=" + paramTelephonyManager);
        return a.g;
        paramTelephonyManager = paramTelephonyManager;
        au.a().a(new Object[] { paramTelephonyManager });
      }
      catch (Exception paramTelephonyManager)
      {
        for (;;)
        {
          paramTelephonyManager.printStackTrace();
        }
      }
    }
    paramTelephonyManager = (TelephonyManager)localObject;
    if (localObject == null) {
      paramTelephonyManager = a(paramContext);
    }
    if (paramTelephonyManager != null)
    {
      localObject = paramTelephonyManager;
      if (!paramTelephonyManager.equals("000000000000000")) {}
    }
    else
    {
      localObject = BasicStoreTools.getInstance().getGenerateDeviceId(paramContext);
    }
    if (localObject != null)
    {
      paramTelephonyManager = (TelephonyManager)localObject;
      if (!((String)localObject).equals("000000000000000")) {}
    }
    else
    {
      paramTelephonyManager = new Date().getTime() + "";
      paramTelephonyManager = "hol" + paramTelephonyManager.hashCode() + "mes";
      BasicStoreTools.getInstance().setGenerateDeviceId(paramContext, paramTelephonyManager);
      au.a().a("statsdk", "设备id为空，系统生成id =" + paramTelephonyManager);
    }
    a.g = paramTelephonyManager;
    a.g = getSecretValue(a.g);
    au.a().a("sdkstat", "加密=mHeadObject.device_id=" + a.g);
  }
  
  public static String getLinkedWay(Context paramContext)
  {
    if ((a.p == null) || ("".equals(a.p))) {
      a.p = ao.i(paramContext);
    }
    return a.p;
  }
  
  public static String getMTJSDKVersion()
  {
    return "3.4.2.2";
  }
  
  public static String getMacID(Context paramContext)
  {
    String str;
    if ((a.q == null) || ("".equals(a.q)))
    {
      str = BasicStoreTools.getInstance().getAppDeviceMac(paramContext);
      if (str != null) {
        break label119;
      }
      str = a(paramContext);
      if (str != null)
      {
        a.q = getSecretValue(str);
        au.a().a("sdkstat", "加密=mHeadObject.mHeadObject.mac_addr=" + a.q);
        if (a.q != "") {
          BasicStoreTools.getInstance().setAppDeviceMac(paramContext, a.q);
        }
      }
    }
    for (;;)
    {
      return a.q;
      label119:
      a.q = str;
    }
  }
  
  public static String getOSVersion()
  {
    if ((a.b == null) || ("".equals(a.b))) {
      a.b = Build.VERSION.SDK;
    }
    return a.b;
  }
  
  public static String getOperator(TelephonyManager paramTelephonyManager)
  {
    if ((a.k == null) || ("".equals(a.k))) {
      a.k = paramTelephonyManager.getNetworkOperator();
    }
    return a.k;
  }
  
  public static String getPhoneModel()
  {
    if ((a.l == null) || ("".equals(a.l))) {
      a.l = Build.MODEL;
    }
    return a.l;
  }
  
  public static String getSecretValue(String paramString)
  {
    str = null;
    try
    {
      paramString = as.a(ap.a("30212102dicudiab", "30212102dicudiab", paramString.getBytes()), "utf-8");
      str = paramString;
      au.a().a("sdkstat", "加密=secretValue=" + paramString);
    }
    catch (Exception paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
        paramString = str;
      }
    }
    str = paramString;
    if (paramString == null) {
      str = "";
    }
    return str;
  }
  
  public static int getTagValue()
  {
    return 2;
  }
}
