package com.snowfish.cn.ganga.offline.basic;

public abstract interface IPR
{
  public abstract byte[] byteArray();
  
  public abstract int getPos();
  
  public abstract boolean isBad();
  
  public abstract void read(byte[] paramArrayOfByte, int paramInt);
  
  public abstract void read(byte[] paramArrayOfByte, int paramInt1, int paramInt2);
  
  public abstract boolean readBoolean();
  
  public abstract int readI16();
  
  public abstract int readI16LE();
  
  public abstract int readI32();
  
  public abstract int readI32LE();
  
  public abstract long readI64();
  
  public abstract long readI64LE();
  
  public abstract int readI8();
  
  public abstract int readU16();
  
  public abstract int readU16LE();
  
  public abstract long readU32();
  
  public abstract long readU32LE();
  
  public abstract long readU64();
  
  public abstract long readU64LE();
  
  public abstract int readU8();
  
  public abstract String readUTF16AsString(int paramInt1, int paramInt2);
  
  public abstract String readUTF16AsStringWithByteLength(int paramInt1, int paramInt2);
  
  public abstract String readUTF16AsStringWithLength(int paramInt);
  
  public abstract String readUTF16AsStringWithLength(int paramInt1, int paramInt2);
  
  public abstract String readUTF8AsString(int paramInt1, int paramInt2);
  
  public abstract String readUTF8AsStringWithLength(int paramInt);
  
  public abstract String readUTF8AsStringWithLength(int paramInt1, int paramInt2);
  
  public abstract int remain();
  
  public abstract void seek(int paramInt1, int paramInt2);
  
  public abstract void setBad(boolean paramBoolean);
  
  public abstract void skip(int paramInt);
  
  public abstract void skipWithByteLength(int paramInt);
  
  public abstract void skipWithUTF16Length(int paramInt);
}
