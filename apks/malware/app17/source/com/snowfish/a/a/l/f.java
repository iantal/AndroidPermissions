package com.snowfish.a.a.l;

import android.content.Context;
import android.os.Environment;
import dalvik.system.DexClassLoader;
import java.io.File;

public class f
{
  public f() {}
  
  public static ClassLoader a(File paramFile, Context paramContext)
  {
    String str = paramFile.getAbsolutePath();
    if (paramContext != null)
    {
      paramFile = paramContext.getDir("_cc", 0);
      paramFile.mkdirs();
      paramFile = paramFile.getAbsolutePath();
    }
    for (;;)
    {
      a(paramFile);
      return new DexClassLoader(str, paramFile, null, f.class.getClassLoader());
      paramContext = new File(Environment.getExternalStorageDirectory().getPath());
      if ((paramContext.exists()) && (paramContext.isDirectory()))
      {
        paramFile = paramContext;
        if (paramContext.canWrite()) {}
      }
      else
      {
        paramContext = new File("/mnt/sdcard");
        paramFile = paramContext;
        if (paramContext.exists())
        {
          paramFile = paramContext;
          if (paramContext.isDirectory())
          {
            paramContext.canWrite();
            paramFile = paramContext;
          }
        }
      }
      paramContext = new File(paramFile, "SnowfishGames");
      if ((paramFile.exists()) && (paramFile.isFile())) {
        paramFile.delete();
      }
      if (((!paramFile.exists()) || (!paramFile.isDirectory()) || (!paramFile.canWrite())) && (!paramContext.mkdirs())) {
        paramFile = null;
      } else {
        paramFile = paramContext.getAbsolutePath();
      }
    }
  }
  
  private static void a(File paramFile)
  {
    for (;;)
    {
      File[] arrayOfFile;
      int j;
      int i;
      try
      {
        if (!paramFile.exists()) {
          return;
        }
        if (paramFile.isDirectory())
        {
          arrayOfFile = paramFile.listFiles();
          if (arrayOfFile != null)
          {
            j = arrayOfFile.length;
            i = 0;
            break label87;
          }
        }
        paramFile.delete();
        return;
      }
      catch (Exception paramFile)
      {
        paramFile.printStackTrace();
        return;
      }
      label87:
      do
      {
        File localFile = arrayOfFile[i];
        if ((!localFile.getName().equals(".")) && (!localFile.getName().equals(".."))) {
          a(localFile);
        }
        i += 1;
      } while (i < j);
    }
  }
  
  private static void a(String paramString)
  {
    if (paramString == null) {}
    for (;;)
    {
      return;
      paramString = new File(paramString);
      if ((paramString.exists()) && (paramString.isDirectory()))
      {
        paramString = paramString.listFiles();
        int j = paramString.length;
        int i = 0;
        while (i < j)
        {
          a(paramString[i]);
          i += 1;
        }
      }
    }
  }
}
