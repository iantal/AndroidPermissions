package com.baidu.mobads;

import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.content.Intent;
import android.content.res.Configuration;
import android.content.res.Resources.Theme;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.os.Bundle;
import android.util.AttributeSet;
import android.view.ContextMenu;
import android.view.ContextMenu.ContextMenuInfo;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.View;
import android.view.WindowManager.LayoutParams;
import com.baidu.mobads.a.b;
import com.baidu.mobads.a.d;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;

public class AppActivity
  extends Activity
{
  private Object a;
  private Class b;
  private Method[] c = null;
  
  public AppActivity() {}
  
  private Method a(String paramString)
  {
    if (this.c == null) {}
    for (;;)
    {
      return null;
      Method[] arrayOfMethod = this.c;
      int j = arrayOfMethod.length;
      int i = 0;
      while (i < j)
      {
        Method localMethod = arrayOfMethod[i];
        if (localMethod.getName().equals(paramString))
        {
          localMethod.setAccessible(true);
          return localMethod;
        }
        i += 1;
      }
    }
  }
  
  private void a(String paramString, Object... paramVarArgs)
  {
    int i = 0;
    if (paramVarArgs != null) {}
    try
    {
      i = paramVarArgs.length;
      d.a(new Object[] { paramString, Integer.valueOf(i), paramVarArgs });
      paramString = a(paramString);
      if (paramString != null)
      {
        if ((paramVarArgs == null) || (paramVarArgs.length == 0))
        {
          paramString.invoke(this.a, new Object[0]);
          return;
        }
        paramString.invoke(this.a, paramVarArgs);
        return;
      }
    }
    catch (Exception paramString)
    {
      d.a(paramString);
    }
  }
  
  private boolean b(String paramString, Object... paramVarArgs)
  {
    if (paramVarArgs != null) {}
    for (;;)
    {
      try
      {
        i = paramVarArgs.length;
        d.a(new Object[] { paramString, Integer.valueOf(i), paramVarArgs });
        paramString = a(paramString);
        if (paramString != null)
        {
          if ((paramVarArgs == null) || (paramVarArgs.length == 0)) {
            return ((Boolean)paramString.invoke(this.a, new Object[0])).booleanValue();
          }
          boolean bool = ((Boolean)paramString.invoke(this.a, paramVarArgs)).booleanValue();
          return bool;
        }
      }
      catch (Exception paramString)
      {
        d.a(paramString);
      }
      return false;
      int i = 0;
    }
  }
  
  private Object c(String paramString, Object... paramVarArgs)
  {
    int i = 0;
    if (paramVarArgs != null) {}
    try
    {
      i = paramVarArgs.length;
      d.a(new Object[] { paramString, Integer.valueOf(i), paramVarArgs });
      paramString = a(paramString);
      if (paramString != null)
      {
        if ((paramVarArgs == null) || (paramVarArgs.length == 0)) {
          return paramString.invoke(this.a, new Object[0]);
        }
        paramString = paramString.invoke(this.a, paramVarArgs);
        return paramString;
      }
    }
    catch (Exception paramString)
    {
      d.a(paramString);
    }
    return null;
  }
  
  public boolean dispatchKeyEvent(KeyEvent paramKeyEvent)
  {
    if (b("dispatchKeyEvent", new Object[] { paramKeyEvent })) {
      return true;
    }
    return super.dispatchKeyEvent(paramKeyEvent);
  }
  
  public boolean dispatchTouchEvent(MotionEvent paramMotionEvent)
  {
    if (b("dispatchTouchEvent", new Object[] { paramMotionEvent })) {
      return true;
    }
    return super.dispatchTouchEvent(paramMotionEvent);
  }
  
  public boolean dispatchTrackballEvent(MotionEvent paramMotionEvent)
  {
    if (b("dispatchTrackballEvent", new Object[] { paramMotionEvent })) {
      return true;
    }
    return super.dispatchTrackballEvent(paramMotionEvent);
  }
  
  protected void finalize()
  {
    a("finalize", new Object[0]);
    super.finalize();
  }
  
  protected void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    a("onActivityResult", new Object[] { Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntent });
    super.onActivityResult(paramInt1, paramInt2, paramIntent);
  }
  
  protected void onApplyThemeResource(Resources.Theme paramTheme, int paramInt, boolean paramBoolean)
  {
    a("onApplyThemeResource", new Object[] { paramTheme, Integer.valueOf(paramInt), Boolean.valueOf(paramBoolean) });
    super.onApplyThemeResource(paramTheme, paramInt, paramBoolean);
  }
  
  protected void onChildTitleChanged(Activity paramActivity, CharSequence paramCharSequence)
  {
    a("onChildTitleChanged", new Object[] { paramActivity, paramCharSequence });
    super.onChildTitleChanged(paramActivity, paramCharSequence);
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    a("onConfigurationChanged", new Object[] { paramConfiguration });
    super.onConfigurationChanged(paramConfiguration);
  }
  
  public void onContentChanged()
  {
    a("onContentChanged", new Object[0]);
    super.onContentChanged();
  }
  
  public boolean onContextItemSelected(MenuItem paramMenuItem)
  {
    if (b("onContextItemSelected", new Object[] { paramMenuItem })) {
      return true;
    }
    return super.onContextItemSelected(paramMenuItem);
  }
  
  public void onContextMenuClosed(Menu paramMenu)
  {
    a("onContextMenuClosed", new Object[] { paramMenu });
    super.onContextMenuClosed(paramMenu);
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    try
    {
      String str = getIntent().getExtras().getString("remote_activity");
      this.b = b.b(this, str);
      this.c = this.b.getDeclaredMethods();
      this.a = this.b.getConstructor(new Class[] { Activity.class }).newInstance(new Object[] { this });
      d.a(new Object[] { str, this.b, this.a });
      a("onCreate", new Object[] { paramBundle });
      return;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        d.b(localException);
      }
    }
  }
  
  public void onCreateContextMenu(ContextMenu paramContextMenu, View paramView, ContextMenu.ContextMenuInfo paramContextMenuInfo)
  {
    super.onCreateContextMenu(paramContextMenu, paramView, paramContextMenuInfo);
    a("onCreateContextMenu", new Object[] { paramContextMenu, paramView, paramContextMenuInfo });
  }
  
  public CharSequence onCreateDescription()
  {
    CharSequence localCharSequence = (CharSequence)c("onCreateDescription", new Object[0]);
    if (localCharSequence != null) {
      return localCharSequence;
    }
    return super.onCreateDescription();
  }
  
  protected Dialog onCreateDialog(int paramInt)
  {
    Dialog localDialog = (Dialog)c("onCreateDialog", new Object[] { Integer.valueOf(paramInt) });
    if (localDialog != null) {
      return localDialog;
    }
    return super.onCreateDialog(paramInt);
  }
  
  public boolean onCreateOptionsMenu(Menu paramMenu)
  {
    if (b("onCreateOptionsMenu", new Object[] { paramMenu })) {
      return true;
    }
    return super.onCreateOptionsMenu(paramMenu);
  }
  
  public boolean onCreatePanelMenu(int paramInt, Menu paramMenu)
  {
    if (b("onCreatePanelMenu", new Object[] { Integer.valueOf(paramInt), paramMenu })) {
      return true;
    }
    return super.onCreatePanelMenu(paramInt, paramMenu);
  }
  
  public View onCreatePanelView(int paramInt)
  {
    View localView = (View)c("onCreatePanelView", new Object[] { Integer.valueOf(paramInt) });
    if (localView != null) {
      return localView;
    }
    return super.onCreatePanelView(paramInt);
  }
  
  public boolean onCreateThumbnail(Bitmap paramBitmap, Canvas paramCanvas)
  {
    if (b("onCreateThumbnail", new Object[] { paramBitmap, paramCanvas })) {
      return true;
    }
    return super.onCreateThumbnail(paramBitmap, paramCanvas);
  }
  
  public View onCreateView(String paramString, Context paramContext, AttributeSet paramAttributeSet)
  {
    View localView = (View)c("onCreateView", new Object[] { paramString, paramContext, paramAttributeSet });
    if (localView != null) {
      return localView;
    }
    return super.onCreateView(paramString, paramContext, paramAttributeSet);
  }
  
  protected void onDestroy()
  {
    a("onDestroy", new Object[0]);
    super.onDestroy();
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if (b("onKeyDown", new Object[] { Integer.valueOf(paramInt), paramKeyEvent })) {
      return true;
    }
    return super.onKeyDown(paramInt, paramKeyEvent);
  }
  
  public boolean onKeyMultiple(int paramInt1, int paramInt2, KeyEvent paramKeyEvent)
  {
    if (b("onKeyMultiple", new Object[] { Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramKeyEvent })) {
      return true;
    }
    return super.onKeyMultiple(paramInt1, paramInt2, paramKeyEvent);
  }
  
  public boolean onKeyUp(int paramInt, KeyEvent paramKeyEvent)
  {
    if (b("onKeyUp", new Object[] { Integer.valueOf(paramInt), paramKeyEvent })) {
      return true;
    }
    return super.onKeyUp(paramInt, paramKeyEvent);
  }
  
  public void onLowMemory()
  {
    a("onLowMemory", new Object[0]);
    super.onLowMemory();
  }
  
  public boolean onMenuItemSelected(int paramInt, MenuItem paramMenuItem)
  {
    if (b("onMenuItemSelected", new Object[] { Integer.valueOf(paramInt), paramMenuItem })) {
      return true;
    }
    return super.onMenuItemSelected(paramInt, paramMenuItem);
  }
  
  public boolean onMenuOpened(int paramInt, Menu paramMenu)
  {
    if (b("onMenuOpened", new Object[] { Integer.valueOf(paramInt), paramMenu })) {
      return true;
    }
    return super.onMenuOpened(paramInt, paramMenu);
  }
  
  protected void onNewIntent(Intent paramIntent)
  {
    a("onNewIntent", new Object[] { paramIntent });
    super.onNewIntent(paramIntent);
  }
  
  public boolean onOptionsItemSelected(MenuItem paramMenuItem)
  {
    if (b("onOptionsItemSelected", new Object[] { paramMenuItem })) {
      return true;
    }
    return super.onOptionsItemSelected(paramMenuItem);
  }
  
  public void onOptionsMenuClosed(Menu paramMenu)
  {
    a("onOptionsMenuClosed", new Object[] { paramMenu });
    super.onOptionsMenuClosed(paramMenu);
  }
  
  public void onPanelClosed(int paramInt, Menu paramMenu)
  {
    a("onPanelClosed", new Object[] { Integer.valueOf(paramInt), paramMenu });
    super.onPanelClosed(paramInt, paramMenu);
  }
  
  protected void onPause()
  {
    a("onPause", new Object[0]);
    super.onPause();
  }
  
  protected void onPostCreate(Bundle paramBundle)
  {
    super.onPostCreate(paramBundle);
    a("onPostCreate", new Object[] { paramBundle });
  }
  
  protected void onPostResume()
  {
    super.onPostResume();
    a("onPostResume", new Object[0]);
  }
  
  protected void onPrepareDialog(int paramInt, Dialog paramDialog)
  {
    super.onPrepareDialog(paramInt, paramDialog);
    a("onPrepareDialog", new Object[] { Integer.valueOf(paramInt), paramDialog });
  }
  
  public boolean onPrepareOptionsMenu(Menu paramMenu)
  {
    if (b("onPrepareOptionsMenu", new Object[] { paramMenu })) {
      return true;
    }
    return super.onPrepareOptionsMenu(paramMenu);
  }
  
  public boolean onPreparePanel(int paramInt, View paramView, Menu paramMenu)
  {
    if (b("onPreparePanel", new Object[] { Integer.valueOf(paramInt), paramView, paramMenu })) {
      return true;
    }
    return super.onPreparePanel(paramInt, paramView, paramMenu);
  }
  
  protected void onRestart()
  {
    super.onRestart();
    a("onRestart", new Object[0]);
  }
  
  protected void onRestoreInstanceState(Bundle paramBundle)
  {
    super.onRestoreInstanceState(paramBundle);
    a("onRestoreInstanceState", new Object[] { paramBundle });
  }
  
  protected void onResume()
  {
    super.onResume();
    a("onResume", new Object[0]);
  }
  
  public Object onRetainNonConfigurationInstance()
  {
    Object localObject = c("onRetainNonConfigurationInstance", new Object[0]);
    if (localObject != null) {
      return localObject;
    }
    return super.onRetainNonConfigurationInstance();
  }
  
  protected void onSaveInstanceState(Bundle paramBundle)
  {
    super.onSaveInstanceState(paramBundle);
    a("onSaveInstanceState", new Object[] { paramBundle });
  }
  
  public boolean onSearchRequested()
  {
    if (b("onSearchRequested", new Object[0])) {
      return true;
    }
    return super.onSearchRequested();
  }
  
  protected void onStart()
  {
    super.onStart();
    a("onStart", new Object[0]);
  }
  
  protected void onStop()
  {
    a("onStop", new Object[0]);
    super.onStop();
  }
  
  protected void onTitleChanged(CharSequence paramCharSequence, int paramInt)
  {
    super.onTitleChanged(paramCharSequence, paramInt);
    a("onTitleChanged", new Object[] { paramCharSequence, Integer.valueOf(paramInt) });
  }
  
  public boolean onTouchEvent(MotionEvent paramMotionEvent)
  {
    if (b("onTouchEvent", new Object[] { paramMotionEvent })) {
      return true;
    }
    return super.onTouchEvent(paramMotionEvent);
  }
  
  public boolean onTrackballEvent(MotionEvent paramMotionEvent)
  {
    if (b("onTrackballEvent", new Object[] { paramMotionEvent })) {
      return true;
    }
    return super.onTrackballEvent(paramMotionEvent);
  }
  
  public void onUserInteraction()
  {
    super.onUserInteraction();
    a("onUserInteraction", new Object[0]);
  }
  
  protected void onUserLeaveHint()
  {
    super.onUserLeaveHint();
    a("onUserLeaveHint", new Object[0]);
  }
  
  public void onWindowAttributesChanged(WindowManager.LayoutParams paramLayoutParams)
  {
    super.onWindowAttributesChanged(paramLayoutParams);
    a("onWindowAttributesChanged", new Object[] { paramLayoutParams });
  }
  
  public void onWindowFocusChanged(boolean paramBoolean)
  {
    super.onWindowFocusChanged(paramBoolean);
    a("onWindowFocusChanged", new Object[] { Boolean.valueOf(paramBoolean) });
  }
}
