package com.snowfish.android.ahelper;

import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import com.snowfish.a.a.l.g;
import com.snowfish.a.a.p.IAIdleService;
import java.lang.reflect.Method;

public class APaymentUnity
{
  public static final long IID_APAYMENT_UNITY = 81985529214100806L;
  
  public APaymentUnity() {}
  
  public static Object getObject(Context paramContext)
  {
    return g.a(paramContext).a().createObject(81985529214100806L);
  }
  
  public static String getPayingResult(Context paramContext, String paramString)
  {
    try
    {
      Object localObject = getObject(paramContext);
      paramContext = (String)localObject.getClass().getDeclaredMethod("getPayingResult", new Class[] { Context.class, String.class }).invoke(localObject, new Object[] { paramContext, paramString });
      return paramContext;
    }
    catch (Throwable paramContext) {}
    return new String("0");
  }
  
  public static long getUserId(Context paramContext)
  {
    try
    {
      paramContext = getObject(paramContext);
      long l = ((Long)paramContext.getClass().getDeclaredMethod("getUserId", new Class[0]).invoke(paramContext, new Class[0])).longValue();
      return l;
    }
    catch (Throwable paramContext) {}
    return 0L;
  }
  
  public static boolean isPaid(Context paramContext, String paramString)
  {
    try
    {
      Object localObject = getObject(paramContext);
      boolean bool = ((Boolean)localObject.getClass().getDeclaredMethod("isPaid", new Class[] { Context.class, String.class }).invoke(localObject, new Object[] { paramContext, paramString })).booleanValue();
      return bool;
    }
    catch (Throwable paramContext) {}
    return false;
  }
  
  public static void onExit(Context paramContext)
  {
    try
    {
      APayment.onExit(paramContext);
      return;
    }
    catch (Throwable paramContext) {}
  }
  
  public static void onFirstActivityCreate(Activity paramActivity1, Bundle paramBundle, Activity paramActivity2)
  {
    APayment.onFirstActivityCreate(paramActivity1, paramBundle, paramActivity2);
  }
  
  public static void onInit(Context paramContext)
  {
    try
    {
      APayment.onInit(paramContext);
      return;
    }
    catch (Throwable paramContext) {}
  }
  
  public static void pay(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5)
  {
    try
    {
      Object localObject = getObject(paramContext);
      localObject.getClass().getDeclaredMethod("pay", new Class[] { Context.class, String.class, String.class, String.class, String.class, String.class }).invoke(localObject, new Object[] { paramContext, paramString1, paramString2, paramString3, paramString4, paramString5 });
      return;
    }
    catch (Throwable paramContext) {}
  }
  
  public static void setPaid(Context paramContext, String paramString, boolean paramBoolean)
  {
    try
    {
      Object localObject = getObject(paramContext);
      localObject.getClass().getDeclaredMethod("setPaid", new Class[] { Context.class, String.class, Boolean.class }).invoke(localObject, new Object[] { paramContext, paramString, Boolean.valueOf(paramBoolean) });
      return;
    }
    catch (Throwable paramContext) {}
  }
}
