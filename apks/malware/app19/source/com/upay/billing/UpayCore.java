package com.upay.billing;

import android.content.Context;
import com.upay.billing.bean.Action;
import com.upay.billing.bean.Cmd;
import com.upay.billing.bean.Cooldown;
import com.upay.billing.bean.Goods;
import com.upay.billing.bean.Plan;
import com.upay.billing.bean.Trade;
import com.upay.billing.utils.Json;
import com.upay.billing.utils.Util;
import java.util.List;

public abstract class UpayCore
  extends b
{
  public static UpayCore instance = null;
  protected Context context;
  
  public UpayCore() {}
  
  public static UpayCore getInstance(Context paramContext)
  {
    if (instance == null)
    {
      instance = (UpayCore)Util.createInstance(paramContext, "com.upay.billing.engine.UpayCoreImpl");
      instance.initCore(paramContext.getApplicationContext());
    }
    return instance;
  }
  
  public abstract void activateHandlers(Trade paramTrade, String paramString1, String paramString2, Cmd paramCmd);
  
  public abstract Action getAction(String paramString);
  
  public abstract String getAreaKey();
  
  public Context getContext()
  {
    return this.context;
  }
  
  public abstract Cooldown getCooldown(String paramString);
  
  public abstract Trade getCurrentTrade();
  
  public abstract Goods getGoods(String paramString1, String paramString2);
  
  public abstract Plan getPlan(String paramString);
  
  public abstract String getPropString(String paramString1, String paramString2, String paramString3);
  
  public abstract Trade getTrade(int paramInt, String paramString);
  
  public abstract UpayContext getUpayContext();
  
  public abstract Json getUser();
  
  public abstract int init(String paramString1, String paramString2, byte[] paramArrayOfByte, String paramString3, long paramLong);
  
  public void initCore(Context paramContext)
  {
    this.context = paramContext;
  }
  
  public abstract List listTrades(int paramInt, String paramString);
  
  public abstract void logEvent(int paramInt, String paramString1, String paramString2);
  
  public abstract void logEvent(String paramString1, String paramString2, String paramString3);
  
  public abstract void onDestory();
  
  public abstract String pay(int paramInt, String paramString1, String paramString2);
  
  public abstract void paymentCompleted(Trade paramTrade, int paramInt);
  
  public abstract void runOnMainThread(Runnable paramRunnable);
  
  public abstract boolean smsReceived(String paramString1, String paramString2, int paramInt);
  
  public abstract void startPolling(Trade paramTrade);
  
  public abstract void tradeUpdated(Trade paramTrade, String paramString, int paramInt1, int paramInt2);
  
  public abstract void updateCooldown(String paramString, int paramInt);
}
