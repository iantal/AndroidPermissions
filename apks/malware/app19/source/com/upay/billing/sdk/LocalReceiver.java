package com.upay.billing.sdk;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import com.upay.billing.utils.Json;
import java.util.HashMap;

public class LocalReceiver
  extends BroadcastReceiver
{
  private Upay ib;
  
  public LocalReceiver(Upay paramUpay)
  {
    this.ib = paramUpay;
  }
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    int i = 0;
    if (paramIntent != null)
    {
      paramContext = paramIntent.getStringExtra("appKey");
      if ((paramContext != null) && (paramContext.equals(this.ib.appKey))) {
        break label32;
      }
    }
    label32:
    String str1;
    String str2;
    String str3;
    int j;
    UpayCallback localUpayCallback;
    do
    {
      return;
      paramContext = Json.parse(paramIntent.getStringExtra("data"));
      paramIntent = paramContext.getStr("action", null);
      str1 = paramContext.getStr("goodsKey", null);
      str2 = paramContext.getStr("tradeId", null);
      str3 = paramContext.getStr("extra", null);
      j = paramContext.getInt("result", Integer.valueOf(0)).intValue();
      localUpayCallback = (UpayCallback)this.ib.mapCallbacks.get(str2);
    } while (localUpayCallback == null);
    if ("onPaymentResult".equals(paramIntent))
    {
      j = paramContext.getInt("resultCode", Integer.valueOf(0)).intValue();
      localUpayCallback.onPaymentResult(str1, str2, j, paramContext.getStr("errorMsg", null), str3);
      if (j != 200) {
        i = 1;
      }
    }
    label170:
    while (i != 0)
    {
      this.ib.mapCallbacks.remove(str2);
      return;
      if ("onTradeProgress".equals(paramIntent))
      {
        i = paramContext.getInt("price", Integer.valueOf(0)).intValue();
        int k = paramContext.getInt("paid", Integer.valueOf(0)).intValue();
        localUpayCallback.onTradeProgress(str1, str2, i, k, str3, j);
        if ((i == 0) || (i != k)) {
          break label259;
        }
      }
    }
    label259:
    for (i = 1;; i = 0)
    {
      break label170;
      break;
    }
  }
}
