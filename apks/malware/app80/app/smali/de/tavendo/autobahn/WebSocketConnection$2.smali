.class Lde/tavendo/autobahn/WebSocketConnection$2;
.super Landroid/os/Handler;


# instance fields
.field final synthetic this$0:Lde/tavendo/autobahn/WebSocketConnection;


# direct methods
.method constructor <init>(Lde/tavendo/autobahn/WebSocketConnection;Landroid/os/Looper;)V
    .locals 0

    iput-object p1, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-direct {p0, p2}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    return-void
.end method


# virtual methods
.method public handleMessage(Landroid/os/Message;)V
    .locals 6

    const/16 v5, 0x3e8

    const/4 v1, 0x3

    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    instance-of v0, v0, Lde/tavendo/autobahn/WebSocketMessage$TextMessage;

    if-eqz v0, :cond_2

    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Lde/tavendo/autobahn/WebSocketMessage$TextMessage;

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v1}, Lde/tavendo/autobahn/WebSocketConnection;->access$9(Lde/tavendo/autobahn/WebSocketConnection;)Lde/tavendo/autobahn/WebSocket$ConnectionHandler;

    move-result-object v1

    if-eqz v1, :cond_1

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v1}, Lde/tavendo/autobahn/WebSocketConnection;->access$9(Lde/tavendo/autobahn/WebSocketConnection;)Lde/tavendo/autobahn/WebSocket$ConnectionHandler;

    move-result-object v1

    iget-object v0, v0, Lde/tavendo/autobahn/WebSocketMessage$TextMessage;->mPayload:Ljava/lang/String;

    invoke-interface {v1, v0}, Lde/tavendo/autobahn/WebSocket$ConnectionHandler;->onTextMessage(Ljava/lang/String;)V

    :cond_0
    :goto_0
    return-void

    :cond_1
    invoke-static {}, Lde/tavendo/autobahn/WebSocketConnection;->access$8()Ljava/lang/String;

    move-result-object v0

    const-string v1, "could not call onTextMessage() .. handler already NULL"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_2
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    instance-of v0, v0, Lde/tavendo/autobahn/WebSocketMessage$RawTextMessage;

    if-eqz v0, :cond_4

    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Lde/tavendo/autobahn/WebSocketMessage$RawTextMessage;

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v1}, Lde/tavendo/autobahn/WebSocketConnection;->access$9(Lde/tavendo/autobahn/WebSocketConnection;)Lde/tavendo/autobahn/WebSocket$ConnectionHandler;

    move-result-object v1

    if-eqz v1, :cond_3

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v1}, Lde/tavendo/autobahn/WebSocketConnection;->access$9(Lde/tavendo/autobahn/WebSocketConnection;)Lde/tavendo/autobahn/WebSocket$ConnectionHandler;

    move-result-object v1

    iget-object v0, v0, Lde/tavendo/autobahn/WebSocketMessage$RawTextMessage;->mPayload:[B

    invoke-interface {v1, v0}, Lde/tavendo/autobahn/WebSocket$ConnectionHandler;->onRawTextMessage([B)V

    goto :goto_0

    :cond_3
    invoke-static {}, Lde/tavendo/autobahn/WebSocketConnection;->access$8()Ljava/lang/String;

    move-result-object v0

    const-string v1, "could not call onRawTextMessage() .. handler already NULL"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_4
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    instance-of v0, v0, Lde/tavendo/autobahn/WebSocketMessage$BinaryMessage;

    if-eqz v0, :cond_6

    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Lde/tavendo/autobahn/WebSocketMessage$BinaryMessage;

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v1}, Lde/tavendo/autobahn/WebSocketConnection;->access$9(Lde/tavendo/autobahn/WebSocketConnection;)Lde/tavendo/autobahn/WebSocket$ConnectionHandler;

    move-result-object v1

    if-eqz v1, :cond_5

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v1}, Lde/tavendo/autobahn/WebSocketConnection;->access$9(Lde/tavendo/autobahn/WebSocketConnection;)Lde/tavendo/autobahn/WebSocket$ConnectionHandler;

    move-result-object v1

    iget-object v0, v0, Lde/tavendo/autobahn/WebSocketMessage$BinaryMessage;->mPayload:[B

    invoke-interface {v1, v0}, Lde/tavendo/autobahn/WebSocket$ConnectionHandler;->onBinaryMessage([B)V

    goto :goto_0

    :cond_5
    invoke-static {}, Lde/tavendo/autobahn/WebSocketConnection;->access$8()Ljava/lang/String;

    move-result-object v0

    const-string v1, "could not call onBinaryMessage() .. handler already NULL"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_6
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    instance-of v0, v0, Lde/tavendo/autobahn/WebSocketMessage$Ping;

    if-eqz v0, :cond_7

    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Lde/tavendo/autobahn/WebSocketMessage$Ping;

    invoke-static {}, Lde/tavendo/autobahn/WebSocketConnection;->access$8()Ljava/lang/String;

    move-result-object v1

    const-string v2, "WebSockets Ping received"

    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    new-instance v1, Lde/tavendo/autobahn/WebSocketMessage$Pong;

    invoke-direct {v1}, Lde/tavendo/autobahn/WebSocketMessage$Pong;-><init>()V

    iget-object v0, v0, Lde/tavendo/autobahn/WebSocketMessage$Ping;->mPayload:[B

    iput-object v0, v1, Lde/tavendo/autobahn/WebSocketMessage$Pong;->mPayload:[B

    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v0, v0, Lde/tavendo/autobahn/WebSocketConnection;->mWriter:Lde/tavendo/autobahn/WebSocketWriter;

    invoke-virtual {v0, v1}, Lde/tavendo/autobahn/WebSocketWriter;->forward(Ljava/lang/Object;)V

    goto :goto_0

    :cond_7
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    instance-of v0, v0, Lde/tavendo/autobahn/WebSocketMessage$Pong;

    if-eqz v0, :cond_8

    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Lde/tavendo/autobahn/WebSocketMessage$Pong;

    invoke-static {}, Lde/tavendo/autobahn/WebSocketConnection;->access$8()Ljava/lang/String;

    move-result-object v0

    const-string v1, "WebSockets Pong received"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_0

    :cond_8
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    instance-of v0, v0, Lde/tavendo/autobahn/WebSocketMessage$Close;

    if-eqz v0, :cond_b

    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Lde/tavendo/autobahn/WebSocketMessage$Close;

    invoke-static {}, Lde/tavendo/autobahn/WebSocketConnection;->access$8()Ljava/lang/String;

    move-result-object v2

    new-instance v3, Ljava/lang/StringBuilder;

    const-string v4, "WebSockets Close received ("

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget v4, v0, Lde/tavendo/autobahn/WebSocketMessage$Close;->mCode:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " - "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v4, v0, Lde/tavendo/autobahn/WebSocketMessage$Close;->mReason:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ")"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    iget v2, v0, Lde/tavendo/autobahn/WebSocketMessage$Close;->mCode:I

    if-ne v2, v5, :cond_9

    const/4 v1, 0x1

    :cond_9
    iget-object v2, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v2}, Lde/tavendo/autobahn/WebSocketConnection;->access$10(Lde/tavendo/autobahn/WebSocketConnection;)Z

    move-result v2

    if-eqz v2, :cond_a

    iget-object v2, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v2, v2, Lde/tavendo/autobahn/WebSocketConnection;->mWriter:Lde/tavendo/autobahn/WebSocketWriter;

    new-instance v3, Lde/tavendo/autobahn/WebSocketMessage$Close;

    invoke-direct {v3, v5}, Lde/tavendo/autobahn/WebSocketMessage$Close;-><init>(I)V

    invoke-virtual {v2, v3}, Lde/tavendo/autobahn/WebSocketWriter;->forward(Ljava/lang/Object;)V

    :goto_1
    iget-object v2, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v0, v0, Lde/tavendo/autobahn/WebSocketMessage$Close;->mReason:Ljava/lang/String;

    invoke-static {v2, v1, v0}, Lde/tavendo/autobahn/WebSocketConnection;->access$2(Lde/tavendo/autobahn/WebSocketConnection;ILjava/lang/String;)V

    goto/16 :goto_0

    :cond_a
    :try_start_0
    iget-object v2, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v2, v2, Lde/tavendo/autobahn/WebSocketConnection;->mTransportChannel:Ljava/nio/channels/SocketChannel;

    invoke-virtual {v2}, Ljava/nio/channels/SocketChannel;->close()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    :catch_0
    move-exception v2

    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1

    :cond_b
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    instance-of v0, v0, Lde/tavendo/autobahn/WebSocketMessage$ServerHandshake;

    if-eqz v0, :cond_d

    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Lde/tavendo/autobahn/WebSocketMessage$ServerHandshake;

    invoke-static {}, Lde/tavendo/autobahn/WebSocketConnection;->access$8()Ljava/lang/String;

    move-result-object v1

    const-string v2, "opening handshake received"

    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    iget-boolean v0, v0, Lde/tavendo/autobahn/WebSocketMessage$ServerHandshake;->mSuccess:Z

    if-eqz v0, :cond_0

    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v0}, Lde/tavendo/autobahn/WebSocketConnection;->access$9(Lde/tavendo/autobahn/WebSocketConnection;)Lde/tavendo/autobahn/WebSocket$ConnectionHandler;

    move-result-object v0

    if-eqz v0, :cond_c

    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v0}, Lde/tavendo/autobahn/WebSocketConnection;->access$9(Lde/tavendo/autobahn/WebSocketConnection;)Lde/tavendo/autobahn/WebSocket$ConnectionHandler;

    move-result-object v0

    invoke-interface {v0}, Lde/tavendo/autobahn/WebSocket$ConnectionHandler;->onOpen()V

    goto/16 :goto_0

    :cond_c
    invoke-static {}, Lde/tavendo/autobahn/WebSocketConnection;->access$8()Ljava/lang/String;

    move-result-object v0

    const-string v1, "could not call onOpen() .. handler already NULL"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_0

    :cond_d
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    instance-of v0, v0, Lde/tavendo/autobahn/WebSocketMessage$ConnectionLost;

    if-eqz v0, :cond_e

    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Lde/tavendo/autobahn/WebSocketMessage$ConnectionLost;

    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    const-string v2, "WebSockets connection lost"

    invoke-static {v0, v1, v2}, Lde/tavendo/autobahn/WebSocketConnection;->access$11(Lde/tavendo/autobahn/WebSocketConnection;ILjava/lang/String;)V

    goto/16 :goto_0

    :cond_e
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    instance-of v0, v0, Lde/tavendo/autobahn/WebSocketMessage$ProtocolViolation;

    if-eqz v0, :cond_f

    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Lde/tavendo/autobahn/WebSocketMessage$ProtocolViolation;

    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    const/4 v1, 0x4

    const-string v2, "WebSockets protocol violation"

    invoke-static {v0, v1, v2}, Lde/tavendo/autobahn/WebSocketConnection;->access$11(Lde/tavendo/autobahn/WebSocketConnection;ILjava/lang/String;)V

    goto/16 :goto_0

    :cond_f
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    instance-of v0, v0, Lde/tavendo/autobahn/WebSocketMessage$Error;

    if-eqz v0, :cond_10

    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Lde/tavendo/autobahn/WebSocketMessage$Error;

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    const/4 v2, 0x5

    new-instance v3, Ljava/lang/StringBuilder;

    const-string v4, "WebSockets internal error ("

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v0, v0, Lde/tavendo/autobahn/WebSocketMessage$Error;->mException:Ljava/lang/Exception;

    invoke-virtual {v0}, Ljava/lang/Exception;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v3, ")"

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v2, v0}, Lde/tavendo/autobahn/WebSocketConnection;->access$11(Lde/tavendo/autobahn/WebSocketConnection;ILjava/lang/String;)V

    goto/16 :goto_0

    :cond_10
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    instance-of v0, v0, Lde/tavendo/autobahn/WebSocketMessage$ServerError;

    if-eqz v0, :cond_11

    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Lde/tavendo/autobahn/WebSocketMessage$ServerError;

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    const/4 v2, 0x6

    new-instance v3, Ljava/lang/StringBuilder;

    const-string v4, "Server error "

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget v4, v0, Lde/tavendo/autobahn/WebSocketMessage$ServerError;->mStatusCode:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " ("

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v0, v0, Lde/tavendo/autobahn/WebSocketMessage$ServerError;->mStatusMessage:Ljava/lang/String;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v3, ")"

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v2, v0}, Lde/tavendo/autobahn/WebSocketConnection;->access$11(Lde/tavendo/autobahn/WebSocketConnection;ILjava/lang/String;)V

    goto/16 :goto_0

    :cond_11
    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$2;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v1, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    invoke-virtual {v0, v1}, Lde/tavendo/autobahn/WebSocketConnection;->processAppMessage(Ljava/lang/Object;)V

    goto/16 :goto_0
.end method
