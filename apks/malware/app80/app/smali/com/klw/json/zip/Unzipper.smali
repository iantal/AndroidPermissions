.class public Lcom/klw/json/zip/Unzipper;
.super Lcom/klw/json/zip/JSONzip;


# instance fields
.field bitreader:Lcom/klw/json/zip/BitReader;


# direct methods
.method public constructor <init>(Lcom/klw/json/zip/BitReader;)V
    .locals 0

    invoke-direct {p0}, Lcom/klw/json/zip/JSONzip;-><init>()V

    iput-object p1, p0, Lcom/klw/json/zip/Unzipper;->bitreader:Lcom/klw/json/zip/BitReader;

    return-void
.end method

.method private bit()Z
    .locals 2

    :try_start_0
    iget-object v0, p0, Lcom/klw/json/zip/Unzipper;->bitreader:Lcom/klw/json/zip/BitReader;

    invoke-interface {v0}, Lcom/klw/json/zip/BitReader;->bit()Z
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    move-result v0

    return v0

    :catch_0
    move-exception v0

    new-instance v1, Lcom/klw/json/JSONException;

    invoke-direct {v1, v0}, Lcom/klw/json/JSONException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method private getAndTick(Lcom/klw/json/zip/Keep;Lcom/klw/json/zip/BitReader;)Ljava/lang/Object;
    .locals 3

    :try_start_0
    invoke-virtual {p1}, Lcom/klw/json/zip/Keep;->bitsize()I

    move-result v0

    invoke-interface {p2, v0}, Lcom/klw/json/zip/BitReader;->read(I)I

    move-result v0

    invoke-virtual {p1, v0}, Lcom/klw/json/zip/Keep;->value(I)Ljava/lang/Object;

    move-result-object v1

    iget v2, p1, Lcom/klw/json/zip/Keep;->length:I

    if-lt v0, v2, :cond_0

    new-instance v0, Lcom/klw/json/JSONException;

    const-string v1, "Deep error."

    invoke-direct {v0, v1}, Lcom/klw/json/JSONException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    move-exception v0

    new-instance v1, Lcom/klw/json/JSONException;

    invoke-direct {v1, v0}, Lcom/klw/json/JSONException;-><init>(Ljava/lang/Throwable;)V

    throw v1

    :cond_0
    :try_start_1
    invoke-virtual {p1, v0}, Lcom/klw/json/zip/Keep;->tick(I)V
    :try_end_1
    .catch Ljava/lang/Throwable; {:try_start_1 .. :try_end_1} :catch_0

    return-object v1
.end method

.method private read(I)I
    .locals 2

    :try_start_0
    iget-object v0, p0, Lcom/klw/json/zip/Unzipper;->bitreader:Lcom/klw/json/zip/BitReader;

    invoke-interface {v0, p1}, Lcom/klw/json/zip/BitReader;->read(I)I
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    move-result v0

    return v0

    :catch_0
    move-exception v0

    new-instance v1, Lcom/klw/json/JSONException;

    invoke-direct {v1, v0}, Lcom/klw/json/JSONException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method private read(Lcom/klw/json/zip/Huff;Lcom/klw/json/zip/Huff;Lcom/klw/json/zip/Keep;)Ljava/lang/String;
    .locals 9

    const/16 v4, 0x100

    const/4 v5, 0x0

    new-array v1, v4, [B

    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->bit()Z

    move-result v0

    if-eqz v0, :cond_4

    iget-object v0, p0, Lcom/klw/json/zip/Unzipper;->bitreader:Lcom/klw/json/zip/BitReader;

    invoke-direct {p0, p3, v0}, Lcom/klw/json/zip/Unzipper;->getAndTick(Lcom/klw/json/zip/Keep;Lcom/klw/json/zip/BitReader;)Ljava/lang/Object;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_0
    int-to-byte v2, v2

    aput-byte v2, v0, v3

    add-int/lit8 v3, v3, 0x1

    iget-object v2, p0, Lcom/klw/json/zip/Unzipper;->bitreader:Lcom/klw/json/zip/BitReader;

    invoke-virtual {p2, v2}, Lcom/klw/json/zip/Huff;->read(Lcom/klw/json/zip/BitReader;)I

    move-result v2

    :cond_1
    and-int/lit16 v6, v2, 0x80

    const/16 v7, 0x80

    if-eq v6, v7, :cond_0

    int-to-byte v2, v2

    aput-byte v2, v0, v3

    add-int/lit8 v3, v3, 0x1

    move-object v8, v0

    move v0, v1

    move-object v1, v8

    :goto_1
    if-lt v3, v0, :cond_3

    mul-int/lit8 v2, v0, 0x2

    new-array v0, v2, [B

    invoke-static {v1, v5, v0, v5, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    move v1, v2

    :goto_2
    iget-object v2, p0, Lcom/klw/json/zip/Unzipper;->bitreader:Lcom/klw/json/zip/BitReader;

    invoke-virtual {p1, v2}, Lcom/klw/json/zip/Huff;->read(Lcom/klw/json/zip/BitReader;)I

    move-result v2

    if-ne v2, v4, :cond_1

    if-nez v3, :cond_2

    const-string v0, ""

    goto :goto_0

    :cond_2
    new-instance v1, Lcom/klw/json/Kim;

    invoke-direct {v1, v0, v3}, Lcom/klw/json/Kim;-><init>([BI)V

    invoke-virtual {p3, v1}, Lcom/klw/json/zip/Keep;->register(Ljava/lang/Object;)V

    invoke-virtual {v1}, Lcom/klw/json/Kim;->toString()Ljava/lang/String;

    move-result-object v0

    goto :goto_0

    :cond_3
    move-object v8, v1

    move v1, v0

    move-object v0, v8

    goto :goto_2

    :cond_4
    move v0, v4

    move v3, v5

    goto :goto_1
.end method

.method private readArray(Z)Lcom/klw/json/JSONArray;
    .locals 4

    new-instance v1, Lcom/klw/json/JSONArray;

    invoke-direct {v1}, Lcom/klw/json/JSONArray;-><init>()V

    if-eqz p1, :cond_0

    iget-object v0, p0, Lcom/klw/json/zip/Unzipper;->stringhuff:Lcom/klw/json/zip/Huff;

    iget-object v2, p0, Lcom/klw/json/zip/Unzipper;->stringhuffext:Lcom/klw/json/zip/Huff;

    iget-object v3, p0, Lcom/klw/json/zip/Unzipper;->stringkeep:Lcom/klw/json/zip/Keep;

    invoke-direct {p0, v0, v2, v3}, Lcom/klw/json/zip/Unzipper;->read(Lcom/klw/json/zip/Huff;Lcom/klw/json/zip/Huff;Lcom/klw/json/zip/Keep;)Ljava/lang/String;

    move-result-object v0

    :goto_0
    invoke-virtual {v1, v0}, Lcom/klw/json/JSONArray;->put(Ljava/lang/Object;)Lcom/klw/json/JSONArray;

    :goto_1
    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->bit()Z

    move-result v0

    if-nez v0, :cond_3

    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->bit()Z

    move-result v0

    if-nez v0, :cond_1

    return-object v1

    :cond_0
    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->readValue()Ljava/lang/Object;

    move-result-object v0

    goto :goto_0

    :cond_1
    if-eqz p1, :cond_2

    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->readValue()Ljava/lang/Object;

    move-result-object v0

    :goto_2
    invoke-virtual {v1, v0}, Lcom/klw/json/JSONArray;->put(Ljava/lang/Object;)Lcom/klw/json/JSONArray;

    goto :goto_1

    :cond_2
    iget-object v0, p0, Lcom/klw/json/zip/Unzipper;->stringhuff:Lcom/klw/json/zip/Huff;

    iget-object v2, p0, Lcom/klw/json/zip/Unzipper;->stringhuffext:Lcom/klw/json/zip/Huff;

    iget-object v3, p0, Lcom/klw/json/zip/Unzipper;->stringkeep:Lcom/klw/json/zip/Keep;

    invoke-direct {p0, v0, v2, v3}, Lcom/klw/json/zip/Unzipper;->read(Lcom/klw/json/zip/Huff;Lcom/klw/json/zip/Huff;Lcom/klw/json/zip/Keep;)Ljava/lang/String;

    move-result-object v0

    goto :goto_2

    :cond_3
    if-eqz p1, :cond_4

    iget-object v0, p0, Lcom/klw/json/zip/Unzipper;->stringhuff:Lcom/klw/json/zip/Huff;

    iget-object v2, p0, Lcom/klw/json/zip/Unzipper;->stringhuffext:Lcom/klw/json/zip/Huff;

    iget-object v3, p0, Lcom/klw/json/zip/Unzipper;->stringkeep:Lcom/klw/json/zip/Keep;

    invoke-direct {p0, v0, v2, v3}, Lcom/klw/json/zip/Unzipper;->read(Lcom/klw/json/zip/Huff;Lcom/klw/json/zip/Huff;Lcom/klw/json/zip/Keep;)Ljava/lang/String;

    move-result-object v0

    :goto_3
    invoke-virtual {v1, v0}, Lcom/klw/json/JSONArray;->put(Ljava/lang/Object;)Lcom/klw/json/JSONArray;

    goto :goto_1

    :cond_4
    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->readValue()Ljava/lang/Object;

    move-result-object v0

    goto :goto_3
.end method

.method private readJSON()Ljava/lang/Object;
    .locals 1

    const/4 v0, 0x3

    invoke-direct {p0, v0}, Lcom/klw/json/zip/Unzipper;->read(I)I

    move-result v0

    packed-switch v0, :pswitch_data_0

    :pswitch_0
    sget-object v0, Lcom/klw/json/JSONObject;->NULL:Ljava/lang/Object;

    :goto_0
    return-object v0

    :pswitch_1
    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->readObject()Lcom/klw/json/JSONObject;

    move-result-object v0

    goto :goto_0

    :pswitch_2
    const/4 v0, 0x1

    invoke-direct {p0, v0}, Lcom/klw/json/zip/Unzipper;->readArray(Z)Lcom/klw/json/JSONArray;

    move-result-object v0

    goto :goto_0

    :pswitch_3
    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lcom/klw/json/zip/Unzipper;->readArray(Z)Lcom/klw/json/JSONArray;

    move-result-object v0

    goto :goto_0

    :pswitch_4
    new-instance v0, Lcom/klw/json/JSONObject;

    invoke-direct {v0}, Lcom/klw/json/JSONObject;-><init>()V

    goto :goto_0

    :pswitch_5
    new-instance v0, Lcom/klw/json/JSONArray;

    invoke-direct {v0}, Lcom/klw/json/JSONArray;-><init>()V

    goto :goto_0

    :pswitch_6
    sget-object v0, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    goto :goto_0

    :pswitch_7
    sget-object v0, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    goto :goto_0

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_4
        :pswitch_5
        :pswitch_6
        :pswitch_7
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
    .end packed-switch
.end method

.method private readObject()Lcom/klw/json/JSONObject;
    .locals 5

    new-instance v1, Lcom/klw/json/JSONObject;

    invoke-direct {v1}, Lcom/klw/json/JSONObject;-><init>()V

    :cond_0
    iget-object v0, p0, Lcom/klw/json/zip/Unzipper;->namehuff:Lcom/klw/json/zip/Huff;

    iget-object v2, p0, Lcom/klw/json/zip/Unzipper;->namehuffext:Lcom/klw/json/zip/Huff;

    iget-object v3, p0, Lcom/klw/json/zip/Unzipper;->namekeep:Lcom/klw/json/zip/Keep;

    invoke-direct {p0, v0, v2, v3}, Lcom/klw/json/zip/Unzipper;->read(Lcom/klw/json/zip/Huff;Lcom/klw/json/zip/Huff;Lcom/klw/json/zip/Keep;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/klw/json/JSONObject;->opt(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    if-eqz v0, :cond_1

    new-instance v0, Lcom/klw/json/JSONException;

    const-string v1, "Duplicate key."

    invoke-direct {v0, v1}, Lcom/klw/json/JSONException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->bit()Z

    move-result v0

    if-nez v0, :cond_2

    iget-object v0, p0, Lcom/klw/json/zip/Unzipper;->stringhuff:Lcom/klw/json/zip/Huff;

    iget-object v3, p0, Lcom/klw/json/zip/Unzipper;->stringhuffext:Lcom/klw/json/zip/Huff;

    iget-object v4, p0, Lcom/klw/json/zip/Unzipper;->stringkeep:Lcom/klw/json/zip/Keep;

    invoke-direct {p0, v0, v3, v4}, Lcom/klw/json/zip/Unzipper;->read(Lcom/klw/json/zip/Huff;Lcom/klw/json/zip/Huff;Lcom/klw/json/zip/Keep;)Ljava/lang/String;

    move-result-object v0

    :goto_0
    invoke-virtual {v1, v2, v0}, Lcom/klw/json/JSONObject;->put(Ljava/lang/String;Ljava/lang/Object;)Lcom/klw/json/JSONObject;

    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->bit()Z

    move-result v0

    if-nez v0, :cond_0

    return-object v1

    :cond_2
    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->readValue()Ljava/lang/Object;

    move-result-object v0

    goto :goto_0
.end method

.method private readValue()Ljava/lang/Object;
    .locals 5

    const/4 v0, 0x4

    const/4 v1, 0x0

    const/4 v2, 0x2

    invoke-direct {p0, v2}, Lcom/klw/json/zip/Unzipper;->read(I)I

    move-result v2

    packed-switch v2, :pswitch_data_0

    new-instance v0, Lcom/klw/json/JSONException;

    const-string v1, "Impossible."

    invoke-direct {v0, v1}, Lcom/klw/json/JSONException;-><init>(Ljava/lang/String;)V

    throw v0

    :pswitch_0
    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->bit()Z

    move-result v1

    if-nez v1, :cond_0

    :goto_0
    invoke-direct {p0, v0}, Lcom/klw/json/zip/Unzipper;->read(I)I

    move-result v1

    sparse-switch v0, :sswitch_data_0

    move v0, v1

    :goto_1
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    :goto_2
    return-object v0

    :cond_0
    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->bit()Z

    move-result v0

    if-nez v0, :cond_1

    const/4 v0, 0x7

    goto :goto_0

    :cond_1
    const/16 v0, 0xe

    goto :goto_0

    :sswitch_0
    add-int/lit8 v0, v1, 0x10

    goto :goto_1

    :sswitch_1
    add-int/lit16 v0, v1, 0x90

    goto :goto_1

    :pswitch_1
    const/16 v2, 0x100

    new-array v2, v2, [B

    :goto_3
    invoke-direct {p0, v0}, Lcom/klw/json/zip/Unzipper;->read(I)I

    move-result v3

    sget v4, Lcom/klw/json/zip/Unzipper;->endOfNumber:I

    if-ne v3, v4, :cond_2

    :try_start_0
    new-instance v0, Ljava/lang/String;

    const/4 v3, 0x0

    const-string v4, "US-ASCII"

    invoke-direct {v0, v2, v3, v1, v4}, Ljava/lang/String;-><init>([BIILjava/lang/String;)V

    invoke-static {v0}, Lcom/klw/json/JSONObject;->stringToValue(Ljava/lang/String;)Ljava/lang/Object;
    :try_end_0
    .catch Ljava/io/UnsupportedEncodingException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    iget-object v1, p0, Lcom/klw/json/zip/Unzipper;->valuekeep:Lcom/klw/json/zip/Keep;

    invoke-virtual {v1, v0}, Lcom/klw/json/zip/Keep;->register(Ljava/lang/Object;)V

    goto :goto_2

    :cond_2
    sget-object v4, Lcom/klw/json/zip/Unzipper;->bcd:[B

    aget-byte v3, v4, v3

    aput-byte v3, v2, v1

    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    :catch_0
    move-exception v0

    new-instance v1, Lcom/klw/json/JSONException;

    invoke-direct {v1, v0}, Lcom/klw/json/JSONException;-><init>(Ljava/lang/Throwable;)V

    throw v1

    :pswitch_2
    iget-object v0, p0, Lcom/klw/json/zip/Unzipper;->valuekeep:Lcom/klw/json/zip/Keep;

    iget-object v1, p0, Lcom/klw/json/zip/Unzipper;->bitreader:Lcom/klw/json/zip/BitReader;

    invoke-direct {p0, v0, v1}, Lcom/klw/json/zip/Unzipper;->getAndTick(Lcom/klw/json/zip/Keep;Lcom/klw/json/zip/BitReader;)Ljava/lang/Object;

    move-result-object v0

    goto :goto_2

    :pswitch_3
    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->readJSON()Ljava/lang/Object;

    move-result-object v0

    goto :goto_2

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
    .end packed-switch

    :sswitch_data_0
    .sparse-switch
        0x7 -> :sswitch_0
        0xe -> :sswitch_1
    .end sparse-switch
.end method


# virtual methods
.method public decode()Ljava/lang/Object;
    .locals 1

    invoke-virtual {p0}, Lcom/klw/json/zip/Unzipper;->generate()V

    invoke-direct {p0}, Lcom/klw/json/zip/Unzipper;->readJSON()Ljava/lang/Object;

    move-result-object v0

    return-object v0
.end method

.method public pad(I)Z
    .locals 2

    :try_start_0
    iget-object v0, p0, Lcom/klw/json/zip/Unzipper;->bitreader:Lcom/klw/json/zip/BitReader;

    invoke-interface {v0, p1}, Lcom/klw/json/zip/BitReader;->pad(I)Z
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    move-result v0

    return v0

    :catch_0
    move-exception v0

    new-instance v1, Lcom/klw/json/JSONException;

    invoke-direct {v1, v0}, Lcom/klw/json/JSONException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method
