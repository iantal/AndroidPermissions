package com.android.mm.process;

import android.text.TextUtils;
import com.android.dd.data.a;
import java.io.IOException;
import java.util.List;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.CookieStore;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.cookie.Cookie;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;

public final class c
{
  public static String a = "";
  private DefaultHttpClient b;
  private HttpGet c;
  private HttpPost d;
  private HttpEntity e;
  private HttpResponse f;
  
  public c() {}
  
  public final String a(String paramString)
  {
    localObject = "none";
    this.c = new HttpGet(paramString);
    if (!TextUtils.isEmpty(a)) {
      this.c.setHeader("Cookie", a);
    }
    this.c.setHeader("User-Agent", a.v);
    this.b = new DefaultHttpClient();
    try
    {
      this.f = this.b.execute(this.c);
      if (this.f.getStatusLine().getStatusCode() == 200) {
        paramString = EntityUtils.toString(this.f.getEntity(), "UTF-8");
      }
      int i;
      Cookie localCookie;
      return "none";
    }
    catch (ClientProtocolException paramString)
    {
      try
      {
        localObject = this.b.getCookieStore().getCookies();
        i = 0;
        for (;;)
        {
          if (i >= ((List)localObject).size()) {
            return paramString;
          }
          localCookie = (Cookie)((List)localObject).get(i);
          a = a + localCookie.getName() + "=" + localCookie.getValue() + ";";
          i += 1;
        }
        paramString = paramString;
      }
      catch (IOException localIOException)
      {
        for (;;)
        {
          localObject = paramString;
          paramString = localIOException;
        }
      }
      catch (ClientProtocolException localClientProtocolException)
      {
        for (;;)
        {
          localObject = paramString;
          paramString = localClientProtocolException;
        }
      }
      paramString.printStackTrace();
      return localObject;
    }
    catch (IOException paramString)
    {
      paramString.printStackTrace();
      return localObject;
    }
  }
  
  /* Error */
  public final String a(String paramString, List paramList)
  {
    // Byte code:
    //   0: ldc 33
    //   2: astore 5
    //   4: aload_0
    //   5: new 150	org/apache/http/client/methods/HttpPost
    //   8: dup
    //   9: aload_1
    //   10: invokespecial 151	org/apache/http/client/methods/HttpPost:<init>	(Ljava/lang/String;)V
    //   13: putfield 153	com/android/mm/process/c:d	Lorg/apache/http/client/methods/HttpPost;
    //   16: aload_2
    //   17: ifnull +28 -> 45
    //   20: aload_0
    //   21: new 155	org/apache/http/client/entity/UrlEncodedFormEntity
    //   24: dup
    //   25: aload_2
    //   26: ldc 88
    //   28: invokespecial 158	org/apache/http/client/entity/UrlEncodedFormEntity:<init>	(Ljava/util/List;Ljava/lang/String;)V
    //   31: putfield 160	com/android/mm/process/c:e	Lorg/apache/http/HttpEntity;
    //   34: aload_0
    //   35: getfield 153	com/android/mm/process/c:d	Lorg/apache/http/client/methods/HttpPost;
    //   38: aload_0
    //   39: getfield 160	com/android/mm/process/c:e	Lorg/apache/http/HttpEntity;
    //   42: invokevirtual 164	org/apache/http/client/methods/HttpPost:setEntity	(Lorg/apache/http/HttpEntity;)V
    //   45: getstatic 22	com/android/mm/process/c:a	Ljava/lang/String;
    //   48: invokestatic 46	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   51: ifne +15 -> 66
    //   54: aload_0
    //   55: getfield 153	com/android/mm/process/c:d	Lorg/apache/http/client/methods/HttpPost;
    //   58: ldc 48
    //   60: getstatic 22	com/android/mm/process/c:a	Ljava/lang/String;
    //   63: invokevirtual 165	org/apache/http/client/methods/HttpPost:setHeader	(Ljava/lang/String;Ljava/lang/String;)V
    //   66: aload_0
    //   67: getfield 153	com/android/mm/process/c:d	Lorg/apache/http/client/methods/HttpPost;
    //   70: ldc 54
    //   72: getstatic 59	com/android/dd/data/a:v	Ljava/lang/String;
    //   75: invokevirtual 165	org/apache/http/client/methods/HttpPost:setHeader	(Ljava/lang/String;Ljava/lang/String;)V
    //   78: aload_0
    //   79: new 61	org/apache/http/impl/client/DefaultHttpClient
    //   82: dup
    //   83: invokespecial 62	org/apache/http/impl/client/DefaultHttpClient:<init>	()V
    //   86: putfield 64	com/android/mm/process/c:b	Lorg/apache/http/impl/client/DefaultHttpClient;
    //   89: aload_0
    //   90: aload_0
    //   91: getfield 64	com/android/mm/process/c:b	Lorg/apache/http/impl/client/DefaultHttpClient;
    //   94: aload_0
    //   95: getfield 153	com/android/mm/process/c:d	Lorg/apache/http/client/methods/HttpPost;
    //   98: invokevirtual 68	org/apache/http/impl/client/DefaultHttpClient:execute	(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;
    //   101: putfield 70	com/android/mm/process/c:f	Lorg/apache/http/HttpResponse;
    //   104: aload 5
    //   106: astore_1
    //   107: aload_0
    //   108: getfield 70	com/android/mm/process/c:f	Lorg/apache/http/HttpResponse;
    //   111: invokeinterface 76 1 0
    //   116: invokeinterface 82 1 0
    //   121: sipush 200
    //   124: if_icmpne +45 -> 169
    //   127: aload_0
    //   128: getfield 70	com/android/mm/process/c:f	Lorg/apache/http/HttpResponse;
    //   131: invokeinterface 86 1 0
    //   136: invokestatic 168	org/apache/http/util/EntityUtils:toString	(Lorg/apache/http/HttpEntity;)Ljava/lang/String;
    //   139: astore_1
    //   140: aload_0
    //   141: getfield 64	com/android/mm/process/c:b	Lorg/apache/http/impl/client/DefaultHttpClient;
    //   144: invokevirtual 98	org/apache/http/impl/client/DefaultHttpClient:getCookieStore	()Lorg/apache/http/client/CookieStore;
    //   147: invokeinterface 104 1 0
    //   152: astore_2
    //   153: iconst_0
    //   154: istore_3
    //   155: aload_2
    //   156: invokeinterface 109 1 0
    //   161: istore 4
    //   163: iload_3
    //   164: iload 4
    //   166: if_icmplt +13 -> 179
    //   169: aload_1
    //   170: areturn
    //   171: astore_1
    //   172: aload_1
    //   173: invokevirtual 169	java/io/UnsupportedEncodingException:printStackTrace	()V
    //   176: goto -87 -> 89
    //   179: aload_2
    //   180: iload_3
    //   181: invokeinterface 113 2 0
    //   186: checkcast 115	org/apache/http/cookie/Cookie
    //   189: astore 5
    //   191: new 117	java/lang/StringBuilder
    //   194: dup
    //   195: getstatic 22	com/android/mm/process/c:a	Ljava/lang/String;
    //   198: invokestatic 123	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   201: invokespecial 124	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   204: aload 5
    //   206: invokeinterface 128 1 0
    //   211: invokevirtual 132	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   214: ldc -122
    //   216: invokevirtual 132	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   219: aload 5
    //   221: invokeinterface 137 1 0
    //   226: invokevirtual 132	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   229: ldc -117
    //   231: invokevirtual 132	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   234: invokevirtual 141	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   237: putstatic 22	com/android/mm/process/c:a	Ljava/lang/String;
    //   240: iload_3
    //   241: iconst_1
    //   242: iadd
    //   243: istore_3
    //   244: goto -89 -> 155
    //   247: astore_1
    //   248: aload_1
    //   249: invokevirtual 144	org/apache/http/client/ClientProtocolException:printStackTrace	()V
    //   252: aload 5
    //   254: areturn
    //   255: astore_1
    //   256: aload_1
    //   257: invokevirtual 145	java/io/IOException:printStackTrace	()V
    //   260: aload 5
    //   262: areturn
    //   263: astore_2
    //   264: aload_1
    //   265: astore 5
    //   267: aload_2
    //   268: astore_1
    //   269: goto -13 -> 256
    //   272: astore_2
    //   273: aload_1
    //   274: astore 5
    //   276: aload_2
    //   277: astore_1
    //   278: goto -30 -> 248
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	281	0	this	c
    //   0	281	1	paramString	String
    //   0	281	2	paramList	List
    //   154	90	3	i	int
    //   161	6	4	j	int
    //   2	273	5	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   4	16	171	java/io/UnsupportedEncodingException
    //   20	45	171	java/io/UnsupportedEncodingException
    //   45	66	171	java/io/UnsupportedEncodingException
    //   66	89	171	java/io/UnsupportedEncodingException
    //   89	104	247	org/apache/http/client/ClientProtocolException
    //   107	140	247	org/apache/http/client/ClientProtocolException
    //   89	104	255	java/io/IOException
    //   107	140	255	java/io/IOException
    //   140	153	263	java/io/IOException
    //   155	163	263	java/io/IOException
    //   179	240	263	java/io/IOException
    //   140	153	272	org/apache/http/client/ClientProtocolException
    //   155	163	272	org/apache/http/client/ClientProtocolException
    //   179	240	272	org/apache/http/client/ClientProtocolException
  }
  
  public final byte[] b(String paramString)
  {
    Object localObject = null;
    Cookie localCookie = null;
    this.c = new HttpGet(paramString);
    if (!TextUtils.isEmpty(a)) {
      this.c.setHeader("Cookie", a);
    }
    this.b = new DefaultHttpClient();
    try
    {
      this.f = this.b.execute(this.c);
      if (this.f.getStatusLine().getStatusCode() == 200) {
        paramString = EntityUtils.toByteArray(this.f.getEntity());
      }
      List localList;
      int i;
      return null;
    }
    catch (ClientProtocolException localClientProtocolException1)
    {
      try
      {
        localList = this.b.getCookieStore().getCookies();
        i = 0;
        for (;;)
        {
          if (i >= localList.size()) {
            return paramString;
          }
          localCookie = (Cookie)localList.get(i);
          a = a + localCookie.getName() + "=" + localCookie.getValue() + ";";
          i += 1;
        }
        localClientProtocolException1 = localClientProtocolException1;
        paramString = localCookie;
      }
      catch (IOException localIOException2)
      {
        for (;;) {}
      }
      catch (ClientProtocolException localClientProtocolException2)
      {
        for (;;) {}
      }
      localClientProtocolException1.printStackTrace();
      return paramString;
    }
    catch (IOException localIOException1)
    {
      paramString = localObject;
      localIOException1.printStackTrace();
      return paramString;
    }
  }
}
