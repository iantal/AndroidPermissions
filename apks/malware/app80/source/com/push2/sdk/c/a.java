package com.push2.sdk.c;

import java.io.UnsupportedEncodingException;

class a
{
  static final byte[] a = { 13, 10 };
  private static final byte[] b = { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47 };
  private static final byte[] c;
  private final int d;
  private final byte[] e;
  private final int f;
  private final int g;
  private byte[] h;
  private int i;
  private int j;
  private int k;
  private int l;
  private boolean m;
  private int n;
  
  static
  {
    byte[] arrayOfByte = new byte[123];
    arrayOfByte[0] = -1;
    arrayOfByte[1] = -1;
    arrayOfByte[2] = -1;
    arrayOfByte[3] = -1;
    arrayOfByte[4] = -1;
    arrayOfByte[5] = -1;
    arrayOfByte[6] = -1;
    arrayOfByte[7] = -1;
    arrayOfByte[8] = -1;
    arrayOfByte[9] = -1;
    arrayOfByte[10] = -1;
    arrayOfByte[11] = -1;
    arrayOfByte[12] = -1;
    arrayOfByte[13] = -1;
    arrayOfByte[14] = -1;
    arrayOfByte[15] = -1;
    arrayOfByte[16] = -1;
    arrayOfByte[17] = -1;
    arrayOfByte[18] = -1;
    arrayOfByte[19] = -1;
    arrayOfByte[20] = -1;
    arrayOfByte[21] = -1;
    arrayOfByte[22] = -1;
    arrayOfByte[23] = -1;
    arrayOfByte[24] = -1;
    arrayOfByte[25] = -1;
    arrayOfByte[26] = -1;
    arrayOfByte[27] = -1;
    arrayOfByte[28] = -1;
    arrayOfByte[29] = -1;
    arrayOfByte[30] = -1;
    arrayOfByte[31] = -1;
    arrayOfByte[32] = -1;
    arrayOfByte[33] = -1;
    arrayOfByte[34] = -1;
    arrayOfByte[35] = -1;
    arrayOfByte[36] = -1;
    arrayOfByte[37] = -1;
    arrayOfByte[38] = -1;
    arrayOfByte[39] = -1;
    arrayOfByte[40] = -1;
    arrayOfByte[41] = -1;
    arrayOfByte[42] = -1;
    arrayOfByte[43] = 62;
    arrayOfByte[44] = -1;
    arrayOfByte[45] = -1;
    arrayOfByte[46] = -1;
    arrayOfByte[47] = 63;
    arrayOfByte[48] = 52;
    arrayOfByte[49] = 53;
    arrayOfByte[50] = 54;
    arrayOfByte[51] = 55;
    arrayOfByte[52] = 56;
    arrayOfByte[53] = 57;
    arrayOfByte[54] = 58;
    arrayOfByte[55] = 59;
    arrayOfByte[56] = 60;
    arrayOfByte[57] = 61;
    arrayOfByte[58] = -1;
    arrayOfByte[59] = -1;
    arrayOfByte[60] = -1;
    arrayOfByte[61] = -1;
    arrayOfByte[62] = -1;
    arrayOfByte[63] = -1;
    arrayOfByte[64] = -1;
    arrayOfByte[66] = 1;
    arrayOfByte[67] = 2;
    arrayOfByte[68] = 3;
    arrayOfByte[69] = 4;
    arrayOfByte[70] = 5;
    arrayOfByte[71] = 6;
    arrayOfByte[72] = 7;
    arrayOfByte[73] = 8;
    arrayOfByte[74] = 9;
    arrayOfByte[75] = 10;
    arrayOfByte[76] = 11;
    arrayOfByte[77] = 12;
    arrayOfByte[78] = 13;
    arrayOfByte[79] = 14;
    arrayOfByte[80] = 15;
    arrayOfByte[81] = 16;
    arrayOfByte[82] = 17;
    arrayOfByte[83] = 18;
    arrayOfByte[84] = 19;
    arrayOfByte[85] = 20;
    arrayOfByte[86] = 21;
    arrayOfByte[87] = 22;
    arrayOfByte[88] = 23;
    arrayOfByte[89] = 24;
    arrayOfByte[90] = 25;
    arrayOfByte[91] = -1;
    arrayOfByte[92] = -1;
    arrayOfByte[93] = -1;
    arrayOfByte[94] = -1;
    arrayOfByte[95] = -1;
    arrayOfByte[96] = -1;
    arrayOfByte[97] = 26;
    arrayOfByte[98] = 27;
    arrayOfByte[99] = 28;
    arrayOfByte[100] = 29;
    arrayOfByte[101] = 30;
    arrayOfByte[102] = 31;
    arrayOfByte[103] = 32;
    arrayOfByte[104] = 33;
    arrayOfByte[105] = 34;
    arrayOfByte[106] = 35;
    arrayOfByte[107] = 36;
    arrayOfByte[108] = 37;
    arrayOfByte[109] = 38;
    arrayOfByte[110] = 39;
    arrayOfByte[111] = 40;
    arrayOfByte[112] = 41;
    arrayOfByte[113] = 42;
    arrayOfByte[114] = 43;
    arrayOfByte[115] = 44;
    arrayOfByte[116] = 45;
    arrayOfByte[117] = 46;
    arrayOfByte[118] = 47;
    arrayOfByte[119] = 48;
    arrayOfByte[120] = 49;
    arrayOfByte[121] = 50;
    arrayOfByte[122] = 51;
    c = arrayOfByte;
  }
  
  public a()
  {
    this(76, a);
  }
  
  public a(int paramInt)
  {
    this(paramInt, a);
  }
  
  public a(int paramInt, byte[] paramArrayOfByte)
  {
    this.d = paramInt;
    this.e = new byte[paramArrayOfByte.length];
    System.arraycopy(paramArrayOfByte, 0, this.e, 0, paramArrayOfByte.length);
    if (paramInt > 0) {}
    for (this.g = (paramArrayOfByte.length + 4);; this.g = 4)
    {
      this.f = (this.g - 1);
      if (!b(paramArrayOfByte)) {
        return;
      }
      try
      {
        String str = new String(paramArrayOfByte, "UTF-8");
        paramArrayOfByte = str;
      }
      catch (UnsupportedEncodingException localUnsupportedEncodingException)
      {
        for (;;)
        {
          paramArrayOfByte = new String(paramArrayOfByte);
        }
      }
      throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + paramArrayOfByte + "]");
    }
  }
  
  public static boolean a(byte paramByte)
  {
    return (paramByte == 61) || ((paramByte >= 0) && (paramByte < c.length) && (c[paramByte] != -1));
  }
  
  public static byte[] a(byte[] paramArrayOfByte, boolean paramBoolean)
  {
    if ((paramArrayOfByte == null) || (paramArrayOfByte.length == 0)) {
      return paramArrayOfByte;
    }
    if (paramBoolean) {}
    long l2;
    for (a localA = new a();; localA = new a(0))
    {
      l2 = paramArrayOfByte.length * 4 / 3;
      long l3 = l2 % 4L;
      long l1 = l2;
      if (l3 != 0L) {
        l1 = l2 + (4L - l3);
      }
      l2 = l1;
      if (paramBoolean) {
        l2 = l1 + (1L + l1 / 76L) * a.length;
      }
      if (l2 <= 2147483647L) {
        break;
      }
      throw new IllegalArgumentException("Input array too big, output array would be bigger than Integer.MAX_VALUE=2147483647");
    }
    byte[] arrayOfByte = new byte[(int)l2];
    localA.b(arrayOfByte, 0, arrayOfByte.length);
    localA.c(paramArrayOfByte, 0, paramArrayOfByte.length);
    localA.c(paramArrayOfByte, 0, -1);
    if (localA.h != arrayOfByte) {
      localA.a(arrayOfByte, 0, arrayOfByte.length);
    }
    return arrayOfByte;
  }
  
  private void b()
  {
    if (this.h == null)
    {
      this.h = new byte['â€€'];
      this.i = 0;
      this.j = 0;
      return;
    }
    byte[] arrayOfByte = new byte[this.h.length * 2];
    System.arraycopy(this.h, 0, arrayOfByte, 0, this.h.length);
    this.h = arrayOfByte;
  }
  
  private static boolean b(byte[] paramArrayOfByte)
  {
    int i1 = 0;
    for (;;)
    {
      if (i1 >= paramArrayOfByte.length) {
        return false;
      }
      if (a(paramArrayOfByte[i1])) {
        return true;
      }
      i1 += 1;
    }
  }
  
  int a()
  {
    if (this.h != null) {
      return this.i - this.j;
    }
    return 0;
  }
  
  int a(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
  {
    if (this.h != null)
    {
      paramInt2 = Math.min(a(), paramInt2);
      if (this.h != paramArrayOfByte)
      {
        System.arraycopy(this.h, this.j, paramArrayOfByte, paramInt1, paramInt2);
        this.j += paramInt2;
        if (this.j >= this.i) {
          this.h = null;
        }
        return paramInt2;
      }
      this.h = null;
      return paramInt2;
    }
    if (this.m) {
      return -1;
    }
    return 0;
  }
  
  public byte[] a(byte[] paramArrayOfByte)
  {
    return a(paramArrayOfByte, false);
  }
  
  void b(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
  {
    if ((paramArrayOfByte != null) && (paramArrayOfByte.length == paramInt2))
    {
      this.h = paramArrayOfByte;
      this.i = paramInt1;
      this.j = paramInt1;
    }
  }
  
  void c(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
  {
    if (this.m) {}
    for (;;)
    {
      return;
      if (paramInt2 < 0)
      {
        this.m = true;
        if ((this.h == null) || (this.h.length - this.i < this.g)) {
          b();
        }
        switch (this.l)
        {
        }
        while (this.d > 0)
        {
          System.arraycopy(this.e, 0, this.h, this.i, this.e.length);
          this.i += this.e.length;
          return;
          paramArrayOfByte = this.h;
          paramInt1 = this.i;
          this.i = (paramInt1 + 1);
          paramArrayOfByte[paramInt1] = b[(this.n >> 2 & 0x3F)];
          paramArrayOfByte = this.h;
          paramInt1 = this.i;
          this.i = (paramInt1 + 1);
          paramArrayOfByte[paramInt1] = b[(this.n << 4 & 0x3F)];
          paramArrayOfByte = this.h;
          paramInt1 = this.i;
          this.i = (paramInt1 + 1);
          paramArrayOfByte[paramInt1] = 61;
          paramArrayOfByte = this.h;
          paramInt1 = this.i;
          this.i = (paramInt1 + 1);
          paramArrayOfByte[paramInt1] = 61;
          continue;
          paramArrayOfByte = this.h;
          paramInt1 = this.i;
          this.i = (paramInt1 + 1);
          paramArrayOfByte[paramInt1] = b[(this.n >> 10 & 0x3F)];
          paramArrayOfByte = this.h;
          paramInt1 = this.i;
          this.i = (paramInt1 + 1);
          paramArrayOfByte[paramInt1] = b[(this.n >> 4 & 0x3F)];
          paramArrayOfByte = this.h;
          paramInt1 = this.i;
          this.i = (paramInt1 + 1);
          paramArrayOfByte[paramInt1] = b[(this.n << 2 & 0x3F)];
          paramArrayOfByte = this.h;
          paramInt1 = this.i;
          this.i = (paramInt1 + 1);
          paramArrayOfByte[paramInt1] = 61;
        }
      }
      else
      {
        int i1 = 0;
        while (i1 < paramInt2)
        {
          if ((this.h == null) || (this.h.length - this.i < this.g)) {
            b();
          }
          int i2 = this.l + 1;
          this.l = i2;
          this.l = (i2 % 3);
          int i3 = paramArrayOfByte[paramInt1];
          i2 = i3;
          if (i3 < 0) {
            i2 = i3 + 256;
          }
          this.n = (i2 + (this.n << 8));
          if (this.l == 0)
          {
            byte[] arrayOfByte = this.h;
            i2 = this.i;
            this.i = (i2 + 1);
            arrayOfByte[i2] = b[(this.n >> 18 & 0x3F)];
            arrayOfByte = this.h;
            i2 = this.i;
            this.i = (i2 + 1);
            arrayOfByte[i2] = b[(this.n >> 12 & 0x3F)];
            arrayOfByte = this.h;
            i2 = this.i;
            this.i = (i2 + 1);
            arrayOfByte[i2] = b[(this.n >> 6 & 0x3F)];
            arrayOfByte = this.h;
            i2 = this.i;
            this.i = (i2 + 1);
            arrayOfByte[i2] = b[(this.n & 0x3F)];
            this.k += 4;
            if ((this.d > 0) && (this.d <= this.k))
            {
              System.arraycopy(this.e, 0, this.h, this.i, this.e.length);
              this.i += this.e.length;
              this.k = 0;
            }
          }
          i1 += 1;
          paramInt1 += 1;
        }
      }
    }
  }
}
