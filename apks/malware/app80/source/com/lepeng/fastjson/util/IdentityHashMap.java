package com.lepeng.fastjson.util;

public class IdentityHashMap
{
  public static final int DEFAULT_TABLE_SIZE = 1024;
  private final IdentityHashMap.Entry[] a;
  private final int k;
  
  public IdentityHashMap()
  {
    this(1024);
  }
  
  public IdentityHashMap(int paramInt)
  {
    this.k = (paramInt - 1);
    this.a = new IdentityHashMap.Entry[paramInt];
  }
  
  public final Object get(Object paramObject)
  {
    int i = System.identityHashCode(paramObject);
    int j = this.k;
    for (IdentityHashMap.Entry localEntry = this.a[(i & j)];; localEntry = localEntry.next)
    {
      if (localEntry == null) {
        return null;
      }
      if (paramObject == localEntry.key) {
        return localEntry.value;
      }
    }
  }
  
  public boolean put(Object paramObject1, Object paramObject2)
  {
    int i = System.identityHashCode(paramObject1);
    int j = i & this.k;
    for (IdentityHashMap.Entry localEntry = this.a[j];; localEntry = localEntry.next)
    {
      if (localEntry == null)
      {
        paramObject1 = new IdentityHashMap.Entry(paramObject1, paramObject2, i, this.a[j]);
        this.a[j] = paramObject1;
        return false;
      }
      if (paramObject1 == localEntry.key)
      {
        localEntry.value = paramObject2;
        return true;
      }
    }
  }
  
  public int size()
  {
    int i = 0;
    int j = 0;
    if (i >= this.a.length) {
      return j;
    }
    IdentityHashMap.Entry localEntry = this.a[i];
    for (;;)
    {
      if (localEntry == null)
      {
        i += 1;
        break;
      }
      localEntry = localEntry.next;
      j += 1;
    }
  }
}
