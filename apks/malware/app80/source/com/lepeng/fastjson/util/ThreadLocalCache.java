package com.lepeng.fastjson.util;

import java.lang.ref.SoftReference;

public class ThreadLocalCache
{
  public static final int BYTES_CACH_INIT_SIZE = 1024;
  public static final int BYTeS_CACH_MAX_SIZE = 131072;
  public static final int CHARS_CACH_INIT_SIZE = 1024;
  public static final int CHARS_CACH_MAX_SIZE = 131072;
  private static final ThreadLocal d = new ThreadLocal();
  private static final ThreadLocal e = new ThreadLocal();
  
  public ThreadLocalCache() {}
  
  private static int a(int paramInt1, int paramInt2, int paramInt3)
  {
    int i;
    do
    {
      if (paramInt1 >= paramInt3) {
        return paramInt1;
      }
      i = paramInt1 * 2;
      paramInt1 = i;
    } while (i <= paramInt2);
    return paramInt3;
  }
  
  private static byte[] a(int paramInt)
  {
    int i = a(1024, 131072, paramInt);
    if (i <= 131072)
    {
      byte[] arrayOfByte = new byte[i];
      e.set(new SoftReference(arrayOfByte));
      return arrayOfByte;
    }
    return new byte[paramInt];
  }
  
  private static char[] a(int paramInt)
  {
    int i = a(1024, 131072, paramInt);
    if (i <= 131072)
    {
      char[] arrayOfChar = new char[i];
      d.set(new SoftReference(arrayOfChar));
      return arrayOfChar;
    }
    return new char[paramInt];
  }
  
  public static void clearBytes()
  {
    e.set(null);
  }
  
  public static void clearChars()
  {
    d.set(null);
  }
  
  public static byte[] getBytes(int paramInt)
  {
    Object localObject = (SoftReference)e.get();
    if (localObject == null) {
      localObject = a(paramInt);
    }
    byte[] arrayOfByte;
    do
    {
      return localObject;
      arrayOfByte = (byte[])((SoftReference)localObject).get();
      if (arrayOfByte == null) {
        return a(paramInt);
      }
      localObject = arrayOfByte;
    } while (arrayOfByte.length >= paramInt);
    return a(paramInt);
  }
  
  public static char[] getChars(int paramInt)
  {
    Object localObject = (SoftReference)d.get();
    if (localObject == null) {
      localObject = a(paramInt);
    }
    char[] arrayOfChar;
    do
    {
      return localObject;
      arrayOfChar = (char[])((SoftReference)localObject).get();
      if (arrayOfChar == null) {
        return a(paramInt);
      }
      localObject = arrayOfChar;
    } while (arrayOfChar.length >= paramInt);
    return a(paramInt);
  }
}
