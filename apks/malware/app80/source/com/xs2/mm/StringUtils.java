package com.xs2.mm;

public class StringUtils
{
  public StringUtils() {}
  
  public static String bytesToHex(byte[] paramArrayOfByte)
  {
    char[] arrayOfChar1 = "0123456789ABCDEF".toCharArray();
    char[] arrayOfChar2 = new char[paramArrayOfByte.length * 2];
    int i = 0;
    for (;;)
    {
      if (i >= paramArrayOfByte.length) {
        return new String(arrayOfChar2);
      }
      int j = paramArrayOfByte[i] & 0xFF;
      arrayOfChar2[(i * 2)] = arrayOfChar1[(j >>> 4)];
      arrayOfChar2[(i * 2 + 1)] = arrayOfChar1[(j & 0xF)];
      i += 1;
    }
  }
  
  private static byte charToByte(char paramChar)
  {
    return (byte)"0123456789ABCDEF".indexOf(paramChar);
  }
  
  public static byte[] hexStringToBytes(String paramString)
  {
    if ((paramString == null) || (paramString.equals("")))
    {
      paramString = null;
      return paramString;
    }
    paramString = paramString.toUpperCase();
    int j = paramString.length() / 2;
    char[] arrayOfChar = paramString.toCharArray();
    byte[] arrayOfByte = new byte[j];
    int i = 0;
    for (;;)
    {
      paramString = arrayOfByte;
      if (i >= j) {
        break;
      }
      int k = i * 2;
      int m = charToByte(arrayOfChar[k]);
      arrayOfByte[i] = ((byte)(charToByte(arrayOfChar[(k + 1)]) | m << 4));
      i += 1;
    }
  }
  
  public static String subAddfourth(int paramInt)
  {
    String str = paramInt;
    if (str.length() < 4) {
      for (;;)
      {
        if (str.length() >= 4) {
          return str;
        }
        str = "0" + str;
      }
    }
    return "0000";
  }
}
