package com.zhangzhifu.sdk.util;

import android.os.Environment;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.InputStream;

public class FileUtil
{
  private static String bI = "zpay";
  private static String bJ;
  
  public FileUtil() {}
  
  public static void delFolder(String paramString)
  {
    try
    {
      deleteZpayFile(paramString);
      new File(paramString.toString()).delete();
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  public static void deleteZpayFile(String paramString)
  {
    ZhangPayLog.showSaveLog("==", "删除文件" + paramString);
    for (;;)
    {
      try
      {
        File localFile = new File(paramString);
        localFile.exists();
        localFile.isDirectory();
        String[] arrayOfString = localFile.list();
        int i = 0;
        if (i >= arrayOfString.length) {
          return;
        }
        if (paramString.endsWith(File.separator))
        {
          localFile = new File(paramString + arrayOfString[i]);
          if (localFile.isFile()) {
            localFile.delete();
          }
          if (localFile.isDirectory())
          {
            deleteZpayFile(paramString + "/" + arrayOfString[i]);
            delFolder(paramString + "/" + arrayOfString[i]);
          }
        }
        else
        {
          localFile = new File(paramString + File.separator + arrayOfString[i]);
          continue;
        }
        i += 1;
      }
      catch (Exception paramString)
      {
        return;
      }
    }
  }
  
  public static String getExterPath()
  {
    if (bJ == null)
    {
      bJ = Environment.getExternalStorageDirectory().getPath();
      bJ = bJ + "/" + bI;
    }
    File localFile = new File(bJ);
    ZhangPayLog.showSaveLog("====", localFile.getAbsolutePath() + " , " + localFile.isDirectory() + " , " + localFile.exists());
    if ((!localFile.exists()) || (localFile.isFile())) {
      ZhangPayLog.showSaveLog("====", localFile.mkdir());
    }
    return bJ;
  }
  
  public static String getUserIdFromFile()
  {
    Object localObject = null;
    try
    {
      BufferedReader localBufferedReader = new BufferedReader(new FileReader(new File(Environment.getExternalStorageDirectory().getPath() + "/easoupay/userid.cfg")));
      String str;
      label80:
      for (;;) {}
    }
    catch (Exception localException1)
    {
      try
      {
        str = localBufferedReader.readLine();
        localObject = str;
        if (localObject == null) {
          break label118;
        }
      }
      catch (Exception localException2)
      {
        for (;;) {}
      }
      try
      {
        if (localObject.trim().equals("")) {
          break label118;
        }
        localBufferedReader.close();
        return localObject;
      }
      catch (Exception localException3)
      {
        break label80;
      }
      localException1 = localException1;
      localObject = null;
      localException1.printStackTrace();
      ZhangPayLog.showSaveLog("====", "复制user异常" + localException1.getMessage());
      return localObject;
    }
  }
  
  public static boolean saveFlashFile(InputStream paramInputStream, String paramString)
  {
    if ((paramInputStream == null) || (paramString == null) || (paramString.trim().equals(""))) {
      return false;
    }
    try
    {
      Object localObject = new File(paramString);
      if (((File)localObject).exists()) {
        ((File)localObject).delete();
      }
      paramString = new FileOutputStream(paramString);
      localObject = new BufferedOutputStream(paramString);
      byte[] arrayOfByte = new byte['Ѐ'];
      for (;;)
      {
        int i = paramInputStream.read(arrayOfByte);
        if (i == -1)
        {
          ((BufferedOutputStream)localObject).flush();
          ((BufferedOutputStream)localObject).close();
          paramString.close();
          paramInputStream.close();
          return true;
        }
        ((BufferedOutputStream)localObject).write(arrayOfByte, 0, i);
      }
      return false;
    }
    catch (Exception paramInputStream)
    {
      paramInputStream.printStackTrace();
      ZhangPayLog.showSaveLog("====", "复制异常" + paramInputStream.getMessage());
    }
  }
  
  public static boolean saveUserIdFile(String paramString)
  {
    if ((paramString == null) || (paramString.trim().equals(""))) {
      return false;
    }
    try
    {
      Object localObject = Environment.getExternalStorageDirectory().getPath() + "/easoupay/userid.cfg";
      File localFile = new File(Environment.getExternalStorageDirectory().getPath() + "/easoupay");
      if (!localFile.exists()) {
        localFile.mkdir();
      }
      localFile = new File((String)localObject);
      if (localFile.exists()) {
        localFile.delete();
      }
      localObject = new FileWriter((String)localObject, false);
      ((FileWriter)localObject).write(paramString);
      ((FileWriter)localObject).flush();
      ((FileWriter)localObject).close();
      return true;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
      ZhangPayLog.showSaveLog("====", "写入user异常" + paramString.getMessage());
    }
    return false;
  }
}
