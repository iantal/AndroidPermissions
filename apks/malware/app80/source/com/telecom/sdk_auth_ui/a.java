package com.telecom.sdk_auth_ui;

import android.app.Dialog;
import android.content.Context;
import android.content.res.AssetManager;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.text.TextUtils;
import android.text.TextUtils.TruncateAt;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.TextView;
import android.widget.Toast;
import com.telecom.sdk_auth_ui.f.e;
import com.telecom.sdk_auth_ui.ui.CheckBoxDF;
import java.io.IOException;
import java.util.Timer;

public class a
  implements View.OnClickListener
{
  public static final String a = a.class.getName();
  private RelativeLayout A;
  private Button B;
  private Button C;
  private final int D = 1000031;
  private final int E = 1000032;
  private EditText F;
  private EditText G;
  private EditText H;
  private Button I;
  private Button J;
  private final int K = 1000041;
  private final int L = 1000042;
  private final int M = 1000043;
  private EditText N;
  private EditText O;
  private EditText P;
  private EditText Q;
  private Button R;
  private Button S;
  private Button T;
  private View.OnTouchListener U;
  private Context V;
  private String W;
  private String X;
  private String Y;
  private String Z;
  private OnLoginListener aa;
  private OnModifyListener ab;
  private Timer ac = null;
  private d ad = null;
  LinearLayout.LayoutParams b = new LinearLayout.LayoutParams(-1, -2);
  private Dialog c;
  private Button d;
  private Button e;
  private final int f = 1000010;
  private final int g = 1000020;
  private final int h = 1000011;
  private final int i = 1000012;
  private final int j = 1000013;
  private final int k = 2000014;
  private EditText l;
  private EditText m;
  private CheckBoxDF n;
  private TextView o;
  private Button p;
  private Button q;
  private final int r = 1000021;
  private final int s = 1000022;
  private final int t = 1000023;
  private final int u = 1000024;
  private EditText v;
  private EditText w;
  private EditText x;
  private EditText y;
  private Button z;
  
  public a() {}
  
  private Button a(int paramInt)
  {
    Button localButton = new Button(this.V);
    localButton.setLayoutParams(this.b);
    localButton.setEnabled(false);
    localButton.setBackgroundColor(-16468818);
    if (paramInt == 0) {
      localButton.setText("修改密码");
    }
    while (1 != paramInt) {
      return localButton;
    }
    localButton.setText("重置密码");
    return localButton;
  }
  
  private LinearLayout a(Context paramContext)
  {
    LinearLayout localLinearLayout1 = new LinearLayout(paramContext);
    localLinearLayout1.setLayoutParams(new LinearLayout.LayoutParams(e.e(paramContext), -2));
    localLinearLayout1.setOrientation(1);
    localLinearLayout1.addView(b(0));
    LinearLayout localLinearLayout2 = new LinearLayout(paramContext);
    localLinearLayout2.setLayoutParams(this.b);
    localLinearLayout2.setPadding(15, 25, 15, 20);
    localLinearLayout2.setOrientation(1);
    this.l = new EditText(paramContext);
    this.m = new EditText(paramContext);
    a(localLinearLayout2, new EditText[] { this.l, this.m }, new String[] { "用户名", "密码" }, new int[] { 1, 129 });
    Object localObject1 = com.telecom.sdk_auth_ui.f.a.b(paramContext);
    Object localObject2 = com.telecom.sdk_auth_ui.f.a.c(paramContext);
    if (!TextUtils.isEmpty((CharSequence)localObject1)) {
      this.l.setText((CharSequence)localObject1);
    }
    if (!TextUtils.isEmpty((CharSequence)localObject2)) {
      this.m.setText((CharSequence)localObject2);
    }
    localObject1 = new LinearLayout(paramContext);
    ((LinearLayout)localObject1).setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
    ((LinearLayout)localObject1).setOrientation(0);
    ((LinearLayout)localObject1).setPadding(0, 15, 0, 0);
    this.n = new CheckBoxDF(paramContext);
    this.n.setId(2000014);
    this.n.setGravity(16);
    this.n.setLayoutParams(new LinearLayout.LayoutParams(-2, -2));
    this.n.setMaxWidth(e.e(paramContext) * 3 / 5);
    this.n.setEllipsize(TextUtils.TruncateAt.END);
    this.n.setText("保持我的登录信息");
    this.n.setSingleLine(true);
    this.n.setTextSize(14.0F);
    this.n.setOnClickListener(this);
    ((LinearLayout)localObject1).addView(this.n);
    localObject2 = new TextView(paramContext);
    LinearLayout.LayoutParams localLayoutParams = new LinearLayout.LayoutParams(0, -2);
    localLayoutParams.weight = 1.0F;
    ((TextView)localObject2).setLayoutParams(localLayoutParams);
    ((LinearLayout)localObject1).addView((View)localObject2);
    this.o = new TextView(paramContext);
    localObject2 = new LinearLayout.LayoutParams(-2, -2);
    this.o.setLayoutParams((ViewGroup.LayoutParams)localObject2);
    this.o.setText("忘记密码");
    this.o.setId(1000011);
    this.o.setTextColor(-65536);
    this.o.setTextSize(14.0F);
    this.o.setGravity(16);
    this.o.setPadding(0, 0, 2, 0);
    this.o.setOnClickListener(this);
    ((LinearLayout)localObject1).addView(this.o, (ViewGroup.LayoutParams)localObject2);
    localLinearLayout2.addView((View)localObject1);
    this.p = new Button(paramContext);
    this.q = new Button(paramContext);
    localLinearLayout2.addView(a(paramContext, new Button[] { this.p, this.q }, new String[] { "登录", "取消" }, new int[] { 1000012, 1000013 }));
    localLinearLayout1.addView(localLinearLayout2);
    return localLinearLayout1;
  }
  
  private LinearLayout a(Context paramContext, Button[] paramArrayOfButton, String[] paramArrayOfString, int[] paramArrayOfInt)
  {
    paramContext = new LinearLayout(paramContext);
    paramContext.setLayoutParams(this.b);
    paramContext.setPadding(0, 20, 0, 0);
    int i1 = 0;
    if (i1 < 2)
    {
      Button localButton = paramArrayOfButton[i1];
      localButton.setText(paramArrayOfString[i1]);
      localButton.setId(paramArrayOfInt[i1]);
      localButton.setTextColor(-1);
      LinearLayout.LayoutParams localLayoutParams;
      if (i1 == 0)
      {
        localLayoutParams = new LinearLayout.LayoutParams(0, -2);
        localLayoutParams.weight = 1.0F;
        localButton.setLayoutParams(localLayoutParams);
      }
      for (;;)
      {
        localButton.setBackgroundColor(-16468818);
        localButton.setOnClickListener(this);
        localButton.setOnTouchListener(this.U);
        paramContext.addView(localButton);
        i1 += 1;
        break;
        localLayoutParams = new LinearLayout.LayoutParams(0, -2);
        localLayoutParams.weight = 1.0F;
        localLayoutParams.setMargins(5, 0, 0, 0);
        localButton.setLayoutParams(localLayoutParams);
      }
    }
    paramContext.setGravity(1);
    return paramContext;
  }
  
  private void a(LinearLayout paramLinearLayout, EditText[] paramArrayOfEditText, String[] paramArrayOfString, int[] paramArrayOfInt)
  {
    int i1 = 0;
    if (i1 < paramArrayOfString.length)
    {
      EditText localEditText = paramArrayOfEditText[i1];
      LinearLayout.LayoutParams localLayoutParams = new LinearLayout.LayoutParams(-1, -1);
      if (i1 == 0) {}
      for (int i2 = 0;; i2 = 20)
      {
        localLayoutParams.setMargins(0, i2, 0, 0);
        localEditText.setLayoutParams(localLayoutParams);
        localEditText.setSingleLine();
        localEditText.setInputType(paramArrayOfInt[i1]);
        localEditText.setHint(paramArrayOfString[i1]);
        localEditText.setTextSize(14.0F);
        localEditText.setGravity(16);
        paramLinearLayout.addView(localEditText);
        i1 += 1;
        break;
      }
    }
  }
  
  private LinearLayout b(int paramInt)
  {
    LinearLayout localLinearLayout = new LinearLayout(this.V);
    localLinearLayout.setLayoutParams(this.b);
    LinearLayout.LayoutParams localLayoutParams = new LinearLayout.LayoutParams(0, -1);
    localLayoutParams.weight = 1.0F;
    this.d = new Button(this.V);
    this.d.setLayoutParams(localLayoutParams);
    this.d.setId(1000010);
    this.d.setText("登录");
    this.d.setTextColor(-1);
    if (paramInt == 0)
    {
      this.d.setEnabled(false);
      this.d.setBackgroundColor(-16468818);
      this.d.setOnClickListener(this);
      this.e = new Button(this.V);
      this.e.setLayoutParams(localLayoutParams);
      this.e.setId(1000020);
      this.e.setText("注册");
      this.e.setTextColor(-1);
      if (1 != paramInt) {
        break label225;
      }
      this.e.setEnabled(false);
      this.e.setBackgroundColor(-16468818);
    }
    for (;;)
    {
      this.e.setOnClickListener(this);
      localLinearLayout.addView(this.d);
      localLinearLayout.addView(this.e);
      return localLinearLayout;
      this.d.setBackgroundColor(-2565928);
      break;
      label225:
      this.e.setBackgroundColor(-2565928);
    }
  }
  
  private LinearLayout b(Context paramContext)
  {
    LinearLayout localLinearLayout1 = new LinearLayout(paramContext);
    localLinearLayout1.setLayoutParams(this.b);
    localLinearLayout1.setOrientation(1);
    localLinearLayout1.addView(a(0));
    LinearLayout localLinearLayout2 = new LinearLayout(paramContext);
    localLinearLayout2.setPadding(15, 20, 15, 20);
    localLinearLayout2.setLayoutParams(this.b);
    localLinearLayout2.setOrientation(1);
    this.F = new EditText(paramContext);
    this.G = new EditText(paramContext);
    this.H = new EditText(paramContext);
    a(localLinearLayout2, new EditText[] { this.F, this.G, this.H }, new String[] { "旧密码", "新密码", "确认密码" }, new int[] { 129, 129, 129 });
    this.I = new Button(paramContext);
    this.J = new Button(paramContext);
    localLinearLayout2.addView(a(paramContext, new Button[] { this.I, this.J }, new String[] { "确认", "取消" }, new int[] { 1000031, 1000032 }), this.b);
    localLinearLayout1.addView(localLinearLayout2);
    return localLinearLayout1;
  }
  
  private void b()
  {
    String str = this.N.getText().toString().trim();
    if (TextUtils.isEmpty(str))
    {
      Toast.makeText(this.V, "电信账号不能为空，请重新输入!", 0).show();
      return;
    }
    if (str.length() != 11)
    {
      Toast.makeText(this.V, "电信帐号应为11位，请重新输入！", 0).show();
      return;
    }
    this.ac = new Timer();
    this.ad = new d(this, this.R);
    this.ac.schedule(this.ad, 1000L, 1000L);
    Bundle localBundle = new Bundle();
    localBundle.putString("url", this.Z);
    localBundle.putString("appid", this.W);
    localBundle.putString("devid", this.X);
    localBundle.putString("appSecret", this.Y);
    localBundle.putString("phone", str);
    localBundle.putString("code_type", "getResetPwdCode");
    new com.telecom.sdk_auth_ui.b.a(this.V).execute(new Bundle[] { localBundle });
  }
  
  private LinearLayout c(Context paramContext)
  {
    LinearLayout localLinearLayout1 = new LinearLayout(paramContext);
    localLinearLayout1.setLayoutParams(this.b);
    localLinearLayout1.setOrientation(1);
    localLinearLayout1.addView(b(1));
    LinearLayout localLinearLayout2 = new LinearLayout(paramContext);
    localLinearLayout2.setPadding(15, 20, 15, 20);
    localLinearLayout2.setLayoutParams(this.b);
    localLinearLayout2.setOrientation(1);
    this.v = new EditText(paramContext);
    this.v.setId(1000024);
    this.w = new EditText(paramContext);
    this.x = new EditText(paramContext);
    a(localLinearLayout2, new EditText[] { this.v, this.w, this.x }, new String[] { "电信手机号码/邮箱帐户", "密码", "确认密码" }, new int[] { 1, 129, 129 });
    this.v.setOnFocusChangeListener(new b(this));
    this.A = new RelativeLayout(paramContext);
    this.A.setLayoutParams(new RelativeLayout.LayoutParams(-2, -1));
    this.A.setGravity(16);
    this.A.setPadding(0, 15, 0, 0);
    localLinearLayout2.addView(this.A, this.b);
    this.z = new Button(paramContext);
    RelativeLayout.LayoutParams localLayoutParams = new RelativeLayout.LayoutParams(-2, -2);
    localLayoutParams.setMargins(5, 0, 0, 0);
    localLayoutParams.addRule(11, -1);
    localLayoutParams.addRule(15, -1);
    this.z.setLayoutParams(localLayoutParams);
    this.z.setBackgroundColor(-16468858);
    this.z.setText("获取验证码");
    this.z.setTextColor(-1);
    this.z.setId(1000021);
    this.z.setOnTouchListener(new f(this));
    this.z.setOnClickListener(this);
    this.A.addView(this.z);
    this.y = new EditText(paramContext);
    localLayoutParams = new RelativeLayout.LayoutParams(-1, -2);
    localLayoutParams.addRule(9, -1);
    localLayoutParams.addRule(15, -1);
    localLayoutParams.addRule(0, this.z.getId());
    this.y.setLayoutParams(localLayoutParams);
    this.y.setSingleLine();
    this.y.setInputType(1);
    this.y.setHint("验证码");
    this.y.setTextSize(14.0F);
    this.y.setGravity(16);
    this.A.addView(this.y);
    this.B = new Button(paramContext);
    this.C = new Button(paramContext);
    localLinearLayout2.addView(a(paramContext, new Button[] { this.B, this.C }, new String[] { "注册", "取消" }, new int[] { 1000022, 1000023 }), this.b);
    localLinearLayout1.addView(localLinearLayout2);
    return localLinearLayout1;
  }
  
  private void c()
  {
    String str1 = this.N.getText().toString().trim();
    Object localObject = this.O.getText().toString().trim();
    String str2 = this.P.getText().toString().trim();
    String str3 = this.Q.getText().toString().trim();
    if ((TextUtils.isEmpty(str1)) || (TextUtils.isEmpty((CharSequence)localObject)) || (TextUtils.isEmpty(str2)) || (TextUtils.isEmpty(str3)))
    {
      Toast.makeText(this.V, "输入项不能为空！", 0).show();
      return;
    }
    if (str1.length() != 11)
    {
      Toast.makeText(this.V, "电信帐号应为11位，请重新输入！", 0).show();
      return;
    }
    if (!((String)localObject).equals(str2))
    {
      Toast.makeText(this.V, "两次密码输入不一致，请重新输入！", 0).show();
      return;
    }
    if (6 > str2.length())
    {
      Toast.makeText(this.V, "密码长度不能小于6位，请重新输入！", 0).show();
      return;
    }
    localObject = new Bundle();
    ((Bundle)localObject).putString("accountNo", str1);
    ((Bundle)localObject).putString("newPassword", str2);
    ((Bundle)localObject).putString("checkNo", str3);
    new j(this).execute(new Bundle[] { localObject });
  }
  
  private LinearLayout d(Context paramContext)
  {
    LinearLayout localLinearLayout1 = new LinearLayout(paramContext);
    localLinearLayout1.setLayoutParams(this.b);
    localLinearLayout1.setOrientation(1);
    localLinearLayout1.addView(a(1), this.b);
    LinearLayout localLinearLayout2 = new LinearLayout(paramContext);
    localLinearLayout2.setPadding(15, 20, 15, 20);
    localLinearLayout2.setLayoutParams(this.b);
    localLinearLayout2.setOrientation(1);
    this.N = new EditText(paramContext);
    this.O = new EditText(paramContext);
    this.P = new EditText(paramContext);
    a(localLinearLayout2, new EditText[] { this.N, this.O, this.P }, new String[] { "电信手机号码", "新密码", "确认密码" }, new int[] { 2, 129, 129 });
    RelativeLayout localRelativeLayout = new RelativeLayout(paramContext);
    localRelativeLayout.setLayoutParams(new RelativeLayout.LayoutParams(-2, -1));
    localRelativeLayout.setGravity(16);
    localRelativeLayout.setPadding(0, 15, 0, 0);
    localLinearLayout2.addView(localRelativeLayout, this.b);
    this.R = new Button(paramContext);
    RelativeLayout.LayoutParams localLayoutParams = new RelativeLayout.LayoutParams(-2, -2);
    localLayoutParams.setMargins(5, 0, 0, 0);
    localLayoutParams.addRule(11, -1);
    localLayoutParams.addRule(15, -1);
    this.R.setLayoutParams(localLayoutParams);
    this.R.setBackgroundColor(-16468858);
    this.R.setText("获取验证码");
    this.R.setTextColor(-1);
    this.R.setId(1000041);
    this.R.setOnTouchListener(new f(this));
    this.R.setOnClickListener(this);
    localRelativeLayout.addView(this.R);
    this.Q = new EditText(paramContext);
    localLayoutParams = new RelativeLayout.LayoutParams(-1, -2);
    localLayoutParams.addRule(9, -1);
    localLayoutParams.addRule(15, -1);
    localLayoutParams.addRule(0, this.R.getId());
    this.Q.setLayoutParams(localLayoutParams);
    this.Q.setSingleLine();
    this.Q.setInputType(1);
    this.Q.setHint("验证码");
    this.Q.setTextSize(14.0F);
    localRelativeLayout.addView(this.Q);
    this.S = new Button(paramContext);
    this.T = new Button(paramContext);
    localLinearLayout2.addView(a(paramContext, new Button[] { this.S, this.T }, new String[] { "确认", "取消" }, new int[] { 1000042, 1000043 }), this.b);
    localLinearLayout1.addView(localLinearLayout2);
    return localLinearLayout1;
  }
  
  private void d()
  {
    String str = this.v.getText().toString().trim();
    if (TextUtils.isEmpty(str))
    {
      Toast.makeText(this.V, "用户名不能为空，请重新输入!", 0).show();
      return;
    }
    if (str.length() != 11)
    {
      Toast.makeText(this.V, "电信帐号应为11位，请重新输入！", 0).show();
      return;
    }
    this.ac = new Timer();
    this.ad = new d(this, this.z);
    this.ac.schedule(this.ad, 1000L, 1000L);
    Bundle localBundle = new Bundle();
    localBundle.putString("url", this.Z);
    localBundle.putString("appid", this.W);
    localBundle.putString("devid", this.X);
    localBundle.putString("appSecret", this.Y);
    localBundle.putString("phone", str);
    localBundle.putString("code_type", "register");
    new com.telecom.sdk_auth_ui.b.a(this.V).execute(new Bundle[] { localBundle });
  }
  
  private void e()
  {
    String str2 = this.v.getText().toString().trim();
    String str3 = this.w.getText().toString().trim();
    String str4 = this.x.getText().toString().trim();
    if (e.b(str2)) {}
    for (String str1 = "1234"; (TextUtils.isEmpty(str2)) || (TextUtils.isEmpty(str3)) || (TextUtils.isEmpty(str4)) || (TextUtils.isEmpty(str1)); str1 = this.y.getText().toString().trim())
    {
      Toast.makeText(this.V, "输入项不能为空！", 0).show();
      return;
    }
    if ((!e.b(str2)) && (str2.length() != 11))
    {
      Toast.makeText(this.V, "邮箱格式错误或电信帐号不为11位，请重新输入！", 0).show();
      return;
    }
    if (!str3.equals(str4))
    {
      Toast.makeText(this.V, "两次输入密码不一致,请重新输入！", 0).show();
      return;
    }
    if (6 > this.w.length())
    {
      Toast.makeText(this.V, "密码长度不能小于6,请重新输入！", 0).show();
      return;
    }
    new i(this).execute(new String[] { str2, str3, str1 });
  }
  
  private void e(Context paramContext)
  {
    this.U = new c(this);
  }
  
  private void f()
  {
    String str1 = this.F.getText().toString().trim();
    String str2 = this.G.getText().toString().trim();
    String str3 = this.H.getText().toString().trim();
    if ((TextUtils.isEmpty(str1)) || (TextUtils.isEmpty(str2)) || (TextUtils.isEmpty(str3)))
    {
      Toast.makeText(this.V, "输入项不能为空！", 0).show();
      return;
    }
    if (!str2.equals(str3))
    {
      Toast.makeText(this.V, "两次输入新密码不一致，请重新输入！", 0).show();
      return;
    }
    new h(this).execute(new String[] { str1, str2 });
  }
  
  private void g()
  {
    String str1 = this.l.getText().toString().trim();
    String str2 = this.m.getText().toString().trim();
    if ((TextUtils.isEmpty(str1)) || (TextUtils.isEmpty(str2)))
    {
      Toast.makeText(this.V, "输入项不能为空！", 0).show();
      return;
    }
    new g(this).execute(new String[] { str1, str2 });
  }
  
  public void a()
  {
    e(this.V);
    this.c = new Dialog(this.V);
    this.c.requestWindowFeature(1);
    this.c.setContentView(d(this.V), new LinearLayout.LayoutParams(e.e(this.V), -2));
    this.c.show();
    try
    {
      this.c.getWindow().setBackgroundDrawable(new BitmapDrawable(this.V.getAssets().open("dialog_bg.png")));
      return;
    }
    catch (IOException localIOException) {}
  }
  
  public void a(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4)
  {
    this.V = paramContext;
    this.Z = paramString1;
    this.W = paramString3;
    this.X = paramString2;
    this.Y = paramString4;
    e(paramContext);
    if (this.c == null)
    {
      this.c = new Dialog(paramContext);
      this.c.requestWindowFeature(1);
    }
    this.c.setContentView(c(paramContext), new LinearLayout.LayoutParams(e.e(paramContext), -2));
    this.c.show();
    try
    {
      this.c.getWindow().setBackgroundDrawable(new BitmapDrawable(paramContext.getAssets().open("dialog_bg.png")));
      return;
    }
    catch (IOException paramContext) {}
  }
  
  public void a(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, OnLoginListener paramOnLoginListener)
  {
    this.V = paramContext;
    this.Z = paramString1;
    this.X = paramString2;
    this.W = paramString3;
    this.Y = paramString4;
    this.aa = paramOnLoginListener;
    e(paramContext);
    if (this.c == null)
    {
      this.c = new Dialog(paramContext);
      this.c.requestWindowFeature(1);
    }
    this.c.setContentView(a(paramContext), new LinearLayout.LayoutParams(e.e(paramContext), -2));
    this.c.show();
    try
    {
      this.c.getWindow().setBackgroundDrawable(new BitmapDrawable(paramContext.getAssets().open("dialog_bg.png")));
      return;
    }
    catch (IOException paramContext) {}
  }
  
  public void a(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, OnModifyListener paramOnModifyListener)
  {
    this.V = paramContext;
    this.Z = paramString1;
    this.X = paramString2;
    this.W = paramString3;
    this.Y = paramString4;
    this.ab = paramOnModifyListener;
    e(paramContext);
    this.c = new Dialog(paramContext);
    this.c.requestWindowFeature(1);
    paramString1 = new LinearLayout.LayoutParams(e.e(paramContext), -2);
    this.c.setContentView(b(paramContext), paramString1);
    this.c.show();
    try
    {
      this.c.getWindow().setBackgroundDrawable(new BitmapDrawable(paramContext.getAssets().open("dialog_bg.png")));
      return;
    }
    catch (IOException paramContext) {}
  }
  
  public void onClick(View paramView)
  {
    switch (paramView.getId())
    {
    default: 
    case 1000010: 
    case 1000020: 
    case 1000022: 
    case 1000021: 
    case 1000031: 
    case 1000012: 
    case 1000041: 
    case 1000042: 
    case 1000013: 
    case 1000023: 
    case 1000032: 
    case 1000043: 
      do
      {
        return;
        a(this.V, this.Z, this.X, this.W, this.Y, this.aa);
        return;
        a(this.V, this.Z, this.X, this.W, this.Y);
        return;
        e();
        return;
        d();
        return;
        f();
        return;
        g();
        return;
        b();
        return;
        c();
        return;
      } while (this.c == null);
      this.c.dismiss();
      return;
    }
    if (this.c != null) {
      this.c.dismiss();
    }
    a();
  }
}
