package com.umeng.common.net;

import android.app.NotificationManager;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.Debug;
import android.os.Handler;
import android.os.IBinder;
import android.os.Messenger;
import android.util.SparseArray;
import com.umeng.common.Log;
import java.util.HashMap;
import java.util.Map;

public class DownloadingService
  extends Service
{
  private static final long C = 8000L;
  private static final long D = 500L;
  private static Map E = new HashMap();
  private static SparseArray F = new SparseArray();
  private static Boolean G = Boolean.valueOf(false);
  static final int a = 1;
  static final int b = 2;
  static final int c = 3;
  static final int d = 4;
  static final int e = 5;
  static final int f = 6;
  public static final int g = 0;
  public static final int h = 1;
  public static final int i = 2;
  public static final int j = 3;
  public static final int k = 4;
  public static final int l = 5;
  public static final int m = 6;
  public static final int n = 7;
  static final int o = 100;
  static final String p = "filename";
  public static boolean r = false;
  private static final String t = DownloadingService.class.getName();
  private static final long w = 104857600L;
  private static final long x = 10485760L;
  private static final long y = 259200000L;
  private static final int z = 3;
  private Context A;
  private Handler B;
  DownloadingService.a q;
  final Messenger s = new Messenger(new DownloadingService.c(this));
  private NotificationManager u;
  private d v = new d();
  
  static
  {
    r = false;
  }
  
  public DownloadingService() {}
  
  private void a(a.a paramA)
  {
    int i1 = 0;
    Log.c(t, "startDownload([mComponentName:" + paramA.a + " mTitle:" + paramA.b + " mUrl:" + paramA.c + "])");
    int i2 = this.v.a(paramA);
    DownloadingService.b localB = new DownloadingService.b(this, getApplicationContext(), paramA, i2, 0, this.q);
    paramA = new d.b(paramA, i2);
    paramA.a(F);
    paramA.a = localB;
    localB.start();
    d();
    if (r) {
      while (i1 < F.size())
      {
        paramA = (d.b)F.valueAt(i1);
        Log.c(t, "Running task " + paramA.e.b);
        i1 += 1;
      }
    }
  }
  
  private void a(String paramString)
  {
    synchronized (G)
    {
      if (!G.booleanValue())
      {
        Log.c(t, "show single toast.[" + paramString + "]");
        G = Boolean.valueOf(true);
        this.B.post(new h(this, paramString));
        this.B.postDelayed(new i(this), 1200L);
      }
      return;
    }
  }
  
  private void d()
  {
    if (r)
    {
      int i1 = E.size();
      int i2 = F.size();
      Log.a(t, "Client size =" + i1 + "   cacheSize = " + i2);
      if (i1 != i2) {
        throw new RuntimeException("Client size =" + i1 + "   cacheSize = " + i2);
      }
    }
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    Log.c(t, "onBind ");
    return this.s.getBinder();
  }
  
  public void onCreate()
  {
    super.onCreate();
    if (r)
    {
      Log.LOG = true;
      Debug.waitForDebugger();
    }
    Log.LOG = true;
    Log.c(t, "onCreate ");
    this.u = ((NotificationManager)getSystemService("notification"));
    this.A = this;
    this.B = new f(this);
    this.q = new g(this);
  }
  
  public void onDestroy()
  {
    try
    {
      c.a(getApplicationContext()).a(259200);
      c.a(getApplicationContext()).finalize();
      super.onDestroy();
      return;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        Log.b(t, localException.getMessage());
      }
    }
  }
  
  public void onStart(Intent paramIntent, int paramInt)
  {
    Log.c(t, "onStart ");
    this.v.a(this, F, E, paramIntent);
    super.onStart(paramIntent, paramInt);
  }
}
