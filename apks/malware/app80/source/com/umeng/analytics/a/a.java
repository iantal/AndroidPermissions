package com.umeng.analytics.a;

import com.umeng.common.Log;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.Set;
import org.json.JSONObject;

public class a
  implements g
{
  public final HashMap a;
  public String b;
  public long c = 0L;
  public long d = 0L;
  private final String e = "id";
  private final String f = "ts";
  private final String g = "du";
  
  public a()
  {
    this.a = new HashMap();
  }
  
  public a(String paramString, HashMap paramHashMap, long paramLong)
  {
    this.b = paramString;
    this.a = a(paramHashMap);
    this.d = paramLong;
    this.c = b();
  }
  
  private HashMap a(HashMap paramHashMap)
  {
    int j = 0;
    if (paramHashMap.size() > 10)
    {
      int k = paramHashMap.size() - 10;
      String[] arrayOfString = new String[k];
      Iterator localIterator = paramHashMap.keySet().iterator();
      int i = 0;
      for (;;)
      {
        String str;
        if (localIterator.hasNext())
        {
          str = (String)localIterator.next();
          if (i < k) {}
        }
        else
        {
          k = arrayOfString.length;
          i = j;
          while (i < k)
          {
            paramHashMap.remove(arrayOfString[i]);
            i += 1;
          }
        }
        arrayOfString[i] = str;
        i += 1;
      }
    }
    return paramHashMap;
  }
  
  private long b()
  {
    return System.currentTimeMillis() / 1000L;
  }
  
  private void c(JSONObject paramJSONObject)
  {
    Iterator localIterator = this.a.entrySet().iterator();
    while (localIterator.hasNext())
    {
      Map.Entry localEntry = (Map.Entry)localIterator.next();
      paramJSONObject.put((String)localEntry.getKey(), localEntry.getValue());
    }
  }
  
  private void d(JSONObject paramJSONObject)
  {
    paramJSONObject.remove("id");
    paramJSONObject.remove("ts");
    paramJSONObject.remove("du");
    Iterator localIterator = paramJSONObject.keys();
    while (localIterator.hasNext())
    {
      String str = (String)localIterator.next();
      this.a.put(str, paramJSONObject.getString(str));
    }
  }
  
  public void a(JSONObject paramJSONObject)
  {
    if (paramJSONObject == null) {
      return;
    }
    try
    {
      this.b = paramJSONObject.getString("id");
      this.c = paramJSONObject.getLong("ts");
      if (paramJSONObject.has("du")) {
        this.d = paramJSONObject.getLong("du");
      }
      d(paramJSONObject);
      return;
    }
    catch (Exception paramJSONObject)
    {
      paramJSONObject.printStackTrace();
    }
  }
  
  public boolean a()
  {
    if ((this.b == null) || (this.c <= 0L))
    {
      Log.b("MobclickAgent", "mId or mTs is not initialized");
      return false;
    }
    if (this.a.isEmpty())
    {
      Log.b("MobclickAgent", "mCustomKV is not initialized");
      return false;
    }
    return true;
  }
  
  public void b(JSONObject paramJSONObject)
  {
    try
    {
      paramJSONObject.put("id", this.b);
      paramJSONObject.put("ts", this.c);
      if (this.d > 0L) {
        paramJSONObject.put("du", this.d);
      }
      c(paramJSONObject);
      return;
    }
    catch (Exception paramJSONObject)
    {
      paramJSONObject.printStackTrace();
    }
  }
}
