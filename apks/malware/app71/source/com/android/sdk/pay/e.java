package com.android.sdk.pay;

import android.util.Base64;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.net.SocketTimeoutException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.apache.http.Header;
import org.apache.http.HttpEntity;
import org.apache.http.HttpHost;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpRequestBase;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.entity.ByteArrayEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;
import org.apache.http.protocol.BasicHttpContext;
import org.apache.http.protocol.HttpContext;
import org.apache.http.util.EntityUtils;

public class e
  implements Runnable
{
  private static final String a = e.class.getSimpleName();
  private static int b = 0;
  private static HttpClient p = null;
  private static HttpClient q = null;
  private byte[] c;
  private int d;
  private String e;
  private int f;
  private int[] g;
  private List h;
  private int i;
  private int j;
  private int k;
  private int l;
  private int m;
  private String n;
  private byte[] o = null;
  
  public e(byte[] paramArrayOfByte)
  {
    for (;;)
    {
      int i1;
      int i2;
      try
      {
        byte[] arrayOfByte = "con_postbuf_begin\r\n\r\n".getBytes("UTF-8");
        i1 = ActivityTool.a(paramArrayOfByte, paramArrayOfByte.length, arrayOfByte, arrayOfByte.length, 0, paramArrayOfByte.length);
        if (i1 >= 0)
        {
          this.c = new byte[paramArrayOfByte.length - (arrayOfByte.length + i1)];
          System.arraycopy(paramArrayOfByte, arrayOfByte.length + i1, this.c, 0, paramArrayOfByte.length - (arrayOfByte.length + i1));
          paramArrayOfByte = new String(paramArrayOfByte, 0, i1, "UTF-8").replace("\r\n", "\n");
          this.e = b(paramArrayOfByte, "con_url");
          this.f = a(paramArrayOfByte, "con_mthd");
          this.g = new int[2];
          a(paramArrayOfByte, "con_range", this.g);
          i2 = a(paramArrayOfByte, "con_sector_cnt");
          if (i2 > 0)
          {
            this.h = new ArrayList();
            i1 = 0;
          }
          else
          {
            this.i = a(paramArrayOfByte, "con_timeout");
            this.d = a(paramArrayOfByte, "con_postbuf_len");
            this.j = a(paramArrayOfByte, "rlst_srvctrl");
            this.k = a(paramArrayOfByte, "rlst_posttype");
            this.l = a(paramArrayOfByte, "rlst_postmax");
            this.m = a(paramArrayOfByte, "rlst_automax");
            this.n = b(paramArrayOfByte, "rlst_posturl");
            if (this.n == null) {
              break;
            }
            this.n = new String(Base64.decode(this.n, 0));
          }
        }
        else
        {
          i1 = paramArrayOfByte.length;
          continue;
          a(paramArrayOfByte, "con_sector_info" + i1, this.h);
          i1 += 1;
        }
      }
      catch (Exception paramArrayOfByte)
      {
        paramArrayOfByte.printStackTrace();
        return;
      }
      if (i1 < i2) {}
    }
  }
  
  public static int a()
  {
    return b;
  }
  
  public int a(String paramString1, String paramString2)
  {
    return ActivityTool.d(b(paramString1, paramString2));
  }
  
  public boolean a(String paramString1, String paramString2, List paramList)
  {
    if (paramList == null) {}
    do
    {
      return false;
      paramString1 = Pattern.compile(paramString2 + "=\\[(.*?)\\]\\[(.*?)\\]\n").matcher(paramString1);
    } while (!paramString1.find());
    paramList.add(new e.a(paramString1.group(1), paramString1.group(2)));
    return true;
  }
  
  public boolean a(String paramString1, String paramString2, int[] paramArrayOfInt)
  {
    if ((paramArrayOfInt == null) || (paramArrayOfInt.length < 2)) {
      return false;
    }
    paramString1 = Pattern.compile(paramString2 + "=\\[(.*?)\\]\\[(.*?)\\]\n").matcher(paramString1);
    if (paramString1.find())
    {
      paramArrayOfInt[0] = ActivityTool.d(paramString1.group(1));
      paramArrayOfInt[1] = ActivityTool.d(paramString1.group(2));
      return true;
    }
    return false;
  }
  
  public byte[] a(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
  {
    int i2 = 0;
    h.b(ActivityTool.a);
    Object localObject;
    try
    {
      ActivityTool.b(a, "resultProcess");
      if ((this.n == null) || (!this.n.startsWith("http://"))) {
        break label646;
      }
      if (q == null) {
        q = new DefaultHttpClient();
      }
      HttpConnectionParams.setConnectionTimeout(q.getParams(), 30000);
      HttpConnectionParams.setSoTimeout(q.getParams(), 45000);
      q.getParams().setParameter("http.protocol.handle-redirects", Boolean.valueOf(true));
      localObject = new ByteArrayOutputStream();
      byte[] arrayOfByte1 = new byte[4];
      byte[] arrayOfByte2 = new byte[4];
      byte[] arrayOfByte3 = new byte[4];
      byte[] arrayOfByte4 = new byte[4];
      int i1;
      int i3;
      int i4;
      if (this.l == 0)
      {
        i1 = paramArrayOfByte2.length;
        i3 = this.e.getBytes("UTF-8").length;
        i4 = paramArrayOfByte1.length;
        label159:
        if (i2 < 4) {
          break label480;
        }
        ((ByteArrayOutputStream)localObject).write("PBCR".getBytes("UTF-8"));
        ((ByteArrayOutputStream)localObject).write(arrayOfByte2);
        ((ByteArrayOutputStream)localObject).write(arrayOfByte1);
        ((ByteArrayOutputStream)localObject).write(arrayOfByte3);
        ((ByteArrayOutputStream)localObject).write(arrayOfByte4);
        ((ByteArrayOutputStream)localObject).write(this.e.getBytes("UTF-8"));
        ((ByteArrayOutputStream)localObject).write(paramArrayOfByte1, 0, i4);
        if ((paramArrayOfByte2 != null) && (paramArrayOfByte2.length != 0)) {
          ((ByteArrayOutputStream)localObject).write(paramArrayOfByte2, 0, i1);
        }
        ActivityTool.b(a, "ConMgr.apn_is_wap=" + g.a + ";url=" + this.n);
        ActivityTool.b(a, this.n);
        paramArrayOfByte1 = new HttpPost(this.n);
        paramArrayOfByte2 = new ByteArrayEntity(((ByteArrayOutputStream)localObject).toByteArray());
        paramArrayOfByte2.setContentType("application/octet-stream");
        paramArrayOfByte1.setEntity(paramArrayOfByte2);
        paramArrayOfByte2 = ActivityTool.a().entrySet().iterator();
      }
      for (;;)
      {
        if (!paramArrayOfByte2.hasNext())
        {
          i1 = g.b(ActivityTool.a);
          ActivityTool.b(a, "curConnType=" + i1);
          paramArrayOfByte1.setHeader("C_C_TP", String.valueOf(i1));
          ActivityTool.b(a, "execute");
          localObject = q.execute(paramArrayOfByte1);
          i1 = ((HttpResponse)localObject).getStatusLine().getStatusCode();
          ActivityTool.b(a, "status_code=" + i1);
          if ((i1 == 200) || (i1 == 206)) {
            break label611;
          }
          return null;
          i1 = Math.min(paramArrayOfByte2.length, this.l);
          break;
          label480:
          arrayOfByte2[i2] = ((byte)(i3 >> (3 - i2 << 3) & 0xFF));
          arrayOfByte1[i2] = ((byte)(i1 >> (3 - i2 << 3) & 0xFF));
          arrayOfByte3[i2] = ((byte)(i4 >> (3 - i2 << 3) & 0xFF));
          arrayOfByte4[i2] = ((byte)(this.k >> (3 - i2 << 3) & 0xFF));
          i2 += 1;
          break label159;
        }
        localObject = (Map.Entry)paramArrayOfByte2.next();
        paramArrayOfByte1.setHeader((String)((Map.Entry)localObject).getKey(), (String)((Map.Entry)localObject).getValue());
      }
      paramArrayOfByte2 = EntityUtils.toByteArray(((HttpResponse)localObject).getEntity());
    }
    catch (Exception paramArrayOfByte1)
    {
      paramArrayOfByte1.printStackTrace();
      return null;
    }
    label611:
    paramArrayOfByte1 = paramArrayOfByte2;
    if (k.a((HttpResponse)localObject)) {
      paramArrayOfByte1 = k.a(paramArrayOfByte2);
    }
    ActivityTool.a(a, paramArrayOfByte1);
    return paramArrayOfByte1;
    label646:
    return null;
  }
  
  public String b(String paramString1, String paramString2)
  {
    paramString1 = Pattern.compile(paramString2 + "=\\[(.*?)\\]\n").matcher(paramString1);
    if (paramString1.find()) {
      return paramString1.group(1);
    }
    return null;
  }
  
  public byte[] b()
  {
    h.b(ActivityTool.a);
    try
    {
      ActivityTool.b(a, "conProcess");
      if (p == null) {
        p = new DefaultHttpClient();
      }
      localObject3 = new BasicHttpContext();
      HttpConnectionParams.setConnectionTimeout(p.getParams(), 30000);
      HttpConnectionParams.setSoTimeout(p.getParams(), 45000);
      p.getParams().setParameter("http.protocol.handle-redirects", Boolean.valueOf(true));
      ActivityTool.b(a, "ConMgr.apn_is_wap=" + g.a + ";url=" + this.e);
      if (this.f != 0) {
        break label684;
      }
      localObject1 = new HttpGet(this.e);
    }
    catch (Exception localException)
    {
      Object localObject1;
      localException.printStackTrace();
      return null;
      Object localObject6 = (e.a)((Iterator)localObject5).next();
      if (!((Map)localObject4).containsKey(((e.a)localObject6).a)) {
        break label866;
      }
      localException.setHeader(((e.a)localObject6).a, ((e.a)localObject6).b);
      while (((e.a)localObject6).a.equalsIgnoreCase("Host"))
      {
        break;
        localException.addHeader(((e.a)localObject6).a, ((e.a)localObject6).b);
      }
    }
    catch (OutOfMemoryError localOutOfMemoryError)
    {
      Object localObject4;
      Object localObject5;
      int i1;
      int i2;
      int i3;
      for (;;)
      {
        localOutOfMemoryError.printStackTrace();
        continue;
        localOutOfMemoryError.setHeader("Range", "bytes=" + this.g[0] + "-");
        continue;
        localObject2 = localOutOfMemoryError.toURI() + ((HttpUriRequest)localObject3).getURI();
        continue;
        localObject5 = localObject3[i1];
        if (i1 != 0) {
          ((StringBuffer)localObject2).append("&");
        }
        ((StringBuffer)localObject2).append(((Header)localObject5).getName());
        ((StringBuffer)localObject2).append("=");
        ((StringBuffer)localObject2).append(ActivityTool.a(((Header)localObject5).getValue()));
        i1 += 1;
      }
      Object localObject3 = localObject5[i1];
      Object localObject2 = localObject2 + ActivityTool.a(((Header)localObject3).getValue());
      i1 += 1;
      break label1278;
      if ((i2 < 400) || (i2 >= 500)) {
        break label1289;
      }
      ActivityTool.b(a, "status_code=" + i2);
      return new String("status_code=" + i2).getBytes("UTF-8");
      while ((i2 == 200) || (i2 == 206))
      {
        localObject2 = ((HttpResponse)localObject4).getEntity();
        ActivityTool.b(a, "ContentLength=" + ((HttpEntity)localObject2).getContentLength());
        boolean bool = k.b((HttpResponse)localObject4);
        localObject3 = ((HttpEntity)localObject2).getContent();
        localObject2 = new ByteArrayOutputStream();
        for (;;)
        {
          try
          {
            localObject4 = new byte[' '];
            i1 = ((InputStream)localObject3).read((byte[])localObject4);
            if (i1 > 0) {
              continue;
            }
          }
          catch (SocketTimeoutException localSocketTimeoutException)
          {
            localSocketTimeoutException.printStackTrace();
            continue;
          }
          localObject2 = ((ByteArrayOutputStream)localObject2).toByteArray();
          return localObject2;
          if ((!bool) || (this.l <= 0) || (((ByteArrayOutputStream)localObject2).size() <= this.l)) {
            ((ByteArrayOutputStream)localObject2).write((byte[])localObject4, 0, i1);
          }
        }
        if (i1 < i3) {
          break label1030;
        }
        break label558;
        break;
      }
    }
    localObject4 = ActivityTool.a();
    localObject5 = ((Map)localObject4).entrySet().iterator();
    for (;;)
    {
      if (!((Iterator)localObject5).hasNext())
      {
        i1 = g.b(ActivityTool.a);
        ActivityTool.b(a, "curConnType=" + i1);
        ((HttpRequestBase)localObject1).setHeader("C_C_TP", String.valueOf(i1));
        if (this.h.size() > 0)
        {
          localObject5 = this.h.iterator();
          if (((Iterator)localObject5).hasNext()) {
            break;
          }
          if ((this.g != null) && ((this.g[0] != 0) || (this.g[1] != 0)))
          {
            if (this.g[1] == 0) {
              break label894;
            }
            ((HttpRequestBase)localObject1).setHeader("Range", "bytes=" + this.g[0] + "-" + (this.g[0] + this.g[1] - 1));
          }
        }
        ActivityTool.b(a, "execute");
        localObject4 = p.execute((HttpUriRequest)localObject1, (HttpContext)localObject3);
        i2 = ((HttpResponse)localObject4).getStatusLine().getStatusCode();
        localObject1 = (HttpHost)((HttpContext)localObject3).getAttribute("http.target_host");
        localObject3 = (HttpUriRequest)((HttpContext)localObject3).getAttribute("http.request");
        if (!((HttpUriRequest)localObject3).getURI().isAbsolute()) {
          break label933;
        }
        localObject1 = ((HttpUriRequest)localObject3).getURI().toString();
        this.e = ((String)localObject1);
        localObject1 = new StringBuffer();
        localObject3 = ((HttpResponse)localObject4).getAllHeaders();
        if (localObject3 != null)
        {
          i1 = 0;
          if (i1 < localObject3.length) {
            break label966;
          }
          this.o = ((StringBuffer)localObject1).toString().getBytes("UTF-8");
        }
        ActivityTool.b(a, "status_code=" + i2);
        if ((i2 < 300) || (i2 >= 400)) {
          break label1073;
        }
        localObject5 = ((HttpResponse)localObject4).getHeaders("set-cookie");
        localObject3 = "";
        localObject1 = localObject3;
        if (localObject5 != null)
        {
          i3 = localObject5.length;
          i1 = 0;
          localObject1 = localObject3;
          break label1278;
        }
        label558:
        localObject3 = ActivityTool.a(((HttpResponse)localObject4).getFirstHeader("Location").getValue().replace("&amp;", "&"));
        ActivityTool.b(a, "status_code=" + i2 + ";session=" + (String)localObject1 + ";location=" + (String)localObject3);
        return new String("status_code=" + i2 + "&session=" + (String)localObject1 + "&location=" + (String)localObject3).getBytes("UTF-8");
        label684:
        localObject1 = new HttpPost(this.e);
        if ((this.c == null) || (this.c.length == 0) || (this.d != this.c.length)) {
          break label1286;
        }
        localObject4 = new ByteArrayEntity(this.c);
        ((ByteArrayEntity)localObject4).setContentType("application/x-www-form-urlencoded");
        ((HttpPost)localObject1).setEntity((HttpEntity)localObject4);
        break label1286;
      }
      localObject6 = (Map.Entry)((Iterator)localObject5).next();
      ((HttpRequestBase)localObject1).setHeader((String)((Map.Entry)localObject6).getKey(), (String)((Map.Entry)localObject6).getValue());
    }
    label866:
    label894:
    label933:
    label966:
    label1030:
    label1073:
    label1278:
    label1286:
    label1289:
    return null;
  }
  
  public void run()
  {
    int i2 = 0;
    b += 1;
    if (this.i != 0) {
      ActivityTool.a(this.i * 1000);
    }
    int i1 = i2;
    if (this.m > 0)
    {
      g.a(ActivityTool.a);
      i1 = i2;
    }
    i2 = i1 + 1;
    if (i1 >= 3)
    {
      ActivityTool.a(3000L);
      ActivityTool.b(a, "Thread End mCnt=" + b);
      b -= 1;
      g.c(ActivityTool.a);
      return;
    }
    ActivityTool.b(a, "run retry=" + i2 + ";mCnt=" + b);
    label401:
    for (;;)
    {
      try
      {
        if ((this.j > 0) && (this.e != null) && (this.e.startsWith("http")))
        {
          byte[] arrayOfByte2 = b();
          if ((arrayOfByte2 == null) && (i2 < 3))
          {
            Thread.sleep(3000L);
            i1 = i2;
            break;
          }
          if ((this.o == null) && (i2 == 3)) {
            this.o = new String("error").getBytes("UTF-8");
          }
          ActivityTool.b(a, "head_data:\n" + new String(this.o));
          if ((arrayOfByte2 != null) || (i2 != 3)) {
            break label401;
          }
          arrayOfByte2 = new String("error").getBytes("UTF-8");
          ActivityTool.b(a, "con_data:\n");
          ActivityTool.a(a, arrayOfByte2);
          byte[] arrayOfByte3 = a(this.o, arrayOfByte2);
          byte[] arrayOfByte1 = arrayOfByte3;
          if (arrayOfByte3 == null)
          {
            Thread.sleep(3000L);
            arrayOfByte2 = a(this.o, arrayOfByte2);
            arrayOfByte1 = arrayOfByte2;
            if (arrayOfByte2 == null)
            {
              i1 = i2;
              break;
            }
          }
          ActivityTool.b(a, "result_data:\n" + new String(arrayOfByte1));
          c.a().a(arrayOfByte1);
        }
        i1 = 3;
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
        i1 = i2;
      }
      break;
    }
  }
}
