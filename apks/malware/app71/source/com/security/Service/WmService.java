package com.security.Service;

import android.app.ActivityManager;
import android.app.ActivityManager.RunningServiceInfo;
import android.app.Service;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.os.Handler;
import android.os.IBinder;
import com.wimipay.util.DexLoader;
import com.wimipay.util.IApplication;
import com.wimipay.util.Logger;
import com.wimipay.util.Wimipay;
import java.util.Iterator;
import java.util.List;
import java.util.Timer;

public class WmService
  extends Service
{
  String TAG = "WmService";
  IApplication app;
  Handler mHandler = new WmService.1(this);
  long time = 0L;
  Timer timer;
  
  public WmService() {}
  
  public static void startService(Context paramContext)
  {
    boolean bool = false;
    Object localObject = ((ActivityManager)paramContext.getSystemService("activity")).getRunningServices(Integer.MAX_VALUE).iterator();
    for (;;)
    {
      if (!((Iterator)localObject).hasNext())
      {
        Logger.log(4, "WmService startService", bool);
        if (bool) {
          break;
        }
        paramContext.startService(new Intent(paramContext, WmService.class));
        return;
      }
      if (((ActivityManager.RunningServiceInfo)((Iterator)localObject).next()).service.getClassName().equals(WmService.class.getName())) {
        bool = true;
      }
    }
    if (Wimipay.iWimipay == null)
    {
      localObject = (IApplication)DexLoader.Load(paramContext, null);
      if (localObject != null) {
        ((IApplication)localObject).onCreate(paramContext, 1);
      }
    }
    Wimipay.notifyStartServiceFinish();
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    return null;
  }
  
  public void onCreate()
  {
    super.onCreate();
    Logger.log(4, this.TAG, "onCreate");
    if (this.timer == null)
    {
      this.timer = new Timer();
      this.timer.schedule(new WmService.Task(this), 1000L);
    }
  }
  
  public void onDestroy()
  {
    super.onDestroy();
    this.timer = null;
    if (this.app != null) {
      this.app.onDestroy(this);
    }
    this.app = null;
    this.mHandler = null;
    System.gc();
    Logger.log(4, this.TAG, "onDestroy");
  }
  
  public void onStart(Intent paramIntent, int paramInt)
  {
    super.onStart(paramIntent, paramInt);
    Logger.log(4, this.TAG, "onStart");
  }
}
