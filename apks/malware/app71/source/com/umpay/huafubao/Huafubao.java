package com.umpay.huafubao;

import android.app.Activity;
import android.content.Intent;
import android.text.TextUtils;
import android.widget.Toast;
import com.umpay.huafubao.d.a;
import com.umpay.huafubao.d.e;
import com.umpay.huafubao.e.b;
import com.umpay.huafubao.ui.BillingActivity;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Huafubao
{
  public static final String AMOUNT_STRING = "amount";
  public static final int ERROR_NO_AMOUNT = 5;
  public static final String ERROR_NO_AMOUNT_STR = "商品金额不能为空！";
  public static final int ERROR_NO_GOODSID = 2;
  public static final String ERROR_NO_GOODSID_STR = "商品号不能为空！";
  public static final int ERROR_NO_INSTALL = 6;
  public static final int ERROR_NO_MERDATE = 4;
  public static final String ERROR_NO_MERDATE_STR = "定单日期不能为空！";
  public static final int ERROR_NO_MERID = 1;
  public static final String ERROR_NO_MERID_STR = "商户号不能为空！";
  public static final int ERROR_NO_NETWORK = 7;
  public static final String ERROR_NO_NETWORK_STR = "没有可用的网络！";
  public static final int ERROR_NO_ORDERID = 3;
  public static final String ERROR_NO_ORDERID_STR = "定单号不能为空或格式不对！";
  public static final String EXPAND_STRING = "expand";
  public static final String GOODSID_STRING = "goodsId";
  public static final String GOODSINF_STRING = "goodsInf";
  public static final int HUAFUBAOREQCODE = 5554;
  public static final int HUAFUBAORESULTCODE = 5556;
  public static final String ISNETRESULT_STRING = "isNetResult";
  public static final String MERDATE_STRING = "merDate";
  public static final String MERID_STRING = "merId";
  public static final String MERPRIV_STRING = "merPriv";
  public static final String MOBILEID_STRING = "mobileId";
  public static final String ORDERID_STRING = "orderId";
  public static final String PACKAGAENAME = "com.umpay.huafubao";
  public static final String PAYTYPE = "paytype";
  public static final String SIGN_STRING = "sign";
  public static final String SUCC = "succ";
  public static final String VERIFYCODE_STRING = "verifyCode";
  private String a = "com.umpay.huafubao.ui.BillingActivity";
  private Activity b;
  private HuafubaoListener c;
  
  public Huafubao(Activity paramActivity, HuafubaoListener paramHuafubaoListener)
  {
    this.b = paramActivity;
    this.c = paramHuafubaoListener;
    e.a(paramActivity);
  }
  
  public static boolean checkOrderId(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return false;
    }
    return Pattern.compile("^[0-9a-zA-Z-*+_]{1,32}$").matcher(paramString).matches();
  }
  
  public void setRequest(Map paramMap)
  {
    setRequest(paramMap, true, PayType.HFB);
  }
  
  public void setRequest(Map paramMap, PayType paramPayType)
  {
    setRequest(paramMap, true, paramPayType);
  }
  
  public void setRequest(Map paramMap, boolean paramBoolean)
  {
    setRequest(paramMap, paramBoolean, PayType.HFB);
  }
  
  public void setRequest(Map paramMap, boolean paramBoolean, PayType paramPayType)
  {
    b localB = new b();
    localB.a = ((String)paramMap.get("merId"));
    localB.b = ((String)paramMap.get("goodsId"));
    localB.c = ((String)paramMap.get("orderId"));
    localB.d = ((String)paramMap.get("merDate"));
    localB.e = ((String)paramMap.get("amount"));
    localB.f = ((String)paramMap.get("merPriv"));
    localB.g = ((String)paramMap.get("expand"));
    localB.l = ((String)paramMap.get("mobileId"));
    localB.m = ((String)paramMap.get("goodsInf"));
    localB.k = paramBoolean;
    localB.n = paramPayType;
    this.a = "com.umpay.huafubao.ui.BillingActivity";
    int i;
    if (TextUtils.isEmpty(localB.a))
    {
      if (!this.c.onError(1, "商户号不能为空！")) {
        Toast.makeText(this.b, "商户号不能为空！", 0).show();
      }
      i = 0;
    }
    for (;;)
    {
      if (i != 0)
      {
        paramMap = new Intent();
        paramMap.setClassName(this.b, this.a);
        paramMap.putExtra("merId", localB.a);
        paramMap.putExtra("goodsId", localB.b);
        paramMap.putExtra("orderId", localB.c);
        paramMap.putExtra("merDate", localB.d);
        paramMap.putExtra("amount", localB.e);
        paramMap.putExtra("merPriv", localB.f);
        paramMap.putExtra("expand", localB.g);
        paramMap.putExtra("goodsInf", localB.m);
        paramMap.putExtra("isNetResult", localB.k);
        paramMap.putExtra("paytype", localB.n.name());
        BillingActivity.a(this.c);
        this.b.startActivityForResult(paramMap, 5554);
      }
      return;
      if (TextUtils.isEmpty(localB.b))
      {
        if (!this.c.onError(2, "商品号不能为空！")) {
          Toast.makeText(this.b, "商品号不能为空！", 0).show();
        }
        i = 0;
      }
      else if (!checkOrderId(localB.c))
      {
        if (!this.c.onError(3, "定单号不能为空或格式不对！")) {
          Toast.makeText(this.b, "定单号不能为空或格式不对！", 0).show();
        }
        i = 0;
      }
      else if (!a.a(localB.d, "yyyyMMdd"))
      {
        if (!this.c.onError(4, "定单日期不能为空！")) {
          Toast.makeText(this.b, "定单日期不能为空！", 0).show();
        }
        i = 0;
      }
      else if (!TextUtils.isDigitsOnly(localB.e))
      {
        if (!this.c.onError(5, "商品金额不能为空！")) {
          Toast.makeText(this.b, "商品金额不能为空！", 0).show();
        }
        i = 0;
      }
      else if (!a.e(this.b))
      {
        if (!this.c.onError(7, "没有可用的网络！")) {
          Toast.makeText(this.b, "没有可用的网络！", 0).show();
        }
        i = 0;
      }
      else
      {
        i = 1;
      }
    }
  }
}
