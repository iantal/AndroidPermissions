package com.fastfun2.sdk.util;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.provider.Settings.System;
import android.telephony.TelephonyManager;
import android.util.Log;
import java.text.SimpleDateFormat;
import java.util.Date;

public class InfoUtils
{
  public static final int SERVER_ALIPAY = 4;
  public static final int SERVER_MOBILE = 1;
  public static final int SERVER_TELECOM = 3;
  public static final int SERVER_UNICOM = 2;
  public static final int SERVER_UNIONPAY = 5;
  
  public InfoUtils() {}
  
  public static String getAppId(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData.getString("KLW_ID");
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return "0000";
  }
  
  public static String getChannel(Context paramContext)
  {
    for (;;)
    {
      int j;
      int i;
      try
      {
        str = SharedUtil.getString(paramContext, "SharedName_Channel", "SharedKey_Channel", null);
        if ((str != null) && (str.length() > 0)) {
          break;
        }
        str = String.valueOf(paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData.get("KLW_CHANNEL"));
        j = str.length();
        if (j >= 2) {
          break label108;
        }
        i = 0;
      }
      catch (Exception localException)
      {
        String str;
        localException.printStackTrace();
        return getUmengChannel(paramContext);
      }
      SharedUtil.editString(paramContext, "SharedName_Channel", "SharedKey_Channel", str);
      return str;
      str = "0" + str;
      i += 1;
      break label111;
      label108:
      continue;
      label111:
      if (i < 2 - j) {}
    }
    return localException;
  }
  
  public static String getNowDay()
  {
    Date localDate = new Date();
    return new SimpleDateFormat("yyyy-MM-dd").format(localDate);
  }
  
  public static String getNowMonth()
  {
    Date localDate = new Date();
    return new SimpleDateFormat("yyyy-MM").format(localDate);
  }
  
  public static final String getPhoneNumber(Context paramContext)
  {
    localObject = "";
    try
    {
      String str2 = SharedUtil.getString(paramContext, "SharedName_PhoneNumber", "SharedKey_PhoneNumber", null);
      try
      {
        String str1 = ((TelephonyManager)paramContext.getSystemService("phone")).getLine1Number();
        if (str1 != null)
        {
          int i = str1.length();
          if (i == 11) {}
        }
        else
        {
          str1 = "";
        }
        localObject = str1;
        if (str1.length() == 11)
        {
          localObject = str1;
          SharedUtil.editString(paramContext, "SharedName_PhoneNumber", "SharedKey_PhoneNumber", str1);
        }
        return str1;
      }
      catch (Exception paramContext)
      {
        return str2;
      }
      return localObject;
    }
    catch (Exception paramContext) {}
  }
  
  public static final int getPhoneType(Context paramContext)
  {
    paramContext = (TelephonyManager)paramContext.getSystemService("phone");
    try
    {
      paramContext = paramContext.getSubscriberId();
      if ((!paramContext.startsWith("46000")) && (!paramContext.startsWith("46002")))
      {
        if (paramContext.startsWith("46007")) {
          return 1;
        }
        if ((paramContext.startsWith("46001")) || (paramContext.startsWith("46006"))) {
          break label109;
        }
        if (!paramContext.startsWith("46003"))
        {
          boolean bool = paramContext.startsWith("46005");
          if (!bool) {}
        }
        else
        {
          return 3;
        }
      }
    }
    catch (IndexOutOfBoundsException paramContext)
    {
      Log.w("getPhoneType", "error");
      return 1;
    }
    catch (Exception paramContext)
    {
      Log.w("getPhoneType", "error");
    }
    return 1;
    label109:
    return 2;
  }
  
  public static final String getPhoneTypeToString(Context paramContext)
  {
    switch (getPhoneType(paramContext))
    {
    default: 
      return "移动";
    case 2: 
      return "联通";
    }
    return "电信";
  }
  
  private static String getUmengChannel(Context paramContext)
  {
    String str;
    for (;;)
    {
      int j;
      int i;
      try
      {
        str = SharedUtil.getString(paramContext, "SharedName_Channel", "SharedKey_Channel", null);
        if ((str != null) && (str.length() > 0)) {
          break;
        }
        str = String.valueOf(paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData.get("UMENG_CHANNEL"));
        j = str.length();
        if (j >= 2) {
          break label109;
        }
        i = 0;
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
        return "";
      }
      SharedUtil.editString(paramContext, "SharedName_Channel", "SharedKey_Channel", str.trim());
      return str;
      str = "0" + str;
      i += 1;
      break label112;
      label109:
      continue;
      label112:
      if (i < 2 - j) {}
    }
    return str;
  }
  
  public static String getVersionName(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getPackageInfo(paramContext.getPackageName(), 16384).versionName;
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return "1.0";
  }
  
  public static boolean isAirplaneModeOn(Context paramContext)
  {
    boolean bool = false;
    if (Settings.System.getInt(paramContext.getContentResolver(), "airplane_mode_on", 0) != 0) {
      bool = true;
    }
    return bool;
  }
  
  public static boolean isCanUseSim(Context paramContext)
  {
    try
    {
      int i = ((TelephonyManager)paramContext.getSystemService("phone")).getSimState();
      if (5 == i) {
        return true;
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
      return false;
    }
    return false;
  }
  
  public static void setChannel(Context paramContext, String paramString)
  {
    if ((paramString != null) && (paramString.length() > 0)) {
      SharedUtil.editString(paramContext, "SharedName_Channel", "SharedKey_Channel", paramString.trim());
    }
  }
}
