package com.klw2.json;

import java.util.Iterator;

public class HTTP
{
  public static final String CRLF = "\r\n";
  
  public HTTP() {}
  
  public static JSONObject toJSONObject(String paramString)
  {
    JSONObject localJSONObject = new JSONObject();
    paramString = new HTTPTokener(paramString);
    String str = paramString.nextToken();
    if (str.toUpperCase().startsWith("HTTP"))
    {
      localJSONObject.put("HTTP-Version", str);
      localJSONObject.put("Status-Code", paramString.nextToken());
      localJSONObject.put("Reason-Phrase", paramString.nextTo('\000'));
      paramString.next();
    }
    for (;;)
    {
      if (!paramString.more())
      {
        return localJSONObject;
        localJSONObject.put("Method", str);
        localJSONObject.put("Request-URI", paramString.nextToken());
        localJSONObject.put("HTTP-Version", paramString.nextToken());
      }
      else
      {
        str = paramString.nextTo(':');
        paramString.next(':');
        localJSONObject.put(str, paramString.nextTo('\000'));
        paramString.next();
      }
    }
  }
  
  public static String toString(JSONObject paramJSONObject)
  {
    Iterator localIterator = paramJSONObject.keys();
    StringBuilder localStringBuilder = new StringBuilder();
    if ((paramJSONObject.has("Status-Code")) && (paramJSONObject.has("Reason-Phrase")))
    {
      localStringBuilder.append(paramJSONObject.getString("HTTP-Version"));
      localStringBuilder.append(' ');
      localStringBuilder.append(paramJSONObject.getString("Status-Code"));
      localStringBuilder.append(' ');
      localStringBuilder.append(paramJSONObject.getString("Reason-Phrase"));
      localStringBuilder.append("\r\n");
    }
    for (;;)
    {
      if (!localIterator.hasNext())
      {
        localStringBuilder.append("\r\n");
        return localStringBuilder.toString();
        if ((paramJSONObject.has("Method")) && (paramJSONObject.has("Request-URI")))
        {
          localStringBuilder.append(paramJSONObject.getString("Method"));
          localStringBuilder.append(' ');
          localStringBuilder.append('"');
          localStringBuilder.append(paramJSONObject.getString("Request-URI"));
          localStringBuilder.append('"');
          localStringBuilder.append(' ');
          localStringBuilder.append(paramJSONObject.getString("HTTP-Version"));
          break;
        }
        throw new JSONException("Not enough material for an HTTP header.");
      }
      String str = (String)localIterator.next();
      if ((!"HTTP-Version".equals(str)) && (!"Status-Code".equals(str)) && (!"Reason-Phrase".equals(str)) && (!"Method".equals(str)) && (!"Request-URI".equals(str)) && (!paramJSONObject.isNull(str)))
      {
        localStringBuilder.append(str);
        localStringBuilder.append(": ");
        localStringBuilder.append(paramJSONObject.getString(str));
        localStringBuilder.append("\r\n");
      }
    }
  }
}
