package com.xs2.mm.wlog;

import android.content.Context;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import org.json.JSONException;
import org.json.JSONObject;

final class d
{
  long a;
  private final String b;
  private final Context c;
  private final String d;
  
  d(Context paramContext, String paramString1, String paramString2)
  {
    this.c = paramContext;
    this.b = paramString1;
    this.d = paramString2;
    this.a = -1L;
  }
  
  d(Context paramContext, String paramString1, String paramString2, long paramLong)
  {
    this.c = paramContext;
    this.b = paramString1;
    this.d = paramString2;
    this.a = paramLong;
  }
  
  public final void a()
  {
    Object localObject = new StringBuffer();
    try
    {
      ((StringBuffer)localObject).append(URLEncoder.encode(MobileUtils.getMOBILE_CHANNEL(this.c), "UTF-8"));
      ((StringBuffer)localObject).append("@@");
      ((StringBuffer)localObject).append(MobileUtils.getSubscriberId(this.c));
      ((StringBuffer)localObject).append("@@");
      ((StringBuffer)localObject).append(MobileUtils.getBuild_MANUFACTURER());
      ((StringBuffer)localObject).append("@@");
      ((StringBuffer)localObject).append(MobileUtils.getBuild_MODEL());
      ((StringBuffer)localObject).append("@@");
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException3)
    {
      try
      {
        ((StringBuffer)localObject).append(URLEncoder.encode(MobileUtils.getVERSION_RELEASE(), "UTF-8"));
        ((StringBuffer)localObject).append("@@");
        ((StringBuffer)localObject).append(MobileUtils.readMAC(this.c));
        ((StringBuffer)localObject).append("@@");
        ((StringBuffer)localObject).append(MobileUtils.access_netstate(this.c));
        ((StringBuffer)localObject).append("@@");
        ((StringBuffer)localObject).append(MobileUtils.getMetrics_widthPixels(this.c) + "*" + MobileUtils.getMetrics_heightPixels(this.c));
        ((StringBuffer)localObject).append("@@");
      }
      catch (UnsupportedEncodingException localUnsupportedEncodingException3)
      {
        try
        {
          for (;;)
          {
            ((StringBuffer)localObject).append(URLEncoder.encode(MobileUtils.filterStr900(this.b), "UTF-8"));
            StringBuffer localStringBuffer = new StringBuffer();
            try
            {
              localStringBuffer.append(URLEncoder.encode(MobileUtils.filterStr900(this.d), "UTF-8"));
              localStringBuffer.append("|");
              localStringBuffer.append(URLEncoder.encode(((StringBuffer)localObject).toString(), "UTF-8"));
              localStringBuffer.append("|");
              localStringBuffer.append(0);
              localStringBuffer.append("|");
              localStringBuffer.append(System.currentTimeMillis());
              localStringBuffer.append("\n");
              localObject = new JSONObject();
              ((JSONObject)localObject).put("sid", MobileAgent.getSessionId());
              ((JSONObject)localObject).put("logJsonAry", localStringBuffer.toString());
              if (this.a < 0L)
              {
                MobileAgent.sendEventMessage(this.c, null, ((JSONObject)localObject).toString());
                return;
              }
              MobileAgent.sendEventMessageDef(this.c, null, ((JSONObject)localObject).toString(), this.a);
              return;
            }
            catch (UnsupportedEncodingException localUnsupportedEncodingException1)
            {
              localUnsupportedEncodingException1.printStackTrace();
              return;
            }
            catch (JSONException localJSONException)
            {
              localJSONException.printStackTrace();
              return;
            }
            localUnsupportedEncodingException2 = localUnsupportedEncodingException2;
          }
          localUnsupportedEncodingException3 = localUnsupportedEncodingException3;
        }
        catch (UnsupportedEncodingException localUnsupportedEncodingException4)
        {
          for (;;) {}
        }
      }
    }
  }
}
