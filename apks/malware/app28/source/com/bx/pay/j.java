package com.bx.pay;

import android.app.AlertDialog.Builder;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.text.Html;
import com.bx.pay.a.c;
import com.bx.pay.a.d;
import com.bx.pay.a.f;
import com.bx.pay.netx.b;
import com.bx.pay.utils.i;
import com.bx.pay.utils.n;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public final class j
{
  public static Long a = Long.valueOf(0L);
  public static Integer b = Integer.valueOf(0);
  public static final Integer c = Integer.valueOf(0);
  public static final Integer d = Integer.valueOf(1);
  public static final Integer e = Integer.valueOf(-1);
  public static Map f = new HashMap();
  public static Map g = new HashMap();
  public static final HashMap h = new k();
  private static SharedPreferences i;
  private static final Pattern j = Pattern.compile("\\D?(\\d+?)(\\D)");
  private static final Pattern k = Pattern.compile("\\D?(\\d+?)(\\D)");
  private static final Pattern l = Pattern.compile("\\D?(\\d+?)(\\D)");
  
  public static void a(String paramString1, String paramString2, String paramString3, int paramInt)
  {
    HashMap localHashMap = new HashMap();
    Iterator localIterator = d.x.entrySet().iterator();
    for (;;)
    {
      if (!localIterator.hasNext())
      {
        if ((!n.a(paramString1)) && ((!localHashMap.containsKey("logCode")) || (n.a(localHashMap.get("logCode"))))) {
          localHashMap.put("logCode", paramString1);
        }
        localHashMap.put("smsNumber", paramString2);
        localHashMap.put("smsBody", paramString3);
        localHashMap.put("processStatus", String.valueOf(paramInt));
        new b(d.l, localHashMap, null).a(Boolean.valueOf(false)).a();
        return;
      }
      Map.Entry localEntry = (Map.Entry)localIterator.next();
      if (!n.a(localEntry.getValue())) {
        localHashMap.put((String)localEntry.getKey(), (String)localEntry.getValue());
      }
    }
  }
  
  public static boolean a(String paramString1, String paramString2, Long paramLong, Context paramContext, com.bx.pay.a.g paramG)
  {
    boolean bool1 = false;
    for (;;)
    {
      String str2;
      try
      {
        if (paramString1.contains("+86"))
        {
          str1 = paramString1.substring(3);
          str1 = str1.trim();
          boolean bool2 = str1.startsWith("106");
          if (!bool2) {
            return bool1;
          }
        }
        else
        {
          if (!paramString1.startsWith("86")) {
            break label487;
          }
          str1 = paramString1.substring(2);
          continue;
        }
        paramString1 = com.bx.pay.utils.g.a(String.valueOf(paramLong.longValue() / 100000L) + paramString1 + paramString2);
        if (g.containsKey(paramString1)) {
          continue;
        }
        g.put(paramString1, Boolean.valueOf(true));
        if (i == null) {
          i = i.a();
        }
        paramString1 = i.getString("showPay.payType", "");
        if (paramG.a())
        {
          if ((!d.p.equals(paramString1)) && (!d.q.equals(paramString1)) && (!d.r.equals(paramString1))) {
            new AlertDialog.Builder(paramContext).setTitle("确认支付").setMessage(Html.fromHtml("您订购的业务，需要您根据收到的短信内容提示进行操作来完成购买")).setPositiveButton("确定", null).show();
          }
        }
        else if (paramG.b())
        {
          str2 = paramG.c();
          paramLong = paramG.d();
          paramContext = paramG.e();
          paramString1 = paramLong;
          if (n.a(paramLong)) {
            paramString1 = str1;
          }
          if (("1".equals(str2)) || ("2".equals(str2)))
          {
            bool1 = n.a(paramContext);
            paramString2 = paramContext;
            if (bool1) {
              paramString2 = "Y";
            }
            paramString1 = paramString1 + "," + paramString2;
            if (n.a(paramString1)) {
              break label493;
            }
            new BXPay(c.a, (String)d.x.get("appId"), (String)d.x.get("channelCode")).a(paramString1);
            b = Integer.valueOf(b.intValue() + b.intValue());
            a = Long.valueOf(new Date().getTime());
          }
        }
      }
      finally {}
      if ("3".equals(str2))
      {
        paramString2 = Pattern.compile(paramContext).matcher(paramString2);
        if (paramString2.find())
        {
          paramString2 = paramString2.group(1);
          paramString1 = paramString1 + "," + paramString2;
          continue;
        }
      }
      paramString1 = "";
      continue;
      label487:
      String str1 = paramString1;
      continue;
      label493:
      bool1 = true;
    }
  }
  
  public static boolean a(String paramString1, String paramString2, Long paramLong, f paramF, com.bx.pay.a.g paramG)
  {
    boolean bool1 = true;
    label711:
    label717:
    for (;;)
    {
      try
      {
        boolean bool2 = paramF.e().booleanValue();
        if (!bool2)
        {
          bool1 = false;
          return bool1;
        }
        if (paramLong.longValue() < System.currentTimeMillis() - 120000L)
        {
          bool1 = false;
          continue;
        }
        String str1;
        if (paramString1.contains("+86"))
        {
          localObject = paramString1.substring(3);
          str1 = ((String)localObject).trim();
          localObject = paramF.c();
          paramString1 = paramF.b();
          if ((localObject == null) || (((List)localObject).isEmpty())) {
            break label711;
          }
          if (n.a(paramString2)) {
            break label711;
          }
        }
        else
        {
          localObject = paramString1;
          if (!paramString1.startsWith("86")) {
            continue;
          }
          localObject = paramString1.substring(2);
          continue;
        }
        String str2 = com.bx.pay.utils.g.a(String.valueOf(paramLong.longValue() / 1000L) + str1);
        if (f.containsKey(str2))
        {
          bool1 = false;
          continue;
        }
        f.put(str2, Boolean.valueOf(true));
        Object localObject = ((List)localObject).iterator();
        if (!((Iterator)localObject).hasNext())
        {
          bool1 = false;
          if (!bool1) {
            break label717;
          }
          if (i == null) {
            i = i.a();
          }
          paramString1 = i.getString("showPay.logCode", "");
          str2 = i.getString("showPay.payType", "");
          if (paramF.a().booleanValue()) {
            a(paramString1, str1, paramString2, c.intValue());
          }
          if ((!d.p.equals(str2)) && (!d.q.equals(str2)))
          {
            bool2 = d.r.equals(str2);
            if (!bool2) {
              break label717;
            }
          }
          localObject = "verify.smsNumber";
          paramF = "verify.smsBody";
          paramString1 = "verify.smsTime";
          bool2 = d.p.equals(str2);
          if (bool2)
          {
            localObject = "molife.smsNumber";
            paramF = "molife.smsBody";
            paramString1 = "molife.smsTime";
            SharedPreferences.Editor localEditor = i.edit();
            localEditor.putString((String)localObject, str1);
            localEditor.putString(paramF, paramString2);
            localEditor.putLong(paramString1, paramLong.longValue());
            localEditor.commit();
            paramString1 = "";
            if (paramG != null) {
              paramString1 = paramG.e();
            }
            if (n.a(paramString1)) {
              continue;
            }
            paramString1 = Pattern.compile(paramString1).matcher(paramString2);
            if (!paramString1.find()) {
              continue;
            }
            paramString1 = paramString1.group(1);
            new BXPay(c.a, (String)d.x.get("appId"), (String)d.x.get("channelCode")).a(paramString1);
            break label717;
          }
        }
        else
        {
          str2 = (String)((Iterator)localObject).next();
          if ((n.a(str2)) || (!str1.startsWith(str2)) || (!paramString1.containsKey(str2))) {
            continue;
          }
          str2 = (String)paramString1.get(str2);
          if (n.a(str2))
          {
            if (!str1.startsWith("106")) {
              continue;
            }
            bool1 = false;
            continue;
          }
          if (!Pattern.compile(str2).matcher(paramString2).find()) {
            continue;
          }
          continue;
        }
        bool2 = d.q.equals(str2);
        if (!bool2) {
          continue;
        }
        localObject = "pcsms.smsNumber";
        paramF = "pcsms.smsBody";
        paramString1 = "pcsms.smsTime";
        continue;
        if (str2.equals(d.p))
        {
          paramString1 = j.matcher(paramString2);
          if (paramString1.find()) {
            paramString1 = paramString1.group(1);
          }
        }
        else
        {
          if (str2.equals(d.q))
          {
            paramString1 = k.matcher(paramString2);
            continue;
          }
          paramString1 = l.matcher(paramString2);
          continue;
        }
        paramString1 = "";
        continue;
        bool1 = false;
      }
      finally {}
    }
  }
}
