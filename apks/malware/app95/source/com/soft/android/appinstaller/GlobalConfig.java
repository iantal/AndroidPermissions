package com.soft.android.appinstaller;

import android.content.Context;
import android.content.res.Resources;
import android.util.Log;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;

public final class GlobalConfig
{
  private static GlobalConfig instance;
  private static final String tag = "GlobalConfig";
  Context con;
  private HashMap<String, String> config;
  private HashMap<String, String> globalVars;
  private boolean isInitialized = false;
  private Resources res;
  
  private GlobalConfig()
  {
    Log.v("GlobalConfig", "Creating instance...");
    this.globalVars = new HashMap();
  }
  
  public static GlobalConfig getInstance()
  {
    if (instance == null) {
      instance = new GlobalConfig();
    }
    return instance;
  }
  
  private void parseConfigLine(String paramString)
  {
    int i = paramString.indexOf(' ');
    if (i <= 0) {
      return;
    }
    String str = paramString.substring(0, i);
    paramString = paramString.substring(i + 1);
    this.config.put(str, paramString);
  }
  
  public boolean existsRuntimeValue(String paramString)
  {
    return this.globalVars.containsKey(paramString);
  }
  
  public String getPrefsName()
  {
    return "prefs" + getValue("id");
  }
  
  public String getRuntimeValue(String paramString)
  {
    return (String)this.globalVars.get(paramString);
  }
  
  public String getValue(String paramString)
  {
    if (this.config == null) {
      paramString = "";
    }
    String str;
    do
    {
      return paramString;
      str = (String)this.config.get(paramString);
      paramString = str;
    } while (str != null);
    return "";
  }
  
  public String getValue(String paramString1, String paramString2)
  {
    if (this.config == null) {}
    do
    {
      return paramString2;
      paramString1 = (String)this.config.get(paramString1);
    } while (paramString1 == null);
    return paramString1;
  }
  
  public boolean getValueNull(String paramString)
  {
    if (this.config == null) {}
    while ((String)this.config.get(paramString) == null) {
      return true;
    }
    return false;
  }
  
  public void init(Context paramContext)
  {
    if (this.isInitialized) {}
    for (;;)
    {
      return;
      this.con = paramContext;
      this.isInitialized = true;
      this.config = new HashMap();
      this.res = paramContext.getResources();
      paramContext = this.res.openRawResource(2130968576);
      try
      {
        paramContext = new BufferedReader(new InputStreamReader(paramContext, "UTF-8"));
        for (;;)
        {
          String str = paramContext.readLine();
          if (str == null) {
            break;
          }
          parseConfigLine(str);
        }
        return;
      }
      catch (UnsupportedEncodingException paramContext)
      {
        paramContext.printStackTrace();
        return;
      }
      catch (IOException paramContext)
      {
        paramContext.printStackTrace();
      }
    }
  }
  
  public void setRuntimeValue(String paramString1, String paramString2)
  {
    this.globalVars.put(paramString1, paramString2);
  }
}
