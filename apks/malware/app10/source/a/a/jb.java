package a.a;

import android.content.Context;
import android.os.Build;
import android.os.Build.VERSION;
import android.text.TextUtils;
import com.umeng.analytics.AnalyticsConfig;
import com.umeng.analytics.e;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class jb
{
  private List<iz> a = new ArrayList();
  private n b = null;
  private ab c = null;
  private aw d = null;
  private dy e = null;
  private Context f = null;
  
  public jb(Context paramContext)
  {
    this.f = paramContext;
  }
  
  private void a(Context paramContext)
  {
    try
    {
      this.c.a(AnalyticsConfig.getAppkey(paramContext));
      this.c.e(AnalyticsConfig.getChannel(paramContext));
      if ((AnalyticsConfig.mWrapperType != null) && (AnalyticsConfig.mWrapperVersion != null))
      {
        this.c.f(AnalyticsConfig.mWrapperType);
        this.c.g(AnalyticsConfig.mWrapperVersion);
      }
      this.c.c(gg.o(paramContext));
      this.c.a(fd.a);
      this.c.d("5.5.3");
      this.c.b(gg.b(paramContext));
      this.c.a(Integer.parseInt(gg.a(paramContext)));
      this.c.b(AnalyticsConfig.mVerticalType);
      this.c.d(AnalyticsConfig.getSDKVersion());
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  private void b(Context paramContext)
  {
    try
    {
      this.d.e(gg.a());
      this.d.a(gg.c(paramContext));
      this.d.b(gg.d(paramContext));
      this.d.c(gg.k(paramContext));
      this.d.d(Build.MODEL);
      this.d.f("Android");
      this.d.g(Build.VERSION.RELEASE);
      paramContext = gg.l(paramContext);
      if (paramContext != null) {
        this.d.a(new ep(paramContext[1], paramContext[0]));
      }
      if ((AnalyticsConfig.GPU_RENDERER != null) && (AnalyticsConfig.GPU_VENDER != null)) {}
      this.d.h(Build.BOARD);
      this.d.i(Build.BRAND);
      this.d.a(Build.TIME);
      this.d.j(Build.MANUFACTURER);
      this.d.k(Build.ID);
      this.d.l(Build.DEVICE);
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  private void c(Context paramContext)
  {
    for (;;)
    {
      try
      {
        String[] arrayOfString = gg.e(paramContext);
        if ("Wi-Fi".equals(arrayOfString[0]))
        {
          this.e.a(m.c);
          if (!"".equals(arrayOfString[1])) {
            this.e.d(arrayOfString[1]);
          }
          this.e.c(gg.m(paramContext));
          arrayOfString = gg.i(paramContext);
          this.e.b(arrayOfString[0]);
          this.e.a(arrayOfString[1]);
          this.e.a(gg.h(paramContext));
          return;
        }
        if ("2G/3G".equals(arrayOfString[0])) {
          this.e.a(m.b);
        } else {
          this.e.a(m.a);
        }
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
        return;
      }
    }
  }
  
  public int a()
  {
    try
    {
      int j = this.a.size();
      n localN = this.b;
      int i = j;
      if (localN != null) {
        i = j + 1;
      }
      return i;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public void a(fs paramFs)
  {
    String str = jj.e(this.f);
    if (str == null) {
      return;
    }
    try
    {
      if ((this.b != null) && (new b(this.f).a()))
      {
        paramFs.a(this.b);
        this.b = null;
      }
      Iterator localIterator = this.a.iterator();
      while (localIterator.hasNext()) {
        ((iz)localIterator.next()).a(paramFs, str);
      }
      this.a.clear();
    }
    finally {}
    paramFs.a(b());
    paramFs.a(c());
    paramFs.a(d());
    paramFs.a(g());
    paramFs.a(e());
    paramFs.a(f());
    paramFs.a(h());
  }
  
  public void a(iz paramIz)
  {
    try
    {
      this.a.add(paramIz);
      return;
    }
    finally
    {
      paramIz = finally;
      throw paramIz;
    }
  }
  
  public void a(n paramN)
  {
    try
    {
      this.b = paramN;
      return;
    }
    finally
    {
      paramN = finally;
      throw paramN;
    }
  }
  
  public ab b()
  {
    try
    {
      if (this.c == null)
      {
        this.c = new ab();
        a(this.f);
      }
      ab localAb = this.c;
      return localAb;
    }
    finally {}
  }
  
  public aw c()
  {
    try
    {
      if (this.d == null)
      {
        this.d = new aw();
        b(this.f);
      }
      aw localAw = this.d;
      return localAw;
    }
    finally {}
  }
  
  public dy d()
  {
    try
    {
      if (this.e == null)
      {
        this.e = new dy();
        c(this.f);
      }
      dy localDy = this.e;
      return localDy;
    }
    finally {}
  }
  
  public cp e()
  {
    try
    {
      cp localCp = ij.a(this.f).a();
      return localCp;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return null;
  }
  
  public ch f()
  {
    try
    {
      ch localCh = hm.a(this.f).b();
      return localCh;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return null;
  }
  
  public ai g()
  {
    try
    {
      ai localAi = b.a(this.f);
      return localAi;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return new ai();
  }
  
  public u h()
  {
    String[] arrayOfString = e.a(this.f);
    if ((arrayOfString != null) && (!TextUtils.isEmpty(arrayOfString[0])) && (!TextUtils.isEmpty(arrayOfString[1]))) {
      return new u(arrayOfString[0], arrayOfString[1]);
    }
    return null;
  }
}
