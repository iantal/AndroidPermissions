package a.a;

import java.io.Serializable;
import java.util.Collections;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.Map;

public class fl
  implements gq<fl, fr>, Serializable, Cloneable
{
  public static final Map<fr, hf> c;
  private static final hy d = new hy("Traffic");
  private static final hq e = new hq("upload_traffic", (byte)8, (short)1);
  private static final hq f = new hq("download_traffic", (byte)8, (short)2);
  private static final Map<Class<? extends ia>, ib> g = new HashMap();
  public int a;
  public int b;
  private byte h = 0;
  
  static
  {
    g.put(ic.class, new fo(null));
    g.put(id.class, new fq(null));
    EnumMap localEnumMap = new EnumMap(fr.class);
    localEnumMap.put(fr.a, new hf("upload_traffic", (byte)1, new hg((byte)8)));
    localEnumMap.put(fr.b, new hf("download_traffic", (byte)1, new hg((byte)8)));
    c = Collections.unmodifiableMap(localEnumMap);
    hf.a(fl.class, c);
  }
  
  public fl() {}
  
  public fl a(int paramInt)
  {
    this.a = paramInt;
    a(true);
    return this;
  }
  
  public void a(ht paramHt)
  {
    ((ib)g.get(paramHt.y())).b().b(paramHt, this);
  }
  
  public void a(boolean paramBoolean)
  {
    this.h = go.a(this.h, 0, paramBoolean);
  }
  
  public boolean a()
  {
    return go.a(this.h, 0);
  }
  
  public fl b(int paramInt)
  {
    this.b = paramInt;
    b(true);
    return this;
  }
  
  public void b(ht paramHt)
  {
    ((ib)g.get(paramHt.y())).b().a(paramHt, this);
  }
  
  public void b(boolean paramBoolean)
  {
    this.h = go.a(this.h, 1, paramBoolean);
  }
  
  public boolean b()
  {
    return go.a(this.h, 1);
  }
  
  public void c() {}
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder("Traffic(");
    localStringBuilder.append("upload_traffic:");
    localStringBuilder.append(this.a);
    localStringBuilder.append(", ");
    localStringBuilder.append("download_traffic:");
    localStringBuilder.append(this.b);
    localStringBuilder.append(")");
    return localStringBuilder.toString();
  }
}
