package a.a;

import java.io.Serializable;
import java.util.Collections;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.Map;

public class ap
  implements gq<ap, av>, Serializable, Cloneable
{
  public static final Map<av, hf> b;
  private static final hy c = new hy("ControlPolicy");
  private static final hq d = new hq("latent", (byte)12, (short)1);
  private static final Map<Class<? extends ia>, ib> e = new HashMap();
  public dk a;
  private av[] f = { av.a };
  
  static
  {
    e.put(ic.class, new as(null));
    e.put(id.class, new au(null));
    EnumMap localEnumMap = new EnumMap(av.class);
    localEnumMap.put(av.a, new hf("latent", (byte)2, new hj((byte)12, dk.class)));
    b = Collections.unmodifiableMap(localEnumMap);
    hf.a(ap.class, b);
  }
  
  public ap() {}
  
  public ap a(dk paramDk)
  {
    this.a = paramDk;
    return this;
  }
  
  public void a(ht paramHt)
  {
    ((ib)e.get(paramHt.y())).b().b(paramHt, this);
  }
  
  public void a(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.a = null;
    }
  }
  
  public boolean a()
  {
    return this.a != null;
  }
  
  public void b()
  {
    if (this.a != null) {
      this.a.c();
    }
  }
  
  public void b(ht paramHt)
  {
    ((ib)e.get(paramHt.y())).b().a(paramHt, this);
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder("ControlPolicy(");
    if (a())
    {
      localStringBuilder.append("latent:");
      if (this.a != null) {
        break label50;
      }
      localStringBuilder.append("null");
    }
    for (;;)
    {
      localStringBuilder.append(")");
      return localStringBuilder.toString();
      label50:
      localStringBuilder.append(this.a);
    }
  }
}
