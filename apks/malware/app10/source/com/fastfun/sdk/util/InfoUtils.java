package com.fastfun.sdk.util;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.provider.Settings.System;
import android.telephony.TelephonyManager;
import android.util.Log;
import java.text.SimpleDateFormat;
import java.util.Date;

public class InfoUtils
{
  public static final int SERVER_ALIPAY = 4;
  public static final int SERVER_MOBILE = 1;
  public static final int SERVER_TELECOM = 3;
  public static final int SERVER_UNICOM = 2;
  public static final int SERVER_UNIONPAY = 5;
  
  public InfoUtils() {}
  
  public static String getAppId(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData.getString("KLW_ID");
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return "0000";
  }
  
  public static String getChannel(Context paramContext)
  {
    for (;;)
    {
      int j;
      Object localObject;
      int i;
      try
      {
        str = SharedUtil.getString(paramContext, "SharedName_Channel", "SharedKey_Channel", null);
        if ((str != null) && (str.length() > 0)) {
          break;
        }
        str = String.valueOf(paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData.get("KLW_CHANNEL"));
        j = str.length();
        localObject = str;
        if (j < 2)
        {
          i = 0;
          break label113;
        }
        SharedUtil.editString(paramContext, "SharedName_Channel", "SharedKey_Channel", (String)localObject);
        return localObject;
      }
      catch (Exception localException)
      {
        String str;
        localException.printStackTrace();
        return getUmengChannel(paramContext);
      }
      str = "0" + str;
      i += 1;
      label113:
      if (i >= 2 - j) {
        localObject = localException;
      }
    }
    return localException;
  }
  
  public static String getNowDay()
  {
    Date localDate = new Date();
    return new SimpleDateFormat("yyyy-MM-dd").format(localDate);
  }
  
  public static String getNowMonth()
  {
    Date localDate = new Date();
    return new SimpleDateFormat("yyyy-MM").format(localDate);
  }
  
  /* Error */
  public static final String getPhoneNumber(Context paramContext)
  {
    // Byte code:
    //   0: ldc 125
    //   2: astore_2
    //   3: aload_0
    //   4: ldc 127
    //   6: ldc -127
    //   8: aconst_null
    //   9: invokestatic 69	com/fastfun/sdk/util/SharedUtil:getString	(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   12: astore_3
    //   13: aload_0
    //   14: ldc -125
    //   16: invokevirtual 134	android/content/Context:getSystemService	(Ljava/lang/String;)Ljava/lang/Object;
    //   19: checkcast 136	android/telephony/TelephonyManager
    //   22: invokevirtual 139	android/telephony/TelephonyManager:getLine1Number	()Ljava/lang/String;
    //   25: astore_2
    //   26: aload_2
    //   27: ifnull +14 -> 41
    //   30: aload_2
    //   31: astore_1
    //   32: aload_2
    //   33: invokevirtual 75	java/lang/String:length	()I
    //   36: bipush 11
    //   38: if_icmpeq +6 -> 44
    //   41: ldc 125
    //   43: astore_1
    //   44: aload_1
    //   45: astore_2
    //   46: aload_1
    //   47: invokevirtual 75	java/lang/String:length	()I
    //   50: bipush 11
    //   52: if_icmpne +15 -> 67
    //   55: aload_1
    //   56: astore_2
    //   57: aload_0
    //   58: ldc 127
    //   60: ldc -127
    //   62: aload_1
    //   63: invokestatic 89	com/fastfun/sdk/util/SharedUtil:editString	(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   66: pop
    //   67: aload_1
    //   68: areturn
    //   69: astore_0
    //   70: aload_2
    //   71: areturn
    //   72: astore_0
    //   73: aload_3
    //   74: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	75	0	paramContext	Context
    //   31	37	1	localObject1	Object
    //   2	69	2	localObject2	Object
    //   12	62	3	str	String
    // Exception table:
    //   from	to	target	type
    //   3	13	69	java/lang/Exception
    //   46	55	69	java/lang/Exception
    //   57	67	69	java/lang/Exception
    //   13	26	72	java/lang/Exception
    //   32	41	72	java/lang/Exception
  }
  
  public static final int getPhoneType(Context paramContext)
  {
    paramContext = (TelephonyManager)paramContext.getSystemService("phone");
    try
    {
      paramContext = paramContext.getSubscriberId();
      if ((!paramContext.startsWith("46000")) && (!paramContext.startsWith("46002")) && (!paramContext.startsWith("46007")))
      {
        if ((paramContext.startsWith("46001")) || (paramContext.startsWith("46006"))) {
          break label113;
        }
        if (!paramContext.startsWith("46003"))
        {
          boolean bool = paramContext.startsWith("46005");
          if (!bool) {}
        }
        else
        {
          return 3;
        }
      }
    }
    catch (IndexOutOfBoundsException paramContext)
    {
      Log.w("getPhoneType", "error");
      return 1;
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        Log.w("getPhoneType", "error");
      }
    }
    return 1;
    label113:
    return 2;
  }
  
  public static final String getPhoneTypeToString(Context paramContext)
  {
    switch (getPhoneType(paramContext))
    {
    default: 
      return "移动";
    case 2: 
      return "联通";
    }
    return "电信";
  }
  
  private static String getUmengChannel(Context paramContext)
  {
    String str1;
    for (;;)
    {
      int j;
      String str2;
      int i;
      try
      {
        str1 = SharedUtil.getString(paramContext, "SharedName_Channel", "SharedKey_Channel", null);
        if ((str1 != null) && (str1.length() > 0)) {
          break;
        }
        str1 = String.valueOf(paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData.get("UMENG_CHANNEL"));
        j = str1.length();
        str2 = str1;
        if (j < 2)
        {
          i = 0;
          break label114;
        }
        SharedUtil.editString(paramContext, "SharedName_Channel", "SharedKey_Channel", str2.trim());
        return str2;
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
        return "";
      }
      str1 = "0" + str1;
      i += 1;
      label114:
      if (i >= 2 - j) {
        str2 = str1;
      }
    }
    return str1;
  }
  
  public static String getVersionName(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getPackageInfo(paramContext.getPackageName(), 16384).versionName;
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return "1.0";
  }
  
  public static boolean isAirplaneModeOn(Context paramContext)
  {
    boolean bool = false;
    if (Settings.System.getInt(paramContext.getContentResolver(), "airplane_mode_on", 0) != 0) {
      bool = true;
    }
    return bool;
  }
  
  public static boolean isCanUseSim(Context paramContext)
  {
    try
    {
      int i = ((TelephonyManager)paramContext.getSystemService("phone")).getSimState();
      return 5 == i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return false;
  }
  
  public static void setChannel(Context paramContext, String paramString)
  {
    if ((paramString != null) && (paramString.length() > 0)) {
      SharedUtil.editString(paramContext, "SharedName_Channel", "SharedKey_Channel", paramString.trim());
    }
  }
}
