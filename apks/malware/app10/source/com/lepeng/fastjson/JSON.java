package com.lepeng.fastjson;

import com.lepeng.fastjson.parser.DefaultJSONParser;
import com.lepeng.fastjson.parser.DefaultJSONParser.ResolveTask;
import com.lepeng.fastjson.parser.Feature;
import com.lepeng.fastjson.parser.JSONLexer;
import com.lepeng.fastjson.parser.ParseContext;
import com.lepeng.fastjson.parser.ParserConfig;
import com.lepeng.fastjson.parser.deserializer.FieldDeserializer;
import com.lepeng.fastjson.serializer.JSONSerializer;
import com.lepeng.fastjson.serializer.SerializeConfig;
import com.lepeng.fastjson.serializer.SerializeWriter;
import com.lepeng.fastjson.serializer.SerializerFeature;
import com.lepeng.fastjson.util.IOUtils;
import com.lepeng.fastjson.util.ThreadLocalCache;
import com.lepeng.fastjson.util.TypeUtils;
import java.io.IOException;
import java.lang.reflect.Type;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public abstract class JSON
  implements JSONAware, JSONStreamAware
{
  public static int DEFAULT_GENERATE_FEATURE = SerializerFeature.QuoteFieldNames.getMask() | 0x0 | SerializerFeature.SkipTransientField.getMask() | SerializerFeature.WriteEnumUsingToString.getMask() | SerializerFeature.SortField.getMask();
  public static int DEFAULT_PARSER_FEATURE = 0;
  public static String DEFAULT_TYPE_KEY = "@type";
  public static String DEFFAULT_DATE_FORMAT;
  public static final String VERSION = "1.1.34-android";
  
  static
  {
    DEFAULT_PARSER_FEATURE = Feature.AutoCloseSource.getMask() | 0x0 | Feature.InternFieldNames.getMask() | Feature.UseBigDecimal.getMask() | Feature.AllowUnQuotedFieldNames.getMask() | Feature.AllowSingleQuotes.getMask() | Feature.AllowArbitraryCommas.getMask() | Feature.SortFeidFastMatch.getMask() | Feature.IgnoreNotMatch.getMask();
    DEFFAULT_DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";
  }
  
  public JSON() {}
  
  public static <T> int handleResovleTask(DefaultJSONParser paramDefaultJSONParser, T paramT)
  {
    int j = paramDefaultJSONParser.getResolveTaskList().size();
    int i = 0;
    if (i >= j) {
      return j;
    }
    Object localObject = (DefaultJSONParser.ResolveTask)paramDefaultJSONParser.getResolveTaskList().get(i);
    FieldDeserializer localFieldDeserializer = ((DefaultJSONParser.ResolveTask)localObject).getFieldDeserializer();
    paramT = null;
    if (((DefaultJSONParser.ResolveTask)localObject).getOwnerContext() != null) {
      paramT = ((DefaultJSONParser.ResolveTask)localObject).getOwnerContext().getObject();
    }
    String str = ((DefaultJSONParser.ResolveTask)localObject).getReferenceValue();
    if (str.startsWith("$")) {}
    for (localObject = paramDefaultJSONParser.getObject(str);; localObject = ((DefaultJSONParser.ResolveTask)localObject).getContext().getObject())
    {
      localFieldDeserializer.setValue(paramT, localObject);
      i += 1;
      break;
    }
  }
  
  public static final Object parse(String paramString)
  {
    return parse(paramString, DEFAULT_PARSER_FEATURE);
  }
  
  public static final Object parse(String paramString, int paramInt)
  {
    if (paramString == null) {
      return null;
    }
    paramString = new DefaultJSONParser(paramString, ParserConfig.getGlobalInstance(), paramInt);
    Object localObject = paramString.parse();
    handleResovleTask(paramString, localObject);
    paramString.close();
    return localObject;
  }
  
  public static final Object parse(String paramString, Feature... paramVarArgs)
  {
    int j = DEFAULT_PARSER_FEATURE;
    int k = paramVarArgs.length;
    int i = 0;
    for (;;)
    {
      if (i >= k) {
        return parse(paramString, j);
      }
      j = Feature.config(j, paramVarArgs[i], true);
      i += 1;
    }
  }
  
  public static final Object parse(byte[] paramArrayOfByte, int paramInt1, int paramInt2, CharsetDecoder paramCharsetDecoder, int paramInt3)
  {
    paramCharsetDecoder.reset();
    char[] arrayOfChar = ThreadLocalCache.getChars((int)(paramInt2 * paramCharsetDecoder.maxCharsPerByte()));
    paramArrayOfByte = ByteBuffer.wrap(paramArrayOfByte, paramInt1, paramInt2);
    CharBuffer localCharBuffer = CharBuffer.wrap(arrayOfChar);
    IOUtils.decode(paramCharsetDecoder, paramArrayOfByte, localCharBuffer);
    paramArrayOfByte = new DefaultJSONParser(arrayOfChar, localCharBuffer.position(), ParserConfig.getGlobalInstance(), paramInt3);
    paramCharsetDecoder = paramArrayOfByte.parse();
    handleResovleTask(paramArrayOfByte, paramCharsetDecoder);
    paramArrayOfByte.close();
    return paramCharsetDecoder;
  }
  
  public static final Object parse(byte[] paramArrayOfByte, int paramInt1, int paramInt2, CharsetDecoder paramCharsetDecoder, Feature... paramVarArgs)
  {
    if ((paramArrayOfByte == null) || (paramArrayOfByte.length == 0)) {
      return null;
    }
    int j = DEFAULT_PARSER_FEATURE;
    int k = paramVarArgs.length;
    int i = 0;
    for (;;)
    {
      if (i >= k) {
        return parse(paramArrayOfByte, paramInt1, paramInt2, paramCharsetDecoder, j);
      }
      j = Feature.config(j, paramVarArgs[i], true);
      i += 1;
    }
  }
  
  public static final Object parse(byte[] paramArrayOfByte, Feature... paramVarArgs)
  {
    return parse(paramArrayOfByte, 0, paramArrayOfByte.length, Charset.forName("UTF-8").newDecoder(), paramVarArgs);
  }
  
  public static final JSONArray parseArray(String paramString)
  {
    Object localObject = null;
    if (paramString == null) {
      return null;
    }
    DefaultJSONParser localDefaultJSONParser = new DefaultJSONParser(paramString, ParserConfig.getGlobalInstance());
    JSONLexer localJSONLexer = localDefaultJSONParser.getLexer();
    if (localJSONLexer.token() == 8)
    {
      localJSONLexer.nextToken();
      paramString = localObject;
    }
    for (;;)
    {
      localDefaultJSONParser.close();
      return paramString;
      paramString = localObject;
      if (localJSONLexer.token() != 20)
      {
        paramString = new JSONArray();
        localDefaultJSONParser.parseArray(paramString);
        handleResovleTask(localDefaultJSONParser, paramString);
      }
    }
  }
  
  public static final <T> List<T> parseArray(String paramString, Class<T> paramClass)
  {
    Object localObject = null;
    if (paramString == null) {
      return null;
    }
    DefaultJSONParser localDefaultJSONParser = new DefaultJSONParser(paramString, ParserConfig.getGlobalInstance());
    paramString = localDefaultJSONParser.getLexer();
    if (paramString.token() == 8)
    {
      paramString.nextToken();
      paramString = localObject;
    }
    for (;;)
    {
      localDefaultJSONParser.close();
      return paramString;
      paramString = new ArrayList();
      localDefaultJSONParser.parseArray(paramClass, paramString);
      handleResovleTask(localDefaultJSONParser, paramString);
    }
  }
  
  public static final List<Object> parseArray(String paramString, Type[] paramArrayOfType)
  {
    Object localObject = null;
    if (paramString == null) {
      return null;
    }
    DefaultJSONParser localDefaultJSONParser = new DefaultJSONParser(paramString, ParserConfig.getGlobalInstance());
    paramString = localDefaultJSONParser.parseArray(paramArrayOfType);
    if (paramString == null) {}
    for (paramString = localObject;; paramString = Arrays.asList(paramString))
    {
      handleResovleTask(localDefaultJSONParser, paramString);
      localDefaultJSONParser.close();
      return paramString;
    }
  }
  
  public static final JSONObject parseObject(String paramString)
  {
    paramString = parse(paramString);
    if ((paramString instanceof JSONObject)) {
      return (JSONObject)paramString;
    }
    return (JSONObject)toJSON(paramString);
  }
  
  public static final JSONObject parseObject(String paramString, Feature... paramVarArgs)
  {
    return (JSONObject)parse(paramString, paramVarArgs);
  }
  
  public static final <T> T parseObject(String paramString, TypeReference<T> paramTypeReference, Feature... paramVarArgs)
  {
    return parseObject(paramString, paramTypeReference.getType(), ParserConfig.getGlobalInstance(), DEFAULT_PARSER_FEATURE, paramVarArgs);
  }
  
  public static final <T> T parseObject(String paramString, Class<T> paramClass)
  {
    return parseObject(paramString, paramClass, new Feature[0]);
  }
  
  public static final <T> T parseObject(String paramString, Class<T> paramClass, Feature... paramVarArgs)
  {
    return parseObject(paramString, paramClass, ParserConfig.getGlobalInstance(), DEFAULT_PARSER_FEATURE, paramVarArgs);
  }
  
  public static final <T> T parseObject(String paramString, Type paramType, int paramInt, Feature... paramVarArgs)
  {
    if (paramString == null) {
      return null;
    }
    int k = paramVarArgs.length;
    int j = 0;
    int i = paramInt;
    paramInt = j;
    for (;;)
    {
      if (paramInt >= k)
      {
        paramString = new DefaultJSONParser(paramString, ParserConfig.getGlobalInstance(), i);
        paramType = paramString.parseObject(paramType);
        handleResovleTask(paramString, paramType);
        paramString.close();
        return paramType;
      }
      i = Feature.config(i, paramVarArgs[paramInt], true);
      paramInt += 1;
    }
  }
  
  public static final <T> T parseObject(String paramString, Type paramType, ParserConfig paramParserConfig, int paramInt, Feature... paramVarArgs)
  {
    if (paramString == null) {
      return null;
    }
    int k = paramVarArgs.length;
    int j = 0;
    int i = paramInt;
    paramInt = j;
    for (;;)
    {
      if (paramInt >= k)
      {
        paramString = new DefaultJSONParser(paramString, paramParserConfig, i);
        paramType = paramString.parseObject(paramType);
        handleResovleTask(paramString, paramType);
        paramString.close();
        return paramType;
      }
      i = Feature.config(i, paramVarArgs[paramInt], true);
      paramInt += 1;
    }
  }
  
  public static final <T> T parseObject(String paramString, Type paramType, Feature... paramVarArgs)
  {
    return parseObject(paramString, paramType, ParserConfig.getGlobalInstance(), DEFAULT_PARSER_FEATURE, paramVarArgs);
  }
  
  public static final <T> T parseObject(byte[] paramArrayOfByte, int paramInt1, int paramInt2, CharsetDecoder paramCharsetDecoder, Type paramType, Feature... paramVarArgs)
  {
    paramCharsetDecoder.reset();
    char[] arrayOfChar = ThreadLocalCache.getChars((int)(paramInt2 * paramCharsetDecoder.maxCharsPerByte()));
    paramArrayOfByte = ByteBuffer.wrap(paramArrayOfByte, paramInt1, paramInt2);
    CharBuffer localCharBuffer = CharBuffer.wrap(arrayOfChar);
    IOUtils.decode(paramCharsetDecoder, paramArrayOfByte, localCharBuffer);
    return parseObject(arrayOfChar, localCharBuffer.position(), paramType, paramVarArgs);
  }
  
  public static final <T> T parseObject(byte[] paramArrayOfByte, Type paramType, Feature... paramVarArgs)
  {
    return parseObject(paramArrayOfByte, 0, paramArrayOfByte.length, Charset.forName("UTF-8").newDecoder(), paramType, paramVarArgs);
  }
  
  public static final <T> T parseObject(char[] paramArrayOfChar, int paramInt, Type paramType, Feature... paramVarArgs)
  {
    if ((paramArrayOfChar == null) || (paramArrayOfChar.length == 0)) {
      return null;
    }
    int j = DEFAULT_PARSER_FEATURE;
    int k = paramVarArgs.length;
    int i = 0;
    for (;;)
    {
      if (i >= k)
      {
        paramArrayOfChar = new DefaultJSONParser(paramArrayOfChar, paramInt, ParserConfig.getGlobalInstance(), j);
        paramType = paramArrayOfChar.parseObject(paramType);
        handleResovleTask(paramArrayOfChar, paramType);
        paramArrayOfChar.close();
        return paramType;
      }
      j = Feature.config(j, paramVarArgs[i], true);
      i += 1;
    }
  }
  
  public static final Object toJSON(Object paramObject)
  {
    return toJSON(paramObject, ParserConfig.getGlobalInstance());
  }
  
  /* Error */
  public static final Object toJSON(Object paramObject, ParserConfig paramParserConfig)
  {
    // Byte code:
    //   0: aload_0
    //   1: ifnonnull +9 -> 10
    //   4: aconst_null
    //   5: astore 4
    //   7: aload 4
    //   9: areturn
    //   10: aload_0
    //   11: instanceof 2
    //   14: ifeq +8 -> 22
    //   17: aload_0
    //   18: checkcast 2	com/lepeng/fastjson/JSON
    //   21: areturn
    //   22: aload_0
    //   23: instanceof 321
    //   26: ifeq +84 -> 110
    //   29: aload_0
    //   30: checkcast 321	java/util/Map
    //   33: astore_1
    //   34: new 272	com/lepeng/fastjson/JSONObject
    //   37: dup
    //   38: aload_1
    //   39: invokeinterface 322 1 0
    //   44: invokespecial 325	com/lepeng/fastjson/JSONObject:<init>	(I)V
    //   47: astore_0
    //   48: aload_1
    //   49: invokeinterface 329 1 0
    //   54: invokeinterface 335 1 0
    //   59: astore_1
    //   60: aload_1
    //   61: invokeinterface 341 1 0
    //   66: ifne +5 -> 71
    //   69: aload_0
    //   70: areturn
    //   71: aload_1
    //   72: invokeinterface 344 1 0
    //   77: checkcast 346	java/util/Map$Entry
    //   80: astore 4
    //   82: aload_0
    //   83: aload 4
    //   85: invokeinterface 349 1 0
    //   90: invokestatic 355	com/lepeng/fastjson/util/TypeUtils:castToString	(Ljava/lang/Object;)Ljava/lang/String;
    //   93: aload 4
    //   95: invokeinterface 358 1 0
    //   100: invokestatic 276	com/lepeng/fastjson/JSON:toJSON	(Ljava/lang/Object;)Ljava/lang/Object;
    //   103: invokevirtual 362	com/lepeng/fastjson/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
    //   106: pop
    //   107: goto -47 -> 60
    //   110: aload_0
    //   111: instanceof 364
    //   114: ifeq +57 -> 171
    //   117: aload_0
    //   118: checkcast 364	java/util/Collection
    //   121: astore_1
    //   122: new 243	com/lepeng/fastjson/JSONArray
    //   125: dup
    //   126: aload_1
    //   127: invokeinterface 365 1 0
    //   132: invokespecial 366	com/lepeng/fastjson/JSONArray:<init>	(I)V
    //   135: astore_0
    //   136: aload_1
    //   137: invokeinterface 367 1 0
    //   142: astore_1
    //   143: aload_1
    //   144: invokeinterface 341 1 0
    //   149: ifne +5 -> 154
    //   152: aload_0
    //   153: areturn
    //   154: aload_0
    //   155: aload_1
    //   156: invokeinterface 344 1 0
    //   161: invokestatic 276	com/lepeng/fastjson/JSON:toJSON	(Ljava/lang/Object;)Ljava/lang/Object;
    //   164: invokevirtual 371	com/lepeng/fastjson/JSONArray:add	(Ljava/lang/Object;)Z
    //   167: pop
    //   168: goto -25 -> 143
    //   171: aload_0
    //   172: invokevirtual 375	java/lang/Object:getClass	()Ljava/lang/Class;
    //   175: astore 5
    //   177: aload 5
    //   179: invokevirtual 380	java/lang/Class:isEnum	()Z
    //   182: ifeq +11 -> 193
    //   185: aload_0
    //   186: checkcast 382	java/lang/Enum
    //   189: invokevirtual 385	java/lang/Enum:name	()Ljava/lang/String;
    //   192: areturn
    //   193: aload 5
    //   195: invokevirtual 388	java/lang/Class:isArray	()Z
    //   198: ifeq +46 -> 244
    //   201: aload_0
    //   202: invokestatic 394	java/lang/reflect/Array:getLength	(Ljava/lang/Object;)I
    //   205: istore_3
    //   206: new 243	com/lepeng/fastjson/JSONArray
    //   209: dup
    //   210: iload_3
    //   211: invokespecial 366	com/lepeng/fastjson/JSONArray:<init>	(I)V
    //   214: astore_1
    //   215: iconst_0
    //   216: istore_2
    //   217: iload_2
    //   218: iload_3
    //   219: if_icmplt +5 -> 224
    //   222: aload_1
    //   223: areturn
    //   224: aload_1
    //   225: aload_0
    //   226: iload_2
    //   227: invokestatic 397	java/lang/reflect/Array:get	(Ljava/lang/Object;I)Ljava/lang/Object;
    //   230: invokestatic 276	com/lepeng/fastjson/JSON:toJSON	(Ljava/lang/Object;)Ljava/lang/Object;
    //   233: invokevirtual 371	com/lepeng/fastjson/JSONArray:add	(Ljava/lang/Object;)Z
    //   236: pop
    //   237: iload_2
    //   238: iconst_1
    //   239: iadd
    //   240: istore_2
    //   241: goto -24 -> 217
    //   244: aload_0
    //   245: astore 4
    //   247: aload_1
    //   248: aload 5
    //   250: invokevirtual 401	com/lepeng/fastjson/parser/ParserConfig:isPrimitive	(Ljava/lang/Class;)Z
    //   253: ifne -246 -> 7
    //   256: aload 5
    //   258: aconst_null
    //   259: invokestatic 405	com/lepeng/fastjson/util/TypeUtils:computeGetters	(Ljava/lang/Class;Ljava/util/Map;)Ljava/util/List;
    //   262: astore 4
    //   264: new 272	com/lepeng/fastjson/JSONObject
    //   267: dup
    //   268: aload 4
    //   270: invokeinterface 96 1 0
    //   275: invokespecial 325	com/lepeng/fastjson/JSONObject:<init>	(I)V
    //   278: astore_1
    //   279: aload 4
    //   281: invokeinterface 406 1 0
    //   286: astore 4
    //   288: aload 4
    //   290: invokeinterface 341 1 0
    //   295: ifne +5 -> 300
    //   298: aload_1
    //   299: areturn
    //   300: aload 4
    //   302: invokeinterface 344 1 0
    //   307: checkcast 408	com/lepeng/fastjson/util/FieldInfo
    //   310: astore 5
    //   312: aload 5
    //   314: aload_0
    //   315: invokevirtual 410	com/lepeng/fastjson/util/FieldInfo:get	(Ljava/lang/Object;)Ljava/lang/Object;
    //   318: invokestatic 276	com/lepeng/fastjson/JSON:toJSON	(Ljava/lang/Object;)Ljava/lang/Object;
    //   321: astore 6
    //   323: aload_1
    //   324: aload 5
    //   326: invokevirtual 413	com/lepeng/fastjson/util/FieldInfo:getName	()Ljava/lang/String;
    //   329: aload 6
    //   331: invokevirtual 362	com/lepeng/fastjson/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
    //   334: pop
    //   335: goto -47 -> 288
    //   338: astore_0
    //   339: new 415	com/lepeng/fastjson/JSONException
    //   342: dup
    //   343: ldc_w 417
    //   346: aload_0
    //   347: invokespecial 420	com/lepeng/fastjson/JSONException:<init>	(Ljava/lang/String;Ljava/lang/Throwable;)V
    //   350: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	351	0	paramObject	Object
    //   0	351	1	paramParserConfig	ParserConfig
    //   216	25	2	i	int
    //   205	15	3	j	int
    //   5	296	4	localObject1	Object
    //   175	150	5	localObject2	Object
    //   321	9	6	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   256	288	338	java/lang/Exception
    //   288	298	338	java/lang/Exception
    //   300	335	338	java/lang/Exception
  }
  
  /* Error */
  public static final byte[] toJSONBytes(Object paramObject, SerializeConfig paramSerializeConfig, SerializerFeature... paramVarArgs)
  {
    // Byte code:
    //   0: new 424	com/lepeng/fastjson/serializer/SerializeWriter
    //   3: dup
    //   4: invokespecial 425	com/lepeng/fastjson/serializer/SerializeWriter:<init>	()V
    //   7: astore 5
    //   9: new 427	com/lepeng/fastjson/serializer/JSONSerializer
    //   12: dup
    //   13: aload 5
    //   15: aload_1
    //   16: invokespecial 430	com/lepeng/fastjson/serializer/JSONSerializer:<init>	(Lcom/lepeng/fastjson/serializer/SerializeWriter;Lcom/lepeng/fastjson/serializer/SerializeConfig;)V
    //   19: astore_1
    //   20: aload_2
    //   21: arraylength
    //   22: istore 4
    //   24: iconst_0
    //   25: istore_3
    //   26: iload_3
    //   27: iload 4
    //   29: if_icmplt +23 -> 52
    //   32: aload_1
    //   33: aload_0
    //   34: invokevirtual 434	com/lepeng/fastjson/serializer/JSONSerializer:write	(Ljava/lang/Object;)V
    //   37: aload 5
    //   39: ldc -43
    //   41: invokevirtual 438	com/lepeng/fastjson/serializer/SerializeWriter:toBytes	(Ljava/lang/String;)[B
    //   44: astore_0
    //   45: aload 5
    //   47: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   50: aload_0
    //   51: areturn
    //   52: aload_1
    //   53: aload_2
    //   54: iload_3
    //   55: aaload
    //   56: iconst_1
    //   57: invokevirtual 442	com/lepeng/fastjson/serializer/JSONSerializer:config	(Lcom/lepeng/fastjson/serializer/SerializerFeature;Z)V
    //   60: iload_3
    //   61: iconst_1
    //   62: iadd
    //   63: istore_3
    //   64: goto -38 -> 26
    //   67: astore_0
    //   68: aload 5
    //   70: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   73: aload_0
    //   74: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	75	0	paramObject	Object
    //   0	75	1	paramSerializeConfig	SerializeConfig
    //   0	75	2	paramVarArgs	SerializerFeature[]
    //   25	39	3	i	int
    //   22	8	4	j	int
    //   7	62	5	localSerializeWriter	SerializeWriter
    // Exception table:
    //   from	to	target	type
    //   9	24	67	finally
    //   32	45	67	finally
    //   52	60	67	finally
  }
  
  /* Error */
  public static final byte[] toJSONBytes(Object paramObject, SerializerFeature... paramVarArgs)
  {
    // Byte code:
    //   0: new 424	com/lepeng/fastjson/serializer/SerializeWriter
    //   3: dup
    //   4: invokespecial 425	com/lepeng/fastjson/serializer/SerializeWriter:<init>	()V
    //   7: astore 4
    //   9: new 427	com/lepeng/fastjson/serializer/JSONSerializer
    //   12: dup
    //   13: aload 4
    //   15: invokespecial 446	com/lepeng/fastjson/serializer/JSONSerializer:<init>	(Lcom/lepeng/fastjson/serializer/SerializeWriter;)V
    //   18: astore 5
    //   20: aload_1
    //   21: arraylength
    //   22: istore_3
    //   23: iconst_0
    //   24: istore_2
    //   25: iload_2
    //   26: iload_3
    //   27: if_icmplt +24 -> 51
    //   30: aload 5
    //   32: aload_0
    //   33: invokevirtual 434	com/lepeng/fastjson/serializer/JSONSerializer:write	(Ljava/lang/Object;)V
    //   36: aload 4
    //   38: ldc -43
    //   40: invokevirtual 438	com/lepeng/fastjson/serializer/SerializeWriter:toBytes	(Ljava/lang/String;)[B
    //   43: astore_0
    //   44: aload 4
    //   46: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   49: aload_0
    //   50: areturn
    //   51: aload 5
    //   53: aload_1
    //   54: iload_2
    //   55: aaload
    //   56: iconst_1
    //   57: invokevirtual 442	com/lepeng/fastjson/serializer/JSONSerializer:config	(Lcom/lepeng/fastjson/serializer/SerializerFeature;Z)V
    //   60: iload_2
    //   61: iconst_1
    //   62: iadd
    //   63: istore_2
    //   64: goto -39 -> 25
    //   67: astore_0
    //   68: aload 4
    //   70: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   73: aload_0
    //   74: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	75	0	paramObject	Object
    //   0	75	1	paramVarArgs	SerializerFeature[]
    //   24	40	2	i	int
    //   22	6	3	j	int
    //   7	62	4	localSerializeWriter	SerializeWriter
    //   18	34	5	localJSONSerializer	JSONSerializer
    // Exception table:
    //   from	to	target	type
    //   9	23	67	finally
    //   30	44	67	finally
    //   51	60	67	finally
  }
  
  public static final String toJSONString(Object paramObject)
  {
    return toJSONString(paramObject, new SerializerFeature[0]);
  }
  
  /* Error */
  public static final String toJSONString(Object paramObject, SerializeConfig paramSerializeConfig, SerializerFeature... paramVarArgs)
  {
    // Byte code:
    //   0: new 424	com/lepeng/fastjson/serializer/SerializeWriter
    //   3: dup
    //   4: invokespecial 425	com/lepeng/fastjson/serializer/SerializeWriter:<init>	()V
    //   7: astore 5
    //   9: new 427	com/lepeng/fastjson/serializer/JSONSerializer
    //   12: dup
    //   13: aload 5
    //   15: aload_1
    //   16: invokespecial 430	com/lepeng/fastjson/serializer/JSONSerializer:<init>	(Lcom/lepeng/fastjson/serializer/SerializeWriter;Lcom/lepeng/fastjson/serializer/SerializeConfig;)V
    //   19: astore_1
    //   20: aload_2
    //   21: arraylength
    //   22: istore 4
    //   24: iconst_0
    //   25: istore_3
    //   26: iload_3
    //   27: iload 4
    //   29: if_icmplt +21 -> 50
    //   32: aload_1
    //   33: aload_0
    //   34: invokevirtual 434	com/lepeng/fastjson/serializer/JSONSerializer:write	(Ljava/lang/Object;)V
    //   37: aload 5
    //   39: invokevirtual 454	com/lepeng/fastjson/serializer/SerializeWriter:toString	()Ljava/lang/String;
    //   42: astore_0
    //   43: aload 5
    //   45: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   48: aload_0
    //   49: areturn
    //   50: aload_1
    //   51: aload_2
    //   52: iload_3
    //   53: aaload
    //   54: iconst_1
    //   55: invokevirtual 442	com/lepeng/fastjson/serializer/JSONSerializer:config	(Lcom/lepeng/fastjson/serializer/SerializerFeature;Z)V
    //   58: iload_3
    //   59: iconst_1
    //   60: iadd
    //   61: istore_3
    //   62: goto -36 -> 26
    //   65: astore_0
    //   66: aload 5
    //   68: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   71: aload_0
    //   72: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	73	0	paramObject	Object
    //   0	73	1	paramSerializeConfig	SerializeConfig
    //   0	73	2	paramVarArgs	SerializerFeature[]
    //   25	37	3	i	int
    //   22	8	4	j	int
    //   7	60	5	localSerializeWriter	SerializeWriter
    // Exception table:
    //   from	to	target	type
    //   9	24	65	finally
    //   32	43	65	finally
    //   50	58	65	finally
  }
  
  /* Error */
  public static final String toJSONString(Object paramObject, com.lepeng.fastjson.serializer.SerializeFilter paramSerializeFilter, SerializerFeature... paramVarArgs)
  {
    // Byte code:
    //   0: new 424	com/lepeng/fastjson/serializer/SerializeWriter
    //   3: dup
    //   4: invokespecial 425	com/lepeng/fastjson/serializer/SerializeWriter:<init>	()V
    //   7: astore 5
    //   9: new 427	com/lepeng/fastjson/serializer/JSONSerializer
    //   12: dup
    //   13: aload 5
    //   15: invokespecial 446	com/lepeng/fastjson/serializer/JSONSerializer:<init>	(Lcom/lepeng/fastjson/serializer/SerializeWriter;)V
    //   18: astore 6
    //   20: aload_2
    //   21: arraylength
    //   22: istore 4
    //   24: iconst_0
    //   25: istore_3
    //   26: iload_3
    //   27: iload 4
    //   29: if_icmplt +123 -> 152
    //   32: aload 6
    //   34: getstatic 458	com/lepeng/fastjson/serializer/SerializerFeature:WriteDateUseDateFormat	Lcom/lepeng/fastjson/serializer/SerializerFeature;
    //   37: iconst_1
    //   38: invokevirtual 442	com/lepeng/fastjson/serializer/JSONSerializer:config	(Lcom/lepeng/fastjson/serializer/SerializerFeature;Z)V
    //   41: aload_1
    //   42: ifnull +91 -> 133
    //   45: aload_1
    //   46: instanceof 460
    //   49: ifeq +18 -> 67
    //   52: aload 6
    //   54: invokevirtual 463	com/lepeng/fastjson/serializer/JSONSerializer:getPropertyPreFilters	()Ljava/util/List;
    //   57: aload_1
    //   58: checkcast 460	com/lepeng/fastjson/serializer/PropertyPreFilter
    //   61: invokeinterface 464 2 0
    //   66: pop
    //   67: aload_1
    //   68: instanceof 466
    //   71: ifeq +18 -> 89
    //   74: aload 6
    //   76: invokevirtual 469	com/lepeng/fastjson/serializer/JSONSerializer:getNameFilters	()Ljava/util/List;
    //   79: aload_1
    //   80: checkcast 466	com/lepeng/fastjson/serializer/NameFilter
    //   83: invokeinterface 464 2 0
    //   88: pop
    //   89: aload_1
    //   90: instanceof 471
    //   93: ifeq +18 -> 111
    //   96: aload 6
    //   98: invokevirtual 474	com/lepeng/fastjson/serializer/JSONSerializer:getValueFilters	()Ljava/util/List;
    //   101: aload_1
    //   102: checkcast 471	com/lepeng/fastjson/serializer/ValueFilter
    //   105: invokeinterface 464 2 0
    //   110: pop
    //   111: aload_1
    //   112: instanceof 476
    //   115: ifeq +18 -> 133
    //   118: aload 6
    //   120: invokevirtual 479	com/lepeng/fastjson/serializer/JSONSerializer:getPropertyFilters	()Ljava/util/List;
    //   123: aload_1
    //   124: checkcast 476	com/lepeng/fastjson/serializer/PropertyFilter
    //   127: invokeinterface 464 2 0
    //   132: pop
    //   133: aload 6
    //   135: aload_0
    //   136: invokevirtual 434	com/lepeng/fastjson/serializer/JSONSerializer:write	(Ljava/lang/Object;)V
    //   139: aload 5
    //   141: invokevirtual 454	com/lepeng/fastjson/serializer/SerializeWriter:toString	()Ljava/lang/String;
    //   144: astore_0
    //   145: aload 5
    //   147: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   150: aload_0
    //   151: areturn
    //   152: aload 6
    //   154: aload_2
    //   155: iload_3
    //   156: aaload
    //   157: iconst_1
    //   158: invokevirtual 442	com/lepeng/fastjson/serializer/JSONSerializer:config	(Lcom/lepeng/fastjson/serializer/SerializerFeature;Z)V
    //   161: iload_3
    //   162: iconst_1
    //   163: iadd
    //   164: istore_3
    //   165: goto -139 -> 26
    //   168: astore_0
    //   169: aload 5
    //   171: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   174: aload_0
    //   175: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	176	0	paramObject	Object
    //   0	176	1	paramSerializeFilter	com.lepeng.fastjson.serializer.SerializeFilter
    //   0	176	2	paramVarArgs	SerializerFeature[]
    //   25	140	3	i	int
    //   22	8	4	j	int
    //   7	163	5	localSerializeWriter	SerializeWriter
    //   18	135	6	localJSONSerializer	JSONSerializer
    // Exception table:
    //   from	to	target	type
    //   9	24	168	finally
    //   32	41	168	finally
    //   45	67	168	finally
    //   67	89	168	finally
    //   89	111	168	finally
    //   111	133	168	finally
    //   133	145	168	finally
    //   152	161	168	finally
  }
  
  public static final String toJSONString(Object paramObject, boolean paramBoolean)
  {
    if (!paramBoolean) {
      return toJSONString(paramObject);
    }
    return toJSONString(paramObject, new SerializerFeature[] { SerializerFeature.PrettyFormat });
  }
  
  /* Error */
  public static final String toJSONString(Object paramObject, SerializerFeature... paramVarArgs)
  {
    // Byte code:
    //   0: new 424	com/lepeng/fastjson/serializer/SerializeWriter
    //   3: dup
    //   4: invokespecial 425	com/lepeng/fastjson/serializer/SerializeWriter:<init>	()V
    //   7: astore 4
    //   9: new 427	com/lepeng/fastjson/serializer/JSONSerializer
    //   12: dup
    //   13: aload 4
    //   15: invokespecial 446	com/lepeng/fastjson/serializer/JSONSerializer:<init>	(Lcom/lepeng/fastjson/serializer/SerializeWriter;)V
    //   18: astore 5
    //   20: aload_1
    //   21: arraylength
    //   22: istore_3
    //   23: iconst_0
    //   24: istore_2
    //   25: iload_2
    //   26: iload_3
    //   27: if_icmplt +22 -> 49
    //   30: aload 5
    //   32: aload_0
    //   33: invokevirtual 434	com/lepeng/fastjson/serializer/JSONSerializer:write	(Ljava/lang/Object;)V
    //   36: aload 4
    //   38: invokevirtual 454	com/lepeng/fastjson/serializer/SerializeWriter:toString	()Ljava/lang/String;
    //   41: astore_0
    //   42: aload 4
    //   44: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   47: aload_0
    //   48: areturn
    //   49: aload 5
    //   51: aload_1
    //   52: iload_2
    //   53: aaload
    //   54: iconst_1
    //   55: invokevirtual 442	com/lepeng/fastjson/serializer/JSONSerializer:config	(Lcom/lepeng/fastjson/serializer/SerializerFeature;Z)V
    //   58: iload_2
    //   59: iconst_1
    //   60: iadd
    //   61: istore_2
    //   62: goto -37 -> 25
    //   65: astore_0
    //   66: aload 4
    //   68: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   71: aload_0
    //   72: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	73	0	paramObject	Object
    //   0	73	1	paramVarArgs	SerializerFeature[]
    //   24	38	2	i	int
    //   22	6	3	j	int
    //   7	60	4	localSerializeWriter	SerializeWriter
    //   18	32	5	localJSONSerializer	JSONSerializer
    // Exception table:
    //   from	to	target	type
    //   9	23	65	finally
    //   30	42	65	finally
    //   49	58	65	finally
  }
  
  /* Error */
  public static final String toJSONStringWithDateFormat(Object paramObject, String paramString, SerializerFeature... paramVarArgs)
  {
    // Byte code:
    //   0: new 424	com/lepeng/fastjson/serializer/SerializeWriter
    //   3: dup
    //   4: invokespecial 425	com/lepeng/fastjson/serializer/SerializeWriter:<init>	()V
    //   7: astore 5
    //   9: new 427	com/lepeng/fastjson/serializer/JSONSerializer
    //   12: dup
    //   13: aload 5
    //   15: invokespecial 446	com/lepeng/fastjson/serializer/JSONSerializer:<init>	(Lcom/lepeng/fastjson/serializer/SerializeWriter;)V
    //   18: astore 6
    //   20: aload_2
    //   21: arraylength
    //   22: istore 4
    //   24: iconst_0
    //   25: istore_3
    //   26: iload_3
    //   27: iload 4
    //   29: if_icmplt +41 -> 70
    //   32: aload 6
    //   34: getstatic 458	com/lepeng/fastjson/serializer/SerializerFeature:WriteDateUseDateFormat	Lcom/lepeng/fastjson/serializer/SerializerFeature;
    //   37: iconst_1
    //   38: invokevirtual 442	com/lepeng/fastjson/serializer/JSONSerializer:config	(Lcom/lepeng/fastjson/serializer/SerializerFeature;Z)V
    //   41: aload_1
    //   42: ifnull +9 -> 51
    //   45: aload 6
    //   47: aload_1
    //   48: invokevirtual 491	com/lepeng/fastjson/serializer/JSONSerializer:setDateFormat	(Ljava/lang/String;)V
    //   51: aload 6
    //   53: aload_0
    //   54: invokevirtual 434	com/lepeng/fastjson/serializer/JSONSerializer:write	(Ljava/lang/Object;)V
    //   57: aload 5
    //   59: invokevirtual 454	com/lepeng/fastjson/serializer/SerializeWriter:toString	()Ljava/lang/String;
    //   62: astore_0
    //   63: aload 5
    //   65: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   68: aload_0
    //   69: areturn
    //   70: aload 6
    //   72: aload_2
    //   73: iload_3
    //   74: aaload
    //   75: iconst_1
    //   76: invokevirtual 442	com/lepeng/fastjson/serializer/JSONSerializer:config	(Lcom/lepeng/fastjson/serializer/SerializerFeature;Z)V
    //   79: iload_3
    //   80: iconst_1
    //   81: iadd
    //   82: istore_3
    //   83: goto -57 -> 26
    //   86: astore_0
    //   87: aload 5
    //   89: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   92: aload_0
    //   93: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	94	0	paramObject	Object
    //   0	94	1	paramString	String
    //   0	94	2	paramVarArgs	SerializerFeature[]
    //   25	58	3	i	int
    //   22	8	4	j	int
    //   7	81	5	localSerializeWriter	SerializeWriter
    //   18	53	6	localJSONSerializer	JSONSerializer
    // Exception table:
    //   from	to	target	type
    //   9	24	86	finally
    //   32	41	86	finally
    //   45	51	86	finally
    //   51	63	86	finally
    //   70	79	86	finally
  }
  
  public static final String toJSONStringZ(Object paramObject, SerializeConfig paramSerializeConfig, SerializerFeature... paramVarArgs)
  {
    paramVarArgs = new SerializeWriter(paramVarArgs);
    try
    {
      new JSONSerializer(paramVarArgs, paramSerializeConfig).write(paramObject);
      paramObject = paramVarArgs.toString();
      return paramObject;
    }
    finally
    {
      paramVarArgs.close();
    }
  }
  
  public static final <T> T toJavaObject(JSON paramJSON, Class<T> paramClass)
  {
    return TypeUtils.cast(paramJSON, paramClass, ParserConfig.getGlobalInstance());
  }
  
  /* Error */
  public static final void writeJSONStringTo(Object paramObject, java.io.Writer paramWriter, SerializerFeature... paramVarArgs)
  {
    // Byte code:
    //   0: new 424	com/lepeng/fastjson/serializer/SerializeWriter
    //   3: dup
    //   4: aload_1
    //   5: invokespecial 507	com/lepeng/fastjson/serializer/SerializeWriter:<init>	(Ljava/io/Writer;)V
    //   8: astore_1
    //   9: new 427	com/lepeng/fastjson/serializer/JSONSerializer
    //   12: dup
    //   13: aload_1
    //   14: invokespecial 446	com/lepeng/fastjson/serializer/JSONSerializer:<init>	(Lcom/lepeng/fastjson/serializer/SerializeWriter;)V
    //   17: astore 5
    //   19: aload_2
    //   20: arraylength
    //   21: istore 4
    //   23: iconst_0
    //   24: istore_3
    //   25: iload_3
    //   26: iload 4
    //   28: if_icmplt +14 -> 42
    //   31: aload 5
    //   33: aload_0
    //   34: invokevirtual 434	com/lepeng/fastjson/serializer/JSONSerializer:write	(Ljava/lang/Object;)V
    //   37: aload_1
    //   38: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   41: return
    //   42: aload 5
    //   44: aload_2
    //   45: iload_3
    //   46: aaload
    //   47: iconst_1
    //   48: invokevirtual 442	com/lepeng/fastjson/serializer/JSONSerializer:config	(Lcom/lepeng/fastjson/serializer/SerializerFeature;Z)V
    //   51: iload_3
    //   52: iconst_1
    //   53: iadd
    //   54: istore_3
    //   55: goto -30 -> 25
    //   58: astore_0
    //   59: aload_1
    //   60: invokevirtual 439	com/lepeng/fastjson/serializer/SerializeWriter:close	()V
    //   63: aload_0
    //   64: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	65	0	paramObject	Object
    //   0	65	1	paramWriter	java.io.Writer
    //   0	65	2	paramVarArgs	SerializerFeature[]
    //   24	31	3	i	int
    //   21	8	4	j	int
    //   17	26	5	localJSONSerializer	JSONSerializer
    // Exception table:
    //   from	to	target	type
    //   9	23	58	finally
    //   31	37	58	finally
    //   42	51	58	finally
  }
  
  public String toJSONString()
  {
    SerializeWriter localSerializeWriter = new SerializeWriter();
    try
    {
      new JSONSerializer(localSerializeWriter).write(this);
      String str = localSerializeWriter.toString();
      return str;
    }
    finally
    {
      localSerializeWriter.close();
    }
  }
  
  public String toString()
  {
    return toJSONString();
  }
  
  public void writeJSONString(Appendable paramAppendable)
  {
    SerializeWriter localSerializeWriter = new SerializeWriter();
    try
    {
      new JSONSerializer(localSerializeWriter).write(this);
      paramAppendable.append(localSerializeWriter.toString());
      return;
    }
    catch (IOException paramAppendable)
    {
      throw new JSONException(paramAppendable.getMessage(), paramAppendable);
    }
    finally
    {
      localSerializeWriter.close();
    }
  }
}
