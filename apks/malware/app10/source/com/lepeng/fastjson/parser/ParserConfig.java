package com.lepeng.fastjson.parser;

import com.lepeng.fastjson.JSONArray;
import com.lepeng.fastjson.JSONObject;
import com.lepeng.fastjson.annotation.JSONType;
import com.lepeng.fastjson.parser.deserializer.ArrayDeserializer;
import com.lepeng.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer;
import com.lepeng.fastjson.parser.deserializer.BigDecimalDeserializer;
import com.lepeng.fastjson.parser.deserializer.BigIntegerDeserializer;
import com.lepeng.fastjson.parser.deserializer.BooleanDeserializer;
import com.lepeng.fastjson.parser.deserializer.BooleanFieldDeserializer;
import com.lepeng.fastjson.parser.deserializer.CalendarDeserializer;
import com.lepeng.fastjson.parser.deserializer.CharArrayDeserializer;
import com.lepeng.fastjson.parser.deserializer.CharacterDeserializer;
import com.lepeng.fastjson.parser.deserializer.CharsetDeserializer;
import com.lepeng.fastjson.parser.deserializer.ClassDerializer;
import com.lepeng.fastjson.parser.deserializer.CollectionDeserializer;
import com.lepeng.fastjson.parser.deserializer.DateDeserializer;
import com.lepeng.fastjson.parser.deserializer.DateFormatDeserializer;
import com.lepeng.fastjson.parser.deserializer.DefaultFieldDeserializer;
import com.lepeng.fastjson.parser.deserializer.EnumDeserializer;
import com.lepeng.fastjson.parser.deserializer.FieldDeserializer;
import com.lepeng.fastjson.parser.deserializer.FileDeserializer;
import com.lepeng.fastjson.parser.deserializer.FloatDeserializer;
import com.lepeng.fastjson.parser.deserializer.InetAddressDeserializer;
import com.lepeng.fastjson.parser.deserializer.InetSocketAddressDeserializer;
import com.lepeng.fastjson.parser.deserializer.IntegerDeserializer;
import com.lepeng.fastjson.parser.deserializer.IntegerFieldDeserializer;
import com.lepeng.fastjson.parser.deserializer.JSONArrayDeserializer;
import com.lepeng.fastjson.parser.deserializer.JSONObjectDeserializer;
import com.lepeng.fastjson.parser.deserializer.JavaBeanDeserializer;
import com.lepeng.fastjson.parser.deserializer.JavaObjectDeserializer;
import com.lepeng.fastjson.parser.deserializer.LocaleDeserializer;
import com.lepeng.fastjson.parser.deserializer.LongDeserializer;
import com.lepeng.fastjson.parser.deserializer.LongFieldDeserializer;
import com.lepeng.fastjson.parser.deserializer.MapDeserializer;
import com.lepeng.fastjson.parser.deserializer.NumberDeserializer;
import com.lepeng.fastjson.parser.deserializer.ObjectDeserializer;
import com.lepeng.fastjson.parser.deserializer.PatternDeserializer;
import com.lepeng.fastjson.parser.deserializer.ReferenceDeserializer;
import com.lepeng.fastjson.parser.deserializer.SqlDateDeserializer;
import com.lepeng.fastjson.parser.deserializer.StackTraceElementDeserializer;
import com.lepeng.fastjson.parser.deserializer.StringDeserializer;
import com.lepeng.fastjson.parser.deserializer.StringFieldDeserializer;
import com.lepeng.fastjson.parser.deserializer.ThrowableDeserializer;
import com.lepeng.fastjson.parser.deserializer.TimeDeserializer;
import com.lepeng.fastjson.parser.deserializer.TimeZoneDeserializer;
import com.lepeng.fastjson.parser.deserializer.TimestampDeserializer;
import com.lepeng.fastjson.parser.deserializer.URIDeserializer;
import com.lepeng.fastjson.parser.deserializer.URLDeserializer;
import com.lepeng.fastjson.parser.deserializer.UUIDDeserializer;
import com.lepeng.fastjson.util.FieldInfo;
import com.lepeng.fastjson.util.IdentityHashMap;
import java.io.Closeable;
import java.io.File;
import java.io.Serializable;
import java.lang.ref.SoftReference;
import java.lang.ref.WeakReference;
import java.lang.reflect.Field;
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.lang.reflect.TypeVariable;
import java.lang.reflect.WildcardType;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.net.Inet4Address;
import java.net.Inet6Address;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.URI;
import java.net.URL;
import java.nio.charset.Charset;
import java.sql.Time;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import java.util.TreeMap;
import java.util.UUID;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReference;
import java.util.regex.Pattern;

public class ParserConfig
{
  private static ParserConfig jdField_a_of_type_ComLepengFastjsonParserParserConfig = new ParserConfig();
  private final IdentityHashMap<Type, ObjectDeserializer> jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap = new IdentityHashMap();
  private final Set<Class<?>> jdField_a_of_type_JavaUtilSet = new HashSet();
  protected final SymbolTable symbolTable = new SymbolTable();
  
  public ParserConfig()
  {
    this.jdField_a_of_type_JavaUtilSet.add(Boolean.TYPE);
    this.jdField_a_of_type_JavaUtilSet.add(Boolean.class);
    this.jdField_a_of_type_JavaUtilSet.add(Character.TYPE);
    this.jdField_a_of_type_JavaUtilSet.add(Character.class);
    this.jdField_a_of_type_JavaUtilSet.add(Byte.TYPE);
    this.jdField_a_of_type_JavaUtilSet.add(Byte.class);
    this.jdField_a_of_type_JavaUtilSet.add(Short.TYPE);
    this.jdField_a_of_type_JavaUtilSet.add(Short.class);
    this.jdField_a_of_type_JavaUtilSet.add(Integer.TYPE);
    this.jdField_a_of_type_JavaUtilSet.add(Integer.class);
    this.jdField_a_of_type_JavaUtilSet.add(Long.TYPE);
    this.jdField_a_of_type_JavaUtilSet.add(Long.class);
    this.jdField_a_of_type_JavaUtilSet.add(Float.TYPE);
    this.jdField_a_of_type_JavaUtilSet.add(Float.class);
    this.jdField_a_of_type_JavaUtilSet.add(Double.TYPE);
    this.jdField_a_of_type_JavaUtilSet.add(Double.class);
    this.jdField_a_of_type_JavaUtilSet.add(BigInteger.class);
    this.jdField_a_of_type_JavaUtilSet.add(BigDecimal.class);
    this.jdField_a_of_type_JavaUtilSet.add(String.class);
    this.jdField_a_of_type_JavaUtilSet.add(java.util.Date.class);
    this.jdField_a_of_type_JavaUtilSet.add(java.sql.Date.class);
    this.jdField_a_of_type_JavaUtilSet.add(Time.class);
    this.jdField_a_of_type_JavaUtilSet.add(Timestamp.class);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(SimpleDateFormat.class, DateFormatDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Timestamp.class, TimestampDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(java.sql.Date.class, SqlDateDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Time.class, TimeDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(java.util.Date.class, DateDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Calendar.class, CalendarDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(JSONObject.class, JSONObjectDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(JSONArray.class, JSONArrayDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Map.class, MapDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(HashMap.class, MapDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(LinkedHashMap.class, MapDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(TreeMap.class, MapDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(ConcurrentMap.class, MapDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(ConcurrentHashMap.class, MapDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Collection.class, CollectionDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(List.class, CollectionDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(ArrayList.class, CollectionDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Object.class, JavaObjectDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(String.class, StringDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Character.TYPE, CharacterDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Character.class, CharacterDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Byte.TYPE, NumberDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Byte.class, NumberDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Short.TYPE, NumberDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Short.class, NumberDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Integer.TYPE, IntegerDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Integer.class, IntegerDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Long.TYPE, LongDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Long.class, LongDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(BigInteger.class, BigIntegerDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(BigDecimal.class, BigDecimalDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Float.TYPE, FloatDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Float.class, FloatDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Double.TYPE, NumberDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Double.class, NumberDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Boolean.TYPE, BooleanDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Boolean.class, BooleanDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Class.class, ClassDerializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put([C.class, CharArrayDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(AtomicBoolean.class, BooleanDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(AtomicInteger.class, IntegerDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(AtomicLong.class, LongDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(AtomicReference.class, ReferenceDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(WeakReference.class, ReferenceDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(SoftReference.class, ReferenceDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(UUID.class, UUIDDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(TimeZone.class, TimeZoneDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Locale.class, LocaleDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(InetAddress.class, InetAddressDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Inet4Address.class, InetAddressDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Inet6Address.class, InetAddressDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(InetSocketAddress.class, InetSocketAddressDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(File.class, FileDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(URI.class, URIDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(URL.class, URLDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Pattern.class, PatternDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Charset.class, CharsetDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Number.class, NumberDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(AtomicIntegerArray.class, ArrayDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(AtomicLongArray.class, ArrayDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(StackTraceElement.class, StackTraceElementDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Serializable.class, JavaObjectDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Cloneable.class, JavaObjectDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Comparable.class, JavaObjectDeserializer.instance);
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(Closeable.class, JavaObjectDeserializer.instance);
  }
  
  private static Field a(Class<?> paramClass, String paramString)
  {
    Field[] arrayOfField = paramClass.getDeclaredFields();
    int j = arrayOfField.length;
    int i = 0;
    for (;;)
    {
      Object localObject;
      if (i >= j)
      {
        if ((paramClass.getSuperclass() == null) || (paramClass.getSuperclass() == Object.class)) {
          break;
        }
        localObject = getField(paramClass.getSuperclass(), paramString);
      }
      Field localField;
      do
      {
        return localObject;
        localField = arrayOfField[i];
        localObject = localField;
      } while (paramString.equals(localField.getName()));
      i += 1;
    }
    return null;
  }
  
  public static Field getField(Class<?> paramClass, String paramString)
  {
    Object localObject2 = a(paramClass, paramString);
    Object localObject1 = localObject2;
    if (localObject2 == null) {
      localObject1 = a(paramClass, "_" + paramString);
    }
    localObject2 = localObject1;
    if (localObject1 == null) {
      localObject2 = a(paramClass, "m_" + paramString);
    }
    return localObject2;
  }
  
  public static ParserConfig getGlobalInstance()
  {
    return jdField_a_of_type_ComLepengFastjsonParserParserConfig;
  }
  
  public FieldDeserializer createFieldDeserializer(ParserConfig paramParserConfig, Class<?> paramClass, FieldInfo paramFieldInfo)
  {
    Class localClass = paramFieldInfo.getFieldClass();
    if ((localClass == Boolean.TYPE) || (localClass == Boolean.class)) {
      return new BooleanFieldDeserializer(paramParserConfig, paramClass, paramFieldInfo);
    }
    if ((localClass == Integer.TYPE) || (localClass == Integer.class)) {
      return new IntegerFieldDeserializer(paramParserConfig, paramClass, paramFieldInfo);
    }
    if ((localClass == Long.TYPE) || (localClass == Long.class)) {
      return new LongFieldDeserializer(paramParserConfig, paramClass, paramFieldInfo);
    }
    if (localClass == String.class) {
      return new StringFieldDeserializer(paramParserConfig, paramClass, paramFieldInfo);
    }
    if ((localClass == List.class) || (localClass == ArrayList.class)) {
      return new ArrayListTypeFieldDeserializer(paramParserConfig, paramClass, paramFieldInfo);
    }
    return new DefaultFieldDeserializer(paramParserConfig, paramClass, paramFieldInfo);
  }
  
  public ObjectDeserializer createJavaBeanDeserializer(Class<?> paramClass, Type paramType)
  {
    return new JavaBeanDeserializer(this, paramClass, paramType);
  }
  
  public IdentityHashMap<Type, ObjectDeserializer> getDerializers()
  {
    return this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap;
  }
  
  public ObjectDeserializer getDeserializer(FieldInfo paramFieldInfo)
  {
    return getDeserializer(paramFieldInfo.getFieldClass(), paramFieldInfo.getFieldType());
  }
  
  public ObjectDeserializer getDeserializer(Class<?> paramClass, Type paramType)
  {
    ObjectDeserializer localObjectDeserializer = (ObjectDeserializer)this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.get(paramType);
    if (localObjectDeserializer != null) {
      paramType = localObjectDeserializer;
    }
    Object localObject;
    do
    {
      do
      {
        do
        {
          return paramType;
          localObject = paramType;
          if (paramType == null) {
            localObject = paramClass;
          }
          localObjectDeserializer = (ObjectDeserializer)this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.get(localObject);
          paramType = localObjectDeserializer;
        } while (localObjectDeserializer != null);
        paramType = (JSONType)paramClass.getAnnotation(JSONType.class);
        if (paramType != null)
        {
          paramType = paramType.mappingTo();
          if (paramType != Void.class) {
            return getDeserializer(paramType, paramType);
          }
        }
        if (((localObject instanceof WildcardType)) || ((localObject instanceof TypeVariable)) || ((localObject instanceof ParameterizedType))) {
          localObjectDeserializer = (ObjectDeserializer)this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.get(paramClass);
        }
        paramType = localObjectDeserializer;
      } while (localObjectDeserializer != null);
      localObjectDeserializer = (ObjectDeserializer)this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.get(localObject);
      paramType = localObjectDeserializer;
    } while (localObjectDeserializer != null);
    if (paramClass.isEnum()) {
      paramClass = new EnumDeserializer(paramClass);
    }
    for (;;)
    {
      putDeserializer((Type)localObject, paramClass);
      return paramClass;
      if (paramClass.isArray()) {
        return ArrayDeserializer.instance;
      }
      if ((paramClass == Set.class) || (paramClass == HashSet.class) || (paramClass == Collection.class) || (paramClass == List.class) || (paramClass == ArrayList.class)) {
        paramClass = CollectionDeserializer.instance;
      } else if (Collection.class.isAssignableFrom(paramClass)) {
        paramClass = CollectionDeserializer.instance;
      } else if (Map.class.isAssignableFrom(paramClass)) {
        paramClass = MapDeserializer.instance;
      } else if (Throwable.class.isAssignableFrom(paramClass)) {
        paramClass = new ThrowableDeserializer(this, paramClass);
      } else {
        paramClass = createJavaBeanDeserializer(paramClass, (Type)localObject);
      }
    }
  }
  
  public ObjectDeserializer getDeserializer(Type paramType)
  {
    Object localObject = (ObjectDeserializer)this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.get(paramType);
    if (localObject != null) {
      return localObject;
    }
    if ((paramType instanceof Class)) {
      return getDeserializer((Class)paramType, paramType);
    }
    if ((paramType instanceof ParameterizedType))
    {
      localObject = ((ParameterizedType)paramType).getRawType();
      if ((localObject instanceof Class)) {
        return getDeserializer((Class)localObject, paramType);
      }
      return getDeserializer((Type)localObject);
    }
    return JavaObjectDeserializer.instance;
  }
  
  public Map<String, FieldDeserializer> getFieldDeserializers(Class<?> paramClass)
  {
    paramClass = getDeserializer(paramClass);
    if ((paramClass instanceof JavaBeanDeserializer)) {
      return ((JavaBeanDeserializer)paramClass).getFieldDeserializerMap();
    }
    return Collections.emptyMap();
  }
  
  public SymbolTable getSymbolTable()
  {
    return this.symbolTable;
  }
  
  public boolean isPrimitive(Class<?> paramClass)
  {
    return this.jdField_a_of_type_JavaUtilSet.contains(paramClass);
  }
  
  public void putDeserializer(Type paramType, ObjectDeserializer paramObjectDeserializer)
  {
    this.jdField_a_of_type_ComLepengFastjsonUtilIdentityHashMap.put(paramType, paramObjectDeserializer);
  }
}
