package com.lepeng.utils.http;

import com.lepeng.utils.http.core.HttpHandler;
import com.lepeng.utils.http.core.RequestCallBack;
import com.lepeng.utils.http.core.RequestParams;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import org.apache.http.Header;
import org.apache.http.HttpEntity;
import org.apache.http.client.CookieStore;
import org.apache.http.client.methods.HttpDelete;
import org.apache.http.client.methods.HttpEntityEnclosingRequestBase;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpPut;
import org.apache.http.conn.ssl.SSLSocketFactory;

public class HttpUtil
{
  private HttpManager b;
  
  private HttpUtil()
  {
    if (this.b == null) {
      this.b = new HttpManager();
    }
  }
  
  private void a(RequestParams paramRequestParams, HttpEntityEnclosingRequestBase paramHttpEntityEnclosingRequestBase)
  {
    if (paramRequestParams != null) {
      paramHttpEntityEnclosingRequestBase.setEntity(HttpManager.a(paramRequestParams));
    }
  }
  
  private void a(ArrayList<Header> paramArrayList)
  {
    if (paramArrayList != null) {
      paramArrayList = paramArrayList.iterator();
    }
    for (;;)
    {
      if (!paramArrayList.hasNext()) {
        return;
      }
      Header localHeader = (Header)paramArrayList.next();
      addHeader(localHeader.getName(), localHeader.getValue());
    }
  }
  
  public static final HttpUtil getInstance()
  {
    return HttpUtil.HttpUtilHolder.a();
  }
  
  public void addHeader(String paramString1, String paramString2)
  {
    this.b.addHeader(paramString1, paramString2);
  }
  
  public void configCookieStore(CookieStore paramCookieStore)
  {
    this.b.configCookieStore(paramCookieStore);
  }
  
  public void configRequestExecutionRetryCount(int paramInt)
  {
    this.b.configRequestExecutionRetryCount(paramInt);
  }
  
  public void configSSLSocketFactory(SSLSocketFactory paramSSLSocketFactory)
  {
    this.b.configSSLSocketFactory(paramSSLSocketFactory);
  }
  
  public void configTimeout(int paramInt)
  {
    this.b.configTimeout(paramInt);
  }
  
  public void configUserAgent(String paramString)
  {
    this.b.configUserAgent(paramString);
  }
  
  public void delete(String paramString, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    delete(paramString, null, paramRequestCallBack);
  }
  
  public void delete(String paramString, ArrayList<Header> paramArrayList, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    paramString = new HttpDelete(paramString);
    a(paramArrayList);
    this.b.a(paramString, null, paramRequestCallBack);
  }
  
  public Object deleteSync(String paramString)
  {
    return deleteSync(paramString, null);
  }
  
  public Object deleteSync(String paramString, ArrayList<Header> paramArrayList)
  {
    paramString = new HttpDelete(paramString);
    a(paramArrayList);
    return this.b.a(paramString, null);
  }
  
  public HttpHandler<File> download(String paramString1, String paramString2, RequestCallBack<File> paramRequestCallBack)
  {
    return download(paramString1, paramString2, false, paramRequestCallBack);
  }
  
  public HttpHandler<File> download(String paramString1, String paramString2, boolean paramBoolean, RequestCallBack<File> paramRequestCallBack)
  {
    return this.b.a(paramString1, null, paramString2, paramBoolean, paramRequestCallBack);
  }
  
  public void get(String paramString, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    get(paramString, null, paramRequestCallBack);
  }
  
  public void get(String paramString, RequestParams paramRequestParams, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    get(paramString, null, paramRequestParams, paramRequestCallBack);
  }
  
  public void get(String paramString, ArrayList<Header> paramArrayList, RequestParams paramRequestParams, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    paramString = new HttpGet(HttpManager.a(paramString, paramRequestParams));
    a(paramArrayList);
    this.b.a(paramString, null, paramRequestCallBack);
  }
  
  public Object getSync(String paramString)
  {
    return getSync(paramString, null);
  }
  
  public Object getSync(String paramString, RequestParams paramRequestParams)
  {
    return getSync(paramString, null, paramRequestParams);
  }
  
  public Object getSync(String paramString, ArrayList<Header> paramArrayList, RequestParams paramRequestParams)
  {
    paramString = new HttpGet(HttpManager.a(paramString, paramRequestParams));
    a(paramArrayList);
    return this.b.a(paramString, null);
  }
  
  public void post(String paramString, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    post(paramString, null, paramRequestCallBack);
  }
  
  public void post(String paramString, RequestParams paramRequestParams, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    post(paramString, null, paramRequestParams, null, paramRequestCallBack);
  }
  
  public <T> void post(String paramString1, ArrayList<Header> paramArrayList, RequestParams paramRequestParams, String paramString2, RequestCallBack<T> paramRequestCallBack)
  {
    paramString1 = new HttpPost(paramString1);
    a(paramRequestParams, paramString1);
    a(paramArrayList);
    this.b.a(paramString1, paramString2, paramRequestCallBack);
  }
  
  public void post(String paramString1, ArrayList<Header> paramArrayList, HttpEntity paramHttpEntity, String paramString2, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    paramString1 = HttpManager.a(new HttpPost(paramString1), paramHttpEntity);
    a(paramArrayList);
    this.b.a(paramString1, paramString2, paramRequestCallBack);
  }
  
  public void post(String paramString1, HttpEntity paramHttpEntity, String paramString2, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    post(paramString1, null, paramHttpEntity, null, paramRequestCallBack);
  }
  
  public Object postSync(String paramString)
  {
    return postSync(paramString, null);
  }
  
  public Object postSync(String paramString, RequestParams paramRequestParams)
  {
    return postSync(paramString, null, paramRequestParams, null);
  }
  
  public Object postSync(String paramString1, ArrayList<Header> paramArrayList, RequestParams paramRequestParams, String paramString2)
  {
    paramString1 = new HttpPost(paramString1);
    a(paramRequestParams, paramString1);
    a(paramArrayList);
    return this.b.a(paramString1, paramString2);
  }
  
  public Object postSync(String paramString1, ArrayList<Header> paramArrayList, HttpEntity paramHttpEntity, String paramString2)
  {
    paramString1 = HttpManager.a(new HttpPost(paramString1), paramHttpEntity);
    a(paramArrayList);
    return this.b.a(paramString1, paramString2);
  }
  
  public Object postSync(String paramString1, HttpEntity paramHttpEntity, String paramString2)
  {
    return postSync(paramString1, null, paramHttpEntity, null);
  }
  
  public <T> void postSync(String paramString1, ArrayList<Header> paramArrayList, RequestParams paramRequestParams, String paramString2, RequestCallBack<T> paramRequestCallBack)
  {
    paramString1 = new HttpPost(paramString1);
    a(paramRequestParams, paramString1);
    a(paramArrayList);
    this.b.a(paramString1, paramString2, paramRequestCallBack);
  }
  
  public void put(String paramString, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    put(paramString, null, paramRequestCallBack);
  }
  
  public void put(String paramString, RequestParams paramRequestParams, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    put(paramString, null, paramRequestParams, null, paramRequestCallBack);
  }
  
  public void put(String paramString1, ArrayList<Header> paramArrayList, RequestParams paramRequestParams, String paramString2, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    paramString1 = new HttpPut(paramString1);
    a(paramRequestParams, paramString1);
    a(paramArrayList);
    this.b.a(paramString1, paramString2, paramRequestCallBack);
  }
  
  public void put(String paramString1, ArrayList<Header> paramArrayList, HttpEntity paramHttpEntity, String paramString2, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    paramString1 = HttpManager.a(new HttpPut(paramString1), paramHttpEntity);
    a(paramArrayList);
    this.b.a(paramString1, paramString2, paramRequestCallBack);
  }
  
  public void put(String paramString1, HttpEntity paramHttpEntity, String paramString2, RequestCallBack<? extends Object> paramRequestCallBack)
  {
    put(paramString1, null, paramHttpEntity, null, paramRequestCallBack);
  }
  
  public Object putSync(String paramString)
  {
    return putSync(paramString, null);
  }
  
  public Object putSync(String paramString, RequestParams paramRequestParams)
  {
    return putSync(paramString, HttpManager.a(paramRequestParams), null);
  }
  
  public Object putSync(String paramString1, ArrayList<Header> paramArrayList, RequestParams paramRequestParams, String paramString2)
  {
    paramString1 = new HttpPut(paramString1);
    a(paramRequestParams, paramString1);
    a(paramArrayList);
    return this.b.a(paramString1, paramString2);
  }
  
  public Object putSync(String paramString1, ArrayList<Header> paramArrayList, HttpEntity paramHttpEntity, String paramString2)
  {
    paramString1 = HttpManager.a(new HttpPut(paramString1), paramHttpEntity);
    a(paramArrayList);
    return this.b.a(paramString1, paramString2);
  }
  
  public Object putSync(String paramString1, HttpEntity paramHttpEntity, String paramString2)
  {
    return putSync(paramString1, null, paramHttpEntity, paramString2);
  }
  
  public void resetHttp()
  {
    if (this.b != null) {
      this.b = null;
    }
    this.b = new HttpManager();
  }
}
