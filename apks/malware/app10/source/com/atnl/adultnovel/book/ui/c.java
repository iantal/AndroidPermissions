package com.atnl.adultnovel.book.ui;

import android.content.Context;
import android.os.Environment;
import android.os.Handler;
import android.util.Log;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

class c
  implements Runnable
{
  File a;
  
  c(a paramA) {}
  
  public void run()
  {
    Object localObject = new Cancas();
    for (;;)
    {
      try
      {
        localObject = new URL(((Cancas)localObject).APPDOWNLOAD() + this.b.a);
        Log.i("amp", this.b.a);
        localObject = (HttpURLConnection)((URL)localObject).openConnection();
        ((HttpURLConnection)localObject).connect();
        ((HttpURLConnection)localObject).getContentLength();
        localObject = ((HttpURLConnection)localObject).getInputStream();
        if (!Environment.getExternalStorageState().equals("mounted")) {
          continue;
        }
        this.a = Environment.getExternalStorageDirectory();
        Log.i("amp", "sdka");
        a.b(this.a + "/AdultNovel.apk");
        localFileOutputStream = new FileOutputStream(new File(a.a()));
        arrayOfByte = new byte['Ð€'];
        i = 0;
      }
      catch (MalformedURLException localMalformedURLException)
      {
        FileOutputStream localFileOutputStream;
        byte[] arrayOfByte;
        int i;
        int j;
        localMalformedURLException.printStackTrace();
        return;
        localFileOutputStream.write(arrayOfByte, 0, j);
        boolean bool = a.d(this.b);
        if (!bool) {
          continue;
        }
        return;
      }
      catch (IOException localIOException)
      {
        localIOException.printStackTrace();
      }
      j = ((InputStream)localObject).read(arrayOfByte);
      i += j;
      a.c(this.b).sendEmptyMessage(1);
      if (j > 0) {
        continue;
      }
      a.c(this.b).sendEmptyMessage(2);
      return;
      this.a = a.b(this.b).getExternalFilesDir(null);
      if (!this.a.exists()) {
        this.a.mkdir();
      }
    }
  }
}
