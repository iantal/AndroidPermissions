package com.a.a.a;

import android.os.Handler;
import android.os.Looper;
import android.os.SystemClock;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import org.apache.http.HttpResponse;

public abstract class c
  implements Comparable
{
  private final z a;
  private final int b;
  private final String c;
  private HashMap d;
  private w e;
  private Integer f;
  private d g;
  private boolean h;
  private boolean i;
  private boolean j;
  private long k;
  private e l;
  private long m;
  private boolean n;
  
  public c(int paramInt, String paramString, w paramW)
  {
    if (z.a) {}
    for (z localZ = new z();; localZ = null)
    {
      this.a = localZ;
      this.i = false;
      this.j = false;
      this.k = 0L;
      this.c = paramString;
      this.b = paramInt;
      this.e = paramW;
      a(new l());
      this.d = new HashMap();
      return;
    }
  }
  
  /* Error */
  public static byte[] a(Map paramMap, String paramString)
  {
    // Byte code:
    //   0: new 71	java/lang/StringBuilder
    //   3: dup
    //   4: invokespecial 72	java/lang/StringBuilder:<init>	()V
    //   7: astore_2
    //   8: aload_0
    //   9: invokeinterface 78 1 0
    //   14: invokeinterface 84 1 0
    //   19: astore_0
    //   20: aload_0
    //   21: invokeinterface 90 1 0
    //   26: ifne +12 -> 38
    //   29: aload_2
    //   30: invokevirtual 94	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   33: aload_1
    //   34: invokevirtual 100	java/lang/String:getBytes	(Ljava/lang/String;)[B
    //   37: areturn
    //   38: aload_0
    //   39: invokeinterface 104 1 0
    //   44: checkcast 106	java/util/Map$Entry
    //   47: astore_3
    //   48: aload_2
    //   49: aload_3
    //   50: invokeinterface 109 1 0
    //   55: checkcast 96	java/lang/String
    //   58: aload_1
    //   59: invokestatic 115	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   62: invokevirtual 119	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   65: pop
    //   66: aload_2
    //   67: bipush 61
    //   69: invokevirtual 122	java/lang/StringBuilder:append	(C)Ljava/lang/StringBuilder;
    //   72: pop
    //   73: aload_2
    //   74: aload_3
    //   75: invokeinterface 125 1 0
    //   80: checkcast 96	java/lang/String
    //   83: aload_1
    //   84: invokestatic 115	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   87: invokevirtual 119	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   90: pop
    //   91: aload_2
    //   92: bipush 38
    //   94: invokevirtual 122	java/lang/StringBuilder:append	(C)Ljava/lang/StringBuilder;
    //   97: pop
    //   98: goto -78 -> 20
    //   101: astore_0
    //   102: new 127	java/lang/RuntimeException
    //   105: dup
    //   106: new 71	java/lang/StringBuilder
    //   109: dup
    //   110: ldc -127
    //   112: invokespecial 132	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   115: aload_1
    //   116: invokevirtual 119	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   119: invokevirtual 94	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   122: aload_0
    //   123: invokespecial 135	java/lang/RuntimeException:<init>	(Ljava/lang/String;Ljava/lang/Throwable;)V
    //   126: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	127	0	paramMap	Map
    //   0	127	1	paramString	String
    //   7	85	2	localStringBuilder	StringBuilder
    //   47	28	3	localEntry	java.util.Map.Entry
    // Exception table:
    //   from	to	target	type
    //   8	20	101	java/io/UnsupportedEncodingException
    //   20	38	101	java/io/UnsupportedEncodingException
    //   38	98	101	java/io/UnsupportedEncodingException
  }
  
  public int a()
  {
    return this.b;
  }
  
  public int a(c paramC)
  {
    ag localAg1 = o();
    ag localAg2 = paramC.o();
    if (localAg1 == localAg2) {
      return this.f.intValue() - paramC.f.intValue();
    }
    return localAg2.ordinal() - localAg1.ordinal();
  }
  
  protected abstract g a(ad paramAd);
  
  protected x a(x paramX)
  {
    return paramX;
  }
  
  public final void a(int paramInt)
  {
    this.f = Integer.valueOf(paramInt);
  }
  
  public void a(long paramLong1, long paramLong2)
  {
    if (this.e != null) {
      this.e.a(paramLong1, paramLong2);
    }
  }
  
  public void a(d paramD)
  {
    this.g = paramD;
  }
  
  public void a(e paramE)
  {
    this.l = paramE;
  }
  
  public void a(Object paramObject)
  {
    if (this.e != null) {
      this.e.a(paramObject);
    }
  }
  
  public void a(String paramString)
  {
    if (z.a) {
      this.a.a(paramString, Thread.currentThread().getId());
    }
    while (this.k != 0L) {
      return;
    }
    this.k = SystemClock.elapsedRealtime();
  }
  
  public void a(TimeUnit paramTimeUnit, int paramInt)
  {
    this.m = (System.currentTimeMillis() + paramTimeUnit.toMillis(paramInt));
  }
  
  public byte[] a(HttpResponse paramHttpResponse, a paramA)
  {
    if (paramHttpResponse.getEntity() != null) {
      return v.a(paramHttpResponse);
    }
    return new byte[0];
  }
  
  public String b()
  {
    return this.c;
  }
  
  public void b(x paramX)
  {
    if (this.e != null) {
      this.e.a(paramX);
    }
  }
  
  public void b(String paramString)
  {
    if (this.g != null) {
      this.g.b(this);
    }
    long l1;
    if (z.a)
    {
      l1 = Thread.currentThread().getId();
      if (Looper.myLooper() != Looper.getMainLooper()) {
        new Handler(Looper.getMainLooper()).post(new af(this, paramString, l1));
      }
    }
    do
    {
      return;
      this.a.a(paramString, l1);
      this.a.a(toString());
      return;
      l1 = SystemClock.elapsedRealtime() - this.k;
    } while (l1 < 3000L);
    y.b("%d ms: %s", new Object[] { Long.valueOf(l1), toString() });
  }
  
  public String c()
  {
    return b();
  }
  
  public boolean d()
  {
    return this.h;
  }
  
  public long e()
  {
    return this.m;
  }
  
  public boolean f()
  {
    return this.i;
  }
  
  public Map g()
  {
    return this.d;
  }
  
  public Map h()
  {
    return null;
  }
  
  public String i()
  {
    return "UTF-8";
  }
  
  public String j()
  {
    return "application/x-www-form-urlencoded; charset=" + i();
  }
  
  public byte[] k()
  {
    Map localMap = h();
    if ((localMap != null) && (localMap.size() > 0)) {
      return a(localMap, i());
    }
    return null;
  }
  
  public void l() {}
  
  public ad m()
  {
    return null;
  }
  
  public final boolean n()
  {
    return this.m > 0L;
  }
  
  public ag o()
  {
    return ag.b;
  }
  
  public final int p()
  {
    return this.l.b();
  }
  
  public e q()
  {
    return this.l;
  }
  
  public void r()
  {
    this.j = true;
  }
  
  public void s()
  {
    if (this.e != null) {
      this.e.c();
    }
  }
  
  public void t()
  {
    if ((this.e != null) && (!this.n))
    {
      this.n = true;
      this.e.a();
    }
  }
  
  public String toString()
  {
    if (this.i) {}
    for (String str = "[X] ";; str = "[ ] ") {
      return str + b() + " " + o() + " " + this.f;
    }
  }
  
  public void u()
  {
    if (this.e != null) {
      this.e.e();
    }
  }
  
  public void v()
  {
    if (this.e != null) {
      this.e.b();
    }
  }
  
  public void w()
  {
    if (this.e != null) {
      this.e.f();
    }
  }
  
  public void x()
  {
    if (this.e != null) {
      this.e.d();
    }
  }
}
