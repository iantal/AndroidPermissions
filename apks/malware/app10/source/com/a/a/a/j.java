package com.a.a.a;

import android.os.Process;
import com.a.a.a.a.d;
import java.util.concurrent.BlockingQueue;

public class j
  extends Thread
{
  private static final boolean a = y.b;
  private final BlockingQueue b;
  private final BlockingQueue c;
  private final com.a.a.a.a.a d;
  private final a e;
  private volatile boolean f = false;
  
  public j(BlockingQueue paramBlockingQueue1, BlockingQueue paramBlockingQueue2, com.a.a.a.a.a paramA, a paramA1)
  {
    this.d = paramA;
    this.e = paramA1;
    this.b = paramBlockingQueue1;
    this.c = paramBlockingQueue2;
  }
  
  public void a()
  {
    this.f = true;
    interrupt();
  }
  
  public void run()
  {
    if (a) {
      y.a("start new dispatcher", new Object[0]);
    }
    Process.setThreadPriority(10);
    if (this.d != null) {
      this.d.a();
    }
    c localC;
    try
    {
      do
      {
        for (;;)
        {
          localC = (c)this.b.take();
          localC.a("cache-queue-take");
          this.e.d(localC);
          if (!localC.f()) {
            break;
          }
          localC.b("cache-discard-canceled");
          this.e.a(localC);
          this.e.b(localC);
        }
      } while (!this.f);
    }
    catch (InterruptedException localInterruptedException) {}
    return;
    if (this.d != null) {}
    for (d localD = this.d.a(localC.c());; localD = null)
    {
      if (localD == null)
      {
        localC.a("cache-miss");
        this.c.put(localC);
        this.e.c(localC);
        break;
      }
      if (localD.a())
      {
        localC.a("cache-hit-expired");
        this.c.put(localC);
        this.e.c(localC);
        break;
      }
      localC.a("cache-hit");
      g localG = localC.a(new ad(localD.a, localD.c));
      localC.a("cache-hit-parsed");
      this.e.f(localC);
      if (!localD.b())
      {
        this.e.a(localC, localG);
        break;
      }
      localC.a("cache-hit-refresh-needed");
      localG.d = true;
      this.e.a(localC, localG, new k(this, localC));
      break;
    }
  }
}
