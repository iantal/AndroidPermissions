package com.c.a.a.a;

import java.io.UnsupportedEncodingException;
import java.util.HashMap;

public class c
{
  private static final int[] b;
  private static final String[] c;
  private static final HashMap<Integer, String> d;
  private static final HashMap<String, Integer> e;
  
  static
  {
    int i = 0;
    if (!c.class.desiredAssertionStatus()) {}
    for (boolean bool = true;; bool = false)
    {
      a = bool;
      int[] arrayOfInt = new int[16];
      arrayOfInt[1] = 3;
      arrayOfInt[2] = 4;
      arrayOfInt[3] = 5;
      arrayOfInt[4] = 6;
      arrayOfInt[5] = 7;
      arrayOfInt[6] = 8;
      arrayOfInt[7] = 9;
      arrayOfInt[8] = 10;
      arrayOfInt[9] = 11;
      arrayOfInt[10] = 12;
      arrayOfInt[11] = 17;
      arrayOfInt[12] = 106;
      arrayOfInt[13] = 2026;
      arrayOfInt[14] = 1000;
      arrayOfInt[15] = 1015;
      b = arrayOfInt;
      c = new String[] { "*", "us-ascii", "iso-8859-1", "iso-8859-2", "iso-8859-3", "iso-8859-4", "iso-8859-5", "iso-8859-6", "iso-8859-7", "iso-8859-8", "iso-8859-9", "shift_JIS", "utf-8", "big5", "iso-10646-ucs-2", "utf-16" };
      d = new HashMap();
      e = new HashMap();
      if ((a) || (b.length == c.length)) {
        break;
      }
      throw new AssertionError();
    }
    int j = b.length;
    for (;;)
    {
      if (i > j - 1) {
        return;
      }
      d.put(Integer.valueOf(b[i]), c[i]);
      e.put(c[i], Integer.valueOf(b[i]));
      i += 1;
    }
  }
  
  private c() {}
  
  public static int a(String paramString)
  {
    if (paramString == null) {
      return -1;
    }
    paramString = (Integer)e.get(paramString);
    if (paramString == null) {
      throw new UnsupportedEncodingException();
    }
    return paramString.intValue();
  }
  
  public static String a(int paramInt)
  {
    String str = (String)d.get(Integer.valueOf(paramInt));
    if (str == null) {
      throw new UnsupportedEncodingException();
    }
    return str;
  }
}
