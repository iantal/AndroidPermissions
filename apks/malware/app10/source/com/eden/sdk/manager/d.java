package com.eden.sdk.manager;

import android.content.Context;
import android.text.TextUtils;
import com.eden.sdk.b.ad;
import com.eden.sdk.unluac.decompile.Decompiler;
import com.eden.sdk.unluac.decompile.Output;
import com.eden.sdk.unluac.parse.BHeader;
import com.eden.sdk.unluac.parse.LFunctionType;
import com.eden.sdk.util.FileUtil;
import com.eden.sdk.util.Util;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.HashMap;

public enum d
{
  private d() {}
  
  public static ad a(Context paramContext, HashMap<String, String> paramHashMap, String paramString)
  {
    if (paramHashMap == null) {}
    for (;;)
    {
      return null;
      if (!TextUtils.isEmpty(paramString)) {
        try
        {
          Object localObject = paramString.split("\\|");
          paramString = localObject[0];
          CharSequence localCharSequence = localObject[1];
          if ((!TextUtils.isEmpty(paramString)) && (!TextUtils.isEmpty(localCharSequence)))
          {
            localObject = new ad();
            ((ad)localObject).a("q", NovaManager.a(paramContext));
            paramContext = (String)paramHashMap.get("productId");
            String str = (String)paramHashMap.get("tt");
            paramHashMap = (String)paramHashMap.get("ys");
            paramContext = NovaManager.getParameter4(paramContext, str, paramHashMap, FileUtil.generateYt(paramHashMap, str, paramString), FileUtil.generateOy(paramContext, paramHashMap, str, Util.javaGetUserAgent(), localCharSequence));
            NovaManager.log("mi :" + paramContext);
            ((ad)localObject).a("mi", paramContext);
            return localObject;
          }
        }
        catch (Exception paramContext) {}
      }
    }
    return null;
  }
  
  private static String a(String paramString1, String paramString2)
  {
    paramString1 = paramString1.substring(paramString1.lastIndexOf(paramString2) + paramString2.length() + 1);
    return paramString1.substring(0, paramString1.indexOf("\""));
  }
  
  public static HashMap<String, String> a(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    HashMap localHashMap = new HashMap();
    if (NovaManager.getI() == 2)
    {
      str = b(paramString, "set ys=");
      localHashMap.put("ys", str);
      if (NovaManager.getI() != 2) {
        break label86;
      }
    }
    label86:
    for (String str = b(paramString, "productId=");; str = a(paramString, "productId="))
    {
      localHashMap.put("productId", str);
      localHashMap.put("tt", a(paramString, "\"tt\" data="));
      return localHashMap;
      str = a(paramString, "set ys=");
      break;
    }
  }
  
  private static String b(String paramString1, String paramString2)
  {
    return a(paramString1.substring(0, paramString1.lastIndexOf(paramString2)), paramString2);
  }
  
  public final String b(String paramString)
  {
    paramString = paramString.substring(paramString.indexOf("<![CDATA[") + 9, paramString.indexOf("]]>"));
    Object localObject;
    try
    {
      paramString = ByteBuffer.wrap(paramString.getBytes("ISO-8859-1"));
      localObject = new BHeader(paramString);
      paramString = ((BHeader)localObject).function.parse(paramString, (BHeader)localObject);
      paramString = new Decompiler(paramString);
      paramString.decompile();
      paramString.toString();
      localObject = new StringBuilder();
      paramString.print(new Output(new e(this, (StringBuilder)localObject)));
      paramString = ((StringBuilder)localObject).toString();
      if (TextUtils.isEmpty(paramString)) {
        return null;
      }
    }
    catch (IOException paramString)
    {
      for (;;)
      {
        paramString = null;
      }
      int i = paramString.indexOf("tt2\")), \"");
      localObject = paramString.substring("tt2\")), \"".length() + i);
      paramString = ((String)localObject).substring(0, ((String)localObject).indexOf("\""));
      localObject = ((String)localObject).substring(((String)localObject).indexOf("\"", paramString.length() + 1) + 1);
      localObject = ((String)localObject).substring(0, ((String)localObject).indexOf("\""));
    }
    return paramString + "|" + (String)localObject;
  }
}
