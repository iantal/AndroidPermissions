package com.eden.sdk.unluac.decompile;

import com.eden.sdk.unluac.Version;
import com.eden.sdk.unluac.parse.BHeader;
import com.eden.sdk.unluac.parse.LFunction;

public class Code
{
  private final int[] code;
  private final OpcodeMap map;
  
  public Code(LFunction paramLFunction)
  {
    this.code = paramLFunction.code;
    this.map = paramLFunction.header.version.getOpcodeMap();
  }
  
  public static int extract_A(int paramInt)
  {
    return paramInt >> 6 & 0xFF;
  }
  
  public static int extract_B(int paramInt)
  {
    return paramInt >>> 23;
  }
  
  public static int extract_Bx(int paramInt)
  {
    return paramInt >>> 14;
  }
  
  public static int extract_C(int paramInt)
  {
    return paramInt >> 14 & 0x1FF;
  }
  
  public static int extract_sBx(int paramInt)
  {
    return (paramInt >>> 14) - 131071;
  }
  
  public int A(int paramInt)
  {
    return extract_A(this.code[(paramInt - 1)]);
  }
  
  public int B(int paramInt)
  {
    return extract_B(this.code[(paramInt - 1)]);
  }
  
  public int Bx(int paramInt)
  {
    return extract_Bx(this.code[(paramInt - 1)]);
  }
  
  public int C(int paramInt)
  {
    return extract_C(this.code[(paramInt - 1)]);
  }
  
  public int codepoint(int paramInt)
  {
    return this.code[(paramInt - 1)];
  }
  
  public Op op(int paramInt)
  {
    return this.map.get(this.code[(paramInt - 1)] & 0x3F);
  }
  
  public int sBx(int paramInt)
  {
    return extract_sBx(this.code[(paramInt - 1)]);
  }
  
  public String toString(int paramInt)
  {
    return op(paramInt).codePointToString(codepoint(paramInt));
  }
}
