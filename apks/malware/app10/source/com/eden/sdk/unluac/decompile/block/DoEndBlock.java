package com.eden.sdk.unluac.decompile.block;

import com.eden.sdk.unluac.decompile.Output;
import com.eden.sdk.unluac.decompile.statement.Statement;
import com.eden.sdk.unluac.parse.LFunction;
import java.util.ArrayList;
import java.util.List;

public class DoEndBlock
  extends Block
{
  private final List<Statement> statements;
  
  public DoEndBlock(LFunction paramLFunction, int paramInt1, int paramInt2)
  {
    super(paramLFunction, paramInt1, paramInt2);
    this.statements = new ArrayList(paramInt2 - paramInt1 + 1);
  }
  
  public void addStatement(Statement paramStatement)
  {
    this.statements.add(paramStatement);
  }
  
  public boolean breakable()
  {
    return false;
  }
  
  public int getLoopback()
  {
    throw new IllegalStateException();
  }
  
  public boolean isContainer()
  {
    return true;
  }
  
  public boolean isUnprotected()
  {
    return false;
  }
  
  public void print(Output paramOutput)
  {
    paramOutput.println("do");
    paramOutput.indent();
    Statement.printSequence(paramOutput, this.statements);
    paramOutput.dedent();
    paramOutput.print("end");
  }
}
