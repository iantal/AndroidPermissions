package com.eden.sdk.unluac.decompile.branch;

import com.eden.sdk.unluac.decompile.Registers;
import com.eden.sdk.unluac.decompile.expression.Expression;

public abstract class Branch
{
  public int begin;
  public int end;
  public boolean isCompareSet = false;
  public boolean isSet = false;
  public boolean isTest = false;
  public final int line;
  public int setTarget = -1;
  
  public Branch(int paramInt1, int paramInt2, int paramInt3)
  {
    this.line = paramInt1;
    this.begin = paramInt2;
    this.end = paramInt3;
  }
  
  public abstract Expression asExpression(Registers paramRegisters);
  
  public abstract int getRegister();
  
  public abstract Branch invert();
  
  public abstract void useExpression(Expression paramExpression);
}
