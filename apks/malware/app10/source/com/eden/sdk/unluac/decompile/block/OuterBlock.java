package com.eden.sdk.unluac.decompile.block;

import com.eden.sdk.unluac.Version;
import com.eden.sdk.unluac.decompile.Output;
import com.eden.sdk.unluac.decompile.statement.Return;
import com.eden.sdk.unluac.decompile.statement.Statement;
import com.eden.sdk.unluac.parse.BHeader;
import com.eden.sdk.unluac.parse.LFunction;
import java.util.ArrayList;
import java.util.List;

public class OuterBlock
  extends Block
{
  private final List<Statement> statements;
  
  public OuterBlock(LFunction paramLFunction, int paramInt)
  {
    super(paramLFunction, 0, paramInt + 1);
    this.statements = new ArrayList(paramInt);
  }
  
  public void addStatement(Statement paramStatement)
  {
    this.statements.add(paramStatement);
  }
  
  public boolean breakable()
  {
    return false;
  }
  
  public int getLoopback()
  {
    throw new IllegalStateException();
  }
  
  public boolean isContainer()
  {
    return true;
  }
  
  public boolean isUnprotected()
  {
    return false;
  }
  
  public void print(Output paramOutput)
  {
    int i = this.statements.size() - 1;
    if ((i < 0) || (!(this.statements.get(i) instanceof Return))) {
      throw new IllegalStateException(((Statement)this.statements.get(i)).toString());
    }
    this.statements.remove(i);
    Statement.printSequence(paramOutput, this.statements);
  }
  
  public int scopeEnd()
  {
    return this.end - 1 + this.function.header.version.getOuterBlockScopeAdjustment();
  }
}
