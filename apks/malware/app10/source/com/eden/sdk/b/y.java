package com.eden.sdk.b;

import android.util.Log;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import org.apache.http.Header;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpResponseException;

public abstract class y
  extends m
{
  private String[] a = { "application/octet-stream", "image/jpeg", "image/png", "image/gif" };
  
  public y(String[] paramArrayOfString)
  {
    if (paramArrayOfString != null)
    {
      this.a = paramArrayOfString;
      return;
    }
    Log.e("BinaryHttpResponseHandler", "Constructor passed allowedContentTypes was null !");
  }
  
  public final void sendResponseMessage(HttpResponse paramHttpResponse)
  {
    int j = 0;
    StatusLine localStatusLine = paramHttpResponse.getStatusLine();
    Object localObject = paramHttpResponse.getHeaders("Content-Type");
    if (localObject.length != 1)
    {
      sendFailureMessage(localStatusLine.getStatusCode(), paramHttpResponse.getAllHeaders(), null, new HttpResponseException(localStatusLine.getStatusCode(), "None, or more than one, Content-Type Header found!"));
      return;
    }
    localObject = localObject[0];
    String[] arrayOfString = this.a;
    int k = arrayOfString.length;
    int i = 0;
    String str;
    for (;;)
    {
      if (i >= k)
      {
        if (j != 0) {
          break;
        }
        sendFailureMessage(localStatusLine.getStatusCode(), paramHttpResponse.getAllHeaders(), null, new HttpResponseException(localStatusLine.getStatusCode(), "Content-Type not allowed!"));
        return;
      }
      str = arrayOfString[i];
      try
      {
        boolean bool = Pattern.matches(str, ((Header)localObject).getValue());
        if (bool) {
          j = 1;
        }
      }
      catch (PatternSyntaxException localPatternSyntaxException)
      {
        for (;;)
        {
          Log.e("BinaryHttpResponseHandler", "Given pattern is not valid: " + str, localPatternSyntaxException);
        }
      }
      i += 1;
    }
    super.sendResponseMessage(paramHttpResponse);
  }
}
