.class public Lcom/eden/sdk/unluac/parse/LNumberType;
.super Lcom/eden/sdk/unluac/parse/BObjectType;


# annotations
.annotation system Ldalvik/annotation/Signature;
    value = {
        "Lcom/eden/sdk/unluac/parse/BObjectType",
        "<",
        "Lcom/eden/sdk/unluac/parse/LNumber;",
        ">;"
    }
.end annotation


# instance fields
.field public final integral:Z

.field public final size:I


# direct methods
.method public constructor <init>(IZ)V
    .locals 3

    invoke-direct {p0}, Lcom/eden/sdk/unluac/parse/BObjectType;-><init>()V

    iput p1, p0, Lcom/eden/sdk/unluac/parse/LNumberType;->size:I

    iput-boolean p2, p0, Lcom/eden/sdk/unluac/parse/LNumberType;->integral:Z

    const/4 v0, 0x4

    if-eq p1, v0, :cond_0

    const/16 v0, 0x8

    if-eq p1, v0, :cond_0

    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "The input chunk has an unsupported Lua number size: "

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    return-void
.end method


# virtual methods
.method public bridge synthetic parse(Ljava/nio/ByteBuffer;Lcom/eden/sdk/unluac/parse/BHeader;)Lcom/eden/sdk/unluac/parse/BObject;
    .locals 1

    invoke-virtual {p0, p1, p2}, Lcom/eden/sdk/unluac/parse/LNumberType;->parse(Ljava/nio/ByteBuffer;Lcom/eden/sdk/unluac/parse/BHeader;)Lcom/eden/sdk/unluac/parse/LNumber;

    move-result-object v0

    return-object v0
.end method

.method public parse(Ljava/nio/ByteBuffer;Lcom/eden/sdk/unluac/parse/BHeader;)Lcom/eden/sdk/unluac/parse/LNumber;
    .locals 3

    const/4 v0, 0x0

    iget-boolean v1, p0, Lcom/eden/sdk/unluac/parse/LNumberType;->integral:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/eden/sdk/unluac/parse/LNumberType;->size:I

    sparse-switch v1, :sswitch_data_0

    :goto_0
    if-nez v0, :cond_1

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "The input chunk has an unsupported Lua number format"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :sswitch_0
    new-instance v0, Lcom/eden/sdk/unluac/parse/LIntNumber;

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->getInt()I

    move-result v1

    invoke-direct {v0, v1}, Lcom/eden/sdk/unluac/parse/LIntNumber;-><init>(I)V

    goto :goto_0

    :sswitch_1
    new-instance v0, Lcom/eden/sdk/unluac/parse/LLongNumber;

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->getLong()J

    move-result-wide v1

    invoke-direct {v0, v1, v2}, Lcom/eden/sdk/unluac/parse/LLongNumber;-><init>(J)V

    goto :goto_0

    :cond_0
    iget v1, p0, Lcom/eden/sdk/unluac/parse/LNumberType;->size:I

    sparse-switch v1, :sswitch_data_1

    goto :goto_0

    :sswitch_2
    new-instance v0, Lcom/eden/sdk/unluac/parse/LFloatNumber;

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->getFloat()F

    move-result v1

    invoke-direct {v0, v1}, Lcom/eden/sdk/unluac/parse/LFloatNumber;-><init>(F)V

    goto :goto_0

    :sswitch_3
    new-instance v0, Lcom/eden/sdk/unluac/parse/LDoubleNumber;

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->getDouble()D

    move-result-wide v1

    invoke-direct {v0, v1, v2}, Lcom/eden/sdk/unluac/parse/LDoubleNumber;-><init>(D)V

    goto :goto_0

    :cond_1
    invoke-virtual {p2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    return-object v0

    :sswitch_data_0
    .sparse-switch
        0x4 -> :sswitch_0
        0x8 -> :sswitch_1
    .end sparse-switch

    :sswitch_data_1
    .sparse-switch
        0x4 -> :sswitch_2
        0x8 -> :sswitch_3
    .end sparse-switch
.end method
