.class public Lcom/eden/sdk/unluac/parse/BHeader;
.super Ljava/lang/Object;


# static fields
.field private static final luacTail:[B

.field private static final signature:[B


# instance fields
.field public final bool:Lcom/eden/sdk/unluac/parse/LBooleanType;

.field public final constant:Lcom/eden/sdk/unluac/parse/LConstantType;

.field public final debug:Z

.field public final function:Lcom/eden/sdk/unluac/parse/LFunctionType;

.field public final integer:Lcom/eden/sdk/unluac/parse/BIntegerType;

.field public final local:Lcom/eden/sdk/unluac/parse/LLocalType;

.field public final number:Lcom/eden/sdk/unluac/parse/LNumberType;

.field public final sizeT:Lcom/eden/sdk/unluac/parse/BSizeTType;

.field public final string:Lcom/eden/sdk/unluac/parse/LStringType;

.field public final upvalue:Lcom/eden/sdk/unluac/parse/LUpvalueType;

.field public final version:Lcom/eden/sdk/unluac/Version;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    const/4 v0, 0x4

    new-array v0, v0, [B

    fill-array-data v0, :array_0

    sput-object v0, Lcom/eden/sdk/unluac/parse/BHeader;->signature:[B

    const/4 v0, 0x6

    new-array v0, v0, [B

    fill-array-data v0, :array_1

    sput-object v0, Lcom/eden/sdk/unluac/parse/BHeader;->luacTail:[B

    return-void

    nop

    :array_0
    .array-data 1
        0x1bt
        0x4ct
        0x75t
        0x61t
    .end array-data

    :array_1
    .array-data 1
        0x19t
        -0x6dt
        0xdt
        0xat
        0x1at
        0xat
    .end array-data
.end method

.method public constructor <init>(Ljava/nio/ByteBuffer;)V
    .locals 5

    const/4 v2, 0x1

    const/4 v1, 0x0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-boolean v1, p0, Lcom/eden/sdk/unluac/parse/BHeader;->debug:Z

    move v0, v1

    :goto_0
    sget-object v3, Lcom/eden/sdk/unluac/parse/BHeader;->signature:[B

    array-length v3, v3

    if-lt v0, v3, :cond_0

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->get()B

    move-result v0

    and-int/lit16 v0, v0, 0xff

    packed-switch v0, :pswitch_data_0

    shr-int/lit8 v1, v0, 0x4

    and-int/lit8 v0, v0, 0xf

    new-instance v2, Ljava/lang/IllegalStateException;

    new-instance v3, Ljava/lang/StringBuilder;

    const-string v4, "The input chunk\'s Lua version is "

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v3, "."

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, "; unluac can only handle Lua 5.1 and Lua 5.2."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_0
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->get()B

    move-result v3

    sget-object v4, Lcom/eden/sdk/unluac/parse/BHeader;->signature:[B

    aget-byte v4, v4, v0

    if-eq v3, v4, :cond_1

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "The input file does not have the signature of a valid Lua file."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :pswitch_0
    sget-object v0, Lcom/eden/sdk/unluac/Version;->LUA51:Lcom/eden/sdk/unluac/Version;

    iput-object v0, p0, Lcom/eden/sdk/unluac/parse/BHeader;->version:Lcom/eden/sdk/unluac/Version;

    :goto_1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->get()B

    move-result v0

    and-int/lit16 v0, v0, 0xff

    if-eqz v0, :cond_2

    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "The input chunk reports a non-standard lua format: "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    :pswitch_1
    sget-object v0, Lcom/eden/sdk/unluac/Version;->LUA52:Lcom/eden/sdk/unluac/Version;

    iput-object v0, p0, Lcom/eden/sdk/unluac/parse/BHeader;->version:Lcom/eden/sdk/unluac/Version;

    goto :goto_1

    :cond_2
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->get()B

    move-result v0

    and-int/lit16 v0, v0, 0xff

    packed-switch v0, :pswitch_data_1

    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "The input chunk reports an invalid endianness: "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    :pswitch_2
    sget-object v0, Ljava/nio/ByteOrder;->BIG_ENDIAN:Ljava/nio/ByteOrder;

    invoke-virtual {p1, v0}, Ljava/nio/ByteBuffer;->order(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;

    :goto_2
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->get()B

    move-result v0

    and-int/lit16 v0, v0, 0xff

    new-instance v3, Lcom/eden/sdk/unluac/parse/BIntegerType;

    invoke-direct {v3, v0}, Lcom/eden/sdk/unluac/parse/BIntegerType;-><init>(I)V

    iput-object v3, p0, Lcom/eden/sdk/unluac/parse/BHeader;->integer:Lcom/eden/sdk/unluac/parse/BIntegerType;

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->get()B

    move-result v0

    and-int/lit16 v0, v0, 0xff

    new-instance v3, Lcom/eden/sdk/unluac/parse/BSizeTType;

    invoke-direct {v3, v0}, Lcom/eden/sdk/unluac/parse/BSizeTType;-><init>(I)V

    iput-object v3, p0, Lcom/eden/sdk/unluac/parse/BHeader;->sizeT:Lcom/eden/sdk/unluac/parse/BSizeTType;

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->get()B

    move-result v0

    and-int/lit16 v0, v0, 0xff

    const/4 v3, 0x4

    if-eq v0, v3, :cond_3

    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "The input chunk reports an unsupported instruction size: "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, " bytes"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    :pswitch_3
    sget-object v0, Ljava/nio/ByteOrder;->LITTLE_ENDIAN:Ljava/nio/ByteOrder;

    invoke-virtual {p1, v0}, Ljava/nio/ByteBuffer;->order(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;

    goto :goto_2

    :cond_3
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->get()B

    move-result v0

    and-int/lit16 v3, v0, 0xff

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->get()B

    move-result v0

    and-int/lit16 v0, v0, 0xff

    if-le v0, v2, :cond_4

    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "The input chunk reports an invalid code for lua number integralness: "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_4
    if-ne v0, v2, :cond_6

    move v0, v2

    :goto_3
    new-instance v2, Lcom/eden/sdk/unluac/parse/LNumberType;

    invoke-direct {v2, v3, v0}, Lcom/eden/sdk/unluac/parse/LNumberType;-><init>(IZ)V

    iput-object v2, p0, Lcom/eden/sdk/unluac/parse/BHeader;->number:Lcom/eden/sdk/unluac/parse/LNumberType;

    new-instance v0, Lcom/eden/sdk/unluac/parse/LBooleanType;

    invoke-direct {v0}, Lcom/eden/sdk/unluac/parse/LBooleanType;-><init>()V

    iput-object v0, p0, Lcom/eden/sdk/unluac/parse/BHeader;->bool:Lcom/eden/sdk/unluac/parse/LBooleanType;

    new-instance v0, Lcom/eden/sdk/unluac/parse/LStringType;

    invoke-direct {v0}, Lcom/eden/sdk/unluac/parse/LStringType;-><init>()V

    iput-object v0, p0, Lcom/eden/sdk/unluac/parse/BHeader;->string:Lcom/eden/sdk/unluac/parse/LStringType;

    new-instance v0, Lcom/eden/sdk/unluac/parse/LConstantType;

    invoke-direct {v0}, Lcom/eden/sdk/unluac/parse/LConstantType;-><init>()V

    iput-object v0, p0, Lcom/eden/sdk/unluac/parse/BHeader;->constant:Lcom/eden/sdk/unluac/parse/LConstantType;

    new-instance v0, Lcom/eden/sdk/unluac/parse/LLocalType;

    invoke-direct {v0}, Lcom/eden/sdk/unluac/parse/LLocalType;-><init>()V

    iput-object v0, p0, Lcom/eden/sdk/unluac/parse/BHeader;->local:Lcom/eden/sdk/unluac/parse/LLocalType;

    new-instance v0, Lcom/eden/sdk/unluac/parse/LUpvalueType;

    invoke-direct {v0}, Lcom/eden/sdk/unluac/parse/LUpvalueType;-><init>()V

    iput-object v0, p0, Lcom/eden/sdk/unluac/parse/BHeader;->upvalue:Lcom/eden/sdk/unluac/parse/LUpvalueType;

    iget-object v0, p0, Lcom/eden/sdk/unluac/parse/BHeader;->version:Lcom/eden/sdk/unluac/Version;

    invoke-virtual {v0}, Lcom/eden/sdk/unluac/Version;->getLFunctionType()Lcom/eden/sdk/unluac/parse/LFunctionType;

    move-result-object v0

    iput-object v0, p0, Lcom/eden/sdk/unluac/parse/BHeader;->function:Lcom/eden/sdk/unluac/parse/LFunctionType;

    iget-object v0, p0, Lcom/eden/sdk/unluac/parse/BHeader;->version:Lcom/eden/sdk/unluac/Version;

    invoke-virtual {v0}, Lcom/eden/sdk/unluac/Version;->hasHeaderTail()Z

    move-result v0

    if-eqz v0, :cond_5

    :goto_4
    sget-object v0, Lcom/eden/sdk/unluac/parse/BHeader;->luacTail:[B

    array-length v0, v0

    if-lt v1, v0, :cond_7

    :cond_5
    return-void

    :cond_6
    move v0, v1

    goto :goto_3

    :cond_7
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->get()B

    move-result v0

    sget-object v2, Lcom/eden/sdk/unluac/parse/BHeader;->luacTail:[B

    aget-byte v2, v2, v1

    if-eq v0, v2, :cond_8

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "The input file does not have the header tail of a valid Lua file."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_8
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    :pswitch_data_0
    .packed-switch 0x51
        :pswitch_0
        :pswitch_1
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_2
        :pswitch_3
    .end packed-switch
.end method
