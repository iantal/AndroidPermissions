.class public abstract Lcom/eden/sdk/unluac/decompile/branch/Branch;
.super Ljava/lang/Object;


# instance fields
.field public begin:I

.field public end:I

.field public isCompareSet:Z

.field public isSet:Z

.field public isTest:Z

.field public final line:I

.field public setTarget:I


# direct methods
.method public constructor <init>(III)V
    .locals 1

    const/4 v0, 0x0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-boolean v0, p0, Lcom/eden/sdk/unluac/decompile/branch/Branch;->isSet:Z

    iput-boolean v0, p0, Lcom/eden/sdk/unluac/decompile/branch/Branch;->isCompareSet:Z

    iput-boolean v0, p0, Lcom/eden/sdk/unluac/decompile/branch/Branch;->isTest:Z

    const/4 v0, -0x1

    iput v0, p0, Lcom/eden/sdk/unluac/decompile/branch/Branch;->setTarget:I

    iput p1, p0, Lcom/eden/sdk/unluac/decompile/branch/Branch;->line:I

    iput p2, p0, Lcom/eden/sdk/unluac/decompile/branch/Branch;->begin:I

    iput p3, p0, Lcom/eden/sdk/unluac/decompile/branch/Branch;->end:I

    return-void
.end method


# virtual methods
.method public abstract asExpression(Lcom/eden/sdk/unluac/decompile/Registers;)Lcom/eden/sdk/unluac/decompile/expression/Expression;
.end method

.method public abstract getRegister()I
.end method

.method public abstract invert()Lcom/eden/sdk/unluac/decompile/branch/Branch;
.end method

.method public abstract useExpression(Lcom/eden/sdk/unluac/decompile/expression/Expression;)V
.end method
