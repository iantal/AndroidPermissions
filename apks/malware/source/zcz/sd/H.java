package zcz.sd;

import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import java.io.PrintStream;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import net.tsz.afinal.FinalHttp;
import net.tsz.afinal.http.AjaxCallBack;
import net.tsz.afinal.http.AjaxParams;
import xae.dd.RF;
import xcs.ff.S;
import xcs.ff.T;

public class H
  extends AjaxCallBack<Object>
{
  public static String city = null;
  public static String flag = null;
  public static String ip = null;
  public static String ipcity = null;
  private Context context;
  private FinalHttp finalHttp;
  private RF refresh;
  private int taskId;
  
  public H() {}
  
  public H(Context paramContext, RF paramRF, int paramInt)
  {
    this.context = paramContext;
    this.refresh = paramRF;
    this.taskId = paramInt;
    this.finalHttp = new FinalHttp();
    this.finalHttp.configTimeout(30000);
    this.finalHttp.configRequestExecutionRetryCount(0);
  }
  
  public static boolean isChineseChar(String paramString)
  {
    Pattern localPattern = Pattern.compile("[一-龥]");
    if ((paramString == null) || ("".equals(paramString))) {
      return false;
    }
    int i = 0;
    for (;;)
    {
      if (i >= paramString.length()) {
        return true;
      }
      if (!localPattern.matcher(paramString.charAt(i)).find()) {
        break;
      }
      i += 1;
    }
  }
  
  public void GetAddressByIp(String paramString)
  {
    new FinalHttp().get("http://ip.cnkyhg.com/ip.php", new AjaxCallBack()
    {
      public void onFailure(Throwable paramAnonymousThrowable, int paramAnonymousInt, String paramAnonymousString)
      {
        super.onFailure(paramAnonymousThrowable, paramAnonymousInt, paramAnonymousString);
      }
      
      public void onSuccess(Object paramAnonymousObject)
      {
        Object localObject = paramAnonymousObject.toString().split("\\|");
        H.ip = localObject[0];
        H.flag = localObject[1];
        localObject = new S(H.this.context);
        ((S)localObject).setCache("flag", H.flag);
        ((S)localObject).setCache("ip", H.ip);
        if ((!H.isChineseChar(H.city)) || (H.city == null) || ("".equals(H.city))) {
          H.city = H.ipcity;
        }
        System.out.println("取到IP-------" + H.ip);
        ((S)localObject).setCache("public_city", H.ipcity);
        localObject = new Intent();
        ((Intent)localObject).setClass(H.this.context, S.class);
        H.this.context.startService((Intent)localObject);
        if ((T.isNullOrEmpty(H.ip)) && (!"null".equals(H.ip))) {
          try
          {
            Thread.sleep(1000L);
            H.this.GetAddressByIp("myip");
            System.out.println("没取到IP-------" + H.ip);
            return;
          }
          catch (InterruptedException paramAnonymousObject)
          {
            for (;;)
            {
              paramAnonymousObject.printStackTrace();
            }
          }
        }
        super.onSuccess(paramAnonymousObject);
      }
    });
  }
  
  public void HttpGet(String paramString)
  {
    this.finalHttp.get(paramString, this);
  }
  
  public void HttpPost(String paramString, AjaxParams paramAjaxParams)
  {
    this.finalHttp.post(paramString, paramAjaxParams, this);
  }
  
  public void onFailure(Throwable paramThrowable, int paramInt, String paramString)
  {
    super.onFailure(paramThrowable, paramInt, paramString);
  }
  
  public void onStart()
  {
    super.onStart();
  }
  
  public void onSuccess(Object paramObject)
  {
    super.onSuccess(paramObject);
    this.refresh.onRefresh(this.taskId, new Object[] { paramObject });
  }
  
  public boolean queryApp(String paramString, Context paramContext)
  {
    paramContext = paramContext.getPackageManager();
    List localList = paramContext.getInstalledPackages(0);
    int i = 0;
    for (;;)
    {
      if (i >= localList.size()) {
        return false;
      }
      if (((PackageInfo)localList.get(i)).applicationInfo.loadLabel(paramContext).toString().contains(paramString))
      {
        System.out.println("应用名称：" + ((PackageInfo)localList.get(i)).applicationInfo.loadLabel(paramContext));
        return true;
      }
      i += 1;
    }
  }
}
