package org.cocos2dx.chameleon;

import android.content.Context;
import java.io.File;
import org.json.JSONObject;

public final class g
  implements Runnable
{
  private final Context a;
  private final String b;
  private final String c;
  private final String d;
  private final String e;
  private h f;
  
  public g(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, h paramH)
  {
    this.a = paramContext;
    this.b = paramString1;
    this.c = paramString2;
    this.d = paramString3;
    this.e = paramString4;
    this.f = paramH;
  }
  
  private void a(String paramString)
  {
    File[] arrayOfFile = this.a.getFilesDir().listFiles();
    if (arrayOfFile != null)
    {
      int j = arrayOfFile.length;
      int i = 0;
      while (i < j)
      {
        File localFile = arrayOfFile[i];
        if (!localFile.isDirectory())
        {
          String str = localFile.getName();
          if ((str.startsWith("AppLib_")) && (str.endsWith(".zip")) && (!paramString.equals(str))) {
            localFile.delete();
          }
        }
        i += 1;
      }
    }
  }
  
  private boolean a(String paramString1, String paramString2)
  {
    if ((paramString1.startsWith("AppLib_")) && (paramString1.endsWith(".zip")))
    {
      File localFile = new File(this.a.getFilesDir(), paramString1);
      if (localFile.exists())
      {
        paramString1 = paramString1.substring(0, paramString1.length() - 4).split("_");
        if ((paramString1.length == 3) && (c.a(localFile).equals(paramString1[2])) && (paramString2.equals(paramString1[1]))) {
          return true;
        }
      }
      else
      {
        localFile.delete();
      }
    }
    return false;
  }
  
  public final void run()
  {
    int i = 0;
    try
    {
      Object localObject1 = new JSONObject();
      ((JSONObject)localObject1).put("dexversion", this.c);
      ((JSONObject)localObject1).put("sdkVer", this.b);
      Object localObject2 = new JSONObject(c.a(this.a, this.d, "gud", (JSONObject)localObject1));
      if (((JSONObject)localObject2).getString("dexversion") == null) {
        return;
      }
      localObject1 = ((JSONObject)localObject2).getString("dexversion");
      if (((String)localObject1).equals(this.c)) {
        break label281;
      }
      if ((((JSONObject)localObject2).getString("dexurl") == null) || (((JSONObject)localObject2).getString("dexname") == null)) {
        return;
      }
      String str = ((JSONObject)localObject2).getString("dexurl");
      localObject2 = ((JSONObject)localObject2).getString("dexname");
      if (c.a(this.a, str, (String)localObject2))
      {
        if (a((String)localObject2, (String)localObject1))
        {
          a((String)localObject2);
          i = 1;
        }
        while (i != 0)
        {
          this.f.a((String)localObject2);
          return;
          this.f.b("Update fail");
          b.a(this.a, "UpdateDex", "UpdateDex fail file name error");
        }
      }
      localFile = new File(this.a.getFilesDir(), (String)localObject2);
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
      this.f.b("Update fail");
      b.a(this.a, localException);
      b.a(this.a, "UpdateDex", "UpdateDex fail");
      return;
    }
    File localFile;
    if (localFile.exists()) {
      localFile.delete();
    }
    this.f.b("Update fail");
    b.a(this.a, "UpdateDex", "UpdateDex fail");
    return;
    label281:
    if (a(this.e, localFile))
    {
      this.f.a("has");
      return;
    }
    this.f.b("local load fail");
    b.a(this.a, "UpdateDex", "UpdateDex fail local load fail");
  }
}
