package org.cocos2dx.chameleon;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.res.AssetManager;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.telephony.TelephonyManager;
import android.util.Base64;
import java.io.File;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import java.security.SecureRandom;
import java.util.Random;
import javax.crypto.Cipher;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;

public class GameProxy
{
  public static boolean DEBUG = false;
  public static boolean TESTON = false;
  static Class a;
  private static boolean b = false;
  private static final String c;
  private static String d;
  private static final String e;
  private static String f;
  private static String g;
  private static final Random h = new Random();
  public static boolean initializeFail;
  public static boolean initializeSuccess;
  
  static
  {
    a = null;
    c = f();
    d = "http://nigo.gjidi.info";
    e = h();
    f = null;
    g = null;
    initializeSuccess = false;
    initializeFail = false;
  }
  
  public GameProxy() {}
  
  private static byte[] a(byte[] paramArrayOfByte, String paramString)
  {
    SecureRandom localSecureRandom = new SecureRandom();
    try
    {
      paramString = SecretKeyFactory.getInstance("DES").generateSecret(new DESKeySpec(paramString.getBytes("UTF-8")));
      Cipher localCipher = Cipher.getInstance("DES/ECB/PKCS5Padding");
      localCipher.init(2, paramString, localSecureRandom);
      paramArrayOfByte = localCipher.doFinal(paramArrayOfByte);
      return paramArrayOfByte;
    }
    catch (Exception paramArrayOfByte)
    {
      paramArrayOfByte.printStackTrace();
    }
    return null;
  }
  
  /* Error */
  private static void b(Context paramContext)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore_2
    //   2: aconst_null
    //   3: astore 5
    //   5: aconst_null
    //   6: astore 6
    //   8: aconst_null
    //   9: astore 7
    //   11: new 121	java/lang/StringBuilder
    //   14: dup
    //   15: invokespecial 122	java/lang/StringBuilder:<init>	()V
    //   18: aload_0
    //   19: invokevirtual 128	android/content/Context:getFilesDir	()Ljava/io/File;
    //   22: invokevirtual 133	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   25: invokevirtual 137	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28: getstatic 140	java/io/File:separator	Ljava/lang/String;
    //   31: invokevirtual 137	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34: ldc -114
    //   36: invokevirtual 137	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39: invokevirtual 145	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   42: astore_0
    //   43: new 147	java/util/HashMap
    //   46: dup
    //   47: invokespecial 148	java/util/HashMap:<init>	()V
    //   50: astore 8
    //   52: new 130	java/io/File
    //   55: dup
    //   56: aload_0
    //   57: invokespecial 151	java/io/File:<init>	(Ljava/lang/String;)V
    //   60: astore_3
    //   61: aload_3
    //   62: invokevirtual 155	java/io/File:exists	()Z
    //   65: ifne +4 -> 69
    //   68: return
    //   69: new 157	java/io/FileInputStream
    //   72: dup
    //   73: aload_3
    //   74: invokespecial 160	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   77: astore 4
    //   79: new 162	java/io/ObjectInputStream
    //   82: dup
    //   83: aload 4
    //   85: invokespecial 165	java/io/ObjectInputStream:<init>	(Ljava/io/InputStream;)V
    //   88: astore_3
    //   89: aload_3
    //   90: invokevirtual 169	java/io/ObjectInputStream:readObject	()Ljava/lang/Object;
    //   93: checkcast 147	java/util/HashMap
    //   96: astore 7
    //   98: aload 7
    //   100: invokeinterface 175 1 0
    //   105: invokeinterface 181 1 0
    //   110: astore 9
    //   112: iconst_0
    //   113: istore_1
    //   114: aload 9
    //   116: invokeinterface 186 1 0
    //   121: ifeq +178 -> 299
    //   124: aload 9
    //   126: invokeinterface 189 1 0
    //   131: checkcast 87	java/lang/String
    //   134: astore 10
    //   136: aload 10
    //   138: invokestatic 191	org/cocos2dx/chameleon/GameProxy:b	(Ljava/lang/String;)[B
    //   141: invokestatic 195	org/cocos2dx/chameleon/GameProxy:sec2	([B)Ljava/lang/String;
    //   144: astore 11
    //   146: aload 7
    //   148: aload 10
    //   150: invokeinterface 199 2 0
    //   155: checkcast 87	java/lang/String
    //   158: invokestatic 191	org/cocos2dx/chameleon/GameProxy:b	(Ljava/lang/String;)[B
    //   161: invokestatic 195	org/cocos2dx/chameleon/GameProxy:sec2	([B)Ljava/lang/String;
    //   164: astore 12
    //   166: ldc -55
    //   168: aload 11
    //   170: invokevirtual 205	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   173: ifeq +30 -> 203
    //   176: ldc -49
    //   178: aload 12
    //   180: invokevirtual 205	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   183: ifeq +383 -> 566
    //   186: iconst_1
    //   187: istore_1
    //   188: aload 8
    //   190: aload 10
    //   192: ldc -47
    //   194: invokeinterface 213 3 0
    //   199: pop
    //   200: goto -86 -> 114
    //   203: ldc -41
    //   205: aload 11
    //   207: invokevirtual 205	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   210: ifeq +30 -> 240
    //   213: ldc -49
    //   215: aload 12
    //   217: invokevirtual 205	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   220: ifeq +343 -> 563
    //   223: iconst_1
    //   224: istore_2
    //   225: aload 8
    //   227: aload 10
    //   229: ldc -47
    //   231: invokeinterface 213 3 0
    //   236: pop
    //   237: goto -123 -> 114
    //   240: aload 8
    //   242: aload 10
    //   244: aload 7
    //   246: aload 10
    //   248: invokeinterface 199 2 0
    //   253: invokeinterface 213 3 0
    //   258: pop
    //   259: goto -145 -> 114
    //   262: astore 5
    //   264: aload 4
    //   266: astore_0
    //   267: aload 5
    //   269: astore 4
    //   271: aload 4
    //   273: invokevirtual 116	java/lang/Exception:printStackTrace	()V
    //   276: aload_3
    //   277: ifnull +7 -> 284
    //   280: aload_3
    //   281: invokevirtual 218	java/io/ObjectInputStream:close	()V
    //   284: aload_0
    //   285: ifnull +284 -> 569
    //   288: aload_0
    //   289: invokevirtual 219	java/io/FileInputStream:close	()V
    //   292: return
    //   293: astore_0
    //   294: aload_0
    //   295: invokevirtual 220	java/io/IOException:printStackTrace	()V
    //   298: return
    //   299: aload_3
    //   300: invokevirtual 218	java/io/ObjectInputStream:close	()V
    //   303: aload 4
    //   305: invokevirtual 219	java/io/FileInputStream:close	()V
    //   308: iload_2
    //   309: ifne +7 -> 316
    //   312: iload_1
    //   313: ifeq +256 -> 569
    //   316: new 222	java/io/FileOutputStream
    //   319: dup
    //   320: aload_0
    //   321: iconst_0
    //   322: invokespecial 225	java/io/FileOutputStream:<init>	(Ljava/lang/String;Z)V
    //   325: astore_0
    //   326: new 227	java/io/ObjectOutputStream
    //   329: dup
    //   330: aload_0
    //   331: invokespecial 230	java/io/ObjectOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   334: astore_3
    //   335: aload_3
    //   336: aload 8
    //   338: invokevirtual 234	java/io/ObjectOutputStream:writeObject	(Ljava/lang/Object;)V
    //   341: aload_3
    //   342: invokevirtual 235	java/io/ObjectOutputStream:close	()V
    //   345: aload_0
    //   346: invokevirtual 236	java/io/FileOutputStream:close	()V
    //   349: return
    //   350: astore_0
    //   351: return
    //   352: astore_3
    //   353: aload_3
    //   354: invokevirtual 220	java/io/IOException:printStackTrace	()V
    //   357: goto -54 -> 303
    //   360: astore_3
    //   361: aload_3
    //   362: invokevirtual 220	java/io/IOException:printStackTrace	()V
    //   365: goto -57 -> 308
    //   368: astore_3
    //   369: aload_3
    //   370: invokevirtual 220	java/io/IOException:printStackTrace	()V
    //   373: goto -89 -> 284
    //   376: astore_0
    //   377: aconst_null
    //   378: astore_3
    //   379: aconst_null
    //   380: astore 4
    //   382: aload_3
    //   383: ifnull +7 -> 390
    //   386: aload_3
    //   387: invokevirtual 218	java/io/ObjectInputStream:close	()V
    //   390: aload 4
    //   392: ifnull +8 -> 400
    //   395: aload 4
    //   397: invokevirtual 219	java/io/FileInputStream:close	()V
    //   400: aload_0
    //   401: athrow
    //   402: astore_3
    //   403: aload_3
    //   404: invokevirtual 220	java/io/IOException:printStackTrace	()V
    //   407: goto -17 -> 390
    //   410: astore_3
    //   411: aload_3
    //   412: invokevirtual 220	java/io/IOException:printStackTrace	()V
    //   415: goto -15 -> 400
    //   418: astore_0
    //   419: aconst_null
    //   420: astore_0
    //   421: aload 5
    //   423: astore_3
    //   424: aload_3
    //   425: ifnull +7 -> 432
    //   428: aload_3
    //   429: invokevirtual 235	java/io/ObjectOutputStream:close	()V
    //   432: aload_0
    //   433: ifnull +136 -> 569
    //   436: aload_0
    //   437: invokevirtual 236	java/io/FileOutputStream:close	()V
    //   440: return
    //   441: astore_0
    //   442: return
    //   443: astore_3
    //   444: aconst_null
    //   445: astore_0
    //   446: aload 6
    //   448: astore 4
    //   450: aload 4
    //   452: ifnull +8 -> 460
    //   455: aload 4
    //   457: invokevirtual 235	java/io/ObjectOutputStream:close	()V
    //   460: aload_0
    //   461: ifnull +7 -> 468
    //   464: aload_0
    //   465: invokevirtual 236	java/io/FileOutputStream:close	()V
    //   468: aload_3
    //   469: athrow
    //   470: astore_3
    //   471: goto -126 -> 345
    //   474: astore_3
    //   475: goto -43 -> 432
    //   478: astore 4
    //   480: goto -20 -> 460
    //   483: astore_0
    //   484: goto -16 -> 468
    //   487: astore_3
    //   488: aload 6
    //   490: astore 4
    //   492: goto -42 -> 450
    //   495: astore 5
    //   497: aload_3
    //   498: astore 4
    //   500: aload 5
    //   502: astore_3
    //   503: goto -53 -> 450
    //   506: astore_3
    //   507: aload 5
    //   509: astore_3
    //   510: goto -86 -> 424
    //   513: astore 4
    //   515: goto -91 -> 424
    //   518: astore_0
    //   519: aconst_null
    //   520: astore_3
    //   521: goto -139 -> 382
    //   524: astore_0
    //   525: goto -143 -> 382
    //   528: astore 5
    //   530: aload_0
    //   531: astore 4
    //   533: aload 5
    //   535: astore_0
    //   536: goto -154 -> 382
    //   539: astore 4
    //   541: aconst_null
    //   542: astore_3
    //   543: aload 7
    //   545: astore_0
    //   546: goto -275 -> 271
    //   549: astore 5
    //   551: aconst_null
    //   552: astore_3
    //   553: aload 4
    //   555: astore_0
    //   556: aload 5
    //   558: astore 4
    //   560: goto -289 -> 271
    //   563: goto -338 -> 225
    //   566: goto -378 -> 188
    //   569: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	570	0	paramContext	Context
    //   113	200	1	i	int
    //   1	308	2	j	int
    //   60	282	3	localObject1	Object
    //   352	2	3	localIOException1	java.io.IOException
    //   360	2	3	localIOException2	java.io.IOException
    //   368	2	3	localIOException3	java.io.IOException
    //   378	9	3	localObject2	Object
    //   402	2	3	localIOException4	java.io.IOException
    //   410	2	3	localIOException5	java.io.IOException
    //   423	6	3	localException1	Exception
    //   443	26	3	localObject3	Object
    //   470	1	3	localIOException6	java.io.IOException
    //   474	1	3	localIOException7	java.io.IOException
    //   487	11	3	localObject4	Object
    //   502	1	3	localObject5	Object
    //   506	1	3	localIOException8	java.io.IOException
    //   509	44	3	localObject6	Object
    //   77	379	4	localObject7	Object
    //   478	1	4	localIOException9	java.io.IOException
    //   490	9	4	localObject8	Object
    //   513	1	4	localIOException10	java.io.IOException
    //   531	1	4	localContext	Context
    //   539	15	4	localException2	Exception
    //   558	1	4	localException3	Exception
    //   3	1	5	localObject9	Object
    //   262	160	5	localException4	Exception
    //   495	13	5	localObject10	Object
    //   528	6	5	localObject11	Object
    //   549	8	5	localException5	Exception
    //   6	483	6	localObject12	Object
    //   9	535	7	localHashMap1	java.util.HashMap
    //   50	287	8	localHashMap2	java.util.HashMap
    //   110	15	9	localIterator	java.util.Iterator
    //   134	113	10	str1	String
    //   144	62	11	str2	String
    //   164	52	12	str3	String
    // Exception table:
    //   from	to	target	type
    //   89	112	262	java/lang/Exception
    //   114	186	262	java/lang/Exception
    //   188	200	262	java/lang/Exception
    //   203	223	262	java/lang/Exception
    //   225	237	262	java/lang/Exception
    //   240	259	262	java/lang/Exception
    //   288	292	293	java/io/IOException
    //   345	349	350	java/io/IOException
    //   299	303	352	java/io/IOException
    //   303	308	360	java/io/IOException
    //   280	284	368	java/io/IOException
    //   52	68	376	finally
    //   69	79	376	finally
    //   386	390	402	java/io/IOException
    //   395	400	410	java/io/IOException
    //   316	326	418	java/io/IOException
    //   436	440	441	java/io/IOException
    //   316	326	443	finally
    //   341	345	470	java/io/IOException
    //   428	432	474	java/io/IOException
    //   455	460	478	java/io/IOException
    //   464	468	483	java/io/IOException
    //   326	335	487	finally
    //   335	341	495	finally
    //   326	335	506	java/io/IOException
    //   335	341	513	java/io/IOException
    //   79	89	518	finally
    //   89	112	524	finally
    //   114	186	524	finally
    //   188	200	524	finally
    //   203	223	524	finally
    //   225	237	524	finally
    //   240	259	524	finally
    //   271	276	528	finally
    //   52	68	539	java/lang/Exception
    //   69	79	539	java/lang/Exception
    //   79	89	549	java/lang/Exception
  }
  
  private static boolean b(Context paramContext, String paramString)
  {
    for (;;)
    {
      Object localObject;
      int i;
      try
      {
        localObject = paramContext.getSharedPreferences("cl_game_prefs", 0);
        if (paramString.equals(((SharedPreferences)localObject).getString("sid", null))) {
          break label130;
        }
        localObject = ((SharedPreferences)localObject).edit();
        ((SharedPreferences.Editor)localObject).putString("sid", paramString);
        ((SharedPreferences.Editor)localObject).commit();
        paramContext = paramContext.getFilesDir().listFiles();
        if (paramContext != null)
        {
          int j = paramContext.length;
          i = 0;
          if (i < j)
          {
            paramString = paramContext[i];
            localObject = paramString.getName();
            if (((String)localObject).equals("sdk_prefs")) {
              paramString.delete();
            } else if (((String)localObject).startsWith("Android.Sdk.Res")) {
              paramString.delete();
            }
          }
        }
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
      }
      return false;
      label130:
      paramContext = ((SharedPreferences)localObject).getString("sdk_update_state", "0");
      ((SharedPreferences)localObject).getString("sid", "0");
      if ("1".equals(paramContext))
      {
        paramContext = ((SharedPreferences)localObject).edit();
        paramContext.putString("sdk_update_state", "0");
        paramContext.commit();
        return true;
      }
      return false;
      i += 1;
    }
  }
  
  private static byte[] b(String paramString)
  {
    int j = paramString.length() / 2;
    byte[] arrayOfByte = new byte[j];
    int i = 0;
    while (i < j)
    {
      arrayOfByte[i] = Integer.valueOf(paramString.substring(i << 1, (i << 1) + 2), 16).byteValue();
      i += 1;
    }
    return arrayOfByte;
  }
  
  /* Error */
  private static f.a c(Context paramContext)
  {
    // Byte code:
    //   0: new 301	org/cocos2dx/chameleon/f$a
    //   3: dup
    //   4: invokespecial 302	org/cocos2dx/chameleon/f$a:<init>	()V
    //   7: astore 6
    //   9: aload_0
    //   10: invokevirtual 128	android/content/Context:getFilesDir	()Ljava/io/File;
    //   13: invokevirtual 267	java/io/File:listFiles	()[Ljava/io/File;
    //   16: astore 7
    //   18: aload 7
    //   20: ifnull +91 -> 111
    //   23: aload 7
    //   25: arraylength
    //   26: istore_2
    //   27: iconst_0
    //   28: istore_1
    //   29: aconst_null
    //   30: astore 4
    //   32: aload 4
    //   34: astore 5
    //   36: iload_1
    //   37: iload_2
    //   38: if_icmpge +76 -> 114
    //   41: aload 7
    //   43: iload_1
    //   44: aaload
    //   45: astore 5
    //   47: aload 5
    //   49: invokevirtual 305	java/io/File:isDirectory	()Z
    //   52: ifne +366 -> 418
    //   55: aload 5
    //   57: invokevirtual 270	java/io/File:getName	()Ljava/lang/String;
    //   60: astore 5
    //   62: aload 5
    //   64: ldc_w 307
    //   67: invokevirtual 279	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   70: ifeq +348 -> 418
    //   73: aload 5
    //   75: ldc_w 309
    //   78: invokevirtual 312	java/lang/String:endsWith	(Ljava/lang/String;)Z
    //   81: istore_3
    //   82: iload_3
    //   83: ifeq +335 -> 418
    //   86: aload 5
    //   88: astore 4
    //   90: iload_1
    //   91: iconst_1
    //   92: iadd
    //   93: istore_1
    //   94: goto -62 -> 32
    //   97: astore_0
    //   98: ldc_w 314
    //   101: ldc_w 316
    //   104: aload_0
    //   105: invokestatic 321	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   108: pop
    //   109: aconst_null
    //   110: areturn
    //   111: aconst_null
    //   112: astore 5
    //   114: aload 5
    //   116: ifnonnull +92 -> 208
    //   119: aload_0
    //   120: invokestatic 324	org/cocos2dx/chameleon/GameProxy:d	(Landroid/content/Context;)Ljava/lang/String;
    //   123: astore 5
    //   125: aload 5
    //   127: ifnonnull +81 -> 208
    //   130: aload_0
    //   131: invokevirtual 328	android/content/Context:getAssets	()Landroid/content/res/AssetManager;
    //   134: aload 5
    //   136: invokevirtual 334	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   139: astore 4
    //   141: new 130	java/io/File
    //   144: dup
    //   145: aload_0
    //   146: invokevirtual 128	android/content/Context:getFilesDir	()Ljava/io/File;
    //   149: aload 5
    //   151: invokespecial 337	java/io/File:<init>	(Ljava/io/File;Ljava/lang/String;)V
    //   154: astore 5
    //   156: new 222	java/io/FileOutputStream
    //   159: dup
    //   160: aload 5
    //   162: invokespecial 338	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   165: astore 5
    //   167: aload 4
    //   169: checkcast 157	java/io/FileInputStream
    //   172: invokevirtual 342	java/io/FileInputStream:getChannel	()Ljava/nio/channels/FileChannel;
    //   175: astore 7
    //   177: aload 5
    //   179: invokevirtual 343	java/io/FileOutputStream:getChannel	()Ljava/nio/channels/FileChannel;
    //   182: astore 8
    //   184: aload 7
    //   186: lconst_0
    //   187: aload 7
    //   189: invokevirtual 349	java/nio/channels/FileChannel:size	()J
    //   192: aload 8
    //   194: invokevirtual 353	java/nio/channels/FileChannel:transferTo	(JJLjava/nio/channels/WritableByteChannel;)J
    //   197: pop2
    //   198: aload 4
    //   200: invokevirtual 356	java/io/InputStream:close	()V
    //   203: aload 5
    //   205: invokevirtual 236	java/io/FileOutputStream:close	()V
    //   208: aload_0
    //   209: invokevirtual 128	android/content/Context:getFilesDir	()Ljava/io/File;
    //   212: invokevirtual 267	java/io/File:listFiles	()[Ljava/io/File;
    //   215: astore_0
    //   216: aload_0
    //   217: ifnull +198 -> 415
    //   220: aload_0
    //   221: arraylength
    //   222: istore_2
    //   223: iconst_0
    //   224: istore_1
    //   225: iload_1
    //   226: iload_2
    //   227: if_icmpge +188 -> 415
    //   230: aload_0
    //   231: iload_1
    //   232: aaload
    //   233: astore 4
    //   235: aload 4
    //   237: invokevirtual 305	java/io/File:isDirectory	()Z
    //   240: ifne +76 -> 316
    //   243: aload 4
    //   245: invokevirtual 270	java/io/File:getName	()Ljava/lang/String;
    //   248: astore 4
    //   250: aload 4
    //   252: ldc_w 307
    //   255: invokevirtual 279	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   258: ifeq +92 -> 350
    //   261: aload 4
    //   263: ldc_w 309
    //   266: invokevirtual 312	java/lang/String:endsWith	(Ljava/lang/String;)Z
    //   269: ifeq +81 -> 350
    //   272: aload 4
    //   274: iconst_0
    //   275: aload 4
    //   277: invokevirtual 285	java/lang/String:length	()I
    //   280: iconst_4
    //   281: isub
    //   282: invokevirtual 289	java/lang/String:substring	(II)Ljava/lang/String;
    //   285: ldc_w 358
    //   288: invokevirtual 362	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   291: astore 5
    //   293: aload 5
    //   295: arraylength
    //   296: iconst_3
    //   297: if_icmpne +19 -> 316
    //   300: aload 6
    //   302: aload 5
    //   304: iconst_1
    //   305: aaload
    //   306: putfield 364	org/cocos2dx/chameleon/f$a:a	Ljava/lang/String;
    //   309: aload 6
    //   311: aload 4
    //   313: putfield 366	org/cocos2dx/chameleon/f$a:b	Ljava/lang/String;
    //   316: iload_1
    //   317: iconst_1
    //   318: iadd
    //   319: istore_1
    //   320: goto -95 -> 225
    //   323: astore 4
    //   325: aload 4
    //   327: invokevirtual 116	java/lang/Exception:printStackTrace	()V
    //   330: goto -122 -> 208
    //   333: astore 4
    //   335: ldc_w 314
    //   338: ldc_w 368
    //   341: aload 4
    //   343: invokestatic 321	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   346: pop
    //   347: goto -139 -> 208
    //   350: aload 4
    //   352: invokestatic 370	org/cocos2dx/chameleon/GameProxy:g	()Ljava/lang/String;
    //   355: invokevirtual 279	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   358: ifeq -42 -> 316
    //   361: aload 4
    //   363: ldc_w 372
    //   366: invokevirtual 312	java/lang/String:endsWith	(Ljava/lang/String;)Z
    //   369: ifeq -53 -> 316
    //   372: aload 4
    //   374: ldc_w 358
    //   377: invokevirtual 362	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   380: astore 4
    //   382: aload 4
    //   384: arraylength
    //   385: iconst_2
    //   386: if_icmple -70 -> 316
    //   389: aload 6
    //   391: aload 4
    //   393: iconst_1
    //   394: aaload
    //   395: putfield 373	org/cocos2dx/chameleon/f$a:c	Ljava/lang/String;
    //   398: goto -82 -> 316
    //   401: astore_0
    //   402: ldc_w 314
    //   405: ldc_w 375
    //   408: aload_0
    //   409: invokestatic 321	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   412: pop
    //   413: aconst_null
    //   414: areturn
    //   415: aload 6
    //   417: areturn
    //   418: goto -328 -> 90
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	421	0	paramContext	Context
    //   28	292	1	i	int
    //   26	202	2	j	int
    //   81	2	3	bool	boolean
    //   30	282	4	localObject1	Object
    //   323	3	4	localException	Exception
    //   333	40	4	localIOException	java.io.IOException
    //   380	12	4	arrayOfString	String[]
    //   34	269	5	localObject2	Object
    //   7	409	6	localA	f.a
    //   16	172	7	localObject3	Object
    //   182	11	8	localFileChannel	java.nio.channels.FileChannel
    // Exception table:
    //   from	to	target	type
    //   9	18	97	java/lang/Exception
    //   23	27	97	java/lang/Exception
    //   47	82	97	java/lang/Exception
    //   156	208	323	java/lang/Exception
    //   130	156	333	java/io/IOException
    //   156	208	333	java/io/IOException
    //   325	330	333	java/io/IOException
    //   208	216	401	java/lang/Exception
    //   220	223	401	java/lang/Exception
    //   235	316	401	java/lang/Exception
    //   350	398	401	java/lang/Exception
  }
  
  private static String d(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getAssets().list("");
      if (paramContext != null)
      {
        int j = paramContext.length;
        int i = 0;
        while (i < j)
        {
          String str = paramContext[i];
          if (str.startsWith("AppLib_"))
          {
            boolean bool = str.endsWith(".zip");
            if (bool) {
              return str;
            }
          }
          i += 1;
        }
      }
      return null;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  @SuppressLint({"NewApi"})
  public static void doBilling(Activity paramActivity, String paramString1, String paramString2, PayCallback paramPayCallback)
  {
    try
    {
      Object localObject1 = paramActivity.getClassLoader();
      Class localClass = ((ClassLoader)localObject1).loadClass(new String(Base64.decode(new StringBuffer("rNWYixGbhNUehBVSkU2YhZmclRnbJVWbhdkLpBXYucmbpxGbpJmLl1WYn12Yu42Y").reverse().toString(), 0), "UTF-8"));
      Object localObject2 = new GameProxy.2(paramPayCallback);
      localObject2 = Proxy.newProxyInstance((ClassLoader)localObject1, new Class[] { localClass }, (InvocationHandler)localObject2);
      localObject1 = ((ClassLoader)localObject1).loadClass(e());
      ((Class)localObject1).getMethod("doBilling", new Class[] { Context.class, Boolean.TYPE, Boolean.TYPE, String.class, String.class, localClass }).invoke(localObject1, new Object[] { paramActivity, Boolean.valueOf(true), Boolean.valueOf(true), paramString1, paramString2, localObject2 });
      return;
    }
    catch (Exception paramActivity)
    {
      for (;;)
      {
        paramPayCallback.onResult(2, paramString1, null);
      }
    }
    finally {}
  }
  
  private static String e()
  {
    return new String(Base64.decode(new StringBuffer("=U2YhZmclRnbJVWbhdkLpBXYucmbpxGbpJmLl1WYn12Yu42Y").reverse().toString(), 0), "UTF-8");
  }
  
  private static String f()
  {
    String str = new StringBuffer("vZmbp5Saklman5ybnlmb").reverse().toString();
    try
    {
      str = new String(Base64.decode(str, 0), "UTF-8");
      return str;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException) {}
    return "nigo.gjidi.info";
  }
  
  private static String g()
  {
    try
    {
      String str = new String(Base64.decode("QW5kR2FtZS5TZGsuTGli".getBytes("UTF-8"), 0), "UTF-8");
      return str;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      localUnsupportedEncodingException.printStackTrace();
      return "";
    }
    finally
    {
      System.out.println("");
    }
  }
  
  private static String h()
  {
    String str = new StringBuffer("=QTZs9Wb").reverse().toString();
    try
    {
      str = new String(Base64.decode(str, 0), "UTF-8");
      return str;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException) {}
    return "mole4";
  }
  
  @SuppressLint({"NewApi"})
  public static void initialize(Activity paramActivity, String paramString, InitCallback paramInitCallback)
  {
    try
    {
      initialize(paramActivity, paramString, false, paramInitCallback);
      return;
    }
    finally
    {
      paramActivity = finally;
      throw paramActivity;
    }
  }
  
  @SuppressLint({"NewApi"})
  public static void initialize(Activity paramActivity, String paramString, boolean paramBoolean, InitCallback paramInitCallback)
  {
    for (;;)
    {
      try
      {
        b(paramActivity);
        if (b)
        {
          if (initializeSuccess)
          {
            initializeApp(paramActivity, null);
            paramInitCallback.onHasBeenSuccess("1");
            return;
          }
          if (!initializeFail) {
            continue;
          }
          paramInitCallback.onFail("0");
          continue;
        }
        b = true;
      }
      finally {}
      paramInitCallback = new GameProxy.3(paramActivity, paramInitCallback);
      if ((f == null) && (((TelephonyManager)paramActivity.getSystemService("phone")).getSubscriberId() == null)) {
        f = "";
      }
      a.b = f;
      if (g == null)
      {
        String str = ((TelephonyManager)paramActivity.getSystemService("phone")).getDeviceId();
        g = str;
        if (str == null) {
          g = "";
        }
      }
      a.c = g;
      paramActivity = new GameProxy.4(paramString, paramActivity, paramBoolean, paramInitCallback);
      try
      {
        new Thread(paramActivity).start();
      }
      catch (Exception paramActivity)
      {
        paramActivity.printStackTrace();
        paramActivity = new Bundle();
        paramString = new Message();
        paramActivity.putString("ret", "0");
        paramString.setData(paramActivity);
        paramInitCallback.sendMessage(paramString);
      }
    }
  }
  
  /* Error */
  @SuppressLint({"NewApi"})
  public static void initializeApp(Activity paramActivity, LoginCallback paramLoginCallback)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: aload_0
    //   4: invokestatic 495	org/cocos2dx/chameleon/GameProxy:b	(Landroid/content/Context;)V
    //   7: aload_0
    //   8: invokevirtual 410	android/app/Activity:getClassLoader	()Ljava/lang/ClassLoader;
    //   11: astore_3
    //   12: aload_3
    //   13: new 87	java/lang/String
    //   16: dup
    //   17: new 377	java/lang/StringBuffer
    //   20: dup
    //   21: ldc_w 566
    //   24: invokespecial 380	java/lang/StringBuffer:<init>	(Ljava/lang/String;)V
    //   27: invokevirtual 384	java/lang/StringBuffer:reverse	()Ljava/lang/StringBuffer;
    //   30: invokevirtual 385	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   33: iconst_0
    //   34: invokestatic 391	android/util/Base64:decode	(Ljava/lang/String;I)[B
    //   37: ldc 85
    //   39: invokespecial 394	java/lang/String:<init>	([BLjava/lang/String;)V
    //   42: invokevirtual 418	java/lang/ClassLoader:loadClass	(Ljava/lang/String;)Ljava/lang/Class;
    //   45: astore_2
    //   46: new 568	org/cocos2dx/chameleon/GameProxy$1
    //   49: dup
    //   50: aload_1
    //   51: invokespecial 571	org/cocos2dx/chameleon/GameProxy$1:<init>	(Lorg/cocos2dx/chameleon/LoginCallback;)V
    //   54: astore 4
    //   56: aload_3
    //   57: iconst_1
    //   58: anewarray 425	java/lang/Class
    //   61: dup
    //   62: iconst_0
    //   63: aload_2
    //   64: aastore
    //   65: aload 4
    //   67: invokestatic 431	java/lang/reflect/Proxy:newProxyInstance	(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
    //   70: astore 4
    //   72: aload_3
    //   73: invokestatic 433	org/cocos2dx/chameleon/GameProxy:e	()Ljava/lang/String;
    //   76: invokevirtual 418	java/lang/ClassLoader:loadClass	(Ljava/lang/String;)Ljava/lang/Class;
    //   79: astore_3
    //   80: aload_3
    //   81: ldc_w 572
    //   84: bipush 6
    //   86: anewarray 425	java/lang/Class
    //   89: dup
    //   90: iconst_0
    //   91: ldc_w 406
    //   94: aastore
    //   95: dup
    //   96: iconst_1
    //   97: ldc 87
    //   99: aastore
    //   100: dup
    //   101: iconst_2
    //   102: ldc 87
    //   104: aastore
    //   105: dup
    //   106: iconst_3
    //   107: ldc 87
    //   109: aastore
    //   110: dup
    //   111: iconst_4
    //   112: ldc 87
    //   114: aastore
    //   115: dup
    //   116: iconst_5
    //   117: aload_2
    //   118: aastore
    //   119: invokevirtual 443	java/lang/Class:getMethod	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    //   122: aload_3
    //   123: bipush 6
    //   125: anewarray 4	java/lang/Object
    //   128: dup
    //   129: iconst_0
    //   130: aload_0
    //   131: aastore
    //   132: dup
    //   133: iconst_1
    //   134: aconst_null
    //   135: aastore
    //   136: dup
    //   137: iconst_2
    //   138: aconst_null
    //   139: aastore
    //   140: dup
    //   141: iconst_3
    //   142: aconst_null
    //   143: aastore
    //   144: dup
    //   145: iconst_4
    //   146: aconst_null
    //   147: aastore
    //   148: dup
    //   149: iconst_5
    //   150: aload 4
    //   152: aastore
    //   153: invokevirtual 452	java/lang/reflect/Method:invoke	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    //   156: pop
    //   157: ldc 2
    //   159: monitorexit
    //   160: return
    //   161: astore_0
    //   162: aload_1
    //   163: ifnull -6 -> 157
    //   166: aload_1
    //   167: iconst_0
    //   168: ldc_w 574
    //   171: ldc_w 396
    //   174: invokeinterface 577 4 0
    //   179: goto -22 -> 157
    //   182: astore_0
    //   183: ldc 2
    //   185: monitorexit
    //   186: aload_0
    //   187: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	188	0	paramActivity	Activity
    //   0	188	1	paramLoginCallback	LoginCallback
    //   45	73	2	localClass	Class
    //   11	112	3	localObject1	Object
    //   54	97	4	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   7	157	161	java/lang/Exception
    //   3	7	182	finally
    //   7	157	182	finally
    //   166	179	182	finally
  }
  
  public static void onActivityDestroy(Activity paramActivity) {}
  
  public static long randomMilliseconds(int paramInt1, int paramInt2)
  {
    return h.nextInt(paramInt2) % (paramInt2 - paramInt1 + 1) + paramInt1;
  }
  
  public static String sec2(byte[] paramArrayOfByte)
  {
    if (paramArrayOfByte != null) {}
    for (;;)
    {
      try
      {
        paramArrayOfByte = a(paramArrayOfByte, new String(Base64.decode(new StringBuffer("=M0RNN0Yn12Y").reverse().toString(), 0), "UTF-8"));
        if (paramArrayOfByte == null) {
          return null;
        }
        paramArrayOfByte = new String(paramArrayOfByte, "UTF-8");
        return paramArrayOfByte;
      }
      catch (Exception paramArrayOfByte)
      {
        paramArrayOfByte.printStackTrace();
      }
      paramArrayOfByte = null;
    }
  }
}
