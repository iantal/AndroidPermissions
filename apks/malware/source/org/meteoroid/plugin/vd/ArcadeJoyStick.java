package org.meteoroid.plugin.vd;

import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.util.AttributeSet;
import com.a.a.d.c;
import com.a.a.e.b;

public class ArcadeJoyStick
  extends AbstractRoundWidget
{
  public static final int CENTER = 0;
  public static final int DOWN = 2;
  public static final int EIGHT_DIR_CONTROL = 8;
  public static final int FOUR_DIR_CONTROL = 4;
  public static final int LEFT = 3;
  public static final int RIGHT = 4;
  public static final int UP = 1;
  private static final VirtualKey[] kX = new VirtualKey[5];
  private boolean kT = true;
  
  public ArcadeJoyStick() {}
  
  public final void a(AttributeSet paramAttributeSet, String paramString)
  {
    super.a(paramAttributeSet, paramString);
    this.kN = b.K(paramAttributeSet.getAttributeValue(paramString, "bitmap"));
  }
  
  public final void a(c paramC)
  {
    super.a(paramC);
    kX[0] = new VirtualKey();
    kX[0].lE = "RIGHT";
    kX[1] = new VirtualKey();
    kX[1].lE = "UP";
    kX[2] = new VirtualKey();
    kX[2].lE = "LEFT";
    kX[3] = new VirtualKey();
    kX[3].lE = "DOWN";
    kX[4] = kX[0];
    this.state = 0;
  }
  
  public final boolean bf()
  {
    return this.kN != null;
  }
  
  public final boolean h(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    double d = Math.sqrt(Math.pow(paramInt2 - this.centerX, 2.0D) + Math.pow(paramInt3 - this.centerY, 2.0D));
    Thread.yield();
    if ((d <= this.kU) && (d >= this.kV))
    {
      switch (paramInt1)
      {
      }
      do
      {
        do
        {
          return true;
          this.id = paramInt4;
        } while (this.id != paramInt4);
        float f = a(paramInt2, paramInt3);
        if ((f >= 45.0F) && (f < 135.0F)) {
          paramInt1 = 1;
        }
        for (;;)
        {
          this.state = paramInt1;
          VirtualKey localVirtualKey = kX[((int)((f + 45.0F) / 90.0F))];
          if (this.kW != localVirtualKey)
          {
            if ((this.kW != null) && (this.kW.state == 0))
            {
              this.kW.state = 1;
              VirtualKey.b(this.kW);
            }
            this.kW = localVirtualKey;
          }
          this.kW.state = 0;
          VirtualKey.b(this.kW);
          return true;
          if ((f >= 135.0F) && (f < 225.0F)) {
            paramInt1 = 3;
          } else if ((f >= 225.0F) && (f < 315.0F)) {
            paramInt1 = 2;
          } else if ((f >= 315.0F) || (f < 45.0F)) {
            paramInt1 = 4;
          } else {
            paramInt1 = 0;
          }
        }
      } while (this.id != paramInt4);
      release();
      return true;
    }
    if ((paramInt1 == 1) && (this.id == paramInt4)) {
      release();
    }
    return false;
  }
  
  public final void onDraw(Canvas paramCanvas)
  {
    if (this.delay > 0) {
      this.delay -= 1;
    }
    do
    {
      do
      {
        return;
        if (this.state == 0)
        {
          this.kQ = 0;
          this.kT = true;
        }
      } while (!this.kT);
      if ((this.kP > 0) && (this.state == 1))
      {
        this.kQ += 1;
        this.fy.setAlpha(255 - this.kQ * 255 / this.kP);
        if (this.kQ >= this.kP)
        {
          this.kQ = 0;
          this.kT = false;
        }
      }
    } while (!a(this.kN));
    paramCanvas.drawBitmap(this.kN[this.state], this.centerX - this.kN[this.state].getWidth() / 2, this.centerY - this.kN[this.state].getHeight() / 2, null);
  }
  
  public final void reset()
  {
    this.state = 0;
  }
  
  public final void setVisible(boolean paramBoolean)
  {
    this.kT = paramBoolean;
  }
}
