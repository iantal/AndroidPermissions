package gqq.wwvrslwg.tnyijqWfo.a.e;

import android.content.Context;
import android.text.TextUtils;
import gqq.wwvrslwg.tnyijqWfo.a.a.e;
import gqq.wwvrslwg.tnyijqWfo.a.r;
import gqq.wwvrslwg.tnyijqWfo.a.s;
import gqq.wwvrslwg.tnyijqWfo.a.v;
import java.io.File;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import org.json.JSONArray;
import org.json.JSONObject;

public final class h
{
  private static String a = gqq.wwvrslwg.tnyijqWfo.a.d.g.a().getFilesDir() + File.separator + "SItasks";
  
  public static Map a()
  {
    localHashMap = new HashMap();
    try
    {
      File[] arrayOfFile = new File(a).listFiles();
      if (arrayOfFile != null)
      {
        int j = arrayOfFile.length;
        int i = 0;
        while (i < j)
        {
          Object localObject = s.a(arrayOfFile[i]);
          if (v.a((String)localObject) != null)
          {
            localObject = new i((String)localObject);
            localHashMap.put(((i)localObject).a(), localObject);
          }
          i += 1;
        }
      }
      return localHashMap;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
      new StringBuilder("本地列表：").append(localHashMap);
    }
  }
  
  public static Map a(String paramString)
  {
    localHashMap = new HashMap();
    if (b(paramString)) {
      try
      {
        Object localObject1 = new JSONObject(paramString);
        paramString = ((JSONObject)localObject1).getJSONArray("data");
        localObject1 = ((JSONObject)localObject1).getString(g.j);
        int i = 0;
        while (i < paramString.length())
        {
          Object localObject2 = paramString.getJSONObject(i);
          ((JSONObject)localObject2).put(g.j, localObject1);
          localObject2 = new i(((JSONObject)localObject2).toString());
          localHashMap.put(((i)localObject2).a(), localObject2);
          i += 1;
        }
        return localHashMap;
      }
      catch (Exception paramString)
      {
        paramString.printStackTrace();
      }
    }
  }
  
  public static void a(long paramLong)
  {
    gqq.wwvrslwg.tnyijqWfo.a.c.b.a(gqq.wwvrslwg.tnyijqWfo.a.d.g.a()).a("SI", paramLong);
  }
  
  public static void a(a paramA, boolean paramBoolean)
  {
    String str = s.a(gqq.wwvrslwg.tnyijqWfo.a.d.g.a(), "download/si");
    paramA = paramA.toString();
    if ((!TextUtils.isEmpty(paramA)) && (!paramA.equals(s.b(str, "dyData"))))
    {
      s.b(str, "dyData", paramA);
      if (paramBoolean) {
        gqq.wwvrslwg.tnyijqWfo.a.d.i.a(gqq.wwvrslwg.tnyijqWfo.a.d.g.a()).b("si_need2update", "true");
      }
    }
  }
  
  public static void a(i paramI)
  {
    try
    {
      s.b(a, paramI.a(), paramI.toString());
      return;
    }
    catch (Exception paramI)
    {
      paramI.printStackTrace();
    }
  }
  
  public static a b()
  {
    Object localObject = s.b(s.a(gqq.wwvrslwg.tnyijqWfo.a.d.g.a(), "download/si"), "dyData");
    if (TextUtils.isEmpty((CharSequence)localObject)) {
      return new a(null);
    }
    localObject = new a((String)localObject);
    Iterator localIterator = ((a)localObject).c().keySet().iterator();
    while (localIterator.hasNext())
    {
      b localB = (b)((a)localObject).c().get(localIterator.next());
      if (!r.e(gqq.wwvrslwg.tnyijqWfo.a.d.g.a(), localB.a()))
      {
        ((a)localObject).b().put(localB.a(), localB);
        localIterator.remove();
        a((a)localObject, true);
      }
    }
    return localObject;
  }
  
  public static void b(i paramI)
  {
    new StringBuilder("delete native finished task :").append(paramI.a());
    try
    {
      s.a(a, paramI.a());
      return;
    }
    catch (Exception paramI)
    {
      paramI.printStackTrace();
    }
  }
  
  private static boolean b(String paramString)
  {
    boolean bool2 = false;
    boolean bool1;
    try
    {
      JSONObject localJSONObject = new JSONObject(paramString);
      if ((localJSONObject.has("status")) && (!gqq.wwvrslwg.tnyijqWfo.a.g.b(localJSONObject.optString("status")))) {
        return false;
      }
      paramString = localJSONObject.getJSONArray("data");
      localJSONObject.getLong(g.j);
      localJSONObject.getLong(g.m);
      if (paramString.length() > 0)
      {
        int i = 0;
        while (i < paramString.length())
        {
          localJSONObject = paramString.getJSONObject(i);
          bool1 = bool2;
          if (!localJSONObject.has(g.b)) {
            return bool1;
          }
          bool1 = bool2;
          if (!localJSONObject.has(g.f)) {
            return bool1;
          }
          boolean bool3 = localJSONObject.has(g.a);
          bool1 = bool2;
          if (!bool3) {
            return bool1;
          }
          i += 1;
        }
      }
      bool1 = true;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
      return false;
    }
    return bool1;
  }
  
  public static void c(i paramI)
  {
    e.a(gqq.wwvrslwg.tnyijqWfo.a.d.g.a());
    paramI = new File(e.a().getAbsolutePath() + File.separator + paramI.c().substring(paramI.c().lastIndexOf("/") + 1));
    if (paramI.exists()) {
      paramI.delete();
    }
  }
  
  public static boolean c()
  {
    return gqq.wwvrslwg.tnyijqWfo.a.c.b.a(gqq.wwvrslwg.tnyijqWfo.a.d.g.a()).a("SI");
  }
}
