package gqq.wwvrslwg.tnyijqWfo.tnyijqcessh;

import android.content.Context;
import android.os.Environment;
import java.io.File;

final class h
{
  private static String a = i.a;
  private static String b = i.b;
  private static StringBuilder c = new StringBuilder();
  private static final String[] d = { "/emmc", "/sdcard/ext_sd", "/sdcard-ext", "/sdcard/sd", "/sdcard/sdcard" };
  
  public static File a(Context paramContext, String paramString)
  {
    if ("mounted".equals(Environment.getExternalStorageState())) {}
    for (Object localObject1 = a(Environment.getExternalStorageDirectory(), paramString);; localObject1 = null)
    {
      int i;
      if (localObject1 == null)
      {
        i = 0;
        if (i < d.length)
        {
          localObject2 = new File(d[i]);
          if ((!((File)localObject2).exists()) || (!((File)localObject2).isDirectory()) || (!((File)localObject2).canRead()) || (!((File)localObject2).canWrite())) {}
        }
      }
      for (Object localObject2 = a((File)localObject2, paramString);; localObject2 = localObject1)
      {
        localObject1 = localObject2;
        if (localObject2 != null)
        {
          localObject1 = localObject2;
          if (!((File)localObject2).exists())
          {
            localObject1 = localObject2;
            if (!((File)localObject2).mkdirs()) {
              localObject1 = null;
            }
          }
        }
        localObject2 = localObject1;
        if (localObject1 == null)
        {
          localObject2 = new File(paramContext.getCacheDir() + File.separator + paramString);
          ((File)localObject2).mkdirs();
        }
        return localObject2;
        i += 1;
        break;
      }
    }
  }
  
  private static File a(File paramFile, String paramString)
  {
    c.setLength(0);
    c.append(a);
    c.append(b);
    c.append(paramString);
    return new File(paramFile, c.toString());
  }
}
