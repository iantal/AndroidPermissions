package gqq.wwvrslwg.tnyijqWfo.tnyijqcessh.a.a;

import android.content.Context;
import gqq.wwvrslwg.tnyijqWfo.a.d.f;
import gqq.wwvrslwg.tnyijqWfo.a.s;
import java.util.Calendar;
import java.util.Enumeration;
import java.util.Properties;

public final class a
{
  private static a a = null;
  private Context b = null;
  private f c = null;
  
  private a(Context paramContext)
  {
    this.b = paramContext;
    this.c = f.a(paramContext);
  }
  
  public static a a(Context paramContext)
  {
    if (a == null) {
      a = new a(paramContext.getApplicationContext());
    }
    if (a.b == null) {
      a.b = paramContext;
    }
    return a;
  }
  
  private void a()
  {
    try
    {
      Properties localProperties = s.a(s.d(this.c.d()) + f.j);
      if (localProperties == null) {
        return;
      }
      Enumeration localEnumeration = localProperties.propertyNames();
      while (localEnumeration.hasMoreElements())
      {
        String str = (String)localEnumeration.nextElement();
        long l1 = Long.parseLong(localProperties.getProperty(str, "0"));
        long l2 = Calendar.getInstance().getTimeInMillis();
        if ((l2 - l1 >= 36000000L) || (l2 < l1)) {
          localProperties.remove(str);
        }
      }
      s.a(localException, this.c.d(), f.j);
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
      return;
    }
  }
  
  public final String a(String paramString1, String paramString2)
  {
    Properties localProperties = s.a(s.d(this.c.d()) + f.j);
    if (localProperties == null) {
      return paramString2;
    }
    return localProperties.getProperty(paramString1, paramString2);
  }
  
  public final boolean a(String paramString)
  {
    new StringBuilder("更新ad:").append(paramString).append("的访问时间");
    if (paramString != null) {
      try
      {
        if (paramString.equals("")) {
          return false;
        }
        a();
        String str = System.currentTimeMillis();
        s.a(this.c.d(), f.j, paramString, str);
        return true;
      }
      catch (Exception paramString) {}
    }
    return false;
  }
  
  public final boolean a(String paramString, long paramLong)
  {
    boolean bool = false;
    long l1 = Long.parseLong(a(paramString, "0"));
    long l2 = System.currentTimeMillis();
    if (l2 - l1 <= 0L) {
      a(paramString);
    }
    for (;;)
    {
      new StringBuilder("检测").append(paramString).append("的间隔有效性：").append(bool);
      return bool;
      if (l2 - l1 >= paramLong) {
        bool = true;
      }
    }
  }
}
