package gqq.wwvrslwg.tnyijqWfo.tnyijqcessh;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

public final class d
{
  private static int a = 81920;
  
  public d() {}
  
  private static void a(ZipFile paramZipFile, ZipEntry paramZipEntry, String paramString)
  {
    paramZipFile = new BufferedInputStream(paramZipFile.getInputStream(paramZipEntry));
    byte[] arrayOfByte = new byte[a];
    paramZipEntry = new BufferedOutputStream(new FileOutputStream(new File(paramString + paramZipEntry)), a);
    for (;;)
    {
      int i = paramZipFile.read(arrayOfByte, 0, a);
      if (i == -1) {
        break;
      }
      paramZipEntry.write(arrayOfByte, 0, i);
    }
    paramZipEntry.flush();
    paramZipEntry.close();
    paramZipFile.close();
  }
  
  public final void a(String paramString1, String paramString2)
  {
    paramString1 = new ZipFile(new File(paramString1));
    String str1 = paramString2 + System.getProperty("file.separator");
    new File(str1).mkdir();
    Enumeration localEnumeration = paramString1.entries();
    label224:
    while (localEnumeration.hasMoreElements())
    {
      ZipEntry localZipEntry = (ZipEntry)localEnumeration.nextElement();
      String str2 = localZipEntry.getName();
      File localFile = new File(str1, str2);
      localFile.getParentFile().mkdirs();
      if (!localZipEntry.isDirectory()) {
        a(paramString1, localZipEntry, str1);
      }
      for (;;)
      {
        if (!str2.endsWith(".zip")) {
          break label224;
        }
        a(localFile.getAbsolutePath(), paramString2 + System.getProperty("file.separator") + localFile.getAbsolutePath() + System.getProperty("file.separator"));
        break;
        if (localZipEntry.isDirectory()) {
          new File(str1 + localZipEntry.getName()).mkdirs();
        }
      }
    }
  }
}
