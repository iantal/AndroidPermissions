package mm.api.http;

import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import mm.api.io.IOUtils;
import org.apache.http.NameValuePair;

public class HttpUtils
{
  private static final int CONNECT_TIMEOUT = 10000;
  private static final int READ_TIMEOUT = 15000;
  
  public HttpUtils() {}
  
  /* Error */
  public static byte[] sendGet(String paramString, NameValuePair... paramVarArgs)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: new 18	java/net/URL
    //   6: dup
    //   7: aload_0
    //   8: invokespecial 21	java/net/URL:<init>	(Ljava/lang/String;)V
    //   11: invokevirtual 25	java/net/URL:openConnection	()Ljava/net/URLConnection;
    //   14: checkcast 27	java/net/HttpURLConnection
    //   17: astore_0
    //   18: aload_0
    //   19: ldc 29
    //   21: invokevirtual 32	java/net/HttpURLConnection:setRequestMethod	(Ljava/lang/String;)V
    //   24: aload_0
    //   25: sipush 10000
    //   28: invokevirtual 36	java/net/HttpURLConnection:setConnectTimeout	(I)V
    //   31: aload_0
    //   32: sipush 15000
    //   35: invokevirtual 39	java/net/HttpURLConnection:setReadTimeout	(I)V
    //   38: aload_1
    //   39: arraylength
    //   40: istore_3
    //   41: iconst_0
    //   42: istore_2
    //   43: iload_2
    //   44: iload_3
    //   45: if_icmplt +29 -> 74
    //   48: aload_0
    //   49: invokevirtual 43	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
    //   52: astore_1
    //   53: aload_1
    //   54: invokestatic 49	mm/api/io/IOUtils:toByteArray	(Ljava/io/InputStream;)[B
    //   57: astore 4
    //   59: aload_1
    //   60: invokestatic 53	mm/api/io/IOUtils:closeQuietly	(Ljava/io/InputStream;)V
    //   63: aload_0
    //   64: ifnull +7 -> 71
    //   67: aload_0
    //   68: invokevirtual 56	java/net/HttpURLConnection:disconnect	()V
    //   71: aload 4
    //   73: areturn
    //   74: aload_1
    //   75: iload_2
    //   76: aaload
    //   77: astore 4
    //   79: aload_0
    //   80: aload 4
    //   82: invokeinterface 62 1 0
    //   87: aload 4
    //   89: invokeinterface 65 1 0
    //   94: invokevirtual 69	java/net/HttpURLConnection:setRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   97: iload_2
    //   98: iconst_1
    //   99: iadd
    //   100: istore_2
    //   101: goto -58 -> 43
    //   104: astore_0
    //   105: aconst_null
    //   106: astore_1
    //   107: aload_1
    //   108: invokestatic 53	mm/api/io/IOUtils:closeQuietly	(Ljava/io/InputStream;)V
    //   111: aload 4
    //   113: ifnull +8 -> 121
    //   116: aload 4
    //   118: invokevirtual 56	java/net/HttpURLConnection:disconnect	()V
    //   121: aload_0
    //   122: athrow
    //   123: astore 5
    //   125: aconst_null
    //   126: astore_1
    //   127: aload_0
    //   128: astore 4
    //   130: aload 5
    //   132: astore_0
    //   133: goto -26 -> 107
    //   136: astore 5
    //   138: aload_0
    //   139: astore 4
    //   141: aload 5
    //   143: astore_0
    //   144: goto -37 -> 107
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	147	0	paramString	String
    //   0	147	1	paramVarArgs	NameValuePair[]
    //   42	59	2	i	int
    //   40	6	3	j	int
    //   1	139	4	localObject1	Object
    //   123	8	5	localObject2	Object
    //   136	6	5	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   3	18	104	finally
    //   18	41	123	finally
    //   48	53	123	finally
    //   79	97	123	finally
    //   53	59	136	finally
  }
  
  public static byte[] sendPost(String paramString, byte[] paramArrayOfByte, NameValuePair... paramVarArgs)
  {
    Object localObject3 = null;
    localObject2 = null;
    for (;;)
    {
      try
      {
        localObject1 = (HttpURLConnection)new URL(paramString).openConnection();
      }
      finally
      {
        int j;
        int i;
        paramVarArgs = null;
        paramString = null;
        localObject1 = localObject2;
        IOUtils.closeQuietly(paramVarArgs);
        IOUtils.closeQuietly((InputStream)localObject1);
        if (paramString != null) {
          paramString.disconnect();
        }
      }
      try
      {
        ((HttpURLConnection)localObject1).setRequestMethod("POST");
        ((HttpURLConnection)localObject1).setDoOutput(true);
        ((HttpURLConnection)localObject1).setConnectTimeout(10000);
        ((HttpURLConnection)localObject1).setReadTimeout(15000);
        ((HttpURLConnection)localObject1).setRequestProperty("Content-length", paramArrayOfByte.length);
        j = paramVarArgs.length;
        i = 0;
        if (i >= j)
        {
          paramVarArgs = ((HttpURLConnection)localObject1).getOutputStream();
          paramString = localObject3;
        }
      }
      finally
      {
        paramString = (String)localObject1;
        paramVarArgs = null;
        localObject1 = localObject2;
        continue;
      }
      try
      {
        paramVarArgs.write(paramArrayOfByte);
        paramString = localObject3;
        paramVarArgs.flush();
        paramString = localObject3;
        paramArrayOfByte = ((HttpURLConnection)localObject1).getInputStream();
        paramString = paramArrayOfByte;
        localObject2 = IOUtils.toByteArray(paramArrayOfByte);
        IOUtils.closeQuietly(paramVarArgs);
        IOUtils.closeQuietly(paramArrayOfByte);
        if (localObject1 != null) {
          ((HttpURLConnection)localObject1).disconnect();
        }
        return localObject2;
      }
      finally
      {
        localObject2 = localObject1;
        localObject1 = paramString;
        paramString = (String)localObject2;
        continue;
      }
      paramString = paramVarArgs[i];
      ((HttpURLConnection)localObject1).setRequestProperty(paramString.getName(), paramString.getValue());
      i += 1;
    }
  }
}
