package mm.api.http;

import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import mm.api.Command;
import mm.api.android.MMApi;
import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

public class HttpCommand
  extends TimerTask
  implements Runnable, Command
{
  private byte[] data;
  private int delay;
  private final List headers = new ArrayList();
  private final Timer timer = new Timer();
  private int tryCount;
  private final String url;
  
  public HttpCommand(String paramString)
  {
    this.url = paramString;
  }
  
  private void processHttp()
  {
    try
    {
      if (this.data == null)
      {
        if (MMApi.isDebug()) {
          System.out.println("sendGet url=" + this.url + ", headers=" + this.headers);
        }
        HttpUtils.sendGet(this.url, (NameValuePair[])this.headers.toArray(new NameValuePair[0]));
        return;
      }
      if (MMApi.isDebug()) {
        System.out.println("sendPost url=" + this.url + ", headers=" + this.headers + ", data=" + this.data.length);
      }
      HttpUtils.sendPost(this.url, this.data, (NameValuePair[])this.headers.toArray(new NameValuePair[0]));
      return;
    }
    catch (IOException localIOException)
    {
      int i = this.tryCount;
      this.tryCount = (i + 1);
      if (i < 3)
      {
        processHttp();
        return;
      }
      localIOException.printStackTrace();
    }
  }
  
  public void addHeader(String paramString1, String paramString2)
  {
    if ((paramString1 == null) || (paramString2 == null)) {
      return;
    }
    this.headers.add(new BasicNameValuePair(paramString1, paramString2));
  }
  
  public void executeCommand()
  {
    if (this.delay < 1)
    {
      Thread localThread = new Thread(this);
      localThread.setDaemon(true);
      localThread.start();
      return;
    }
    this.timer.schedule(this, this.delay);
  }
  
  public void run()
  {
    processHttp();
  }
  
  public void setData(byte[] paramArrayOfByte)
  {
    this.data = paramArrayOfByte;
  }
  
  public void setDelay(int paramInt)
  {
    this.delay = paramInt;
  }
}
