package oicq.wlogin_sdk.request;

import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.text.TextPaint;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.TextView;
import android.widget.Toast;
import java.util.Timer;
import java.util.TimerTask;
import oicq.wlogin_sdk.tools.ErrMsg;

public class alert_thread
  extends Thread
{
  private Context context;
  private ErrMsg errMsg;
  Runnable myRunnable = new Runnable()
  {
    private void execToast(final Toast paramAnonymousToast, final int paramAnonymousInt)
    {
      new Timer().schedule(new TimerTask()
      {
        public void run()
        {
          alert_thread.1.this.initToast(paramAnonymousToast, paramAnonymousInt + 1);
        }
      }, 30L);
    }
    
    private void initToast(Toast paramAnonymousToast, int paramAnonymousInt)
    {
      if (paramAnonymousInt > 5) {
        return;
      }
      paramAnonymousToast.show();
      execToast(paramAnonymousToast, paramAnonymousInt);
    }
    
    public void run()
    {
      if ((alert_thread.this.context != null) && (alert_thread.this.errMsg != null))
      {
        LinearLayout localLinearLayout = new LinearLayout(alert_thread.this.context);
        localLinearLayout.setOrientation(1);
        localLinearLayout.setBackgroundColor(-7829368);
        localLinearLayout.setLayoutParams(new LinearLayout.LayoutParams(-2, -2));
        Object localObject = new TextView(alert_thread.this.context);
        ((TextView)localObject).getPaint().setFakeBoldText(true);
        ((TextView)localObject).setText(alert_thread.this.errMsg.getTitle());
        localLinearLayout.addView((View)localObject, 0, new LinearLayout.LayoutParams(-1, -2));
        localObject = new TextView(alert_thread.this.context);
        ((TextView)localObject).setText(alert_thread.this.errMsg.getMessage());
        localLinearLayout.addView((View)localObject, 1, new LinearLayout.LayoutParams(-1, -2));
        localObject = new Toast(alert_thread.this.context);
        ((Toast)localObject).setGravity(17, 0, 0);
        ((Toast)localObject).setDuration(1);
        ((Toast)localObject).setView(localLinearLayout);
        initToast((Toast)localObject, 0);
      }
    }
  };
  
  public alert_thread(Context paramContext)
  {
    this.context = paramContext;
  }
  
  public alert_thread(Context paramContext, ErrMsg paramErrMsg)
  {
    this.context = paramContext;
    setErrMsg(paramErrMsg);
  }
  
  public ErrMsg getErrMsg()
  {
    ErrMsg localErrMsg = null;
    if (this.errMsg != null) {}
    try
    {
      localErrMsg = (ErrMsg)this.errMsg.clone();
      return localErrMsg;
    }
    catch (CloneNotSupportedException localCloneNotSupportedException)
    {
      localCloneNotSupportedException.printStackTrace();
    }
    return null;
  }
  
  public void run()
  {
    new Handler(Looper.getMainLooper()).post(this.myRunnable);
  }
  
  public void setErrMsg(ErrMsg paramErrMsg)
  {
    if (paramErrMsg != null) {
      try
      {
        this.errMsg = ((ErrMsg)paramErrMsg.clone());
        return;
      }
      catch (CloneNotSupportedException paramErrMsg)
      {
        paramErrMsg.printStackTrace();
        this.errMsg = null;
        return;
      }
    }
    this.errMsg = null;
  }
}
