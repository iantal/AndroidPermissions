package oicq.wlogin_sdk.request;

import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.net.HttpURLConnection;
import oicq.wlogin_sdk.tools.util;

public class http_connect_ontime
  implements Runnable
{
  private HttpURLConnection conn;
  private boolean ret = false;
  
  public http_connect_ontime(HttpURLConnection paramHttpURLConnection)
  {
    this.conn = paramHttpURLConnection;
  }
  
  public static boolean connect_ontime(HttpURLConnection paramHttpURLConnection, long paramLong)
  {
    try
    {
      paramHttpURLConnection = new http_connect_ontime(paramHttpURLConnection);
      localObject = new Thread(paramHttpURLConnection);
      ((Thread)localObject).start();
      ((Thread)localObject).join(paramLong);
      boolean bool = paramHttpURLConnection.get();
      return bool;
    }
    catch (Exception paramHttpURLConnection)
    {
      Object localObject = new StringWriter();
      PrintWriter localPrintWriter = new PrintWriter((Writer)localObject, true);
      paramHttpURLConnection.printStackTrace(localPrintWriter);
      localPrintWriter.flush();
      ((StringWriter)localObject).flush();
      util.LOGW("exception", ((StringWriter)localObject).toString());
    }
    return false;
  }
  
  public boolean get()
  {
    try
    {
      boolean bool = this.ret;
      return bool;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public void run()
  {
    try
    {
      this.conn.connect();
      this.ret = true;
      return;
    }
    catch (Exception localException)
    {
      StringWriter localStringWriter = new StringWriter();
      PrintWriter localPrintWriter = new PrintWriter(localStringWriter, true);
      localException.printStackTrace(localPrintWriter);
      localPrintWriter.flush();
      localStringWriter.flush();
      util.LOGW("exception", localStringWriter.toString());
    }
  }
  
  public void set(boolean paramBoolean)
  {
    try
    {
      this.ret = paramBoolean;
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
}
