package oicq.wlogin_sdk.request;

import android.content.Context;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import oicq.wlogin_sdk.code2d.close_code;
import oicq.wlogin_sdk.code2d.code2d_base;
import oicq.wlogin_sdk.code2d.code2d_req_status;
import oicq.wlogin_sdk.code2d.verify_code;
import oicq.wlogin_sdk.name_op.name_bind;
import oicq.wlogin_sdk.name_op.name_query;
import oicq.wlogin_sdk.name_op.name_req_status;
import oicq.wlogin_sdk.name_op.name_unbind;
import oicq.wlogin_sdk.oidb.name_get_uin;
import oicq.wlogin_sdk.register.reg_request;
import oicq.wlogin_sdk.register.reg_request_get_account;
import oicq.wlogin_sdk.register.reg_request_query_account_available;
import oicq.wlogin_sdk.register.reg_request_query_msg_status;
import oicq.wlogin_sdk.register.reg_request_resend_msg;
import oicq.wlogin_sdk.register.reg_request_submit_checkimg;
import oicq.wlogin_sdk.register.reg_request_submit_mobile;
import oicq.wlogin_sdk.register.reg_request_submit_msg_chk;
import oicq.wlogin_sdk.register.reg_status;
import oicq.wlogin_sdk.report.report_t1;
import oicq.wlogin_sdk.report.report_t2;
import oicq.wlogin_sdk.sharemem.WloginLoginInfo;
import oicq.wlogin_sdk.sharemem.WloginRemoteData;
import oicq.wlogin_sdk.sharemem.WloginSigInfo;
import oicq.wlogin_sdk.sharemem.WloginSimpleInfo;
import oicq.wlogin_sdk.tlv_type.tlv_t105;
import oicq.wlogin_sdk.tlv_type.tlv_t129;
import oicq.wlogin_sdk.tlv_type.tlv_t150;
import oicq.wlogin_sdk.tlv_type.tlv_t165;
import oicq.wlogin_sdk.tools.ErrMsg;
import oicq.wlogin_sdk.tools.MD5;
import oicq.wlogin_sdk.tools.cryptor;
import oicq.wlogin_sdk.tools.util;

public class WtloginHelper
  extends WtloginListener
{
  private request_change_sig mChangeSig = new request_change_sig(this.mG);
  private int mChangeSigMiscBitmap = 628;
  private request_app_signature mCheckApk = new request_app_signature(this.mG);
  private request_check_sms mCheckSms = new request_check_sms(this.mG);
  private request_checkimage mCheckimage = new request_checkimage(this.mG);
  private Context mContext = null;
  private request_delay mDelay = new request_delay(this.mG);
  private request_flush_sms mFlushSms = new request_flush_sms(this.mG);
  private request_flushimage mFlushimage = new request_flushimage(this.mG);
  private request_global mG = new request_global(null);
  private request_getuin mGetuin = new request_getuin(this.mG);
  private HelperHandler mHelperHandler = newHelperHandler(this.mG, this);
  private WtloginListener mListener = null;
  private int mMainSigMap = 996082;
  private name_req_status mNameReqStatus = new name_req_status();
  private long mOpenAppid = 715019303L;
  private int mOpenMainSigMap = 16576;
  private request_ping mPing = new request_ping(this.mG);
  private reg_status mRegStatus = new reg_status();
  private request_fast_login mRemoteLogin = new request_fast_login(this.mG);
  private request_report_error mReportError = new request_report_error(this.mG);
  private int mSubSigMap = 66560;
  private int mTGTGTMiscBitmap = 892;
  private request_TGTGT mTgtgt = new request_TGTGT(this.mG);
  private request_transport mTransport = new request_transport(this.mG);
  
  public WtloginHelper(Context paramContext)
  {
    this.mContext = paramContext;
    this.mG.set_context(paramContext);
    RequestInit(0);
    util.LOGD("WtloginHelper create end");
  }
  
  public WtloginHelper(Context paramContext, int paramInt)
  {
    this.mContext = paramContext;
    this.mG.set_context(paramContext, paramInt);
    RequestInit(0);
    util.LOGD("WtloginHelper create end");
  }
  
  private Boolean ClearUserLoginDataInMem(String paramString, long paramLong)
  {
    int i = 1;
    if ((paramString == null) || (paramString.length() <= 0)) {
      return Boolean.valueOf(true);
    }
    for (;;)
    {
      try
      {
        if (!util.check_uin_account(paramString).booleanValue())
        {
          Long localLong = this.mG.get_account(paramString);
          if (localLong == null)
          {
            i = 0;
            paramString = localLong;
            if (i == 1) {
              this.mG.clear_sig(paramString, Long.valueOf(paramLong));
            }
            return Boolean.valueOf(true);
          }
          this.mG.clear_account(paramString);
          paramString = localLong;
          continue;
        }
        l = Long.parseLong(paramString);
      }
      finally {}
      long l;
      paramString = Long.valueOf(l);
    }
  }
  
  private WloginSigInfo FindUserSig(long paramLong1, long paramLong2)
  {
    return this.mG.get_siginfo(paramLong1, paramLong2);
  }
  
  private WloginSigInfo FindUserSig(String paramString, long paramLong)
  {
    int i = 0;
    if (!util.check_uin_account(paramString).booleanValue())
    {
      Long localLong = this.mG.get_account(paramString);
      paramString = localLong;
      if (localLong != null)
      {
        i = 1;
        paramString = localLong;
      }
    }
    while (i == 0)
    {
      return null;
      paramString = Long.valueOf(Long.parseLong(paramString));
      i = 1;
    }
    return this.mG.get_siginfo(paramString.longValue(), paramLong);
  }
  
  private int RequestInit(int paramInt)
  {
    try
    {
      paramInt = util.get_saved_network_type(this.mContext);
      String str2 = Build.VERSION.RELEASE;
      String str1 = str2;
      if (str2 == null) {
        str1 = "";
      }
      this.mG.init();
      util.LOGI("WtloginHelper init ok: android version:" + str1 + " saved_network_type:" + paramInt + " network_type:" + this.mG._network_type + " release time:" + util.get_release_time(), this.mContext, "", 1);
      return 0;
    }
    finally {}
  }
  
  private int RequestReport(int paramInt, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, long paramLong1, long paramLong2)
  {
    if (paramInt == 0)
    {
      new HelperThread(this, this.mHelperHandler, paramArrayOfByte1, paramArrayOfByte2, paramLong1, paramLong2).RunReq(util.ASYN_REPORT);
      return 64535;
    }
    if (this.mG.is_use_msf_transport()) {}
    try
    {
      Thread.sleep(10000L);
      synchronized (this.mTransport)
      {
        paramInt = this.mTransport.make_request(paramLong1, null, paramArrayOfByte1, paramArrayOfByte2, paramLong2);
        this.mG.close_transport_connect();
        return paramInt;
      }
    }
    catch (InterruptedException localInterruptedException)
    {
      for (;;) {}
    }
  }
  
  private int RequestReportError(int paramInt1, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, long paramLong1, long paramLong2, int paramInt2)
  {
    if (paramInt1 == 0)
    {
      new HelperThread(this, this.mHelperHandler, paramArrayOfByte1, paramArrayOfByte2, paramLong1, paramLong2, paramInt2).RunReq(util.ASYN_REPORT_ERROR);
      return 64535;
    }
    return this.mReportError.make_request(paramLong1, null, paramArrayOfByte1, paramArrayOfByte2, paramLong2, paramInt2);
  }
  
  private HelperHandler newHelperHandler(request_global paramRequest_global, WtloginHelper paramWtloginHelper)
  {
    if (Looper.myLooper() == null) {
      return null;
    }
    return new HelperHandler(paramRequest_global, paramWtloginHelper);
  }
  
  public int BindMobileByUin(String paramString1, long paramLong, String paramString2, String paramString3)
  {
    Object localObject1 = new WloginSimpleInfo();
    if (!GetBasicUserInfo(paramString1, (WloginSimpleInfo)localObject1).booleanValue()) {
      return 64533;
    }
    long l = ((WloginSimpleInfo)localObject1)._uin;
    Object localObject2 = FindUserSig(l, paramLong);
    if (localObject2 == null) {
      return 64532;
    }
    localObject1 = new name_bind();
    TransReqContext localTransReqContext = new TransReqContext();
    localTransReqContext.set_name_func_req();
    localTransReqContext.set_subcmd(((name_bind)localObject1).get_cmd());
    localObject2 = ((WloginSigInfo)localObject2)._sKey;
    paramString2 = paramString2.getBytes();
    paramString3 = paramString3.getBytes();
    byte[][] arrayOfByte = (byte[][])Array.newInstance(Byte.TYPE, new int[] { 0, 0 });
    localTransReqContext._body = ((name_bind)localObject1).get_request(l, paramLong, (byte[])localObject2, paramString2, paramString3, new int[0], arrayOfByte);
    return RequestTransport(0, 1, paramString1, paramLong, ((name_bind)localObject1)._role, localTransReqContext);
  }
  
  public void CancelRequest()
  {
    this.mG._canceled = 1;
  }
  
  public int CheckPictureAndGetSt(String paramString, byte[] paramArrayOfByte, WUserSigInfo paramWUserSigInfo, int paramInt)
  {
    return CheckPictureAndGetSt(paramString, paramArrayOfByte, paramWUserSigInfo, null, paramInt);
  }
  
  public int CheckPictureAndGetSt(String paramString, byte[] paramArrayOfByte, WUserSigInfo paramWUserSigInfo, byte[][] paramArrayOfByte1, int paramInt)
  {
    if (paramInt == 0)
    {
      new HelperThread(this, this.mHelperHandler, paramString, paramArrayOfByte, paramWUserSigInfo, paramArrayOfByte1).RunReq(util.ASYN_CHECK_IMAGE);
      return 64535;
    }
    paramInt = 0;
    util.LOGI("user:" + paramString + " CheckPictureAndGetSt ...", this.mG._context, paramString, 0);
    for (;;)
    {
      try
      {
        i = this.mCheckimage.make_request(paramArrayOfByte);
        if (i != 0)
        {
          paramInt = i;
          if (paramInt != 0) {
            continue;
          }
          this.mG._rt1.commit_t2(this.mG._uin, this.mG._name, util.format_ret_code(paramInt, this.mG._last_err_msg.getMessage()), paramInt);
          if ((paramWUserSigInfo._userStSig != null) && (paramWUserSigInfo._userStSig.length != 0)) {
            RequestReport(0, paramWUserSigInfo._userStSig, paramWUserSigInfo._userSt_Key, this.mG._uin, this.mG._appid);
          }
          if ((this.mG._t150 != null) && (this.mG._t150.get_bitmap() != 0)) {
            RequestReportError(0, paramWUserSigInfo._userStSig, paramWUserSigInfo._userSt_Key, this.mG._uin, this.mG._appid, 1);
          }
          new delete_expire_log(this.mG._context).start();
          this.mG.close_connect();
          util.LOGI("user:" + paramString + " CheckPictureAndGetSt ret=" + paramInt, this.mG._context, this.mG._uin, 1);
          return paramInt;
        }
        try
        {
          if (!util.check_uin_account(paramString).booleanValue())
          {
            localObject = this.mG.get_account(paramString);
            paramArrayOfByte = (byte[])localObject;
            if (localObject == null) {
              continue;
            }
            paramInt = 1;
            paramArrayOfByte = (byte[])localObject;
            continue;
          }
          paramArrayOfByte = Long.valueOf(Long.parseLong(paramString));
          paramInt = 1;
          continue;
        }
        finally {}
        this.mG._name = paramString;
        this.mG._uin = paramArrayOfByte.longValue();
        localObject = this.mG.get_siginfo(paramArrayOfByte.longValue(), this.mG._appid);
        if (localObject == null) {
          continue;
        }
        if (this.mG._tmp_pwd_type != 0)
        {
          paramWUserSigInfo.get_clone((WloginSigInfo)localObject);
          if ((this.mG._sub_appid_list == null) || (paramArrayOfByte1 == null) || (this.mG._sub_appid_list.length * 2 != paramArrayOfByte1.length)) {
            continue;
          }
          paramInt = 0;
          if (this.mG._sub_appid_list == null) {
            continue;
          }
          if (paramInt < this.mG._sub_appid_list.length) {
            continue;
          }
          continue;
        }
        paramWUserSigInfo.get_clone((WloginSigInfo)localObject);
        continue;
      }
      finally
      {
        int i;
        Object localObject;
        byte[] arrayOfByte;
        continue;
        paramInt += 1;
        continue;
      }
      throw paramString;
      localObject = this.mG.get_siginfo(paramArrayOfByte.longValue(), this.mG._sub_appid_list[paramInt]);
      if (localObject != null)
      {
        paramArrayOfByte1[(paramInt * 2)] = ((byte[])((WloginSigInfo)localObject)._userSt_Key.clone());
        paramArrayOfByte1[(paramInt * 2 + 1)] = ((byte[])((WloginSigInfo)localObject)._userStSig.clone());
        continue;
        if ((paramWUserSigInfo._in_ksid != null) && (paramWUserSigInfo._in_ksid.length > 0))
        {
          localObject = (byte[])paramWUserSigInfo._in_ksid.clone();
          if (this.mG._tmp_pwd_type != 0)
          {
            i = this.mTgtgt.make_request(this.mG._appid, 1, this.mG._uin, 0, this.mG._ip_addr, this.mG._tmp_pwd, this.mTGTGTMiscBitmap, this.mSubSigMap, this.mG._sub_appid_list, this.mG._main_sigmap, this.mG._sub_appid, 1, 0, 1, 102400, 1, (byte[])localObject);
            if (i != 64536) {
              this.mG.clear_tmp_pwd();
            }
            paramInt = i;
            if (i != 0) {
              continue;
            }
            localObject = this.mG.get_siginfo(paramArrayOfByte.longValue(), this.mG._appid);
            if (localObject != null) {
              continue;
            }
            paramInt = 64532;
          }
        }
        else
        {
          localObject = this.mG._ksid;
          continue;
        }
        arrayOfByte = new byte[4];
        util.int64_to_buf32(arrayOfByte, 0, System.currentTimeMillis() / 1000L + request_global._l_init_time);
        i = this.mTgtgt.make_request(this.mG._appid, 1, this.mG._uin, 0, this.mG._ip_addr, arrayOfByte, 0, this.mG._tmp_pwd, this.mTGTGTMiscBitmap, this.mSubSigMap, this.mG._sub_appid_list, this.mG._main_sigmap, this.mG._sub_appid, 1, 0, 1, 102400, 1, (byte[])localObject);
        continue;
        if (this.mG._tmp_pwd_type != 0)
        {
          paramWUserSigInfo.get_clone((WloginSigInfo)localObject);
          if ((this.mG._sub_appid_list == null) || (paramArrayOfByte1 == null) || (this.mG._sub_appid_list.length * 2 != paramArrayOfByte1.length)) {
            continue;
          }
          paramInt = 0;
          if (this.mG._sub_appid_list == null) {
            continue;
          }
          if (paramInt >= this.mG._sub_appid_list.length) {
            continue;
          }
        }
        else
        {
          paramWUserSigInfo.get_clone((WloginSigInfo)localObject);
          continue;
        }
        localObject = this.mG.get_siginfo(paramArrayOfByte.longValue(), this.mG._sub_appid_list[paramInt]);
        if (localObject == null) {
          continue;
        }
        paramArrayOfByte1[(paramInt * 2)] = ((byte[])((WloginSigInfo)localObject)._userSt_Key.clone());
        paramArrayOfByte1[(paramInt * 2 + 1)] = ((byte[])((WloginSigInfo)localObject)._userStSig.clone());
        continue;
        this.mG._rt1.commit_t2(this.mG._uin, this.mG._name, util.format_ret_code(paramInt, this.mG._last_err_msg.getMessage()), paramInt);
        RequestReportError(0, paramWUserSigInfo._userStSig, paramWUserSigInfo._userSt_Key, this.mG._uin, this.mG._appid, 0);
        continue;
        if (paramInt != 0) {
          continue;
        }
        paramInt = 64533;
        continue;
        paramInt = 0;
        continue;
      }
      paramInt += 1;
      continue;
      paramInt = 0;
    }
  }
  
  public int CheckSMSGetSt(String paramString, byte[] paramArrayOfByte, WUserSigInfo paramWUserSigInfo, int paramInt)
  {
    return CheckSMSGetSt(paramString, paramArrayOfByte, paramWUserSigInfo, null, paramInt);
  }
  
  public int CheckSMSGetSt(String paramString, byte[] paramArrayOfByte, WUserSigInfo paramWUserSigInfo, byte[][] paramArrayOfByte1, int paramInt)
  {
    if (paramInt == 0)
    {
      new HelperThread(this, this.mHelperHandler, paramString, paramArrayOfByte, paramWUserSigInfo, paramArrayOfByte1).RunReq(util.ASYN_CHECK_SMS);
      return 64535;
    }
    paramInt = 0;
    for (;;)
    {
      try
      {
        int i = this.mCheckSms.make_request(paramArrayOfByte);
        if (i != 0)
        {
          paramInt = i;
          this.mG.close_connect();
          return paramInt;
        }
        if (!util.check_uin_account(paramString).booleanValue())
        {
          paramArrayOfByte = this.mG.get_account(paramString);
          paramString = paramArrayOfByte;
          if (paramArrayOfByte != null)
          {
            paramInt = 1;
            paramString = paramArrayOfByte;
          }
        }
        else
        {
          paramString = Long.valueOf(Long.parseLong(paramString));
          paramInt = 1;
        }
      }
      finally {}
      this.mG._uin = paramString.longValue();
      paramArrayOfByte = this.mG.get_siginfo(paramString.longValue(), this.mG._appid);
      if (paramArrayOfByte != null)
      {
        if (this.mG._tmp_pwd_type != 0)
        {
          paramWUserSigInfo.get_clone(paramArrayOfByte);
          if ((this.mG._sub_appid_list == null) || (paramArrayOfByte1 == null) || (this.mG._sub_appid_list.length * 2 != paramArrayOfByte1.length)) {
            break label330;
          }
          paramInt = 0;
          if (this.mG._sub_appid_list == null) {
            break label330;
          }
          if (paramInt >= this.mG._sub_appid_list.length) {
            break label330;
          }
        }
        else
        {
          paramWUserSigInfo.get_clone(paramArrayOfByte);
          continue;
        }
        paramArrayOfByte = this.mG.get_siginfo(paramString.longValue(), this.mG._sub_appid_list[paramInt]);
        if (paramArrayOfByte != null)
        {
          paramArrayOfByte1[(paramInt * 2)] = ((byte[])paramArrayOfByte._userSt_Key.clone());
          paramArrayOfByte1[(paramInt * 2 + 1)] = ((byte[])paramArrayOfByte._userStSig.clone());
        }
        paramInt += 1;
        continue;
      }
      else
      {
        paramInt = 64532;
        continue;
        if (paramInt != 0) {
          continue;
        }
        paramInt = 64533;
        continue;
      }
      label330:
      paramInt = 0;
    }
  }
  
  public Boolean ClearUserLoginData(String paramString, long paramLong)
  {
    util.LOGI("user:" + paramString + " ClearUserLoginData ...", this.mG._context, paramString, 1);
    this.mG.remove_last_login_info(paramString);
    return ClearUserLoginDataInMem(paramString, paramLong);
  }
  
  public Boolean ClearUserLoginDataTest(String paramString)
  {
    int i = 1;
    if ((paramString == null) || (paramString.length() <= 0)) {
      return Boolean.valueOf(true);
    }
    for (;;)
    {
      try
      {
        if (!util.check_uin_account(paramString).booleanValue())
        {
          Long localLong = this.mG.get_account(paramString);
          if (localLong == null)
          {
            i = 0;
            paramString = localLong;
            if (i == 1) {
              this.mG.clear_sig_test(paramString);
            }
            return Boolean.valueOf(true);
          }
          this.mG.clear_account(paramString);
          paramString = localLong;
          continue;
        }
        l = Long.parseLong(paramString);
      }
      finally {}
      long l;
      paramString = Long.valueOf(l);
    }
  }
  
  public int CloseCode(String paramString, long paramLong, byte[] paramArrayOfByte, int paramInt, byte[][] paramArrayOfByte1)
  {
    Object localObject = new WloginSimpleInfo();
    if (!GetBasicUserInfo(paramString, (WloginSimpleInfo)localObject).booleanValue()) {
      return 64533;
    }
    long l = ((WloginSimpleInfo)localObject)._uin;
    localObject = FindUserSig(l, paramLong);
    if (localObject == null) {
      return 64532;
    }
    close_code localClose_code = new close_code();
    TransReqContext localTransReqContext = new TransReqContext();
    localTransReqContext.set_code2d_func_req();
    localTransReqContext.set_subcmd(localClose_code.get_cmd());
    localTransReqContext._body = localClose_code.get_request(l, paramLong, paramArrayOfByte, ((WloginSigInfo)localObject)._TGT, this.mG._IMEI, paramInt, paramArrayOfByte1);
    return RequestTransport(0, 1, paramString, paramLong, localClose_code._role, localTransReqContext);
  }
  
  public byte[] GetA1ByAccount(String paramString, long paramLong)
  {
    Object localObject2;
    Object localObject1;
    if (!util.check_uin_account(paramString).booleanValue())
    {
      localObject2 = this.mG.get_account(paramString);
      localObject1 = localObject2;
      if (localObject2 != null) {
        break label110;
      }
      localObject1 = null;
    }
    while ((localObject1 == null) || (((WloginSigInfo)localObject1)._en_A1 == null) || (((WloginSigInfo)localObject1)._en_A1.length <= 0))
    {
      util.LOGI("userAccount:" + paramString + " dwAppid:" + paramLong + " GetA1ByAccount return: null", this.mG._context, paramString, 1);
      return null;
      localObject1 = Long.valueOf(Long.parseLong(paramString));
      label110:
      localObject2 = this.mG.get_siginfo(((Long)localObject1).longValue(), paramLong);
      localObject1 = localObject2;
      if (localObject2 == null) {
        localObject1 = localObject2;
      }
    }
    util.LOGI("userAccount:" + paramString + " dwAppid:" + paramLong + " GetA1ByAccount return: not null", this.mG._context, paramString, 1);
    return (byte[])((WloginSigInfo)localObject1)._en_A1.clone();
  }
  
  public byte[] GetA2A2KeyBuf(String paramString, long paramLong)
  {
    WUserSigInfo localWUserSigInfo = GetLocalSig(paramString, paramLong);
    if ((localWUserSigInfo._A2 == null) || (localWUserSigInfo._A2.length <= 0) || (localWUserSigInfo._A2_Key == null) || (localWUserSigInfo._A2_Key.length <= 0)) {}
    while ((request_global._IMEI_KEY == null) || (request_global._IMEI_KEY.length <= 0)) {
      return null;
    }
    byte[] arrayOfByte = new byte[paramString.getBytes().length + 2 + 8 + 2 + localWUserSigInfo._A2.length + 2 + localWUserSigInfo._A2_Key.length];
    util.int16_to_buf(arrayOfByte, 0, paramString.getBytes().length);
    System.arraycopy(paramString.getBytes(), 0, arrayOfByte, 0 + 2, paramString.getBytes().length);
    int i = paramString.getBytes().length + 2;
    util.int64_to_buf(arrayOfByte, i, paramLong);
    i += 8;
    util.int16_to_buf(arrayOfByte, i, localWUserSigInfo._A2.length);
    i += 2;
    System.arraycopy(localWUserSigInfo._A2, 0, arrayOfByte, i, localWUserSigInfo._A2.length);
    i += localWUserSigInfo._A2.length;
    util.int16_to_buf(arrayOfByte, i, localWUserSigInfo._A2_Key.length);
    i += 2;
    System.arraycopy(localWUserSigInfo._A2_Key, 0, arrayOfByte, i, localWUserSigInfo._A2_Key.length);
    i = localWUserSigInfo._A2_Key.length;
    return cryptor.encrypt(arrayOfByte, 0, arrayOfByte.length, request_global._IMEI_KEY);
  }
  
  public List<WloginLoginInfo> GetAllLoginInfo()
  {
    return this.mG.get_all_logined_account();
  }
  
  public long GetAppidFromUrl(String paramString)
  {
    if (paramString == null) {}
    int i;
    do
    {
      return -1L;
      i = paramString.indexOf("f=");
    } while ((i == -1) || (i + 2 >= paramString.length()));
    i += 2;
    String str = "";
    for (;;)
    {
      if (i >= paramString.length()) {}
      do
      {
        try
        {
          long l = Long.parseLong(str);
          return l;
        }
        catch (Exception paramString) {}
      } while (paramString.charAt(i) == '&');
      str = str + paramString.charAt(i);
      i += 1;
    }
    return -1L;
  }
  
  public Boolean GetBasicUserInfo(String paramString, WloginSimpleInfo paramWloginSimpleInfo)
  {
    int i = 1;
    int j;
    if (!util.check_uin_account(paramString).booleanValue())
    {
      Long localLong = this.mG.get_account(paramString);
      paramString = localLong;
      if (localLong == null)
      {
        i = 0;
        paramString = localLong;
      }
      j = i;
      if (i == 1)
      {
        paramString = this.mG.get_simpleinfo(paramString.longValue());
        if (paramString != null) {
          break label88;
        }
        j = 0;
      }
      label62:
      if (j != 1) {
        break label173;
      }
    }
    label88:
    label173:
    for (boolean bool = true;; bool = false)
    {
      return Boolean.valueOf(bool);
      paramString = Long.valueOf(Long.parseLong(paramString));
      break;
      util.LOGD(getClass().getName() + "found:" + paramString._uin);
      paramWloginSimpleInfo.get_clone(new WloginSimpleInfo(paramString._uin, paramString._face, paramString._age, paramString._gander, paramString._nick, paramString._img_type, paramString._img_format, paramString._img_url));
      j = i;
      break label62;
    }
  }
  
  public ErrMsg GetLastErrMsg()
  {
    if (this.mG._last_err_msg != null) {
      try
      {
        ErrMsg localErrMsg = (ErrMsg)this.mG._last_err_msg.clone();
        return localErrMsg;
      }
      catch (CloneNotSupportedException localCloneNotSupportedException)
      {
        StringWriter localStringWriter = new StringWriter();
        PrintWriter localPrintWriter = new PrintWriter(localStringWriter, true);
        localCloneNotSupportedException.printStackTrace(localPrintWriter);
        localPrintWriter.flush();
        localStringWriter.flush();
        util.LOGW("exception", localStringWriter.toString());
        return new ErrMsg();
      }
    }
    return new ErrMsg();
  }
  
  public WloginLastLoginInfo GetLastLoginInfo()
  {
    Object localObject1 = null;
    Object localObject2 = this.mG.get_all_logined_account();
    if (localObject2 == null) {
      return null;
    }
    Iterator localIterator = ((List)localObject2).iterator();
    for (;;)
    {
      if (!localIterator.hasNext())
      {
        if (localObject1 == null) {
          break;
        }
        if ((localObject1.mAccount == null) || (localObject1.mAccount.length() <= 0)) {
          break label101;
        }
        return new WloginLastLoginInfo(localObject1.mAccount);
      }
      localObject2 = (WloginLoginInfo)localIterator.next();
      if (localObject1 == null) {
        localObject1 = localObject2;
      } else if (((WloginLoginInfo)localObject2).mCreateTime > localObject1.mCreateTime) {
        localObject1 = localObject2;
      }
    }
    label101:
    return new WloginLastLoginInfo(new Long(localObject1.mUin).toString());
  }
  
  public WUserSigInfo GetLocalSig(String paramString, long paramLong)
  {
    if (!util.check_uin_account(paramString).booleanValue())
    {
      util.LOGD("GetLocalSig:" + paramString + ":name");
      localObject = this.mG.get_account(paramString);
      paramString = (String)localObject;
      if (localObject != null) {
        break label90;
      }
    }
    label90:
    do
    {
      return null;
      util.LOGD("GetLocalSig:" + paramString + ":num");
      paramString = Long.valueOf(Long.parseLong(paramString));
      paramString = this.mG.get_siginfo(paramString.longValue(), paramLong);
    } while (paramString == null);
    Object localObject = new WUserSigInfo();
    ((WUserSigInfo)localObject).get_clone(paramString);
    return localObject;
  }
  
  public int GetMobileByUin(String paramString, long paramLong)
  {
    Object localObject = new WloginSimpleInfo();
    if (!GetBasicUserInfo(paramString, (WloginSimpleInfo)localObject).booleanValue()) {
      return 64533;
    }
    long l = ((WloginSimpleInfo)localObject)._uin;
    localObject = FindUserSig(l, paramLong);
    if (localObject == null) {
      return 64532;
    }
    name_query localName_query = new name_query();
    TransReqContext localTransReqContext = new TransReqContext();
    localTransReqContext.set_name_func_req();
    localTransReqContext.set_subcmd(localName_query.get_cmd());
    localTransReqContext._body = localName_query.get_request(l, paramLong, ((WloginSigInfo)localObject)._sKey, new int[0]);
    return RequestTransport(0, 1, paramString, paramLong, localName_query._role, localTransReqContext);
  }
  
  public int GetOpenKeyWithPasswd(String paramString1, long paramLong, String paramString2, WUserSigInfo paramWUserSigInfo, int paramInt)
  {
    return GetStWithPasswd(paramString1, this.mOpenAppid, this.mOpenMainSigMap, paramLong, null, false, paramString2, paramWUserSigInfo, null, paramInt);
  }
  
  public int GetOpenKeyWithoutPasswd(String paramString, long paramLong1, long paramLong2, WUserSigInfo paramWUserSigInfo, int paramInt)
  {
    return GetStWithoutPasswd(paramString, this.mOpenAppid, this.mOpenAppid, -1L, this.mOpenMainSigMap, paramLong2, null, paramWUserSigInfo, null, null, paramInt);
  }
  
  public byte[] GetPictureData(String paramString)
  {
    try
    {
      paramString = this.mG._t105.get_pic();
      return paramString;
    }
    finally {}
  }
  
  public byte[] GetPicturePrompt(String paramString)
  {
    try
    {
      paramString = this.mG._t165.get_data();
      return paramString;
    }
    finally {}
  }
  
  public List<WloginLoginInfo> GetRemoteLoginedInfo(long paramLong, long[] paramArrayOfLong)
  {
    return this.mG.get_all_logined_account_remote(paramLong, paramArrayOfLong);
  }
  
  public int GetRemoteStWithoutPasswd(String paramString, long paramLong1, long paramLong2, long paramLong3, int paramInt1, long paramLong4, long[] paramArrayOfLong, WUserSigInfo paramWUserSigInfo, byte[][] paramArrayOfByte1, byte[][] paramArrayOfByte2, int paramInt2)
  {
    j = 0;
    new Long(0L);
    if (paramInt2 == 0)
    {
      new HelperThread(this, this.mHelperHandler, paramString, paramLong1, paramLong2, paramLong3, paramInt1, paramLong4, paramArrayOfLong, paramWUserSigInfo, paramArrayOfByte1, paramArrayOfByte2).RunReq(util.ASYN_GET_REMOTE_ST_WITHOUT_PWD);
      return 64535;
    }
    util.LOGI("wtlogin login with GetRemoteStWithoutPasswd:user:" + paramString + " dwSrcAppid:" + paramLong1 + " dwDstAppid:" + paramLong2 + " dwDstAppPri:" + paramLong3 + " dwMainSigMap:" + paramInt1 + " dwSubDstAppid:" + paramLong4 + " ...", this.mG._context, paramString, 0);
    int i;
    if (this.mG.get_ping_end_flag() != 0) {
      i = j;
    }
    try
    {
      paramInt2 = util.get_saved_network_type(this.mContext);
      i = j;
      this.mG._network_type = util.get_network_type(this.mContext);
      i = j;
      if (paramInt2 != this.mG._network_type)
      {
        i = j;
        util.set_net_retry_type(this.mContext, 0);
        i = j;
        util.save_network_type(this.mContext, this.mG._network_type);
      }
      i = j;
      this.mG._apn = util.get_apn_string(this.mContext).getBytes();
      i = j;
      this.mG._name = paramString;
      i = j;
      this.mG._uin = 0L;
      i = j;
      this.mG._appid = paramLong2;
      i = j;
      this.mG._sub_appid = paramLong4;
      i = j;
      this.mG._main_sigmap = paramInt1;
      i = j;
      this.mG._sub_appid_list = null;
      i = j;
      this.mG._encrypt_a1 = new byte[0];
      if (paramArrayOfLong != null)
      {
        i = j;
        this.mG._sub_appid_list = ((long[])paramArrayOfLong.clone());
      }
      i = j;
      this.mG._rt1.add_t2(new report_t2("exchg", new String(this.mG._sim_operator_name), System.currentTimeMillis(), paramLong1, paramLong4, paramArrayOfLong));
      localArrayList = null;
      Object localObject1 = localArrayList;
      if (paramArrayOfByte2 != null)
      {
        localObject1 = localArrayList;
        i = j;
        if (paramArrayOfByte2.length > 0) {
          localObject1 = paramArrayOfByte2[0];
        }
      }
      i = j;
      paramArrayOfByte2 = util.get_apk_id(this.mG._context);
      i = j;
      localArrayList = new ArrayList();
      i = j;
      paramInt2 = this.mG.get_siginfo_remote(paramString, this.mG._uin, paramLong1, paramLong2, 1L, util.SSO_VERSION, this.mMainSigMap, this.mSubSigMap, this.mChangeSigMiscBitmap, paramArrayOfLong, paramArrayOfByte2, util.SSO_VERSION, paramLong2, 1L, util.get_apk_v(this.mG._context, new String(paramArrayOfByte2)), util.getPkgPublicKeyFromApkName(this.mG._context, new String(paramArrayOfByte2)), (byte[])localObject1, localArrayList);
      if (paramInt2 != 0) {
        break label1707;
      }
      if (localArrayList != null) {
        break label896;
      }
      paramInt2 = 64517;
    }
    finally
    {
      for (;;)
      {
        ArrayList localArrayList;
        label585:
        continue;
        continue;
        paramInt2 = 64517;
        continue;
        j += 1;
      }
    }
    if ((1 == 0) || (paramInt2 == 0)) {}
    for (;;)
    {
      try
      {
        this.mG._rt1.commit_t2(this.mG._uin, this.mG._name, util.format_ret_code(paramInt2, this.mG._last_err_msg.getMessage()), paramInt2);
        if ((paramWUserSigInfo._userStSig != null) && (paramWUserSigInfo._userStSig.length != 0)) {
          RequestReport(0, paramWUserSigInfo._userStSig, paramWUserSigInfo._userSt_Key, this.mG._uin, this.mG._appid);
        }
        if ((this.mG._t150 != null) && (this.mG._t150.get_bitmap() != 0)) {
          RequestReportError(0, paramWUserSigInfo._userStSig, paramWUserSigInfo._userSt_Key, this.mG._uin, this.mG._appid, 1);
        }
        new delete_expire_log(this.mG._context).start();
        this.mG.close_connect();
        util.LOGI("wtlogin login with GetRemoteStWithoutPasswd:user:" + paramString + " dwSrcAppid:" + paramLong1 + " dwDstAppid:" + paramLong2 + " dwDstAppPri:" + paramLong3 + " dwMainSigMap:" + paramInt1 + " dwSubDstAppid:" + paramLong4 + " ret=" + paramInt2, this.mG._context, this.mG._uin, 1);
        return paramInt2;
      }
      finally
      {
        label896:
        Object localObject2;
        Object localObject3;
        continue;
      }
      try
      {
        Thread.currentThread();
        Thread.sleep(20L);
      }
      catch (Exception localException) {}
      break;
      j = 3;
      if (paramArrayOfLong != null)
      {
        i = paramInt2;
        j = 3 + paramArrayOfLong.length;
      }
      i = paramInt2;
      if (localArrayList.size() < j)
      {
        paramInt2 = 64517;
        break label585;
      }
      i = paramInt2;
      if (!util.check_uin_account(paramString).booleanValue())
      {
        i = paramInt2;
        localObject2 = (WloginRemoteData)localArrayList.get(0);
        if (localObject2 == null)
        {
          paramInt2 = 64517;
          break label585;
        }
        i = paramInt2;
        paramArrayOfByte2 = ((WloginRemoteData)localObject2).getLongData();
        i = paramInt2;
        localObject2 = ((WloginRemoteData)localObject2).getByteData();
        if ((paramArrayOfByte2 == null) || (localObject2 == null)) {
          continue;
        }
        i = paramInt2;
        if (paramArrayOfByte2.size() != 1) {
          continue;
        }
        i = paramInt2;
        if (((List)localObject2).size() != 1) {
          continue;
        }
        i = paramInt2;
        paramArrayOfByte2 = (Long)paramArrayOfByte2.get(0);
        i = paramInt2;
        this.mG.put_account(paramString, paramArrayOfByte2);
        i = paramInt2;
        localObject2 = (WloginRemoteData)localArrayList.get(1);
        if (localObject2 != null) {
          continue;
        }
        paramInt2 = 64517;
        break label585;
      }
      i = paramInt2;
      paramArrayOfByte2 = Long.valueOf(Long.parseLong(paramString));
      continue;
      i = paramInt2;
      localObject2 = WloginSimpleInfo.getWloginSimpleInfo((WloginRemoteData)localObject2);
      if (localObject2 == null)
      {
        paramInt2 = 64517;
        break label585;
      }
      i = paramInt2;
      localObject3 = (WloginRemoteData)localArrayList.get(2);
      if (localObject3 == null)
      {
        paramInt2 = 64517;
        break label585;
      }
      i = paramInt2;
      localObject3 = WloginSigInfo.getWloginSigInfo((WloginRemoteData)localObject3);
      if (localObject3 == null)
      {
        paramInt2 = 64517;
        break label585;
      }
      i = paramInt2;
      this.mG.put_siginfo(paramArrayOfByte2.longValue(), paramLong2, ((WloginSigInfo)localObject3)._app_pri, ((WloginSigInfo)localObject3)._create_time, ((WloginSigInfo)localObject3)._expire_time, ((WloginSigInfo)localObject3)._A2_expire_time, ((WloginSimpleInfo)localObject2)._face, ((WloginSimpleInfo)localObject2)._age, ((WloginSimpleInfo)localObject2)._gander, ((WloginSimpleInfo)localObject2)._nick, ((WloginSimpleInfo)localObject2).getReserveData(), ((WloginSigInfo)localObject3)._TGT, ((WloginSigInfo)localObject3)._TGTKey, ((WloginSigInfo)localObject3)._userStSig, ((WloginSigInfo)localObject3)._userSt_Key, ((WloginSigInfo)localObject3)._userStWebSig, ((WloginSigInfo)localObject3)._userA5, ((WloginSigInfo)localObject3)._userA8, ((WloginSigInfo)localObject3)._lsKey, ((WloginSigInfo)localObject3)._sKey, ((WloginSigInfo)localObject3)._userSig64, ((WloginSigInfo)localObject3)._openid, ((WloginSigInfo)localObject3)._openkey, ((WloginSigInfo)localObject3).getReserveData(), null);
      j = 3;
      i = paramInt2;
      i = localArrayList.size();
      if (j >= i)
      {
        i = paramInt2;
        paramInt2 = localArrayList.size();
        if (j >= paramInt2) {
          continue;
        }
        paramInt2 = 64517;
        break label585;
      }
      i = paramInt2;
      localObject2 = WloginSigInfo.getWloginSigInfo((WloginRemoteData)localArrayList.get(j));
      if (localObject2 == null)
      {
        i = 64517;
      }
      else
      {
        i = paramInt2;
        this.mG.put_siginfo(paramArrayOfByte2.longValue(), paramLong2, ((WloginSigInfo)localObject2)._create_time, ((WloginSigInfo)localObject2)._expire_time, ((WloginSigInfo)localObject2)._userStSig, ((WloginSigInfo)localObject2)._userSt_Key);
        j += 1;
        continue;
        localObject2 = this.mG.get_siginfo(paramArrayOfByte2.longValue(), paramLong2);
        if (localObject2 == null)
        {
          paramInt2 = 64532;
          break label585;
        }
        paramWUserSigInfo.get_clone((WloginSigInfo)localObject2);
        paramInt2 = i;
        if (paramArrayOfLong == null) {
          break label585;
        }
        paramInt2 = i;
        if (paramArrayOfByte1 == null) {
          break label585;
        }
        paramInt2 = i;
        if (paramArrayOfLong.length * 2 != paramArrayOfByte1.length) {
          break label585;
        }
        j = 0;
        paramInt2 = i;
        if (paramArrayOfLong == null) {
          break label585;
        }
        paramInt2 = i;
        if (j >= paramArrayOfLong.length) {
          break label585;
        }
        localObject2 = this.mG.get_siginfo(paramArrayOfByte2.longValue(), paramArrayOfLong[j]);
        if (localObject2 == null) {
          continue;
        }
        paramArrayOfByte1[(j * 2)] = ((byte[])((WloginSigInfo)localObject2)._userSt_Key.clone());
        paramArrayOfByte1[(j * 2 + 1)] = ((byte[])((WloginSigInfo)localObject2)._userStSig.clone());
        continue;
        this.mG._rt1.commit_t2(this.mG._uin, this.mG._name, util.format_ret_code(paramInt2, this.mG._last_err_msg.getMessage()), paramInt2);
        RequestReportError(0, paramWUserSigInfo._userStSig, paramWUserSigInfo._userSt_Key, this.mG._uin, this.mG._appid, 0);
      }
    }
    throw paramString;
  }
  
  public int GetSMSTime(SMSTime paramSMSTime)
  {
    paramSMSTime._timeout = this.mG._t129.get_timeout();
    paramSMSTime._nexttime = this.mG._t129.get_nexttime();
    return 0;
  }
  
  /* Error */
  public int GetStWithPasswd(String paramString1, long paramLong1, int paramInt1, long paramLong2, long[] paramArrayOfLong, boolean paramBoolean, String paramString2, WUserSigInfo paramWUserSigInfo, byte[][] paramArrayOfByte, int paramInt2)
  {
    // Byte code:
    //   0: iload 4
    //   2: sipush 192
    //   5: ior
    //   6: istore 15
    //   8: iload 12
    //   10: ifne +42 -> 52
    //   13: new 9	oicq/wlogin_sdk/request/WtloginHelper$HelperThread
    //   16: dup
    //   17: aload_0
    //   18: aload_0
    //   19: aload_0
    //   20: getfield 140	oicq/wlogin_sdk/request/WtloginHelper:mHelperHandler	Loicq/wlogin_sdk/request/WtloginHelper$HelperHandler;
    //   23: aload_1
    //   24: lload_2
    //   25: iload 15
    //   27: lload 5
    //   29: aload 7
    //   31: iload 8
    //   33: aload 9
    //   35: aload 10
    //   37: aload 11
    //   39: invokespecial 1033	oicq/wlogin_sdk/request/WtloginHelper$HelperThread:<init>	(Loicq/wlogin_sdk/request/WtloginHelper;Loicq/wlogin_sdk/request/WtloginHelper;Landroid/os/Handler;Ljava/lang/String;JIJ[JZLjava/lang/String;Loicq/wlogin_sdk/request/WUserSigInfo;[[B)V
    //   42: getstatic 1036	oicq/wlogin_sdk/tools/util:ASYN_GET_ST_WITH_PWD	I
    //   45: invokevirtual 303	oicq/wlogin_sdk/request/WtloginHelper$HelperThread:RunReq	(I)V
    //   48: sipush 64535
    //   51: ireturn
    //   52: iconst_0
    //   53: istore 13
    //   55: iconst_0
    //   56: istore 4
    //   58: iconst_1
    //   59: istore 14
    //   61: new 258	java/lang/StringBuilder
    //   64: dup
    //   65: ldc_w 1038
    //   68: invokespecial 262	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   71: aload_1
    //   72: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   75: ldc_w 617
    //   78: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   81: lload_2
    //   82: invokevirtual 509	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   85: ldc_w 859
    //   88: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   91: iload 15
    //   93: invokevirtual 271	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   96: ldc_w 861
    //   99: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   102: lload 5
    //   104: invokevirtual 509	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   107: ldc_w 863
    //   110: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   113: invokevirtual 285	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   116: aload_0
    //   117: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   120: getfield 444	oicq/wlogin_sdk/request/request_global:_context	Landroid/content/Context;
    //   123: aload_1
    //   124: iconst_0
    //   125: invokestatic 289	oicq/wlogin_sdk/tools/util:LOGI	(Ljava/lang/String;Landroid/content/Context;Ljava/lang/String;I)V
    //   128: aload 9
    //   130: astore 17
    //   132: aload 9
    //   134: ifnull +27 -> 161
    //   137: aload 9
    //   139: astore 17
    //   141: aload 9
    //   143: invokevirtual 197	java/lang/String:length	()I
    //   146: bipush 16
    //   148: if_icmple +13 -> 161
    //   151: aload 9
    //   153: iconst_0
    //   154: bipush 16
    //   156: invokevirtual 1042	java/lang/String:substring	(II)Ljava/lang/String;
    //   159: astore 17
    //   161: aload_0
    //   162: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   165: invokevirtual 866	oicq/wlogin_sdk/request/request_global:get_ping_end_flag	()I
    //   168: ifeq +604 -> 772
    //   171: aload_0
    //   172: monitorenter
    //   173: iload 13
    //   175: istore 12
    //   177: aload_0
    //   178: getfield 142	oicq/wlogin_sdk/request/WtloginHelper:mContext	Landroid/content/Context;
    //   181: invokestatic 245	oicq/wlogin_sdk/tools/util:get_saved_network_type	(Landroid/content/Context;)I
    //   184: istore 16
    //   186: iload 13
    //   188: istore 12
    //   190: aload_0
    //   191: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   194: aload_0
    //   195: getfield 142	oicq/wlogin_sdk/request/WtloginHelper:mContext	Landroid/content/Context;
    //   198: invokestatic 869	oicq/wlogin_sdk/tools/util:get_network_type	(Landroid/content/Context;)I
    //   201: putfield 276	oicq/wlogin_sdk/request/request_global:_network_type	I
    //   204: iload 13
    //   206: istore 12
    //   208: iload 16
    //   210: aload_0
    //   211: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   214: getfield 276	oicq/wlogin_sdk/request/request_global:_network_type	I
    //   217: if_icmpeq +33 -> 250
    //   220: iload 13
    //   222: istore 12
    //   224: aload_0
    //   225: getfield 142	oicq/wlogin_sdk/request/WtloginHelper:mContext	Landroid/content/Context;
    //   228: iconst_0
    //   229: invokestatic 872	oicq/wlogin_sdk/tools/util:set_net_retry_type	(Landroid/content/Context;I)V
    //   232: iload 13
    //   234: istore 12
    //   236: aload_0
    //   237: getfield 142	oicq/wlogin_sdk/request/WtloginHelper:mContext	Landroid/content/Context;
    //   240: aload_0
    //   241: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   244: getfield 276	oicq/wlogin_sdk/request/request_global:_network_type	I
    //   247: invokestatic 875	oicq/wlogin_sdk/tools/util:save_network_type	(Landroid/content/Context;I)V
    //   250: iload 13
    //   252: istore 12
    //   254: aload_0
    //   255: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   258: aload_0
    //   259: getfield 142	oicq/wlogin_sdk/request/WtloginHelper:mContext	Landroid/content/Context;
    //   262: invokestatic 879	oicq/wlogin_sdk/tools/util:get_apn_string	(Landroid/content/Context;)Ljava/lang/String;
    //   265: invokevirtual 394	java/lang/String:getBytes	()[B
    //   268: putfield 882	oicq/wlogin_sdk/request/request_global:_apn	[B
    //   271: iload 13
    //   273: istore 12
    //   275: aload_0
    //   276: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   279: lload_2
    //   280: putfield 485	oicq/wlogin_sdk/request/request_global:_appid	J
    //   283: iload 13
    //   285: istore 12
    //   287: aload_0
    //   288: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   291: aload_1
    //   292: putfield 455	oicq/wlogin_sdk/request/request_global:_name	Ljava/lang/String;
    //   295: iload 13
    //   297: istore 12
    //   299: aload_0
    //   300: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   303: lconst_0
    //   304: putfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   307: iload 13
    //   309: istore 12
    //   311: aload_0
    //   312: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   315: aconst_null
    //   316: putfield 520	oicq/wlogin_sdk/request/request_global:_sub_appid_list	[J
    //   319: iload 13
    //   321: istore 12
    //   323: aload_0
    //   324: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   327: lload 5
    //   329: putfield 542	oicq/wlogin_sdk/request/request_global:_sub_appid	J
    //   332: iload 13
    //   334: istore 12
    //   336: aload_0
    //   337: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   340: iload 15
    //   342: putfield 539	oicq/wlogin_sdk/request/request_global:_main_sigmap	I
    //   345: iload 13
    //   347: istore 12
    //   349: aload_0
    //   350: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   353: iconst_0
    //   354: putfield 1045	oicq/wlogin_sdk/request/request_global:_getuin_need_image	I
    //   357: iload 13
    //   359: istore 12
    //   361: aload_0
    //   362: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   365: aload_1
    //   366: putfield 1048	oicq/wlogin_sdk/request/request_global:_last_login_account	Ljava/lang/String;
    //   369: iload 13
    //   371: istore 12
    //   373: aload_0
    //   374: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   377: invokevirtual 1051	oicq/wlogin_sdk/request/request_global:clear_sig_session	()V
    //   380: aload 7
    //   382: ifnull +22 -> 404
    //   385: iload 13
    //   387: istore 12
    //   389: aload_0
    //   390: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   393: aload 7
    //   395: invokevirtual 887	[J:clone	()Ljava/lang/Object;
    //   398: checkcast 886	[J
    //   401: putfield 520	oicq/wlogin_sdk/request/request_global:_sub_appid_list	[J
    //   404: iload 13
    //   406: istore 12
    //   408: aload_0
    //   409: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   412: getfield 451	oicq/wlogin_sdk/request/request_global:_rt1	Loicq/wlogin_sdk/report/report_t1;
    //   415: new 889	oicq/wlogin_sdk/report/report_t2
    //   418: dup
    //   419: ldc_w 1053
    //   422: new 193	java/lang/String
    //   425: dup
    //   426: aload_0
    //   427: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   430: getfield 894	oicq/wlogin_sdk/request/request_global:_sim_operator_name	[B
    //   433: invokespecial 897	java/lang/String:<init>	([B)V
    //   436: invokestatic 557	java/lang/System:currentTimeMillis	()J
    //   439: lload_2
    //   440: lload 5
    //   442: aload 7
    //   444: invokespecial 900	oicq/wlogin_sdk/report/report_t2:<init>	(Ljava/lang/String;Ljava/lang/String;JJJ[J)V
    //   447: invokevirtual 904	oicq/wlogin_sdk/report/report_t1:add_t2	(Loicq/wlogin_sdk/report/report_t2;)V
    //   450: iload 13
    //   452: istore 12
    //   454: aload_0
    //   455: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   458: getfield 1056	oicq/wlogin_sdk/request/request_global:_init_time	[B
    //   461: ifnonnull +329 -> 790
    //   464: iload 13
    //   466: istore 12
    //   468: aload_0
    //   469: getfield 74	oicq/wlogin_sdk/request/WtloginHelper:mPing	Loicq/wlogin_sdk/request/request_ping;
    //   472: lconst_0
    //   473: lload_2
    //   474: invokevirtual 1059	oicq/wlogin_sdk/request/request_ping:make_request	(JJ)I
    //   477: istore 4
    //   479: new 258	java/lang/StringBuilder
    //   482: dup
    //   483: ldc_w 1061
    //   486: invokespecial 262	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   489: iload 4
    //   491: invokevirtual 271	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   494: invokevirtual 285	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   497: invokestatic 185	oicq/wlogin_sdk/tools/util:LOGD	(Ljava/lang/String;)V
    //   500: iload 4
    //   502: ifeq +1401 -> 1903
    //   505: iload 4
    //   507: ifne +1321 -> 1828
    //   510: aload_0
    //   511: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   514: getfield 451	oicq/wlogin_sdk/request/request_global:_rt1	Loicq/wlogin_sdk/report/report_t1;
    //   517: aload_0
    //   518: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   521: getfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   524: aload_0
    //   525: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   528: getfield 455	oicq/wlogin_sdk/request/request_global:_name	Ljava/lang/String;
    //   531: iload 4
    //   533: aload_0
    //   534: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   537: getfield 459	oicq/wlogin_sdk/request/request_global:_last_err_msg	Loicq/wlogin_sdk/tools/ErrMsg;
    //   540: invokevirtual 464	oicq/wlogin_sdk/tools/ErrMsg:getMessage	()Ljava/lang/String;
    //   543: invokestatic 468	oicq/wlogin_sdk/tools/util:format_ret_code	(ILjava/lang/String;)I
    //   546: iload 4
    //   548: invokevirtual 474	oicq/wlogin_sdk/report/report_t1:commit_t2	(JLjava/lang/String;II)V
    //   551: aload 10
    //   553: getfield 479	oicq/wlogin_sdk/request/WUserSigInfo:_userStSig	[B
    //   556: ifnull +42 -> 598
    //   559: aload 10
    //   561: getfield 479	oicq/wlogin_sdk/request/WUserSigInfo:_userStSig	[B
    //   564: arraylength
    //   565: ifeq +33 -> 598
    //   568: aload_0
    //   569: iconst_0
    //   570: aload 10
    //   572: getfield 479	oicq/wlogin_sdk/request/WUserSigInfo:_userStSig	[B
    //   575: aload 10
    //   577: getfield 482	oicq/wlogin_sdk/request/WUserSigInfo:_userSt_Key	[B
    //   580: aload_0
    //   581: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   584: getfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   587: aload_0
    //   588: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   591: getfield 485	oicq/wlogin_sdk/request/request_global:_appid	J
    //   594: invokespecial 342	oicq/wlogin_sdk/request/WtloginHelper:RequestReport	(I[B[BJJ)I
    //   597: pop
    //   598: aload_0
    //   599: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   602: getfield 489	oicq/wlogin_sdk/request/request_global:_t150	Loicq/wlogin_sdk/tlv_type/tlv_t150;
    //   605: ifnull +47 -> 652
    //   608: aload_0
    //   609: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   612: getfield 489	oicq/wlogin_sdk/request/request_global:_t150	Loicq/wlogin_sdk/tlv_type/tlv_t150;
    //   615: invokevirtual 494	oicq/wlogin_sdk/tlv_type/tlv_t150:get_bitmap	()I
    //   618: ifeq +34 -> 652
    //   621: aload_0
    //   622: iconst_0
    //   623: aload 10
    //   625: getfield 479	oicq/wlogin_sdk/request/WUserSigInfo:_userStSig	[B
    //   628: aload 10
    //   630: getfield 482	oicq/wlogin_sdk/request/WUserSigInfo:_userSt_Key	[B
    //   633: aload_0
    //   634: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   637: getfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   640: aload_0
    //   641: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   644: getfield 485	oicq/wlogin_sdk/request/request_global:_appid	J
    //   647: iconst_1
    //   648: invokespecial 346	oicq/wlogin_sdk/request/WtloginHelper:RequestReportError	(I[B[BJJI)I
    //   651: pop
    //   652: new 496	oicq/wlogin_sdk/request/delete_expire_log
    //   655: dup
    //   656: aload_0
    //   657: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   660: getfield 444	oicq/wlogin_sdk/request/request_global:_context	Landroid/content/Context;
    //   663: invokespecial 497	oicq/wlogin_sdk/request/delete_expire_log:<init>	(Landroid/content/Context;)V
    //   666: invokevirtual 500	oicq/wlogin_sdk/request/delete_expire_log:start	()V
    //   669: aload_0
    //   670: monitorexit
    //   671: aload_0
    //   672: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   675: invokevirtual 503	oicq/wlogin_sdk/request/request_global:close_connect	()V
    //   678: new 258	java/lang/StringBuilder
    //   681: dup
    //   682: ldc_w 1038
    //   685: invokespecial 262	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   688: aload_1
    //   689: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   692: ldc_w 617
    //   695: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   698: lload_2
    //   699: invokevirtual 509	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   702: ldc_w 859
    //   705: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   708: iload 15
    //   710: invokevirtual 271	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   713: ldc_w 861
    //   716: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   719: lload 5
    //   721: invokevirtual 509	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   724: ldc_w 927
    //   727: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   730: iload 4
    //   732: invokevirtual 271	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   735: invokevirtual 285	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   738: aload_0
    //   739: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   742: getfield 444	oicq/wlogin_sdk/request/request_global:_context	Landroid/content/Context;
    //   745: new 258	java/lang/StringBuilder
    //   748: dup
    //   749: invokespecial 506	java/lang/StringBuilder:<init>	()V
    //   752: aload_0
    //   753: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   756: getfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   759: invokevirtual 509	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   762: invokevirtual 285	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   765: iconst_1
    //   766: invokestatic 289	oicq/wlogin_sdk/tools/util:LOGI	(Ljava/lang/String;Landroid/content/Context;Ljava/lang/String;I)V
    //   769: iload 4
    //   771: ireturn
    //   772: invokestatic 931	java/lang/Thread:currentThread	()Ljava/lang/Thread;
    //   775: pop
    //   776: ldc2_w 932
    //   779: invokestatic 314	java/lang/Thread:sleep	(J)V
    //   782: goto -621 -> 161
    //   785: astore 9
    //   787: goto -626 -> 161
    //   790: iload 13
    //   792: istore 12
    //   794: ldc_w 1063
    //   797: invokestatic 185	oicq/wlogin_sdk/tools/util:LOGD	(Ljava/lang/String;)V
    //   800: iload 4
    //   802: istore 12
    //   804: aload_1
    //   805: invokestatic 207	oicq/wlogin_sdk/tools/util:check_uin_account	(Ljava/lang/String;)Ljava/lang/Boolean;
    //   808: invokevirtual 211	java/lang/Boolean:booleanValue	()Z
    //   811: ifne +127 -> 938
    //   814: iload 4
    //   816: istore 12
    //   818: aload_0
    //   819: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   822: aload_1
    //   823: invokevirtual 215	oicq/wlogin_sdk/request/request_global:get_account	(Ljava/lang/String;)Ljava/lang/Long;
    //   826: astore 18
    //   828: aload 18
    //   830: astore 9
    //   832: aload 18
    //   834: ifnonnull +10 -> 844
    //   837: iconst_0
    //   838: istore 14
    //   840: aload 18
    //   842: astore 9
    //   844: aload 17
    //   846: ifnull +132 -> 978
    //   849: iload 4
    //   851: istore 12
    //   853: aload 17
    //   855: invokevirtual 197	java/lang/String:length	()I
    //   858: istore 12
    //   860: iload 12
    //   862: ifle +116 -> 978
    //   865: iload 8
    //   867: ifeq +87 -> 954
    //   870: iload 4
    //   872: istore 12
    //   874: aload_0
    //   875: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   878: aload 17
    //   880: ldc_w 1065
    //   883: invokevirtual 1067	java/lang/String:getBytes	(Ljava/lang/String;)[B
    //   886: invokevirtual 526	[B:clone	()Ljava/lang/Object;
    //   889: checkcast 522	[B
    //   892: putfield 536	oicq/wlogin_sdk/request/request_global:_tmp_pwd	[B
    //   895: iload 4
    //   897: istore 12
    //   899: aload_0
    //   900: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   903: iconst_0
    //   904: putfield 512	oicq/wlogin_sdk/request/request_global:_tmp_pwd_type	I
    //   907: iload 4
    //   909: istore 13
    //   911: iload 14
    //   913: ifne +316 -> 1229
    //   916: iload 4
    //   918: istore 12
    //   920: aload_1
    //   921: invokevirtual 197	java/lang/String:length	()I
    //   924: getstatic 1070	oicq/wlogin_sdk/tools/util:MAX_NAME_LEN	I
    //   927: if_icmple +210 -> 1137
    //   930: sipush 64528
    //   933: istore 4
    //   935: goto -430 -> 505
    //   938: iload 4
    //   940: istore 12
    //   942: aload_1
    //   943: invokestatic 231	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   946: invokestatic 220	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   949: astore 9
    //   951: goto -107 -> 844
    //   954: iload 4
    //   956: istore 12
    //   958: aload_0
    //   959: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   962: aload 17
    //   964: invokestatic 1075	oicq/wlogin_sdk/tools/MD5:toMD5Byte	(Ljava/lang/String;)[B
    //   967: putfield 536	oicq/wlogin_sdk/request/request_global:_tmp_pwd	[B
    //   970: goto -75 -> 895
    //   973: astore_1
    //   974: aload_0
    //   975: monitorexit
    //   976: aload_1
    //   977: athrow
    //   978: iload 4
    //   980: istore 12
    //   982: aload_0
    //   983: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   986: aload_0
    //   987: aload_1
    //   988: lload_2
    //   989: invokevirtual 1077	oicq/wlogin_sdk/request/WtloginHelper:GetA1ByAccount	(Ljava/lang/String;J)[B
    //   992: putfield 536	oicq/wlogin_sdk/request/request_global:_tmp_pwd	[B
    //   995: iload 4
    //   997: istore 12
    //   999: aload_0
    //   1000: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1003: getfield 536	oicq/wlogin_sdk/request/request_global:_tmp_pwd	[B
    //   1006: ifnull +18 -> 1024
    //   1009: iload 4
    //   1011: istore 12
    //   1013: aload_0
    //   1014: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1017: getfield 536	oicq/wlogin_sdk/request/request_global:_tmp_pwd	[B
    //   1020: arraylength
    //   1021: ifgt +50 -> 1071
    //   1024: iload 4
    //   1026: istore 12
    //   1028: aload 10
    //   1030: getfield 1080	oicq/wlogin_sdk/request/WUserSigInfo:_userPasswdSig	[B
    //   1033: ifnull +72 -> 1105
    //   1036: iload 4
    //   1038: istore 12
    //   1040: aload 10
    //   1042: getfield 1080	oicq/wlogin_sdk/request/WUserSigInfo:_userPasswdSig	[B
    //   1045: arraylength
    //   1046: ifle +59 -> 1105
    //   1049: iload 4
    //   1051: istore 12
    //   1053: aload_0
    //   1054: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1057: aload 10
    //   1059: getfield 1080	oicq/wlogin_sdk/request/WUserSigInfo:_userPasswdSig	[B
    //   1062: invokevirtual 526	[B:clone	()Ljava/lang/Object;
    //   1065: checkcast 522	[B
    //   1068: putfield 536	oicq/wlogin_sdk/request/request_global:_tmp_pwd	[B
    //   1071: iload 4
    //   1073: istore 12
    //   1075: aload_0
    //   1076: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1079: getfield 536	oicq/wlogin_sdk/request/request_global:_tmp_pwd	[B
    //   1082: ifnull +834 -> 1916
    //   1085: iload 4
    //   1087: istore 12
    //   1089: aload_0
    //   1090: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1093: getfield 536	oicq/wlogin_sdk/request/request_global:_tmp_pwd	[B
    //   1096: arraylength
    //   1097: bipush 16
    //   1099: if_icmpge +23 -> 1122
    //   1102: goto +814 -> 1916
    //   1105: iload 4
    //   1107: istore 12
    //   1109: aload_0
    //   1110: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1113: iconst_0
    //   1114: newarray byte
    //   1116: putfield 536	oicq/wlogin_sdk/request/request_global:_tmp_pwd	[B
    //   1119: goto -48 -> 1071
    //   1122: iload 4
    //   1124: istore 12
    //   1126: aload_0
    //   1127: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1130: iconst_1
    //   1131: putfield 512	oicq/wlogin_sdk/request/request_global:_tmp_pwd_type	I
    //   1134: goto -227 -> 907
    //   1137: iload 4
    //   1139: istore 12
    //   1141: aload_0
    //   1142: getfield 94	oicq/wlogin_sdk/request/WtloginHelper:mGetuin	Loicq/wlogin_sdk/request/request_getuin;
    //   1145: lload_2
    //   1146: lload 5
    //   1148: iconst_1
    //   1149: iload 15
    //   1151: aload_1
    //   1152: invokevirtual 394	java/lang/String:getBytes	()[B
    //   1155: iconst_0
    //   1156: iconst_0
    //   1157: iconst_0
    //   1158: iconst_1
    //   1159: aload_0
    //   1160: getfield 162	oicq/wlogin_sdk/request/WtloginHelper:mTGTGTMiscBitmap	I
    //   1163: aload_0
    //   1164: getfield 160	oicq/wlogin_sdk/request/WtloginHelper:mSubSigMap	I
    //   1167: aload 7
    //   1169: invokevirtual 1083	oicq/wlogin_sdk/request/request_getuin:make_request	(JJII[BIIIIII[J)I
    //   1172: istore 4
    //   1174: iload 4
    //   1176: istore 12
    //   1178: iload 4
    //   1180: iconst_3
    //   1181: if_icmpne +12 -> 1193
    //   1184: aload_0
    //   1185: getfield 119	oicq/wlogin_sdk/request/WtloginHelper:mDelay	Loicq/wlogin_sdk/request/request_delay;
    //   1188: invokevirtual 1085	oicq/wlogin_sdk/request/request_delay:make_request	()I
    //   1191: istore 12
    //   1193: iload 12
    //   1195: istore 4
    //   1197: iload 12
    //   1199: ifne -694 -> 505
    //   1202: aload_0
    //   1203: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1206: aload_1
    //   1207: invokevirtual 215	oicq/wlogin_sdk/request/request_global:get_account	(Ljava/lang/String;)Ljava/lang/Long;
    //   1210: astore 9
    //   1212: aload 9
    //   1214: ifnonnull +11 -> 1225
    //   1217: sipush 64533
    //   1220: istore 4
    //   1222: goto -717 -> 505
    //   1225: iload 12
    //   1227: istore 13
    //   1229: iload 13
    //   1231: istore 12
    //   1233: aload_0
    //   1234: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1237: aload 9
    //   1239: invokevirtual 241	java/lang/Long:longValue	()J
    //   1242: putfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   1245: iload 13
    //   1247: istore 12
    //   1249: new 258	java/lang/StringBuilder
    //   1252: dup
    //   1253: ldc_w 1087
    //   1256: invokespecial 262	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1259: new 217	java/lang/Long
    //   1262: dup
    //   1263: aload_0
    //   1264: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1267: getfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   1270: invokespecial 785	java/lang/Long:<init>	(J)V
    //   1273: invokevirtual 786	java/lang/Long:toString	()Ljava/lang/String;
    //   1276: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1279: invokevirtual 285	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1282: invokestatic 185	oicq/wlogin_sdk/tools/util:LOGD	(Ljava/lang/String;)V
    //   1285: iload 13
    //   1287: istore 12
    //   1289: aload 10
    //   1291: getfield 530	oicq/wlogin_sdk/request/WUserSigInfo:_in_ksid	[B
    //   1294: ifnull +221 -> 1515
    //   1297: iload 13
    //   1299: istore 12
    //   1301: aload 10
    //   1303: getfield 530	oicq/wlogin_sdk/request/WUserSigInfo:_in_ksid	[B
    //   1306: arraylength
    //   1307: ifle +208 -> 1515
    //   1310: iload 13
    //   1312: istore 12
    //   1314: aload 10
    //   1316: getfield 530	oicq/wlogin_sdk/request/WUserSigInfo:_in_ksid	[B
    //   1319: invokevirtual 526	[B:clone	()Ljava/lang/Object;
    //   1322: checkcast 522	[B
    //   1325: astore 17
    //   1327: iload 13
    //   1329: istore 12
    //   1331: aload_0
    //   1332: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1335: getfield 512	oicq/wlogin_sdk/request/request_global:_tmp_pwd_type	I
    //   1338: ifeq +193 -> 1531
    //   1341: iload 13
    //   1343: istore 12
    //   1345: new 258	java/lang/StringBuilder
    //   1348: dup
    //   1349: ldc_w 439
    //   1352: invokespecial 262	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1355: aload_1
    //   1356: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1359: ldc_w 1089
    //   1362: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1365: invokevirtual 285	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1368: aload_0
    //   1369: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1372: getfield 444	oicq/wlogin_sdk/request/request_global:_context	Landroid/content/Context;
    //   1375: new 258	java/lang/StringBuilder
    //   1378: dup
    //   1379: invokespecial 506	java/lang/StringBuilder:<init>	()V
    //   1382: aload_0
    //   1383: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1386: getfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   1389: invokevirtual 509	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1392: invokevirtual 285	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1395: iconst_0
    //   1396: invokestatic 289	oicq/wlogin_sdk/tools/util:LOGI	(Ljava/lang/String;Landroid/content/Context;Ljava/lang/String;I)V
    //   1399: iload 13
    //   1401: istore 12
    //   1403: aload_0
    //   1404: getfield 79	oicq/wlogin_sdk/request/WtloginHelper:mTgtgt	Loicq/wlogin_sdk/request/request_TGTGT;
    //   1407: lload_2
    //   1408: iconst_1
    //   1409: aload_0
    //   1410: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1413: getfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   1416: iconst_0
    //   1417: aload_0
    //   1418: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1421: getfield 533	oicq/wlogin_sdk/request/request_global:_ip_addr	[B
    //   1424: aload_0
    //   1425: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1428: getfield 536	oicq/wlogin_sdk/request/request_global:_tmp_pwd	[B
    //   1431: aload_0
    //   1432: getfield 162	oicq/wlogin_sdk/request/WtloginHelper:mTGTGTMiscBitmap	I
    //   1435: aload_0
    //   1436: getfield 160	oicq/wlogin_sdk/request/WtloginHelper:mSubSigMap	I
    //   1439: aload 7
    //   1441: iload 15
    //   1443: lload 5
    //   1445: iconst_1
    //   1446: iconst_0
    //   1447: iconst_1
    //   1448: ldc_w 543
    //   1451: iconst_1
    //   1452: aload 17
    //   1454: invokevirtual 546	oicq/wlogin_sdk/request/request_TGTGT:make_request	(JIJI[B[BII[JIJIIIII[B)I
    //   1457: istore 4
    //   1459: iload 4
    //   1461: istore 12
    //   1463: iload 4
    //   1465: iconst_3
    //   1466: if_icmpne +12 -> 1478
    //   1469: aload_0
    //   1470: getfield 119	oicq/wlogin_sdk/request/WtloginHelper:mDelay	Loicq/wlogin_sdk/request/request_delay;
    //   1473: invokevirtual 1085	oicq/wlogin_sdk/request/request_delay:make_request	()I
    //   1476: istore 12
    //   1478: iload 12
    //   1480: istore 4
    //   1482: iload 12
    //   1484: ifne -979 -> 505
    //   1487: aload_0
    //   1488: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1491: aload 9
    //   1493: invokevirtual 241	java/lang/Long:longValue	()J
    //   1496: lload_2
    //   1497: invokevirtual 236	oicq/wlogin_sdk/request/request_global:get_siginfo	(JJ)Loicq/wlogin_sdk/sharemem/WloginSigInfo;
    //   1500: astore 17
    //   1502: aload 17
    //   1504: ifnonnull +181 -> 1685
    //   1507: sipush 64532
    //   1510: istore 4
    //   1512: goto -1007 -> 505
    //   1515: iload 13
    //   1517: istore 12
    //   1519: aload_0
    //   1520: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1523: getfield 552	oicq/wlogin_sdk/request/request_global:_ksid	[B
    //   1526: astore 17
    //   1528: goto -201 -> 1327
    //   1531: iload 13
    //   1533: istore 12
    //   1535: new 258	java/lang/StringBuilder
    //   1538: dup
    //   1539: ldc_w 439
    //   1542: invokespecial 262	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1545: aload_1
    //   1546: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1549: ldc_w 1091
    //   1552: invokevirtual 266	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1555: invokevirtual 285	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1558: aload_0
    //   1559: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1562: getfield 444	oicq/wlogin_sdk/request/request_global:_context	Landroid/content/Context;
    //   1565: new 258	java/lang/StringBuilder
    //   1568: dup
    //   1569: invokespecial 506	java/lang/StringBuilder:<init>	()V
    //   1572: aload_0
    //   1573: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1576: getfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   1579: invokevirtual 509	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1582: invokevirtual 285	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1585: iconst_0
    //   1586: invokestatic 289	oicq/wlogin_sdk/tools/util:LOGI	(Ljava/lang/String;Landroid/content/Context;Ljava/lang/String;I)V
    //   1589: iload 13
    //   1591: istore 12
    //   1593: iconst_4
    //   1594: newarray byte
    //   1596: astore 18
    //   1598: iload 13
    //   1600: istore 12
    //   1602: aload 18
    //   1604: iconst_0
    //   1605: invokestatic 557	java/lang/System:currentTimeMillis	()J
    //   1608: ldc2_w 558
    //   1611: ldiv
    //   1612: getstatic 562	oicq/wlogin_sdk/request/request_global:_l_init_time	J
    //   1615: ladd
    //   1616: invokestatic 566	oicq/wlogin_sdk/tools/util:int64_to_buf32	([BIJ)V
    //   1619: iload 13
    //   1621: istore 12
    //   1623: aload_0
    //   1624: getfield 79	oicq/wlogin_sdk/request/WtloginHelper:mTgtgt	Loicq/wlogin_sdk/request/request_TGTGT;
    //   1627: lload_2
    //   1628: iconst_1
    //   1629: aload_0
    //   1630: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1633: getfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   1636: iconst_0
    //   1637: aload_0
    //   1638: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1641: getfield 533	oicq/wlogin_sdk/request/request_global:_ip_addr	[B
    //   1644: aload 18
    //   1646: iconst_0
    //   1647: aload_0
    //   1648: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1651: getfield 536	oicq/wlogin_sdk/request/request_global:_tmp_pwd	[B
    //   1654: aload_0
    //   1655: getfield 162	oicq/wlogin_sdk/request/WtloginHelper:mTGTGTMiscBitmap	I
    //   1658: aload_0
    //   1659: getfield 160	oicq/wlogin_sdk/request/WtloginHelper:mSubSigMap	I
    //   1662: aload 7
    //   1664: iload 15
    //   1666: lload 5
    //   1668: iconst_1
    //   1669: iconst_0
    //   1670: iconst_1
    //   1671: ldc_w 543
    //   1674: iconst_1
    //   1675: aload 17
    //   1677: invokevirtual 569	oicq/wlogin_sdk/request/request_TGTGT:make_request	(JIJI[B[BI[BII[JIJIIIII[B)I
    //   1680: istore 4
    //   1682: goto -223 -> 1459
    //   1685: aload_0
    //   1686: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1689: getfield 512	oicq/wlogin_sdk/request/request_global:_tmp_pwd_type	I
    //   1692: ifeq +61 -> 1753
    //   1695: aload 10
    //   1697: aload 17
    //   1699: invokevirtual 516	oicq/wlogin_sdk/request/WUserSigInfo:get_clone	(Loicq/wlogin_sdk/sharemem/WloginSigInfo;)V
    //   1702: aload 7
    //   1704: ifnull +35 -> 1739
    //   1707: aload 11
    //   1709: ifnull +30 -> 1739
    //   1712: aload 7
    //   1714: arraylength
    //   1715: iconst_2
    //   1716: imul
    //   1717: aload 11
    //   1719: arraylength
    //   1720: if_icmpne +19 -> 1739
    //   1723: iconst_0
    //   1724: istore 4
    //   1726: aload 7
    //   1728: ifnull +11 -> 1739
    //   1731: iload 4
    //   1733: aload 7
    //   1735: arraylength
    //   1736: if_icmplt +27 -> 1763
    //   1739: aload_0
    //   1740: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1743: invokevirtual 549	oicq/wlogin_sdk/request/request_global:clear_tmp_pwd	()V
    //   1746: iload 12
    //   1748: istore 4
    //   1750: goto -1245 -> 505
    //   1753: aload 10
    //   1755: aload 17
    //   1757: invokevirtual 516	oicq/wlogin_sdk/request/WUserSigInfo:get_clone	(Loicq/wlogin_sdk/sharemem/WloginSigInfo;)V
    //   1760: goto -58 -> 1702
    //   1763: aload_0
    //   1764: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1767: aload 9
    //   1769: invokevirtual 241	java/lang/Long:longValue	()J
    //   1772: aload 7
    //   1774: iload 4
    //   1776: laload
    //   1777: invokevirtual 236	oicq/wlogin_sdk/request/request_global:get_siginfo	(JJ)Loicq/wlogin_sdk/sharemem/WloginSigInfo;
    //   1780: astore 17
    //   1782: aload 17
    //   1784: ifnull +144 -> 1928
    //   1787: aload 11
    //   1789: iload 4
    //   1791: iconst_2
    //   1792: imul
    //   1793: aload 17
    //   1795: getfield 521	oicq/wlogin_sdk/sharemem/WloginSigInfo:_userSt_Key	[B
    //   1798: invokevirtual 526	[B:clone	()Ljava/lang/Object;
    //   1801: checkcast 522	[B
    //   1804: aastore
    //   1805: aload 11
    //   1807: iload 4
    //   1809: iconst_2
    //   1810: imul
    //   1811: iconst_1
    //   1812: iadd
    //   1813: aload 17
    //   1815: getfield 527	oicq/wlogin_sdk/sharemem/WloginSigInfo:_userStSig	[B
    //   1818: invokevirtual 526	[B:clone	()Ljava/lang/Object;
    //   1821: checkcast 522	[B
    //   1824: aastore
    //   1825: goto +103 -> 1928
    //   1828: aload_0
    //   1829: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1832: getfield 451	oicq/wlogin_sdk/request/request_global:_rt1	Loicq/wlogin_sdk/report/report_t1;
    //   1835: aload_0
    //   1836: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1839: getfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   1842: aload_0
    //   1843: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1846: getfield 455	oicq/wlogin_sdk/request/request_global:_name	Ljava/lang/String;
    //   1849: iload 4
    //   1851: aload_0
    //   1852: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1855: getfield 459	oicq/wlogin_sdk/request/request_global:_last_err_msg	Loicq/wlogin_sdk/tools/ErrMsg;
    //   1858: invokevirtual 464	oicq/wlogin_sdk/tools/ErrMsg:getMessage	()Ljava/lang/String;
    //   1861: invokestatic 468	oicq/wlogin_sdk/tools/util:format_ret_code	(ILjava/lang/String;)I
    //   1864: iload 4
    //   1866: invokevirtual 474	oicq/wlogin_sdk/report/report_t1:commit_t2	(JLjava/lang/String;II)V
    //   1869: aload_0
    //   1870: iconst_0
    //   1871: aload 10
    //   1873: getfield 479	oicq/wlogin_sdk/request/WUserSigInfo:_userStSig	[B
    //   1876: aload 10
    //   1878: getfield 482	oicq/wlogin_sdk/request/WUserSigInfo:_userSt_Key	[B
    //   1881: aload_0
    //   1882: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1885: getfield 452	oicq/wlogin_sdk/request/request_global:_uin	J
    //   1888: aload_0
    //   1889: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   1892: getfield 485	oicq/wlogin_sdk/request/request_global:_appid	J
    //   1895: iconst_0
    //   1896: invokespecial 346	oicq/wlogin_sdk/request/WtloginHelper:RequestReportError	(I[B[BJJI)I
    //   1899: pop
    //   1900: goto -1302 -> 598
    //   1903: goto -1103 -> 800
    //   1906: astore 7
    //   1908: sipush 64523
    //   1911: istore 4
    //   1913: goto -1408 -> 505
    //   1916: sipush 64520
    //   1919: istore 4
    //   1921: goto -1416 -> 505
    //   1924: astore_1
    //   1925: goto -951 -> 974
    //   1928: iload 4
    //   1930: iconst_1
    //   1931: iadd
    //   1932: istore 4
    //   1934: goto -208 -> 1726
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	1937	0	this	WtloginHelper
    //   0	1937	1	paramString1	String
    //   0	1937	2	paramLong1	long
    //   0	1937	4	paramInt1	int
    //   0	1937	5	paramLong2	long
    //   0	1937	7	paramArrayOfLong	long[]
    //   0	1937	8	paramBoolean	boolean
    //   0	1937	9	paramString2	String
    //   0	1937	10	paramWUserSigInfo	WUserSigInfo
    //   0	1937	11	paramArrayOfByte	byte[][]
    //   0	1937	12	paramInt2	int
    //   53	1567	13	i	int
    //   59	853	14	j	int
    //   6	1659	15	k	int
    //   184	34	16	m	int
    //   130	1684	17	localObject1	Object
    //   826	819	18	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   772	782	785	java/lang/Exception
    //   177	186	973	finally
    //   190	204	973	finally
    //   208	220	973	finally
    //   224	232	973	finally
    //   236	250	973	finally
    //   254	271	973	finally
    //   275	283	973	finally
    //   287	295	973	finally
    //   299	307	973	finally
    //   311	319	973	finally
    //   323	332	973	finally
    //   336	345	973	finally
    //   349	357	973	finally
    //   361	369	973	finally
    //   373	380	973	finally
    //   389	404	973	finally
    //   408	450	973	finally
    //   454	464	973	finally
    //   468	479	973	finally
    //   794	800	973	finally
    //   804	814	973	finally
    //   818	828	973	finally
    //   853	860	973	finally
    //   874	895	973	finally
    //   899	907	973	finally
    //   920	930	973	finally
    //   942	951	973	finally
    //   958	970	973	finally
    //   982	995	973	finally
    //   999	1009	973	finally
    //   1013	1024	973	finally
    //   1028	1036	973	finally
    //   1040	1049	973	finally
    //   1053	1071	973	finally
    //   1075	1085	973	finally
    //   1089	1102	973	finally
    //   1109	1119	973	finally
    //   1126	1134	973	finally
    //   1141	1174	973	finally
    //   1233	1245	973	finally
    //   1249	1285	973	finally
    //   1289	1297	973	finally
    //   1301	1310	973	finally
    //   1314	1327	973	finally
    //   1331	1341	973	finally
    //   1345	1399	973	finally
    //   1403	1459	973	finally
    //   1519	1528	973	finally
    //   1535	1589	973	finally
    //   1593	1598	973	finally
    //   1602	1619	973	finally
    //   1623	1682	973	finally
    //   874	895	1906	java/lang/Exception
    //   479	500	1924	finally
    //   510	598	1924	finally
    //   598	652	1924	finally
    //   652	671	1924	finally
    //   974	976	1924	finally
    //   1184	1193	1924	finally
    //   1202	1212	1924	finally
    //   1469	1478	1924	finally
    //   1487	1502	1924	finally
    //   1685	1702	1924	finally
    //   1712	1723	1924	finally
    //   1731	1739	1924	finally
    //   1739	1746	1924	finally
    //   1753	1760	1924	finally
    //   1763	1782	1924	finally
    //   1787	1825	1924	finally
    //   1828	1900	1924	finally
  }
  
  public int GetStWithPasswd(String paramString1, long paramLong, String paramString2, WUserSigInfo paramWUserSigInfo, int paramInt)
  {
    return GetStWithPasswd(paramString1, paramLong, this.mMainSigMap, 1L, null, false, paramString2, paramWUserSigInfo, null, paramInt);
  }
  
  public int GetStWithPasswdMd5(String paramString1, long paramLong, String paramString2, WUserSigInfo paramWUserSigInfo, int paramInt)
  {
    return GetStWithPasswd(paramString1, paramLong, this.mMainSigMap, 1L, null, true, paramString2, paramWUserSigInfo, null, paramInt);
  }
  
  public int GetStWithoutPasswd(String paramString, long paramLong1, long paramLong2, long paramLong3, int paramInt1, long paramLong4, long[] paramArrayOfLong, WUserSigInfo paramWUserSigInfo, byte[][] paramArrayOfByte1, byte[][] paramArrayOfByte2, int paramInt2)
  {
    int i = 0;
    int m = 0;
    int n = 0;
    int i1 = 0;
    int j = 0;
    int i2 = paramInt1 | 0xC0;
    if (paramInt2 == 0)
    {
      new HelperThread(this, this.mHelperHandler, paramString, paramLong1, paramLong2, paramLong3, i2, paramLong4, paramArrayOfLong, paramWUserSigInfo, paramArrayOfByte1, paramArrayOfByte2).RunReq(util.ASYN_GET_ST_WITHOUT_PWD);
      return 64535;
    }
    util.LOGI("wtlogin login with GetStWithoutPasswd:user:" + paramString + " dwSrcAppid:" + paramLong1 + " dwDstAppid:" + paramLong2 + " dwDstAppPri:" + paramLong3 + " dwMainSigMap:" + i2 + " dwSubDstAppid:" + paramLong4 + " ...", this.mG._context, paramString, 0);
    if (this.mG.get_ping_end_flag() != 0)
    {
      k = 0;
      paramInt2 = 0;
      paramInt1 = i;
    }
    label600:
    label1117:
    label1255:
    label1277:
    label2387:
    label2397:
    do
    {
      do
      {
        do
        {
          do
          {
            for (;;)
            {
              Object localObject2;
              Long localLong;
              try
              {
                int i3 = util.get_saved_network_type(this.mContext);
                paramInt1 = i;
                this.mG._network_type = util.get_network_type(this.mContext);
                paramInt1 = i;
                if (i3 != this.mG._network_type)
                {
                  paramInt1 = i;
                  util.set_net_retry_type(this.mContext, 0);
                  paramInt1 = i;
                  util.save_network_type(this.mContext, this.mG._network_type);
                }
                paramInt1 = i;
                this.mG._apn = util.get_apn_string(this.mContext).getBytes();
                paramInt1 = i;
                this.mG._name = paramString;
                paramInt1 = i;
                this.mG._uin = 0L;
                paramInt1 = i;
                this.mG._appid = paramLong2;
                paramInt1 = i;
                this.mG._sub_appid = paramLong4;
                paramInt1 = i;
                this.mG._main_sigmap = i2;
                paramInt1 = i;
                this.mG._sub_appid_list = null;
                paramInt1 = i;
                this.mG._encrypt_a1 = new byte[0];
                if (paramArrayOfLong != null)
                {
                  paramInt1 = i;
                  this.mG._sub_appid_list = ((long[])paramArrayOfLong.clone());
                }
                paramInt1 = i;
                if (!util.check_uin_account(paramString).booleanValue())
                {
                  paramInt1 = i;
                  util.LOGD("GetStWithoutPasswd:" + paramString + ":name");
                  paramInt1 = i;
                  localObject2 = this.mG.get_account(paramString);
                  Object localObject1 = localObject2;
                  if (localObject2 != null) {
                    continue;
                  }
                  paramInt1 = i;
                  util.LOGI("user:" + paramString + " have found uin record.", this.mG._context, paramString, 0);
                  paramInt1 = 64533;
                  j = paramInt2;
                  if (j != 0) {
                    if (paramInt1 != 0) {
                      break label2546;
                    }
                  }
                }
              }
              finally {}
              try
              {
                this.mG._rt1.commit_t2(this.mG._uin, this.mG._name, util.format_ret_code(paramInt1, this.mG._last_err_msg.getMessage()), paramInt1);
                if ((paramWUserSigInfo._userStSig != null) && (paramWUserSigInfo._userStSig.length != 0)) {
                  RequestReport(0, paramWUserSigInfo._userStSig, paramWUserSigInfo._userSt_Key, this.mG._uin, this.mG._appid);
                }
                if ((this.mG._t150 != null) && (this.mG._t150.get_bitmap() != 0)) {
                  RequestReportError(0, paramWUserSigInfo._userStSig, paramWUserSigInfo._userSt_Key, this.mG._uin, this.mG._appid, 1);
                }
                new delete_expire_log(this.mG._context).start();
                this.mG.close_connect();
                util.LOGI("wtlogin login with GetStWithoutPasswd:user:" + paramString + " dwSrcAppid:" + paramLong1 + " dwDstAppid:" + paramLong2 + " dwDstAppPri:" + paramLong3 + " dwMainSigMap:" + i2 + " dwSubDstAppid:" + paramLong4 + " ret=" + paramInt1, this.mG._context, this.mG._uin, 1);
                return paramInt1;
              }
              finally
              {
                for (;;) {}
                paramInt1 = 64532;
                j = m;
              }
            }
            try
            {
              Thread.currentThread();
              Thread.sleep(20L);
            }
            catch (Exception localException) {}
            break;
            paramInt1 = i;
            util.LOGD("GetStWithoutPasswd:" + paramString + ":num");
            paramInt1 = i;
            localLong = Long.valueOf(Long.parseLong(paramString));
            paramInt1 = i;
            this.mG._uin = localLong.longValue();
            if (paramArrayOfByte2 == null) {
              break label1277;
            }
            paramInt1 = i;
            if ((paramArrayOfByte2.length != 4) || (paramArrayOfByte2[0] == null)) {
              break label1277;
            }
            paramInt1 = i;
            if ((paramArrayOfByte2[0].length != 1) || (paramArrayOfByte2[0][0] != 1)) {
              break label1277;
            }
            k = 1;
            m = 1;
            paramInt1 = i;
            this.mG._rt1.add_t2(new report_t2("exchg", new String(this.mG._sim_operator_name), System.currentTimeMillis(), paramLong1, paramLong4, paramArrayOfLong));
            paramInt1 = i;
            util.LOGI("user:" + paramString + " exchange A2 from A2/D2/KEY.", this.mG._context, this.mG._uin, 0);
            if ((paramArrayOfByte2[1] == null) || (paramArrayOfByte2[2] == null) || (paramArrayOfByte2[3] == null)) {
              break label2625;
            }
            paramInt1 = i;
            if (this.mG._init_time != null) {
              break label1255;
            }
            paramInt1 = i;
            paramInt2 = this.mPing.make_request(0L, paramLong2);
            util.LOGD("pingping ret=" + paramInt2);
            paramInt1 = paramInt2;
            j = m;
          } while (paramInt2 != 0);
          paramInt1 = paramInt2;
          this.mG._master_tgt_key = MD5.toMD5Byte(paramArrayOfByte2[3]);
          paramInt1 = paramInt2;
          paramInt1 = this.mChangeSig.make_request(localLong.longValue(), paramLong2, paramLong4, 1, i2, paramArrayOfByte2[1], this.mChangeSigMiscBitmap, this.mSubSigMap, paramArrayOfLong, paramArrayOfByte2[2], paramArrayOfByte2[3]);
          paramInt2 = paramInt1;
          i = k;
          if (paramInt1 == 3)
          {
            paramInt2 = this.mDelay.make_request();
            i = k;
          }
          for (;;)
          {
            paramInt1 = paramInt2;
            j = i;
            if (paramInt2 != 0) {
              break;
            }
            paramArrayOfByte2 = this.mG.get_siginfo(localLong.longValue(), paramLong2);
            if (paramArrayOfByte2 != null) {
              break label2397;
            }
            paramInt1 = 64532;
            j = i;
            break;
            paramInt1 = i;
            util.LOGD("pingno need ping ");
            paramInt2 = j;
            break label1117;
            throw paramString;
            if (paramArrayOfByte2 != null)
            {
              paramInt1 = i;
              if ((paramArrayOfByte2.length == 3) && (paramArrayOfByte2[0] != null))
              {
                paramInt1 = i;
                if ((paramArrayOfByte2[0].length == 1) && (paramArrayOfByte2[0][0] == 2))
                {
                  k = 1;
                  j = 1;
                  paramInt1 = i;
                  this.mG._rt1.add_t2(new report_t2("exchg", new String(this.mG._sim_operator_name), System.currentTimeMillis(), paramLong1, paramLong4, paramArrayOfLong));
                  paramInt1 = i;
                  util.LOGI("user:" + paramString + " exchange A2 from A2/A2KEY.", this.mG._context, this.mG._uin, 0);
                  if ((paramArrayOfByte2[1] == null) || (paramArrayOfByte2[2] == null)) {
                    break label2637;
                  }
                  paramInt1 = i;
                  if (this.mG._init_time == null)
                  {
                    paramInt1 = i;
                    paramInt2 = this.mPing.make_request(0L, paramLong2);
                    util.LOGD("pingping ret=" + paramInt2);
                    paramInt1 = paramInt2;
                    if (paramInt2 != 0) {
                      break;
                    }
                  }
                  for (;;)
                  {
                    paramInt1 = paramInt2;
                    this.mG._master_tgt_key = paramArrayOfByte2[2];
                    paramInt1 = paramInt2;
                    paramInt1 = this.mChangeSig.make_request(localLong.longValue(), paramLong2, paramLong4, 1, i2, paramArrayOfByte2[1], this.mChangeSigMiscBitmap, this.mSubSigMap, paramArrayOfLong, null, null);
                    paramInt2 = paramInt1;
                    i = k;
                    if (paramInt1 != 3) {
                      break;
                    }
                    paramInt2 = this.mDelay.make_request();
                    i = k;
                    break;
                    paramInt1 = i;
                    util.LOGD("pingno need ping ");
                    paramInt2 = m;
                  }
                }
              }
            }
            paramInt1 = i;
            util.LOGI("user:" + paramString + " exchange A2 from A2.", this.mG._context, this.mG._uin, 0);
            paramInt1 = i;
            localObject2 = this.mG.get_siginfo(localLong.longValue(), paramLong1);
            if (localObject2 != null)
            {
              paramInt1 = i;
              if (!((WloginSigInfo)localObject2).iSExpireA2(request_global.get_cur_time())) {}
            }
            else
            {
              k = 1;
              j = 1;
              paramInt1 = i;
              this.mG._rt1.add_t2(new report_t2("exchg", new String(this.mG._sim_operator_name), System.currentTimeMillis(), paramLong1, paramLong4, paramArrayOfLong));
              paramInt1 = i;
              util.LOGI("user:" + paramString + " exchange A2 from A2 with Priority.", this.mG._context, this.mG._uin, 0);
              paramInt1 = i;
              paramArrayOfByte2 = this.mG.get_siginfo_by_pri(localLong.longValue(), paramLong2, paramLong3, request_global.get_cur_time());
              if (paramArrayOfByte2 == null) {
                break label2645;
              }
              paramInt1 = i;
              if (paramArrayOfByte2.iSExpireA2(request_global.get_cur_time())) {
                break label2645;
              }
              paramInt1 = i;
              if (this.mG._init_time == null)
              {
                paramInt1 = i;
                paramInt2 = this.mPing.make_request(0L, paramLong2);
                util.LOGD("pingping ret=" + paramInt2);
                paramInt1 = paramInt2;
                if (paramInt2 != 0) {
                  break;
                }
              }
              for (;;)
              {
                paramInt1 = paramInt2;
                this.mG._master_tgt_key = paramArrayOfByte2._TGTKey;
                paramInt1 = paramInt2;
                paramInt1 = this.mChangeSig.make_request(localLong.longValue(), paramLong2, paramLong4, 1, i2, paramArrayOfByte2._TGT, this.mChangeSigMiscBitmap, this.mSubSigMap, paramArrayOfLong, null, null);
                paramInt2 = paramInt1;
                i = k;
                if (paramInt1 != 3) {
                  break;
                }
                paramInt2 = this.mDelay.make_request();
                i = k;
                break;
                paramInt1 = i;
                util.LOGD("pingno need ping ");
                paramInt2 = n;
              }
            }
            paramInt1 = i;
            util.LOGI("user:" + paramString + " exchange A2 from A2 without Priority.", this.mG._context, this.mG._uin, 0);
            paramInt1 = i;
            WloginSigInfo localWloginSigInfo = this.mG.get_siginfo(localLong.longValue(), paramLong2);
            if (localWloginSigInfo != null)
            {
              paramInt1 = i;
              if (!localWloginSigInfo.iSExpire(request_global.get_cur_time()))
              {
                if (paramArrayOfByte2 == null) {
                  break label2387;
                }
                paramInt1 = i;
                if (paramArrayOfByte2.length != 1) {
                  break label2387;
                }
                paramInt1 = i;
                if ((paramArrayOfByte2[0].length != 1) || (paramArrayOfByte2[0][0] != 1)) {
                  break label2387;
                }
              }
            }
            k = 1;
            j = 1;
            paramInt1 = i;
            this.mG._rt1.add_t2(new report_t2("exchg", new String(this.mG._sim_operator_name), System.currentTimeMillis(), paramLong1, paramLong4, paramArrayOfLong));
            paramInt1 = i;
            if (this.mG._init_time == null)
            {
              paramInt1 = i;
              paramInt2 = this.mPing.make_request(0L, paramLong2);
              util.LOGD("pingping ret=" + paramInt2);
              paramInt1 = paramInt2;
              if (paramInt2 != 0) {
                break;
              }
            }
            for (;;)
            {
              paramInt1 = paramInt2;
              this.mG._master_tgt_key = ((WloginSigInfo)localObject2)._TGTKey;
              paramInt1 = paramInt2;
              paramInt1 = this.mChangeSig.make_request(localLong.longValue(), paramLong2, paramLong4, 1, i2, ((WloginSigInfo)localObject2)._TGT, this.mChangeSigMiscBitmap, this.mSubSigMap, paramArrayOfLong, null, null);
              paramInt2 = paramInt1;
              i = k;
              if (paramInt1 != 3) {
                break;
              }
              paramInt2 = this.mDelay.make_request();
              i = k;
              break;
              paramInt1 = i;
              util.LOGD("pingno need ping ");
              paramInt2 = i1;
            }
            paramInt2 = 0;
            i = k;
          }
          paramWUserSigInfo.get_clone(paramArrayOfByte2);
          paramInt1 = paramInt2;
          j = i;
        } while (paramArrayOfLong == null);
        paramInt1 = paramInt2;
        j = i;
      } while (paramArrayOfByte1 == null);
      paramInt1 = paramInt2;
      j = i;
    } while (paramArrayOfLong.length * 2 != paramArrayOfByte1.length);
    int k = 0;
    for (;;)
    {
      paramInt1 = paramInt2;
      j = i;
      if (paramArrayOfLong == null) {
        break;
      }
      paramInt1 = paramInt2;
      j = i;
      if (k >= paramArrayOfLong.length) {
        break;
      }
      paramArrayOfByte2 = this.mG.get_siginfo(localLong.longValue(), paramArrayOfLong[k]);
      if (paramArrayOfByte2 != null)
      {
        paramArrayOfByte1[(k * 2)] = ((byte[])paramArrayOfByte2._userSt_Key.clone());
        paramArrayOfByte1[(k * 2 + 1)] = ((byte[])paramArrayOfByte2._userStSig.clone());
        break label2653;
        label2546:
        this.mG._rt1.commit_t2(this.mG._uin, this.mG._name, util.format_ret_code(paramInt1, this.mG._last_err_msg.getMessage()), paramInt1);
        RequestReportError(0, paramWUserSigInfo._userStSig, paramWUserSigInfo._userSt_Key, this.mG._uin, this.mG._appid, 0);
        break label600;
        label2625:
        break;
        label2637:
        paramInt1 = 64532;
        break;
        label2645:
        paramInt1 = 64532;
        break;
      }
      label2653:
      k += 1;
    }
  }
  
  public int GetStWithoutPasswd(String paramString, long paramLong1, long paramLong2, WUserSigInfo paramWUserSigInfo, int paramInt)
  {
    return GetStWithoutPasswd(paramString, paramLong1, paramLong2, -1L, this.mMainSigMap, 1L, null, paramWUserSigInfo, null, null, paramInt);
  }
  
  public int GetStWithoutPasswd(String paramString, long paramLong1, long paramLong2, WUserSigInfo paramWUserSigInfo, int paramInt1, int paramInt2)
  {
    if (paramInt1 == 0) {
      return GetStWithoutPasswd(paramString, paramLong1, paramLong2, -1L, this.mMainSigMap, 1L, null, paramWUserSigInfo, null, null, paramInt2);
    }
    byte[][] arrayOfByte = new byte[1][];
    arrayOfByte[0] = new byte[1];
    arrayOfByte[0][0] = 1;
    return GetStWithoutPasswd(paramString, paramLong1, paramLong2, -1L, this.mMainSigMap, 1L, null, paramWUserSigInfo, null, arrayOfByte, paramInt2);
  }
  
  public int GetStWithoutPasswd(String paramString, long paramLong1, long paramLong2, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, WUserSigInfo paramWUserSigInfo, int paramInt)
  {
    byte[][] arrayOfByte = new byte[3][];
    arrayOfByte[0] = new byte[1];
    arrayOfByte[0][0] = 2;
    arrayOfByte[1] = paramArrayOfByte1;
    arrayOfByte[2] = paramArrayOfByte2;
    return GetStWithoutPasswd(paramString, paramLong1, paramLong2, -1L, this.mMainSigMap, 1L, null, paramWUserSigInfo, null, arrayOfByte, paramInt);
  }
  
  public int GetStWithoutPasswd(byte[] paramArrayOfByte, long paramLong, WUserSigInfo paramWUserSigInfo, int paramInt)
  {
    if ((paramArrayOfByte == null) || (paramArrayOfByte.length <= 0)) {
      return 64519;
    }
    Object localObject = cryptor.decrypt(paramArrayOfByte, 0, paramArrayOfByte.length, request_global._IMEI_KEY);
    if ((localObject == null) || (localObject.length <= 0)) {
      return 64519;
    }
    if (2 > localObject.length) {
      return 64519;
    }
    int i = util.buf_to_int16((byte[])localObject, 0);
    if ((i <= 0) || (i + 2 > localObject.length)) {
      return 64519;
    }
    paramArrayOfByte = new String((byte[])localObject, 0 + 2, i);
    i += 2;
    if (i + 8 > localObject.length) {
      return 64519;
    }
    long l = util.buf_to_int64((byte[])localObject, i);
    int j = i + 8;
    if (j + 2 > localObject.length) {
      return 64519;
    }
    i = util.buf_to_int16((byte[])localObject, j);
    j += 2;
    if ((i <= 0) || (j + i > localObject.length)) {
      return 64519;
    }
    byte[] arrayOfByte1 = new byte[i];
    System.arraycopy(localObject, j, arrayOfByte1, 0, arrayOfByte1.length);
    j += i;
    if (j + 2 > localObject.length) {
      return 64519;
    }
    i = util.buf_to_int16((byte[])localObject, j);
    j += 2;
    if ((i <= 0) || (j + i > localObject.length)) {
      return 64519;
    }
    byte[] arrayOfByte2 = new byte[i];
    System.arraycopy(localObject, j, arrayOfByte2, 0, arrayOfByte2.length);
    localObject = new byte[3][];
    localObject[0] = new byte[1];
    localObject[0][0] = 2;
    localObject[1] = arrayOfByte1;
    localObject[2] = arrayOfByte2;
    return GetStWithoutPasswd(paramArrayOfByte, l, paramLong, -1L, this.mMainSigMap, 1L, null, paramWUserSigInfo, null, (byte[][])localObject, paramInt);
  }
  
  public long GetTimeDifference()
  {
    return this.mG._time_difference;
  }
  
  public boolean InitPushService(int paramInt)
  {
    try
    {
      boolean bool = this.mG.init_service(this.mContext, true, false, this.mHelperHandler, paramInt, this.mCheckApk);
      return bool;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public boolean InitShareService()
  {
    try
    {
      boolean bool = this.mG.init_service(this.mContext, false, true, this.mHelperHandler, 0, this.mCheckApk);
      return bool;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public boolean IsLocalTkValid(String paramString, long paramLong)
  {
    boolean bool2 = false;
    Object localObject2;
    Object localObject1;
    boolean bool1;
    if (!util.check_uin_account(paramString).booleanValue())
    {
      util.LOGD("GetLocalSig:" + paramString + ":name");
      localObject2 = this.mG.get_account(paramString);
      localObject1 = localObject2;
      if (localObject2 != null) {
        break label164;
      }
      bool1 = bool2;
    }
    for (;;)
    {
      util.LOGI("userAccount:" + paramString + " dwAppid:" + paramLong + " IsLocalTkValid return:" + bool1, this.mG._context, localObject2, 1);
      return bool1;
      util.LOGD("GetLocalSig:" + paramString + ":num");
      localObject1 = Long.valueOf(Long.parseLong(paramString));
      label164:
      WloginSigInfo localWloginSigInfo = this.mG.get_siginfo(((Long)localObject1).longValue(), paramLong);
      bool1 = bool2;
      localObject2 = localObject1;
      if (localWloginSigInfo != null)
      {
        bool1 = bool2;
        localObject2 = localObject1;
        if (!localWloginSigInfo.iSExpire(request_global.get_cur_time()))
        {
          bool1 = true;
          localObject2 = localObject1;
        }
      }
    }
  }
  
  public Boolean IsNeedLoginWithPasswd(String paramString, long paramLong)
  {
    return IsNeedLoginWithPasswd(paramString, paramLong, -1L);
  }
  
  public Boolean IsNeedLoginWithPasswd(String paramString, long paramLong1, long paramLong2)
  {
    boolean bool2 = false;
    int i = 0;
    for (;;)
    {
      try
      {
        Object localObject1;
        if (!util.check_uin_account(paramString).booleanValue())
        {
          localObject2 = this.mG.get_account(paramString);
          localObject1 = localObject2;
          if (localObject2 == null)
          {
            i = 0 + 1;
            bool1 = true;
            util.LOGI("user:" + paramString + " appid:" + paramLong1 + " dwAppPri:" + paramLong2 + " need password:" + bool1 + " flag=" + i, this.mG._context, paramString, 1);
            return Boolean.valueOf(bool1);
          }
        }
        else
        {
          localObject1 = Long.valueOf(Long.parseLong(paramString));
        }
        Object localObject2 = this.mG.get_siginfo(((Long)localObject1).longValue(), paramLong1);
        if ((localObject2 != null) && (((WloginSigInfo)localObject2)._TGT != null) && (((WloginSigInfo)localObject2)._TGT.length != 0) && (!((WloginSigInfo)localObject2).iSExpireA2(request_global.get_cur_time())))
        {
          i = 0 + 1;
          bool1 = false;
          continue;
        }
        if (localObject2 == null)
        {
          localStringBuilder = new StringBuilder("user:").append(paramString).append(" appid:").append(paramLong1).append(" dwAppPri:").append(paramLong2).append("local search failed info==null:");
          if (localObject2 != null) {
            break label487;
          }
          bool1 = true;
          util.LOGI(bool1, this.mG._context, paramString, 0);
          localObject1 = this.mG.get_siginfo_by_pri(((Long)localObject1).longValue(), paramLong1, paramLong2, request_global.get_cur_time());
          if ((localObject1 == null) || (((WloginSigInfo)localObject1)._TGT == null) || (((WloginSigInfo)localObject1)._TGT.length == 0)) {
            break label476;
          }
          bool1 = bool2;
          if (!((WloginSigInfo)localObject1).iSExpireA2(request_global.get_cur_time())) {
            continue;
          }
          break label476;
        }
        StringBuilder localStringBuilder = new StringBuilder("user:").append(paramString).append(" appid:").append(paramLong1).append(" dwAppPri:").append(paramLong2).append("local search failed info==null:");
        if (localObject2 == null)
        {
          bool1 = true;
          localStringBuilder = localStringBuilder.append(bool1).append(" info._TGT==null:");
          if (((WloginSigInfo)localObject2)._TGT != null) {
            break label470;
          }
          bool1 = true;
          util.LOGI(bool1 + " current:" + request_global.get_cur_time() + " a2 expire:" + ((WloginSigInfo)localObject2)._A2_expire_time, this.mG._context, paramString, 0);
          continue;
        }
        bool1 = false;
      }
      finally {}
      continue;
      label470:
      boolean bool1 = false;
      continue;
      label476:
      i = 0 + 1;
      bool1 = true;
      continue;
      label487:
      bool1 = false;
    }
  }
  
  public boolean IsWtLoginUrl(String paramString)
  {
    if (paramString == null) {}
    do
    {
      int i;
      do
      {
        return false;
        i = paramString.indexOf("?k=");
      } while ((i == -1) || (i + 3 + 32 > paramString.length()));
      i += 3;
      paramString = paramString.substring(i, i + 32);
    } while (util.base64_decode_url(paramString.getBytes(), paramString.length()) == null);
    return true;
  }
  
  public int NameGetUin(String paramString, long paramLong, byte[][] paramArrayOfByte, WUserSigInfo paramWUserSigInfo)
  {
    Object localObject = new WloginSimpleInfo();
    if (!GetBasicUserInfo(paramString, (WloginSimpleInfo)localObject).booleanValue()) {
      return 64533;
    }
    long l = ((WloginSimpleInfo)localObject)._uin;
    localObject = FindUserSig(l, paramLong);
    if (localObject == null) {
      return 64532;
    }
    name_get_uin localName_get_uin = new name_get_uin(l);
    TransReqContext localTransReqContext = new TransReqContext();
    localTransReqContext.set_uin(l);
    localTransReqContext.set_oidb_func_req();
    localTransReqContext.set_subcmd(localName_get_uin.get_cmd());
    localTransReqContext._body = localName_get_uin.get_request(paramLong, ((WloginSigInfo)localObject)._TGT, paramArrayOfByte);
    if (localTransReqContext._body == null) {
      return 64519;
    }
    return RequestTransport(0, 1, paramString, paramLong, localName_get_uin._role, localTransReqContext, paramWUserSigInfo);
  }
  
  public void OnOidbRequest(String paramString, long paramLong1, long paramLong2, TransReqContext paramTransReqContext, WUserSigInfo paramWUserSigInfo, int paramInt)
  {
    util.LOGD("OnOidbRequest cmd = 0x" + Integer.toHexString(paramTransReqContext.get_subcmd()) + " ret=" + paramInt);
    if (paramTransReqContext.get_subcmd() == 1199)
    {
      if (paramInt != 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnNameGetUin(paramString, new ArrayList(), paramWUserSigInfo, paramInt);
          return;
        }
        OnNameGetUin(paramString, new ArrayList(), paramWUserSigInfo, paramInt);
        return;
      }
      name_get_uin localName_get_uin = new name_get_uin(paramTransReqContext.get_uin());
      paramInt = localName_get_uin.get_response(paramTransReqContext.get_body());
      if (this.mListener != null)
      {
        this.mListener.OnNameGetUin(paramString, localName_get_uin.nameinfo, paramWUserSigInfo, paramInt);
        return;
      }
      OnNameGetUin(paramString, localName_get_uin.nameinfo, paramWUserSigInfo, paramInt);
      return;
    }
    OnException(new Exception("unhandle name operation cmd"), util.ASYN_TRANSPORT);
    util.LOGW("OnRequestName unhandle cmd", "", this.mG._context, paramString);
  }
  
  public void OnRequestCode2d(String paramString, long paramLong1, long paramLong2, TransReqContext paramTransReqContext, int paramInt)
  {
    code2d_req_status localCode2d_req_status = code2d_base._status;
    if (paramTransReqContext.get_subcmd() == 19)
    {
      if (paramInt != 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnVerifyCode(paramString, localCode2d_req_status._app_name, localCode2d_req_status._time, localCode2d_req_status._data, localCode2d_req_status._msg, paramInt);
          return;
        }
        OnVerifyCode(paramString, localCode2d_req_status._app_name, localCode2d_req_status._time, localCode2d_req_status._data, localCode2d_req_status._msg, paramInt);
        return;
      }
      localCode2d_req_status._ret = new verify_code().get_response(paramTransReqContext.get_body());
      if (this.mListener != null)
      {
        this.mListener.OnVerifyCode(paramString, localCode2d_req_status._app_name, localCode2d_req_status._time, localCode2d_req_status._data, localCode2d_req_status._msg, localCode2d_req_status._ret);
        return;
      }
      OnVerifyCode(paramString, localCode2d_req_status._app_name, localCode2d_req_status._time, localCode2d_req_status._data, localCode2d_req_status._msg, localCode2d_req_status._ret);
      return;
    }
    if (paramTransReqContext.get_subcmd() == 20)
    {
      if (paramInt != 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnCloseCode(paramString, localCode2d_req_status._app_name, localCode2d_req_status._time, localCode2d_req_status._msg, paramInt);
          return;
        }
        OnCloseCode(paramString, localCode2d_req_status._app_name, localCode2d_req_status._time, localCode2d_req_status._msg, paramInt);
        return;
      }
      localCode2d_req_status._ret = new close_code().get_response(paramTransReqContext.get_body());
      if (this.mListener != null)
      {
        this.mListener.OnCloseCode(paramString, localCode2d_req_status._app_name, localCode2d_req_status._time, localCode2d_req_status._msg, localCode2d_req_status._ret);
        return;
      }
      OnCloseCode(paramString, localCode2d_req_status._app_name, localCode2d_req_status._time, localCode2d_req_status._msg, localCode2d_req_status._ret);
      return;
    }
    OnException(new Exception("unhandle name operation cmd"), util.ASYN_TRANSPORT);
    util.LOGW("OnRequestName unhandle cmd", "", this.mG._context, paramString);
  }
  
  public void OnRequestName(String paramString, long paramLong1, long paramLong2, TransReqContext paramTransReqContext, int paramInt)
  {
    name_req_status localName_req_status = this.mNameReqStatus;
    if (paramTransReqContext.get_subcmd() == 1)
    {
      if (paramInt != 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnGetMobileByUin(paramInt, localName_req_status._mobile);
          return;
        }
        OnGetMobileByUin(paramInt, localName_req_status._mobile);
        return;
      }
      new name_query().get_response(paramTransReqContext.get_body(), localName_req_status);
      if (this.mListener != null)
      {
        this.mListener.OnGetMobileByUin(localName_req_status._ret_code, localName_req_status._mobile);
        return;
      }
      OnGetMobileByUin(localName_req_status._ret_code, localName_req_status._mobile);
      return;
    }
    if (paramTransReqContext.get_subcmd() == 2)
    {
      if (paramInt != 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnBindMobileByUin(paramInt);
          return;
        }
        OnBindMobileByUin(paramInt);
        return;
      }
      new name_bind().get_response(paramTransReqContext.get_body(), localName_req_status);
      if (this.mListener != null)
      {
        this.mListener.OnBindMobileByUin(localName_req_status._ret_code);
        return;
      }
      OnBindMobileByUin(localName_req_status._ret_code);
      return;
    }
    if (paramTransReqContext.get_subcmd() == 3)
    {
      if (paramInt != 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnUnbindMobileByUin(paramInt);
          return;
        }
        OnUnbindMobileByUin(paramInt);
        return;
      }
      new name_unbind().get_response(paramTransReqContext.get_body(), localName_req_status);
      if (this.mListener != null)
      {
        this.mListener.OnUnbindMobileByUin(localName_req_status._ret_code);
        return;
      }
      OnUnbindMobileByUin(localName_req_status._ret_code);
      return;
    }
    OnException(new Exception("unhandle name operation cmd"), util.ASYN_TRANSPORT);
    util.LOGW("OnRequestName unhandle cmd", "", this.mG._context, paramString);
  }
  
  public void OnRequestRegister(String paramString, long paramLong1, long paramLong2, TransReqContext paramTransReqContext, int paramInt)
  {
    if (paramInt != 0)
    {
      if (this.mListener != null)
      {
        this.mListener.OnRegError(paramInt);
        return;
      }
      OnRegError(paramInt);
      return;
    }
    reg_status localReg_status = this.mRegStatus;
    if (paramTransReqContext.get_subcmd() == 1)
    {
      paramInt = reg_request.parse_checkvalid_rsp(paramTransReqContext.get_body(), localReg_status);
      if (paramInt != 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegError(paramInt);
          return;
        }
        OnRegError(paramInt);
        return;
      }
      if (localReg_status.sec_ctrl_code == 0)
      {
        if (localReg_status.return_msg == null) {}
        for (paramString = ""; this.mListener != null; paramString = new String(localReg_status.return_msg))
        {
          this.mListener.OnRegCheckDownloadMsg(localReg_status.telnum_verify_result, paramString);
          return;
        }
        OnRegCheckDownloadMsg(localReg_status.telnum_verify_result, paramString);
        return;
      }
      if (localReg_status.sec_ctrl_code == 2)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegCheckUploadMsg(new String(localReg_status.recvnum), new String(localReg_status.sendmsg));
          return;
        }
        OnRegCheckUploadMsg(new String(localReg_status.recvnum), new String(localReg_status.sendmsg));
        return;
      }
      if (localReg_status.sec_ctrl_code == 3)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegCheckValidUrl(new String(localReg_status.url));
          return;
        }
        OnRegCheckValidUrl(new String(localReg_status.url));
        return;
      }
      util.LOGW("OnRequestRegister unhandle return code while cmd>=1 && cmd <= 4, code:", new Integer(localReg_status.sec_ctrl_code).toString(), this.mG._context, paramString);
      if (this.mListener != null)
      {
        this.mListener.OnRegError(localReg_status.sec_ctrl_code);
        return;
      }
      OnRegError(localReg_status.sec_ctrl_code);
      return;
    }
    if (paramTransReqContext.get_subcmd() == 3)
    {
      paramInt = reg_request.parse_checkvalid_rsp(paramTransReqContext.get_body(), localReg_status);
      if (paramInt != 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegError(paramInt);
          return;
        }
        OnRegError(paramInt);
        return;
      }
      if (localReg_status.sec_ctrl_code == 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegQueryClientSendedMsgStatus(localReg_status.sec_ctrl_code, localReg_status.next_check_time, localReg_status.total_time_out);
          return;
        }
        OnRegQueryClientSendedMsgStatus(localReg_status.sec_ctrl_code, localReg_status.next_check_time, localReg_status.total_time_out);
        return;
      }
      if (localReg_status.sec_ctrl_code == 3)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegCheckValidUrl(new String(localReg_status.url));
          return;
        }
        OnRegCheckValidUrl(new String(localReg_status.url));
        return;
      }
      if (localReg_status.sec_ctrl_code == 4)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegQueryClientSendedMsgStatus(localReg_status.sec_ctrl_code, localReg_status.next_check_time, localReg_status.total_time_out);
          return;
        }
        OnRegQueryClientSendedMsgStatus(localReg_status.sec_ctrl_code, localReg_status.next_check_time, localReg_status.total_time_out);
        return;
      }
      util.LOGW("OnRequestRegister unhandle return code while cmd>=1 && cmd <= 4, code:", new Integer(localReg_status.sec_ctrl_code).toString(), this.mG._context, paramString);
      if (this.mListener != null)
      {
        this.mListener.OnRegError(localReg_status.sec_ctrl_code);
        return;
      }
      OnRegError(localReg_status.sec_ctrl_code);
      return;
    }
    if (paramTransReqContext.get_subcmd() == 4)
    {
      paramInt = reg_request.parse_checkvalid_rsp(paramTransReqContext.get_body(), localReg_status);
      if (paramInt != 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegError(paramInt);
          return;
        }
        OnRegError(paramInt);
        return;
      }
      if (localReg_status.sec_ctrl_code == 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegRequestServerResendMsg(localReg_status.sec_ctrl_code, localReg_status.next_check_time, localReg_status.total_time_out);
          return;
        }
        OnRegRequestServerResendMsg(localReg_status.sec_ctrl_code, localReg_status.next_check_time, localReg_status.total_time_out);
        return;
      }
      if (localReg_status.sec_ctrl_code == 3)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegCheckValidUrl(new String(localReg_status.url));
          return;
        }
        OnRegCheckValidUrl(new String(localReg_status.url));
        return;
      }
      if (localReg_status.sec_ctrl_code == 5)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegRequestServerResendMsg(localReg_status.sec_ctrl_code, localReg_status.next_check_time, localReg_status.total_time_out);
          return;
        }
        OnRegRequestServerResendMsg(localReg_status.sec_ctrl_code, localReg_status.next_check_time, localReg_status.total_time_out);
        return;
      }
      util.LOGW("OnRequestRegister unhandle return code while cmd>=1 && cmd <= 4, code:", new Integer(localReg_status.sec_ctrl_code).toString(), this.mG._context, paramString);
      if (this.mListener != null)
      {
        this.mListener.OnRegError(localReg_status.sec_ctrl_code);
        return;
      }
      OnRegError(localReg_status.sec_ctrl_code);
      return;
    }
    if (paramTransReqContext.get_subcmd() == 5)
    {
      paramInt = reg_request.parse_0x5_rsp(paramTransReqContext.get_body(), localReg_status);
      if (paramInt != 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegError(paramInt);
          return;
        }
        OnRegError(paramInt);
        return;
      }
      if (this.mListener != null)
      {
        this.mListener.OnRegSubmitMsgChk(localReg_status.sec_ctrl_code);
        return;
      }
      OnRegSubmitMsgChk(localReg_status.sec_ctrl_code);
      return;
    }
    if (paramTransReqContext.get_subcmd() == 6)
    {
      paramInt = reg_request.parse_0x6_rsp(paramTransReqContext.get_body(), localReg_status);
      if (paramInt != 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegError(paramInt);
          return;
        }
        OnRegError(paramInt);
        return;
      }
      if (this.mListener != null)
      {
        this.mListener.OnRegGetAccount(localReg_status.sec_ctrl_code, localReg_status.uin, localReg_status.supersig);
        return;
      }
      OnRegGetAccount(localReg_status.sec_ctrl_code, localReg_status.uin, localReg_status.supersig);
      return;
    }
    if (paramTransReqContext.get_subcmd() == 7)
    {
      paramInt = reg_request.parse_0x7_rsp(paramTransReqContext.get_body(), localReg_status);
      if (paramInt != 0)
      {
        if (this.mListener != null)
        {
          this.mListener.OnRegError(paramInt);
          return;
        }
        OnRegError(paramInt);
        return;
      }
      if (this.mListener != null)
      {
        this.mListener.OnRegQueryAccount(localReg_status.sec_ctrl_code, localReg_status.promptinfo);
        return;
      }
      OnRegQueryAccount(localReg_status.sec_ctrl_code, localReg_status.promptinfo);
      return;
    }
    if (this.mListener != null) {
      this.mListener.OnRegError(64526);
    }
    for (;;)
    {
      util.LOGW("OnRequestRegister unhandle cmd", "", this.mG._context, paramString);
      return;
      OnRegError(64526);
    }
  }
  
  public int RefreshPictureData(String paramString, int paramInt)
  {
    if (paramInt == 0)
    {
      new HelperThread(this, this.mHelperHandler, paramString).RunReq(util.ASYN_REFLUSH_IMAGE);
      return 64535;
    }
    util.LOGI("user:" + paramString + " RefreshPictureData ...", this.mG._context, this.mG._uin, 0);
    try
    {
      int i = this.mFlushimage.make_request();
      paramInt = i;
      if (i == 2) {
        paramInt = 0;
      }
      util.LOGI("user:" + paramString + " RefreshPictureData ret=" + paramInt, this.mG._context, this.mG._uin, 1);
      return paramInt;
    }
    finally {}
  }
  
  public int RefreshPictureData(String paramString, WUserSigInfo paramWUserSigInfo, int paramInt)
  {
    if (paramInt == 0)
    {
      new HelperThread(this, this.mHelperHandler, paramString, paramWUserSigInfo).RunReq(util.ASYN_NEW_REFLUSH_IMAGE);
      return 64535;
    }
    util.LOGI("user:" + paramString + " RefreshPictureData ...", this.mG._context, this.mG._uin, 0);
    try
    {
      int i = this.mFlushimage.make_request();
      paramInt = i;
      if (i == 2) {
        paramInt = 0;
      }
      util.LOGI("user:" + paramString + " RefreshPictureData ret=" + paramInt, this.mG._context, this.mG._uin, 1);
      return paramInt;
    }
    finally {}
  }
  
  public int RefreshSMSData(String paramString, int paramInt)
  {
    if (paramInt == 0)
    {
      new HelperThread(this, this.mHelperHandler).RunReq(util.ASYN_REFLUSH_SMS);
      return 64535;
    }
    try
    {
      int i = this.mFlushSms.make_request();
      paramInt = i;
      if (i == 160) {
        paramInt = 0;
      }
      this.mG.close_connect();
      return paramInt;
    }
    finally {}
  }
  
  public int RegGetAccount(String paramString1, String paramString2, String paramString3, int paramInt)
  {
    reg_request_get_account localReg_request_get_account = new reg_request_get_account();
    TransReqContext localTransReqContext = new TransReqContext();
    reg_status localReg_status = this.mRegStatus;
    localReg_status.msgchk = paramString1.getBytes();
    localTransReqContext.set_register_req();
    localTransReqContext.set_subcmd(localReg_request_get_account.get_cmd());
    localTransReqContext._body = localReg_request_get_account.get_request(localReg_status.token, paramString1.getBytes(), paramString3.getBytes(), paramInt, localReg_status.name.getBytes(), paramString2.getBytes());
    return RequestTransport(0, 0, null, 0L, localReg_status.role, localTransReqContext);
  }
  
  public int RegQueryAccount(int paramInt, byte[] paramArrayOfByte, long paramLong)
  {
    this.mRegStatus = new reg_status();
    this.mRegStatus.name = new String(paramArrayOfByte);
    reg_request_query_account_available localReg_request_query_account_available = new reg_request_query_account_available();
    TransReqContext localTransReqContext = new TransReqContext();
    reg_status localReg_status = this.mRegStatus;
    localTransReqContext.set_register_req();
    localTransReqContext.set_subcmd(localReg_request_query_account_available.get_cmd());
    localTransReqContext._body = localReg_request_query_account_available.get_request(paramInt, paramArrayOfByte, paramLong);
    return RequestTransport(0, 0, null, 0L, localReg_status.role, localTransReqContext);
  }
  
  public int RegQueryClientSendedMsgStatus()
  {
    reg_request_query_msg_status localReg_request_query_msg_status = new reg_request_query_msg_status();
    TransReqContext localTransReqContext = new TransReqContext();
    reg_status localReg_status = this.mRegStatus;
    localTransReqContext.set_register_req();
    localTransReqContext.set_subcmd(localReg_request_query_msg_status.get_cmd());
    localTransReqContext._body = localReg_request_query_msg_status.get_request(localReg_status.token, this.mRegStatus.sendmsg);
    return RequestTransport(0, 0, null, 0L, localReg_status.role, localTransReqContext);
  }
  
  public int RegRefreshImg()
  {
    reg_request_submit_checkimg localReg_request_submit_checkimg = new reg_request_submit_checkimg();
    TransReqContext localTransReqContext = new TransReqContext();
    reg_status localReg_status = this.mRegStatus;
    localTransReqContext.set_register_req();
    localTransReqContext.set_subcmd(localReg_request_submit_checkimg.get_cmd());
    localTransReqContext._body = localReg_request_submit_checkimg.get_request(1, localReg_status.token, new byte[0], new byte[0]);
    return RequestTransport(0, 0, null, 0L, localReg_status.role, localTransReqContext);
  }
  
  public int RegRequestServerResendMsg()
  {
    reg_request_resend_msg localReg_request_resend_msg = new reg_request_resend_msg();
    TransReqContext localTransReqContext = new TransReqContext();
    reg_status localReg_status = this.mRegStatus;
    localTransReqContext.set_register_req();
    localTransReqContext.set_subcmd(localReg_request_resend_msg.get_cmd());
    localTransReqContext._body = localReg_request_resend_msg.get_request(localReg_status.token, this.mRegStatus.mobile.getBytes());
    return RequestTransport(0, 0, null, 0L, localReg_status.role, localTransReqContext);
  }
  
  public int RegSubmitImg(byte[] paramArrayOfByte)
  {
    reg_request_submit_checkimg localReg_request_submit_checkimg = new reg_request_submit_checkimg();
    TransReqContext localTransReqContext = new TransReqContext();
    reg_status localReg_status = this.mRegStatus;
    localTransReqContext.set_register_req();
    localTransReqContext.set_subcmd(localReg_request_submit_checkimg.get_cmd());
    localTransReqContext._body = localReg_request_submit_checkimg.get_request(0, localReg_status.token, paramArrayOfByte, localReg_status.sigbuf);
    return RequestTransport(0, 0, null, 0L, localReg_status.role, localTransReqContext);
  }
  
  public int RegSubmitMobile(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, byte[] paramArrayOfByte3, int paramInt1, int paramInt2, int paramInt3, long paramLong)
  {
    this.mRegStatus.mobile = new String(paramArrayOfByte1);
    reg_request_submit_mobile localReg_request_submit_mobile = new reg_request_submit_mobile();
    TransReqContext localTransReqContext = new TransReqContext();
    reg_status localReg_status = this.mRegStatus;
    localReg_status.tel = paramArrayOfByte1;
    localReg_status.appid = paramLong;
    localTransReqContext.set_register_req();
    localTransReqContext.set_subcmd(localReg_request_submit_mobile.get_cmd());
    localTransReqContext._body = localReg_request_submit_mobile.get_request(paramArrayOfByte1, paramArrayOfByte2, paramArrayOfByte3, paramInt1, paramInt2, paramInt3, paramLong, null, util.get_IMEI(this.mContext));
    return RequestTransport(0, 0, null, 0L, localReg_status.role, localTransReqContext);
  }
  
  public int RegSubmitMsgChk(String paramString)
  {
    reg_request_submit_msg_chk localReg_request_submit_msg_chk = new reg_request_submit_msg_chk();
    TransReqContext localTransReqContext = new TransReqContext();
    reg_status localReg_status = this.mRegStatus;
    localTransReqContext.set_register_req();
    localTransReqContext.set_subcmd(localReg_request_submit_msg_chk.get_cmd());
    localTransReqContext._body = localReg_request_submit_msg_chk.get_request(localReg_status.token, paramString.getBytes());
    return RequestTransport(0, 0, null, 0L, localReg_status.role, localTransReqContext);
  }
  
  public int RegisterBroadcastPush(long paramLong1, long paramLong2, int paramInt1, int paramInt2, String paramString1, String paramString2, String paramString3)
  {
    try
    {
      paramInt1 = this.mG.register_push(0L, paramLong1, paramLong2, null, null, paramInt1, paramInt2, paramString1, paramString2, paramString3);
      return paramInt1;
    }
    finally
    {
      paramString1 = finally;
      throw paramString1;
    }
  }
  
  /* Error */
  public int RegisterPush(String paramString1, long paramLong1, long paramLong2, int paramInt1, int paramInt2, String paramString2, String paramString3, String paramString4)
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: new 359	oicq/wlogin_sdk/sharemem/WloginSimpleInfo
    //   5: dup
    //   6: invokespecial 360	oicq/wlogin_sdk/sharemem/WloginSimpleInfo:<init>	()V
    //   9: astore 14
    //   11: aload_0
    //   12: aload_1
    //   13: aload 14
    //   15: invokevirtual 364	oicq/wlogin_sdk/request/WtloginHelper:GetBasicUserInfo	(Ljava/lang/String;Loicq/wlogin_sdk/sharemem/WloginSimpleInfo;)Ljava/lang/Boolean;
    //   18: invokevirtual 211	java/lang/Boolean:booleanValue	()Z
    //   21: istore 13
    //   23: iload 13
    //   25: ifne +13 -> 38
    //   28: sipush 64533
    //   31: istore 6
    //   33: aload_0
    //   34: monitorexit
    //   35: iload 6
    //   37: ireturn
    //   38: aload 14
    //   40: getfield 367	oicq/wlogin_sdk/sharemem/WloginSimpleInfo:_uin	J
    //   43: lstore 11
    //   45: aload_0
    //   46: lload 11
    //   48: lload_2
    //   49: invokespecial 369	oicq/wlogin_sdk/request/WtloginHelper:FindUserSig	(JJ)Loicq/wlogin_sdk/sharemem/WloginSigInfo;
    //   52: astore_1
    //   53: aload_1
    //   54: ifnonnull +11 -> 65
    //   57: sipush 64532
    //   60: istore 6
    //   62: goto -29 -> 33
    //   65: aload_0
    //   66: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   69: lload 11
    //   71: lload_2
    //   72: lload 4
    //   74: aload_1
    //   75: getfield 527	oicq/wlogin_sdk/sharemem/WloginSigInfo:_userStSig	[B
    //   78: aload_1
    //   79: getfield 521	oicq/wlogin_sdk/sharemem/WloginSigInfo:_userSt_Key	[B
    //   82: iload 6
    //   84: iload 7
    //   86: aload 8
    //   88: aload 9
    //   90: aload 10
    //   92: invokevirtual 1549	oicq/wlogin_sdk/request/request_global:register_push	(JJJ[B[BIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
    //   95: istore 6
    //   97: goto -64 -> 33
    //   100: astore_1
    //   101: aload_0
    //   102: monitorexit
    //   103: aload_1
    //   104: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	105	0	this	WtloginHelper
    //   0	105	1	paramString1	String
    //   0	105	2	paramLong1	long
    //   0	105	4	paramLong2	long
    //   0	105	6	paramInt1	int
    //   0	105	7	paramInt2	int
    //   0	105	8	paramString2	String
    //   0	105	9	paramString3	String
    //   0	105	10	paramString4	String
    //   43	27	11	l	long
    //   21	3	13	bool	boolean
    //   9	30	14	localWloginSimpleInfo	WloginSimpleInfo
    // Exception table:
    //   from	to	target	type
    //   2	23	100	finally
    //   38	53	100	finally
    //   65	97	100	finally
  }
  
  public int RequestTransport(int paramInt1, int paramInt2, String paramString, long paramLong1, long paramLong2, TransReqContext paramTransReqContext)
  {
    if (paramInt1 == 0)
    {
      new HelperThread(this, this.mHelperHandler, paramInt2, paramString, paramLong1, paramLong2, paramTransReqContext).RunReq(util.ASYN_TRANSPORT);
      return 64535;
    }
    util.LOGI("user:" + paramString + " encrypt:" + paramInt2 + " appid:" + paramLong1 + " role:" + paramLong2 + " RequestTransport ...", this.mG._context, paramString, 0);
    request_transport localRequest_transport = this.mTransport;
    if (paramInt2 != 0) {}
    label349:
    for (;;)
    {
      try
      {
        WloginSimpleInfo localWloginSimpleInfo = new WloginSimpleInfo();
        if (paramString != null) {
          if (!GetBasicUserInfo(paramString, localWloginSimpleInfo).booleanValue())
          {
            break label349;
            this.mG.close_transport_connect();
            util.LOGI("user:" + paramString + " encrypt:" + paramInt2 + " appid:" + paramLong1 + " role:" + paramLong2 + " RequestTransport ret=" + paramInt1, this.mG._context, paramString, 1);
            return paramInt1;
          }
          else
          {
            WloginSigInfo localWloginSigInfo = this.mG.get_siginfo(localWloginSimpleInfo._uin, paramLong1);
            if (localWloginSigInfo == null)
            {
              paramInt1 = 64532;
              continue;
            }
            paramInt1 = this.mTransport.make_request(localWloginSimpleInfo._uin, paramTransReqContext, localWloginSigInfo._userStSig, localWloginSigInfo._userSt_Key, paramLong1, paramLong2);
            continue;
            localWloginSimpleInfo = new WloginSimpleInfo();
            if ((paramString == null) || (!GetBasicUserInfo(paramString, localWloginSimpleInfo).booleanValue())) {
              localWloginSimpleInfo._uin = 0L;
            }
            paramInt1 = this.mTransport.make_request(localWloginSimpleInfo._uin, paramTransReqContext, null, null, paramLong1, paramLong2);
            continue;
          }
        }
        paramInt1 = 64533;
      }
      finally {}
    }
  }
  
  public int RequestTransport(int paramInt1, int paramInt2, String paramString, long paramLong1, long paramLong2, TransReqContext paramTransReqContext, WUserSigInfo paramWUserSigInfo)
  {
    if (paramInt1 == 0)
    {
      new HelperThread(this, this.mHelperHandler, paramInt2, paramString, paramLong1, paramLong2, paramTransReqContext, paramWUserSigInfo).RunReq(util.ASYN_NEW_TRANSPORT);
      return 64535;
    }
    util.LOGI("user:" + paramString + " encrypt:" + paramInt2 + " appid:" + paramLong1 + " role:" + paramLong2 + " RequestTransport ...", this.mG._context, paramString, 0);
    paramWUserSigInfo = this.mTransport;
    if (paramInt2 != 0) {}
    label351:
    for (;;)
    {
      try
      {
        WloginSimpleInfo localWloginSimpleInfo = new WloginSimpleInfo();
        if (paramString != null) {
          if (!GetBasicUserInfo(paramString, localWloginSimpleInfo).booleanValue())
          {
            break label351;
            this.mG.close_transport_connect();
            util.LOGI("user:" + paramString + " encrypt:" + paramInt2 + " appid:" + paramLong1 + " role:" + paramLong2 + " RequestTransport ret=" + paramInt1, this.mG._context, paramString, 1);
            return paramInt1;
          }
          else
          {
            WloginSigInfo localWloginSigInfo = this.mG.get_siginfo(localWloginSimpleInfo._uin, paramLong1);
            if (localWloginSigInfo == null)
            {
              paramInt1 = 64532;
              continue;
            }
            paramInt1 = this.mTransport.make_request(localWloginSimpleInfo._uin, paramTransReqContext, localWloginSigInfo._userStSig, localWloginSigInfo._userSt_Key, paramLong1, paramLong2);
            continue;
            localWloginSimpleInfo = new WloginSimpleInfo();
            if ((paramString == null) || (!GetBasicUserInfo(paramString, localWloginSimpleInfo).booleanValue())) {
              localWloginSimpleInfo._uin = 0L;
            }
            paramInt1 = this.mTransport.make_request(localWloginSimpleInfo._uin, paramTransReqContext, null, null, paramLong1, paramLong2);
            continue;
          }
        }
        paramInt1 = 64533;
      }
      finally {}
    }
  }
  
  public int RequestTransportMsf(int paramInt1, int paramInt2, String paramString, long paramLong1, long paramLong2, TransReqContext paramTransReqContext)
  {
    if (paramInt1 == 0)
    {
      new HelperThread(this, this.mHelperHandler, paramInt2, paramString, paramLong1, paramLong2, paramTransReqContext).RunReq(util.ASYN_TRANSPORT_MSF);
      return 64535;
    }
    util.LOGI("user:" + paramString + " encrypt:" + paramInt2 + " appid:" + paramLong1 + " role:" + paramLong2 + " RequestTransportMsf ...", this.mG._context, paramString, 0);
    request_transport localRequest_transport = this.mTransport;
    if (paramInt2 != 0) {}
    for (;;)
    {
      try
      {
        WloginSimpleInfo localWloginSimpleInfo = new WloginSimpleInfo();
        if (paramString != null) {
          if (!GetBasicUserInfo(paramString, localWloginSimpleInfo).booleanValue())
          {
            break label426;
            this.mG.close_transport_connect();
            util.LOGI("user:" + paramString + " encrypt:" + paramInt2 + " appid:" + paramLong1 + " role:" + paramLong2 + " RequestTransportMsf ret=" + paramInt1, this.mG._context, paramString, 1);
            return paramInt1;
          }
          else
          {
            WloginSigInfo localWloginSigInfo = this.mG.get_siginfo(localWloginSimpleInfo._uin, paramLong1);
            if (localWloginSigInfo == null)
            {
              paramInt1 = 64532;
              continue;
            }
            paramInt1 = this.mTransport.make_request_msf(localWloginSimpleInfo._uin, paramTransReqContext, localWloginSigInfo._userStSig, localWloginSigInfo._userSt_Key, localWloginSigInfo._TGT, paramLong1, paramLong2);
            continue;
            if ((util.check_uin_account(paramString).booleanValue()) && (Long.parseLong(paramString) == 0L))
            {
              paramInt1 = this.mTransport.make_request_msf(0L, paramTransReqContext, null, null, new byte[0], paramLong1, paramLong2);
              continue;
            }
            localWloginSimpleInfo = new WloginSimpleInfo();
            if ((paramString == null) || (!GetBasicUserInfo(paramString, localWloginSimpleInfo).booleanValue())) {
              break label433;
            }
            localWloginSigInfo = this.mG.get_siginfo(localWloginSimpleInfo._uin, paramLong1);
            if (localWloginSigInfo == null)
            {
              paramInt1 = 64532;
              continue;
            }
            paramInt1 = this.mTransport.make_request_msf(localWloginSimpleInfo._uin, paramTransReqContext, null, null, localWloginSigInfo._TGT, paramLong1, paramLong2);
            continue;
          }
        }
        paramInt1 = 64533;
      }
      finally {}
      label426:
      continue;
      label433:
      paramInt1 = 64533;
    }
  }
  
  public void ResetThisHelper()
  {
    CancelRequest();
    this.mG = new request_global(null);
    this.mPing = new request_ping(this.mG);
    this.mTgtgt = new request_TGTGT(this.mG);
    this.mCheckimage = new request_checkimage(this.mG);
    this.mFlushimage = new request_flushimage(this.mG);
    this.mGetuin = new request_getuin(this.mG);
    this.mChangeSig = new request_change_sig(this.mG);
    this.mTransport = new request_transport(this.mG);
    this.mFlushSms = new request_flush_sms(this.mG);
    this.mCheckSms = new request_check_sms(this.mG);
    this.mDelay = new request_delay(this.mG);
    this.mRemoteLogin = new request_fast_login(this.mG);
    this.mCheckApk = new request_app_signature(this.mG);
    this.mReportError = new request_report_error(this.mG);
    this.mHelperHandler = newHelperHandler(this.mG, this);
    this.mRegStatus = new reg_status();
    this.mNameReqStatus = new name_req_status();
    this.mMainSigMap = 996082;
    this.mSubSigMap = 66560;
    this.mTGTGTMiscBitmap = 892;
    this.mChangeSigMiscBitmap = 628;
    this.mOpenAppid = 715019303L;
    this.mOpenMainSigMap = 16576;
    this.mG.set_context(this.mContext);
    RequestInit(0);
  }
  
  public void SetAppClientVersion(int paramInt)
  {
    this.mG._app_client_version = paramInt;
  }
  
  public void SetImgType(int paramInt)
  {
    this.mG._img_type = paramInt;
    this.mTGTGTMiscBitmap |= 0x80;
  }
  
  public void SetListener(WtloginListener paramWtloginListener)
  {
    this.mListener = paramWtloginListener;
  }
  
  public void SetMsfTransportFlag(int paramInt)
  {
    this.mG._msf_transport_flag = paramInt;
    this.mG._ip_addr = new byte[4];
    this.mG._init_time = new byte[0];
    request_global._l_init_time = 0L;
  }
  
  public void SetOpenSigMap(int paramInt)
  {
    this.mOpenMainSigMap = paramInt;
  }
  
  public void SetPushTestHost(int paramInt, String paramString)
  {
    this.mG.set_push_test(paramInt, paramString);
  }
  
  public void SetShareTestHost(int paramInt, String paramString)
  {
    this.mG.set_share_test(paramInt, paramString);
  }
  
  public void SetSigMap(int paramInt)
  {
    this.mMainSigMap = (paramInt | 0xC0);
  }
  
  public void SetTestHost(int paramInt, String paramString)
  {
    oicq_request.set_test(paramInt, paramString);
  }
  
  public void SetTimeOut(int paramInt)
  {
    this.mG._time_out = paramInt;
  }
  
  public void SetTkTimeOut(long paramLong)
  {
    this.mG._tk_time_out = paramLong;
  }
  
  public void StopPushService()
  {
    try
    {
      this.mG.stop_service(true, false);
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public void StopShareService()
  {
    try
    {
      this.mG.stop_service(false, true);
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public int StubGetRemoteStWithoutPasswd(String paramString, long paramLong1, long paramLong2, long paramLong3, long paramLong4, int paramInt1, int paramInt2, int paramInt3, int paramInt4, long[] paramArrayOfLong, byte[] paramArrayOfByte1, long paramLong5, long paramLong6, long paramLong7, byte[] paramArrayOfByte2, byte[] paramArrayOfByte3, byte[] paramArrayOfByte4, List<WloginRemoteData> paramList, account_sig_info_map paramAccount_sig_info_map)
  {
    util.LOGI("wtlogin login with StubGetRemoteStWithoutPasswd:user:" + paramString + " dwSrcAppid:" + paramLong2 + " dwDstAppid:" + paramLong3 + " dwDstAppPri:" + 0 + " dwMainSigMap:" + paramInt3 + " dwSubDstAppid:" + paramLong4 + " ...", this.mG._context, paramString, 0);
    if (this.mG.get_ping_end_flag() != 0) {}
    for (;;)
    {
      try
      {
        int i = util.get_saved_network_type(this.mContext);
        this.mG._network_type = util.get_network_type(this.mContext);
        if (i != this.mG._network_type)
        {
          util.set_net_retry_type(this.mContext, 0);
          util.save_network_type(this.mContext, this.mG._network_type);
        }
        this.mG._apn = util.get_apn_string(this.mContext).getBytes();
        this.mG._name = paramString;
        this.mG._uin = 0L;
        this.mG._appid = paramLong3;
        this.mG._sub_appid = paramLong4;
        this.mG._main_sigmap = paramInt3;
        this.mG._sub_appid_list = null;
        this.mG._encrypt_a1 = new byte[0];
        if (paramArrayOfLong != null) {
          this.mG._sub_appid_list = ((long[])paramArrayOfLong.clone());
        }
        if (!util.check_uin_account(paramString).booleanValue())
        {
          Long localLong1 = paramAccount_sig_info_map.get_account(paramString);
          if (localLong1 == null)
          {
            paramInt1 = 64533;
            this.mG.close_connect();
            util.LOGI("wtlogin login with StubGetRemoteStWithoutPasswd:user:" + paramString + " dwSrcAppid:" + paramLong2 + " dwDstAppid:" + paramLong3 + " dwDstAppPri:" + 0 + " dwMainSigMap:" + paramInt3 + " dwSubDstAppid:" + paramLong4 + " ret=" + paramInt1, this.mG._context, this.mG._uin, 1);
            return paramInt1;
            try
            {
              Thread.currentThread();
              Thread.sleep(20L);
            }
            catch (Exception localException) {}
            break;
          }
          str = paramString;
          paramAccount_sig_info_map = paramAccount_sig_info_map.get_siginfo(localException.longValue(), paramLong2);
          if (paramAccount_sig_info_map != null) {
            continue;
          }
          paramInt1 = 64532;
          continue;
        }
        Long localLong2 = Long.valueOf(Long.parseLong(paramString));
        String str = "";
        continue;
        this.mG._master_tgt_key = paramAccount_sig_info_map._TGTKey;
        paramInt4 = this.mRemoteLogin.make_request(localLong2.longValue(), paramLong3, paramLong4, paramInt1, paramInt2, paramAccount_sig_info_map._TGT, paramInt3, paramInt4, paramArrayOfLong, paramLong2, paramArrayOfByte1, paramLong5, paramLong6, paramLong7, paramArrayOfByte2, paramArrayOfByte3, paramArrayOfByte4, str.getBytes());
        paramInt1 = paramInt4;
        if (paramInt4 != 0) {
          continue;
        }
        paramArrayOfByte1 = this.mG.get_siginfo(localLong2.longValue(), paramLong3);
        paramArrayOfByte2 = this.mG.get_simpleinfo(localLong2.longValue());
        if ((paramArrayOfByte1 != null) && (paramArrayOfByte2 != null))
        {
          paramArrayOfByte3 = new WloginRemoteData();
          paramArrayOfByte3.getLongData().add(localLong2);
          paramArrayOfByte3.getByteData().add(paramString.getBytes());
          paramList.add(paramArrayOfByte3);
          paramList.add(paramArrayOfByte2.getWloginRemoteData());
          paramList.add(paramArrayOfByte1.getWloginRemoteData());
          paramInt1 = paramInt4;
          if (paramArrayOfLong == null) {
            continue;
          }
          paramInt2 = 0;
          paramInt1 = paramInt4;
          if (paramInt2 >= paramArrayOfLong.length) {
            continue;
          }
          paramArrayOfByte1 = this.mG.get_siginfo(localLong2.longValue(), paramArrayOfLong[paramInt2]);
          if (paramArrayOfByte1 == null) {
            break label744;
          }
          paramList.add(paramArrayOfByte1.getWloginRemoteData());
        }
      }
      finally {}
      paramInt1 = 64532;
      continue;
      label744:
      paramInt2 += 1;
    }
  }
  
  public int UnRegisterBroadcastPush(long paramLong1, long paramLong2, int paramInt)
  {
    try
    {
      paramInt = this.mG.unregister_push(0L, paramLong1, paramLong2, paramInt);
      return paramInt;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  /* Error */
  public int UnRegisterPush(String paramString, long paramLong1, long paramLong2, int paramInt)
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: new 359	oicq/wlogin_sdk/sharemem/WloginSimpleInfo
    //   5: dup
    //   6: invokespecial 360	oicq/wlogin_sdk/sharemem/WloginSimpleInfo:<init>	()V
    //   9: astore 10
    //   11: aload_0
    //   12: aload_1
    //   13: aload 10
    //   15: invokevirtual 364	oicq/wlogin_sdk/request/WtloginHelper:GetBasicUserInfo	(Ljava/lang/String;Loicq/wlogin_sdk/sharemem/WloginSimpleInfo;)Ljava/lang/Boolean;
    //   18: invokevirtual 211	java/lang/Boolean:booleanValue	()Z
    //   21: istore 9
    //   23: iload 9
    //   25: ifne +13 -> 38
    //   28: sipush 64533
    //   31: istore 6
    //   33: aload_0
    //   34: monitorexit
    //   35: iload 6
    //   37: ireturn
    //   38: aload 10
    //   40: getfield 367	oicq/wlogin_sdk/sharemem/WloginSimpleInfo:_uin	J
    //   43: lstore 7
    //   45: aload_0
    //   46: lload 7
    //   48: lload_2
    //   49: invokespecial 369	oicq/wlogin_sdk/request/WtloginHelper:FindUserSig	(JJ)Loicq/wlogin_sdk/sharemem/WloginSigInfo;
    //   52: ifnonnull +11 -> 63
    //   55: sipush 64532
    //   58: istore 6
    //   60: goto -27 -> 33
    //   63: aload_0
    //   64: getfield 67	oicq/wlogin_sdk/request/WtloginHelper:mG	Loicq/wlogin_sdk/request/request_global;
    //   67: lload 7
    //   69: lload_2
    //   70: lload 4
    //   72: iload 6
    //   74: invokevirtual 1657	oicq/wlogin_sdk/request/request_global:unregister_push	(JJJI)I
    //   77: istore 6
    //   79: goto -46 -> 33
    //   82: astore_1
    //   83: aload_0
    //   84: monitorexit
    //   85: aload_1
    //   86: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	87	0	this	WtloginHelper
    //   0	87	1	paramString	String
    //   0	87	2	paramLong1	long
    //   0	87	4	paramLong2	long
    //   0	87	6	paramInt	int
    //   43	25	7	l	long
    //   21	3	9	bool	boolean
    //   9	30	10	localWloginSimpleInfo	WloginSimpleInfo
    // Exception table:
    //   from	to	target	type
    //   2	23	82	finally
    //   38	55	82	finally
    //   63	79	82	finally
  }
  
  public int UnbindMobileByUin(String paramString1, long paramLong, String paramString2)
  {
    Object localObject = new WloginSimpleInfo();
    if (!GetBasicUserInfo(paramString1, (WloginSimpleInfo)localObject).booleanValue()) {
      return 64533;
    }
    long l = ((WloginSimpleInfo)localObject)._uin;
    localObject = FindUserSig(l, paramLong);
    if (localObject == null) {
      return 64532;
    }
    name_unbind localName_unbind = new name_unbind();
    TransReqContext localTransReqContext = new TransReqContext();
    localTransReqContext.set_name_func_req();
    localTransReqContext.set_subcmd(localName_unbind.get_cmd());
    localTransReqContext._body = localName_unbind.get_request(l, paramLong, ((WloginSigInfo)localObject)._sKey, paramString2.getBytes());
    return RequestTransport(0, 1, paramString1, paramLong, localName_unbind._role, localTransReqContext);
  }
  
  public int VerifyCode(String paramString, long paramLong, boolean paramBoolean, byte[] paramArrayOfByte, int[] paramArrayOfInt, int paramInt)
  {
    Object localObject = new WloginSimpleInfo();
    if (!GetBasicUserInfo(paramString, (WloginSimpleInfo)localObject).booleanValue()) {
      return 64533;
    }
    long l = ((WloginSimpleInfo)localObject)._uin;
    localObject = FindUserSig(l, paramLong);
    if (localObject == null) {
      return 64532;
    }
    verify_code localVerify_code = new verify_code();
    TransReqContext localTransReqContext = new TransReqContext();
    localTransReqContext.set_code2d_func_req();
    localTransReqContext.set_subcmd(localVerify_code.get_cmd());
    localTransReqContext._body = localVerify_code.get_request(l, paramLong, paramBoolean, paramArrayOfByte, paramArrayOfInt, ((WloginSigInfo)localObject)._TGT, this.mG._IMEI, paramInt);
    return RequestTransport(0, 1, paramString, paramLong, localVerify_code._role, localTransReqContext);
  }
  
  public class HelperHandler
    extends Handler
  {
    long mDwAppid;
    long mDwDstAppPri;
    long mDwDstAppid;
    long[] mDwDstSubAppidList;
    int mDwMainSigMap;
    long[] mDwSubAppidList;
    long mDwSubDstAppid;
    int mEncrypt;
    request_global mG;
    WtloginHelper mHelper;
    byte[] mPictureData;
    boolean mPwdMd5;
    TransReqContext mReqContext;
    long mRole;
    byte[][] mST;
    long mUIN;
    String mUserAccount;
    byte[] mUserInput;
    String mUserPasswd;
    WUserSigInfo mUserSigInfo;
    
    public HelperHandler(request_global paramRequest_global, WtloginHelper paramWtloginHelper)
    {
      this.mG = paramRequest_global;
      this.mHelper = paramWtloginHelper;
    }
    
    public void handleMessage(Message paramMessage)
    {
      int i = paramMessage.what;
      Object localObject = paramMessage.getData().getByteArray("param");
      util.LOGD(getClass().getName() + "handleMessage ReqType=" + i);
      if (this.mG._canceled != 0) {}
      for (;;)
      {
        return;
        try
        {
          j = util.ASYN_EXCEPTION;
          if (i == j)
          {
            try
            {
              localObject = new Exception(new String((byte[])localObject));
              if (this.mHelper.mListener == null) {
                break label171;
              }
              this.mHelper.mListener.OnException((Exception)localObject, paramMessage.arg1);
              return;
            }
            catch (Exception localException1)
            {
              if (this.mHelper.mListener == null) {
                break label185;
              }
            }
            this.mHelper.mListener.OnException(localException1, paramMessage.arg1);
            return;
          }
        }
        catch (Exception localException2)
        {
          int j;
          label171:
          label185:
          ObjectInputStream localObjectInputStream;
          if (this.mHelper.mListener != null)
          {
            this.mHelper.mListener.OnException(localException2, paramMessage.arg1);
            return;
            this.mHelper.OnException(localException2, paramMessage.arg1);
            return;
            this.mHelper.OnException(localException2, paramMessage.arg1);
            return;
            localObjectInputStream = new ObjectInputStream(new ByteArrayInputStream(localException2));
            if (i == util.ASYN_GET_ST_WITH_PWD)
            {
              this.mUserAccount = ((String)localObjectInputStream.readObject());
              this.mDwAppid = ((Long)localObjectInputStream.readObject()).longValue();
              this.mDwMainSigMap = ((Integer)localObjectInputStream.readObject()).intValue();
              this.mDwSubDstAppid = ((Long)localObjectInputStream.readObject()).longValue();
              this.mDwSubAppidList = ((long[])localObjectInputStream.readObject());
              this.mPwdMd5 = ((Boolean)localObjectInputStream.readObject()).booleanValue();
              this.mUserPasswd = ((String)localObjectInputStream.readObject());
              this.mUserSigInfo = ((WUserSigInfo)localObjectInputStream.readObject());
              this.mST = ((byte[][])localObjectInputStream.readObject());
              i = ((Integer)localObjectInputStream.readObject()).intValue();
              if (this.mDwSubAppidList == null)
              {
                if (this.mHelper.mListener != null)
                {
                  this.mHelper.mListener.OnGetStWithPasswd(this.mUserAccount, this.mDwAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mUserPasswd, this.mUserSigInfo, i);
                  return;
                }
                this.mHelper.OnGetStWithPasswd(this.mUserAccount, this.mDwAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mUserPasswd, this.mUserSigInfo, i);
                return;
              }
              if (this.mHelper.mListener != null)
              {
                this.mHelper.mListener.OnGetStWithPasswd(this.mUserAccount, this.mDwAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwSubAppidList, this.mUserPasswd, this.mUserSigInfo, this.mST, i);
                return;
              }
              this.mHelper.OnGetStWithPasswd(this.mUserAccount, this.mDwAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwSubAppidList, this.mUserPasswd, this.mUserSigInfo, this.mST, i);
              return;
            }
            if (i == util.ASYN_REFLUSH_IMAGE)
            {
              this.mUserAccount = ((String)localObjectInputStream.readObject());
              this.mPictureData = this.mHelper.GetPictureData(this.mUserAccount);
              i = ((Integer)localObjectInputStream.readObject()).intValue();
              if (this.mHelper.mListener != null)
              {
                this.mHelper.mListener.OnRefreshPictureData(this.mUserAccount, this.mPictureData, i);
                return;
              }
              this.mHelper.OnRefreshPictureData(this.mUserAccount, this.mPictureData, i);
              return;
            }
            if (i == util.ASYN_NEW_REFLUSH_IMAGE)
            {
              this.mUserAccount = ((String)localObjectInputStream.readObject());
              this.mUserSigInfo = ((WUserSigInfo)localObjectInputStream.readObject());
              this.mPictureData = this.mHelper.GetPictureData(this.mUserAccount);
              i = ((Integer)localObjectInputStream.readObject()).intValue();
              if (this.mHelper.mListener != null)
              {
                this.mHelper.mListener.OnRefreshPictureData(this.mUserAccount, this.mUserSigInfo, this.mPictureData, i);
                return;
              }
              this.mHelper.OnRefreshPictureData(this.mUserAccount, this.mUserSigInfo, this.mPictureData, i);
              return;
            }
            if (i == util.ASYN_REFLUSH_SMS)
            {
              this.mUserAccount = ((String)localObjectInputStream.readObject());
              this.mPictureData = this.mHelper.GetPictureData(this.mUserAccount);
              i = ((Integer)localObjectInputStream.readObject()).intValue();
              if (this.mHelper.mListener != null)
              {
                this.mHelper.mListener.OnRefreshSMSData(this.mUserAccount, this.mPictureData, i);
                return;
              }
              this.mHelper.OnRefreshSMSData(this.mUserAccount, this.mPictureData, i);
              return;
            }
            if (i == util.ASYN_CHECK_IMAGE)
            {
              this.mUserAccount = ((String)localObjectInputStream.readObject());
              this.mUserInput = ((byte[])localObjectInputStream.readObject());
              this.mUserSigInfo = ((WUserSigInfo)localObjectInputStream.readObject());
              this.mST = ((byte[][])localObjectInputStream.readObject());
              i = ((Integer)localObjectInputStream.readObject()).intValue();
              if (this.mST == null)
              {
                if (this.mHelper.mListener != null)
                {
                  this.mHelper.mListener.OnCheckPictureAndGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, i);
                  return;
                }
                this.mHelper.OnCheckPictureAndGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, i);
                return;
              }
              if (this.mHelper.mListener != null)
              {
                this.mHelper.mListener.OnCheckPictureAndGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, this.mST, i);
                return;
              }
              this.mHelper.OnCheckPictureAndGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, this.mST, i);
              return;
            }
            if (i == util.ASYN_CHECK_SMS)
            {
              this.mUserAccount = ((String)localObjectInputStream.readObject());
              this.mUserInput = ((byte[])localObjectInputStream.readObject());
              this.mUserSigInfo = ((WUserSigInfo)localObjectInputStream.readObject());
              this.mST = ((byte[][])localObjectInputStream.readObject());
              i = ((Integer)localObjectInputStream.readObject()).intValue();
              if (this.mST == null)
              {
                if (this.mHelper.mListener != null)
                {
                  this.mHelper.mListener.OnCheckSMSGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, i);
                  return;
                }
                this.mHelper.OnCheckSMSGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, i);
                return;
              }
              if (this.mHelper.mListener != null)
              {
                this.mHelper.mListener.OnCheckSMSGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, this.mST, i);
                return;
              }
              this.mHelper.OnCheckSMSGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, this.mST, i);
              return;
            }
            if (i == util.ASYN_GET_ST_WITHOUT_PWD)
            {
              this.mUserAccount = ((String)localObjectInputStream.readObject());
              this.mDwAppid = ((Long)localObjectInputStream.readObject()).longValue();
              this.mDwDstAppid = ((Long)localObjectInputStream.readObject()).longValue();
              this.mDwDstAppPri = ((Long)localObjectInputStream.readObject()).longValue();
              this.mDwMainSigMap = ((Integer)localObjectInputStream.readObject()).intValue();
              this.mDwSubDstAppid = ((Long)localObjectInputStream.readObject()).longValue();
              this.mDwDstSubAppidList = ((long[])localObjectInputStream.readObject());
              this.mUserSigInfo = ((WUserSigInfo)localObjectInputStream.readObject());
              this.mST = ((byte[][])localObjectInputStream.readObject());
              i = ((Integer)localObjectInputStream.readObject()).intValue();
              if (this.mDwDstSubAppidList == null)
              {
                if (this.mHelper.mListener != null)
                {
                  this.mHelper.mListener.OnGetStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mUserSigInfo, i);
                  return;
                }
                this.mHelper.OnGetStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mUserSigInfo, i);
                return;
              }
              if (this.mHelper.mListener != null)
              {
                this.mHelper.mListener.OnGetStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwDstSubAppidList, this.mUserSigInfo, this.mST, i);
                return;
              }
              this.mHelper.OnGetStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwDstSubAppidList, this.mUserSigInfo, this.mST, i);
              return;
            }
            if (i == util.ASYN_GET_REMOTE_ST_WITHOUT_PWD)
            {
              this.mUserAccount = ((String)localObjectInputStream.readObject());
              this.mDwAppid = ((Long)localObjectInputStream.readObject()).longValue();
              this.mDwDstAppid = ((Long)localObjectInputStream.readObject()).longValue();
              this.mDwDstAppPri = ((Long)localObjectInputStream.readObject()).longValue();
              this.mDwMainSigMap = ((Integer)localObjectInputStream.readObject()).intValue();
              this.mDwSubDstAppid = ((Long)localObjectInputStream.readObject()).longValue();
              this.mDwDstSubAppidList = ((long[])localObjectInputStream.readObject());
              this.mUserSigInfo = ((WUserSigInfo)localObjectInputStream.readObject());
              this.mST = ((byte[][])localObjectInputStream.readObject());
              i = ((Integer)localObjectInputStream.readObject()).intValue();
              if (this.mHelper.mListener != null)
              {
                this.mHelper.mListener.OnGetRemoteStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwDstSubAppidList, this.mUserSigInfo, this.mST, i);
                return;
              }
              this.mHelper.OnGetRemoteStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwDstSubAppidList, this.mUserSigInfo, this.mST, i);
              return;
            }
            if (i == util.ASYN_PING)
            {
              i = ((Integer)localObjectInputStream.readObject()).intValue();
              if (this.mHelper.mListener != null)
              {
                this.mHelper.mListener.OnInit(i);
                return;
              }
              this.mHelper.OnInit(i);
              return;
            }
            if (i != util.ASYN_REPORT)
            {
              if (i == util.ASYN_TRANSPORT)
              {
                this.mEncrypt = ((Integer)localObjectInputStream.readObject()).intValue();
                this.mUserAccount = ((String)localObjectInputStream.readObject());
                this.mDwAppid = ((Long)localObjectInputStream.readObject()).longValue();
                this.mRole = ((Long)localObjectInputStream.readObject()).longValue();
                this.mReqContext = ((TransReqContext)localObjectInputStream.readObject());
                i = ((Integer)localObjectInputStream.readObject()).intValue();
                if (this.mReqContext.is_register_req())
                {
                  this.mHelper.OnRequestRegister(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, i);
                  return;
                }
                if (this.mReqContext.is_name_func_req())
                {
                  this.mHelper.OnRequestName(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, i);
                  return;
                }
                if (this.mReqContext.is_code2d_func_req())
                {
                  this.mHelper.OnRequestCode2d(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, i);
                  return;
                }
                if (this.mHelper.mListener != null)
                {
                  this.mHelper.mListener.OnRequestTransport(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, i);
                  return;
                }
                this.mHelper.OnRequestTransport(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, i);
                return;
              }
              if (i == util.ASYN_NEW_TRANSPORT)
              {
                this.mEncrypt = ((Integer)localObjectInputStream.readObject()).intValue();
                this.mUserAccount = ((String)localObjectInputStream.readObject());
                this.mDwAppid = ((Long)localObjectInputStream.readObject()).longValue();
                this.mRole = ((Long)localObjectInputStream.readObject()).longValue();
                this.mReqContext = ((TransReqContext)localObjectInputStream.readObject());
                this.mUserSigInfo = ((WUserSigInfo)localObjectInputStream.readObject());
                i = ((Integer)localObjectInputStream.readObject()).intValue();
                if (this.mReqContext.is_oidb_func_req())
                {
                  this.mHelper.OnOidbRequest(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, this.mUserSigInfo, i);
                  return;
                }
                if (this.mHelper.mListener != null)
                {
                  this.mHelper.mListener.OnRequestTransport(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, this.mUserSigInfo, i);
                  return;
                }
                this.mHelper.OnRequestTransport(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, this.mUserSigInfo, i);
                return;
              }
              if (i == util.ASYN_TRANSPORT_MSF)
              {
                this.mEncrypt = ((Integer)localObjectInputStream.readObject()).intValue();
                this.mUserAccount = ((String)localObjectInputStream.readObject());
                this.mDwAppid = ((Long)localObjectInputStream.readObject()).longValue();
                this.mRole = ((Long)localObjectInputStream.readObject()).longValue();
                this.mReqContext = ((TransReqContext)localObjectInputStream.readObject());
                i = ((Integer)localObjectInputStream.readObject()).intValue();
                if (this.mHelper.mListener != null)
                {
                  this.mHelper.mListener.OnRequestTransport(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, i);
                  return;
                }
                this.mHelper.OnRequestTransport(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, i);
                return;
              }
              if (i != util.ASYN_TRANSPORT_PUSH)
              {
                if (i == util.ASYN_PUSH_CONNECTED)
                {
                  if (this.mHelper.mListener != null)
                  {
                    this.mHelper.mListener.OnPushConnected();
                    return;
                  }
                  this.mHelper.OnPushConnected();
                  return;
                }
                if (i == util.ASYN_PUSH_DISCONNECTED)
                {
                  if (this.mHelper.mListener != null)
                  {
                    this.mHelper.mListener.OnPushDisConnected();
                    return;
                  }
                  this.mHelper.OnPushDisConnected();
                  return;
                }
                j = util.ASYN_REPORT_ERROR;
                if (i != j) {}
              }
            }
          }
          else
          {
            this.mHelper.OnException(localObjectInputStream, paramMessage.arg1);
          }
        }
      }
    }
  }
  
  public class HelperThread
    extends Thread
  {
    long mDwAppid;
    long mDwDstAppPri;
    long mDwDstAppid;
    long[] mDwDstSubAppidList;
    int mDwMainSigMap;
    long[] mDwSubAppidList;
    long mDwSubDstAppid;
    int mEncrypt;
    Handler mHandler;
    WtloginHelper mHelper;
    byte[] mPictureData;
    boolean mPwdMd5;
    int mReportErrType;
    TransReqContext mReqContext;
    int mReqType;
    byte[][] mReserve;
    long mRole;
    byte[][] mST;
    byte[] mST1;
    byte[] mST1Key;
    long mUIN;
    String mUserAccount;
    byte[] mUserInput;
    String mUserPasswd;
    WUserSigInfo mUserSigInfo;
    
    HelperThread(WtloginHelper paramWtloginHelper, Handler paramHandler)
    {
      this.mHelper = paramWtloginHelper;
      this.mHandler = paramHandler;
    }
    
    HelperThread(WtloginHelper paramWtloginHelper, Handler paramHandler, int paramInt, String paramString, long paramLong1, long paramLong2, TransReqContext paramTransReqContext)
    {
      this.mHelper = paramWtloginHelper;
      this.mHandler = paramHandler;
      this.mEncrypt = paramInt;
      this.mUserAccount = paramString;
      this.mDwAppid = paramLong1;
      this.mRole = paramLong2;
      this.mReqContext = paramTransReqContext;
    }
    
    HelperThread(WtloginHelper paramWtloginHelper, Handler paramHandler, int paramInt, String paramString, long paramLong1, long paramLong2, TransReqContext paramTransReqContext, WUserSigInfo paramWUserSigInfo)
    {
      this.mHelper = paramWtloginHelper;
      this.mHandler = paramHandler;
      this.mEncrypt = paramInt;
      this.mUserAccount = paramString;
      this.mDwAppid = paramLong1;
      this.mRole = paramLong2;
      this.mReqContext = paramTransReqContext;
      this.mUserSigInfo = paramWUserSigInfo;
    }
    
    HelperThread(WtloginHelper paramWtloginHelper, Handler paramHandler, String paramString)
    {
      this.mHelper = paramWtloginHelper;
      this.mHandler = paramHandler;
      this.mUserAccount = paramString;
    }
    
    HelperThread(WtloginHelper paramWtloginHelper, Handler paramHandler, String paramString1, long paramLong1, int paramInt, long paramLong2, long[] paramArrayOfLong, boolean paramBoolean, String paramString2, WUserSigInfo paramWUserSigInfo, byte[][] paramArrayOfByte)
    {
      this.mHelper = paramWtloginHelper;
      this.mHandler = paramHandler;
      this.mUserAccount = paramString1;
      this.mDwAppid = paramLong1;
      this.mDwMainSigMap = paramInt;
      this.mDwSubDstAppid = paramLong2;
      this.mDwSubAppidList = paramArrayOfLong;
      this.mPwdMd5 = paramBoolean;
      this.mUserPasswd = paramString2;
      this.mUserSigInfo = paramWUserSigInfo;
      this.mST = paramArrayOfByte;
    }
    
    HelperThread(WtloginHelper paramWtloginHelper, Handler paramHandler, String paramString, long paramLong1, long paramLong2, long paramLong3, int paramInt, long paramLong4, long[] paramArrayOfLong, WUserSigInfo paramWUserSigInfo, byte[][] paramArrayOfByte1, byte[][] paramArrayOfByte2)
    {
      this.mHelper = paramWtloginHelper;
      this.mHandler = paramHandler;
      this.mUserAccount = paramString;
      this.mDwAppid = paramLong1;
      this.mDwDstAppid = paramLong2;
      this.mDwDstAppPri = paramLong3;
      this.mDwMainSigMap = paramInt;
      this.mDwSubDstAppid = paramLong4;
      this.mDwDstSubAppidList = paramArrayOfLong;
      this.mUserSigInfo = paramWUserSigInfo;
      this.mST = paramArrayOfByte1;
      this.mReserve = paramArrayOfByte2;
    }
    
    HelperThread(WtloginHelper paramWtloginHelper, Handler paramHandler, String paramString, WUserSigInfo paramWUserSigInfo)
    {
      this.mHelper = paramWtloginHelper;
      this.mHandler = paramHandler;
      this.mUserAccount = paramString;
      this.mUserSigInfo = paramWUserSigInfo;
    }
    
    HelperThread(WtloginHelper paramWtloginHelper, Handler paramHandler, String paramString, byte[] paramArrayOfByte, WUserSigInfo paramWUserSigInfo, byte[][] paramArrayOfByte1)
    {
      this.mHelper = paramWtloginHelper;
      this.mHandler = paramHandler;
      this.mUserAccount = paramString;
      this.mUserInput = paramArrayOfByte;
      this.mUserSigInfo = paramWUserSigInfo;
      this.mST = paramArrayOfByte1;
    }
    
    HelperThread(WtloginHelper paramWtloginHelper, Handler paramHandler, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, long paramLong1, long paramLong2)
    {
      this.mHelper = paramWtloginHelper;
      this.mHandler = paramHandler;
      this.mST1 = paramArrayOfByte1;
      this.mST1Key = paramArrayOfByte2;
      this.mUIN = paramLong1;
      this.mDwAppid = paramLong2;
    }
    
    HelperThread(WtloginHelper paramWtloginHelper, Handler paramHandler, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, long paramLong1, long paramLong2, int paramInt)
    {
      this.mHelper = paramWtloginHelper;
      this.mHandler = paramHandler;
      this.mST1 = paramArrayOfByte1;
      this.mST1Key = paramArrayOfByte2;
      this.mUIN = paramLong1;
      this.mDwAppid = paramLong2;
      this.mReportErrType = paramInt;
    }
    
    public void RunReq(int paramInt)
    {
      this.mReqType = paramInt;
      start();
    }
    
    public void run()
    {
      int i = this.mHelper.mG._canceled;
      try
      {
        ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
        localObject = new ObjectOutputStream(localByteArrayOutputStream);
        if (this.mReqType == util.ASYN_GET_ST_WITH_PWD)
        {
          j = this.mHelper.GetStWithPasswd(this.mUserAccount, this.mDwAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwSubAppidList, this.mPwdMd5, this.mUserPasswd, this.mUserSigInfo, this.mST, 1);
          ((ObjectOutputStream)localObject).writeObject(this.mUserAccount);
          ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwAppid));
          ((ObjectOutputStream)localObject).writeObject(new Integer(this.mDwMainSigMap));
          ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwSubDstAppid));
          ((ObjectOutputStream)localObject).writeObject(this.mDwSubAppidList);
          ((ObjectOutputStream)localObject).writeObject(new Boolean(this.mPwdMd5));
          ((ObjectOutputStream)localObject).writeObject(this.mUserPasswd);
          ((ObjectOutputStream)localObject).writeObject(this.mUserSigInfo);
          ((ObjectOutputStream)localObject).writeObject(this.mST);
          ((ObjectOutputStream)localObject).writeObject(new Integer(j));
          util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
          if (this.mHandler == null)
          {
            if (i != 0) {
              return;
            }
            if (this.mDwSubAppidList == null) {
              if (this.mHelper.mListener != null)
              {
                this.mHelper.mListener.OnGetStWithPasswd(this.mUserAccount, this.mDwAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mUserPasswd, this.mUserSigInfo, j);
                return;
              }
            }
          }
        }
      }
      catch (Exception localException1)
      {
        int j;
        Object localObject = new String("async thread exception:");
        if (this.mHandler == null)
        {
          if (i == 0)
          {
            try
            {
              Exception localException2 = new Exception((String)localObject);
              if (this.mHelper.mListener == null) {
                break label3715;
              }
              this.mHelper.mListener.OnException(localException2, this.mReqType);
              return;
            }
            catch (Exception localException3)
            {
              if (this.mHelper.mListener == null) {
                break label3728;
              }
            }
            this.mHelper.mListener.OnException(localException3, this.mReqType);
            return;
            this.mHelper.OnGetStWithPasswd(this.mUserAccount, this.mDwAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mUserPasswd, this.mUserSigInfo, j);
            return;
            if (this.mHelper.mListener != null)
            {
              this.mHelper.mListener.OnGetStWithPasswd(this.mUserAccount, this.mDwAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwSubAppidList, this.mUserPasswd, this.mUserSigInfo, this.mST, j);
              return;
            }
            this.mHelper.OnGetStWithPasswd(this.mUserAccount, this.mDwAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwSubAppidList, this.mUserPasswd, this.mUserSigInfo, this.mST, j);
            return;
            sendMsg(this.mReqType, this.mReqType, localException3.toByteArray());
            return;
            if (this.mReqType == util.ASYN_REFLUSH_IMAGE)
            {
              j = this.mHelper.RefreshPictureData(this.mUserAccount, 1);
              ((ObjectOutputStream)localObject).writeObject(this.mUserAccount);
              ((ObjectOutputStream)localObject).writeObject(new Integer(j));
              util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
              if (this.mHandler == null)
              {
                if (i == 0)
                {
                  this.mPictureData = this.mHelper.GetPictureData(this.mUserAccount);
                  if (this.mHelper.mListener != null)
                  {
                    this.mHelper.mListener.OnRefreshPictureData(this.mUserAccount, this.mPictureData, j);
                    return;
                  }
                  this.mHelper.OnRefreshPictureData(this.mUserAccount, this.mPictureData, j);
                }
              }
              else {
                sendMsg(this.mReqType, this.mReqType, localException3.toByteArray());
              }
            }
            else if (this.mReqType == util.ASYN_NEW_REFLUSH_IMAGE)
            {
              j = this.mHelper.RefreshPictureData(this.mUserAccount, this.mUserSigInfo, 1);
              ((ObjectOutputStream)localObject).writeObject(this.mUserAccount);
              ((ObjectOutputStream)localObject).writeObject(this.mUserSigInfo);
              ((ObjectOutputStream)localObject).writeObject(new Integer(j));
              util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
              if (this.mHandler == null)
              {
                if (i == 0)
                {
                  this.mPictureData = this.mHelper.GetPictureData(this.mUserAccount);
                  if (this.mHelper.mListener != null)
                  {
                    this.mHelper.mListener.OnRefreshPictureData(this.mUserAccount, this.mUserSigInfo, this.mPictureData, j);
                    return;
                  }
                  this.mHelper.OnRefreshPictureData(this.mUserAccount, this.mUserSigInfo, this.mPictureData, j);
                }
              }
              else {
                sendMsg(this.mReqType, this.mReqType, localException3.toByteArray());
              }
            }
            else if (this.mReqType == util.ASYN_REFLUSH_SMS)
            {
              j = this.mHelper.RefreshSMSData(this.mUserAccount, 1);
              ((ObjectOutputStream)localObject).writeObject(this.mUserAccount);
              ((ObjectOutputStream)localObject).writeObject(new Integer(j));
              util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
              if (this.mHandler == null)
              {
                if (i == 0)
                {
                  this.mPictureData = this.mHelper.GetPictureData(this.mUserAccount);
                  if (this.mHelper.mListener != null)
                  {
                    this.mHelper.mListener.OnRefreshSMSData(this.mUserAccount, this.mPictureData, j);
                    return;
                  }
                  this.mHelper.OnRefreshSMSData(this.mUserAccount, this.mPictureData, j);
                }
              }
              else {
                sendMsg(this.mReqType, this.mReqType, localException3.toByteArray());
              }
            }
            else if (this.mReqType == util.ASYN_CHECK_IMAGE)
            {
              j = this.mHelper.CheckPictureAndGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, this.mST, 1);
              ((ObjectOutputStream)localObject).writeObject(this.mUserAccount);
              ((ObjectOutputStream)localObject).writeObject(this.mUserInput);
              ((ObjectOutputStream)localObject).writeObject(this.mUserSigInfo);
              ((ObjectOutputStream)localObject).writeObject(this.mST);
              ((ObjectOutputStream)localObject).writeObject(new Integer(j));
              util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
              if (this.mHandler == null)
              {
                if (i == 0)
                {
                  if (this.mST == null)
                  {
                    if (this.mHelper.mListener != null)
                    {
                      this.mHelper.mListener.OnCheckPictureAndGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, j);
                      return;
                    }
                    this.mHelper.OnCheckPictureAndGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, j);
                    return;
                  }
                  if (this.mHelper.mListener != null)
                  {
                    this.mHelper.mListener.OnCheckPictureAndGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, this.mST, j);
                    return;
                  }
                  this.mHelper.OnCheckPictureAndGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, this.mST, j);
                }
              }
              else {
                sendMsg(this.mReqType, this.mReqType, localException3.toByteArray());
              }
            }
            else if (this.mReqType == util.ASYN_CHECK_SMS)
            {
              j = this.mHelper.CheckSMSGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, this.mST, 1);
              ((ObjectOutputStream)localObject).writeObject(this.mUserAccount);
              ((ObjectOutputStream)localObject).writeObject(this.mUserInput);
              ((ObjectOutputStream)localObject).writeObject(this.mUserSigInfo);
              ((ObjectOutputStream)localObject).writeObject(this.mST);
              ((ObjectOutputStream)localObject).writeObject(new Integer(j));
              util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
              if (this.mHandler == null)
              {
                if (i == 0)
                {
                  if (this.mST == null)
                  {
                    if (this.mHelper.mListener != null)
                    {
                      this.mHelper.mListener.OnCheckSMSGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, j);
                      return;
                    }
                    this.mHelper.OnCheckSMSGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, j);
                    return;
                  }
                  if (this.mHelper.mListener != null)
                  {
                    this.mHelper.mListener.OnCheckSMSGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, this.mST, j);
                    return;
                  }
                  this.mHelper.OnCheckSMSGetSt(this.mUserAccount, this.mUserInput, this.mUserSigInfo, this.mST, j);
                }
              }
              else {
                sendMsg(this.mReqType, this.mReqType, localException3.toByteArray());
              }
            }
            else if (this.mReqType == util.ASYN_GET_ST_WITHOUT_PWD)
            {
              j = this.mHelper.GetStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwDstAppPri, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwDstSubAppidList, this.mUserSigInfo, this.mST, this.mReserve, 1);
              ((ObjectOutputStream)localObject).writeObject(this.mUserAccount);
              ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwAppid));
              ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwDstAppid));
              ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwDstAppPri));
              ((ObjectOutputStream)localObject).writeObject(new Integer(this.mDwMainSigMap));
              ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwSubDstAppid));
              ((ObjectOutputStream)localObject).writeObject(this.mDwDstSubAppidList);
              ((ObjectOutputStream)localObject).writeObject(this.mUserSigInfo);
              ((ObjectOutputStream)localObject).writeObject(this.mST);
              ((ObjectOutputStream)localObject).writeObject(new Integer(j));
              util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
              if (this.mHandler == null)
              {
                if (i == 0)
                {
                  if (this.mDwDstSubAppidList == null)
                  {
                    if (this.mHelper.mListener != null)
                    {
                      this.mHelper.mListener.OnGetStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mUserSigInfo, j);
                      return;
                    }
                    this.mHelper.OnGetStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mUserSigInfo, j);
                    return;
                  }
                  if (this.mHelper.mListener != null)
                  {
                    this.mHelper.mListener.OnGetStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwDstSubAppidList, this.mUserSigInfo, this.mST, j);
                    return;
                  }
                  this.mHelper.OnGetStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwDstSubAppidList, this.mUserSigInfo, this.mST, j);
                }
              }
              else {
                sendMsg(this.mReqType, this.mReqType, localException3.toByteArray());
              }
            }
            else if (this.mReqType == util.ASYN_GET_REMOTE_ST_WITHOUT_PWD)
            {
              j = this.mHelper.GetRemoteStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwDstAppPri, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwDstSubAppidList, this.mUserSigInfo, this.mST, this.mReserve, 1);
              ((ObjectOutputStream)localObject).writeObject(this.mUserAccount);
              ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwAppid));
              ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwDstAppid));
              ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwDstAppPri));
              ((ObjectOutputStream)localObject).writeObject(new Integer(this.mDwMainSigMap));
              ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwSubDstAppid));
              ((ObjectOutputStream)localObject).writeObject(this.mDwDstSubAppidList);
              ((ObjectOutputStream)localObject).writeObject(this.mUserSigInfo);
              ((ObjectOutputStream)localObject).writeObject(this.mST);
              ((ObjectOutputStream)localObject).writeObject(new Integer(j));
              util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
              if (this.mHandler == null)
              {
                if (i == 0)
                {
                  if (this.mHelper.mListener != null)
                  {
                    this.mHelper.mListener.OnGetRemoteStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwDstSubAppidList, this.mUserSigInfo, this.mST, j);
                    return;
                  }
                  this.mHelper.OnGetRemoteStWithoutPasswd(this.mUserAccount, this.mDwAppid, this.mDwDstAppid, this.mDwMainSigMap, this.mDwSubDstAppid, this.mDwDstSubAppidList, this.mUserSigInfo, this.mST, j);
                }
              }
              else {
                sendMsg(this.mReqType, this.mReqType, localException3.toByteArray());
              }
            }
            else if (this.mReqType == util.ASYN_PING)
            {
              j = this.mHelper.RequestInit(1);
              ((ObjectOutputStream)localObject).writeObject(new Integer(j));
              util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
              if (this.mHandler == null)
              {
                if (i == 0)
                {
                  if (this.mHelper.mListener != null)
                  {
                    this.mHelper.mListener.OnInit(j);
                    return;
                  }
                  this.mHelper.OnInit(j);
                }
              }
              else {
                sendMsg(this.mReqType, this.mReqType, localException3.toByteArray());
              }
            }
            else
            {
              if (this.mReqType == util.ASYN_REPORT)
              {
                j = this.mHelper.RequestReport(1, this.mST1, this.mST1Key, this.mUIN, this.mDwAppid);
                util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
                return;
              }
              if (this.mReqType == util.ASYN_TRANSPORT)
              {
                j = this.mHelper.RequestTransport(1, this.mEncrypt, this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext);
                ((ObjectOutputStream)localObject).writeObject(new Integer(this.mEncrypt));
                ((ObjectOutputStream)localObject).writeObject(this.mUserAccount);
                ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwAppid));
                ((ObjectOutputStream)localObject).writeObject(new Long(this.mRole));
                ((ObjectOutputStream)localObject).writeObject(this.mReqContext);
                ((ObjectOutputStream)localObject).writeObject(new Integer(j));
                util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
                if (this.mHandler == null)
                {
                  if (i == 0)
                  {
                    if (this.mReqContext.is_register_req())
                    {
                      this.mHelper.OnRequestRegister(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, j);
                      return;
                    }
                    if (this.mReqContext.is_name_func_req())
                    {
                      this.mHelper.OnRequestName(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, j);
                      return;
                    }
                    if (this.mReqContext.is_code2d_func_req())
                    {
                      this.mHelper.OnRequestCode2d(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, j);
                      return;
                    }
                    if (this.mHelper.mListener != null)
                    {
                      this.mHelper.mListener.OnRequestTransport(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, j);
                      return;
                    }
                    this.mHelper.OnRequestTransport(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, j);
                  }
                }
                else {
                  sendMsg(this.mReqType, this.mReqType, localException3.toByteArray());
                }
              }
              else if (this.mReqType == util.ASYN_NEW_TRANSPORT)
              {
                j = this.mHelper.RequestTransport(1, this.mEncrypt, this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, this.mUserSigInfo);
                ((ObjectOutputStream)localObject).writeObject(new Integer(this.mEncrypt));
                ((ObjectOutputStream)localObject).writeObject(this.mUserAccount);
                ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwAppid));
                ((ObjectOutputStream)localObject).writeObject(new Long(this.mRole));
                ((ObjectOutputStream)localObject).writeObject(this.mReqContext);
                ((ObjectOutputStream)localObject).writeObject(this.mUserSigInfo);
                ((ObjectOutputStream)localObject).writeObject(new Integer(j));
                util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
                if (this.mHandler == null)
                {
                  if (i == 0)
                  {
                    if (this.mReqContext.is_oidb_func_req())
                    {
                      this.mHelper.OnOidbRequest(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, this.mUserSigInfo, j);
                      return;
                    }
                    if (this.mHelper.mListener != null)
                    {
                      this.mHelper.mListener.OnRequestTransport(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, this.mUserSigInfo, j);
                      return;
                    }
                    this.mHelper.OnRequestTransport(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, this.mUserSigInfo, j);
                  }
                }
                else {
                  sendMsg(this.mReqType, this.mReqType, localException3.toByteArray());
                }
              }
              else if (this.mReqType == util.ASYN_TRANSPORT_MSF)
              {
                j = this.mHelper.RequestTransportMsf(1, this.mEncrypt, this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext);
                ((ObjectOutputStream)localObject).writeObject(new Integer(this.mEncrypt));
                ((ObjectOutputStream)localObject).writeObject(this.mUserAccount);
                ((ObjectOutputStream)localObject).writeObject(new Long(this.mDwAppid));
                ((ObjectOutputStream)localObject).writeObject(new Long(this.mRole));
                ((ObjectOutputStream)localObject).writeObject(this.mReqContext);
                ((ObjectOutputStream)localObject).writeObject(new Integer(j));
                util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
                if (this.mHandler == null)
                {
                  if (i == 0)
                  {
                    if (this.mHelper.mListener != null)
                    {
                      this.mHelper.mListener.OnRequestTransport(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, j);
                      return;
                    }
                    this.mHelper.OnRequestTransport(this.mUserAccount, this.mDwAppid, this.mRole, this.mReqContext, j);
                  }
                }
                else {
                  sendMsg(this.mReqType, this.mReqType, localException3.toByteArray());
                }
              }
              else
              {
                if (this.mReqType == util.ASYN_REPORT_ERROR)
                {
                  j = this.mHelper.RequestReportError(1, this.mST1, this.mST1Key, this.mUIN, this.mDwAppid, this.mReportErrType);
                  util.LOGD(getClass().getName() + "run ReqType=" + this.mReqType + "ret=" + j);
                  return;
                }
                util.LOGD(getClass().getName() + "run unknown");
                return;
                label3715:
                this.mHelper.OnException(localException3, this.mReqType);
                return;
                label3728:
                this.mHelper.OnException(localException3, this.mReqType);
              }
            }
          }
        }
        else
        {
          sendMsg(util.ASYN_EXCEPTION, this.mReqType, ((String)localObject).getBytes());
          localObject = new StringWriter();
          PrintWriter localPrintWriter = new PrintWriter((Writer)localObject, true);
          localException3.printStackTrace(localPrintWriter);
          localPrintWriter.flush();
          ((StringWriter)localObject).flush();
          util.LOGW("exception", ((StringWriter)localObject).toString());
        }
      }
    }
    
    public void sendMsg(int paramInt1, int paramInt2, byte[] paramArrayOfByte)
    {
      Message localMessage = new Message();
      localMessage.what = paramInt1;
      localMessage.arg1 = paramInt2;
      Bundle localBundle = new Bundle();
      localBundle.putByteArray("param", paramArrayOfByte);
      localMessage.setData(localBundle);
      this.mHandler.sendMessage(localMessage);
    }
  }
}
