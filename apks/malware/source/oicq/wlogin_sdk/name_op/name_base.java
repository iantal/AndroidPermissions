package oicq.wlogin_sdk.name_op;

import oicq.wlogin_sdk.tools.util;

public class name_base
{
  public int _body_len = 0;
  public int _cmd = 0;
  public int _head_len = this._sms_head_len;
  public int _os_type = 5;
  public int _role = 16;
  public int _sms_head_len = 17;
  public int _sub_cmd = 0;
  public int _version = 0;
  public int _version1 = 0;
  
  public name_base() {}
  
  public int get_cmd()
  {
    return this._cmd;
  }
  
  public byte[] get_request(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
  {
    byte[] arrayOfByte = new byte[this._head_len + 1 + paramArrayOfByte2.length + paramArrayOfByte1.length];
    util.int16_to_buf(arrayOfByte, 0, this._head_len + paramArrayOfByte2.length + paramArrayOfByte1.length);
    int i = 0 + 2;
    util.int16_to_buf(arrayOfByte, i, this._cmd);
    i += 2;
    util.int16_to_buf(arrayOfByte, i, this._sub_cmd);
    i += 2;
    util.int8_to_buf(arrayOfByte, i, this._version1);
    i += 1;
    util.int8_to_buf(arrayOfByte, i, 0);
    i += 1;
    util.int32_to_buf(arrayOfByte, i, 0);
    i += 4;
    util.int16_to_buf(arrayOfByte, i, 0);
    i += 2;
    util.int8_to_buf(arrayOfByte, i, 1);
    i += 1;
    util.int16_to_buf(arrayOfByte, i, paramArrayOfByte2.length);
    System.arraycopy(paramArrayOfByte2, 0, arrayOfByte, i + 2, paramArrayOfByte2.length);
    i = paramArrayOfByte2.length + 17;
    System.arraycopy(paramArrayOfByte1, 0, arrayOfByte, i, paramArrayOfByte1.length);
    i += paramArrayOfByte1.length;
    util.int8_to_buf(arrayOfByte, i, 3);
    return arrayOfByte;
  }
  
  public byte[] get_response(int paramInt, byte[] paramArrayOfByte, name_req_status paramName_req_status)
  {
    paramInt = paramArrayOfByte.length;
    int i = util.buf_to_int16(paramArrayOfByte, 0);
    int j = 0 + 2;
    if (j >= paramInt) {}
    do
    {
      do
      {
        do
        {
          do
          {
            do
            {
              return null;
              this._cmd = util.buf_to_int16(paramArrayOfByte, j);
              j += 2;
            } while (j >= paramInt);
            this._sub_cmd = util.buf_to_int16(paramArrayOfByte, j);
            j = j + 2 + 1;
          } while (j >= paramInt);
          paramName_req_status._ret_code = util.buf_to_int8(paramArrayOfByte, j);
          j = j + 1 + 4 + 2 + 1;
        } while (j >= paramInt);
        j = util.buf_to_int16(paramArrayOfByte, j) + 17;
      } while (j >= paramInt);
      this._sms_head_len = j;
    } while (i + 1 != paramArrayOfByte.length);
    paramName_req_status = new byte[paramArrayOfByte.length - j - 1];
    System.arraycopy(paramArrayOfByte, j, paramName_req_status, 0, paramName_req_status.length);
    return paramName_req_status;
  }
}
