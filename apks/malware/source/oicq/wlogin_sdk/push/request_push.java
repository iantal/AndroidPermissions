package oicq.wlogin_sdk.push;

import android.content.Context;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.net.InetAddress;
import oicq.wlogin_sdk.request.oicq_request;
import oicq.wlogin_sdk.request.request_global;
import oicq.wlogin_sdk.tools.cryptor;
import oicq.wlogin_sdk.tools.util;

public class request_push
  extends oicq_request
{
  static String _push_save_host = null;
  private static int _seq = 0;
  public Context _context;
  private push_service _owner;
  private push_info _pinfo;
  public int _push_comm_head_len = 51;
  
  public request_push(Context paramContext, push_info paramPush_info, push_service paramPush_service)
  {
    this._cmd = 2067;
    this._sub_cmd = 0;
    this._context = paramContext;
    this._pinfo = paramPush_info;
    this._owner = paramPush_service;
    this._g = new request_global(paramContext);
  }
  
  public static void save_push_host(String paramString)
  {
    _push_save_host = paramString;
  }
  
  public String get_host()
  {
    String[] arrayOfString = new String[2];
    arrayOfString[0] = "wtlogin-push.qq.com";
    arrayOfString[1] = "wtlogin-push1.qq.com";
    return arrayOfString[Math.abs(new java.util.Random().nextInt() % arrayOfString.length)];
  }
  
  public int get_port()
  {
    return 8081;
  }
  
  byte[] get_push_cld_head(int paramInt1, byte[] paramArrayOfByte, int paramInt2, long paramLong1, long paramLong2, boolean paramBoolean)
  {
    byte[] arrayOfByte;
    if (paramArrayOfByte == null)
    {
      arrayOfByte = new byte[18];
      util.int16_to_buf(arrayOfByte, 0, arrayOfByte.length + paramInt1);
      paramInt1 = 0 + 2;
      util.int16_to_buf(arrayOfByte, paramInt1, paramInt2);
      paramInt1 += 2;
      util.int64_to_buf32(arrayOfByte, paramInt1, paramLong1);
      paramInt1 += 4;
      util.int64_to_buf32(arrayOfByte, paramInt1, paramLong2);
      paramInt1 += 4;
      if (paramArrayOfByte == null) {
        break label158;
      }
      util.int16_to_buf(arrayOfByte, paramInt1, paramArrayOfByte.length);
      System.arraycopy(paramArrayOfByte, 0, arrayOfByte, paramInt1 + 2, paramArrayOfByte.length);
      paramInt1 = paramArrayOfByte.length + 14;
      label90:
      if (!paramBoolean) {
        break label172;
      }
      util.int8_to_buf(arrayOfByte, paramInt1, 1);
      paramInt1 += 1;
    }
    for (;;)
    {
      util.int8_to_buf(arrayOfByte, paramInt1, 0);
      paramInt1 += 1;
      util.int8_to_buf(arrayOfByte, paramInt1, 0);
      paramInt1 += 1;
      util.int8_to_buf(arrayOfByte, paramInt1, 0);
      return arrayOfByte;
      arrayOfByte = new byte[paramArrayOfByte.length + 14 + 1 + 1 + 1 + 1];
      break;
      label158:
      util.int16_to_buf(arrayOfByte, paramInt1, 0);
      paramInt1 += 2;
      break label90;
      label172:
      util.int8_to_buf(arrayOfByte, paramInt1, 0);
      paramInt1 += 1;
    }
  }
  
  byte[] get_push_common_head(int paramInt1, int paramInt2, int paramInt3, long paramLong1, long paramLong2, long paramLong3, byte[] paramArrayOfByte)
  {
    byte[] arrayOfByte = new byte[this._push_comm_head_len];
    util.int16_to_buf(arrayOfByte, 0, arrayOfByte.length + paramInt1);
    paramInt1 = 0 + 2;
    util.int16_to_buf(arrayOfByte, paramInt1, 1);
    paramInt1 += 2;
    util.int16_to_buf(arrayOfByte, paramInt1, paramInt2);
    paramInt1 += 2;
    util.int32_to_buf(arrayOfByte, paramInt1, paramInt3);
    paramInt1 += 4;
    util.int8_to_buf(arrayOfByte, paramInt1, 0);
    paramInt1 += 1;
    util.int64_to_buf32(arrayOfByte, paramInt1, paramLong1);
    paramInt1 += 4;
    if (paramLong2 == 0L)
    {
      util.int64_to_buf32(arrayOfByte, paramInt1, 1L);
      paramInt1 += 4;
      util.int64_to_buf(arrayOfByte, paramInt1, paramLong3);
      paramInt1 += 8;
      if (paramArrayOfByte.length < 16) {
        break label158;
      }
      System.arraycopy(paramArrayOfByte, 0, arrayOfByte, paramInt1, 16);
    }
    for (;;)
    {
      paramInt1 = paramInt1 + 16 + 7;
      util.int8_to_buf(arrayOfByte, paramInt1, 0);
      return arrayOfByte;
      util.int64_to_buf32(arrayOfByte, paramInt1, paramLong2);
      break;
      label158:
      System.arraycopy(paramArrayOfByte, 0, arrayOfByte, paramInt1, paramArrayOfByte.length);
    }
  }
  
  public byte[] get_request_body_hello(int paramInt, long paramLong)
  {
    byte[] arrayOfByte = new byte[6];
    util.int16_to_buf(arrayOfByte, 0, paramInt);
    paramInt = 0 + 2;
    util.int64_to_buf32(arrayOfByte, paramInt, paramLong);
    return arrayOfByte;
  }
  
  public byte[] get_request_body_register(int paramInt)
  {
    int k = util.get_os_type(0);
    byte[] arrayOfByte1 = util.get_os_version();
    int j = util.SSO_VERSION;
    int i = util.get_network_type(this._context);
    byte[] arrayOfByte2 = new byte[0];
    byte[] arrayOfByte3 = util.get_apk_id(this._context);
    byte[] arrayOfByte4 = new byte[arrayOfByte1.length + 4 + 4 + 2 + 2 + 2 + arrayOfByte2.length + 1 + 2 + arrayOfByte3.length];
    util.int16_to_buf(arrayOfByte4, 0, k);
    k = 0 + 2;
    util.int16_to_buf(arrayOfByte4, k, arrayOfByte1.length);
    System.arraycopy(arrayOfByte1, 0, arrayOfByte4, k + 2, arrayOfByte1.length);
    k = arrayOfByte1.length + 4;
    util.int32_to_buf(arrayOfByte4, k, j);
    j = k + 4;
    util.int16_to_buf(arrayOfByte4, j, i);
    i = j + 2;
    util.int16_to_buf(arrayOfByte4, i, 0);
    i += 2;
    util.int16_to_buf(arrayOfByte4, i, arrayOfByte2.length);
    i += 2;
    System.arraycopy(arrayOfByte2, 0, arrayOfByte4, i, arrayOfByte2.length);
    i += arrayOfByte2.length;
    util.int8_to_buf(arrayOfByte4, i, paramInt);
    paramInt = i + 1;
    util.int16_to_buf(arrayOfByte4, paramInt, arrayOfByte3.length);
    paramInt += 2;
    System.arraycopy(arrayOfByte3, 0, arrayOfByte4, paramInt, arrayOfByte3.length);
    paramInt = arrayOfByte3.length;
    return arrayOfByte4;
  }
  
  public byte[] get_request_body_unregister(int paramInt)
  {
    byte[] arrayOfByte = new byte[2];
    util.int16_to_buf(arrayOfByte, 0, paramInt);
    return arrayOfByte;
  }
  
  public byte[] get_request_hello(long paramLong1, long paramLong2, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, byte[] paramArrayOfByte3, int paramInt)
  {
    paramArrayOfByte1 = new byte[8];
    paramArrayOfByte1[0] = 2;
    util.int16_to_buf(paramArrayOfByte1, 1, paramArrayOfByte1.length);
    util.int32_to_buf(paramArrayOfByte1, 3, paramInt);
    paramArrayOfByte1[7] = 3;
    return paramArrayOfByte1;
  }
  
  public byte[] get_request_hello_body(long paramLong1, long paramLong2, long paramLong3, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, byte[] paramArrayOfByte3, int paramInt, long paramLong4)
  {
    this._sub_cmd = 4;
    byte[] arrayOfByte = get_request_body_hello(paramInt, paramLong4);
    paramInt = arrayOfByte.length;
    int i = this._sub_cmd;
    int j = _seq;
    _seq = j + 1;
    paramArrayOfByte2 = get_st_encrypt(paramArrayOfByte2, get_push_common_head(paramInt, i, j, paramLong2, paramLong3, paramLong1, paramArrayOfByte3), arrayOfByte);
    paramArrayOfByte1 = get_push_cld_head(paramArrayOfByte2.length, paramArrayOfByte1, this._sub_cmd, paramLong2, paramLong3, false);
    paramArrayOfByte3 = new byte[paramArrayOfByte1.length + paramArrayOfByte2.length];
    System.arraycopy(paramArrayOfByte1, 0, paramArrayOfByte3, 0, paramArrayOfByte1.length);
    System.arraycopy(paramArrayOfByte2, 0, paramArrayOfByte3, paramArrayOfByte1.length, paramArrayOfByte2.length);
    return encrypt_body(paramArrayOfByte3);
  }
  
  public void get_request_push(int paramInt1, long paramLong1, long paramLong2, long paramLong3, byte[] paramArrayOfByte, int paramInt2, int paramInt3)
  {
    uin_app_info localUin_app_info = this._pinfo.get(new uin_appid(paramLong1, paramLong2, paramLong3));
    if (localUin_app_info == null) {}
    byte[] arrayOfByte;
    int i;
    do
    {
      do
      {
        do
        {
          do
          {
            do
            {
              return;
              arrayOfByte = paramArrayOfByte;
              paramInt1 = paramInt2;
              if (paramLong1 == 0L) {
                break;
              }
              arrayOfByte = get_st_decrypt(localUin_app_info._st_key, paramArrayOfByte, paramInt2, paramInt3);
            } while (arrayOfByte == null);
            paramInt1 = 0;
          } while (paramInt3 < this._push_comm_head_len);
          i = util.buf_to_int32(arrayOfByte, paramInt1 + 6);
          paramInt2 = paramInt1 + this._push_comm_head_len;
          paramInt3 -= this._push_comm_head_len;
        } while (paramInt3 < 2);
        paramInt1 = util.buf_to_int16(arrayOfByte, paramInt2);
        paramInt2 += 2;
        paramInt3 -= 2;
      } while ((paramInt3 < paramInt1) || (paramInt1 < 0));
      paramArrayOfByte = new byte[paramInt1];
      System.arraycopy(arrayOfByte, paramInt2, paramArrayOfByte, 0, paramArrayOfByte.length);
      paramInt1 = paramInt2 + paramArrayOfByte.length;
      paramInt3 -= paramArrayOfByte.length;
    } while (paramInt3 < 2);
    int j = util.buf_to_int16(arrayOfByte, paramInt1);
    paramInt2 = paramInt1 + 2;
    paramInt3 -= 2;
    push_msg[] arrayOfPush_msg = new push_msg[j];
    paramInt1 = 0;
    for (;;)
    {
      if (paramInt1 >= j)
      {
        if (!this._owner.pushCallback(paramLong1, paramLong2, paramLong3, arrayOfPush_msg)) {
          break;
        }
        this._owner.sendRequest(get_response_push(paramLong1, paramLong2, paramLong3, i, localUin_app_info._st, localUin_app_info._st_key, localUin_app_info._guid, arrayOfPush_msg, paramArrayOfByte));
        return;
      }
      arrayOfPush_msg[paramInt1] = new push_msg();
      if (paramInt3 < 8) {
        break;
      }
      arrayOfPush_msg[paramInt1]._seq = util.buf_to_int64(arrayOfByte, paramInt2);
      paramInt3 -= 8;
      if (paramInt3 < 22) {
        break;
      }
      int k = paramInt2 + 8 + 8 + 4 + 4 + 4;
      paramInt2 = util.buf_to_int16(arrayOfByte, k);
      k += 2;
      int m = paramInt3 - 8 - 4 - 4 - 4 - 2;
      if ((m < paramInt2) || (paramInt2 < 0)) {
        break;
      }
      arrayOfPush_msg[paramInt1]._status_title = new byte[paramInt2];
      System.arraycopy(arrayOfByte, k, arrayOfPush_msg[paramInt1]._status_title, 0, paramInt2);
      paramInt3 = k + paramInt2;
      k = m - paramInt2;
      if (k < 2) {
        break;
      }
      paramInt2 = util.buf_to_int16(arrayOfByte, paramInt3);
      paramInt3 += 2;
      k -= 2;
      if ((k < paramInt2) || (paramInt2 < 0)) {
        break;
      }
      arrayOfPush_msg[paramInt1]._title = new byte[paramInt2];
      System.arraycopy(arrayOfByte, paramInt3, arrayOfPush_msg[paramInt1]._title, 0, paramInt2);
      paramInt3 += paramInt2;
      k -= paramInt2;
      if (k < 2) {
        break;
      }
      paramInt2 = util.buf_to_int16(arrayOfByte, paramInt3);
      paramInt3 += 2;
      m = k - 2;
      if ((m < paramInt2) || (paramInt2 < 0)) {
        break;
      }
      arrayOfPush_msg[paramInt1]._msg = new byte[paramInt2];
      System.arraycopy(arrayOfByte, paramInt3, arrayOfPush_msg[paramInt1]._msg, 0, paramInt2);
      k = paramInt3 + paramInt2;
      paramInt2 = m - paramInt2;
      if (paramInt2 < 2) {
        break;
      }
      paramInt3 = util.buf_to_int16(arrayOfByte, k);
      k += 2;
      m = paramInt2 - 2;
      if ((m < paramInt3) || (paramInt3 < 0)) {
        break;
      }
      arrayOfPush_msg[paramInt1]._buf = new byte[paramInt3];
      System.arraycopy(arrayOfByte, k, arrayOfPush_msg[paramInt1]._buf, 0, paramInt3);
      paramInt2 = k + paramInt3;
      paramInt3 = m - paramInt3;
      paramInt1 += 1;
    }
  }
  
  public byte[] get_request_register(long paramLong1, long paramLong2, long paramLong3, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, int paramInt, byte[] paramArrayOfByte3, boolean paramBoolean)
  {
    paramArrayOfByte1 = get_request_register_body(paramLong1, paramLong2, paramLong3, paramArrayOfByte1, paramArrayOfByte2, paramInt, paramArrayOfByte3, paramBoolean);
    get_request(this._default_client_version, this._cmd, this._default_client_seq, paramLong1, this._default_ext_retry, this._default_ext_type, 0, this._default_ext_instance, paramArrayOfByte1);
    return get_buf();
  }
  
  public byte[] get_request_register_body(long paramLong1, long paramLong2, long paramLong3, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, int paramInt, byte[] paramArrayOfByte3, boolean paramBoolean)
  {
    byte[] arrayOfByte;
    int i;
    int j;
    if (paramLong1 != 0L)
    {
      this._sub_cmd = 1;
      arrayOfByte = get_request_body_register(paramInt);
      paramInt = arrayOfByte.length;
      i = this._sub_cmd;
      j = _seq;
      _seq = j + 1;
      paramArrayOfByte2 = get_st_encrypt(paramArrayOfByte2, get_push_common_head(paramInt, i, j, paramLong2, paramLong3, paramLong1, paramArrayOfByte3), arrayOfByte);
      paramArrayOfByte3 = get_push_cld_head(paramArrayOfByte2.length, paramArrayOfByte1, this._sub_cmd, paramLong2, paramLong3, paramBoolean);
      paramArrayOfByte1 = new byte[paramArrayOfByte3.length + paramArrayOfByte2.length];
      System.arraycopy(paramArrayOfByte3, 0, paramArrayOfByte1, 0, paramArrayOfByte3.length);
      System.arraycopy(paramArrayOfByte2, 0, paramArrayOfByte1, paramArrayOfByte3.length, paramArrayOfByte2.length);
    }
    for (;;)
    {
      return encrypt_body(paramArrayOfByte1);
      this._sub_cmd = 81;
      arrayOfByte = get_request_body_register(paramInt);
      paramInt = arrayOfByte.length;
      i = this._sub_cmd;
      j = _seq;
      _seq = j + 1;
      paramArrayOfByte3 = get_push_common_head(paramInt, i, j, paramLong2, paramLong3, paramLong1, paramArrayOfByte3);
      paramArrayOfByte2 = new byte[arrayOfByte.length + paramArrayOfByte3.length];
      System.arraycopy(paramArrayOfByte3, 0, paramArrayOfByte2, 0, paramArrayOfByte3.length);
      System.arraycopy(arrayOfByte, 0, paramArrayOfByte2, paramArrayOfByte3.length, arrayOfByte.length);
      paramArrayOfByte3 = get_push_cld_head(paramArrayOfByte2.length, paramArrayOfByte1, this._sub_cmd, paramLong2, paramLong3, paramBoolean);
      paramArrayOfByte1 = new byte[paramArrayOfByte3.length + paramArrayOfByte2.length];
      System.arraycopy(paramArrayOfByte3, 0, paramArrayOfByte1, 0, paramArrayOfByte3.length);
      System.arraycopy(paramArrayOfByte2, 0, paramArrayOfByte1, paramArrayOfByte3.length, paramArrayOfByte2.length);
    }
  }
  
  public byte[] get_request_unregister(long paramLong1, long paramLong2, long paramLong3, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, int paramInt, byte[] paramArrayOfByte3)
  {
    paramArrayOfByte1 = get_request_unregister_body(paramLong1, paramLong2, paramLong3, paramArrayOfByte1, paramArrayOfByte2, paramInt, paramArrayOfByte3);
    get_request(this._default_client_version, this._cmd, this._default_client_seq, paramLong1, this._default_ext_retry, this._default_ext_type, 0, this._default_ext_instance, paramArrayOfByte1);
    return get_buf();
  }
  
  public byte[] get_request_unregister_body(long paramLong1, long paramLong2, long paramLong3, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, int paramInt, byte[] paramArrayOfByte3)
  {
    byte[] arrayOfByte;
    int i;
    int j;
    if (paramLong1 != 0L)
    {
      this._sub_cmd = 2;
      arrayOfByte = get_request_body_unregister(paramInt);
      paramInt = arrayOfByte.length;
      i = this._sub_cmd;
      j = _seq;
      _seq = j + 1;
      paramArrayOfByte2 = get_st_encrypt(paramArrayOfByte2, get_push_common_head(paramInt, i, j, paramLong2, paramLong3, paramLong1, paramArrayOfByte3), arrayOfByte);
      paramArrayOfByte3 = get_push_cld_head(paramArrayOfByte2.length, paramArrayOfByte1, this._sub_cmd, paramLong2, paramLong3, false);
      paramArrayOfByte1 = new byte[paramArrayOfByte3.length + paramArrayOfByte2.length];
      System.arraycopy(paramArrayOfByte3, 0, paramArrayOfByte1, 0, paramArrayOfByte3.length);
      System.arraycopy(paramArrayOfByte2, 0, paramArrayOfByte1, paramArrayOfByte3.length, paramArrayOfByte2.length);
    }
    for (;;)
    {
      return encrypt_body(paramArrayOfByte1);
      this._sub_cmd = 82;
      arrayOfByte = get_request_body_unregister(paramInt);
      paramInt = arrayOfByte.length;
      i = this._sub_cmd;
      j = _seq;
      _seq = j + 1;
      paramArrayOfByte3 = get_push_common_head(paramInt, i, j, paramLong2, paramLong3, paramLong1, paramArrayOfByte3);
      paramArrayOfByte2 = new byte[paramArrayOfByte3.length + arrayOfByte.length];
      System.arraycopy(paramArrayOfByte3, 0, paramArrayOfByte2, 0, paramArrayOfByte3.length);
      System.arraycopy(arrayOfByte, 0, paramArrayOfByte2, paramArrayOfByte3.length, arrayOfByte.length);
      paramArrayOfByte3 = get_push_cld_head(paramArrayOfByte2.length, paramArrayOfByte1, this._sub_cmd, paramLong2, paramLong3, false);
      paramArrayOfByte1 = new byte[paramArrayOfByte3.length + paramArrayOfByte2.length];
      System.arraycopy(paramArrayOfByte3, 0, paramArrayOfByte1, 0, paramArrayOfByte3.length);
      System.arraycopy(paramArrayOfByte2, 0, paramArrayOfByte1, paramArrayOfByte3.length, paramArrayOfByte2.length);
    }
  }
  
  public int get_response(byte[] paramArrayOfByte, int paramInt)
  {
    byte[] arrayOfByte = new byte[16];
    if (paramInt <= this._rsp_head_len + 16 + 2) {
      return 64527;
    }
    long l = util.buf_to_int32(paramArrayOfByte, 9);
    int i = util.buf_to_int16(paramArrayOfByte, 5);
    this._rsp_body_len = (paramInt - this._rsp_head_len - 16 - 2);
    set_buf(paramArrayOfByte, paramInt);
    System.arraycopy(paramArrayOfByte, this._rsp_head_len + 1, arrayOfByte, 0, 16);
    paramInt = decrypt_body(this._buf, this._rsp_head_len + 1 + 16, this._rsp_body_len, arrayOfByte);
    if (paramInt < 0) {
      return paramInt;
    }
    return get_response_body(l & 0xFFFFFFFF, i & 0xFFFF, this._buf, this._rsp_head_len + 1 + 16, this._rsp_body_len);
  }
  
  public int get_response_body(long paramLong, int paramInt1, byte[] paramArrayOfByte, int paramInt2, int paramInt3)
  {
    if (paramInt3 < 16) {
      return 64527;
    }
    paramInt3 = util.buf_to_int16(paramArrayOfByte, paramInt2);
    paramInt1 = paramInt2 + 2;
    this._sub_cmd = util.buf_to_int16(paramArrayOfByte, paramInt1);
    paramInt1 += 2;
    long l1 = util.buf_to_int32(paramArrayOfByte, paramInt1) & 0xFFFFFFFF;
    paramInt1 += 4;
    long l2 = util.buf_to_int32(paramArrayOfByte, paramInt1) & 0xFFFFFFFF;
    paramInt2 = paramInt1 + 4;
    paramInt1 = get_response_ret_code(paramArrayOfByte, paramInt2);
    int i = paramInt2 + 1 + 2;
    paramInt2 = util.buf_to_int8(paramArrayOfByte, i);
    int j = paramInt3 - 2 - 2 - 4 - 4 - 1 - 2 - 1;
    if (j < paramInt2) {
      return 64527;
    }
    paramInt3 = i + 1 + paramInt2;
    i = j - paramInt2;
    set_err_msg(null);
    util.LOGD(getClass().getName(), "type=" + paramInt1);
    if ((this._sub_cmd == 1) || (this._sub_cmd == 81))
    {
      get_response_register(paramInt1, paramLong, l1, l2, paramArrayOfByte, paramInt3, i);
      paramInt2 = paramInt1;
      if (paramInt1 == 1) {
        paramInt2 = 64436;
      }
    }
    for (;;)
    {
      return paramInt2;
      if ((this._sub_cmd == 2) || (this._sub_cmd == 82))
      {
        get_response_unregister(paramInt1, paramLong, l1);
        paramInt2 = paramInt1;
      }
      else if (this._sub_cmd == 4)
      {
        get_response_hello(paramInt1, paramLong, l1);
        paramInt2 = paramInt1;
      }
      else if (this._sub_cmd != 512)
      {
        paramInt2 = paramInt1;
        if (this._sub_cmd != 592) {}
      }
      else
      {
        get_request_push(paramInt1, paramLong, l1, l2, paramArrayOfByte, paramInt3, i);
        paramInt2 = paramInt1;
      }
    }
  }
  
  public byte[] get_response_body_push(push_msg[] paramArrayOfPush_msg, byte[] paramArrayOfByte)
  {
    byte[] arrayOfByte = new byte[paramArrayOfByte.length + 2 + 4 + 2 + paramArrayOfPush_msg.length * 20];
    util.int16_to_buf(arrayOfByte, 0, paramArrayOfByte.length);
    System.arraycopy(paramArrayOfByte, 0, arrayOfByte, 0 + 2, paramArrayOfByte.length);
    int i = paramArrayOfByte.length + 2;
    util.int64_to_buf32(arrayOfByte, i, System.currentTimeMillis() / 1000L);
    i += 4;
    util.int16_to_buf(arrayOfByte, i, paramArrayOfPush_msg.length);
    int j = i + 2;
    i = 0;
    for (;;)
    {
      if (i >= paramArrayOfPush_msg.length) {
        return arrayOfByte;
      }
      util.int64_to_buf(arrayOfByte, j, paramArrayOfPush_msg[i]._seq);
      j += 8;
      util.int32_to_buf(arrayOfByte, j, 0);
      j = j + 4 + 8;
      i += 1;
    }
  }
  
  public void get_response_hello(int paramInt, long paramLong1, long paramLong2) {}
  
  public byte[] get_response_push(long paramLong1, long paramLong2, long paramLong3, int paramInt, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, byte[] paramArrayOfByte3, push_msg[] paramArrayOfPush_msg, byte[] paramArrayOfByte4)
  {
    paramArrayOfByte1 = get_response_push_body(paramLong1, paramLong2, paramLong3, paramInt, paramArrayOfByte1, paramArrayOfByte2, paramArrayOfByte3, paramArrayOfPush_msg, paramArrayOfByte4);
    get_request(this._default_client_version, this._cmd, this._default_client_seq, paramLong1, this._default_ext_retry, this._default_ext_type, 0, this._default_ext_instance, paramArrayOfByte1);
    return get_buf();
  }
  
  public byte[] get_response_push_body(long paramLong1, long paramLong2, long paramLong3, int paramInt, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, byte[] paramArrayOfByte3, push_msg[] paramArrayOfPush_msg, byte[] paramArrayOfByte4)
  {
    if (paramLong1 != 0L)
    {
      this._sub_cmd = 512;
      paramArrayOfPush_msg = get_response_body_push(paramArrayOfPush_msg, paramArrayOfByte4);
      paramArrayOfByte2 = get_st_encrypt(paramArrayOfByte2, get_push_common_head(paramArrayOfPush_msg.length, this._sub_cmd, paramInt, paramLong2, paramLong3, paramLong1, paramArrayOfByte3), paramArrayOfPush_msg);
      paramArrayOfByte3 = get_push_cld_head(paramArrayOfByte2.length, paramArrayOfByte1, this._sub_cmd, paramLong2, paramLong3, false);
      paramArrayOfByte1 = new byte[paramArrayOfByte3.length + paramArrayOfByte2.length];
      System.arraycopy(paramArrayOfByte3, 0, paramArrayOfByte1, 0, paramArrayOfByte3.length);
      System.arraycopy(paramArrayOfByte2, 0, paramArrayOfByte1, paramArrayOfByte3.length, paramArrayOfByte2.length);
    }
    for (;;)
    {
      return encrypt_body(paramArrayOfByte1);
      this._sub_cmd = 592;
      paramArrayOfPush_msg = get_response_body_push(paramArrayOfPush_msg, paramArrayOfByte4);
      paramArrayOfByte3 = get_push_common_head(paramArrayOfPush_msg.length, this._sub_cmd, paramInt, paramLong2, paramLong3, paramLong1, paramArrayOfByte3);
      paramArrayOfByte2 = new byte[paramArrayOfByte3.length + paramArrayOfPush_msg.length];
      System.arraycopy(paramArrayOfByte3, 0, paramArrayOfByte2, 0, paramArrayOfByte3.length);
      System.arraycopy(paramArrayOfPush_msg, 0, paramArrayOfByte2, paramArrayOfByte3.length, paramArrayOfPush_msg.length);
      paramArrayOfByte3 = get_push_cld_head(paramArrayOfByte2.length, paramArrayOfByte1, this._sub_cmd, paramLong2, paramLong3, false);
      paramArrayOfByte1 = new byte[paramArrayOfByte3.length + paramArrayOfByte2.length];
      System.arraycopy(paramArrayOfByte3, 0, paramArrayOfByte1, 0, paramArrayOfByte3.length);
      System.arraycopy(paramArrayOfByte2, 0, paramArrayOfByte1, paramArrayOfByte3.length, paramArrayOfByte2.length);
    }
  }
  
  public void get_response_register(int paramInt1, long paramLong1, long paramLong2, long paramLong3, byte[] paramArrayOfByte, int paramInt2, int paramInt3)
  {
    if (paramInt1 == 0) {
      this._pinfo.set_reg(paramLong1, paramLong2, paramLong3, true);
    }
    do
    {
      do
      {
        return;
      } while ((paramInt1 != 1) || (paramInt3 < 8));
      paramInt2 += 2;
      paramInt1 = util.buf_to_int16(paramArrayOfByte, paramInt2);
      paramInt2 += 2;
      paramInt3 = paramInt3 - 2 - 2;
    } while ((paramInt3 < paramInt1) || (paramInt1 < 0));
    byte[] arrayOfByte = new byte[paramInt1];
    System.arraycopy(paramArrayOfByte, paramInt2, arrayOfByte, 0, paramInt1);
    save_push_host(new String(arrayOfByte));
  }
  
  public void get_response_unregister(int paramInt, long paramLong1, long paramLong2) {}
  
  byte[] get_st_decrypt(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, int paramInt1, int paramInt2)
  {
    byte[] arrayOfByte = new byte[paramInt2];
    System.arraycopy(paramArrayOfByte2, paramInt1, arrayOfByte, 0, paramInt2);
    return cryptor.decrypt(arrayOfByte, 0, arrayOfByte.length, paramArrayOfByte1);
  }
  
  byte[] get_st_encrypt(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, byte[] paramArrayOfByte3)
  {
    byte[] arrayOfByte = new byte[paramArrayOfByte2.length + paramArrayOfByte3.length];
    System.arraycopy(paramArrayOfByte2, 0, arrayOfByte, 0, paramArrayOfByte2.length);
    System.arraycopy(paramArrayOfByte3, 0, arrayOfByte, paramArrayOfByte2.length, paramArrayOfByte3.length);
    return cryptor.encrypt(arrayOfByte, 0, arrayOfByte.length, paramArrayOfByte1);
  }
  
  public InetAddress resolve_server_addr(int paramInt)
  {
    String str;
    int i;
    Object localObject;
    if ((_test_push != 0) && (_test_push_host != null) && (_test_push_host.length() > 0)) {
      if ((_push_save_host != null) && (_push_save_host.length() > 0))
      {
        str = _push_save_host;
        i = 0;
        localObject = null;
      }
    }
    for (;;)
    {
      if (i >= 3) {}
      for (;;)
      {
        if (i < 3) {
          break label220;
        }
        util.LOGD("resolve_server_addr failed", "tryno:" + paramInt + " ret:" + 64529);
        return null;
        str = _test_push_host;
        break;
        if (paramInt < 1)
        {
          if ((_push_save_host == null) || (_push_save_host.length() <= 0)) {
            return null;
          }
          str = _push_save_host;
          break;
        }
        if (paramInt < 2)
        {
          str = get_host();
          break;
        }
        str = get_host();
        break;
        try
        {
          InetAddress localInetAddress = InetAddress.getByName(str);
          localObject = localInetAddress;
        }
        catch (Exception localException)
        {
          StringWriter localStringWriter = new StringWriter();
          PrintWriter localPrintWriter = new PrintWriter(localStringWriter, true);
          localException.printStackTrace(localPrintWriter);
          localPrintWriter.flush();
          localStringWriter.flush();
          util.LOGD("exception", localStringWriter.toString());
          i += 1;
        }
      }
    }
    label220:
    util.LOGD("resolve_server_addr OK", "host:" + str + " tryno:" + paramInt);
    _push_save_host = str;
    return localObject;
  }
}
