package oicq.wlogin_sdk.sharemem;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import android.os.RemoteException;
import java.util.ArrayList;
import java.util.List;
import oicq.wlogin_sdk.request.WtloginHelper;
import oicq.wlogin_sdk.request.account_sig_info_map;
import oicq.wlogin_sdk.tools.util;

public class sharemem_service
  extends Service
{
  private static final String TAG = "sharemem_service";
  private account_sig_info_map _account_sig_info_map = new account_sig_info_map(null);
  private server_callback _callback;
  private WtloginHelper _login_helper = null;
  private int count = 0;
  private final sharemem_service_aidl.Stub mBinder = new sharemem_service_aidl.Stub()
  {
    public void clear_account(String paramAnonymousString)
    {
      sharemem_service.this._account_sig_info_map.clear_account(paramAnonymousString);
    }
    
    public void clear_sig(long paramAnonymousLong1, long paramAnonymousLong2)
    {
      sharemem_service.this._account_sig_info_map.clear_sig(Long.valueOf(paramAnonymousLong1), Long.valueOf(paramAnonymousLong2));
    }
    
    public List<WloginRemoteData> get_all_logined_account(long paramAnonymousLong, long[] paramAnonymousArrayOfLong, WloginRemoteData paramAnonymousWloginRemoteData)
      throws RemoteException
    {
      paramAnonymousWloginRemoteData = new ArrayList();
      int i = 0;
      if ((paramAnonymousArrayOfLong == null) || (i >= paramAnonymousArrayOfLong.length))
      {
        paramAnonymousArrayOfLong = null;
        paramAnonymousWloginRemoteData = sharemem_service.this._account_sig_info_map.get_all_logined_account(paramAnonymousLong, paramAnonymousWloginRemoteData, false);
        if (paramAnonymousWloginRemoteData != null)
        {
          paramAnonymousArrayOfLong = new ArrayList();
          i = 0;
        }
      }
      for (;;)
      {
        if (i >= paramAnonymousWloginRemoteData.size())
        {
          util.LOGI("get_all_logined_account size=" + paramAnonymousArrayOfLong.size());
          return paramAnonymousArrayOfLong;
          paramAnonymousWloginRemoteData.add(Long.valueOf(paramAnonymousArrayOfLong[i]));
          i += 1;
          break;
        }
        paramAnonymousArrayOfLong.add(((WloginLoginInfo)paramAnonymousWloginRemoteData.get(i)).getWloginRemoteData());
        i += 1;
      }
    }
    
    public int get_siginfo_remote(String paramAnonymousString, long paramAnonymousLong1, long paramAnonymousLong2, long paramAnonymousLong3, long paramAnonymousLong4, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3, int paramAnonymousInt4, long[] paramAnonymousArrayOfLong, byte[] paramAnonymousArrayOfByte1, long paramAnonymousLong5, long paramAnonymousLong6, long paramAnonymousLong7, byte[] paramAnonymousArrayOfByte2, byte[] paramAnonymousArrayOfByte3, byte[] paramAnonymousArrayOfByte4, WloginRemoteData paramAnonymousWloginRemoteData, List<WloginRemoteData> paramAnonymousList)
      throws RemoteException
    {
      int i = sharemem_service_aidl.Stub.getCallingPid();
      paramAnonymousArrayOfByte1 = util.getPkgNameFromPid(sharemem_service.this, i).getBytes();
      paramAnonymousArrayOfByte2 = util.get_apk_v(sharemem_service.this, new String(paramAnonymousArrayOfByte1));
      paramAnonymousArrayOfByte3 = util.getPkgPublicKeyFromPid(sharemem_service.this, i);
      return sharemem_service.this._login_helper.StubGetRemoteStWithoutPasswd(paramAnonymousString, paramAnonymousLong1, paramAnonymousLong2, paramAnonymousLong3, paramAnonymousLong4, paramAnonymousInt1, paramAnonymousInt2, paramAnonymousInt3, paramAnonymousInt4, paramAnonymousArrayOfLong, paramAnonymousArrayOfByte1, paramAnonymousLong5, paramAnonymousLong6, paramAnonymousLong7, paramAnonymousArrayOfByte2, paramAnonymousArrayOfByte3, paramAnonymousArrayOfByte4, paramAnonymousList, sharemem_service.this._account_sig_info_map);
    }
    
    public void put_account(String paramAnonymousString, long paramAnonymousLong, WloginRemoteData paramAnonymousWloginRemoteData)
      throws RemoteException
    {
      util.LOGI("put_account: name:" + paramAnonymousString + ",uin:" + paramAnonymousLong);
      sharemem_service.this._account_sig_info_map.put_account(paramAnonymousString, Long.valueOf(paramAnonymousLong));
    }
    
    public int put_siginfo(long paramAnonymousLong1, long paramAnonymousLong2, WloginRemoteData paramAnonymousWloginRemoteData1, WloginRemoteData paramAnonymousWloginRemoteData2)
      throws RemoteException
    {
      try
      {
        util.LOGI("put_siginfo1 : uin:" + paramAnonymousLong1 + ",appid:" + paramAnonymousLong2 + " caller:" + sharemem_service_aidl.Stub.getCallingPid() + "," + sharemem_service_aidl.Stub.getCallingUid(), sharemem_service.this.getApplicationContext(), paramAnonymousLong1, 0);
        paramAnonymousWloginRemoteData1.getLongData();
        List localList1 = paramAnonymousWloginRemoteData1.getByteData();
        if ((localList1 != null) && (localList1.size() >= 4))
        {
          paramAnonymousWloginRemoteData1 = null;
          int i;
          if (localList1.size() > 4)
          {
            paramAnonymousWloginRemoteData1 = new byte[localList1.size() - 4][];
            i = 4;
          }
          List localList2;
          List localList3;
          for (;;)
          {
            if (i >= localList1.size())
            {
              localList2 = paramAnonymousWloginRemoteData2.getLongData();
              localList3 = paramAnonymousWloginRemoteData2.getByteData();
              if (localList2 == null) {
                break label574;
              }
              if (localList2.size() >= 4) {
                break;
              }
              break label574;
            }
            paramAnonymousWloginRemoteData1[(i - 4)] = ((byte[])localList1.get(i));
            i += 1;
          }
          if ((localList3 == null) || (localList3.size() < 12)) {
            break label578;
          }
          paramAnonymousWloginRemoteData2 = null;
          if (localList3.size() > 12)
          {
            paramAnonymousWloginRemoteData2 = new byte[localList3.size() - 12][];
            i = 16;
          }
          for (;;)
          {
            if (i >= localList3.size()) {
              return sharemem_service.this._account_sig_info_map.put_siginfo(paramAnonymousLong1, paramAnonymousLong2, ((Long)localList2.get(0)).longValue(), ((Long)localList2.get(1)).longValue(), ((Long)localList2.get(2)).longValue(), ((Long)localList2.get(3)).longValue(), (byte[])localList1.get(0), (byte[])localList1.get(1), (byte[])localList1.get(2), (byte[])localList1.get(3), paramAnonymousWloginRemoteData1, (byte[])localList3.get(0), (byte[])localList3.get(1), (byte[])localList3.get(2), (byte[])localList3.get(3), (byte[])localList3.get(4), (byte[])localList3.get(5), (byte[])localList3.get(6), (byte[])localList3.get(7), (byte[])localList3.get(8), (byte[])localList3.get(9), (byte[])localList3.get(10), (byte[])localList3.get(11), paramAnonymousWloginRemoteData2, null);
            }
            paramAnonymousWloginRemoteData2[(i - 12)] = ((byte[])localList3.get(i));
            i += 1;
          }
        }
        return 64517;
      }
      catch (Exception paramAnonymousWloginRemoteData1)
      {
        util.printException(paramAnonymousWloginRemoteData1);
        return 64516;
      }
      label574:
      return 64517;
      label578:
      return 64517;
    }
    
    public int register_callback(server_callback paramAnonymousServer_callback, long paramAnonymousLong1, long paramAnonymousLong2, WloginRemoteData paramAnonymousWloginRemoteData)
      throws RemoteException
    {
      util.LOGI("service register_callback: calling pid=" + sharemem_service_aidl.Stub.getCallingPid() + ", calling uid=" + sharemem_service_aidl.Stub.getCallingUid());
      sharemem_service.this._callback = paramAnonymousServer_callback;
      sharemem_service.this._callback.request_check_apk(123456, new WloginRemoteData());
      return 0;
    }
    
    public int set_share_test(int paramAnonymousInt, String paramAnonymousString)
      throws RemoteException
    {
      util.LOGI("service set_share_test:" + paramAnonymousInt + "," + paramAnonymousString + "calling pid=" + sharemem_service_aidl.Stub.getCallingPid() + ", calling uid=" + sharemem_service_aidl.Stub.getCallingUid());
      sharemem_service.this._login_helper.SetTestHost(paramAnonymousInt, paramAnonymousString);
      return 0;
    }
  };
  
  public sharemem_service() {}
  
  public IBinder onBind(Intent paramIntent)
  {
    util.LOGI("service on bind:pid=" + sharemem_service_aidl.Stub.getCallingPid() + "," + "uid=" + sharemem_service_aidl.Stub.getCallingUid());
    return this.mBinder;
  }
  
  public void onCreate()
  {
    util.LOGI("service create");
    this._login_helper = new WtloginHelper(getApplicationContext(), 1);
    Intent localIntent = new Intent(sharemem_client.SHAREMEM_GET_UINFO_RECEIVED);
    getApplicationContext().sendBroadcast(localIntent);
    util.LOGI("onCreate sendBroadcast for SHAREMEM_GET_UINFO_RECEIVED");
  }
  
  public void onDestroy()
  {
    util.LOGI("service on destroy");
    super.onDestroy();
  }
  
  public void onRebind(Intent paramIntent)
  {
    util.LOGI("service on rebind");
    super.onRebind(paramIntent);
  }
  
  public void onStart(Intent paramIntent, int paramInt)
  {
    util.LOGI("service start id=" + paramInt);
    super.onStart(paramIntent, paramInt);
  }
  
  public boolean onUnbind(Intent paramIntent)
  {
    util.LOGI("service on unbind");
    return super.onUnbind(paramIntent);
  }
}
