package cn.yyf.utils;

import android.text.TextUtils;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Random;

public class b
{
  public static String a = null;
  private static final String b = b.class.getName();
  private static File c = null;
  
  public b() {}
  
  public static boolean a(InputStream paramInputStream, String paramString)
  {
    paramString = c(paramString);
    new Random().nextInt(2048);
    try
    {
      paramString = new FileOutputStream(paramString);
      byte[] arrayOfByte = new byte['Ð€'];
      for (;;)
      {
        int i = paramInputStream.read(arrayOfByte);
        if (i == -1)
        {
          paramString.flush();
          paramString.close();
          paramInputStream.close();
          return true;
        }
        paramString.write(arrayOfByte, 0, i);
      }
      return false;
    }
    catch (FileNotFoundException paramInputStream)
    {
      paramInputStream.printStackTrace();
      return false;
    }
    catch (IOException paramInputStream)
    {
      paramInputStream.printStackTrace();
    }
  }
  
  public static boolean a(String paramString)
  {
    return new File(paramString).exists();
  }
  
  public static boolean b(String paramString)
  {
    boolean bool4 = false;
    boolean bool5 = false;
    boolean bool3 = false;
    boolean bool2 = bool4;
    boolean bool1 = bool5;
    for (;;)
    {
      try
      {
        if (!TextUtils.isEmpty(paramString))
        {
          bool1 = bool5;
          localObject1 = new File(paramString);
          bool2 = bool4;
          bool1 = bool5;
          if (((File)localObject1).isDirectory())
          {
            bool1 = bool5;
            localObject2 = new File(paramString).listFiles();
            bool1 = bool5;
            int j = localObject2.length;
            i = 0;
            bool1 = bool3;
            if (i < j) {
              continue;
            }
          }
        }
      }
      catch (Exception paramString)
      {
        Object localObject1;
        Object localObject2;
        int i;
        continue;
      }
      try
      {
        paramString = ((File)localObject1).getName();
        bool2 = ((File)localObject1).delete();
        bool1 = bool2;
        localObject1 = b;
        bool1 = bool2;
        localObject2 = new StringBuilder("delete dir").append(paramString);
        if (bool2)
        {
          paramString = " success";
          bool1 = bool2;
          Tool.a((String)localObject1, paramString);
          return bool2;
          paramString = localObject2[i].getName();
          bool2 = localObject2[i].delete();
          bool1 = bool2;
        }
        try
        {
          String str = b;
          StringBuilder localStringBuilder = new StringBuilder("delete file").append(paramString);
          if (bool1)
          {
            paramString = " success";
            Tool.a(str, paramString);
            i += 1;
          }
          else
          {
            paramString = " fail";
            continue;
            paramString = "fail";
          }
        }
        catch (Exception paramString) {}
      }
      catch (Exception paramString) {}
    }
    paramString.printStackTrace();
    return bool1;
  }
  
  private static File c(String paramString)
  {
    paramString = new File(paramString);
    File localFile = paramString.getParentFile();
    if (!localFile.exists()) {
      localFile.mkdirs();
    }
    try
    {
      if (!paramString.exists()) {
        paramString.createNewFile();
      }
      return paramString;
    }
    catch (IOException localIOException)
    {
      localIOException.printStackTrace();
    }
    return paramString;
  }
}
