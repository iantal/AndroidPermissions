package cn.domob.android.a;

import android.content.Context;
import cn.domob.android.ads.H;
import java.io.File;
import java.net.HttpURLConnection;
import java.net.Proxy;
import java.net.URL;

class f
  extends Thread
{
  private static H d = new H(f.class.getSimpleName());
  String a;
  String b;
  String c;
  private int e = 0;
  private int f;
  private int g;
  private int h = 1;
  private int i = 0;
  private d j = null;
  private boolean k;
  private long l = 0L;
  private a m = new a();
  private Context n = null;
  
  public f(String paramString1, String paramString2, long paramLong, d paramD, Context paramContext)
  {
    this.a = paramString1;
    this.c = paramString2;
    this.l = paramLong;
    this.j = paramD;
    this.n = paramContext;
    d.b(f.class.getSimpleName(), "build DownloadTask url=" + paramString1 + ",fileName=" + paramString2);
  }
  
  protected boolean a()
  {
    return this.k;
  }
  
  protected void b()
  {
    this.m.a = true;
  }
  
  public void run()
  {
    g[] arrayOfG = new g[this.h];
    URL localURL;
    try
    {
      localURL = new URL(this.a);
      Object localObject = e.b(this.n);
      if (localObject != null) {
        d.a(this, "Use Proxy");
      }
      for (localObject = (HttpURLConnection)localURL.openConnection((Proxy)localObject);; localObject = (HttpURLConnection)localURL.openConnection())
      {
        ((HttpURLConnection)localObject).setRequestMethod("HEAD");
        i1 = ((HttpURLConnection)localObject).getResponseCode();
        if ((i1 < 200) || (i1 >= 300)) {
          break;
        }
        this.e = ((HttpURLConnection)localObject).getContentLength();
        d.a(this, "Total file size: " + this.e);
        if (this.e > 0) {
          break label186;
        }
        this.j.a("下载连接过程中出现错误");
        return;
        d.a(this, "Proxy is null");
      }
      this.j.a("下载连接过程中出现错误");
      return;
    }
    catch (Exception localException)
    {
      d.a(localException);
      this.j.a("下载过程中出现错误");
      return;
    }
    label186:
    d.b(f.class.getSimpleName(), "fileSize:" + this.e + " downloadSizeMore:" + this.g);
    this.f = (this.e / this.h);
    this.g = (this.e % this.h);
    File localFile = new File(this.c);
    int i1 = 0;
    while (i1 < this.h)
    {
      if (i1 != this.h - 1) {}
      for (g localG = new g(localURL, localFile, this.f * i1 + this.l, (i1 + 1) * this.f - 1, this.m, this.j, this.n); localG.a(); localG = new g(localURL, localFile, this.f * i1 + this.l, (i1 + 1) * this.f - 1 + this.g, this.m, this.j, this.n))
      {
        this.j.a(100);
        return;
      }
      localG.setName("Thread" + i1);
      localG.start();
      arrayOfG[i1] = localG;
      i1 += 1;
    }
    this.k = false;
    if ((!this.k) && (!this.m.a))
    {
      this.i = this.g;
      this.k = true;
      i1 = 0;
    }
    for (;;)
    {
      if (i1 < arrayOfG.length)
      {
        this.i = ((int)(this.i + arrayOfG[i1].b()));
        if (!arrayOfG[i1].a()) {
          this.k = false;
        }
      }
      else
      {
        if ((this.j != null) && (!this.m.a))
        {
          i1 = Double.valueOf(this.i * 1.0D / this.e * 100.0D).intValue();
          this.j.a(i1);
        }
        sleep(1000L);
        break;
        return;
      }
      i1 += 1;
    }
  }
  
  protected class a
  {
    protected boolean a = false;
    
    protected a() {}
  }
}
