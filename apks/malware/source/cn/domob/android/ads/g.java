package cn.domob.android.ads;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.util.Log;
import java.util.HashMap;

class g
{
  private static H a = new H(g.class.getSimpleName());
  private static g b;
  private String c = "http://r.domob.cn/a/";
  private String d = null;
  private String e = null;
  private boolean f = false;
  private long g;
  private int h;
  private String i = null;
  
  g() {}
  
  public static g a()
  {
    try
    {
      if (b == null) {
        b = new g();
      }
      g localG = b;
      return localG;
    }
    finally {}
  }
  
  protected String a(Context paramContext)
  {
    if (this.d == null) {}
    try
    {
      Object localObject = paramContext.getPackageManager();
      if (localObject != null)
      {
        paramContext = ((PackageManager)localObject).getApplicationInfo(paramContext.getPackageName(), 128);
        if (paramContext != null)
        {
          localObject = paramContext.metaData;
          if (localObject == null) {}
        }
      }
      try
      {
        paramContext = paramContext.metaData.getString("DOMOB_PID");
        if ((this.d == null) && (paramContext != null))
        {
          this.d = paramContext;
          b(this.d);
        }
        return this.d;
      }
      catch (Exception paramContext)
      {
        Log.e("DomobSDK", "DOMOB_PID is missed in AndroidManifest.xml!");
        return null;
      }
      return null;
    }
    catch (Exception paramContext)
    {
      Log.e("DomobSDK", "Failed to get applicationInfo.");
      a.a(paramContext);
    }
  }
  
  protected void a(String paramString)
  {
    if (paramString != null)
    {
      a.b("Set AD server url:" + paramString);
      this.c = paramString;
    }
  }
  
  protected void a(boolean paramBoolean, long paramLong, int paramInt)
  {
    this.f = paramBoolean;
    this.g = paramLong;
    this.h = paramInt;
  }
  
  protected String b()
  {
    return this.c;
  }
  
  protected String b(Context paramContext)
  {
    if (this.e == null) {
      this.e = new a(paramContext, "domob_config").a("cookie_id", null);
    }
    return this.e;
  }
  
  protected void b(String paramString)
  {
    if ((paramString == null) || ((paramString != null) && (paramString.length() == 0)))
    {
      Log.e("DomobSDK", "Incorrect Domob publisher ID.");
      return;
    }
    Log.i("DomobSDK", "Current publisherID is " + paramString);
    this.d = paramString;
  }
  
  protected long c()
  {
    return this.g + this.h * 1000;
  }
  
  protected void c(String paramString)
  {
    this.e = paramString;
  }
  
  protected boolean c(Context paramContext)
  {
    boolean bool;
    if (this.f) {
      if (System.currentTimeMillis() < this.g + this.h * 1000) {
        bool = true;
      }
    }
    for (;;)
    {
      if ((!bool) && (this.f))
      {
        this.f = false;
        this.g = 0L;
        this.h = 0;
        HashMap localHashMap = new HashMap();
        localHashMap.put("timestamp", Long.valueOf(0L));
        localHashMap.put("disable", Boolean.valueOf(false));
        localHashMap.put("time", Integer.valueOf(0));
        new a(paramContext, "domob_config").a(localHashMap);
      }
      return bool;
      bool = false;
      continue;
      bool = false;
    }
  }
  
  protected String d()
  {
    return this.i;
  }
  
  protected void d(String paramString)
  {
    this.i = paramString;
  }
}
