package cn.domob.android.ads;

import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.DialogInterface.OnDismissListener;
import android.graphics.Color;
import android.os.Handler;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;

class v
{
  private static H a = new H(v.class.getSimpleName());
  private static final String d = "domob_close.png";
  private static final int e = 40;
  private static final int f = 40;
  private Handler b = new Handler();
  private Dialog c;
  
  private v(Context paramContext) {}
  
  private void a(final View paramView, final d paramD)
  {
    if ((paramView == null) || (paramView.getParent() != null)) {
      a.e("需要弹出显示的View已经被加载其他ViewGroup中，需要remove之后显示。");
    }
    do
    {
      return;
      Object localObject = d.a(paramD);
      int i = d.b(paramD);
      int j = d.c(paramD);
      this.c = new Dialog((Context)localObject, 16973840);
      this.c.setOnDismissListener(new DialogInterface.OnDismissListener()
      {
        public void onDismiss(DialogInterface paramAnonymousDialogInterface)
        {
          ((ViewGroup)paramView.getParent()).removeAllViews();
          if (v.d.d(paramD) != null) {
            v.d.d(paramD).a();
          }
          if (v.d.e(paramD) != null) {
            v.d.e(paramD).c();
          }
        }
      });
      RelativeLayout localRelativeLayout1 = new RelativeLayout((Context)localObject);
      localRelativeLayout1.setLayoutParams(new RelativeLayout.LayoutParams(-1, -1));
      if (d.f(paramD)) {
        localRelativeLayout1.setBackgroundColor(Color.argb(150, 0, 0, 0));
      }
      RelativeLayout localRelativeLayout2 = new RelativeLayout((Context)localObject);
      RelativeLayout.LayoutParams localLayoutParams1 = new RelativeLayout.LayoutParams(i, j);
      if ((!d.g(paramD)) && (!d.h(paramD)) && (!d.i(paramD)) && (!d.j(paramD))) {
        localLayoutParams1.addRule(13);
      }
      if (d.g(paramD)) {
        localLayoutParams1.addRule(9);
      }
      if (d.i(paramD)) {
        localLayoutParams1.addRule(11);
      }
      if (d.h(paramD)) {
        localLayoutParams1.addRule(10);
      }
      if (d.j(paramD)) {
        localLayoutParams1.addRule(12);
      }
      RelativeLayout.LayoutParams localLayoutParams2 = new RelativeLayout.LayoutParams(i, j);
      localLayoutParams2.addRule(13);
      localRelativeLayout2.addView(paramView, localLayoutParams2);
      if (d.k(paramD))
      {
        i = (int)(n.u((Context)localObject) * 40.0F);
        j = (int)(n.u((Context)localObject) * 40.0F);
        paramView = new ImageButton((Context)localObject);
        paramView.setVisibility(8);
        paramView.setBackgroundDrawable(A.a((Context)localObject, "domob_close.png"));
        localObject = new RelativeLayout.LayoutParams(i, j);
        ((RelativeLayout.LayoutParams)localObject).addRule(11);
        localRelativeLayout2.addView(paramView, (ViewGroup.LayoutParams)localObject);
        paramView.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (v.a(v.this).isShowing()) {
              v.a(v.this).dismiss();
            }
          }
        });
        this.b.postDelayed(new Runnable()
        {
          public void run()
          {
            paramView.setVisibility(0);
          }
        }, d.l(paramD));
      }
      if (d.m(paramD))
      {
        this.c.setCancelable(false);
        this.b.postDelayed(new Runnable()
        {
          public void run()
          {
            v.b().a("展现时间到达最小展现时间。");
            v.a(v.this).setCancelable(true);
            if (v.d.e(paramD) != null) {
              v.d.e(paramD).b();
            }
          }
        }, d.l(paramD));
      }
      if (d.n(paramD)) {
        this.b.postDelayed(new Runnable()
        {
          public void run()
          {
            v.b().a("展现时间到达自动关闭时间。");
            if (v.a(v.this).isShowing()) {
              v.a(v.this).dismiss();
            }
          }
        }, d.o(paramD));
      }
      localRelativeLayout1.addView(localRelativeLayout2, localLayoutParams1);
      this.c.setContentView(localRelativeLayout1);
      this.c.show();
    } while (d.e(paramD) == null);
    d.e(paramD).a();
  }
  
  public void a()
  {
    if ((this.c != null) && (this.c.isShowing())) {
      this.c.dismiss();
    }
  }
  
  static class a
  {
    private v a;
    private v.d b;
    
    a(Context paramContext)
    {
      v.b().a("Init and config present dialog.");
      this.b = new v.d(paramContext);
    }
    
    protected a a(int paramInt1, int paramInt2)
    {
      v.d.a(this.b, paramInt1);
      v.d.b(this.b, paramInt2);
      return this;
    }
    
    protected a a(v.b paramB)
    {
      v.d.a(this.b, paramB);
      return this;
    }
    
    protected a a(v.c paramC)
    {
      v.d.a(this.b, paramC);
      return this;
    }
    
    protected a a(boolean paramBoolean)
    {
      v.b().a("Close button is needed for present dialog.");
      v.d.a(this.b, paramBoolean);
      return this;
    }
    
    protected a a(boolean paramBoolean, int paramInt)
    {
      v.b().a("Force show is needed for present dialog with time = " + paramInt);
      if (paramBoolean)
      {
        v.d.b(this.b, true);
        v.d.c(this.b, paramInt * 1000);
      }
      return this;
    }
    
    protected a a(boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
    {
      v.d.e(this.b, paramBoolean1);
      v.d.f(this.b, paramBoolean2);
      v.d.g(this.b, paramBoolean3);
      v.d.h(this.b, paramBoolean4);
      return this;
    }
    
    protected void a()
    {
      this.a.a();
    }
    
    protected void a(View paramView)
    {
      this.a = new v(v.d.a(this.b), null);
      v.a(this.a, paramView, this.b);
    }
    
    protected a b(boolean paramBoolean)
    {
      v.d.d(this.b, paramBoolean);
      return this;
    }
    
    protected a b(boolean paramBoolean, int paramInt)
    {
      v.b().a("Auto close is needed for present dialog with time = " + paramInt);
      if (paramBoolean)
      {
        v.d.c(this.b, true);
        v.d.d(this.b, paramInt * 1000);
      }
      return this;
    }
  }
  
  static abstract interface b
  {
    public abstract void a();
    
    public abstract void b();
    
    public abstract void c();
  }
  
  static abstract interface c
  {
    public abstract void a();
  }
  
  private static class d
  {
    private Context a;
    private int b = -1;
    private int c = -1;
    private boolean d = false;
    private boolean e = false;
    private boolean f = false;
    private boolean g = false;
    private v.c h;
    private v.b i;
    private boolean j = false;
    private boolean k = false;
    private int l = 0;
    private boolean m = false;
    private int n = 0;
    private boolean o = false;
    
    d(Context paramContext)
    {
      this.a = paramContext;
    }
  }
}
