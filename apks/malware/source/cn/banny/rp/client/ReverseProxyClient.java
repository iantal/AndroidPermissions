package cn.banny.rp.client;

import android.annotation.SuppressLint;
import cn.banny.rp.MessageDeliver;
import cn.banny.rp.RequestConnect;
import cn.banny.rp.ReverseProxy;
import cn.banny.rp.auth.AuthResult;
import cn.banny.rp.handler.ExtDataHandler;
import java.io.DataInput;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.Selector;
import java.nio.channels.SocketChannel;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

@SuppressLint({"UseSparseArrays"})
public class ReverseProxyClient
  implements MessageDeliver, SocketSession, Runnable
{
  private static final int READ_BUFFER_SIZE = 65536;
  private static final int VERSION = 65539;
  private int aliveTimeMillis;
  private AuthListener authListener;
  private AuthResult authResult;
  private boolean canStop;
  private long checkNetworkChangeTime;
  private long checkSessionTime;
  private ExtDataHandler dataHandler;
  private DataInputStream dis;
  private final String extraData;
  private final String host;
  private long lastAliveTime;
  private int lastCode;
  private long lastSync;
  private int networkDelay;
  private int packetSize = -1;
  private String password;
  private PipedInputStream pipedIn;
  private PipedOutputStream pipedOut;
  private final int port;
  private ByteBuffer readBuffer = ByteBuffer.allocate(5120);
  private String requestChangeIp;
  private boolean requestedLogin;
  private Selector selector;
  private SocketChannel session;
  private final Map socketMap = new HashMap();
  private String username;
  
  public ReverseProxyClient(String paramString, int paramInt)
  {
    this(paramString, paramInt, null);
  }
  
  public ReverseProxyClient(String paramString1, int paramInt, String paramString2)
  {
    this.host = paramString1;
    this.port = paramInt;
    this.extraData = paramString2;
  }
  
  private boolean canConnectReverseProxyServer()
  {
    if ((this.authResult == null) && (this.requestedLogin)) {
      return true;
    }
    return isAuthOK();
  }
  
  /* Error */
  private void checkNetworkChange(long paramLong)
  {
    // Byte code:
    //   0: lload_1
    //   1: aload_0
    //   2: getfield 102	cn/banny/rp/client/ReverseProxyClient:checkNetworkChangeTime	J
    //   5: lsub
    //   6: ldc2_w 103
    //   9: lcmp
    //   10: ifge +4 -> 14
    //   13: return
    //   14: aload_0
    //   15: lload_1
    //   16: putfield 102	cn/banny/rp/client/ReverseProxyClient:checkNetworkChangeTime	J
    //   19: new 106	java/lang/StringBuffer
    //   22: dup
    //   23: invokespecial 107	java/lang/StringBuffer:<init>	()V
    //   26: astore 6
    //   28: invokestatic 113	java/net/NetworkInterface:getNetworkInterfaces	()Ljava/util/Enumeration;
    //   31: astore 7
    //   33: aload 7
    //   35: invokeinterface 118 1 0
    //   40: ifne +44 -> 84
    //   43: aload 6
    //   45: invokevirtual 122	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   48: invokevirtual 128	java/lang/String:hashCode	()I
    //   51: istore 4
    //   53: aload_0
    //   54: getfield 130	cn/banny/rp/client/ReverseProxyClient:lastCode	I
    //   57: ifeq +12 -> 69
    //   60: iload 4
    //   62: aload_0
    //   63: getfield 130	cn/banny/rp/client/ReverseProxyClient:lastCode	I
    //   66: if_icmpne +102 -> 168
    //   69: aload_0
    //   70: iload 4
    //   72: putfield 130	cn/banny/rp/client/ReverseProxyClient:lastCode	I
    //   75: return
    //   76: astore 6
    //   78: aload 6
    //   80: invokevirtual 133	java/net/SocketException:printStackTrace	()V
    //   83: return
    //   84: aload 7
    //   86: invokeinterface 137 1 0
    //   91: checkcast 109	java/net/NetworkInterface
    //   94: astore 8
    //   96: aload 8
    //   98: invokevirtual 140	java/net/NetworkInterface:isLoopback	()Z
    //   101: ifne -68 -> 33
    //   104: aload 8
    //   106: invokevirtual 143	java/net/NetworkInterface:isUp	()Z
    //   109: ifeq -76 -> 33
    //   112: aload 8
    //   114: invokevirtual 146	java/net/NetworkInterface:getInetAddresses	()Ljava/util/Enumeration;
    //   117: astore 8
    //   119: aload 8
    //   121: invokeinterface 118 1 0
    //   126: ifeq -93 -> 33
    //   129: aload 8
    //   131: invokeinterface 137 1 0
    //   136: checkcast 148	java/net/InetAddress
    //   139: astore 9
    //   141: aload 9
    //   143: invokevirtual 151	java/net/InetAddress:isLoopbackAddress	()Z
    //   146: ifne -27 -> 119
    //   149: aload 6
    //   151: aload 9
    //   153: invokevirtual 154	java/net/InetAddress:getHostAddress	()Ljava/lang/String;
    //   156: invokevirtual 158	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   159: bipush 44
    //   161: invokevirtual 161	java/lang/StringBuffer:append	(C)Ljava/lang/StringBuffer;
    //   164: pop
    //   165: goto -46 -> 119
    //   168: aload_0
    //   169: invokespecial 165	cn/banny/rp/client/ReverseProxyClient:getProxies	()[Lcn/banny/rp/client/SocketProxy;
    //   172: astore 6
    //   174: aload 6
    //   176: arraylength
    //   177: istore 5
    //   179: iconst_0
    //   180: istore_3
    //   181: iload_3
    //   182: iload 5
    //   184: if_icmplt +10 -> 194
    //   187: aload_0
    //   188: iload 4
    //   190: putfield 130	cn/banny/rp/client/ReverseProxyClient:lastCode	I
    //   193: return
    //   194: aload 6
    //   196: iload_3
    //   197: aaload
    //   198: invokevirtual 170	cn/banny/rp/client/SocketProxy:close	()V
    //   201: iload_3
    //   202: iconst_1
    //   203: iadd
    //   204: istore_3
    //   205: goto -24 -> 181
    //   208: astore 6
    //   210: aload_0
    //   211: iload 4
    //   213: putfield 130	cn/banny/rp/client/ReverseProxyClient:lastCode	I
    //   216: aload 6
    //   218: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	219	0	this	ReverseProxyClient
    //   0	219	1	paramLong	long
    //   180	25	3	i	int
    //   51	161	4	j	int
    //   177	8	5	k	int
    //   26	18	6	localStringBuffer	StringBuffer
    //   76	74	6	localSocketException	java.net.SocketException
    //   172	23	6	arrayOfSocketProxy	SocketProxy[]
    //   208	9	6	localObject1	Object
    //   31	54	7	localEnumeration	java.util.Enumeration
    //   94	36	8	localObject2	Object
    //   139	13	9	localInetAddress	java.net.InetAddress
    // Exception table:
    //   from	to	target	type
    //   19	33	76	java/net/SocketException
    //   33	69	76	java/net/SocketException
    //   69	75	76	java/net/SocketException
    //   84	119	76	java/net/SocketException
    //   119	165	76	java/net/SocketException
    //   187	193	76	java/net/SocketException
    //   210	219	76	java/net/SocketException
    //   168	179	208	finally
    //   194	201	208	finally
  }
  
  private void checkSelectionKeys(Iterator paramIterator)
  {
    for (;;)
    {
      if (!paramIterator.hasNext()) {
        return;
      }
      SelectionKey localSelectionKey = (SelectionKey)paramIterator.next();
      paramIterator.remove();
      SocketChannel localSocketChannel = (SocketChannel)localSelectionKey.channel();
      SocketSession localSocketSession = (SocketSession)localSelectionKey.attachment();
      try
      {
        if (localSelectionKey.isReadable()) {
          processRead(localSocketChannel, localSocketSession, localSelectionKey);
        }
        if (localSelectionKey.isConnectable()) {
          localSocketSession.processConnect(localSocketChannel);
        }
      }
      catch (Exception localException)
      {
        localSelectionKey.cancel();
        ReverseProxy.closeQuietly(localSocketChannel);
        localSocketSession.exceptionCaught(localSocketChannel, localException);
        localSocketSession.sessionClosed(localSocketChannel);
      }
    }
  }
  
  /* Error */
  private void checkSession(SocketChannel paramSocketChannel, long paramLong)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: lload_2
    //   4: aload_0
    //   5: getfield 232	cn/banny/rp/client/ReverseProxyClient:checkSessionTime	J
    //   8: lsub
    //   9: ldc2_w 233
    //   12: lcmp
    //   13: ifge +4 -> 17
    //   16: return
    //   17: aload_0
    //   18: lload_2
    //   19: putfield 232	cn/banny/rp/client/ReverseProxyClient:checkSessionTime	J
    //   22: aload_0
    //   23: getfield 236	cn/banny/rp/client/ReverseProxyClient:aliveTimeMillis	I
    //   26: ifle +39 -> 65
    //   29: aload_0
    //   30: getfield 238	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   33: lconst_0
    //   34: lcmp
    //   35: ifle +30 -> 65
    //   38: lload_2
    //   39: aload_0
    //   40: getfield 238	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   43: lsub
    //   44: aload_0
    //   45: getfield 236	cn/banny/rp/client/ReverseProxyClient:aliveTimeMillis	I
    //   48: i2l
    //   49: lcmp
    //   50: ifle +15 -> 65
    //   53: aload_0
    //   54: invokevirtual 241	cn/banny/rp/client/ReverseProxyClient:isAlive	()Z
    //   57: ifne +8 -> 65
    //   60: aload_0
    //   61: invokevirtual 244	cn/banny/rp/client/ReverseProxyClient:logout	()V
    //   64: return
    //   65: new 246	java/io/ByteArrayOutputStream
    //   68: dup
    //   69: invokespecial 247	java/io/ByteArrayOutputStream:<init>	()V
    //   72: astore 5
    //   74: new 249	java/io/DataOutputStream
    //   77: dup
    //   78: aload 5
    //   80: invokespecial 252	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   83: astore 4
    //   85: aload 4
    //   87: bipush 8
    //   89: invokevirtual 256	java/io/DataOutputStream:writeByte	(I)V
    //   92: aload 4
    //   94: aload_0
    //   95: getfield 258	cn/banny/rp/client/ReverseProxyClient:networkDelay	I
    //   98: invokevirtual 261	java/io/DataOutputStream:writeInt	(I)V
    //   101: aload 4
    //   103: lload_2
    //   104: invokevirtual 264	java/io/DataOutputStream:writeLong	(J)V
    //   107: aload 4
    //   109: aload_0
    //   110: getfield 130	cn/banny/rp/client/ReverseProxyClient:lastCode	I
    //   113: invokevirtual 261	java/io/DataOutputStream:writeInt	(I)V
    //   116: aload_0
    //   117: aload 5
    //   119: invokevirtual 268	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   122: invokevirtual 272	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   125: aload 5
    //   127: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   130: aload 4
    //   132: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   135: return
    //   136: astore 6
    //   138: aconst_null
    //   139: astore 7
    //   141: aload 4
    //   143: astore 5
    //   145: aload 7
    //   147: astore 4
    //   149: aload 6
    //   151: invokevirtual 275	java/io/IOException:printStackTrace	()V
    //   154: aload_0
    //   155: aload_1
    //   156: invokespecial 278	cn/banny/rp/client/ReverseProxyClient:closeSession	(Ljava/nio/channels/SocketChannel;)V
    //   159: aload 5
    //   161: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   164: aload 4
    //   166: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   169: return
    //   170: astore_1
    //   171: aconst_null
    //   172: astore 4
    //   174: aconst_null
    //   175: astore 5
    //   177: aload 5
    //   179: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   182: aload 4
    //   184: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   187: aload_1
    //   188: athrow
    //   189: astore_1
    //   190: aconst_null
    //   191: astore 4
    //   193: goto -16 -> 177
    //   196: astore_1
    //   197: goto -20 -> 177
    //   200: astore_1
    //   201: goto -24 -> 177
    //   204: astore 6
    //   206: aconst_null
    //   207: astore 4
    //   209: goto -60 -> 149
    //   212: astore 6
    //   214: goto -65 -> 149
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	217	0	this	ReverseProxyClient
    //   0	217	1	paramSocketChannel	SocketChannel
    //   0	217	2	paramLong	long
    //   1	207	4	localObject1	Object
    //   72	106	5	localObject2	Object
    //   136	14	6	localIOException1	IOException
    //   204	1	6	localIOException2	IOException
    //   212	1	6	localIOException3	IOException
    //   139	7	7	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   65	74	136	java/io/IOException
    //   65	74	170	finally
    //   74	85	189	finally
    //   85	125	196	finally
    //   149	159	200	finally
    //   74	85	204	java/io/IOException
    //   85	125	212	java/io/IOException
  }
  
  private void closeSession(SocketChannel paramSocketChannel)
  {
    SelectionKey localSelectionKey = paramSocketChannel.keyFor(this.selector);
    if (localSelectionKey != null) {
      localSelectionKey.cancel();
    }
    ReverseProxy.closeQuietly(paramSocketChannel);
    sessionClosed(paramSocketChannel);
  }
  
  /* Error */
  private void connectReverseProxyServer()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_2
    //   2: aconst_null
    //   3: astore 4
    //   5: aconst_null
    //   6: astore 5
    //   8: aconst_null
    //   9: astore_3
    //   10: invokestatic 292	java/nio/channels/SocketChannel:open	()Ljava/nio/channels/SocketChannel;
    //   13: astore_1
    //   14: aload 4
    //   16: astore_2
    //   17: aload 5
    //   19: astore_3
    //   20: aload_1
    //   21: iconst_1
    //   22: invokevirtual 296	java/nio/channels/SocketChannel:configureBlocking	(Z)Ljava/nio/channels/SelectableChannel;
    //   25: pop
    //   26: aload 4
    //   28: astore_2
    //   29: aload 5
    //   31: astore_3
    //   32: aload_1
    //   33: invokevirtual 300	java/nio/channels/SocketChannel:socket	()Ljava/net/Socket;
    //   36: iconst_1
    //   37: invokevirtual 306	java/net/Socket:setKeepAlive	(Z)V
    //   40: aload 4
    //   42: astore_2
    //   43: aload 5
    //   45: astore_3
    //   46: aload_1
    //   47: new 308	java/net/InetSocketAddress
    //   50: dup
    //   51: aload_0
    //   52: getfield 83	cn/banny/rp/client/ReverseProxyClient:host	Ljava/lang/String;
    //   55: aload_0
    //   56: getfield 85	cn/banny/rp/client/ReverseProxyClient:port	I
    //   59: invokespecial 310	java/net/InetSocketAddress:<init>	(Ljava/lang/String;I)V
    //   62: invokevirtual 314	java/nio/channels/SocketChannel:connect	(Ljava/net/SocketAddress;)Z
    //   65: pop
    //   66: aload 4
    //   68: astore_2
    //   69: aload 5
    //   71: astore_3
    //   72: aload_1
    //   73: iconst_0
    //   74: invokevirtual 296	java/nio/channels/SocketChannel:configureBlocking	(Z)Ljava/nio/channels/SelectableChannel;
    //   77: pop
    //   78: aload 4
    //   80: astore_2
    //   81: aload 5
    //   83: astore_3
    //   84: aload_1
    //   85: aload_0
    //   86: getfield 280	cn/banny/rp/client/ReverseProxyClient:selector	Ljava/nio/channels/Selector;
    //   89: iconst_1
    //   90: invokevirtual 318	java/nio/channels/SocketChannel:register	(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;
    //   93: astore 4
    //   95: aload 4
    //   97: astore_2
    //   98: aload 4
    //   100: astore_3
    //   101: aload 4
    //   103: aload_0
    //   104: invokevirtual 322	java/nio/channels/SelectionKey:attach	(Ljava/lang/Object;)Ljava/lang/Object;
    //   107: pop
    //   108: aload 4
    //   110: astore_2
    //   111: aload 4
    //   113: astore_3
    //   114: aload_0
    //   115: aload_1
    //   116: invokevirtual 325	cn/banny/rp/client/ReverseProxyClient:sessionOpened	(Ljava/nio/channels/SocketChannel;)V
    //   119: return
    //   120: astore_2
    //   121: aconst_null
    //   122: astore_1
    //   123: aload_3
    //   124: ifnull +7 -> 131
    //   127: aload_3
    //   128: invokevirtual 213	java/nio/channels/SelectionKey:cancel	()V
    //   131: aload_1
    //   132: invokestatic 219	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/nio/channels/Channel;)V
    //   135: aload_2
    //   136: athrow
    //   137: astore_3
    //   138: aconst_null
    //   139: astore_1
    //   140: aload_2
    //   141: ifnull +7 -> 148
    //   144: aload_2
    //   145: invokevirtual 213	java/nio/channels/SelectionKey:cancel	()V
    //   148: aload_1
    //   149: invokestatic 219	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/nio/channels/Channel;)V
    //   152: new 230	java/io/IOException
    //   155: dup
    //   156: aload_3
    //   157: invokespecial 328	java/io/IOException:<init>	(Ljava/lang/Throwable;)V
    //   160: athrow
    //   161: astore_3
    //   162: goto -22 -> 140
    //   165: astore_2
    //   166: goto -43 -> 123
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	169	0	this	ReverseProxyClient
    //   13	136	1	localSocketChannel	SocketChannel
    //   1	110	2	localObject1	Object
    //   120	25	2	localIOException1	IOException
    //   165	1	2	localIOException2	IOException
    //   9	119	3	localObject2	Object
    //   137	20	3	localThrowable1	Throwable
    //   161	1	3	localThrowable2	Throwable
    //   3	109	4	localSelectionKey	SelectionKey
    //   6	76	5	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   10	14	120	java/io/IOException
    //   10	14	137	java/lang/Throwable
    //   20	26	161	java/lang/Throwable
    //   32	40	161	java/lang/Throwable
    //   46	66	161	java/lang/Throwable
    //   72	78	161	java/lang/Throwable
    //   84	95	161	java/lang/Throwable
    //   101	108	161	java/lang/Throwable
    //   114	119	161	java/lang/Throwable
    //   20	26	165	java/io/IOException
    //   32	40	165	java/io/IOException
    //   46	66	165	java/io/IOException
    //   72	78	165	java/io/IOException
    //   84	95	165	java/io/IOException
    //   101	108	165	java/io/IOException
    //   114	119	165	java/io/IOException
  }
  
  private SocketProxy[] getProxies()
  {
    synchronized (this.socketMap)
    {
      SocketProxy[] arrayOfSocketProxy = (SocketProxy[])this.socketMap.values().toArray(new SocketProxy[0]);
      return arrayOfSocketProxy;
    }
  }
  
  /* Error */
  private void messageReceived(SocketChannel paramSocketChannel, Object paramObject)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 7
    //   3: aload_2
    //   4: checkcast 346	[B
    //   7: astore_2
    //   8: new 348	java/io/ByteArrayInputStream
    //   11: dup
    //   12: aload_2
    //   13: invokespecial 350	java/io/ByteArrayInputStream:<init>	([B)V
    //   16: astore 6
    //   18: new 352	java/io/DataInputStream
    //   21: dup
    //   22: aload 6
    //   24: invokespecial 355	java/io/DataInputStream:<init>	(Ljava/io/InputStream;)V
    //   27: astore 7
    //   29: invokestatic 361	java/lang/System:currentTimeMillis	()J
    //   32: lstore 4
    //   34: aload 7
    //   36: invokevirtual 364	java/io/DataInputStream:readUnsignedByte	()I
    //   39: istore_3
    //   40: iload_3
    //   41: tableswitch	default:+59->100, 1:+70->111, 2:+116->157, 3:+151->192, 4:+59->100, 5:+59->100, 6:+59->100, 7:+171->212, 8:+218->259, 9:+243->284, 10:+284->325, 11:+299->340
    //   100: aload 6
    //   102: invokestatic 366	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/InputStream;)V
    //   105: aload 7
    //   107: invokestatic 366	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/InputStream;)V
    //   110: return
    //   111: aload_0
    //   112: lload 4
    //   114: putfield 238	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   117: aload_0
    //   118: aload 7
    //   120: invokevirtual 369	java/io/DataInputStream:readInt	()I
    //   123: aload 7
    //   125: invokespecial 373	cn/banny/rp/client/ReverseProxyClient:parseConnect	(ILjava/io/DataInputStream;)V
    //   128: goto -28 -> 100
    //   131: astore 8
    //   133: aload 6
    //   135: astore_2
    //   136: aload 7
    //   138: astore_1
    //   139: aload 8
    //   141: astore 6
    //   143: aload 6
    //   145: invokevirtual 275	java/io/IOException:printStackTrace	()V
    //   148: aload_2
    //   149: invokestatic 366	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/InputStream;)V
    //   152: aload_1
    //   153: invokestatic 366	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/InputStream;)V
    //   156: return
    //   157: aload_0
    //   158: lload 4
    //   160: putfield 238	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   163: aload_0
    //   164: aload 7
    //   166: invokevirtual 369	java/io/DataInputStream:readInt	()I
    //   169: aload 7
    //   171: invokespecial 377	cn/banny/rp/client/ReverseProxyClient:parseWriteData	(ILjava/io/DataInput;)V
    //   174: goto -74 -> 100
    //   177: astore_2
    //   178: aload 7
    //   180: astore_1
    //   181: aload 6
    //   183: invokestatic 366	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/InputStream;)V
    //   186: aload_1
    //   187: invokestatic 366	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/InputStream;)V
    //   190: aload_2
    //   191: athrow
    //   192: aload_0
    //   193: lload 4
    //   195: putfield 238	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   198: aload_0
    //   199: aload 7
    //   201: invokevirtual 369	java/io/DataInputStream:readInt	()I
    //   204: aload 7
    //   206: invokespecial 380	cn/banny/rp/client/ReverseProxyClient:parseClose	(ILjava/io/DataInput;)V
    //   209: goto -109 -> 100
    //   212: aload_0
    //   213: lload 4
    //   215: putfield 238	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   218: aload_0
    //   219: aload 7
    //   221: invokestatic 386	cn/banny/rp/auth/AuthResult:readAuthResult	(Ljava/io/DataInput;)Lcn/banny/rp/auth/AuthResult;
    //   224: putfield 91	cn/banny/rp/client/ReverseProxyClient:authResult	Lcn/banny/rp/auth/AuthResult;
    //   227: aload_0
    //   228: getfield 388	cn/banny/rp/client/ReverseProxyClient:authListener	Lcn/banny/rp/client/AuthListener;
    //   231: ifnull -131 -> 100
    //   234: aload_0
    //   235: getfield 388	cn/banny/rp/client/ReverseProxyClient:authListener	Lcn/banny/rp/client/AuthListener;
    //   238: aload_0
    //   239: aload_0
    //   240: getfield 91	cn/banny/rp/client/ReverseProxyClient:authResult	Lcn/banny/rp/auth/AuthResult;
    //   243: invokeinterface 394 3 0
    //   248: ifeq -148 -> 100
    //   251: aload_0
    //   252: aload_1
    //   253: invokespecial 278	cn/banny/rp/client/ReverseProxyClient:closeSession	(Ljava/nio/channels/SocketChannel;)V
    //   256: goto -156 -> 100
    //   259: aload_0
    //   260: invokestatic 361	java/lang/System:currentTimeMillis	()J
    //   263: putfield 396	cn/banny/rp/client/ReverseProxyClient:lastSync	J
    //   266: aload_0
    //   267: aload_0
    //   268: getfield 396	cn/banny/rp/client/ReverseProxyClient:lastSync	J
    //   271: aload 7
    //   273: invokevirtual 399	java/io/DataInputStream:readLong	()J
    //   276: lsub
    //   277: l2i
    //   278: putfield 258	cn/banny/rp/client/ReverseProxyClient:networkDelay	I
    //   281: goto -181 -> 100
    //   284: aload_0
    //   285: lload 4
    //   287: putfield 238	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   290: aload_0
    //   291: getfield 401	cn/banny/rp/client/ReverseProxyClient:dataHandler	Lcn/banny/rp/handler/ExtDataHandler;
    //   294: ifnull -194 -> 100
    //   297: aload 7
    //   299: invokevirtual 369	java/io/DataInputStream:readInt	()I
    //   302: newarray byte
    //   304: astore_1
    //   305: aload 7
    //   307: aload_1
    //   308: invokevirtual 404	java/io/DataInputStream:readFully	([B)V
    //   311: aload_0
    //   312: getfield 401	cn/banny/rp/client/ReverseProxyClient:dataHandler	Lcn/banny/rp/handler/ExtDataHandler;
    //   315: aload_1
    //   316: aload_0
    //   317: invokeinterface 410 3 0
    //   322: goto -222 -> 100
    //   325: aload_0
    //   326: lload 4
    //   328: putfield 238	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   331: aload_0
    //   332: aload 7
    //   334: invokespecial 414	cn/banny/rp/client/ReverseProxyClient:parseRequestForward	(Ljava/io/DataInputStream;)V
    //   337: goto -237 -> 100
    //   340: aload_0
    //   341: lload 4
    //   343: putfield 238	cn/banny/rp/client/ReverseProxyClient:lastAliveTime	J
    //   346: aload_0
    //   347: aload 7
    //   349: invokespecial 416	cn/banny/rp/client/ReverseProxyClient:requestChangeIp	(Ljava/io/DataInputStream;)V
    //   352: goto -252 -> 100
    //   355: astore_2
    //   356: aconst_null
    //   357: astore_1
    //   358: aconst_null
    //   359: astore 6
    //   361: goto -180 -> 181
    //   364: astore_2
    //   365: aconst_null
    //   366: astore_1
    //   367: goto -186 -> 181
    //   370: astore 7
    //   372: aload_2
    //   373: astore 6
    //   375: aload 7
    //   377: astore_2
    //   378: goto -197 -> 181
    //   381: astore 6
    //   383: aconst_null
    //   384: astore_1
    //   385: aload 7
    //   387: astore_2
    //   388: goto -245 -> 143
    //   391: astore 7
    //   393: aconst_null
    //   394: astore_1
    //   395: aload 6
    //   397: astore_2
    //   398: aload 7
    //   400: astore 6
    //   402: goto -259 -> 143
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	405	0	this	ReverseProxyClient
    //   0	405	1	paramSocketChannel	SocketChannel
    //   0	405	2	paramObject	Object
    //   39	2	3	i	int
    //   32	310	4	l	long
    //   16	358	6	localObject1	Object
    //   381	15	6	localIOException1	IOException
    //   400	1	6	localIOException2	IOException
    //   1	347	7	localDataInputStream	DataInputStream
    //   370	16	7	localObject2	Object
    //   391	8	7	localIOException3	IOException
    //   131	9	8	localIOException4	IOException
    // Exception table:
    //   from	to	target	type
    //   29	40	131	java/io/IOException
    //   111	128	131	java/io/IOException
    //   157	174	131	java/io/IOException
    //   192	209	131	java/io/IOException
    //   212	256	131	java/io/IOException
    //   259	281	131	java/io/IOException
    //   284	322	131	java/io/IOException
    //   325	337	131	java/io/IOException
    //   340	352	131	java/io/IOException
    //   29	40	177	finally
    //   111	128	177	finally
    //   157	174	177	finally
    //   192	209	177	finally
    //   212	256	177	finally
    //   259	281	177	finally
    //   284	322	177	finally
    //   325	337	177	finally
    //   340	352	177	finally
    //   8	18	355	finally
    //   18	29	364	finally
    //   143	148	370	finally
    //   8	18	381	java/io/IOException
    //   18	29	391	java/io/IOException
  }
  
  private void messageSent(SocketChannel paramSocketChannel, Object paramObject) {}
  
  /* Error */
  private void parseClose(int paramInt, DataInput paramDataInput)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aload_0
    //   4: getfield 81	cn/banny/rp/client/ReverseProxyClient:socketMap	Ljava/util/Map;
    //   7: astore_2
    //   8: aload_2
    //   9: monitorenter
    //   10: aload_0
    //   11: getfield 81	cn/banny/rp/client/ReverseProxyClient:socketMap	Ljava/util/Map;
    //   14: iload_1
    //   15: invokestatic 423	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   18: invokeinterface 426 2 0
    //   23: checkcast 167	cn/banny/rp/client/SocketProxy
    //   26: astore 5
    //   28: aload_2
    //   29: monitorexit
    //   30: aload 5
    //   32: ifnonnull +9 -> 41
    //   35: return
    //   36: astore_3
    //   37: aload_2
    //   38: monitorexit
    //   39: aload_3
    //   40: athrow
    //   41: aload 5
    //   43: invokevirtual 170	cn/banny/rp/client/SocketProxy:close	()V
    //   46: new 246	java/io/ByteArrayOutputStream
    //   49: dup
    //   50: invokespecial 247	java/io/ByteArrayOutputStream:<init>	()V
    //   53: astore_2
    //   54: new 249	java/io/DataOutputStream
    //   57: dup
    //   58: aload_2
    //   59: invokespecial 252	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   62: astore_3
    //   63: aload_3
    //   64: iconst_3
    //   65: invokevirtual 256	java/io/DataOutputStream:writeByte	(I)V
    //   68: aload_3
    //   69: aload 5
    //   71: invokevirtual 429	cn/banny/rp/client/SocketProxy:getSocket	()I
    //   74: invokevirtual 261	java/io/DataOutputStream:writeInt	(I)V
    //   77: aload_0
    //   78: aload_2
    //   79: invokevirtual 268	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   82: invokevirtual 272	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   85: aload_2
    //   86: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   89: aload_3
    //   90: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   93: return
    //   94: astore_2
    //   95: aconst_null
    //   96: astore_3
    //   97: aload 4
    //   99: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   102: aload_3
    //   103: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   106: aload_2
    //   107: athrow
    //   108: astore 5
    //   110: aconst_null
    //   111: astore_3
    //   112: aload_2
    //   113: astore 4
    //   115: aload 5
    //   117: astore_2
    //   118: goto -21 -> 97
    //   121: astore 5
    //   123: aload_2
    //   124: astore 4
    //   126: aload 5
    //   128: astore_2
    //   129: goto -32 -> 97
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	132	0	this	ReverseProxyClient
    //   0	132	1	paramInt	int
    //   0	132	2	paramDataInput	DataInput
    //   36	4	3	localObject1	Object
    //   62	50	3	localDataOutputStream	java.io.DataOutputStream
    //   1	124	4	localObject2	Object
    //   26	44	5	localSocketProxy	SocketProxy
    //   108	8	5	localObject3	Object
    //   121	6	5	localObject4	Object
    // Exception table:
    //   from	to	target	type
    //   10	30	36	finally
    //   37	39	36	finally
    //   41	54	94	finally
    //   54	63	108	finally
    //   63	85	121	finally
  }
  
  private void parseConnect(int paramInt, DataInputStream arg2)
  {
    try
    {
      SocketProxy localSocketProxy = new SocketProxy(paramInt, RequestConnect.parseRequestConnect(???), this, this.selector);
      localSocketProxy.connect();
      synchronized (this.socketMap)
      {
        this.socketMap.put(Integer.valueOf(paramInt), localSocketProxy);
        return;
      }
      return;
    }
    catch (Throwable ???)
    {
      if (ReverseProxy.debug) {
        ???.printStackTrace();
      }
      sendException(paramInt, ???);
    }
  }
  
  private void parseRequestForward(DataInputStream paramDataInputStream)
  {
    int i = paramDataInputStream.readUnsignedShort();
    if (!paramDataInputStream.readBoolean())
    {
      System.out.println("parseRequestForward bind remote port#" + i + " successfully!");
      return;
    }
    System.err.println("parseRequestForward bind remote port#" + i + " failed: " + paramDataInputStream.readUTF());
  }
  
  private void parseWriteData(int paramInt, DataInput paramDataInput)
  {
    SocketProxy localSocketProxy;
    synchronized (this.socketMap)
    {
      localSocketProxy = (SocketProxy)this.socketMap.get(Integer.valueOf(paramInt));
      if (localSocketProxy == null) {
        return;
      }
    }
    ??? = new byte[paramDataInput.readInt()];
    paramDataInput.readFully((byte[])???);
    localSocketProxy.writeData((byte[])???);
  }
  
  private void processRead(SocketChannel paramSocketChannel, SocketSession paramSocketSession, SelectionKey paramSelectionKey)
  {
    for (;;)
    {
      this.readBuffer.clear();
      int i = paramSocketChannel.read(this.readBuffer);
      if (i == -1) {
        throw new EOFException();
      }
      if (i < 1) {
        return;
      }
      this.readBuffer.flip();
      paramSelectionKey = new byte[i];
      this.readBuffer.get(paramSelectionKey);
      paramSocketSession.pushData(paramSocketChannel, paramSelectionKey);
    }
  }
  
  private void receivedPacket(SocketChannel paramSocketChannel, byte[] paramArrayOfByte)
  {
    if (ReverseProxy.debug) {
      ReverseProxy.inspect(paramArrayOfByte, "receivedPacket");
    }
    messageReceived(paramSocketChannel, paramArrayOfByte);
  }
  
  /* Error */
  private void requestAuth()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 5
    //   3: iconst_1
    //   4: istore_2
    //   5: new 246	java/io/ByteArrayOutputStream
    //   8: dup
    //   9: invokespecial 247	java/io/ByteArrayOutputStream:<init>	()V
    //   12: astore_3
    //   13: new 249	java/io/DataOutputStream
    //   16: dup
    //   17: aload_3
    //   18: invokespecial 252	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   21: astore 4
    //   23: aload 4
    //   25: bipush 7
    //   27: invokevirtual 256	java/io/DataOutputStream:writeByte	(I)V
    //   30: aload 4
    //   32: aload_0
    //   33: getfield 530	cn/banny/rp/client/ReverseProxyClient:username	Ljava/lang/String;
    //   36: invokevirtual 533	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   39: aload 4
    //   41: aload_0
    //   42: getfield 535	cn/banny/rp/client/ReverseProxyClient:password	Ljava/lang/String;
    //   45: invokevirtual 533	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   48: aload 4
    //   50: ldc 18
    //   52: invokevirtual 261	java/io/DataOutputStream:writeInt	(I)V
    //   55: aload_0
    //   56: getfield 87	cn/banny/rp/client/ReverseProxyClient:extraData	Ljava/lang/String;
    //   59: ifnull +60 -> 119
    //   62: iconst_1
    //   63: istore_1
    //   64: aload 4
    //   66: iload_1
    //   67: invokevirtual 538	java/io/DataOutputStream:writeBoolean	(Z)V
    //   70: aload_0
    //   71: getfield 87	cn/banny/rp/client/ReverseProxyClient:extraData	Ljava/lang/String;
    //   74: ifnull +12 -> 86
    //   77: aload 4
    //   79: aload_0
    //   80: getfield 87	cn/banny/rp/client/ReverseProxyClient:extraData	Ljava/lang/String;
    //   83: invokevirtual 533	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   86: aload_0
    //   87: getfield 540	cn/banny/rp/client/ReverseProxyClient:requestChangeIp	Ljava/lang/String;
    //   90: ifnull +34 -> 124
    //   93: iload_2
    //   94: istore_1
    //   95: aload 4
    //   97: iload_1
    //   98: invokevirtual 538	java/io/DataOutputStream:writeBoolean	(Z)V
    //   101: aload_0
    //   102: aload_3
    //   103: invokevirtual 268	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   106: invokevirtual 272	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   109: aload_3
    //   110: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   113: aload 4
    //   115: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   118: return
    //   119: iconst_0
    //   120: istore_1
    //   121: goto -57 -> 64
    //   124: iconst_0
    //   125: istore_1
    //   126: goto -31 -> 95
    //   129: astore_3
    //   130: aconst_null
    //   131: astore 4
    //   133: aload 5
    //   135: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   138: aload 4
    //   140: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   143: aload_3
    //   144: athrow
    //   145: astore 6
    //   147: aconst_null
    //   148: astore 4
    //   150: aload_3
    //   151: astore 5
    //   153: aload 6
    //   155: astore_3
    //   156: goto -23 -> 133
    //   159: astore 6
    //   161: aload_3
    //   162: astore 5
    //   164: aload 6
    //   166: astore_3
    //   167: goto -34 -> 133
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	170	0	this	ReverseProxyClient
    //   63	63	1	bool1	boolean
    //   4	90	2	bool2	boolean
    //   12	98	3	localByteArrayOutputStream	java.io.ByteArrayOutputStream
    //   129	22	3	localObject1	Object
    //   155	12	3	localObject2	Object
    //   21	128	4	localDataOutputStream	java.io.DataOutputStream
    //   1	162	5	localObject3	Object
    //   145	9	6	localObject4	Object
    //   159	6	6	localObject5	Object
    // Exception table:
    //   from	to	target	type
    //   5	13	129	finally
    //   13	23	145	finally
    //   23	62	159	finally
    //   64	86	159	finally
    //   86	93	159	finally
    //   95	109	159	finally
  }
  
  private void requestChangeIp(DataInputStream paramDataInputStream) {}
  
  private void sessionIdle(SocketChannel paramSocketChannel)
  {
    closeSession(paramSocketChannel);
  }
  
  /* Error */
  public void deliverMessage(byte[] paramArrayOfByte)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_3
    //   2: new 246	java/io/ByteArrayOutputStream
    //   5: dup
    //   6: invokespecial 247	java/io/ByteArrayOutputStream:<init>	()V
    //   9: astore_2
    //   10: new 249	java/io/DataOutputStream
    //   13: dup
    //   14: aload_2
    //   15: invokespecial 252	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   18: astore 4
    //   20: aload 4
    //   22: bipush 9
    //   24: invokevirtual 256	java/io/DataOutputStream:writeByte	(I)V
    //   27: aload 4
    //   29: aload_1
    //   30: arraylength
    //   31: invokevirtual 261	java/io/DataOutputStream:writeInt	(I)V
    //   34: aload 4
    //   36: aload_1
    //   37: invokevirtual 545	java/io/DataOutputStream:write	([B)V
    //   40: aload_0
    //   41: aload_2
    //   42: invokevirtual 268	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   45: invokevirtual 272	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   48: aload_2
    //   49: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   52: aload 4
    //   54: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   57: return
    //   58: astore_1
    //   59: aconst_null
    //   60: astore_2
    //   61: aload_3
    //   62: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   65: aload_2
    //   66: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   69: aload_1
    //   70: athrow
    //   71: astore_1
    //   72: aconst_null
    //   73: astore 4
    //   75: aload_2
    //   76: astore_3
    //   77: aload 4
    //   79: astore_2
    //   80: goto -19 -> 61
    //   83: astore_1
    //   84: aload_2
    //   85: astore_3
    //   86: aload 4
    //   88: astore_2
    //   89: goto -28 -> 61
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	92	0	this	ReverseProxyClient
    //   0	92	1	paramArrayOfByte	byte[]
    //   9	80	2	localObject1	Object
    //   1	85	3	localObject2	Object
    //   18	69	4	localDataOutputStream	java.io.DataOutputStream
    // Exception table:
    //   from	to	target	type
    //   2	10	58	finally
    //   10	20	71	finally
    //   20	48	83	finally
  }
  
  public void destroy()
  {
    this.canStop = true;
    if (this.selector != null)
    {
      ReverseProxy.closeQuietly(this.selector);
      this.selector = null;
    }
    if (this.session != null) {
      closeSession(this.session);
    }
  }
  
  public void exceptionCaught(SocketChannel paramSocketChannel, Throwable paramThrowable)
  {
    if (ReverseProxy.debug) {
      paramThrowable.printStackTrace();
    }
  }
  
  public AuthResult getAuthResult()
  {
    return this.authResult;
  }
  
  public String getAuthUser()
  {
    return this.username;
  }
  
  public int getNetworkDelay()
  {
    return this.networkDelay;
  }
  
  public void initialize()
  {
    this.selector = Selector.open();
    this.canStop = false;
    new Thread(this).start();
  }
  
  public boolean isAlive()
  {
    return !this.socketMap.isEmpty();
  }
  
  public boolean isAuthOK()
  {
    return (this.username != null) && (this.password != null) && (this.authResult != null) && (this.authResult.getStatus() == 0);
  }
  
  public boolean isConnected()
  {
    return this.session != null;
  }
  
  public void login(String paramString1, String paramString2)
  {
    login(paramString1, paramString2, 0);
  }
  
  public void login(String paramString1, String paramString2, int paramInt)
  {
    this.authResult = null;
    this.username = paramString1;
    this.password = paramString2;
    this.aliveTimeMillis = paramInt;
    this.requestedLogin = true;
  }
  
  public void logout()
  {
    this.username = null;
    this.password = null;
    this.requestedLogin = false;
    if (this.session != null) {
      closeSession(this.session);
    }
  }
  
  /* Error */
  void notifySessionClosed(int paramInt, Throwable paramThrowable)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aload_0
    //   4: getfield 81	cn/banny/rp/client/ReverseProxyClient:socketMap	Ljava/util/Map;
    //   7: astore 5
    //   9: aload 5
    //   11: monitorenter
    //   12: aload_0
    //   13: getfield 81	cn/banny/rp/client/ReverseProxyClient:socketMap	Ljava/util/Map;
    //   16: iload_1
    //   17: invokestatic 423	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   20: invokeinterface 586 2 0
    //   25: pop
    //   26: aload 5
    //   28: monitorexit
    //   29: new 246	java/io/ByteArrayOutputStream
    //   32: dup
    //   33: invokespecial 247	java/io/ByteArrayOutputStream:<init>	()V
    //   36: astore 5
    //   38: new 249	java/io/DataOutputStream
    //   41: dup
    //   42: aload 5
    //   44: invokespecial 252	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   47: astore 6
    //   49: aload 6
    //   51: iconst_5
    //   52: invokevirtual 256	java/io/DataOutputStream:writeByte	(I)V
    //   55: aload 6
    //   57: iload_1
    //   58: invokevirtual 261	java/io/DataOutputStream:writeInt	(I)V
    //   61: aload_2
    //   62: ifnonnull +95 -> 157
    //   65: aconst_null
    //   66: astore 4
    //   68: aload 4
    //   70: ifnonnull +116 -> 186
    //   73: aload_2
    //   74: ifnull +112 -> 186
    //   77: aload_2
    //   78: invokevirtual 590	java/lang/Object:getClass	()Ljava/lang/Class;
    //   81: invokevirtual 595	java/lang/Class:getName	()Ljava/lang/String;
    //   84: astore 4
    //   86: goto +100 -> 186
    //   89: aload 6
    //   91: iload_3
    //   92: invokevirtual 538	java/io/DataOutputStream:writeBoolean	(Z)V
    //   95: aload 4
    //   97: ifnull +10 -> 107
    //   100: aload 6
    //   102: aload 4
    //   104: invokevirtual 533	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   107: aload_0
    //   108: aload 5
    //   110: invokevirtual 268	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   113: invokevirtual 272	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   116: aload 5
    //   118: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   121: aload 6
    //   123: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   126: return
    //   127: astore_2
    //   128: aload 5
    //   130: monitorexit
    //   131: aload_2
    //   132: athrow
    //   133: astore_2
    //   134: aconst_null
    //   135: astore 6
    //   137: aload 4
    //   139: astore 5
    //   141: aload 6
    //   143: astore 4
    //   145: aload 5
    //   147: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   150: aload 4
    //   152: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   155: aload_2
    //   156: athrow
    //   157: aload_2
    //   158: invokevirtual 598	java/lang/Throwable:getMessage	()Ljava/lang/String;
    //   161: astore 4
    //   163: goto -95 -> 68
    //   166: iconst_0
    //   167: istore_3
    //   168: goto -79 -> 89
    //   171: astore_2
    //   172: aconst_null
    //   173: astore 4
    //   175: goto -30 -> 145
    //   178: astore_2
    //   179: aload 6
    //   181: astore 4
    //   183: goto -38 -> 145
    //   186: aload 4
    //   188: ifnull -22 -> 166
    //   191: iconst_1
    //   192: istore_3
    //   193: goto -104 -> 89
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	196	0	this	ReverseProxyClient
    //   0	196	1	paramInt	int
    //   0	196	2	paramThrowable	Throwable
    //   91	102	3	bool	boolean
    //   1	186	4	localObject1	Object
    //   7	139	5	localObject2	Object
    //   47	133	6	localDataOutputStream	java.io.DataOutputStream
    // Exception table:
    //   from	to	target	type
    //   12	29	127	finally
    //   128	131	127	finally
    //   3	12	133	finally
    //   29	38	133	finally
    //   131	133	133	finally
    //   38	49	171	finally
    //   49	61	178	finally
    //   77	86	178	finally
    //   89	95	178	finally
    //   100	107	178	finally
    //   107	116	178	finally
    //   157	163	178	finally
  }
  
  public void processConnect(SocketChannel paramSocketChannel)
  {
    throw new UnsupportedOperationException("processConnect");
  }
  
  public void pushData(SocketChannel paramSocketChannel, byte[] paramArrayOfByte)
  {
    if (this.pipedIn.available() + paramArrayOfByte.length > 65536) {
      throw new IOException("pushData buffer overflow");
    }
    this.pipedOut.write(paramArrayOfByte);
    for (;;)
    {
      if (this.packetSize == -1) {
        if (this.dis.available() >= 4) {}
      }
      while (this.dis.available() < this.packetSize)
      {
        return;
        this.packetSize = this.dis.readInt();
      }
      paramArrayOfByte = new byte[this.packetSize];
      this.dis.readFully(paramArrayOfByte);
      this.packetSize = -1;
      receivedPacket(paramSocketChannel, paramArrayOfByte);
    }
  }
  
  /* Error */
  public void requestForward(int paramInt1, String paramString, int paramInt2)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: new 246	java/io/ByteArrayOutputStream
    //   6: dup
    //   7: invokespecial 247	java/io/ByteArrayOutputStream:<init>	()V
    //   10: astore 5
    //   12: new 249	java/io/DataOutputStream
    //   15: dup
    //   16: aload 5
    //   18: invokespecial 252	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   21: astore 6
    //   23: aload 6
    //   25: bipush 10
    //   27: invokevirtual 256	java/io/DataOutputStream:writeByte	(I)V
    //   30: aload 6
    //   32: iload_1
    //   33: invokevirtual 627	java/io/DataOutputStream:writeShort	(I)V
    //   36: aload 6
    //   38: aload_2
    //   39: invokevirtual 533	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   42: aload 6
    //   44: iload_3
    //   45: invokevirtual 627	java/io/DataOutputStream:writeShort	(I)V
    //   48: aload_0
    //   49: aload 5
    //   51: invokevirtual 268	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   54: invokevirtual 272	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   57: aload 5
    //   59: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   62: aload 6
    //   64: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   67: return
    //   68: astore 5
    //   70: aconst_null
    //   71: astore_2
    //   72: aload 5
    //   74: invokevirtual 275	java/io/IOException:printStackTrace	()V
    //   77: aload_0
    //   78: aload_0
    //   79: getfield 553	cn/banny/rp/client/ReverseProxyClient:session	Ljava/nio/channels/SocketChannel;
    //   82: invokespecial 278	cn/banny/rp/client/ReverseProxyClient:closeSession	(Ljava/nio/channels/SocketChannel;)V
    //   85: aload 4
    //   87: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   90: aload_2
    //   91: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   94: return
    //   95: astore 4
    //   97: aconst_null
    //   98: astore_2
    //   99: aconst_null
    //   100: astore 5
    //   102: aload 5
    //   104: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   107: aload_2
    //   108: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   111: aload 4
    //   113: athrow
    //   114: astore 4
    //   116: aconst_null
    //   117: astore_2
    //   118: goto -16 -> 102
    //   121: astore 4
    //   123: aload 6
    //   125: astore_2
    //   126: goto -24 -> 102
    //   129: astore 6
    //   131: aload 4
    //   133: astore 5
    //   135: aload 6
    //   137: astore 4
    //   139: goto -37 -> 102
    //   142: astore 6
    //   144: aconst_null
    //   145: astore_2
    //   146: aload 5
    //   148: astore 4
    //   150: aload 6
    //   152: astore 5
    //   154: goto -82 -> 72
    //   157: astore_2
    //   158: aload 5
    //   160: astore 4
    //   162: aload_2
    //   163: astore 5
    //   165: aload 6
    //   167: astore_2
    //   168: goto -96 -> 72
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	171	0	this	ReverseProxyClient
    //   0	171	1	paramInt1	int
    //   0	171	2	paramString	String
    //   0	171	3	paramInt2	int
    //   1	85	4	localOutputStream	java.io.OutputStream
    //   95	17	4	localObject1	Object
    //   114	1	4	localObject2	Object
    //   121	11	4	localObject3	Object
    //   137	24	4	localObject4	Object
    //   10	48	5	localByteArrayOutputStream	java.io.ByteArrayOutputStream
    //   68	5	5	localIOException1	IOException
    //   100	64	5	localObject5	Object
    //   21	103	6	localDataOutputStream	java.io.DataOutputStream
    //   129	7	6	localObject6	Object
    //   142	24	6	localIOException2	IOException
    // Exception table:
    //   from	to	target	type
    //   3	12	68	java/io/IOException
    //   3	12	95	finally
    //   12	23	114	finally
    //   23	57	121	finally
    //   72	85	129	finally
    //   12	23	142	java/io/IOException
    //   23	57	157	java/io/IOException
  }
  
  public void run()
  {
    for (;;)
    {
      if (this.canStop) {
        return;
      }
      SocketChannel localSocketChannel;
      try
      {
        checkNetworkChange(System.currentTimeMillis());
        localSocketChannel = this.session;
        if (localSocketChannel != null) {
          break label64;
        }
        if (!canConnectReverseProxyServer()) {
          continue;
        }
        connectReverseProxyServer();
      }
      catch (Throwable localThrowable1)
      {
        if (ReverseProxy.debug) {
          localThrowable1.printStackTrace();
        }
        try
        {
          Thread.sleep(1000L);
        }
        catch (Throwable localThrowable2) {}
      }
      continue;
      label64:
      Set localSet;
      if (this.selector.select(500L) > 0) {
        localSet = this.selector.selectedKeys();
      }
      try
      {
        checkSelectionKeys(localSet.iterator());
        localSet.clear();
        long l = System.currentTimeMillis();
        checkSession(localSocketChannel, l);
        if ((this.lastSync <= 0L) || (l - this.lastSync <= 15000L)) {
          continue;
        }
        sessionIdle(localSocketChannel);
      }
      finally
      {
        localSet.clear();
      }
    }
  }
  
  /* Error */
  void sendException(int paramInt, Throwable paramThrowable)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_3
    //   2: new 246	java/io/ByteArrayOutputStream
    //   5: dup
    //   6: invokespecial 247	java/io/ByteArrayOutputStream:<init>	()V
    //   9: astore 4
    //   11: new 249	java/io/DataOutputStream
    //   14: dup
    //   15: aload 4
    //   17: invokespecial 252	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   20: astore 5
    //   22: aload 5
    //   24: bipush 6
    //   26: invokevirtual 256	java/io/DataOutputStream:writeByte	(I)V
    //   29: aload 5
    //   31: iload_1
    //   32: invokevirtual 261	java/io/DataOutputStream:writeInt	(I)V
    //   35: aload_2
    //   36: invokevirtual 598	java/lang/Throwable:getMessage	()Ljava/lang/String;
    //   39: astore_3
    //   40: aload_3
    //   41: ifnull +29 -> 70
    //   44: aload 5
    //   46: aload_3
    //   47: invokevirtual 533	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   50: aload_0
    //   51: aload 4
    //   53: invokevirtual 268	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   56: invokevirtual 272	cn/banny/rp/client/ReverseProxyClient:sendResponse	([B)V
    //   59: aload 4
    //   61: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   64: aload 5
    //   66: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   69: return
    //   70: aload 5
    //   72: aload_2
    //   73: invokevirtual 590	java/lang/Object:getClass	()Ljava/lang/Class;
    //   76: invokevirtual 668	java/lang/Class:getCanonicalName	()Ljava/lang/String;
    //   79: invokevirtual 533	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   82: goto -32 -> 50
    //   85: astore 6
    //   87: aload 4
    //   89: astore_3
    //   90: aload 5
    //   92: astore_2
    //   93: aload 6
    //   95: astore 4
    //   97: aload 4
    //   99: invokevirtual 275	java/io/IOException:printStackTrace	()V
    //   102: aload_3
    //   103: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   106: aload_2
    //   107: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   110: return
    //   111: astore_3
    //   112: aconst_null
    //   113: astore_2
    //   114: aconst_null
    //   115: astore 4
    //   117: aload 4
    //   119: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   122: aload_2
    //   123: invokestatic 274	cn/banny/rp/ReverseProxy:closeQuietly	(Ljava/io/OutputStream;)V
    //   126: aload_3
    //   127: athrow
    //   128: astore_3
    //   129: aconst_null
    //   130: astore_2
    //   131: goto -14 -> 117
    //   134: astore_3
    //   135: aload 5
    //   137: astore_2
    //   138: goto -21 -> 117
    //   141: astore 5
    //   143: aload_3
    //   144: astore 4
    //   146: aload 5
    //   148: astore_3
    //   149: goto -32 -> 117
    //   152: astore 4
    //   154: aconst_null
    //   155: astore_2
    //   156: goto -59 -> 97
    //   159: astore 5
    //   161: aconst_null
    //   162: astore_2
    //   163: aload 4
    //   165: astore_3
    //   166: aload 5
    //   168: astore 4
    //   170: goto -73 -> 97
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	173	0	this	ReverseProxyClient
    //   0	173	1	paramInt	int
    //   0	173	2	paramThrowable	Throwable
    //   1	102	3	localObject1	Object
    //   111	16	3	localObject2	Object
    //   128	1	3	localObject3	Object
    //   134	10	3	localObject4	Object
    //   148	18	3	localObject5	Object
    //   9	136	4	localObject6	Object
    //   152	12	4	localIOException1	IOException
    //   168	1	4	localObject7	Object
    //   20	116	5	localDataOutputStream	java.io.DataOutputStream
    //   141	6	5	localObject8	Object
    //   159	8	5	localIOException2	IOException
    //   85	9	6	localIOException3	IOException
    // Exception table:
    //   from	to	target	type
    //   22	40	85	java/io/IOException
    //   44	50	85	java/io/IOException
    //   50	59	85	java/io/IOException
    //   70	82	85	java/io/IOException
    //   2	11	111	finally
    //   11	22	128	finally
    //   22	40	134	finally
    //   44	50	134	finally
    //   50	59	134	finally
    //   70	82	134	finally
    //   97	102	141	finally
    //   2	11	152	java/io/IOException
    //   11	22	159	java/io/IOException
  }
  
  void sendResponse(byte[] paramArrayOfByte)
  {
    if (this.session == null) {
      return;
    }
    if (ReverseProxy.debug) {
      ReverseProxy.inspect(paramArrayOfByte, "encode");
    }
    ByteBuffer localByteBuffer = ByteBuffer.allocate(paramArrayOfByte.length + 4);
    localByteBuffer.putInt(paramArrayOfByte.length);
    localByteBuffer.put(paramArrayOfByte);
    localByteBuffer.flip();
    do
    {
      if (this.session.write(localByteBuffer) < 1) {
        Thread.yield();
      }
    } while (localByteBuffer.hasRemaining());
    messageSent(this.session, paramArrayOfByte);
  }
  
  public void sessionClosed(SocketChannel paramSocketChannel)
  {
    int j;
    int i;
    if (this.session == paramSocketChannel)
    {
      SelectionKey localSelectionKey = paramSocketChannel.keyFor(this.selector);
      if (localSelectionKey != null) {
        localSelectionKey.cancel();
      }
      ReverseProxy.closeQuietly(paramSocketChannel);
      ReverseProxy.closeQuietly(this.dis);
      ReverseProxy.closeQuietly(this.pipedOut);
      ReverseProxy.closeQuietly(this.pipedIn);
      this.session = null;
      paramSocketChannel = getProxies();
      j = paramSocketChannel.length;
      i = 0;
    }
    for (;;)
    {
      if (i >= j)
      {
        if (this.authListener != null) {
          this.authListener.onDisconnect(this, this.authResult);
        }
        return;
      }
      paramSocketChannel[i].close();
      i += 1;
    }
  }
  
  public void sessionOpened(SocketChannel paramSocketChannel)
  {
    if (this.session == null)
    {
      this.packetSize = -1;
      this.pipedIn = new PipedInputStream(65536);
      this.pipedOut = new PipedOutputStream(this.pipedIn);
      this.dis = new DataInputStream(this.pipedIn);
      this.session = paramSocketChannel;
      this.checkSessionTime = System.currentTimeMillis();
      this.lastAliveTime = this.checkSessionTime;
      this.lastSync = this.checkSessionTime;
      requestAuth();
    }
  }
  
  public void setAuthListener(AuthListener paramAuthListener)
  {
    this.authListener = paramAuthListener;
  }
  
  public void setDataHandler(ExtDataHandler paramExtDataHandler)
  {
    this.dataHandler = paramExtDataHandler;
  }
  
  public void setRequestChangeIp(String paramString)
  {
    this.requestChangeIp = paramString;
  }
}
