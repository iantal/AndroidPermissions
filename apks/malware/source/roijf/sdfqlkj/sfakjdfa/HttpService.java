package roijf.sdfqlkj.sfakjdfa;

import android.app.IntentService;
import android.content.Intent;
import android.os.PowerManager;
import android.os.PowerManager.WakeLock;
import java.util.ArrayList;
import java.util.List;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONObject;

public class HttpService
  extends IntentService
{
  public HttpService()
  {
    super("");
  }
  
  private List a(JSONArray paramJSONArray)
  {
    localArrayList = new ArrayList();
    int i = 0;
    try
    {
      for (;;)
      {
        if (i >= paramJSONArray.length()) {
          return localArrayList;
        }
        JSONObject localJSONObject = paramJSONArray.getJSONObject(i);
        localArrayList.add(new BasicNameValuePair(localJSONObject.getString(y.f), localJSONObject.getString(y.g)));
        i += 1;
      }
      return localArrayList;
    }
    catch (Exception paramJSONArray)
    {
      new by(this).a(paramJSONArray);
    }
  }
  
  protected void onHandleIntent(Intent paramIntent)
  {
    PowerManager.WakeLock localWakeLock = ((PowerManager)getSystemService("power")).newWakeLock(1, "");
    localWakeLock.acquire();
    for (;;)
    {
      try
      {
        localObject = new JSONObject(paramIntent.getStringExtra(bl.a));
        long l1 = ((JSONObject)localObject).getLong(y.e);
        long l2 = System.currentTimeMillis();
        paramIntent = ((JSONObject)localObject).getString(y.a);
        str = ((JSONObject)localObject).getString(y.b);
        localList = a(((JSONObject)localObject).getJSONArray(y.c));
        localObject = a(((JSONObject)localObject).getJSONArray(y.d));
        long l3 = System.currentTimeMillis();
        if (l3 <= l1 * 1000L + l2) {
          continue;
        }
      }
      catch (Exception paramIntent)
      {
        Object localObject;
        String str;
        List localList;
        new by(this).a(paramIntent);
        continue;
      }
      localWakeLock.release();
      return;
      by.a(paramIntent, str, localList, (List)localObject);
    }
  }
}
