package roijf.sdfqlkj.sfakjdfa;

import android.content.Context;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.json.JSONArray;
import org.json.JSONObject;

public class bv
  extends bw
{
  public int a;
  public String b;
  public String c;
  public String d;
  
  public bv() {}
  
  public static String a(Context paramContext, List paramList, Object paramObject)
  {
    try
    {
      paramList = a(paramList, paramObject).toString();
      return paramList;
    }
    catch (Exception paramList)
    {
      new by(paramContext).a(paramList);
    }
    return "";
  }
  
  public static HashMap a(HashMap paramHashMap, String paramString)
  {
    paramString = Pattern.compile("(\\x7b{1}[0-9]+\\x7d{1})", 32).matcher(paramString);
    for (;;)
    {
      if (!paramString.find()) {
        return paramHashMap;
      }
      String str = paramString.group(0);
      paramHashMap.put(Integer.valueOf(Integer.parseInt(str.substring(1, str.length() - 1))), str);
    }
  }
  
  public static List a(Context paramContext, String paramString, Object paramObject)
  {
    try
    {
      paramString = a(paramContext, new JSONArray(paramString), paramObject);
      return paramString;
    }
    catch (Exception paramString)
    {
      new by(paramContext).a(paramString);
    }
    return new ArrayList();
  }
  
  public static List a(Context paramContext, JSONArray paramJSONArray, Object paramObject)
  {
    paramObject = new ArrayList();
    int i = 0;
    try
    {
      for (;;)
      {
        if (i >= paramJSONArray.length()) {
          return paramObject;
        }
        bv localBv = new bv();
        localBv.a(paramJSONArray.getJSONObject(i));
        paramObject.add(localBv);
        i += 1;
      }
      return paramObject;
    }
    catch (Exception paramJSONArray)
    {
      new by(paramContext).a(paramJSONArray);
    }
  }
  
  public static JSONArray a(List paramList, Object paramObject)
  {
    paramObject = new JSONArray();
    int i = 0;
    try
    {
      for (;;)
      {
        if (i >= paramList.size()) {
          return paramObject;
        }
        paramObject.put(((bv)paramList.get(i)).a());
        i += 1;
      }
      return paramObject;
    }
    catch (Exception paramList)
    {
      paramList.printStackTrace();
    }
  }
  
  public JSONObject a()
  {
    JSONObject localJSONObject = super.a();
    try
    {
      localJSONObject.put(h.a, this.a);
      localJSONObject.put(h.b, this.b);
      localJSONObject.put(h.c, this.c);
      localJSONObject.put(h.d, this.d);
      return localJSONObject;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return localJSONObject;
  }
  
  public bx a(String paramString1, String paramString2)
  {
    Object localObject;
    if (b(paramString1, paramString2))
    {
      localObject = this.b;
      if (this.a == 1) {
        return new bx((String)localObject, this.c, this);
      }
      if ((this.a == 2) || (this.a == 3) || (this.a == 4) || (this.a == 5)) {
        if (this.a != 4) {
          break label257;
        }
      }
    }
    for (;;)
    {
      bx localBx = new bx(paramString1, this.c, this);
      localObject = a(new HashMap(), this.c);
      if (this.a == 3) {}
      for (paramString1 = a((HashMap)localObject, paramString1);; paramString1 = (String)localObject)
      {
        paramString2 = Pattern.compile(this.d).matcher(paramString2);
        int i = 0;
        for (;;)
        {
          if (!paramString2.find())
          {
            if (this.a == 5) {
              localBx.a = null;
            }
            return localBx;
          }
          localObject = paramString2.group(0);
          if (paramString1.containsKey(Integer.valueOf(i)))
          {
            localBx.b = localBx.b.replace((CharSequence)paramString1.get(Integer.valueOf(i)), (CharSequence)localObject);
            if (this.a == 3) {
              localBx.a = localBx.a.replace((CharSequence)paramString1.get(Integer.valueOf(i)), (CharSequence)localObject);
            }
          }
          i += 1;
        }
        return null;
        return null;
      }
      label257:
      paramString1 = (String)localObject;
    }
  }
  
  public boolean a(JSONObject paramJSONObject)
  {
    if (super.a(paramJSONObject)) {
      try
      {
        this.a = paramJSONObject.getInt(h.a);
        this.b = paramJSONObject.getString(h.b);
        this.c = paramJSONObject.getString(h.c);
        this.d = paramJSONObject.getString(h.d);
        return true;
      }
      catch (Exception paramJSONObject)
      {
        paramJSONObject.printStackTrace();
      }
    }
    return false;
  }
  
  public boolean equals(Object paramObject)
  {
    if (paramObject == null) {
      return false;
    }
    if (this == paramObject) {
      return true;
    }
    if (getClass() != paramObject.getClass()) {
      return false;
    }
    bv localBv = (bv)paramObject;
    return (super.equals(paramObject)) && (localBv.a == this.a) && (localBv.b.equals(this.b)) && (localBv.c.equals(this.c)) && (localBv.d.equals(this.d));
  }
}
