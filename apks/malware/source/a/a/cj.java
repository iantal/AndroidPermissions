package a.a;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

class cj
  extends ic<ch>
{
  private cj() {}
  
  public void a(ht paramHt, ch paramCh)
  {
    paramHt.f();
    Object localObject1 = paramHt.h();
    if (((hq)localObject1).b == 0)
    {
      paramHt.g();
      paramCh.e();
      return;
    }
    switch (((hq)localObject1).c)
    {
    default: 
      hw.a(paramHt, ((hq)localObject1).b);
    }
    for (;;)
    {
      paramHt.i();
      break;
      int i;
      Object localObject2;
      if (((hq)localObject1).b == 13)
      {
        localObject1 = paramHt.j();
        paramCh.a = new HashMap(((hs)localObject1).c * 2);
        i = 0;
        while (i < ((hs)localObject1).c)
        {
          localObject2 = paramHt.v();
          ca localCa = new ca();
          localCa.a(paramHt);
          paramCh.a.put(localObject2, localCa);
          i += 1;
        }
        paramHt.k();
        paramCh.a(true);
      }
      else
      {
        hw.a(paramHt, ((hq)localObject1).b);
        continue;
        if (((hq)localObject1).b == 15)
        {
          localObject1 = paramHt.l();
          paramCh.b = new ArrayList(((hr)localObject1).b);
          i = 0;
          while (i < ((hr)localObject1).b)
          {
            localObject2 = new bt();
            ((bt)localObject2).a(paramHt);
            paramCh.b.add(localObject2);
            i += 1;
          }
          paramHt.m();
          paramCh.b(true);
        }
        else
        {
          hw.a(paramHt, ((hq)localObject1).b);
          continue;
          if (((hq)localObject1).b == 11)
          {
            paramCh.c = paramHt.v();
            paramCh.c(true);
          }
          else
          {
            hw.a(paramHt, ((hq)localObject1).b);
          }
        }
      }
    }
  }
  
  public void b(ht paramHt, ch paramCh)
  {
    paramCh.e();
    paramHt.a(ch.f());
    Iterator localIterator;
    if (paramCh.a != null)
    {
      paramHt.a(ch.g());
      paramHt.a(new hs((byte)11, (byte)12, paramCh.a.size()));
      localIterator = paramCh.a.entrySet().iterator();
      while (localIterator.hasNext())
      {
        Map.Entry localEntry = (Map.Entry)localIterator.next();
        paramHt.a((String)localEntry.getKey());
        ((ca)localEntry.getValue()).b(paramHt);
      }
      paramHt.d();
      paramHt.b();
    }
    if ((paramCh.b != null) && (paramCh.c()))
    {
      paramHt.a(ch.h());
      paramHt.a(new hr((byte)12, paramCh.b.size()));
      localIterator = paramCh.b.iterator();
      while (localIterator.hasNext()) {
        ((bt)localIterator.next()).b(paramHt);
      }
      paramHt.e();
      paramHt.b();
    }
    if ((paramCh.c != null) && (paramCh.d()))
    {
      paramHt.a(ch.i());
      paramHt.a(paramCh.c);
      paramHt.b();
    }
    paramHt.c();
    paramHt.a();
  }
}
