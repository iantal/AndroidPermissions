package a.a;

import java.util.EnumSet;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public enum eo
  implements gw
{
  private static final Map<String, eo> c;
  private final short d;
  private final String e;
  
  static
  {
    c = new HashMap();
    Iterator localIterator = EnumSet.allOf(eo.class).iterator();
    while (localIterator.hasNext())
    {
      eo localEo = (eo)localIterator.next();
      c.put(localEo.b(), localEo);
    }
  }
  
  private eo(short paramShort, String paramString)
  {
    this.d = paramShort;
    this.e = paramString;
  }
  
  public static eo a(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      return null;
    case 1: 
      return a;
    }
    return b;
  }
  
  public static eo b(int paramInt)
  {
    eo localEo = a(paramInt);
    if (localEo == null) {
      throw new IllegalArgumentException("Field " + paramInt + " doesn't exist!");
    }
    return localEo;
  }
  
  public short a()
  {
    return this.d;
  }
  
  public String b()
  {
    return this.e;
  }
}
