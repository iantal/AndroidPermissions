package a.a;

import java.nio.ByteBuffer;
import java.util.HashMap;
import java.util.Map;

public abstract class gy<T extends gy<?, ?>, F extends gw>
  implements gq<T, F>
{
  private static final Map<Class<? extends ia>, ib> a = new HashMap();
  protected Object b = null;
  protected F c = null;
  
  static
  {
    a.put(ic.class, new hb(null));
    a.put(id.class, new hd(null));
  }
  
  protected gy() {}
  
  protected abstract hq a(F paramF);
  
  protected abstract hy a();
  
  protected abstract Object a(ht paramHt, hq paramHq);
  
  protected abstract Object a(ht paramHt, short paramShort);
  
  public void a(ht paramHt)
  {
    ((ib)a.get(paramHt.y())).b().b(paramHt, this);
  }
  
  public F b()
  {
    return this.c;
  }
  
  protected abstract F b(short paramShort);
  
  public void b(ht paramHt)
  {
    ((ib)a.get(paramHt.y())).b().a(paramHt, this);
  }
  
  public Object c()
  {
    return this.b;
  }
  
  protected abstract void c(ht paramHt);
  
  protected abstract void d(ht paramHt);
  
  public boolean d()
  {
    return this.c != null;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("<");
    localStringBuilder.append(getClass().getSimpleName());
    localStringBuilder.append(" ");
    Object localObject;
    if (b() != null)
    {
      localObject = c();
      localStringBuilder.append(a(b()).a);
      localStringBuilder.append(":");
      if (!(localObject instanceof ByteBuffer)) {
        break label96;
      }
      gr.a((ByteBuffer)localObject, localStringBuilder);
    }
    for (;;)
    {
      localStringBuilder.append(">");
      return localStringBuilder.toString();
      label96:
      localStringBuilder.append(localObject.toString());
    }
  }
}
