package a.a;

import java.io.Serializable;
import java.util.Collections;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ch
  implements gq<ch, cn>, Serializable, Cloneable
{
  public static final Map<cn, hf> d;
  private static final hy e = new hy("IdTracking");
  private static final hq f = new hq("snapshots", (byte)13, (short)1);
  private static final hq g = new hq("journals", (byte)15, (short)2);
  private static final hq h = new hq("checksum", (byte)11, (short)3);
  private static final Map<Class<? extends ia>, ib> i = new HashMap();
  public Map<String, ca> a;
  public List<bt> b;
  public String c;
  private cn[] j = { cn.b, cn.c };
  
  static
  {
    i.put(ic.class, new ck(null));
    i.put(id.class, new cm(null));
    EnumMap localEnumMap = new EnumMap(cn.class);
    localEnumMap.put(cn.a, new hf("snapshots", (byte)1, new hi((byte)13, new hg((byte)11), new hj((byte)12, ca.class))));
    localEnumMap.put(cn.b, new hf("journals", (byte)2, new hh((byte)15, new hj((byte)12, bt.class))));
    localEnumMap.put(cn.c, new hf("checksum", (byte)2, new hg((byte)11)));
    d = Collections.unmodifiableMap(localEnumMap);
    hf.a(ch.class, d);
  }
  
  public ch() {}
  
  public ch a(List<bt> paramList)
  {
    this.b = paramList;
    return this;
  }
  
  public ch a(Map<String, ca> paramMap)
  {
    this.a = paramMap;
    return this;
  }
  
  public Map<String, ca> a()
  {
    return this.a;
  }
  
  public void a(ht paramHt)
  {
    ((ib)i.get(paramHt.y())).b().b(paramHt, this);
  }
  
  public void a(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.a = null;
    }
  }
  
  public List<bt> b()
  {
    return this.b;
  }
  
  public void b(ht paramHt)
  {
    ((ib)i.get(paramHt.y())).b().a(paramHt, this);
  }
  
  public void b(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.b = null;
    }
  }
  
  public void c(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.c = null;
    }
  }
  
  public boolean c()
  {
    return this.b != null;
  }
  
  public boolean d()
  {
    return this.c != null;
  }
  
  public void e()
  {
    if (this.a == null) {
      throw new hu("Required field 'snapshots' was not present! Struct: " + toString());
    }
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder("IdTracking(");
    localStringBuilder.append("snapshots:");
    if (this.a == null)
    {
      localStringBuilder.append("null");
      if (c())
      {
        localStringBuilder.append(", ");
        localStringBuilder.append("journals:");
        if (this.b != null) {
          break label125;
        }
        localStringBuilder.append("null");
      }
      label66:
      if (d())
      {
        localStringBuilder.append(", ");
        localStringBuilder.append("checksum:");
        if (this.c != null) {
          break label137;
        }
        localStringBuilder.append("null");
      }
    }
    for (;;)
    {
      localStringBuilder.append(")");
      return localStringBuilder.toString();
      localStringBuilder.append(this.a);
      break;
      label125:
      localStringBuilder.append(this.b);
      break label66;
      label137:
      localStringBuilder.append(this.c);
    }
  }
}
