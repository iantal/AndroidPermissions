package a.a;

import java.io.Serializable;
import java.util.Collections;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.Map;

public class cp
  implements gq<cp, cv>, Serializable, Cloneable
{
  public static final Map<cv, hf> d;
  private static final hy e = new hy("Imprint");
  private static final hq f = new hq("property", (byte)13, (short)1);
  private static final hq g = new hq("version", (byte)8, (short)2);
  private static final hq h = new hq("checksum", (byte)11, (short)3);
  private static final Map<Class<? extends ia>, ib> i = new HashMap();
  public Map<String, cw> a;
  public int b;
  public String c;
  private byte j = 0;
  
  static
  {
    i.put(ic.class, new cs(null));
    i.put(id.class, new cu(null));
    EnumMap localEnumMap = new EnumMap(cv.class);
    localEnumMap.put(cv.a, new hf("property", (byte)1, new hi((byte)13, new hg((byte)11), new hj((byte)12, cw.class))));
    localEnumMap.put(cv.b, new hf("version", (byte)1, new hg((byte)8)));
    localEnumMap.put(cv.c, new hf("checksum", (byte)1, new hg((byte)11)));
    d = Collections.unmodifiableMap(localEnumMap);
    hf.a(cp.class, d);
  }
  
  public cp() {}
  
  public cp a(int paramInt)
  {
    this.b = paramInt;
    b(true);
    return this;
  }
  
  public cp a(String paramString)
  {
    this.c = paramString;
    return this;
  }
  
  public Map<String, cw> a()
  {
    return this.a;
  }
  
  public void a(ht paramHt)
  {
    ((ib)i.get(paramHt.y())).b().b(paramHt, this);
  }
  
  public void a(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.a = null;
    }
  }
  
  public void b(ht paramHt)
  {
    ((ib)i.get(paramHt.y())).b().a(paramHt, this);
  }
  
  public void b(boolean paramBoolean)
  {
    this.j = go.a(this.j, 0, paramBoolean);
  }
  
  public boolean b()
  {
    return this.a != null;
  }
  
  public int c()
  {
    return this.b;
  }
  
  public void c(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.c = null;
    }
  }
  
  public boolean d()
  {
    return go.a(this.j, 0);
  }
  
  public String e()
  {
    return this.c;
  }
  
  public void f()
  {
    if (this.a == null) {
      throw new hu("Required field 'property' was not present! Struct: " + toString());
    }
    if (this.c == null) {
      throw new hu("Required field 'checksum' was not present! Struct: " + toString());
    }
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder("Imprint(");
    localStringBuilder.append("property:");
    if (this.a == null)
    {
      localStringBuilder.append("null");
      localStringBuilder.append(", ");
      localStringBuilder.append("version:");
      localStringBuilder.append(this.b);
      localStringBuilder.append(", ");
      localStringBuilder.append("checksum:");
      if (this.c != null) {
        break label106;
      }
      localStringBuilder.append("null");
    }
    for (;;)
    {
      localStringBuilder.append(")");
      return localStringBuilder.toString();
      localStringBuilder.append(this.a);
      break;
      label106:
      localStringBuilder.append(this.c);
    }
  }
}
