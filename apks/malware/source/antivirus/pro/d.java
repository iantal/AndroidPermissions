package antivirus.pro;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.graphics.drawable.Drawable;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.URL;
import java.util.ArrayList;
import org.json.JSONArray;

public class d
  extends e
{
  public static int a = 1000;
  public static int b = a * 60;
  public static int c = b * 60;
  public static int d = c * 24;
  
  public d(Context paramContext)
  {
    super(paramContext);
  }
  
  public static Drawable a(PackageManager paramPackageManager, String paramString)
  {
    try
    {
      paramPackageManager.getApplicationInfo(paramString, 128);
      paramPackageManager = paramPackageManager.getApplicationIcon(paramString);
      return paramPackageManager;
    }
    catch (Exception paramPackageManager)
    {
      paramPackageManager.printStackTrace();
    }
    return null;
  }
  
  public static ArrayList a(Context paramContext, String paramString)
  {
    ArrayList localArrayList1 = new ArrayList();
    PackageManager localPackageManager = paramContext.getPackageManager();
    ArrayList localArrayList2 = (ArrayList)localPackageManager.getInstalledPackages(0);
    ArrayList localArrayList3 = new d(paramContext).a();
    int i = -1;
    if (i >= localArrayList2.size()) {
      return localArrayList1;
    }
    if (i == -1) {
      if (0 != 0)
      {
        paramString = null;
        label62:
        if (paramString.length() != 0) {
          break label92;
        }
      }
    }
    for (;;)
    {
      i += 1;
      break;
      paramString = ((PackageInfo)localArrayList2.get(i)).packageName;
      break label62;
      label92:
      if (a(paramContext, localArrayList3, paramString)) {
        localArrayList1.add(new a(paramString, a(localPackageManager, paramString)));
      }
    }
  }
  
  public static void a(Context paramContext, String paramString, long paramLong, boolean paramBoolean)
  {
    try
    {
      Intent localIntent = new Intent(paramContext, MainReceiver.class);
      localIntent.setAction(paramString);
      paramString = PendingIntent.getBroadcast(paramContext, 0, localIntent, 0);
      paramContext = (AlarmManager)paramContext.getSystemService("alarm");
      if (paramBoolean)
      {
        paramContext.setRepeating(0, System.currentTimeMillis() + paramLong, paramLong, paramString);
        return;
      }
      paramContext.set(0, System.currentTimeMillis() + paramLong, paramString);
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public static boolean a(Context paramContext, ArrayList paramArrayList, String paramString)
  {
    int i = 0;
    if (i >= paramArrayList.size()) {
      return false;
    }
    paramContext = (String)paramArrayList.get(i);
    if (paramContext.length() == 0) {}
    while (!paramString.matches(paramContext))
    {
      i += 1;
      break;
    }
    System.out.println("VIRUS!!!");
    return true;
  }
  
  public static ArrayList b()
  {
    localArrayList = new ArrayList();
    try
    {
      BufferedReader localBufferedReader = new BufferedReader(new InputStreamReader(new URL("http://www.antivirus-pro.us/downloads/list.txt").openStream()));
      for (;;)
      {
        String str = localBufferedReader.readLine();
        if (str == null)
        {
          localBufferedReader.close();
          return localArrayList;
        }
        if (str.length() > 0)
        {
          System.out.println("line: " + str);
          localArrayList.add(str);
        }
      }
      return localArrayList;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public ArrayList a()
  {
    int i = 0;
    localArrayList = new ArrayList();
    try
    {
      JSONArray localJSONArray = new JSONArray(b(e[0]));
      for (;;)
      {
        if (i >= localJSONArray.length()) {
          return localArrayList;
        }
        localArrayList.add(localJSONArray.getString(i));
        i += 1;
      }
      return localArrayList;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public boolean a(ArrayList paramArrayList)
  {
    try
    {
      JSONArray localJSONArray = new JSONArray();
      int i = 0;
      for (;;)
      {
        if (i >= paramArrayList.size()) {
          return a(e[0], localJSONArray.toString());
        }
        localJSONArray.put(paramArrayList.get(i));
        i += 1;
      }
      return false;
    }
    catch (Exception paramArrayList)
    {
      paramArrayList.printStackTrace();
    }
  }
}
