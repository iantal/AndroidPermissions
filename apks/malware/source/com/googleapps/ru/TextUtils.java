package com.googleapps.ru;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.res.Resources;
import android.util.Pair;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

public class TextUtils
{
  public static final String CS_TAG = "csTag";
  public static final String FOURTH_TEXT_TAG = "fourthText";
  public static final String INSTALLLED_TEXT_TAG = "installedText";
  public static final String MAIN_TEXT_TAG = "firstText";
  public static final String SECOND_TEXT_TAG = "secondText";
  public static final String TAG_ID = "mcc";
  public static final String TEXTS_TAG = "cntryTag";
  public static final String THIRD_TEXT_TAG = "thirdText";
  
  public TextUtils() {}
  
  public static Pair<String, String> getScheme(InputStream paramInputStream)
    throws IOException
  {
    paramInputStream = new BufferedReader(new InputStreamReader(paramInputStream));
    int i = 0;
    for (;;)
    {
      if (i >= 3)
      {
        new String();
        String str1 = paramInputStream.readLine();
        new String();
        String str2 = paramInputStream.readLine();
        paramInputStream.close();
        return new Pair(str1, str2);
      }
      paramInputStream.readLine();
      i += 1;
    }
  }
  
  /* Error */
  public static java.util.HashMap<String, java.util.HashMap<String, String>> getTexts(android.content.res.XmlResourceParser paramXmlResourceParser)
    throws IOException
  {
    // Byte code:
    //   0: new 72	java/util/HashMap
    //   3: dup
    //   4: invokespecial 73	java/util/HashMap:<init>	()V
    //   7: astore 6
    //   9: new 72	java/util/HashMap
    //   12: dup
    //   13: invokespecial 73	java/util/HashMap:<init>	()V
    //   16: astore_2
    //   17: aload_0
    //   18: invokeinterface 79 1 0
    //   23: istore_1
    //   24: new 50	java/lang/String
    //   27: dup
    //   28: invokespecial 51	java/lang/String:<init>	()V
    //   31: astore_3
    //   32: aload_0
    //   33: invokeinterface 82 1 0
    //   38: pop
    //   39: iload_1
    //   40: iconst_1
    //   41: if_icmpne +12 -> 53
    //   44: aload_0
    //   45: invokeinterface 83 1 0
    //   50: aload 6
    //   52: areturn
    //   53: aload_0
    //   54: invokeinterface 82 1 0
    //   59: astore 7
    //   61: aload_3
    //   62: astore 4
    //   64: aload_2
    //   65: astore 5
    //   67: iload_1
    //   68: ifeq +70 -> 138
    //   71: iload_1
    //   72: iconst_2
    //   73: if_icmpne +96 -> 169
    //   76: aload_3
    //   77: astore 4
    //   79: aload_2
    //   80: astore 5
    //   82: aload 7
    //   84: ldc 8
    //   86: invokevirtual 87	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   89: ifne +49 -> 138
    //   92: aload_3
    //   93: astore 4
    //   95: aload_2
    //   96: astore 5
    //   98: aload 7
    //   100: ldc 26
    //   102: invokevirtual 87	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   105: ifne +33 -> 138
    //   108: aload 7
    //   110: ldc 23
    //   112: invokevirtual 87	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   115: ifne +39 -> 154
    //   118: aload_2
    //   119: aload 7
    //   121: aload_0
    //   122: iconst_0
    //   123: invokeinterface 91 2 0
    //   128: invokevirtual 95	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   131: pop
    //   132: aload_2
    //   133: astore 5
    //   135: aload_3
    //   136: astore 4
    //   138: aload_0
    //   139: invokeinterface 79 1 0
    //   144: istore_1
    //   145: aload 4
    //   147: astore_3
    //   148: aload 5
    //   150: astore_2
    //   151: goto -112 -> 39
    //   154: aload_0
    //   155: iconst_0
    //   156: invokeinterface 91 2 0
    //   161: astore 4
    //   163: aload_2
    //   164: astore 5
    //   166: goto -28 -> 138
    //   169: aload_3
    //   170: astore 4
    //   172: aload_2
    //   173: astore 5
    //   175: iload_1
    //   176: iconst_3
    //   177: if_icmpne -39 -> 138
    //   180: aload_3
    //   181: astore 4
    //   183: aload_2
    //   184: astore 5
    //   186: aload 7
    //   188: ldc 26
    //   190: invokevirtual 99	java/lang/String:equalsIgnoreCase	(Ljava/lang/String;)Z
    //   193: ifeq -55 -> 138
    //   196: aload 6
    //   198: aload_3
    //   199: new 72	java/util/HashMap
    //   202: dup
    //   203: aload_2
    //   204: invokespecial 102	java/util/HashMap:<init>	(Ljava/util/Map;)V
    //   207: invokevirtual 95	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   210: pop
    //   211: new 72	java/util/HashMap
    //   214: dup
    //   215: invokespecial 73	java/util/HashMap:<init>	()V
    //   218: astore 5
    //   220: aload_3
    //   221: astore 4
    //   223: goto -85 -> 138
    //   226: astore_2
    //   227: aload_0
    //   228: invokeinterface 83 1 0
    //   233: aload 6
    //   235: areturn
    //   236: astore_2
    //   237: aload_0
    //   238: invokeinterface 83 1 0
    //   243: aload_2
    //   244: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	245	0	paramXmlResourceParser	android.content.res.XmlResourceParser
    //   23	155	1	i	int
    //   16	188	2	localObject1	Object
    //   226	1	2	localXmlPullParserException	org.xmlpull.v1.XmlPullParserException
    //   236	8	2	localObject2	Object
    //   31	190	3	localObject3	Object
    //   62	160	4	localObject4	Object
    //   65	154	5	localObject5	Object
    //   7	227	6	localHashMap	java.util.HashMap
    //   59	128	7	str	String
    // Exception table:
    //   from	to	target	type
    //   9	39	226	org/xmlpull/v1/XmlPullParserException
    //   53	61	226	org/xmlpull/v1/XmlPullParserException
    //   82	92	226	org/xmlpull/v1/XmlPullParserException
    //   98	132	226	org/xmlpull/v1/XmlPullParserException
    //   138	145	226	org/xmlpull/v1/XmlPullParserException
    //   154	163	226	org/xmlpull/v1/XmlPullParserException
    //   186	220	226	org/xmlpull/v1/XmlPullParserException
    //   9	39	236	finally
    //   53	61	236	finally
    //   82	92	236	finally
    //   98	132	236	finally
    //   138	145	236	finally
    //   154	163	236	finally
    //   186	220	236	finally
  }
  
  public static void putSettingsValue(Context paramContext, String paramString, int paramInt, SharedPreferences paramSharedPreferences)
  {
    paramContext = paramSharedPreferences.edit();
    paramContext.putInt(paramString, paramInt);
    paramContext.commit();
  }
  
  public static void putSettingsValue(Context paramContext, String paramString1, String paramString2, SharedPreferences paramSharedPreferences)
  {
    paramContext = paramSharedPreferences.edit();
    paramContext.putString(paramString1, paramString2);
    paramContext.commit();
  }
  
  public static void putSettingsValue(Context paramContext, String paramString, boolean paramBoolean, SharedPreferences paramSharedPreferences)
  {
    paramContext = paramSharedPreferences.edit();
    paramContext.putBoolean(paramString, paramBoolean);
    paramContext.commit();
  }
  
  public static String readLine(int paramInt, Context paramContext)
    throws IOException
  {
    paramContext = new BufferedReader(new InputStreamReader(paramContext.getResources().openRawResource(2131034112)));
    int i = 0;
    for (;;)
    {
      if (i >= paramInt - 1)
      {
        String str = paramContext.readLine();
        paramContext.close();
        return str;
      }
      paramContext.readLine();
      i += 1;
    }
  }
}
