package com.oimobi.oim.common;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.security.Key;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;

public class DESFileUtils
{
  private static String DES;
  
  static
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("D").append("E").append("S");
    DES = localStringBuilder.toString();
  }
  
  public DESFileUtils() {}
  
  /* Error */
  public static String decrypt(String paramString1, String paramString2)
  {
    // Byte code:
    //   0: ldc 39
    //   2: astore 6
    //   4: new 41	java/io/File
    //   7: dup
    //   8: aload_0
    //   9: invokespecial 44	java/io/File:<init>	(Ljava/lang/String;)V
    //   12: invokevirtual 48	java/io/File:exists	()Z
    //   15: ifne +6 -> 21
    //   18: ldc 39
    //   20: areturn
    //   21: new 41	java/io/File
    //   24: dup
    //   25: aload_1
    //   26: invokespecial 44	java/io/File:<init>	(Ljava/lang/String;)V
    //   29: invokevirtual 51	java/io/File:delete	()Z
    //   32: pop
    //   33: aconst_null
    //   34: astore_3
    //   35: aconst_null
    //   36: astore 8
    //   38: aconst_null
    //   39: astore 4
    //   41: aconst_null
    //   42: astore 7
    //   44: aconst_null
    //   45: astore 5
    //   47: new 53	java/io/FileInputStream
    //   50: dup
    //   51: aload_0
    //   52: invokespecial 54	java/io/FileInputStream:<init>	(Ljava/lang/String;)V
    //   55: astore_0
    //   56: new 56	java/io/FileOutputStream
    //   59: dup
    //   60: aload_1
    //   61: invokespecial 57	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   64: astore_3
    //   65: aload_0
    //   66: aload_3
    //   67: invokestatic 61	com/oimobi/oim/common/DESFileUtils:split	(Ljava/io/InputStream;Ljava/io/OutputStream;)Ljava/lang/String;
    //   70: astore 4
    //   72: getstatic 66	com/oimobi/oim/common/Constants:KEYDES	Ljava/lang/String;
    //   75: invokestatic 72	com/oimobi/oim/common/MD5Util:getMD5String	(Ljava/lang/String;)Ljava/lang/String;
    //   78: astore 5
    //   80: aload 6
    //   82: astore_1
    //   83: aload 5
    //   85: ifnull +34 -> 119
    //   88: aload 6
    //   90: astore_1
    //   91: ldc 39
    //   93: aload 5
    //   95: invokevirtual 78	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   98: ifne +21 -> 119
    //   101: aload 5
    //   103: aload 4
    //   105: invokevirtual 78	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   108: istore_2
    //   109: aload 6
    //   111: astore_1
    //   112: iload_2
    //   113: ifeq +6 -> 119
    //   116: aload 4
    //   118: astore_1
    //   119: aload_3
    //   120: ifnull +7 -> 127
    //   123: aload_3
    //   124: invokevirtual 83	java/io/OutputStream:close	()V
    //   127: aload_0
    //   128: ifnull +7 -> 135
    //   131: aload_0
    //   132: invokevirtual 86	java/io/InputStream:close	()V
    //   135: aload_1
    //   136: areturn
    //   137: astore_3
    //   138: aload_3
    //   139: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   142: goto -15 -> 127
    //   145: astore_0
    //   146: aload_0
    //   147: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   150: goto -15 -> 135
    //   153: astore_1
    //   154: aload 8
    //   156: astore_0
    //   157: aload_0
    //   158: astore_3
    //   159: aload 5
    //   161: astore 4
    //   163: aload_1
    //   164: invokevirtual 90	java/lang/Exception:printStackTrace	()V
    //   167: aload 5
    //   169: ifnull +8 -> 177
    //   172: aload 5
    //   174: invokevirtual 83	java/io/OutputStream:close	()V
    //   177: aload 6
    //   179: astore_1
    //   180: aload_0
    //   181: ifnull -46 -> 135
    //   184: aload_0
    //   185: invokevirtual 86	java/io/InputStream:close	()V
    //   188: aload 6
    //   190: astore_1
    //   191: goto -56 -> 135
    //   194: astore_0
    //   195: aload_0
    //   196: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   199: aload 6
    //   201: astore_1
    //   202: goto -67 -> 135
    //   205: astore_1
    //   206: aload_1
    //   207: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   210: goto -33 -> 177
    //   213: astore_0
    //   214: aload 4
    //   216: ifnull +8 -> 224
    //   219: aload 4
    //   221: invokevirtual 83	java/io/OutputStream:close	()V
    //   224: aload_3
    //   225: ifnull +7 -> 232
    //   228: aload_3
    //   229: invokevirtual 86	java/io/InputStream:close	()V
    //   232: aload_0
    //   233: athrow
    //   234: astore_1
    //   235: aload_1
    //   236: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   239: goto -15 -> 224
    //   242: astore_1
    //   243: aload_1
    //   244: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   247: goto -15 -> 232
    //   250: astore_1
    //   251: aload_0
    //   252: astore_3
    //   253: aload 7
    //   255: astore 4
    //   257: aload_1
    //   258: astore_0
    //   259: goto -45 -> 214
    //   262: astore_1
    //   263: aload_3
    //   264: astore 4
    //   266: aload_0
    //   267: astore_3
    //   268: aload_1
    //   269: astore_0
    //   270: goto -56 -> 214
    //   273: astore_1
    //   274: goto -117 -> 157
    //   277: astore_1
    //   278: aload_3
    //   279: astore 5
    //   281: goto -124 -> 157
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	284	0	paramString1	String
    //   0	284	1	paramString2	String
    //   108	5	2	bool	boolean
    //   34	90	3	localFileOutputStream	java.io.FileOutputStream
    //   137	2	3	localIOException	IOException
    //   158	121	3	str1	String
    //   39	226	4	localObject1	Object
    //   45	235	5	str2	String
    //   2	198	6	str3	String
    //   42	212	7	localObject2	Object
    //   36	119	8	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   123	127	137	java/io/IOException
    //   131	135	145	java/io/IOException
    //   47	56	153	java/lang/Exception
    //   184	188	194	java/io/IOException
    //   172	177	205	java/io/IOException
    //   47	56	213	finally
    //   163	167	213	finally
    //   219	224	234	java/io/IOException
    //   228	232	242	java/io/IOException
    //   56	65	250	finally
    //   65	80	262	finally
    //   91	109	262	finally
    //   56	65	273	java/lang/Exception
    //   65	80	277	java/lang/Exception
    //   91	109	277	java/lang/Exception
  }
  
  private static Cipher decryptCipher(Key paramKey)
    throws Exception
  {
    Cipher localCipher = Cipher.getInstance(DES);
    localCipher.init(2, paramKey);
    return localCipher;
  }
  
  /* Error */
  public static String encrypt(String paramString1, String paramString2)
  {
    // Byte code:
    //   0: new 41	java/io/File
    //   3: dup
    //   4: aload_0
    //   5: invokespecial 44	java/io/File:<init>	(Ljava/lang/String;)V
    //   8: invokevirtual 48	java/io/File:exists	()Z
    //   11: ifne +8 -> 19
    //   14: ldc 39
    //   16: astore_3
    //   17: aload_3
    //   18: areturn
    //   19: getstatic 66	com/oimobi/oim/common/Constants:KEYDES	Ljava/lang/String;
    //   22: invokestatic 72	com/oimobi/oim/common/MD5Util:getMD5String	(Ljava/lang/String;)Ljava/lang/String;
    //   25: astore 7
    //   27: aload 7
    //   29: invokestatic 108	com/oimobi/oim/common/DESFileUtils:getKey	(Ljava/lang/String;)Ljava/security/Key;
    //   32: astore 11
    //   34: aload 7
    //   36: astore_3
    //   37: aload 11
    //   39: ifnull -22 -> 17
    //   42: aconst_null
    //   43: astore 4
    //   45: aconst_null
    //   46: astore 10
    //   48: aconst_null
    //   49: astore 5
    //   51: aconst_null
    //   52: astore 9
    //   54: aconst_null
    //   55: astore_2
    //   56: aconst_null
    //   57: astore_3
    //   58: aconst_null
    //   59: astore 8
    //   61: aconst_null
    //   62: astore 6
    //   64: new 53	java/io/FileInputStream
    //   67: dup
    //   68: aload_0
    //   69: invokespecial 54	java/io/FileInputStream:<init>	(Ljava/lang/String;)V
    //   72: astore_0
    //   73: new 56	java/io/FileOutputStream
    //   76: dup
    //   77: aload_1
    //   78: invokespecial 57	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   81: astore_1
    //   82: new 110	javax/crypto/CipherInputStream
    //   85: dup
    //   86: aload_0
    //   87: aload 11
    //   89: invokestatic 113	com/oimobi/oim/common/DESFileUtils:encryptCipher	(Ljava/security/Key;)Ljavax/crypto/Cipher;
    //   92: invokespecial 116	javax/crypto/CipherInputStream:<init>	(Ljava/io/InputStream;Ljavax/crypto/Cipher;)V
    //   95: astore_2
    //   96: aload 7
    //   98: aload_2
    //   99: aload_1
    //   100: invokestatic 120	com/oimobi/oim/common/DESFileUtils:merger	(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/OutputStream;)V
    //   103: aload_2
    //   104: ifnull +7 -> 111
    //   107: aload_2
    //   108: invokevirtual 121	javax/crypto/CipherInputStream:close	()V
    //   111: aload_0
    //   112: ifnull +7 -> 119
    //   115: aload_0
    //   116: invokevirtual 86	java/io/InputStream:close	()V
    //   119: aload_1
    //   120: ifnull +7 -> 127
    //   123: aload_1
    //   124: invokevirtual 83	java/io/OutputStream:close	()V
    //   127: aload 7
    //   129: areturn
    //   130: astore_2
    //   131: aload_2
    //   132: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   135: goto -24 -> 111
    //   138: astore_0
    //   139: aload_0
    //   140: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   143: goto -24 -> 119
    //   146: astore_0
    //   147: aload_0
    //   148: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   151: aload 7
    //   153: areturn
    //   154: astore_1
    //   155: aload 10
    //   157: astore_0
    //   158: aload 6
    //   160: astore_3
    //   161: aload_0
    //   162: astore 4
    //   164: aload_2
    //   165: astore 5
    //   167: aload_1
    //   168: invokevirtual 90	java/lang/Exception:printStackTrace	()V
    //   171: aload 6
    //   173: ifnull +8 -> 181
    //   176: aload 6
    //   178: invokevirtual 121	javax/crypto/CipherInputStream:close	()V
    //   181: aload_0
    //   182: ifnull +7 -> 189
    //   185: aload_0
    //   186: invokevirtual 86	java/io/InputStream:close	()V
    //   189: aload 7
    //   191: astore_3
    //   192: aload_2
    //   193: ifnull -176 -> 17
    //   196: aload_2
    //   197: invokevirtual 83	java/io/OutputStream:close	()V
    //   200: aload 7
    //   202: areturn
    //   203: astore_0
    //   204: aload_0
    //   205: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   208: aload 7
    //   210: areturn
    //   211: astore_1
    //   212: aload_1
    //   213: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   216: goto -35 -> 181
    //   219: astore_0
    //   220: aload_0
    //   221: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   224: goto -35 -> 189
    //   227: astore_2
    //   228: aload 5
    //   230: astore_1
    //   231: aload 4
    //   233: astore_0
    //   234: aload_3
    //   235: ifnull +7 -> 242
    //   238: aload_3
    //   239: invokevirtual 121	javax/crypto/CipherInputStream:close	()V
    //   242: aload_0
    //   243: ifnull +7 -> 250
    //   246: aload_0
    //   247: invokevirtual 86	java/io/InputStream:close	()V
    //   250: aload_1
    //   251: ifnull +7 -> 258
    //   254: aload_1
    //   255: invokevirtual 83	java/io/OutputStream:close	()V
    //   258: aload_2
    //   259: athrow
    //   260: astore_3
    //   261: aload_3
    //   262: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   265: goto -23 -> 242
    //   268: astore_0
    //   269: aload_0
    //   270: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   273: goto -23 -> 250
    //   276: astore_0
    //   277: aload_0
    //   278: invokevirtual 89	java/io/IOException:printStackTrace	()V
    //   281: goto -23 -> 258
    //   284: astore_2
    //   285: aload 8
    //   287: astore_3
    //   288: aload 9
    //   290: astore_1
    //   291: goto -57 -> 234
    //   294: astore_2
    //   295: aload 8
    //   297: astore_3
    //   298: goto -64 -> 234
    //   301: astore 4
    //   303: aload_2
    //   304: astore_3
    //   305: aload 4
    //   307: astore_2
    //   308: goto -74 -> 234
    //   311: astore_1
    //   312: goto -154 -> 158
    //   315: astore_3
    //   316: aload_1
    //   317: astore_2
    //   318: aload_3
    //   319: astore_1
    //   320: goto -162 -> 158
    //   323: astore_3
    //   324: aload_2
    //   325: astore 6
    //   327: aload_1
    //   328: astore_2
    //   329: aload_3
    //   330: astore_1
    //   331: goto -173 -> 158
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	334	0	paramString1	String
    //   0	334	1	paramString2	String
    //   55	53	2	localCipherInputStream	javax.crypto.CipherInputStream
    //   130	67	2	localIOException1	IOException
    //   227	32	2	localObject1	Object
    //   284	1	2	localObject2	Object
    //   294	10	2	localObject3	Object
    //   307	22	2	localObject4	Object
    //   16	223	3	localObject5	Object
    //   260	2	3	localIOException2	IOException
    //   287	18	3	localObject6	Object
    //   315	4	3	localException1	Exception
    //   323	7	3	localException2	Exception
    //   43	189	4	str1	String
    //   301	5	4	localObject7	Object
    //   49	180	5	localObject8	Object
    //   62	264	6	localObject9	Object
    //   25	184	7	str2	String
    //   59	237	8	localObject10	Object
    //   52	237	9	localObject11	Object
    //   46	110	10	localObject12	Object
    //   32	56	11	localKey	Key
    // Exception table:
    //   from	to	target	type
    //   107	111	130	java/io/IOException
    //   115	119	138	java/io/IOException
    //   123	127	146	java/io/IOException
    //   64	73	154	java/lang/Exception
    //   196	200	203	java/io/IOException
    //   176	181	211	java/io/IOException
    //   185	189	219	java/io/IOException
    //   64	73	227	finally
    //   167	171	227	finally
    //   238	242	260	java/io/IOException
    //   246	250	268	java/io/IOException
    //   254	258	276	java/io/IOException
    //   73	82	284	finally
    //   82	96	294	finally
    //   96	103	301	finally
    //   73	82	311	java/lang/Exception
    //   82	96	315	java/lang/Exception
    //   96	103	323	java/lang/Exception
  }
  
  private static Cipher encryptCipher(Key paramKey)
    throws Exception
  {
    Cipher localCipher = Cipher.getInstance(DES);
    localCipher.init(1, paramKey);
    return localCipher;
  }
  
  private static Key getKey(String paramString)
  {
    try
    {
      paramString = paramString.getBytes();
      byte[] arrayOfByte = new byte[8];
      int i = 0;
      while ((i < arrayOfByte.length) && (i < paramString.length))
      {
        arrayOfByte[i] = paramString[i];
        i += 1;
      }
      paramString = new SecretKeySpec(arrayOfByte, DES);
      return paramString;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
    return null;
  }
  
  public static void main(String[] paramArrayOfString)
  {
    encrypt("d:/tmp/fox.jar", "d:/tmp/fox");
  }
  
  private static void merger(String paramString, InputStream paramInputStream, OutputStream paramOutputStream)
  {
    try
    {
      byte[] arrayOfByte = new byte['Ѐ'];
      try
      {
        paramOutputStream.write(paramString.getBytes());
        for (;;)
        {
          int i = paramInputStream.read(arrayOfByte);
          if (i == -1) {
            break;
          }
          paramOutputStream.write(arrayOfByte, 0, i);
        }
        paramOutputStream.flush();
      }
      catch (IOException paramString)
      {
        paramString.printStackTrace();
        return;
      }
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  /* Error */
  private static String split(InputStream paramInputStream, OutputStream paramOutputStream)
  {
    // Byte code:
    //   0: ldc 39
    //   2: astore 6
    //   4: aconst_null
    //   5: astore 8
    //   7: aconst_null
    //   8: astore 7
    //   10: aload 8
    //   12: astore 4
    //   14: aload 6
    //   16: astore 5
    //   18: bipush 32
    //   20: newarray byte
    //   22: astore 10
    //   24: aload 8
    //   26: astore 4
    //   28: aload 6
    //   30: astore 5
    //   32: sipush 1024
    //   35: newarray byte
    //   37: astore 9
    //   39: aload 6
    //   41: astore_3
    //   42: aload 8
    //   44: astore 4
    //   46: aload 6
    //   48: astore 5
    //   50: aload_0
    //   51: aload 10
    //   53: invokevirtual 146	java/io/InputStream:read	([B)I
    //   56: iconst_m1
    //   57: if_icmpeq +21 -> 78
    //   60: aload 8
    //   62: astore 4
    //   64: aload 6
    //   66: astore 5
    //   68: new 74	java/lang/String
    //   71: dup
    //   72: aload 10
    //   74: invokespecial 154	java/lang/String:<init>	([B)V
    //   77: astore_3
    //   78: aload 8
    //   80: astore 4
    //   82: aload_3
    //   83: astore 5
    //   85: new 156	javax/crypto/CipherOutputStream
    //   88: dup
    //   89: aload_1
    //   90: aload_3
    //   91: invokestatic 108	com/oimobi/oim/common/DESFileUtils:getKey	(Ljava/lang/String;)Ljava/security/Key;
    //   94: invokestatic 158	com/oimobi/oim/common/DESFileUtils:decryptCipher	(Ljava/security/Key;)Ljavax/crypto/Cipher;
    //   97: invokespecial 161	javax/crypto/CipherOutputStream:<init>	(Ljava/io/OutputStream;Ljavax/crypto/Cipher;)V
    //   100: astore_1
    //   101: aload_1
    //   102: ifnull +54 -> 156
    //   105: aload_0
    //   106: aload 9
    //   108: invokevirtual 146	java/io/InputStream:read	([B)I
    //   111: istore_2
    //   112: iload_2
    //   113: iconst_m1
    //   114: if_icmpeq +38 -> 152
    //   117: aload_1
    //   118: aload 9
    //   120: iconst_0
    //   121: iload_2
    //   122: invokevirtual 162	javax/crypto/CipherOutputStream:write	([BII)V
    //   125: goto -20 -> 105
    //   128: astore 4
    //   130: aload_1
    //   131: astore_0
    //   132: aload 4
    //   134: astore_1
    //   135: aload_0
    //   136: astore 4
    //   138: aload_1
    //   139: invokevirtual 90	java/lang/Exception:printStackTrace	()V
    //   142: aload_0
    //   143: ifnull +7 -> 150
    //   146: aload_0
    //   147: invokevirtual 163	javax/crypto/CipherOutputStream:close	()V
    //   150: aload_3
    //   151: areturn
    //   152: aload_1
    //   153: invokevirtual 164	javax/crypto/CipherOutputStream:flush	()V
    //   156: aload_1
    //   157: ifnull +49 -> 206
    //   160: aload_1
    //   161: invokevirtual 163	javax/crypto/CipherOutputStream:close	()V
    //   164: aload_3
    //   165: areturn
    //   166: astore_0
    //   167: aload_3
    //   168: areturn
    //   169: astore_0
    //   170: aload 4
    //   172: ifnull +8 -> 180
    //   175: aload 4
    //   177: invokevirtual 163	javax/crypto/CipherOutputStream:close	()V
    //   180: aload_0
    //   181: athrow
    //   182: astore_0
    //   183: aload_3
    //   184: areturn
    //   185: astore_1
    //   186: goto -6 -> 180
    //   189: astore_0
    //   190: aload_1
    //   191: astore 4
    //   193: goto -23 -> 170
    //   196: astore_1
    //   197: aload 7
    //   199: astore_0
    //   200: aload 5
    //   202: astore_3
    //   203: goto -68 -> 135
    //   206: aload_3
    //   207: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	208	0	paramInputStream	InputStream
    //   0	208	1	paramOutputStream	OutputStream
    //   111	11	2	i	int
    //   41	166	3	localObject1	Object
    //   12	69	4	localObject2	Object
    //   128	5	4	localException	Exception
    //   136	56	4	localObject3	Object
    //   16	185	5	localObject4	Object
    //   2	63	6	str	String
    //   8	190	7	localObject5	Object
    //   5	74	8	localObject6	Object
    //   37	82	9	arrayOfByte1	byte[]
    //   22	51	10	arrayOfByte2	byte[]
    // Exception table:
    //   from	to	target	type
    //   105	112	128	java/lang/Exception
    //   117	125	128	java/lang/Exception
    //   152	156	128	java/lang/Exception
    //   160	164	166	java/lang/Exception
    //   18	24	169	finally
    //   32	39	169	finally
    //   50	60	169	finally
    //   68	78	169	finally
    //   85	101	169	finally
    //   138	142	169	finally
    //   146	150	182	java/lang/Exception
    //   175	180	185	java/lang/Exception
    //   105	112	189	finally
    //   117	125	189	finally
    //   152	156	189	finally
    //   18	24	196	java/lang/Exception
    //   32	39	196	java/lang/Exception
    //   50	60	196	java/lang/Exception
    //   68	78	196	java/lang/Exception
    //   85	101	196	java/lang/Exception
  }
}
