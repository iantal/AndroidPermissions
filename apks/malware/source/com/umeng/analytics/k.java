package com.umeng.analytics;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.text.TextUtils;
import java.util.Vector;

public class k
{
  private static final int b = 4;
  private Vector a;
  private String c;
  
  public k(String paramString)
  {
    this.a = new Vector(4);
    this.c = paramString;
  }
  
  public k(String paramString, int paramInt)
  {
    this.c = paramString;
    if (paramInt < 0)
    {
      this.a = new Vector(4);
      return;
    }
    this.a = new Vector(paramInt);
  }
  
  public static k a(Context paramContext, String paramString)
  {
    return a(paramString, j.e(paramContext).getString(paramString, null));
  }
  
  public static k a(String paramString1, String paramString2)
  {
    paramString1 = new k(paramString1);
    if (TextUtils.isEmpty(paramString2)) {
      return paramString1;
    }
    paramString2 = paramString2.split(",");
    int j = paramString2.length;
    int i = 0;
    label30:
    String str;
    if (i < j)
    {
      str = paramString2[i].trim();
      if (!TextUtils.isEmpty(str)) {
        break label58;
      }
    }
    for (;;)
    {
      i += 1;
      break label30;
      break;
      try
      {
        label58:
        long l = Long.parseLong(str);
        paramString1.a(Long.valueOf(l));
      }
      catch (Exception localException) {}
    }
  }
  
  public Long a()
  {
    int i = this.a.size();
    if (i <= 0) {
      return Long.valueOf(-1L);
    }
    return (Long)this.a.remove(i - 1);
  }
  
  public void a(Context paramContext)
  {
    String str = toString();
    paramContext = j.e(paramContext).edit();
    if (TextUtils.isEmpty(str))
    {
      paramContext.remove(this.c).commit();
      return;
    }
    paramContext.putString(this.c, str).commit();
  }
  
  public void a(Long paramLong)
  {
    while (this.a.size() >= 4) {
      this.a.remove(0);
    }
    this.a.add(paramLong);
  }
  
  public int b()
  {
    return this.a.size();
  }
  
  public String toString()
  {
    int j = this.a.size();
    if (j <= 0) {
      return null;
    }
    StringBuffer localStringBuffer = new StringBuffer(4);
    int i = 0;
    while (i < j)
    {
      localStringBuffer.append(this.a.get(i));
      if (i != j - 1) {
        localStringBuffer.append(",");
      }
      i += 1;
    }
    this.a.clear();
    return localStringBuffer.toString();
  }
}
