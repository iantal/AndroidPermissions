package com.unity3d.ads.android.view;

import android.app.Activity;
import android.os.Bundle;
import android.view.KeyEvent;
import com.unity3d.ads.android.UnityAds;
import com.unity3d.ads.android.UnityAdsDeviceLog;
import com.unity3d.ads.android.cache.UnityAdsCache;
import com.unity3d.ads.android.campaign.UnityAdsCampaign;
import com.unity3d.ads.android.properties.UnityAdsProperties;
import com.unity3d.ads.android.video.IUnityAdsVideoPlayerListener;
import com.unity3d.ads.android.video.UnityAdsVideoPlayView;
import org.json.JSONObject;

public class UnityAdsFullscreenActivity
  extends Activity
{
  public UnityAdsFullscreenActivity() {}
  
  public void onCreate(Bundle paramBundle)
  {
    UnityAdsDeviceLog.entered();
    super.onCreate(paramBundle);
    UnityAds.changeActivity(this);
  }
  
  protected void onDestroy()
  {
    UnityAdsDeviceLog.entered();
    super.onDestroy();
    UnityAds.handleFullscreenDestroy();
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    return false;
  }
  
  public void onPause()
  {
    UnityAdsDeviceLog.entered();
    super.onPause();
  }
  
  public void onRestart()
  {
    UnityAdsDeviceLog.entered();
    super.onRestart();
  }
  
  public void onResume()
  {
    UnityAdsDeviceLog.entered();
    super.onResume();
    UnityAds.changeActivity(this);
    UnityAds.checkMainview();
  }
  
  public void onStart()
  {
    UnityAdsDeviceLog.entered();
    super.onStart();
  }
  
  public void onStop()
  {
    UnityAdsDeviceLog.entered();
    super.onStop();
  }
  
  private class UnityAdsPlayVideoRunner
    implements Runnable
  {
    private IUnityAdsVideoPlayerListener _listener = null;
    
    private UnityAdsPlayVideoRunner() {}
    
    public void run()
    {
      
      if (UnityAdsProperties.SELECTED_CAMPAIGN != null)
      {
        UnityAdsDeviceLog.debug("Selected campaign found");
        Object localObject = new JSONObject();
        for (;;)
        {
          try
          {
            ((JSONObject)localObject).put("textKey", "buffering");
            if (!UnityAdsCache.isCampaignCached(UnityAdsProperties.SELECTED_CAMPAIGN))
            {
              localObject = UnityAdsProperties.SELECTED_CAMPAIGN.getVideoStreamUrl();
              UnityAdsProperties.SELECTED_CAMPAIGN_CACHED = Boolean.valueOf(false);
              UnityAdsFullscreenActivity.access$100(UnityAdsFullscreenActivity.this).setViewState(UnityAdsMainView.UnityAdsMainViewState.VideoPlayer);
              UnityAdsFullscreenActivity.access$100(UnityAdsFullscreenActivity.this).videoplayerview.setListener(this._listener);
              UnityAdsDeviceLog.debug("Start videoplayback with: " + (String)localObject);
              UnityAdsFullscreenActivity.access$100(UnityAdsFullscreenActivity.this).videoplayerview.playVideo((String)localObject, UnityAdsProperties.SELECTED_CAMPAIGN_CACHED.booleanValue());
              return;
            }
          }
          catch (Exception localException)
          {
            UnityAdsDeviceLog.error("Couldn't create data JSON");
            return;
          }
          String str = UnityAdsCache.getCacheDirectory() + "/" + UnityAdsProperties.SELECTED_CAMPAIGN.getVideoFilename();
          UnityAdsProperties.SELECTED_CAMPAIGN_CACHED = Boolean.valueOf(true);
        }
      }
      UnityAdsDeviceLog.error("Campaign is null");
    }
    
    public void setVideoPlayerListener(IUnityAdsVideoPlayerListener paramIUnityAdsVideoPlayerListener)
    {
      this._listener = paramIUnityAdsVideoPlayerListener;
    }
  }
}
