package com.unity3d.ads.android.view;

import android.content.Context;
import android.graphics.Bitmap;
import android.util.AttributeSet;
import android.widget.ImageButton;
import android.widget.LinearLayout.LayoutParams;
import com.unity3d.ads.android.data.UnityAdsDevice;
import com.unity3d.ads.android.data.UnityAdsGraphicsBundle;

public class UnityAdsMuteVideoButton
  extends ImageButton
{
  private UnityAdsMuteVideoButton.UnityAdsMuteVideoButtonState a = UnityAdsMuteVideoButton.UnityAdsMuteVideoButtonState.UnMuted;
  private UnityAdsMuteVideoButton.UnityAdsMuteVideoButtonSize b = UnityAdsMuteVideoButton.UnityAdsMuteVideoButtonSize.Medium;
  
  public UnityAdsMuteVideoButton(Context paramContext)
  {
    super(paramContext);
    b();
  }
  
  public UnityAdsMuteVideoButton(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    b();
  }
  
  public UnityAdsMuteVideoButton(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
    b();
  }
  
  private Bitmap a()
  {
    if ((this.b != null) && (this.b.equals(UnityAdsMuteVideoButton.UnityAdsMuteVideoButtonSize.Medium))) {}
    switch (b.a[this.a.ordinal()])
    {
    default: 
      return null;
    case 1: 
      str = UnityAdsGraphicsBundle.ICON_AUDIO_UNMUTED_50x50;
      if (UnityAdsDevice.getScreenDensity() == 120) {
        str = UnityAdsGraphicsBundle.ICON_AUDIO_UNMUTED_32x32;
      }
      return UnityAdsGraphicsBundle.getBitmapFromString(str);
    }
    String str = UnityAdsGraphicsBundle.ICON_AUDIO_MUTED_50x50;
    if (UnityAdsDevice.getScreenDensity() == 120) {
      str = UnityAdsGraphicsBundle.ICON_AUDIO_MUTED_32x32;
    }
    return UnityAdsGraphicsBundle.getBitmapFromString(str);
  }
  
  private void b()
  {
    setAdjustViewBounds(true);
    setLayoutParams(new LinearLayout.LayoutParams(-2, -2));
    setImageBitmap(a());
    setBackgroundResource(0);
    setPadding(0, 0, 0, 0);
  }
  
  public void setState(UnityAdsMuteVideoButton.UnityAdsMuteVideoButtonState paramUnityAdsMuteVideoButtonState)
  {
    if ((paramUnityAdsMuteVideoButtonState != null) && (!paramUnityAdsMuteVideoButtonState.equals(this.a)))
    {
      this.a = paramUnityAdsMuteVideoButtonState;
      setImageBitmap(a());
    }
  }
}
