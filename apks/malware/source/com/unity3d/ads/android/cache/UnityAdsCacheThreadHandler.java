package com.unity3d.ads.android.cache;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.os.SystemClock;
import com.unity3d.ads.android.UnityAdsDeviceLog;
import com.unity3d.ads.android.data.UnityAdsDevice;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.net.URL;
import java.net.URLConnection;

class UnityAdsCacheThreadHandler
  extends Handler
{
  private String _currentDownload = null;
  private boolean _stopped = false;
  
  UnityAdsCacheThreadHandler() {}
  
  private void downloadFile(String paramString1, String paramString2)
  {
    if ((this._stopped) || (paramString1 == null) || (paramString2 == null)) {}
    File localFile;
    do
    {
      long l2;
      long l1;
      do
      {
        return;
        try
        {
          UnityAdsDeviceLog.debug("Unity Ads cache: start downloading " + paramString1 + " to " + paramString2);
          this._currentDownload = paramString2;
          l2 = SystemClock.elapsedRealtime();
          localObject = new URL(paramString1);
          if (!UnityAdsDevice.isActiveNetworkConnected())
          {
            UnityAdsDeviceLog.debug("Unity Ads cache: download cancelled, no internet connection available");
            return;
          }
        }
        catch (Exception localException)
        {
          this._currentDownload = null;
          UnityAdsDeviceLog.debug("Unity Ads cache: Exception when downloading " + paramString1 + " to " + paramString2 + ": " + localException.getMessage());
          return;
        }
        localFile = new File(paramString2);
        BufferedOutputStream localBufferedOutputStream = new BufferedOutputStream(new FileOutputStream(localFile));
        Object localObject = ((URL)localObject).openConnection();
        ((URLConnection)localObject).setConnectTimeout(30000);
        ((URLConnection)localObject).setReadTimeout(30000);
        ((URLConnection)localObject).connect();
        localObject = new BufferedInputStream(((URLConnection)localObject).getInputStream());
        byte[] arrayOfByte = new byte['á€€'];
        l1 = 0L;
        while (!this._stopped)
        {
          int i = ((BufferedInputStream)localObject).read(arrayOfByte);
          if (i == -1) {
            break;
          }
          l1 += i;
          localBufferedOutputStream.write(arrayOfByte, 0, i);
        }
        localBufferedOutputStream.flush();
        localBufferedOutputStream.close();
        ((BufferedInputStream)localObject).close();
        this._currentDownload = null;
        if (this._stopped) {
          break;
        }
        l2 = SystemClock.elapsedRealtime() - l2;
        UnityAdsDeviceLog.debug("Unity Ads cache: File " + paramString2 + " of " + l1 + " bytes downloaded in " + l2 + "ms");
      } while ((l2 <= 0L) || (l1 <= 0L));
      com.unity3d.ads.android.properties.UnityAdsProperties.CACHING_SPEED = l1 / l2;
      return;
      UnityAdsDeviceLog.debug("Unity Ads cache: downloading of " + paramString1 + " stopped");
    } while (localFile.delete());
    UnityAdsDeviceLog.debug("Couldn't delete file: " + localFile.getName());
  }
  
  public String getCurrentDownload()
  {
    return this._currentDownload;
  }
  
  public void handleMessage(Message paramMessage)
  {
    paramMessage = paramMessage.getData();
    downloadFile(paramMessage.getString("source"), paramMessage.getString("target"));
  }
  
  public void setStoppedStatus(boolean paramBoolean)
  {
    this._stopped = paramBoolean;
  }
}
