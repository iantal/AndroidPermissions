package com.unity3d.player.a;

import android.content.Context;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import org.apache.http.NameValuePair;
import org.apache.http.client.utils.URLEncodedUtils;

public final class i
{
  private long a;
  private long b;
  private long c;
  private long d;
  private long e = 0L;
  private int f;
  private j g;
  
  public i(Context paramContext, h paramH)
  {
    this.g = new j(paramContext.getSharedPreferences("com.android.vending.licensing.ServerManagedPolicy", 0), paramH);
    this.f = Integer.decode(this.g.b("lastResponse", Integer.toString(-1))).intValue();
    this.a = Long.parseLong(this.g.b("validityTimestamp", "0"));
    this.b = Long.parseLong(this.g.b("retryUntil", "0"));
    this.c = Long.parseLong(this.g.b("maxRetries", "0"));
    this.d = Long.parseLong(this.g.b("retryCount", "0"));
  }
  
  private void a(long paramLong)
  {
    this.d = paramLong;
    this.g.a("retryCount", Long.toString(paramLong));
  }
  
  private void a(String paramString)
  {
    try
    {
      long l = Long.parseLong(paramString);
      Long localLong = Long.valueOf(l);
      str = paramString;
      paramString = localLong;
    }
    catch (NumberFormatException paramString)
    {
      for (;;)
      {
        paramString = Long.valueOf(System.currentTimeMillis() + 60000L);
        String str = Long.toString(paramString.longValue());
      }
    }
    this.a = paramString.longValue();
    this.g.a("validityTimestamp", str);
  }
  
  private void b(String paramString)
  {
    try
    {
      long l = Long.parseLong(paramString);
      Long localLong = Long.valueOf(l);
      str = paramString;
      paramString = localLong;
    }
    catch (NumberFormatException paramString)
    {
      for (;;)
      {
        String str = "0";
        paramString = Long.valueOf(0L);
      }
    }
    this.b = paramString.longValue();
    this.g.a("retryUntil", str);
  }
  
  private void c(String paramString)
  {
    try
    {
      long l = Long.parseLong(paramString);
      Long localLong = Long.valueOf(l);
      str = paramString;
      paramString = localLong;
    }
    catch (NumberFormatException paramString)
    {
      for (;;)
      {
        String str = "0";
        paramString = Long.valueOf(0L);
      }
    }
    this.c = paramString.longValue();
    this.g.a("maxRetries", str);
  }
  
  private static Map d(String paramString)
  {
    localHashMap = new HashMap();
    try
    {
      paramString = URLEncodedUtils.parse(new URI("?" + paramString), "UTF-8").iterator();
      while (paramString.hasNext())
      {
        NameValuePair localNameValuePair = (NameValuePair)paramString.next();
        localHashMap.put(localNameValuePair.getName(), localNameValuePair.getValue());
      }
      return localHashMap;
    }
    catch (URISyntaxException paramString) {}
  }
  
  public final void a(int paramInt, k paramK)
  {
    if (paramInt != -1)
    {
      a(0L);
      if (paramInt != 1) {
        break label119;
      }
      paramK = d(paramK.g);
      this.f = paramInt;
      a((String)paramK.get("VT"));
      b((String)paramK.get("GT"));
      c((String)paramK.get("GR"));
    }
    for (;;)
    {
      this.e = System.currentTimeMillis();
      this.f = paramInt;
      this.g.a("lastResponse", Integer.toString(paramInt));
      this.g.a();
      return;
      a(this.d + 1L);
      break;
      label119:
      if (paramInt == 0)
      {
        a("0");
        b("0");
        c("0");
      }
    }
  }
  
  public final boolean a()
  {
    long l = System.currentTimeMillis();
    if (this.f == 1)
    {
      if (l > this.a) {}
    }
    else
    {
      do
      {
        return true;
        if ((this.f != -1) || (l >= this.e + 60000L)) {
          break;
        }
      } while ((l <= this.b) || (this.d <= this.c));
      return false;
    }
    return false;
  }
}
