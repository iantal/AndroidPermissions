package com.unity3d.player.a;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.IBinder;
import android.os.Looper;
import android.os.RemoteException;
import com.unity3d.player.b.a;
import java.security.KeyFactory;
import java.security.NoSuchAlgorithmException;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.X509EncodedKeySpec;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Set;

public final class e
  implements ServiceConnection
{
  protected static byte[] a = { -99, -111, -109, -46, -97, -110, -100, -114, -111, -105, -100, -46, -118, -101, -110, -100, -105, -110, -103, -46, -108, -105, -99, -101, -110, -115, -105, -110, -103, -46, -73, -76, -105, -99, -101, -110, -115, -101, -82, -101, -115, -117, -108, -116, -76, -105, -115, -116, -101, -110, -101, -114 };
  protected static byte[] b;
  private static final SecureRandom c = new SecureRandom();
  private d d;
  private PublicKey e;
  private final Context f;
  private final i g;
  private Handler h;
  private final String i;
  private final String j;
  private final Set k = new HashSet();
  private final Queue l = new LinkedList();
  
  static
  {
    byte[] arrayOfByte = new byte[17];
    byte[] tmp319_318 = arrayOfByte;
    tmp319_318[0] = 54;
    byte[] tmp324_319 = tmp319_318;
    tmp324_319[1] = 51;
    byte[] tmp329_324 = tmp324_319;
    tmp329_324[2] = 22;
    byte[] tmp334_329 = tmp329_324;
    tmp334_329[3] = 28;
    byte[] tmp339_334 = tmp334_329;
    tmp339_334[4] = 26;
    byte[] tmp344_339 = tmp339_334;
    tmp344_339[5] = 17;
    byte[] tmp349_344 = tmp344_339;
    tmp349_344[6] = 12;
    byte[] tmp355_349 = tmp349_344;
    tmp355_349[7] = 22;
    byte[] tmp361_355 = tmp355_349;
    tmp361_355[8] = 17;
    byte[] tmp367_361 = tmp361_355;
    tmp367_361[9] = 24;
    byte[] tmp373_367 = tmp367_361;
    tmp373_367[10] = 44;
    byte[] tmp379_373 = tmp373_367;
    tmp379_373[11] = 26;
    byte[] tmp385_379 = tmp379_373;
    tmp385_379[12] = 13;
    byte[] tmp391_385 = tmp385_379;
    tmp391_385[13] = 9;
    byte[] tmp397_391 = tmp391_385;
    tmp397_391[14] = 22;
    byte[] tmp403_397 = tmp397_391;
    tmp403_397[15] = 28;
    byte[] tmp409_403 = tmp403_397;
    tmp409_403[16] = 26;
    tmp409_403;
    b = new byte[arrayOfByte.length + 30];
    int m = 0;
    while (m < a.length)
    {
      a[m] = ((byte)-a[m]);
      if (m < 30)
      {
        b[m] = a[m];
        if (m < arrayOfByte.length) {
          b[(m + 30)] = ((byte)(arrayOfByte[m] ^ 0x7F));
        }
      }
      m += 1;
    }
  }
  
  public e(Context paramContext, i paramI, String paramString)
  {
    this.f = paramContext;
    this.g = paramI;
    this.e = a(paramString);
    this.i = this.f.getPackageName();
    this.j = a(paramContext, this.i);
    paramContext = new HandlerThread(this.i);
    paramContext.start();
    this.h = new Handler(paramContext.getLooper());
  }
  
  private static String a(Context paramContext, String paramString)
  {
    try
    {
      int m = paramContext.getPackageManager().getPackageInfo(paramString, 0).versionCode;
      return String.valueOf(m);
    }
    catch (PackageManager.NameNotFoundException paramContext) {}
    return "";
  }
  
  private static PublicKey a(String paramString)
  {
    try
    {
      paramString = a.a(paramString);
      paramString = KeyFactory.getInstance("RSA").generatePublic(new X509EncodedKeySpec(paramString));
      return paramString;
    }
    catch (NoSuchAlgorithmException paramString)
    {
      throw new RuntimeException(paramString);
    }
    catch (com.unity3d.player.b.b paramString)
    {
      throw new IllegalArgumentException(paramString);
    }
    catch (InvalidKeySpecException paramString)
    {
      throw new IllegalArgumentException(paramString);
    }
  }
  
  private void a(g paramG)
  {
    try
    {
      this.k.remove(paramG);
      if (this.k.isEmpty()) {
        c();
      }
      return;
    }
    finally
    {
      paramG = finally;
      throw paramG;
    }
  }
  
  private void b()
  {
    for (;;)
    {
      g localG = (g)this.l.poll();
      if (localG == null) {
        break;
      }
      try
      {
        this.d.a(localG.b(), localG.c(), new a(localG));
        this.k.add(localG);
      }
      catch (RemoteException localRemoteException)
      {
        b(localG);
      }
    }
  }
  
  /* Error */
  private void b(g paramG)
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield 94	com/unity3d/player/a/e:g	Lcom/unity3d/player/a/i;
    //   6: iconst_m1
    //   7: aconst_null
    //   8: invokevirtual 245	com/unity3d/player/a/i:a	(ILcom/unity3d/player/a/k;)V
    //   11: aload_0
    //   12: getfield 94	com/unity3d/player/a/e:g	Lcom/unity3d/player/a/i;
    //   15: invokevirtual 247	com/unity3d/player/a/i:a	()Z
    //   18: ifeq +15 -> 33
    //   21: aload_1
    //   22: invokevirtual 250	com/unity3d/player/a/g:a	()Lcom/unity3d/player/a/f;
    //   25: invokeinterface 254 1 0
    //   30: aload_0
    //   31: monitorexit
    //   32: return
    //   33: aload_1
    //   34: invokevirtual 250	com/unity3d/player/a/g:a	()Lcom/unity3d/player/a/f;
    //   37: invokeinterface 256 1 0
    //   42: goto -12 -> 30
    //   45: astore_1
    //   46: aload_0
    //   47: monitorexit
    //   48: aload_1
    //   49: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	50	0	this	e
    //   0	50	1	paramG	g
    // Exception table:
    //   from	to	target	type
    //   2	30	45	finally
    //   33	42	45	finally
  }
  
  private void c()
  {
    if (this.d != null) {}
    try
    {
      this.f.unbindService(this);
      this.d = null;
      return;
    }
    catch (IllegalArgumentException localIllegalArgumentException)
    {
      for (;;) {}
    }
  }
  
  public final void a()
  {
    try
    {
      c();
      this.h.getLooper().quit();
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public final void a(f paramF)
  {
    for (;;)
    {
      try
      {
        if (this.g.a())
        {
          paramF.a();
          return;
        }
        paramF = new g(this.g, new b(), paramF, c.nextInt(), this.i, this.j);
        d localD = this.d;
        if (localD == null)
        {
          try
          {
            if (!this.f.bindService(new Intent(new String(b)), this, 1)) {
              continue;
            }
            this.l.offer(paramF);
          }
          catch (SecurityException paramF)
          {
            paramF = f.a.e;
          }
          continue;
          b(paramF);
          continue;
        }
        this.l.offer(paramF);
      }
      finally {}
      b();
    }
  }
  
  public final void onServiceConnected(ComponentName paramComponentName, IBinder paramIBinder)
  {
    try
    {
      this.d = d.a.a(paramIBinder);
      b();
      return;
    }
    finally
    {
      paramComponentName = finally;
      throw paramComponentName;
    }
  }
  
  public final void onServiceDisconnected(ComponentName paramComponentName)
  {
    try
    {
      this.d = null;
      return;
    }
    finally
    {
      paramComponentName = finally;
      throw paramComponentName;
    }
  }
  
  final class a
    extends c.a
  {
    private final g b;
    private Runnable c;
    
    public a(g paramG)
    {
      this.b = paramG;
      this.c = new Runnable()
      {
        public final void run()
        {
          e.a(e.this, e.a.a(e.a.this));
          e.b(e.this, e.a.a(e.a.this));
        }
      };
      e.c(e.this).postDelayed(this.c, 10000L);
    }
    
    public final void a(final int paramInt, final String paramString1, final String paramString2)
    {
      e.c(e.this).post(new Runnable()
      {
        public final void run()
        {
          if (e.a(e.this).contains(e.a.a(e.a.this)))
          {
            e.a.b(e.a.this);
            e.a.a(e.a.this).a(e.b(e.this), paramInt, paramString1, paramString2);
            e.b(e.this, e.a.a(e.a.this));
          }
        }
      });
    }
  }
}
