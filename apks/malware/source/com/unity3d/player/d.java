package com.unity3d.player;

import android.app.Activity;
import android.view.MotionEvent;
import android.view.View;
import android.view.Window;
import java.lang.reflect.Method;
import java.util.Queue;

final class d
  implements Runnable
{
  private final Method a;
  
  d(c paramC)
  {
    paramC = null;
    try
    {
      Method localMethod = View.class.getMethod("dispatchGenericMotionEvent", new Class[] { MotionEvent.class });
      paramC = localMethod;
    }
    catch (NoSuchMethodException localNoSuchMethodException)
    {
      for (;;) {}
    }
    this.a = paramC;
  }
  
  private void a(View paramView, MotionEvent paramMotionEvent)
  {
    if (this.a != null) {}
    try
    {
      this.a.invoke(paramView, new Object[] { paramMotionEvent });
      return;
    }
    catch (Exception paramView)
    {
      paramView.printStackTrace();
    }
  }
  
  public final void run()
  {
    for (;;)
    {
      MotionEvent localMotionEvent = (MotionEvent)c.a(this.b).poll();
      if (localMotionEvent == null) {
        break;
      }
      View localView = ((Activity)this.b.a).getWindow().getDecorView();
      int i = localMotionEvent.getSource();
      if ((i & 0x2) != 0) {
        switch (localMotionEvent.getAction() & 0xFF)
        {
        default: 
          a(localView, localMotionEvent);
          break;
        case 0: 
        case 1: 
        case 2: 
        case 3: 
        case 4: 
        case 5: 
        case 6: 
          localView.dispatchTouchEvent(localMotionEvent);
          break;
        }
      } else if ((i & 0x4) != 0) {
        localView.dispatchTrackballEvent(localMotionEvent);
      } else {
        a(localView, localMotionEvent);
      }
    }
  }
}
