package com.pollfish.f;

import android.app.Activity;
import com.pollfish.c.d;
import com.pollfish.c.e;
import com.pollfish.c.h;
import com.pollfish.constants.Position;
import com.pollfish.interfaces.a.a;
import com.pollfish.interfaces.a.b;
import com.pollfish.interfaces.a.c;
import com.pollfish.interfaces.a.d;
import com.pollfish.interfaces.a.e;
import java.util.HashMap;
import java.util.Timer;
import java.util.TimerTask;

public class a
{
  public static boolean a = false;
  private static String p = "";
  private a.e b = null;
  private Activity c;
  private com.pollfish.a.b d = null;
  private com.pollfish.a.a e = null;
  private com.pollfish.d.a f = null;
  private String g;
  private Position h = null;
  private int i;
  private boolean j;
  private boolean k;
  private int l = 0;
  private HashMap m;
  private int n = 0;
  private Timer o;
  private boolean q;
  private boolean r;
  private a.a s = new a.a()
  {
    public void a()
    {
      synchronized ()
      {
        if (a.c(a.this) >= 1)
        {
          a.e(a.this);
          b.a("LifeCycle", "assetsAndCacheListener: updateNumOfTranfers...numOfAssetsLeftToBeCopiedInCache: " + a.c(a.this));
          return;
        }
        a.a(a.this, 0);
      }
    }
    
    public void a(int paramAnonymousInt)
    {
      synchronized ()
      {
        a.a(a.this, true);
        b.a("LifeCycle", "assetsAndCacheListener: checkedAfterJSONIfTransferAssets: " + a.b(a.this));
        a.a(a.this, paramAnonymousInt);
        b.a("LifeCycle", "assetsAndCacheListener: onNumOfTranfers...assetsLeftToBeCopiedInCache: " + a.c(a.this));
        return;
      }
    }
    
    public void a(com.pollfish.a.c paramAnonymousC)
    {
      synchronized ()
      {
        b.a("LifeCycle", "onTransferFromMemoryFinished: failed to write in cache file: " + paramAnonymousC.a());
        a("." + paramAnonymousC.a(), paramAnonymousC.d());
        new e(paramAnonymousC, a.a(a.this), this).c(new Void[0]);
        return;
      }
    }
    
    public void a(String paramAnonymousString)
    {
      b.a("LifeCycle", "assetsAndCacheListener: deleteFailedTransferAndDownload: " + paramAnonymousString);
      synchronized (a.c())
      {
        try
        {
          if ((a.f(a.this) != null) && (paramAnonymousString != null))
          {
            a.f(a.this).remove("." + paramAnonymousString);
            b.a("LifeCycle", "assetsAndCacheListener: urlsToBeReplaceInHtmlOfWebview.size(): " + a.f(a.this).size());
          }
        }
        catch (Exception paramAnonymousString)
        {
          for (;;)
          {
            b.b("LifeCycle", "deleteFileDownloadedSucessfully error: " + paramAnonymousString);
            com.pollfish.f.b.a.a(paramAnonymousString);
          }
        }
        return;
      }
    }
    
    public void a(String paramAnonymousString1, String paramAnonymousString2)
    {
      synchronized ()
      {
        b.a("LifeCycle", "assetsAndCacheListener: addUrlsToBeDownloadedOrReplacedLater: " + paramAnonymousString1 + " toUrl: " + paramAnonymousString2);
        if ((a.f(a.this) != null) && (paramAnonymousString1 != null)) {
          a.f(a.this).put(paramAnonymousString1, paramAnonymousString2);
        }
        b.a("LifeCycle", "assetsAndCacheListener: urlsToBeReplaceInHtmlOfWebview.size(): " + a.f(a.this).size());
        return;
      }
    }
    
    public HashMap b()
    {
      for (;;)
      {
        synchronized ()
        {
          b.a("LifeCycle", "checkedAfterRegisterIfDownloadAssets: " + a.d(a.this) + " checkedAfterJSONIfTransferAssets: " + a.b(a.this));
          if ((!a.d(a.this)) || (!a.b(a.this))) {
            break;
          }
          if (a.f(a.this) != null)
          {
            b.a("LifeCycle", "assetsAndCacheListener: shouldProceedOrReplace?  urlsToBeReplaceInHtmlOfWebview.size(): " + a.f(a.this).size() + " assetsLeftToBeCopiedInCache: " + a.c(a.this));
            if ((a.c(a.this) == 0) && (a.f(a.this).size() > 0)) {
              b.a("LifeCycle", "You should replace the urls in html!");
            }
          }
          else
          {
            return a.f(a.this);
          }
          if (a.c(a.this) > 0)
          {
            b.a("LifeCycle", "Something is being downloaded/copied - you should wait");
            return null;
          }
        }
        a.f(a.this).clear();
        b.a("LifeCycle", "Everything is finished - proceed to show Pollfish panel");
      }
      return null;
    }
    
    public void b(int paramAnonymousInt)
    {
      synchronized ()
      {
        a.a(a.this, a.c(a.this) + paramAnonymousInt);
        b.a("LifeCycle", "assetsAndCacheListener: increaseNumOfAssetsLeftToBeDownloadedBy: " + a.c(a.this));
        return;
      }
    }
    
    public void c()
    {
      synchronized ()
      {
        a.b(a.this, true);
        b.a("LifeCycle", "assetsAndCacheListener: checkedAfterRegisterIfDownloadAssets: " + a.d(a.this));
        return;
      }
    }
  };
  private a.d t = new a.d()
  {
    public void a()
    {
      b.a("LifeCycle", "onReturnFromQueueProceedToRegister...");
      b.a("LifeCycle", "registering...");
      new d(a.g(a.this), "https://wss.pollfish.com/v2/device/register", c.a(a.g(a.this)), a.h(a.this), a.a(a.this), false, null, null).c(new Void[0]);
    }
  };
  private a.b u = new a.b()
  {
    /* Error */
    public void a(com.pollfish.a.d paramAnonymousD)
    {
      // Byte code:
      //   0: ldc 23
      //   2: ldc 25
      //   4: invokestatic 30	com/pollfish/f/b:a	(Ljava/lang/String;Ljava/lang/String;)V
      //   7: aload_1
      //   8: ifnull +424 -> 432
      //   11: ldc 23
      //   13: new 32	java/lang/StringBuilder
      //   16: dup
      //   17: invokespecial 33	java/lang/StringBuilder:<init>	()V
      //   20: ldc 35
      //   22: invokevirtual 39	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   25: aload_1
      //   26: invokevirtual 44	com/pollfish/a/d:a	()I
      //   29: invokevirtual 47	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
      //   32: invokevirtual 51	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   35: invokestatic 30	com/pollfish/f/b:a	(Ljava/lang/String;Ljava/lang/String;)V
      //   38: aload_1
      //   39: invokevirtual 44	com/pollfish/a/d:a	()I
      //   42: istore_2
      //   43: iload_2
      //   44: sipush 200
      //   47: if_icmpne +284 -> 331
      //   50: aload_1
      //   51: invokevirtual 54	com/pollfish/a/d:c	()Ljava/lang/String;
      //   54: ldc 56
      //   56: invokevirtual 62	java/lang/String:equalsIgnoreCase	(Ljava/lang/String;)Z
      //   59: ifeq +262 -> 321
      //   62: ldc 23
      //   64: ldc 64
      //   66: invokestatic 30	com/pollfish/f/b:a	(Ljava/lang/String;Ljava/lang/String;)V
      //   69: aload_0
      //   70: getfield 14	com/pollfish/f/a$3:a	Lcom/pollfish/f/a;
      //   73: invokestatic 67	com/pollfish/f/a:a	(Lcom/pollfish/f/a;)Landroid/app/Activity;
      //   76: instanceof 69
      //   79: ifeq +25 -> 104
      //   82: ldc 23
      //   84: ldc 71
      //   86: invokestatic 30	com/pollfish/f/b:a	(Ljava/lang/String;Ljava/lang/String;)V
      //   89: aload_0
      //   90: getfield 14	com/pollfish/f/a$3:a	Lcom/pollfish/f/a;
      //   93: invokestatic 67	com/pollfish/f/a:a	(Lcom/pollfish/f/a;)Landroid/app/Activity;
      //   96: checkcast 69	com/pollfish/interfaces/PollfishSurveyReceivedListener
      //   99: invokeinterface 74 1 0
      //   104: aload_0
      //   105: getfield 14	com/pollfish/f/a$3:a	Lcom/pollfish/f/a;
      //   108: aload_1
      //   109: invokevirtual 77	com/pollfish/a/d:b	()Ljava/lang/String;
      //   112: aload_0
      //   113: getfield 14	com/pollfish/f/a$3:a	Lcom/pollfish/f/a;
      //   116: invokestatic 81	com/pollfish/f/a:g	(Lcom/pollfish/f/a;)Lcom/pollfish/a/b;
      //   119: aload_0
      //   120: getfield 14	com/pollfish/f/a$3:a	Lcom/pollfish/f/a;
      //   123: invokestatic 85	com/pollfish/f/a:i	(Lcom/pollfish/f/a;)Lcom/pollfish/interfaces/a$c;
      //   126: aload_0
      //   127: getfield 14	com/pollfish/f/a$3:a	Lcom/pollfish/f/a;
      //   130: invokestatic 89	com/pollfish/f/a:j	(Lcom/pollfish/f/a;)Lcom/pollfish/interfaces/a$a;
      //   133: aload_0
      //   134: getfield 14	com/pollfish/f/a$3:a	Lcom/pollfish/f/a;
      //   137: invokestatic 67	com/pollfish/f/a:a	(Lcom/pollfish/f/a;)Landroid/app/Activity;
      //   140: invokestatic 94	com/pollfish/f/c:a	(Ljava/lang/String;Lcom/pollfish/a/b;Lcom/pollfish/interfaces/a$c;Lcom/pollfish/interfaces/a$a;Landroid/app/Activity;)Lcom/pollfish/a/a;
      //   143: invokevirtual 97	com/pollfish/f/a:b	(Lcom/pollfish/a/a;)V
      //   146: iload_2
      //   147: sipush 200
      //   150: if_icmpeq +57 -> 207
      //   153: iload_2
      //   154: sipush 406
      //   157: if_icmpeq +50 -> 207
      //   160: aload_1
      //   161: invokevirtual 54	com/pollfish/a/d:c	()Ljava/lang/String;
      //   164: ldc 56
      //   166: invokevirtual 62	java/lang/String:equalsIgnoreCase	(Ljava/lang/String;)Z
      //   169: ifeq +38 -> 207
      //   172: aload_0
      //   173: getfield 14	com/pollfish/f/a$3:a	Lcom/pollfish/f/a;
      //   176: invokestatic 67	com/pollfish/f/a:a	(Lcom/pollfish/f/a;)Landroid/app/Activity;
      //   179: instanceof 99
      //   182: ifeq +25 -> 207
      //   185: ldc 23
      //   187: ldc 101
      //   189: invokestatic 30	com/pollfish/f/b:a	(Ljava/lang/String;Ljava/lang/String;)V
      //   192: aload_0
      //   193: getfield 14	com/pollfish/f/a$3:a	Lcom/pollfish/f/a;
      //   196: invokestatic 67	com/pollfish/f/a:a	(Lcom/pollfish/f/a;)Landroid/app/Activity;
      //   199: checkcast 99	com/pollfish/interfaces/PollfishSurveyNotAvailableListener
      //   202: invokeinterface 104 1 0
      //   207: aload_1
      //   208: invokevirtual 108	com/pollfish/a/d:e	()Z
      //   211: ifeq +94 -> 305
      //   214: iload_2
      //   215: sipush 200
      //   218: if_icmpeq +10 -> 228
      //   221: iload_2
      //   222: sipush 204
      //   225: if_icmpne +80 -> 305
      //   228: aload_1
      //   229: invokevirtual 54	com/pollfish/a/d:c	()Ljava/lang/String;
      //   232: ldc 56
      //   234: invokevirtual 62	java/lang/String:equalsIgnoreCase	(Ljava/lang/String;)Z
      //   237: ifne +68 -> 305
      //   240: ldc 23
      //   242: new 32	java/lang/StringBuilder
      //   245: dup
      //   246: invokespecial 33	java/lang/StringBuilder:<init>	()V
      //   249: ldc 110
      //   251: invokevirtual 39	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   254: aload_1
      //   255: invokevirtual 113	com/pollfish/a/d:d	()Ljava/lang/String;
      //   258: invokevirtual 39	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   261: ldc 115
      //   263: invokevirtual 39	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   266: invokevirtual 51	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   269: invokestatic 30	com/pollfish/f/b:a	(Ljava/lang/String;Ljava/lang/String;)V
      //   272: new 117	com/pollfish/c/a
      //   275: dup
      //   276: aload_1
      //   277: invokevirtual 113	com/pollfish/a/d:d	()Ljava/lang/String;
      //   280: aload_0
      //   281: getfield 14	com/pollfish/f/a$3:a	Lcom/pollfish/f/a;
      //   284: invokestatic 67	com/pollfish/f/a:a	(Lcom/pollfish/f/a;)Landroid/app/Activity;
      //   287: aload_0
      //   288: getfield 14	com/pollfish/f/a$3:a	Lcom/pollfish/f/a;
      //   291: invokestatic 121	com/pollfish/f/a:k	(Lcom/pollfish/f/a;)Lcom/pollfish/interfaces/a$d;
      //   294: invokespecial 124	com/pollfish/c/a:<init>	(Ljava/lang/String;Landroid/app/Activity;Lcom/pollfish/interfaces/a$d;)V
      //   297: iconst_0
      //   298: anewarray 126	java/lang/Void
      //   301: invokevirtual 129	com/pollfish/c/a:c	([Ljava/lang/Object;)Lcom/pollfish/c/g;
      //   304: pop
      //   305: return
      //   306: astore_3
      //   307: ldc 23
      //   309: ldc -125
      //   311: invokestatic 133	com/pollfish/f/b:b	(Ljava/lang/String;Ljava/lang/String;)V
      //   314: aload_3
      //   315: invokestatic 138	com/pollfish/f/b/a:a	(Ljava/lang/Throwable;)V
      //   318: goto -214 -> 104
      //   321: ldc 23
      //   323: ldc -116
      //   325: invokestatic 30	com/pollfish/f/b:a	(Ljava/lang/String;Ljava/lang/String;)V
      //   328: goto -182 -> 146
      //   331: iload_2
      //   332: sipush 204
      //   335: if_icmpne +13 -> 348
      //   338: ldc 23
      //   340: ldc -114
      //   342: invokestatic 30	com/pollfish/f/b:a	(Ljava/lang/String;Ljava/lang/String;)V
      //   345: goto -199 -> 146
      //   348: iload_2
      //   349: sipush 400
      //   352: if_icmpne +13 -> 365
      //   355: ldc 23
      //   357: ldc -112
      //   359: invokestatic 30	com/pollfish/f/b:a	(Ljava/lang/String;Ljava/lang/String;)V
      //   362: goto -216 -> 146
      //   365: iload_2
      //   366: sipush 401
      //   369: if_icmpne +13 -> 382
      //   372: ldc 23
      //   374: ldc -110
      //   376: invokestatic 30	com/pollfish/f/b:a	(Ljava/lang/String;Ljava/lang/String;)V
      //   379: goto -233 -> 146
      //   382: iload_2
      //   383: sipush 406
      //   386: if_icmpne -240 -> 146
      //   389: ldc -108
      //   391: ldc -106
      //   393: invokestatic 156	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
      //   396: pop
      //   397: goto -251 -> 146
      //   400: astore_3
      //   401: ldc 23
      //   403: new 32	java/lang/StringBuilder
      //   406: dup
      //   407: invokespecial 33	java/lang/StringBuilder:<init>	()V
      //   410: ldc -98
      //   412: invokevirtual 39	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   415: aload_3
      //   416: invokevirtual 161	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      //   419: invokevirtual 51	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   422: invokestatic 133	com/pollfish/f/b:b	(Ljava/lang/String;Ljava/lang/String;)V
      //   425: aload_3
      //   426: invokestatic 138	com/pollfish/f/b/a:a	(Ljava/lang/Throwable;)V
      //   429: goto -222 -> 207
      //   432: ldc 23
      //   434: ldc -93
      //   436: invokestatic 30	com/pollfish/f/b:a	(Ljava/lang/String;Ljava/lang/String;)V
      //   439: return
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	440	0	this	3
      //   0	440	1	paramAnonymousD	com.pollfish.a.d
      //   42	345	2	i	int
      //   306	9	3	localException1	Exception
      //   400	26	3	localException2	Exception
      // Exception table:
      //   from	to	target	type
      //   69	104	306	java/lang/Exception
      //   172	207	400	java/lang/Exception
    }
  };
  private a.c v = new a.c()
  {
    public void a(com.pollfish.a.a paramAnonymousA)
    {
      b.a("LifeCycle", "onPollfishCustomIndicatorChecked()");
      a.this.a(paramAnonymousA);
    }
  };
  
  public a(Activity paramActivity, String paramString, boolean paramBoolean1, Position paramPosition, int paramInt, boolean paramBoolean2, a.e paramE)
  {
    this.c = paramActivity;
    this.g = paramString;
    this.k = paramBoolean1;
    this.h = paramPosition;
    this.i = paramInt;
    this.j = paramBoolean2;
    this.q = false;
    this.r = false;
    this.b = paramE;
    this.m = new HashMap();
  }
  
  private void a(boolean paramBoolean)
  {
    b.a("LifeCycle", "reorder app Layouts - add Pollfish layout");
    try
    {
      this.f = com.pollfish.f.a.b.a(this.c, this.d, paramBoolean, this.u, this.s);
      if (this.f != null) {
        this.b.a(this.f);
      }
      return;
    }
    catch (Exception localException)
    {
      b.b("LifeCycle", "error LayoutUtils.createLayout: " + localException);
      com.pollfish.f.b.a.a(localException);
    }
  }
  
  private void c(final com.pollfish.a.a paramA)
  {
    b.a("LifeCycle", "panelObject != null - canceling timer - moving to proceedPanel");
    paramA = new Runnable()
    {
      public void run()
      {
        a.this.b(paramA);
        if (a.l(a.this) != null) {
          a.l(a.this).a(paramA);
        }
      }
    };
    c.a(this.c, paramA, 0);
    if (this.o != null)
    {
      this.o.cancel();
      this.o = null;
    }
    this.n = 0;
  }
  
  public void a()
  {
    b.a("LifeCycle", "Pollfish lifecycle begin()...");
    b.a("LifeCycle", "read assets and copy to internal cache or download if needed");
    new h(this.s, this.c).c(new Void[0]);
    b.a("LifeCycle", "check if overlay view already exists (changed app hierarchy before)");
    for (;;)
    {
      try
      {
        this.f = com.pollfish.f.a.b.b(this.c);
        if (this.f != null) {
          b.a("LifeCycle", "existing overlay found - reset view hierarchy to initial state");
        }
      }
      catch (Exception localException1)
      {
        try
        {
          com.pollfish.f.a.b.a(this.f);
          b.a("LifeCycle", "Loading Pollfish parameters..");
          this.d = new com.pollfish.a.b(this.c, this.g, this.k, this.h, this.i, this.j);
          b.a("LifeCycle", "Pollfish parameters loaded");
          b.a("LifeCycle", "check queue...");
          int i1 = c.a(this.c, "pollfish_pref_queue");
          b.a("LifeCycle", "number of times tried to empty queue with no result: " + i1);
          if (i1 >= 10) {
            break label270;
          }
          b.a("LifeCycle", "check queue, not tried too many times yet - try again");
          new com.pollfish.c.b(this.d, this.u, this.t, this.c).c(new Void[0]);
          b();
          return;
        }
        catch (Exception localException2)
        {
          com.pollfish.f.b.a.a(localException2);
          b.b("LifeCycle", "bringAppViewsToPriorOverlayState error: " + localException2);
          return;
        }
        localException1 = localException1;
        b.b("LifeCycle", "Error while getExistingOverlay");
        com.pollfish.f.b.a.a(localException1);
        continue;
      }
      b.a("LifeCycle", "no existing overlay found");
      continue;
      label270:
      b.a("LifeCycle", "clearing queue after multiple attends to clear the queue");
      new com.pollfish.c.c(this.c).execute(new Void[0]);
      c.a(this.c, "pollfish_pref_queue", 0);
      b.a("LifeCycle", "registering...");
      new d(this.d, "https://wss.pollfish.com/v2/device/register", c.a(this.d), this.u, this.c, false, null, null).c(new Void[0]);
    }
  }
  
  public void a(final com.pollfish.a.a paramA)
  {
    if (paramA != null) {
      try
      {
        c(paramA);
        return;
      }
      catch (Exception paramA)
      {
        b.b("LifeCycle", "timer: e: " + paramA);
        com.pollfish.f.b.a.a(paramA);
        if (this.o != null)
        {
          this.o.cancel();
          this.o = null;
        }
        this.n = 0;
        return;
      }
    }
    this.o = new Timer();
    this.o.schedule(new TimerTask()
    {
      public void run()
      {
        b.a("LifeCycle", "checking if panelObject!=null after coming from registering timerTimes: " + a.m(a.this));
        try
        {
          if (paramA != null)
          {
            a.a(a.this, paramA);
            return;
          }
          if ((paramA == null) && (a.m(a.this) > 100))
          {
            if (a.n(a.this) != null)
            {
              a.n(a.this).cancel();
              a.a(a.this, null);
            }
            a.b(a.this, 0);
            b.a("LifeCycle", "panelObject == null - canceling timer - tried too many times - timerTimes>100");
            return;
          }
        }
        catch (Exception localException)
        {
          b.b("LifeCycle", "timer: e: " + localException);
          com.pollfish.f.b.a.a(localException);
          if (a.n(a.this) != null)
          {
            a.n(a.this).cancel();
            a.a(a.this, null);
          }
          a.b(a.this, 0);
          return;
        }
        a.o(a.this);
        b.a("LifeCycle", "panelObject == null - trying again for timerTimes: " + a.m(a.this));
      }
    }, 0, 50);
  }
  
  public void b()
  {
    try
    {
      b.a("LifeCycle", "call to re-order layouts with overlay view inside");
      a(a);
      return;
    }
    catch (Exception localException)
    {
      b.b("LifeCycle", "error in reOrderLayouts after custom indicator check fired");
      com.pollfish.f.b.a.a(localException);
    }
  }
  
  public void b(com.pollfish.a.a paramA)
  {
    this.e = paramA;
  }
}
