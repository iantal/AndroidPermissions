package com.urbanairship.iap.marketinterface;

import android.app.Activity;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import com.urbanairship.Logger;
import com.urbanairship.iap.MarketListener;

public class ResponseHandler
{
  private static MarketListener marketListener;
  
  public ResponseHandler() {}
  
  public static void buyPageIntentResponse(Activity paramActivity, PendingIntent paramPendingIntent, Intent paramIntent)
  {
    if (marketListener == null) {
      return;
    }
    marketListener.startBuyPageActivity(paramActivity, paramPendingIntent, paramIntent);
  }
  
  public static void checkBillingSupportedResponse(boolean paramBoolean)
  {
    if (marketListener != null) {
      marketListener.onBillingSupported(paramBoolean);
    }
  }
  
  public static void purchaseResponse(Consts.PurchaseState paramPurchaseState, String paramString1, String paramString2, long paramLong, String paramString3, String paramString4)
  {
    Logger.verbose("purchaseResponse");
    if (marketListener != null) {
      marketListener.onPurchaseStateChange(paramPurchaseState, paramString1, paramString2, paramLong, paramString3, paramString4);
    }
  }
  
  public static void register(MarketListener paramMarketListener)
  {
    try
    {
      marketListener = paramMarketListener;
      return;
    }
    finally
    {
      paramMarketListener = finally;
      throw paramMarketListener;
    }
  }
  
  public static void responseCodeReceived(Context paramContext, BillingService.RequestPurchase paramRequestPurchase, Consts.ResponseCode paramResponseCode)
  {
    if (marketListener != null) {
      marketListener.onRequestPurchaseResponse(paramRequestPurchase, paramResponseCode);
    }
  }
  
  public static void responseCodeReceived(Context paramContext, BillingService.RestoreTransactions paramRestoreTransactions, Consts.ResponseCode paramResponseCode)
  {
    if (marketListener != null) {
      marketListener.onRestoreTransactionsResponse(paramRestoreTransactions, paramResponseCode);
    }
  }
  
  public static void unregister(MarketListener paramMarketListener)
  {
    try
    {
      marketListener = null;
      return;
    }
    finally
    {
      paramMarketListener = finally;
      throw paramMarketListener;
    }
  }
}
