package com.urbanairship.iap;

import android.os.Handler;
import com.urbanairship.Logger;
import com.urbanairship.iap.marketinterface.AbstractMarketListener;
import com.urbanairship.iap.marketinterface.BillingService.RequestPurchase;
import com.urbanairship.iap.marketinterface.BillingService.RestoreTransactions;
import com.urbanairship.iap.marketinterface.Consts.PurchaseState;
import com.urbanairship.iap.marketinterface.Consts.ResponseCode;

public class MarketListener
  extends AbstractMarketListener
{
  public MarketListener(Handler paramHandler)
  {
    super(paramHandler);
  }
  
  public void onBillingSupported(boolean paramBoolean)
  {
    IAPManager.onBillingSupported(paramBoolean);
  }
  
  public void onPurchaseStateChange(Consts.PurchaseState paramPurchaseState, String paramString1, int paramInt, long paramLong, String paramString2) {}
  
  public void onPurchaseStateChange(Consts.PurchaseState paramPurchaseState, String paramString1, String paramString2, long paramLong, String paramString3, String paramString4)
  {
    Logger.info("purchase state changed for " + paramString1 + ": " + paramPurchaseState);
    if (paramPurchaseState == Consts.PurchaseState.PURCHASED)
    {
      paramPurchaseState = IAPManager.shared().getInventory().getProduct(paramString1);
      if (paramPurchaseState != null)
      {
        Logger.info("storing purchase receipt for " + paramString1);
        new Receipt(Integer.valueOf(paramPurchaseState.getRevision()), paramString1, paramString2, Long.valueOf(paramLong), paramString3, paramString4).serialize();
        Logger.info("starting download for " + paramString1);
        IAPManager.shared().getDownloadManager().downloadIfValid(paramPurchaseState);
      }
    }
    else
    {
      return;
    }
    Logger.warn("Couldn't find product id " + paramString1 + " in inventory!");
  }
  
  public void onRequestPurchaseResponse(BillingService.RequestPurchase paramRequestPurchase, Consts.ResponseCode paramResponseCode)
  {
    if (paramResponseCode != Consts.ResponseCode.RESULT_OK) {
      IAPManager.shared().getInventory().getProduct(paramRequestPurchase.mProductId).setStatus(Product.Status.UNPURCHASED);
    }
  }
  
  public void onRestoreTransactionsResponse(BillingService.RestoreTransactions paramRestoreTransactions, Consts.ResponseCode paramResponseCode)
  {
    if (paramResponseCode == Consts.ResponseCode.RESULT_OK)
    {
      Logger.info("OK response from onRestoreTransactionsRequest, calling firstRun()");
      IAPManager.firstRun();
    }
  }
}
