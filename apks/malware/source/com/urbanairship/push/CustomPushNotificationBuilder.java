package com.urbanairship.push;

import android.app.Notification;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.net.Uri;
import android.widget.RemoteViews;
import com.urbanairship.UAirship;
import com.urbanairship.util.NotificationIDGenerator;
import java.util.Map;

public class CustomPushNotificationBuilder
  implements PushNotificationBuilder
{
  public int constantNotificationId = -1;
  public int layout;
  public int layoutIconDrawableId = UAirship.getAppInfo().icon;
  public int layoutIconId;
  public int layoutMessageId;
  public int layoutSubjectId;
  public Uri soundUri;
  public int statusBarIconDrawableId = UAirship.getAppInfo().icon;
  
  public CustomPushNotificationBuilder() {}
  
  public Notification buildNotification(String paramString, Map<String, String> paramMap)
  {
    if ((paramString == null) || (paramString.length() == 0)) {
      paramString = null;
    }
    Object localObject;
    do
    {
      do
      {
        return paramString;
        paramMap = new Notification(this.statusBarIconDrawableId, paramString, System.currentTimeMillis());
        paramMap.flags = 16;
        paramMap.defaults = 0;
        localObject = new RemoteViews(UAirship.shared().getApplicationContext().getPackageName(), this.layout);
        ((RemoteViews)localObject).setTextViewText(this.layoutSubjectId, UAirship.getAppName());
        ((RemoteViews)localObject).setTextViewText(this.layoutMessageId, paramString);
        ((RemoteViews)localObject).setImageViewResource(this.layoutIconId, this.layoutIconDrawableId);
        paramMap.contentView = ((RemoteViews)localObject);
        localObject = PushManager.shared().getPreferences();
        paramString = paramMap;
      } while (((PushPreferences)localObject).isInQuietTime());
      if (((PushPreferences)localObject).isVibrateEnabled()) {
        paramMap.defaults |= 0x2;
      }
      paramString = paramMap;
    } while (!((PushPreferences)localObject).isSoundEnabled());
    if (this.soundUri != null)
    {
      paramMap.sound = this.soundUri;
      return paramMap;
    }
    paramMap.defaults |= 0x1;
    return paramMap;
  }
  
  public int getNextId(String paramString, Map<String, String> paramMap)
  {
    if (this.constantNotificationId > 0) {
      return this.constantNotificationId;
    }
    return NotificationIDGenerator.nextID();
  }
}
