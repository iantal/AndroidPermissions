package com.urbanairship.push;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import com.urbanairship.AirshipConfigOptions;
import com.urbanairship.AirshipConfigOptions.TransportType;
import com.urbanairship.Logger;
import com.urbanairship.UAirship;
import com.urbanairship.analytics.Analytics;
import com.urbanairship.analytics.PushServiceStartedEvent;
import com.urbanairship.push.c2dm.C2DMPushManager;
import com.urbanairship.push.embedded.EmbeddedPushManager;

public class PushService
  extends Service
{
  public static final String ACTION_HEARTBEAT = "com.urbanairship.push.HEARTBEAT";
  public static final String ACTION_START = "com.urbanairship.push.START";
  public static final String ACTION_STOP = "com.urbanairship.push.STOP";
  public boolean started = false;
  
  public PushService() {}
  
  private PushPreferences prefs()
  {
    return PushManager.shared().getPreferences();
  }
  
  private void setupService()
  {
    for (;;)
    {
      try
      {
        boolean bool = this.started;
        if (bool) {
          return;
        }
        if (prefs().getPushId() != null) {
          UAirship.shared().getAnalytics().addEvent(new PushServiceStartedEvent());
        }
        if (!prefs().isPushEnabled())
        {
          Logger.verbose("Push is disabled.  Not starting Push Service.");
          stopSelf();
          continue;
        }
        this.started = true;
      }
      finally {}
      Context localContext = UAirship.shared().getApplicationContext();
      Object localObject2 = UAirship.shared().getAirshipConfigOptions();
      String str = ((AirshipConfigOptions)localObject2).getAppKey();
      PushManager.shared().getPreferences().setApidUpdateNeeded(true);
      localObject2 = ((AirshipConfigOptions)localObject2).getTransport();
      if (localObject2 == AirshipConfigOptions.TransportType.HELIUM)
      {
        Logger.debug("Starting Helium");
        if (prefs().getC2DMId() != null)
        {
          PushManager.shared().setC2DMId(null);
          C2DMPushManager.unregister();
        }
        EmbeddedPushManager.init(localContext, str);
        Logger.debug("Extra APID registrations disabled: " + EmbeddedPushManager.shared().getExtraApidRegistrationsDisabled());
      }
      else if (localObject2 == AirshipConfigOptions.TransportType.C2DM)
      {
        Logger.debug("Starting C2DM");
        C2DMPushManager.init();
      }
      else
      {
        Logger.debug("Starting C2DM");
        C2DMPushManager.init();
      }
    }
  }
  
  private void teardownService()
  {
    AirshipConfigOptions.TransportType localTransportType = UAirship.shared().getAirshipConfigOptions().getTransport();
    if ((localTransportType == AirshipConfigOptions.TransportType.HELIUM) || (localTransportType == AirshipConfigOptions.TransportType.HYBRID)) {
      EmbeddedPushManager.shared().teardown();
    }
    this.started = false;
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    return null;
  }
  
  public void onDestroy()
  {
    Logger.verbose("Push Service destroyed");
    teardownService();
  }
  
  public void onStart(Intent paramIntent, int paramInt)
  {
    Logger.debug("Push Service started with intent=" + paramIntent);
    if (!UAirship.shared().isFlying())
    {
      Logger.error("PushService started prior to a UAirship.takeOff() call.");
      throw new IllegalStateException("UAirship.takeOff() must be called every time Application.onCreate() is invoked.");
    }
    super.onStart(paramIntent, paramInt);
    if ((paramIntent == null) || (paramIntent.getAction() == null)) {
      Logger.warn("Attempted to start service with null intent or action.");
    }
    do
    {
      String str;
      do
      {
        return;
        str = paramIntent.getAction();
        if (!str.equals("com.urbanairship.push.STOP")) {
          break;
        }
      } while (!this.started);
      stopSelf();
      return;
      if (str.equals("com.urbanairship.push.START"))
      {
        setupService();
        return;
      }
      if (!str.equals("com.urbanairship.push.HEARTBEAT")) {
        break;
      }
      Logger.debug("** Heartbeat **");
    } while (this.started);
    setupService();
    return;
    Logger.warn("Unknown action: " + paramIntent.getAction());
  }
}
