package com.urbanairship.restclient;

import com.urbanairship.Logger;
import java.io.IOException;
import java.io.InputStream;
import org.apache.http.Header;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.util.EntityUtils;

public class Response
{
  String body;
  HttpResponse resp;
  
  public Response(HttpResponse paramHttpResponse)
  {
    this.resp = paramHttpResponse;
  }
  
  public String body()
  {
    if (this.body == null)
    {
      this.body = "";
      if (this.resp.getEntity() == null) {}
    }
    try
    {
      this.body = EntityUtils.toString(this.resp.getEntity());
      return this.body;
    }
    catch (IOException localIOException)
    {
      for (;;)
      {
        Logger.error("Error fetching HTTP entity: IO Exception");
      }
    }
  }
  
  public String contentType()
  {
    Header localHeader = this.resp.getFirstHeader("Content-Type");
    if (localHeader != null) {
      return localHeader.getValue();
    }
    return "";
  }
  
  public Header getFirstHeader(String paramString)
  {
    return this.resp.getFirstHeader(paramString);
  }
  
  public long length()
  {
    if (this.resp.getEntity() != null) {
      return this.resp.getEntity().getContentLength();
    }
    return 0L;
  }
  
  public InputStream rawBody()
    throws IllegalStateException, IOException
  {
    if (this.resp.getEntity() != null) {
      return this.resp.getEntity().getContent();
    }
    return null;
  }
  
  public String reason()
  {
    if (this.resp.getStatusLine() != null) {
      return this.resp.getStatusLine().getReasonPhrase();
    }
    return "";
  }
  
  public int status()
  {
    if (this.resp.getStatusLine() != null) {
      return this.resp.getStatusLine().getStatusCode();
    }
    return -1;
  }
}
