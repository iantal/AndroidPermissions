package com.appbrain;

import android.content.Context;
import android.os.SystemClock;
import android.util.AttributeSet;
import android.view.View.MeasureSpec;
import android.widget.FrameLayout;
import android.widget.FrameLayout.LayoutParams;
import cmn.a;
import com.appbrain.a.c;
import com.appbrain.a.q;
import java.util.Random;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicLong;

public class AppBrainBanner
  extends FrameLayout
{
  private static final int[] a = { 7, 5, 9, 8 };
  private static final int[] b = { 3, 2, 6 };
  private static AtomicLong m = new AtomicLong(0L);
  private q c = new q(this);
  private int d = 0;
  private int e = 0;
  private int f = 0;
  private int g = 0;
  private AtomicBoolean h = new AtomicBoolean(false);
  private AtomicBoolean i = new AtomicBoolean(false);
  private AtomicBoolean j = new AtomicBoolean(false);
  private boolean k = false;
  private String l = null;
  
  public AppBrainBanner(Context paramContext)
  {
    super(paramContext);
    a(null);
  }
  
  public AppBrainBanner(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    a(paramAttributeSet);
  }
  
  public AppBrainBanner(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
    a(paramAttributeSet);
  }
  
  private void a()
  {
    if ((this.j.compareAndSet(false, true)) && (!isInEditMode()))
    {
      long l1 = SystemClock.elapsedRealtime();
      if (m.get() + 30000L < l1)
      {
        m.set(l1);
        this.c.c();
      }
    }
  }
  
  private void a(AttributeSet paramAttributeSet)
  {
    a.a().a(this);
    this.d = -1;
    this.e = -1;
    this.f = -1;
    this.g = -1;
    if (paramAttributeSet != null)
    {
      this.d = paramAttributeSet.getAttributeIntValue("http://schemas.android.com/apk/lib/com.appbrain", "design", -1);
      if ((this.d < 0) || (this.d >= c.b.length)) {
        this.d = 0;
      }
      this.e = paramAttributeSet.getAttributeIntValue("http://schemas.android.com/apk/lib/com.appbrain", "colors", -1);
      if ((this.e < 0) || (this.e >= c.a.length)) {
        this.e = 0;
      }
      this.f = paramAttributeSet.getAttributeIntValue("http://schemas.android.com/apk/lib/com.appbrain", "title", -1);
      if ((this.f < 0) || (this.f >= a.length)) {
        this.f = 0;
      }
      this.g = paramAttributeSet.getAttributeIntValue("http://schemas.android.com/apk/lib/com.appbrain", "button", -1);
      if ((this.g < 0) || (this.g >= b.length)) {
        this.g = 0;
      }
    }
    paramAttributeSet = new Random();
    if (this.d == -1) {
      this.d = paramAttributeSet.nextInt(c.b.length);
    }
    if (this.e == -1) {
      this.e = paramAttributeSet.nextInt(c.a.length);
    }
    if (this.f == -1) {
      this.f = paramAttributeSet.nextInt(a.length);
    }
    if (this.g == -1) {
      this.g = paramAttributeSet.nextInt(b.length);
    }
    setLayoutParams(new FrameLayout.LayoutParams(-1, -2));
  }
  
  protected void onAttachedToWindow()
  {
    super.onAttachedToWindow();
    if (!this.h.get()) {
      requestAd();
    }
    while (!this.i.get()) {
      return;
    }
    a();
  }
  
  protected void onMeasure(int paramInt1, int paramInt2)
  {
    paramInt2 = paramInt1;
    if (View.MeasureSpec.getMode(paramInt1) == Integer.MIN_VALUE) {
      paramInt2 = View.MeasureSpec.makeMeasureSpec(View.MeasureSpec.getSize(paramInt1), 1073741824);
    }
    super.onMeasure(paramInt2, View.MeasureSpec.makeMeasureSpec(1073741824, this.c.b()));
  }
  
  public void onWindowFocusChanged(boolean paramBoolean)
  {
    if ((paramBoolean) && (this.i.get())) {
      a();
    }
    super.onWindowFocusChanged(paramBoolean);
  }
  
  /* Error */
  public void requestAd()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: invokevirtual 190	com/appbrain/AppBrainBanner:getVisibility	()I
    //   6: istore_1
    //   7: iload_1
    //   8: ifeq +6 -> 14
    //   11: aload_0
    //   12: monitorexit
    //   13: return
    //   14: aload_0
    //   15: getfield 64	com/appbrain/AppBrainBanner:h	Ljava/util/concurrent/atomic/AtomicBoolean;
    //   18: iconst_0
    //   19: iconst_1
    //   20: invokevirtual 85	java/util/concurrent/atomic/AtomicBoolean:compareAndSet	(ZZ)Z
    //   23: ifeq +157 -> 180
    //   26: aload_0
    //   27: invokevirtual 194	com/appbrain/AppBrainBanner:getResources	()Landroid/content/res/Resources;
    //   30: invokevirtual 200	android/content/res/Resources:getConfiguration	()Landroid/content/res/Configuration;
    //   33: getfield 206	android/content/res/Configuration:locale	Ljava/util/Locale;
    //   36: invokevirtual 212	java/util/Locale:getLanguage	()Ljava/lang/String;
    //   39: astore_3
    //   40: aload_0
    //   41: getfield 72	com/appbrain/AppBrainBanner:l	Ljava/lang/String;
    //   44: ifnull +27 -> 71
    //   47: aload_0
    //   48: aload_0
    //   49: getfield 72	com/appbrain/AppBrainBanner:l	Ljava/lang/String;
    //   52: iconst_0
    //   53: bipush 10
    //   55: aload_0
    //   56: getfield 72	com/appbrain/AppBrainBanner:l	Ljava/lang/String;
    //   59: invokevirtual 217	java/lang/String:length	()I
    //   62: invokestatic 222	java/lang/Math:min	(II)I
    //   65: invokevirtual 226	java/lang/String:substring	(II)Ljava/lang/String;
    //   68: putfield 72	com/appbrain/AppBrainBanner:l	Ljava/lang/String;
    //   71: aload_0
    //   72: getfield 49	com/appbrain/AppBrainBanner:c	Lcom/appbrain/a/q;
    //   75: getstatic 128	com/appbrain/a/c:b	[Lcom/appbrain/a/h;
    //   78: aload_0
    //   79: getfield 51	com/appbrain/AppBrainBanner:d	I
    //   82: aaload
    //   83: getstatic 133	com/appbrain/a/c:a	[Lcom/appbrain/a/i;
    //   86: aload_0
    //   87: getfield 53	com/appbrain/AppBrainBanner:e	I
    //   90: aaload
    //   91: getstatic 28	com/appbrain/AppBrainBanner:a	[I
    //   94: aload_0
    //   95: getfield 55	com/appbrain/AppBrainBanner:f	I
    //   98: iaload
    //   99: aload_3
    //   100: invokestatic 231	com/appbrain/a/t:a	(ILjava/lang/String;)Ljava/lang/String;
    //   103: getstatic 30	com/appbrain/AppBrainBanner:b	[I
    //   106: aload_0
    //   107: getfield 57	com/appbrain/AppBrainBanner:g	I
    //   110: iaload
    //   111: aload_3
    //   112: invokestatic 231	com/appbrain/a/t:a	(ILjava/lang/String;)Ljava/lang/String;
    //   115: aload_0
    //   116: getfield 51	com/appbrain/AppBrainBanner:d	I
    //   119: bipush 16
    //   121: imul
    //   122: aload_0
    //   123: getfield 53	com/appbrain/AppBrainBanner:e	I
    //   126: iadd
    //   127: aload_0
    //   128: getfield 55	com/appbrain/AppBrainBanner:f	I
    //   131: sipush 128
    //   134: imul
    //   135: iadd
    //   136: aload_0
    //   137: getfield 57	com/appbrain/AppBrainBanner:g	I
    //   140: sipush 1024
    //   143: imul
    //   144: iadd
    //   145: aload_0
    //   146: getfield 72	com/appbrain/AppBrainBanner:l	Ljava/lang/String;
    //   149: aload_0
    //   150: getfield 70	com/appbrain/AppBrainBanner:k	Z
    //   153: invokevirtual 234	com/appbrain/a/q:a	(Lcom/appbrain/a/h;Lcom/appbrain/a/i;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Z)Z
    //   156: istore_2
    //   157: aload_0
    //   158: getfield 66	com/appbrain/AppBrainBanner:i	Ljava/util/concurrent/atomic/AtomicBoolean;
    //   161: iload_2
    //   162: invokevirtual 236	java/util/concurrent/atomic/AtomicBoolean:set	(Z)V
    //   165: iload_2
    //   166: ifeq +14 -> 180
    //   169: aload_0
    //   170: invokevirtual 239	com/appbrain/AppBrainBanner:hasWindowFocus	()Z
    //   173: ifeq +7 -> 180
    //   176: aload_0
    //   177: invokespecial 164	com/appbrain/AppBrainBanner:a	()V
    //   180: aload_0
    //   181: getfield 49	com/appbrain/AppBrainBanner:c	Lcom/appbrain/a/q;
    //   184: invokevirtual 242	com/appbrain/a/q:a	()Lcom/appbrain/BannerListener;
    //   187: astore_3
    //   188: aload_3
    //   189: ifnull -178 -> 11
    //   192: aload_3
    //   193: aload_0
    //   194: getfield 66	com/appbrain/AppBrainBanner:i	Ljava/util/concurrent/atomic/AtomicBoolean;
    //   197: invokevirtual 159	java/util/concurrent/atomic/AtomicBoolean:get	()Z
    //   200: invokeinterface 247 2 0
    //   205: goto -194 -> 11
    //   208: astore_3
    //   209: aload_0
    //   210: monitorexit
    //   211: aload_3
    //   212: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	213	0	this	AppBrainBanner
    //   6	2	1	n	int
    //   156	10	2	bool	boolean
    //   39	154	3	localObject1	Object
    //   208	4	3	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   2	7	208	finally
    //   14	71	208	finally
    //   71	165	208	finally
    //   169	180	208	finally
    //   180	188	208	finally
    //   192	205	208	finally
  }
  
  public void setBannerListener(BannerListener paramBannerListener)
  {
    this.c.a(paramBannerListener);
  }
  
  public void setButtonTextIndex(int paramInt)
  {
    this.g = paramInt;
    if ((this.g < 0) || (this.g >= b.length)) {
      this.g = 0;
    }
  }
  
  public void setColors(int paramInt)
  {
    this.e = paramInt;
    if ((this.e < 0) || (this.e >= c.a.length)) {
      this.e = 0;
    }
  }
  
  public void setDesign(int paramInt)
  {
    this.d = paramInt;
    if ((this.d < 0) || (this.d >= c.b.length)) {
      this.d = 0;
    }
  }
  
  public void setIsMediatedBanner(boolean paramBoolean, String paramString)
  {
    this.k = paramBoolean;
    this.l = paramString;
  }
  
  public void setTitleIndex(int paramInt)
  {
    this.f = paramInt;
    if ((this.f < 0) || (this.f >= a.length)) {
      this.f = 0;
    }
  }
  
  public void setVisibility(int paramInt)
  {
    super.setVisibility(paramInt);
    if ((paramInt == 0) && (!this.h.get())) {
      requestAd();
    }
  }
}
