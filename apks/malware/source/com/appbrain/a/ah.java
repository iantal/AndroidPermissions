package com.appbrain.a;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Build.VERSION;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.widget.FrameLayout;
import android.widget.FrameLayout.LayoutParams;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import cmn.i;
import com.appbrain.AppBrain;
import com.appbrain.RemoteSettings;
import com.appbrain.e.m;
import com.appbrain.e.o;
import com.appbrain.e.q;
import java.io.ByteArrayOutputStream;
import java.util.zip.GZIPOutputStream;

public final class ah
  extends com.appbrain.a
{
  private static String i = null;
  protected q a = null;
  private WebView b;
  private ViewGroup c;
  private String d;
  private String e;
  private final Activity f;
  private ProgressDialog g;
  private as h;
  
  public ah(Activity paramActivity)
  {
    this.f = paramActivity;
    this.h = new as(paramActivity);
  }
  
  private String a(m paramM)
  {
    int j = 1;
    StringBuilder localStringBuilder = new StringBuilder();
    if (this.d != null)
    {
      localStringBuilder.append(this.d);
      if (this.d.contains("?")) {}
    }
    for (;;)
    {
      byte[] arrayOfByte;
      if (j != 0)
      {
        localStringBuilder.append("?");
        new com.appbrain.f.a();
        arrayOfByte = com.appbrain.f.a.a(this.h.a(paramM, "ow"));
        paramM = new ByteArrayOutputStream();
      }
      try
      {
        GZIPOutputStream localGZIPOutputStream = new GZIPOutputStream(paramM);
        localGZIPOutputStream.write(arrayOfByte);
        localGZIPOutputStream.flush();
        localGZIPOutputStream.close();
        paramM = i.b(paramM.toByteArray());
        localStringBuilder.append("data=");
        localStringBuilder.append(paramM);
        return localStringBuilder.toString();
        j = 0;
        continue;
        localStringBuilder.append(this.e + ax.a().i().get("offer_url", "/offerwall/"));
        continue;
        localStringBuilder.append("&");
      }
      catch (Exception localException)
      {
        for (;;) {}
      }
    }
  }
  
  public static void a(String paramString)
  {
    i = paramString;
  }
  
  public final void a()
  {
    AppBrain.init(this.f);
    this.e = ax.a().f();
    if (ax.a().c())
    {
      this.f.finish();
      return;
    }
    this.f.requestWindowFeature(1);
    Object localObject1 = this.f;
    this.b = new WebView(this.f);
    ak.a(this.f, this.b);
    this.b.setWebChromeClient(new aj(this));
    this.b.setWebViewClient(new ai(this));
    this.b.setVerticalScrollBarEnabled(true);
    this.b.setHorizontalScrollBarEnabled(false);
    Object localObject2 = new FrameLayout(this.f);
    ((FrameLayout)localObject2).setLayoutParams(new FrameLayout.LayoutParams(-1, -1));
    ((FrameLayout)localObject2).addView(this.b, new FrameLayout.LayoutParams(-1, -1));
    LinearLayout localLinearLayout = new LinearLayout(this.f);
    ((LinearLayout)localLinearLayout).setOrientation(0);
    ((LinearLayout)localLinearLayout).setGravity(1);
    TextView localTextView = new TextView(this.f);
    localTextView.setText("Loading...");
    localTextView.setTextColor(-12303292);
    localTextView.setPadding(10, 0, 0, 0);
    localTextView.setTextSize(18.0F);
    int j = 16842873;
    if (Integer.parseInt(Build.VERSION.SDK) >= 4) {
      j = 16843400;
    }
    ProgressBar localProgressBar = new ProgressBar(this.f, null, j);
    localProgressBar.setIndeterminate(true);
    localLinearLayout.addView(localProgressBar);
    localLinearLayout.addView(localTextView);
    localLinearLayout.setPadding(20, 40, 0, 0);
    this.c = localLinearLayout;
    this.c.setVisibility(8);
    this.g = new ProgressDialog(this.f);
    this.g.setMessage("Loading apps...");
    this.g.setIndeterminate(true);
    this.g.setCancelable(true);
    ((FrameLayout)localObject2).addView(this.c);
    this.d = (this.e + ax.a().i().get("offer_url", "/offerwall/"));
    ((Activity)localObject1).setContentView((View)localObject2);
    this.g.show();
    localObject1 = m.s();
    localObject2 = b.a(this.f.getIntent());
    ((o)localObject1).a(((b)localObject2).b);
    ((o)localObject1).b(((b)localObject2).a);
    localObject2 = q.a(this.f.getIntent().getIntExtra("src", -1));
    if ((localObject2 != null) && (localObject2 != q.a)) {
      ((o)localObject1).a((q)localObject2);
    }
    for (;;)
    {
      j = this.f.getIntent().getIntExtra("bt", -1);
      if (j != -1) {
        ((o)localObject1).c(j);
      }
      if (this.f.getIntent().hasExtra("bo")) {
        ((o)localObject1).a(this.f.getIntent().getBooleanExtra("bo", false));
      }
      if (i != null)
      {
        ((o)localObject1).a(i);
        i = null;
      }
      localObject1 = a(((o)localObject1).e());
      this.b.loadUrl((String)localObject1);
      ax.a().l();
      return;
      if (this.a != null) {
        ((o)localObject1).a(this.a);
      } else {
        ((o)localObject1).a(q.a);
      }
    }
  }
  
  public final boolean a(int paramInt)
  {
    if ((paramInt == 4) && (this.b != null) && (this.b.canGoBack()))
    {
      this.b.goBack();
      return true;
    }
    return false;
  }
  
  public final void c()
  {
    if (this.b != null) {
      this.b.getSettings().setJavaScriptEnabled(false);
    }
    super.c();
  }
}
