package com.appbrain.a;

import android.content.pm.PackageInfo;
import cmn.a;
import cmn.h;
import cmn.i;
import com.appbrain.b.g;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Set;

public final class be
{
  private List a = Collections.synchronizedList(new ArrayList());
  private long b = System.currentTimeMillis() - 2592000000L;
  
  private be() {}
  
  public static be a()
  {
    return new be();
  }
  
  private static int[] a(List paramList)
  {
    int[] arrayOfInt = new int[paramList.size()];
    int i = 0;
    while (i < paramList.size())
    {
      int j = (int)(h.a(((PackageInfo)paramList.get(i)).packageName) & 0xFFFFFFFFFFFFFFFF);
      new StringBuilder().append(((PackageInfo)paramList.get(i)).packageName).append(": ").append(j).toString();
      arrayOfInt[i] = j;
      i += 1;
    }
    return arrayOfInt;
  }
  
  public final void a(PackageInfo paramPackageInfo, String paramString)
  {
    if (((bb.c() == null) || ((paramString != null) && (bb.c().contains(paramString)))) && (bb.d().a(paramPackageInfo) > this.b)) {
      this.a.add(paramPackageInfo);
    }
  }
  
  public final void b()
  {
    this.a.clear();
  }
  
  public final String c()
  {
    try
    {
      Object localObject1 = new ByteArrayOutputStream(128);
      g localG = g.a((OutputStream)localObject1);
      localG.b(4);
      if (this.a.size() > 16)
      {
        Collections.sort(this.a, new bf(this));
        this.a = this.a.subList(0, 16);
        i = 0;
        while (i < this.a.size())
        {
          localObject2 = ((PackageInfo)this.a.get(i)).packageName;
          i += 1;
        }
      }
      Object localObject2 = a(this.a);
      localG.b(localObject2.length);
      int j = localObject2.length;
      int i = 0;
      while (i < j)
      {
        int k = localObject2[i];
        new StringBuilder("Vector: ").append(k).toString();
        localG.c(k);
        i += 1;
      }
      localG.a();
      localObject1 = i.b(((ByteArrayOutputStream)localObject1).toByteArray());
      return localObject1;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return "";
  }
}
