package com.splunk.mint;

import android.content.Context;
import java.util.ArrayList;
import java.util.HashMap;
import org.json.JSONException;
import org.json.JSONObject;

class ActionTransactionStop
  extends ActionTransaction
  implements InterfaceDataType
{
  protected long duration = 0L;
  protected String reason = "";
  protected EnumTransactionStatus status = EnumTransactionStatus.FAIL;
  
  private ActionTransactionStop(String paramString1, EnumTransactionStatus paramEnumTransactionStatus, String paramString2, HashMap<String, Object> paramHashMap)
  {
    super(paramString1, EnumActionType.trstop, paramHashMap);
    this.status = paramEnumTransactionStatus;
    this.reason = paramString2;
    if ((paramString2 == null) || (paramString2.length() == 0)) {
      this.reason = "NA";
    }
    paramEnumTransactionStatus = Properties.transactionsDatabase.getStartedTransactionContainer(paramString1);
    if (paramEnumTransactionStatus != null)
    {
      this.transaction_id = paramEnumTransactionStatus.transid;
      long l = paramEnumTransactionStatus.timestamp.longValue();
      if (l != -1L) {
        this.duration = (this.timestampMilis.longValue() - l);
      }
    }
    for (;;)
    {
      Properties.transactionsDatabase.closeStartedTransaction(paramString1);
      if (Properties.transactions.contains(this.transaction_id)) {
        Properties.transactions.remove(this.transaction_id);
      }
      return;
      this.transaction_id = null;
    }
  }
  
  protected static final ActionTransactionStop createTransactionCancel(String paramString1, String paramString2, HashMap<String, Object> paramHashMap)
  {
    return new ActionTransactionStop(paramString1, EnumTransactionStatus.CANCEL, paramString2, paramHashMap);
  }
  
  protected static final ActionTransactionStop createTransactionFail(String paramString1, String paramString2, HashMap<String, Object> paramHashMap)
  {
    return new ActionTransactionStop(paramString1, EnumTransactionStatus.FAIL, paramString2, paramHashMap);
  }
  
  protected static final ActionTransactionStop createTransactionStop(String paramString, HashMap<String, Object> paramHashMap)
  {
    return new ActionTransactionStop(paramString, EnumTransactionStatus.SUCCESS, null, paramHashMap);
  }
  
  public void save(DataSaver paramDataSaver)
  {
    paramDataSaver = toJsonLine();
    if (paramDataSaver != null) {
      new DataSaver().save(paramDataSaver);
    }
  }
  
  public void send(Context paramContext, NetSender paramNetSender, boolean paramBoolean)
  {
    paramContext = toJsonLine();
    if (paramContext != null) {
      paramNetSender.send(paramContext, paramBoolean);
    }
  }
  
  public void send(NetSender paramNetSender, boolean paramBoolean)
  {
    String str = toJsonLine();
    if (str != null) {
      paramNetSender.send(str, paramBoolean);
    }
  }
  
  public String toJsonLine()
  {
    if (this.transaction_id == null) {
      return null;
    }
    JSONObject localJSONObject = getBasicDataFixtureJson();
    try
    {
      localJSONObject.put("tr_name", this.name);
      localJSONObject.put("status", this.status.toString());
      localJSONObject.put("reason", this.reason);
      localJSONObject.put("transaction_id", this.transaction_id);
      localJSONObject.put("tr_duration", String.valueOf(this.duration));
      return localJSONObject.toString() + Properties.getSeparator(EnumActionType.trstop);
    }
    catch (JSONException localJSONException)
    {
      for (;;)
      {
        localJSONException.printStackTrace();
      }
    }
  }
}
