package com.litesuits.http.request.query;

import com.litesuits.http.request.param.HttpCustomParam;
import com.litesuits.http.request.param.HttpCustomParam.CustomValueBuilder;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public class SimpleQueryBuilder
  extends ModelQueryBuilder
{
  public SimpleQueryBuilder() {}
  
  private void buildMoreLevelValue(StringBuilder paramStringBuilder, String paramString1, Object paramObject, String paramString2)
  {
    int j = 0;
    if (paramObject == null) {}
    Object localObject2;
    label151:
    for (;;)
    {
      return;
      if (((paramObject instanceof Number)) || ((paramObject instanceof CharSequence)) || ((paramObject instanceof Character)))
      {
        buildUriKey(paramStringBuilder, paramString1).append(encode(paramObject.toString())).append(paramString2);
        return;
      }
      if (!(paramObject instanceof HttpCustomParam)) {
        break;
      }
      localObject1 = HttpCustomParam.class.getDeclaredMethods();
      j = localObject1.length;
      i = 0;
      for (;;)
      {
        if (i >= j) {
          break label151;
        }
        localObject2 = localObject1[i];
        if (((Method)localObject2).getAnnotation(HttpCustomParam.CustomValueBuilder.class) != null)
        {
          ((Method)localObject2).setAccessible(true);
          paramObject = ((Method)localObject2).invoke(paramObject, new Object[0]);
          if (paramObject == null) {
            break;
          }
          buildUriKey(paramStringBuilder, paramString1).append(encode(paramObject.toString())).append(paramString2);
          return;
        }
        i += 1;
      }
    }
    if (((paramObject instanceof Collection)) || ((paramObject instanceof Object[])))
    {
      if ((paramObject instanceof Collection))
      {
        paramObject = ((Collection)paramObject).toArray();
        buildUriKey(paramStringBuilder, paramString1).append("[");
        int k = paramObject.length;
        int m = paramObject.length;
        i = 0;
        label207:
        if (i >= m) {
          break label271;
        }
        localObject1 = paramObject[i];
        j += 1;
        if (j != k) {
          break label265;
        }
      }
      label265:
      for (paramString1 = "";; paramString1 = ",")
      {
        buildMoreLevelValue(paramStringBuilder, null, localObject1, paramString1);
        i += 1;
        break label207;
        paramObject = (Object[])paramObject;
        break;
      }
      label271:
      paramStringBuilder.append("]").append(paramString2);
      return;
    }
    if ((paramObject instanceof Map))
    {
      paramObject = (Map)paramObject;
      buildUriKey(paramStringBuilder, paramString1).append("{");
      j = paramObject.size();
      paramObject = paramObject.entrySet().iterator();
      i = 0;
      if (paramObject.hasNext())
      {
        paramString1 = (Map.Entry)paramObject.next();
        if (((paramString1.getKey() instanceof CharSequence)) || ((paramString1.getKey() instanceof Character)))
        {
          localObject1 = paramString1.getKey().toString();
          localObject2 = paramString1.getValue();
          i += 1;
          if (i == j) {}
          for (paramString1 = "";; paramString1 = ",")
          {
            buildMoreLevelValue(paramStringBuilder, (String)localObject1, localObject2, paramString1);
            break;
          }
        }
        localObject1 = paramString1.getKey().getClass().getSimpleName();
        localObject2 = paramString1.getValue();
        i += 1;
        if (i == j) {}
        for (paramString1 = "";; paramString1 = ",")
        {
          buildMoreLevelValue(paramStringBuilder, (String)localObject1, localObject2, paramString1);
          break;
        }
      }
      paramStringBuilder.append("}").append(paramString2);
      return;
    }
    buildUriKey(paramStringBuilder, paramString1);
    paramStringBuilder.append("{");
    Object localObject1 = getAllDeclaredFields(paramObject.getClass());
    j = ((ArrayList)localObject1).size() - 1;
    int i = 0;
    if (i <= j)
    {
      paramString1 = (Field)((ArrayList)localObject1).get(i);
      paramString1.setAccessible(true);
      localObject2 = paramString1.getName();
      Object localObject3 = paramString1.get(paramObject);
      if (localObject3 != null)
      {
        paramStringBuilder.append("{");
        if (i != j) {
          break label617;
        }
      }
      label617:
      for (paramString1 = "";; paramString1 = ",")
      {
        buildMoreLevelValue(paramStringBuilder, (String)localObject2, localObject3, paramString1);
        paramStringBuilder.append("}");
        i += 1;
        break;
      }
    }
    paramStringBuilder.append("}").append(paramString2);
  }
  
  protected CharSequence buildSencondaryValue(Object paramObject)
  {
    int i = 0;
    StringBuilder localStringBuilder;
    int k;
    int m;
    Object localObject1;
    label97:
    label155:
    Object localObject3;
    for (;;)
    {
      try
      {
        localStringBuilder = new StringBuilder();
        if (((paramObject instanceof Collection)) || ((paramObject instanceof Object[])))
        {
          if ((paramObject instanceof Collection))
          {
            paramObject = ((Collection)paramObject).toArray();
            buildUriKey(localStringBuilder, null).append("[");
            k = paramObject.length;
            m = paramObject.length;
            j = 0;
            break label425;
            buildMoreLevelValue(localStringBuilder, null, localObject2, (String)localObject1);
            j += 1;
            break label425;
          }
          paramObject = (Object[])paramObject;
          continue;
          localStringBuilder.append("]");
          break label460;
        }
        if (!(paramObject instanceof Map)) {
          break label317;
        }
        paramObject = (Map)paramObject;
        buildUriKey(localStringBuilder, null).append("{");
        j = paramObject.size();
        localObject1 = paramObject.entrySet().iterator();
        i = 0;
        if (!((Iterator)localObject1).hasNext()) {
          break;
        }
        paramObject = (Map.Entry)((Iterator)localObject1).next();
        if (((paramObject.getKey() instanceof CharSequence)) || ((paramObject.getKey() instanceof Character)))
        {
          localObject2 = paramObject.getKey().toString();
          localObject3 = paramObject.getValue();
          i += 1;
          if (i != j) {
            break label466;
          }
          paramObject = "";
          label231:
          buildMoreLevelValue(localStringBuilder, (String)localObject2, localObject3, paramObject);
        }
        else
        {
          localObject2 = paramObject.getKey().getClass().getSimpleName();
          localObject3 = paramObject.getValue();
          i += 1;
          if (i == j)
          {
            paramObject = "";
            buildMoreLevelValue(localStringBuilder, (String)localObject2, localObject3, paramObject);
          }
        }
      }
      catch (Exception paramObject)
      {
        paramObject.printStackTrace();
        return null;
      }
      paramObject = ",";
    }
    localStringBuilder.append("}");
    break label460;
    label317:
    Object localObject2 = getAllDeclaredFields(paramObject.getClass());
    int j = ((ArrayList)localObject2).size() - 1;
    i = 0;
    for (;;)
    {
      if (i <= j)
      {
        localObject1 = (Field)((ArrayList)localObject2).get(i);
        ((Field)localObject1).setAccessible(true);
        localObject3 = ((Field)localObject1).getName();
        Object localObject4 = ((Field)localObject1).get(paramObject);
        if (localObject4 == null) {
          break label472;
        }
        localStringBuilder.append("{");
        if (i == j) {}
        for (localObject1 = "";; localObject1 = ",")
        {
          buildMoreLevelValue(localStringBuilder, (String)localObject3, localObject4, (String)localObject1);
          localStringBuilder.append("}");
          break;
        }
        label425:
        if (j >= m) {
          break label97;
        }
        localObject2 = paramObject[j];
        i += 1;
        if (i == k)
        {
          localObject1 = "";
          break;
        }
        localObject1 = ",";
        break;
      }
      label460:
      return localStringBuilder;
      break label155;
      label466:
      paramObject = ",";
      break label231;
      label472:
      i += 1;
    }
  }
}
