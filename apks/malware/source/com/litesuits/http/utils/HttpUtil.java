package com.litesuits.http.utils;

import android.app.AlertDialog.Builder;
import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface.OnDismissListener;
import com.litesuits.http.log.HttpLog;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;

public class HttpUtil
{
  private static int CPU_CORES = 0;
  private static final String CPU_FILTER = "cpu[0-9]+";
  private static final String PATH_CPU = "/sys/devices/system/cpu/";
  private static final String TAG = HttpUtil.class.getSimpleName();
  
  public HttpUtil() {}
  
  public static AlertDialog.Builder dialogBuilder(Context paramContext, String paramString1, String paramString2)
  {
    paramContext = new AlertDialog.Builder(paramContext);
    if (paramString2 != null) {
      paramContext.setMessage(paramString2);
    }
    if (paramString1 != null) {
      paramContext.setTitle(paramString1);
    }
    return paramContext;
  }
  
  public static String formatDate(long paramLong)
  {
    return new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date(paramLong));
  }
  
  public static int getCoresNumbers()
  {
    if (CPU_CORES > 0) {
      return CPU_CORES;
    }
    try
    {
      CPU_CORES = new File("/sys/devices/system/cpu/").listFiles(new HttpUtil.1CpuFilter()).length;
      if (CPU_CORES < 1) {
        CPU_CORES = Runtime.getRuntime().availableProcessors();
      }
      if (CPU_CORES < 1) {
        CPU_CORES = 1;
      }
      HttpLog.i(TAG, "CPU cores: " + CPU_CORES);
      return CPU_CORES;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        localException.printStackTrace();
      }
    }
  }
  
  public static int getProcessorsCount()
  {
    return Runtime.getRuntime().availableProcessors();
  }
  
  public static Dialog showTips(Context paramContext, String paramString1, String paramString2)
  {
    return showTips(paramContext, paramString1, paramString2, null, null);
  }
  
  public static Dialog showTips(Context paramContext, String paramString1, String paramString2, String paramString3, DialogInterface.OnDismissListener paramOnDismissListener)
  {
    paramContext = dialogBuilder(paramContext, paramString1, paramString2);
    paramContext.setCancelable(true);
    paramContext.setPositiveButton(paramString3, null);
    paramContext = paramContext.show();
    paramContext.setCanceledOnTouchOutside(true);
    paramContext.setOnDismissListener(paramOnDismissListener);
    return paramContext;
  }
}
