package com.b.a.a;

import android.util.Log;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;

class q
{
  public File a;
  public byte[] b = a(paramString1, paramFile.getName(), paramString2);
  
  public q(p paramP, String paramString1, File paramFile, String paramString2)
  {
    this.a = paramFile;
  }
  
  private byte[] a(String paramString1, String paramString2, String paramString3)
  {
    ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
    try
    {
      localByteArrayOutputStream.write(p.a(this.c));
      localByteArrayOutputStream.write(p.a(this.c, paramString1, paramString2));
      localByteArrayOutputStream.write(p.a(this.c, paramString3));
      localByteArrayOutputStream.write(p.a());
      localByteArrayOutputStream.write(p.b());
      return localByteArrayOutputStream.toByteArray();
    }
    catch (IOException paramString1)
    {
      for (;;)
      {
        Log.e("SimpleMultipartEntity", "createHeader ByteArrayOutputStream exception", paramString1);
      }
    }
  }
  
  public long a()
  {
    return this.a.length() + this.b.length;
  }
  
  public void a(OutputStream paramOutputStream)
  {
    paramOutputStream.write(this.b);
    p.a(this.c, this.b.length);
    FileInputStream localFileInputStream = new FileInputStream(this.a);
    byte[] arrayOfByte = new byte['á€€'];
    for (;;)
    {
      int i = localFileInputStream.read(arrayOfByte);
      if (i == -1) {
        break;
      }
      paramOutputStream.write(arrayOfByte, 0, i);
      p.a(this.c, i);
    }
    paramOutputStream.write(p.b());
    p.a(this.c, p.b().length);
    paramOutputStream.flush();
    try
    {
      localFileInputStream.close();
      return;
    }
    catch (IOException paramOutputStream)
    {
      Log.w("SimpleMultipartEntity", "Cannot close input stream", paramOutputStream);
    }
  }
}
