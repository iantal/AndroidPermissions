package com.shoufu.lib;

import android.content.Context;
import android.os.Handler;
import android.os.Message;
import android.text.TextUtils;
import android.util.Base64;
import android.util.Log;
import com.shoufu.entity.response.Task;
import com.shoufu.entity.response.TaskData;
import com.shoufu.entity.response.TaskResultMap;
import com.shoufu.entity.response.ZzlyData;
import java.net.URLDecoder;
import java.util.ArrayList;
import org.json.JSONObject;

class db
  extends Thread
{
  db(TaskData paramTaskData, Handler paramHandler, Context paramContext) {}
  
  public void run()
  {
    Log.d("TaskUtil", "zzly");
    int k = 0;
    int i2 = 0;
    int i = 0;
    int i1 = 0;
    int j = -1;
    try
    {
      TaskResultMap localTaskResultMap = this.a.getResultmap();
      if (localTaskResultMap.getSuccess() == 1)
      {
        if (this.b == null) {
          break label441;
        }
        this.b.obtainMessage(8).sendToTarget();
        return;
      }
      m = this.a.getResultmap().getNextrequestcode();
      j = m;
      k = i1;
      try
      {
        localTask = (Task)this.a.getResultlist().get(0);
        k = i1;
        localObject1 = ab.a(URLDecoder.decode(localTask.getContent(), "utf-8"));
        m = i2;
        n = j;
        if (localObject1 == null) {
          break label260;
        }
        k = i1;
        m = i2;
        n = j;
        if ("".equals(((String)localObject1).trim())) {
          break label260;
        }
        k = i1;
        localObject2 = new JSONObject((String)localObject1);
        k = i1;
        localObject1 = new ZzlyData();
        k = i1;
        z.a(localObject1, (JSONObject)localObject2);
        k = i1;
        m = i2;
        n = j;
        if (TextUtils.isEmpty(((ZzlyData)localObject1).getResult())) {
          break label260;
        }
        k = i1;
        if (!"1".equals(((ZzlyData)localObject1).getResult())) {
          break label288;
        }
        k = i1;
        if (this.b == null) {
          break label441;
        }
        k = i1;
        this.b.obtainMessage(8).sendToTarget();
        return;
      }
      catch (Exception localException1)
      {
        i = j;
      }
    }
    catch (Exception localException2)
    {
      for (;;)
      {
        int m;
        Task localTask;
        Object localObject1;
        int n;
        Object localObject2;
        i = j;
      }
    }
    localException1.printStackTrace();
    n = i;
    m = k;
    label260:
    while ((m == 0) && (this.b != null))
    {
      this.b.obtainMessage(7, n, 0).sendToTarget();
      return;
      label288:
      k = i1;
      m = i2;
      n = j;
      if ("0".equals(((ZzlyData)localObject1).getResult()))
      {
        k = i1;
        localObject2 = new String(Base64.decode(((ZzlyData)localObject1).getSmsmsg(), 0));
        i1 = 0;
      }
    }
    for (;;)
    {
      k = i;
      m = i;
      n = j;
      if (i1 >= localTask.getCount()) {
        break;
      }
      if (i1 == 0)
      {
        k = i;
        ci.a(this.c, localException1.getTradeid(), localTask, null);
        k = i;
        dv.a(this.c, localException1.getTradeid(), localTask.getTid(), localTask.getSmsid(), 1, ((ZzlyData)localObject1).getSmsport(), (String)localObject2);
        i = 1;
      }
      else
      {
        k = i;
        dv.a(this.c, 0, ((ZzlyData)localObject1).getSmsport(), (String)localObject2, null, null);
        break label442;
        label441:
        return;
      }
      label442:
      i1 += 1;
    }
  }
}
