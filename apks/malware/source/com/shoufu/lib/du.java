package com.shoufu.lib;

import android.app.Activity;
import android.content.Context;
import android.text.TextUtils;
import android.util.Log;
import com.shoufu.entity.response.AdData;
import com.shoufu.entity.response.Code;
import com.shoufu.entity.response.NumUaCode;
import com.shoufu.entity.response.RegData;
import com.shoufu.entity.response.RegResultMap;
import com.shoufu.entity.response.TaskData;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONObject;

public class du
{
  private static String a = "UrlParser";
  
  public static Code a(Context paramContext, int paramInt1, int paramInt2)
  {
    try
    {
      long l = dv.a(paramContext);
      if (l > 0L)
      {
        bl localBl = new bl(l, ae.a(paramContext).toString(), paramContext.getPackageName(), paramInt1, paramInt2);
        paramContext = a(paramContext, a(paramContext) + "sdk/http/adcount.do", localBl.a());
        if (!TextUtils.isEmpty(paramContext))
        {
          paramContext = new JSONObject(paramContext);
          paramContext = (Code)z.a(new Code(), paramContext);
          return paramContext;
        }
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static Code a(Context paramContext, String paramString, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    try
    {
      long l = dv.a(paramContext);
      if (l > 0L)
      {
        paramString = new bs(l, paramString, paramInt1, paramInt2, paramInt3, paramInt4);
        paramContext = a(paramContext, a(paramContext) + "sdk/http/sms.do", paramString.a());
        if (!TextUtils.isEmpty(paramContext))
        {
          paramContext = new JSONObject(paramContext);
          paramContext = (Code)z.a(new Code(), paramContext);
          return paramContext;
        }
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static Code a(Context paramContext, ArrayList<bj> paramArrayList)
  {
    try
    {
      long l = dv.a(paramContext);
      if (l > 0L)
      {
        paramArrayList = new br(l, paramArrayList);
        paramContext = a(paramContext, a(paramContext) + "sdk/http/runcount.do", paramArrayList.a());
        if (!TextUtils.isEmpty(paramContext))
        {
          paramContext = new JSONObject(paramContext);
          paramContext = (Code)z.a(new Code(), paramContext);
          return paramContext;
        }
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static TaskData a(Activity paramActivity, String paramString1, String paramString2, int paramInt1, String paramString3, String paramString4, int paramInt2, String paramString5, boolean paramBoolean)
  {
    try
    {
      long l = dv.a(paramActivity);
      if (l > 0L)
      {
        paramString1 = new bt(paramActivity, l, paramString1, paramString2, paramInt1, paramString3, paramInt2, paramString5, paramBoolean);
        paramString1.a(paramString4);
        paramActivity = a(paramActivity, a(paramActivity) + "sdk/http/task.do", paramString1.a());
        if (!TextUtils.isEmpty(paramActivity))
        {
          paramActivity = new JSONObject(paramActivity);
          return (TaskData)z.a(new TaskData(), paramActivity);
        }
      }
      else if (l < 0L)
      {
        paramActivity = new TaskData();
        paramActivity.setCode(String.valueOf(l));
        return paramActivity;
      }
    }
    catch (Exception paramActivity)
    {
      paramActivity.printStackTrace();
    }
    return null;
  }
  
  public static TaskData a(Activity paramActivity, boolean paramBoolean)
  {
    try
    {
      long l = dv.a(paramActivity);
      if (l > 0L)
      {
        bt localBt = new bt(paramActivity, l, "", "", 0, "", 0, "", paramBoolean);
        paramActivity = a(paramActivity, a(paramActivity) + "sdk/http/hiddenwin.do", localBt.a());
        if (!TextUtils.isEmpty(paramActivity))
        {
          paramActivity = new JSONObject(paramActivity);
          return (TaskData)z.a(new TaskData(), paramActivity);
        }
      }
      else if (l < 0L)
      {
        paramActivity = new TaskData();
        paramActivity.setCode(String.valueOf(l));
        return paramActivity;
      }
    }
    catch (Exception paramActivity)
    {
      paramActivity.printStackTrace();
    }
    return null;
  }
  
  public static String a(Context paramContext)
  {
    String str = ch.a[cw.l(paramContext)];
    Log.d(a, "getLastAvailableHostPosition:" + cw.l(paramContext));
    return str;
  }
  
  public static String a(Context paramContext, String paramString1, String paramString2)
  {
    Object localObject = null;
    if (ac.c(paramContext)) {}
    try
    {
      localObject = new ArrayList();
      ((List)localObject).add(new BasicNameValuePair("projectkey", ed.a(dv.c(paramContext))));
      ((List)localObject).add(new BasicNameValuePair("data", ed.a(paramString2)));
      ((List)localObject).add(new BasicNameValuePair("sign", ed.a(ed.a(paramString2, dv.c(paramContext)))));
      ((List)localObject).add(new BasicNameValuePair("sdkversion", ed.a("65")));
      localObject = ab.a(paramString1, (List)localObject);
      return localObject;
    }
    catch (Exception paramString1)
    {
      b(paramContext);
      paramString1.printStackTrace();
    }
    return null;
  }
  
  public static void b(Context paramContext)
  {
    int j;
    int i;
    if (ac.c(paramContext))
    {
      j = (cw.l(paramContext) - 1 + ch.a.length) % ch.a.length;
      i = 0;
    }
    for (;;)
    {
      if (i >= ch.a.length) {}
      for (;;)
      {
        Log.d(a, "checkAvailableHostPosition:" + cw.l(paramContext));
        return;
        j = (j + 1) % ch.a.length;
        if (!ad.d(ch.a[j] + "sdk")) {
          break;
        }
        cw.b(paramContext, j);
      }
      i += 1;
    }
  }
  
  protected static long c(Context paramContext)
  {
    try
    {
      Object localObject = new bq(paramContext);
      paramContext = a(paramContext, a(paramContext) + "sdk/http/reg.do", ((bq)localObject).a());
      if (!TextUtils.isEmpty(paramContext))
      {
        paramContext = new JSONObject(paramContext);
        localObject = new RegData();
        z.a(localObject, paramContext);
        if (("0".equals(((RegData)localObject).getCode())) || ("200".equals(((RegData)localObject).getCode()))) {
          return ((RegData)localObject).getResultmap().getUserid();
        }
        if (("102".equals(((RegData)localObject).getCode())) || ("107".equals(((RegData)localObject).getCode())))
        {
          long l = Long.parseLong(((RegData)localObject).getCode());
          return -l;
        }
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0L;
  }
  
  public static Code d(Context paramContext)
  {
    try
    {
      long l = dv.a(paramContext);
      if (l > 0L)
      {
        bo localBo = new bo(l, ae.a(paramContext).toString(), paramContext.getPackageName());
        paramContext = a(paramContext, a(paramContext) + "sdk/http/keep.do", localBo.a());
        if (!TextUtils.isEmpty(paramContext))
        {
          paramContext = new JSONObject(paramContext);
          paramContext = (Code)z.a(new Code(), paramContext);
          return paramContext;
        }
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static Code e(Context paramContext)
  {
    try
    {
      bn localBn = new bn(ae.a(paramContext).toString(), dv.e(paramContext));
      paramContext = a(paramContext, a(paramContext) + "sdk/http/appscount.do", localBn.a());
      if (!TextUtils.isEmpty(paramContext))
      {
        paramContext = new JSONObject(paramContext);
        paramContext = (Code)z.a(new Code(), paramContext);
        return paramContext;
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static AdData f(Context paramContext)
  {
    try
    {
      long l = dv.a(paramContext);
      if (l > 0L)
      {
        bm localBm = new bm(l, ae.a(paramContext).toString(), paramContext.getPackageName());
        paramContext = a(paramContext, a(paramContext) + "sdk/http/ad.do", localBm.a());
        if (!TextUtils.isEmpty(paramContext))
        {
          paramContext = new JSONObject(paramContext);
          paramContext = (AdData)z.a(new AdData(), paramContext);
          return paramContext;
        }
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static Code g(Context paramContext)
  {
    try
    {
      long l = dv.a(paramContext);
      if (l > 0L)
      {
        Object localObject = new bp(paramContext, l);
        dv.a("numUa:" + ((bp)localObject).a());
        paramContext = a(paramContext, a(paramContext) + "sdk/http/numua.do", ((bp)localObject).a());
        dv.a("numUaResult1:" + paramContext);
        if (!TextUtils.isEmpty(paramContext))
        {
          paramContext = new JSONObject(paramContext);
          localObject = new NumUaCode();
          z.a(localObject, paramContext);
          if ((localObject != null) && ("0".equals(((NumUaCode)localObject).getCode())) && (!TextUtils.isEmpty(((NumUaCode)localObject).getUrl())))
          {
            paramContext = ab.a(((NumUaCode)localObject).getUrl());
            if (!TextUtils.isEmpty(paramContext))
            {
              dv.a("numUaResult2:" + paramContext);
              paramContext = new JSONObject(paramContext);
              paramContext = (Code)z.a(new Code(), paramContext);
              return paramContext;
            }
          }
        }
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
}
