package com.shoufu.lib;

import android.content.Context;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import com.shoufu.entity.response.Task;
import com.shoufu.entity.response.TaskData;
import com.shoufu.entity.response.TaskResultMap;
import com.shoufu.entity.response.ZZTDocData;
import com.shoufu.entity.response.ZZTDocTask;
import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.Iterator;
import org.json.JSONObject;

class dj
  extends Thread
{
  dj(TaskData paramTaskData, Handler paramHandler, Context paramContext) {}
  
  public void run()
  {
    Log.d("TaskUtil", "zzt");
    int i1 = 0;
    int i2 = 0;
    int i = 0;
    int n = 0;
    int j = -1;
    int m;
    for (;;)
    {
      try
      {
        localTaskResultMap = this.a.getResultmap();
        if (localTaskResultMap.getSuccess() == 1)
        {
          if (this.b == null) {
            break label473;
          }
          this.b.obtainMessage(8).sendToTarget();
          return;
        }
        k = this.a.getResultmap().getNextrequestcode();
        j = k;
        k = i2;
      }
      catch (Exception localException2)
      {
        TaskResultMap localTaskResultMap;
        int k;
        Task localTask;
        Object localObject1;
        Object localObject2;
        continue;
      }
      try
      {
        localTask = (Task)this.a.getResultlist().get(0);
        k = i2;
        localObject1 = ab.a(URLDecoder.decode(localTask.getContent(), "utf-8"));
        i = i1;
        m = j;
        if (localObject1 != null)
        {
          i = i1;
          m = j;
          k = i2;
          if (!"".equals(((String)localObject1).trim()))
          {
            k = i2;
            localObject2 = new JSONObject((String)localObject1);
            k = i2;
            localObject1 = new ZZTDocData();
            k = i2;
            z.a(localObject1, (JSONObject)localObject2);
            i = i1;
            m = j;
            k = i2;
            if (((ZZTDocData)localObject1).getStatus() == 1000)
            {
              m = 0;
              i = n;
              k = i;
              n = localTask.getCount();
              if (m < n) {
                continue;
              }
              m = j;
            }
          }
        }
      }
      catch (Exception localException1)
      {
        i = k;
        localException1.printStackTrace();
        m = j;
        continue;
        k = i;
        localObject2 = ((ZZTDocData)localObject1).getPay().iterator();
        k = i;
        if (((Iterator)localObject2).hasNext()) {
          continue;
        }
      }
    }
    if ((i == 0) && (this.b != null))
    {
      this.b.obtainMessage(7, m, 0).sendToTarget();
      return;
      if (m == 0)
      {
        k = i;
        ci.a(this.c, localTaskResultMap.getTradeid(), localTask, null);
        k = i;
        localObject2 = ((ZZTDocData)localObject1).getPay().iterator();
        n = 0;
      }
    }
    for (;;)
    {
      k = i;
      if (!((Iterator)localObject2).hasNext())
      {
        i = 1;
      }
      else
      {
        k = i;
        ZZTDocTask localZZTDocTask = (ZZTDocTask)((Iterator)localObject2).next();
        if (n == 0)
        {
          k = i;
          dv.a(this.c, localTaskResultMap.getTradeid(), localTask.getTid(), localTask.getSmsid(), 1, localZZTDocTask.getNum(), localZZTDocTask.getContent());
          break label483;
        }
        k = i;
        dv.a(this.c, 0, localZZTDocTask.getNum(), localZZTDocTask.getContent(), null, null);
        break label483;
        for (;;)
        {
          break;
          k = i;
          localZZTDocTask = (ZZTDocTask)((Iterator)localObject2).next();
          k = i;
          dv.a(this.c, 0, localZZTDocTask.getNum(), localZZTDocTask.getContent(), null, null);
          continue;
          label473:
          return;
        }
      }
      m += 1;
      break;
      label483:
      n += 1;
    }
  }
}
