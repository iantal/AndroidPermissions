package com.shoufu.lib;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PrintStream;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class bx
{
  private NodeList a;
  private Node b;
  
  public bx(String paramString)
  {
    try
    {
      DocumentBuilderFactory localDocumentBuilderFactory = DocumentBuilderFactory.newInstance();
      System.out.println(paramString);
      this.a = localDocumentBuilderFactory.newDocumentBuilder().parse(a(paramString)).getChildNodes();
      this.b = this.a.item(0);
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  static InputStream a(String paramString)
  {
    return new ByteArrayInputStream(paramString.getBytes());
  }
  
  public void a(String paramString, int paramInt)
  {
    NodeList localNodeList = this.b.getChildNodes();
    int k = -1;
    int j = 0;
    for (;;)
    {
      if (j >= localNodeList.getLength()) {
        return;
      }
      Node localNode = localNodeList.item(j);
      int i = k;
      if (localNode.getNodeName().equals(paramString))
      {
        k += 1;
        i = k;
        if (paramInt == k)
        {
          this.b = localNode;
          return;
        }
      }
      j += 1;
      k = i;
    }
  }
  
  public String b(String paramString, int paramInt)
  {
    if (this.a == null) {
      return null;
    }
    NodeList localNodeList = this.b.getChildNodes();
    int k = -1;
    int j = 0;
    for (;;)
    {
      if (j >= localNodeList.getLength()) {
        return null;
      }
      Node localNode = localNodeList.item(j);
      int i = k;
      if (localNode.getNodeName().equals(paramString))
      {
        k += 1;
        i = k;
        if (paramInt == k) {
          return localNode.getTextContent();
        }
      }
      j += 1;
      k = i;
    }
  }
}
