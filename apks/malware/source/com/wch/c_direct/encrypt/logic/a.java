package com.wch.c_direct.encrypt.logic;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import java.io.InputStream;
import java.util.Arrays;

public final class a
{
  public static byte[] a(InputStream paramInputStream)
  {
    com.wch.c_direct.logic.a.a();
    paramInputStream = BitmapFactory.decodeStream(paramInputStream);
    paramInputStream.setHasAlpha(true);
    byte[] arrayOfByte = new byte[8];
    int j = 0;
    int k = 0;
    int i = 0;
    if (j >= arrayOfByte.length)
    {
      arrayOfByte = a(arrayOfByte);
      i = 0;
      j = 0;
      label43:
      if (i < 4) {
        break label193;
      }
      arrayOfByte = new byte[j * 8 / 4];
      j = 0;
      k = 0;
      i = 0;
    }
    for (;;)
    {
      if (j >= arrayOfByte.length)
      {
        arrayOfByte = a(arrayOfByte);
        paramInputStream.recycle();
        return Arrays.copyOfRange(arrayOfByte, 4, arrayOfByte.length);
        m = paramInputStream.getPixel(i, k);
        arrayOfByte[j] = ((byte)(m >> 16 & 0xF));
        if (j + 1 < 8) {
          arrayOfByte[(j + 1)] = ((byte)(m >> 8 & 0xF));
        }
        if (j + 2 < 8) {
          arrayOfByte[(j + 2)] = ((byte)(m & 0xF));
        }
        n = i + 1;
        m = k;
        i = n;
        if (n == paramInputStream.getWidth())
        {
          m = k + 1;
          i = 0;
        }
        j += 3;
        k = m;
        break;
        label193:
        j = j << 8 | arrayOfByte[i] & 0xFF;
        i += 1;
        break label43;
      }
      int m = paramInputStream.getPixel(i, k);
      arrayOfByte[j] = ((byte)(m >> 16 & 0xF));
      if (j + 1 < arrayOfByte.length) {
        arrayOfByte[(j + 1)] = ((byte)(m >> 8 & 0xF));
      }
      if (j + 2 < arrayOfByte.length) {
        arrayOfByte[(j + 2)] = ((byte)(m & 0xF));
      }
      int n = i + 1;
      m = k;
      i = n;
      if (n == paramInputStream.getWidth())
      {
        m = k + 1;
        i = 0;
      }
      j += 3;
      k = m;
    }
  }
  
  private static byte[] a(byte[] paramArrayOfByte)
  {
    com.wch.c_direct.logic.a.a();
    byte[] arrayOfByte = new byte[paramArrayOfByte.length / 2];
    int i = 0;
    if (i >= arrayOfByte.length) {
      return arrayOfByte;
    }
    int j = 0;
    for (;;)
    {
      if (j >= 2)
      {
        i += 1;
        break;
      }
      arrayOfByte[i] = ((byte)(arrayOfByte[i] << 4 | paramArrayOfByte[(i * 8 / 4 + j)]));
      j += 1;
    }
  }
}
