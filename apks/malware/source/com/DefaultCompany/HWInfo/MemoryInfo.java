package com.DefaultCompany.HWInfo;

import android.annotation.SuppressLint;
import android.os.Build.VERSION;
import android.os.Environment;
import android.os.StatFs;
import java.io.File;

public class MemoryInfo
{
  public MemoryInfo() {}
  
  @SuppressLint({"NewApi"})
  public long getRomAvailableMemSize()
  {
    int i = Integer.valueOf(Build.VERSION.SDK_INT).intValue();
    StatFs localStatFs = new StatFs(Environment.getDataDirectory().getPath());
    long l2;
    if (i < 18) {
      l2 = localStatFs.getBlockSize();
    }
    for (long l1 = localStatFs.getAvailableBlocks();; l1 = localStatFs.getAvailableBlocksLong())
    {
      return l2 * l1;
      l2 = localStatFs.getBlockSizeLong();
    }
  }
  
  @SuppressLint({"NewApi"})
  public long getRomTotleMemSize()
  {
    int i = Integer.valueOf(Build.VERSION.SDK_INT).intValue();
    StatFs localStatFs = new StatFs(Environment.getDataDirectory().getPath());
    long l2;
    if (i < 18) {
      l2 = localStatFs.getBlockSize();
    }
    for (long l1 = localStatFs.getBlockCount();; l1 = localStatFs.getBlockCountLong())
    {
      return l2 * l1;
      l2 = localStatFs.getBlockSizeLong();
    }
  }
  
  @SuppressLint({"NewApi"})
  public long getSDAvailableMemSize()
  {
    int i = Integer.valueOf(Build.VERSION.SDK_INT).intValue();
    StatFs localStatFs = new StatFs(Environment.getExternalStorageDirectory().getPath());
    long l2;
    if (i < 18) {
      l2 = localStatFs.getBlockSize();
    }
    for (long l1 = localStatFs.getAvailableBlocks();; l1 = localStatFs.getAvailableBlocksLong())
    {
      return l2 * l1;
      l2 = localStatFs.getBlockSizeLong();
    }
  }
  
  public int getSDKVersion()
  {
    return Integer.valueOf(Build.VERSION.SDK_INT).intValue();
  }
  
  @SuppressLint({"NewApi"})
  public long getSDTotleMemSize()
  {
    int i = Integer.valueOf(Build.VERSION.SDK_INT).intValue();
    StatFs localStatFs = new StatFs(Environment.getExternalStorageDirectory().getPath());
    long l2;
    if (i < 18) {
      l2 = localStatFs.getBlockSize();
    }
    for (long l1 = localStatFs.getBlockCount();; l1 = localStatFs.getBlockCountLong())
    {
      return l2 * l1;
      l2 = localStatFs.getBlockSizeLong();
    }
  }
}
