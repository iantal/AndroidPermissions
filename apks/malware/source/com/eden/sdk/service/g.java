package com.eden.sdk.service;

import android.util.Log;
import com.eden.sdk.b.y;
import com.eden.sdk.util.AppUtils;
import java.io.File;
import java.io.FileOutputStream;
import org.apache.http.Header;

final class g
  extends y
{
  g(A paramA, String[] paramArrayOfString, String paramString1, String paramString2, String paramString3)
  {
    super(paramArrayOfString);
  }
  
  public final void onFailure(int paramInt, Header[] paramArrayOfHeader, byte[] paramArrayOfByte, Throwable paramThrowable) {}
  
  public final void onProgress(int paramInt1, int paramInt2)
  {
    super.onProgress(paramInt1, paramInt2);
  }
  
  public final void onSuccess(int paramInt, Header[] paramArrayOfHeader, byte[] paramArrayOfByte)
  {
    Object localObject = null;
    paramArrayOfHeader = null;
    try
    {
      FileOutputStream localFileOutputStream = this.a.openFileOutput(this.b, 1);
      paramArrayOfHeader = localFileOutputStream;
      localObject = localFileOutputStream;
      localFileOutputStream.write(paramArrayOfByte);
      paramArrayOfHeader = localFileOutputStream;
      localObject = localFileOutputStream;
      localFileOutputStream.flush();
      paramArrayOfHeader = localFileOutputStream;
      localObject = localFileOutputStream;
      paramArrayOfByte = new File(this.c);
      paramArrayOfHeader = localFileOutputStream;
      localObject = localFileOutputStream;
      new File(this.d).renameTo(paramArrayOfByte);
      paramArrayOfHeader = localFileOutputStream;
      localObject = localFileOutputStream;
      AppUtils.installAPK(paramArrayOfByte, this.a);
      if (localFileOutputStream != null) {}
      return;
    }
    catch (Exception paramArrayOfByte)
    {
      do
      {
        paramArrayOfByte = paramArrayOfByte;
        localObject = paramArrayOfHeader;
        Log.e("EdenSdk", "downloadApk onSuccess:" + paramArrayOfByte.toString());
      } while (paramArrayOfHeader == null);
      try
      {
        paramArrayOfHeader.close();
        return;
      }
      catch (Exception paramArrayOfHeader)
      {
        return;
      }
    }
    finally
    {
      if (localObject != null) {}
      try
      {
        ((FileOutputStream)localObject).close();
        throw paramArrayOfHeader;
      }
      catch (Exception paramArrayOfByte)
      {
        for (;;) {}
      }
    }
  }
}
