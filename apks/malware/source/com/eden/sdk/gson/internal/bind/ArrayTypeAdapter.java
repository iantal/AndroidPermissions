package com.eden.sdk.gson.internal.bind;

import com.eden.sdk.gson.Gson;
import com.eden.sdk.gson.TypeAdapter;
import com.eden.sdk.gson.TypeAdapterFactory;
import com.eden.sdk.gson.stream.JsonReader;
import com.eden.sdk.gson.stream.JsonToken;
import com.eden.sdk.gson.stream.JsonWriter;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.List;

public final class ArrayTypeAdapter<E>
  extends TypeAdapter<Object>
{
  public static final TypeAdapterFactory FACTORY = new ArrayTypeAdapter.1();
  private final Class<E> componentType;
  private final TypeAdapter<E> componentTypeAdapter;
  
  public ArrayTypeAdapter(Gson paramGson, TypeAdapter<E> paramTypeAdapter, Class<E> paramClass)
  {
    this.componentTypeAdapter = new TypeAdapterRuntimeTypeWrapper(paramGson, paramTypeAdapter, paramClass);
    this.componentType = paramClass;
  }
  
  public final Object read(JsonReader paramJsonReader)
  {
    if (paramJsonReader.peek() == JsonToken.NULL)
    {
      paramJsonReader.nextNull();
      return null;
    }
    ArrayList localArrayList = new ArrayList();
    paramJsonReader.beginArray();
    int i;
    if (!paramJsonReader.hasNext())
    {
      paramJsonReader.endArray();
      paramJsonReader = Array.newInstance(this.componentType, localArrayList.size());
      i = 0;
    }
    for (;;)
    {
      if (i >= localArrayList.size())
      {
        return paramJsonReader;
        localArrayList.add(this.componentTypeAdapter.read(paramJsonReader));
        break;
      }
      Array.set(paramJsonReader, i, localArrayList.get(i));
      i += 1;
    }
  }
  
  public final void write(JsonWriter paramJsonWriter, Object paramObject)
  {
    if (paramObject == null)
    {
      paramJsonWriter.nullValue();
      return;
    }
    paramJsonWriter.beginArray();
    int i = 0;
    int j = Array.getLength(paramObject);
    for (;;)
    {
      if (i >= j)
      {
        paramJsonWriter.endArray();
        return;
      }
      Object localObject = Array.get(paramObject, i);
      this.componentTypeAdapter.write(paramJsonWriter, localObject);
      i += 1;
    }
  }
}
