package com.eden.sdk.unluac.decompile.block;

import com.eden.sdk.unluac.decompile.Decompiler;
import com.eden.sdk.unluac.decompile.Output;
import com.eden.sdk.unluac.decompile.branch.Branch;
import com.eden.sdk.unluac.decompile.operation.Operation;
import com.eden.sdk.unluac.decompile.statement.Statement;
import com.eden.sdk.unluac.parse.LFunction;

public class CompareBlock
  extends Block
{
  public Branch branch;
  public int target;
  
  public CompareBlock(LFunction paramLFunction, int paramInt1, int paramInt2, int paramInt3, Branch paramBranch)
  {
    super(paramLFunction, paramInt1, paramInt2);
    this.target = paramInt3;
    this.branch = paramBranch;
  }
  
  public void addStatement(Statement paramStatement) {}
  
  public boolean breakable()
  {
    return false;
  }
  
  public int getLoopback()
  {
    throw new IllegalStateException();
  }
  
  public boolean isContainer()
  {
    return false;
  }
  
  public boolean isUnprotected()
  {
    return false;
  }
  
  public void print(Output paramOutput)
  {
    paramOutput.print("-- unhandled compare assign");
  }
  
  public Operation process(Decompiler paramDecompiler)
  {
    return new CompareBlock.1(this, this.end - 1);
  }
}
