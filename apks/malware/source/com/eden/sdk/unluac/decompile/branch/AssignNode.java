package com.eden.sdk.unluac.decompile.branch;

import com.eden.sdk.unluac.decompile.Registers;
import com.eden.sdk.unluac.decompile.expression.Expression;

public class AssignNode
  extends Branch
{
  private Expression expression;
  
  public AssignNode(int paramInt1, int paramInt2, int paramInt3)
  {
    super(paramInt1, paramInt2, paramInt3);
  }
  
  public Expression asExpression(Registers paramRegisters)
  {
    return this.expression;
  }
  
  public int getRegister()
  {
    throw new IllegalStateException();
  }
  
  public Branch invert()
  {
    throw new IllegalStateException();
  }
  
  public void useExpression(Expression paramExpression)
  {
    this.expression = paramExpression;
  }
}
