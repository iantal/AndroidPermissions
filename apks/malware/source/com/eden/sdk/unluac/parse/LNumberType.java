package com.eden.sdk.unluac.parse;

import java.nio.ByteBuffer;

public class LNumberType
  extends BObjectType<LNumber>
{
  public final boolean integral;
  public final int size;
  
  public LNumberType(int paramInt, boolean paramBoolean)
  {
    this.size = paramInt;
    this.integral = paramBoolean;
    if ((paramInt != 4) && (paramInt != 8)) {
      throw new IllegalStateException("The input chunk has an unsupported Lua number size: " + paramInt);
    }
  }
  
  public LNumber parse(ByteBuffer paramByteBuffer, BHeader paramBHeader)
  {
    Object localObject = null;
    if (this.integral) {
      switch (this.size)
      {
      default: 
        paramByteBuffer = localObject;
      }
    }
    while (paramByteBuffer == null)
    {
      throw new IllegalStateException("The input chunk has an unsupported Lua number format");
      paramByteBuffer = new LIntNumber(paramByteBuffer.getInt());
      continue;
      paramByteBuffer = new LLongNumber(paramByteBuffer.getLong());
      continue;
      switch (this.size)
      {
      default: 
        paramByteBuffer = localObject;
        break;
      case 4: 
        paramByteBuffer = new LFloatNumber(paramByteBuffer.getFloat());
        break;
      case 8: 
        paramByteBuffer = new LDoubleNumber(paramByteBuffer.getDouble());
      }
    }
    paramBHeader.getClass();
    return paramByteBuffer;
  }
}
