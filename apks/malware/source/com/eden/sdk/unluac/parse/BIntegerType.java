package com.eden.sdk.unluac.parse;

import java.math.BigInteger;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class BIntegerType
  extends BObjectType<BInteger>
{
  public final int intSize;
  
  public BIntegerType(int paramInt)
  {
    this.intSize = paramInt;
  }
  
  public BInteger parse(ByteBuffer paramByteBuffer, BHeader paramBHeader)
  {
    paramByteBuffer = raw_parse(paramByteBuffer, paramBHeader);
    paramBHeader.getClass();
    return paramByteBuffer;
  }
  
  protected BInteger raw_parse(ByteBuffer paramByteBuffer, BHeader paramBHeader)
  {
    int i = 0;
    int j;
    switch (this.intSize)
    {
    case 3: 
    default: 
      paramBHeader = new byte[this.intSize];
      j = 1;
      if (paramByteBuffer.order() == ByteOrder.LITTLE_ENDIAN)
      {
        i = this.intSize - 1;
        j = -1;
      }
      break;
    }
    for (;;)
    {
      if ((i < 0) || (i >= this.intSize))
      {
        return new BInteger(new BigInteger(paramBHeader));
        return new BInteger(0);
        return new BInteger(paramByteBuffer.get());
        return new BInteger(paramByteBuffer.getShort());
        return new BInteger(paramByteBuffer.getInt());
      }
      paramBHeader[i] = paramByteBuffer.get();
      i += j;
    }
  }
}
