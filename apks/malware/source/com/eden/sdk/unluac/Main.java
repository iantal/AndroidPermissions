package com.eden.sdk.unluac;

import com.eden.sdk.unluac.decompile.Decompiler;
import com.eden.sdk.unluac.decompile.Output;
import com.eden.sdk.unluac.parse.BHeader;
import com.eden.sdk.unluac.parse.LFunction;
import com.eden.sdk.unluac.parse.LFunctionType;
import java.io.IOException;
import java.io.PrintStream;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.channels.FileChannel;

public class Main
{
  public static String version = "1.1.0";
  
  public Main() {}
  
  public static void decompile(String paramString1, String paramString2)
  {
    paramString1 = new Decompiler(file_to_function(paramString1));
    paramString1.decompile();
    paramString2 = new PrintStream(paramString2);
    paramString1.print(new Output(new Main.1(paramString2)));
    paramString2.flush();
    paramString2.close();
  }
  
  private static LFunction file_to_function(String paramString)
  {
    Object localObject = new RandomAccessFile(paramString, "r");
    paramString = ByteBuffer.allocate((int)((RandomAccessFile)localObject).length());
    paramString.order(ByteOrder.LITTLE_ENDIAN);
    int i = (int)((RandomAccessFile)localObject).length();
    localObject = ((RandomAccessFile)localObject).getChannel();
    for (;;)
    {
      if (i <= 0)
      {
        paramString.rewind();
        localObject = new BHeader(paramString);
        return ((BHeader)localObject).function.parse(paramString, (BHeader)localObject);
      }
      i -= ((FileChannel)localObject).read(paramString);
    }
  }
  
  public static void main(String[] paramArrayOfString)
  {
    if ((paramArrayOfString.length == 0) || (paramArrayOfString.length > 1))
    {
      System.err.println("unluac v" + version);
      if (paramArrayOfString.length == 0) {
        System.err.println("  error: no input file provided");
      }
      for (;;)
      {
        System.err.println("  usage: java -jar unluac.jar <file>");
        System.exit(1);
        return;
        System.err.println("  error: too many arguments");
      }
    }
    Object localObject = paramArrayOfString[0];
    paramArrayOfString = null;
    try
    {
      localObject = file_to_function((String)localObject);
      paramArrayOfString = (String[])localObject;
    }
    catch (IOException localIOException)
    {
      for (;;)
      {
        System.err.println("unluac v" + version);
        System.err.print("  error: ");
        System.err.println(localIOException.getMessage());
        System.exit(1);
      }
    }
    paramArrayOfString = new Decompiler(paramArrayOfString);
    paramArrayOfString.decompile();
    paramArrayOfString.print();
    System.exit(0);
  }
}
