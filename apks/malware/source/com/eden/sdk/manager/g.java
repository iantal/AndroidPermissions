package com.eden.sdk.manager;

import com.eden.sdk.response.Money;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public final class g
{
  private static void a(Element paramElement, Map<String, Object> paramMap)
  {
    Object localObject1 = paramElement.getElementsByTagName("version");
    if ((localObject1 != null) && (((NodeList)localObject1).getLength() == 1))
    {
      localObject1 = ((NodeList)localObject1).item(0);
      if ((((Node)localObject1).getNodeType() == 1) && (((Node)localObject1).getFirstChild() != null)) {
        paramMap.put("version", ((Node)localObject1).getFirstChild().getNodeValue());
      }
    }
    localObject1 = paramElement.getElementsByTagName("session");
    if ((localObject1 != null) && (((NodeList)localObject1).getLength() == 1))
    {
      localObject1 = ((NodeList)localObject1).item(0);
      if ((((Node)localObject1).getNodeType() == 1) && (((Node)localObject1).getFirstChild() != null)) {
        paramMap.put("session", ((Node)localObject1).getFirstChild().getNodeValue());
      }
    }
    paramElement = paramElement.getElementsByTagName("response");
    int i = 0;
    if (i >= paramElement.getLength()) {
      return;
    }
    localObject1 = paramElement.item(i);
    int j;
    if ((localObject1 != null) && (((Node)localObject1).getNodeType() == 1) && (((Node)localObject1).hasAttributes()))
    {
      localObject2 = ((Node)localObject1).getAttributes();
      j = 0;
    }
    for (;;)
    {
      if (j >= ((NamedNodeMap)localObject2).getLength())
      {
        if ((localObject1 != null) && (((Node)localObject1).getNodeType() == 1) && (((Node)localObject1).hasChildNodes()))
        {
          localObject1 = ((Node)localObject1).getChildNodes();
          j = 0;
          if (j < ((NodeList)localObject1).getLength()) {
            break label361;
          }
        }
        i += 1;
        break;
      }
      Node localNode = ((NamedNodeMap)localObject2).item(j);
      if ((localNode != null) && (localNode.getNodeValue() != null) && (localNode.getNodeType() == 2) && (!"type".equals(localNode.getNodeName()))) {
        "serial".equals(localNode.getNodeName());
      }
      j += 1;
    }
    label361:
    Object localObject2 = ((NodeList)localObject1).item(j);
    if ((localObject2 != null) && (((Node)localObject2).getNodeType() == 1) && (((Node)localObject2).getFirstChild() != null))
    {
      if (!"code".equals(((Node)localObject2).getNodeName())) {
        break label440;
      }
      paramMap.put("code", ((Node)localObject2).getFirstChild().getNodeValue());
    }
    for (;;)
    {
      j += 1;
      break;
      label440:
      if ("sessionID".equals(((Node)localObject2).getNodeName())) {
        paramMap.put("sessionid", ((Node)localObject2).getFirstChild().getNodeValue());
      } else if ("defaultDataUrl".equals(((Node)localObject2).getNodeName())) {
        paramMap.put("defaultDataUrl", ((Node)localObject2).getFirstChild().getNodeValue());
      } else if ("channelDataUrl".equals(((Node)localObject2).getNodeName())) {
        paramMap.put("channelDataUrl", ((Node)localObject2).getFirstChild().getNodeValue());
      } else if ("defaultDataTime".equals(((Node)localObject2).getNodeName())) {
        paramMap.put("defaultDataTime", ((Node)localObject2).getFirstChild().getNodeValue());
      } else if ("channelDataTime".equals(((Node)localObject2).getNodeName())) {
        paramMap.put("channelDataTime", ((Node)localObject2).getFirstChild().getNodeValue());
      } else if ("qryMsgUrl".equals(((Node)localObject2).getNodeName())) {
        paramMap.put("qryMsgUrl", ((Node)localObject2).getFirstChild().getNodeValue());
      } else if ("imagesPackingUrl".equals(((Node)localObject2).getNodeName())) {
        paramMap.put("imagesPackingUrl", ((Node)localObject2).getFirstChild().getNodeValue());
      } else if ("phoneNum".equals(((Node)localObject2).getNodeName())) {
        paramMap.put("phoneNum", ((Node)localObject2).getFirstChild().getNodeValue());
      } else if ("loginImg".equals(((Node)localObject2).getNodeName())) {
        paramMap.put("loginImg", ((Node)localObject2).getFirstChild().getNodeValue());
      } else if ("defaultAudioImg".equals(((Node)localObject2).getNodeName())) {
        paramMap.put("defaultAudioImg", ((Node)localObject2).getFirstChild().getNodeValue());
      } else if ("netType".equals(((Node)localObject2).getNodeName())) {
        paramMap.put("nettype", ((Node)localObject2).getFirstChild().getNodeValue());
      } else {
        "component".equals(((Node)localObject2).getNodeName());
      }
    }
  }
  
  /* Error */
  public static void a(byte[] paramArrayOfByte, h paramH, java.util.HashMap<String, Object> paramHashMap)
  {
    // Byte code:
    //   0: aload_0
    //   1: ifnull +12 -> 13
    //   4: aload_0
    //   5: arraylength
    //   6: ifeq +7 -> 13
    //   9: aload_2
    //   10: ifnonnull +4 -> 14
    //   13: return
    //   14: invokestatic 125	javax/xml/parsers/DocumentBuilderFactory:newInstance	()Ljavax/xml/parsers/DocumentBuilderFactory;
    //   17: invokevirtual 129	javax/xml/parsers/DocumentBuilderFactory:newDocumentBuilder	()Ljavax/xml/parsers/DocumentBuilder;
    //   20: astore 5
    //   22: new 131	java/io/ByteArrayInputStream
    //   25: dup
    //   26: aload_0
    //   27: invokespecial 135	java/io/ByteArrayInputStream:<init>	([B)V
    //   30: astore 4
    //   32: aload 4
    //   34: astore_0
    //   35: aload 5
    //   37: aload 4
    //   39: invokevirtual 141	javax/xml/parsers/DocumentBuilder:parse	(Ljava/io/InputStream;)Lorg/w3c/dom/Document;
    //   42: invokeinterface 147 1 0
    //   47: astore 5
    //   49: aload 4
    //   51: astore_0
    //   52: invokestatic 150	com/eden/sdk/manager/g:a	()[I
    //   55: aload_1
    //   56: invokevirtual 155	com/eden/sdk/manager/h:ordinal	()I
    //   59: iaload
    //   60: istore_3
    //   61: iload_3
    //   62: tableswitch	default:+22->84, 2:+30->92, 3:+63->125
    //   84: aload 4
    //   86: invokevirtual 159	java/io/ByteArrayInputStream:close	()V
    //   89: return
    //   90: astore_0
    //   91: return
    //   92: aload 4
    //   94: astore_0
    //   95: aload 5
    //   97: aload_2
    //   98: invokestatic 161	com/eden/sdk/manager/g:a	(Lorg/w3c/dom/Element;Ljava/util/Map;)V
    //   101: goto -17 -> 84
    //   104: astore_2
    //   105: aload 4
    //   107: astore_1
    //   108: aload_1
    //   109: astore_0
    //   110: aload_2
    //   111: invokevirtual 164	java/lang/Exception:printStackTrace	()V
    //   114: aload_1
    //   115: ifnull -102 -> 13
    //   118: aload_1
    //   119: invokevirtual 159	java/io/ByteArrayInputStream:close	()V
    //   122: return
    //   123: astore_0
    //   124: return
    //   125: aload 4
    //   127: astore_0
    //   128: aload 5
    //   130: aload_2
    //   131: invokestatic 167	com/eden/sdk/manager/g:b	(Lorg/w3c/dom/Element;Ljava/util/Map;)V
    //   134: goto -50 -> 84
    //   137: astore_2
    //   138: aload_0
    //   139: astore_1
    //   140: aload_2
    //   141: astore_0
    //   142: aload_1
    //   143: ifnull +7 -> 150
    //   146: aload_1
    //   147: invokevirtual 159	java/io/ByteArrayInputStream:close	()V
    //   150: aload_0
    //   151: athrow
    //   152: astore_0
    //   153: return
    //   154: astore_0
    //   155: aconst_null
    //   156: astore_1
    //   157: goto -15 -> 142
    //   160: astore_2
    //   161: aconst_null
    //   162: astore_1
    //   163: goto -55 -> 108
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	166	0	paramArrayOfByte	byte[]
    //   0	166	1	paramH	h
    //   0	166	2	paramHashMap	java.util.HashMap<String, Object>
    //   60	2	3	i	int
    //   30	96	4	localByteArrayInputStream	java.io.ByteArrayInputStream
    //   20	109	5	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   84	89	90	java/io/IOException
    //   35	49	104	java/lang/Exception
    //   52	61	104	java/lang/Exception
    //   95	101	104	java/lang/Exception
    //   128	134	104	java/lang/Exception
    //   118	122	123	java/io/IOException
    //   35	49	137	finally
    //   52	61	137	finally
    //   95	101	137	finally
    //   110	114	137	finally
    //   128	134	137	finally
    //   146	150	152	java/io/IOException
    //   14	32	154	finally
    //   14	32	160	java/lang/Exception
  }
  
  private static void b(Element paramElement, Map<String, Object> paramMap)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject1 = paramElement.getElementsByTagName("node");
    int i;
    if ((localObject1 != null) && (((NodeList)localObject1).getLength() > 0)) {
      i = 0;
    }
    Object localObject2;
    for (;;)
    {
      if (i >= ((NodeList)localObject1).getLength()) {}
      for (;;)
      {
        paramElement = paramElement.getElementsByTagName("dataset");
        if ((paramElement != null) && (paramElement.getLength() > 0))
        {
          i = 0;
          if (i < paramElement.getLength()) {
            break label292;
          }
        }
        if (localArrayList.size() > 0) {
          paramMap.put("orderList", localArrayList);
        }
        return;
        localObject2 = ((NodeList)localObject1).item(i);
        if ((localObject2 == null) || (((Node)localObject2).getNodeType() != 1) || (!((Node)localObject2).hasAttributes()) || (((Node)localObject2).getAttributes() == null) || (((Node)localObject2).getAttributes().getNamedItem("name") == null) || (((Node)localObject2).getAttributes().getNamedItem("name").getNodeValue() == null) || (!((Node)localObject2).getAttributes().getNamedItem("name").getNodeValue().equals("tt")) || (((Node)localObject2).getAttributes().getNamedItem("data") == null) || (((Node)localObject2).getAttributes().getNamedItem("data").getNodeValue() == null)) {
          break;
        }
        paramMap.put("", ((Node)localObject2).getAttributes().getNamedItem("data").getNodeValue());
      }
      i += 1;
    }
    label292:
    localObject1 = paramElement.item(i);
    int j;
    if ((localObject1 != null) && (((Node)localObject1).getNodeType() == 1) && (((Node)localObject1).hasChildNodes()))
    {
      localObject1 = ((Node)localObject1).getChildNodes();
      if ((localObject1 != null) && (((NodeList)localObject1).getLength() > 0)) {
        j = 0;
      }
    }
    Object localObject3;
    int k;
    for (;;)
    {
      if (j >= ((NodeList)localObject1).getLength())
      {
        i += 1;
        break;
      }
      localObject3 = ((NodeList)localObject1).item(j);
      if ((localObject3 != null) && (((Node)localObject3).getNodeType() == 1) && (((Node)localObject3).hasAttributes()) && ("set".equals(((Node)localObject3).getNodeName())) && (((Node)localObject3).getAttributes().getNamedItem("ys") != null) && (((Node)localObject3).getAttributes().getNamedItem("ys").getNodeValue() != null))
      {
        localObject2 = new Money();
        localObject3 = ((Node)localObject3).getAttributes();
        if ((localObject3 != null) && (((NamedNodeMap)localObject3).getLength() > 0))
        {
          k = 0;
          if (k < ((NamedNodeMap)localObject3).getLength()) {
            break label526;
          }
        }
        localArrayList.add(localObject2);
      }
      j += 1;
    }
    label526:
    Node localNode = ((NamedNodeMap)localObject3).item(k);
    if ((localNode != null) && (localNode.getNodeType() == 2) && (localNode.getNodeValue() != null))
    {
      if (!"ys".equals(localNode.getNodeName())) {
        break label599;
      }
      ((Money)localObject2).ys = localNode.getNodeValue();
    }
    for (;;)
    {
      k += 1;
      break;
      label599:
      if ("typeName".equals(localNode.getNodeName())) {
        ((Money)localObject2).feeType = localNode.getNodeValue();
      } else if ("contparam".equals(localNode.getNodeName())) {
        ((Money)localObject2).paramUrl = localNode.getNodeValue();
      } else if ("title".equals(localNode.getNodeName())) {
        ((Money)localObject2).price = localNode.getNodeValue();
      } else if ("desc".equals(localNode.getNodeName())) {
        ((Money)localObject2).desc = localNode.getNodeValue();
      }
    }
  }
}
