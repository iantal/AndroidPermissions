package com.mm.d.a;

import android.text.TextUtils;
import com.mm.b.a.d;
import com.mm.b.a.e;
import com.mm.b.a.l;
import com.mm.c.a.b;
import java.io.IOException;
import java.io.StringReader;
import java.util.Map;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlPullParserFactory;

public final class k
  extends d
{
  private b m;
  private e n;
  
  public k() {}
  
  private void a(XmlPullParser paramXmlPullParser)
  {
    this.m = new b();
    for (;;)
    {
      String str;
      try
      {
        paramXmlPullParser.require(2, null, "root");
        if (paramXmlPullParser.nextTag() == 3)
        {
          paramXmlPullParser.require(3, null, "root");
          return;
        }
        str = paramXmlPullParser.getName();
        if (str.equals("siteid"))
        {
          this.m.a(paramXmlPullParser.nextText());
          continue;
        }
      }
      catch (XmlPullParserException paramXmlPullParser)
      {
        paramXmlPullParser.printStackTrace();
        return;
        if (str.equals("feetype"))
        {
          this.m.b(paramXmlPullParser.nextText());
          continue;
        }
      }
      catch (IOException paramXmlPullParser)
      {
        paramXmlPullParser.printStackTrace();
        return;
      }
      if (str.equals("feevalue")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("feenotice")) {
        this.m.c(paramXmlPullParser.nextText());
      } else if (str.equals("feechanid")) {
        this.m.d(paramXmlPullParser.nextText());
      } else if (str.equals("feechanname")) {
        this.m.o(paramXmlPullParser.nextText());
      } else if (str.equals("feeurl")) {
        this.m.e(paramXmlPullParser.nextText());
      } else if (str.equals("playurl")) {
        this.m.f(paramXmlPullParser.nextText());
      } else if (str.equals("webshowurl")) {
        this.m.g(paramXmlPullParser.nextText());
      } else if (str.equals("smskey")) {
        this.m.h(paramXmlPullParser.nextText());
      } else if (str.equals("smsdel")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("smscenter")) {
        this.m.i(paramXmlPullParser.nextText());
      } else if (str.equals("IntervalTime")) {
        this.m.j(paramXmlPullParser.nextText());
      } else if (str.equals("userip")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("REMOTE_ADDR")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("UID")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("mobile")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("version")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("PNO")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("OperatorLine")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("MessageMsg")) {
        this.m.k(paramXmlPullParser.nextText());
      } else if (str.equals("MessageNumber")) {
        this.m.l(paramXmlPullParser.nextText());
      } else if (str.equals("MessageNeedRe")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("MessageReContent")) {
        this.m.m(paramXmlPullParser.nextText());
      } else if (str.equals("Judger")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("smskeysuc")) {
        this.m.n(paramXmlPullParser.nextText());
      } else if (str.equals("WapBusiness")) {
        this.m.p(paramXmlPullParser.nextText());
      } else {
        paramXmlPullParser.nextText();
      }
    }
  }
  
  public final void a(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {}
    while (paramString.contains("您访问的内容不存在")) {
      return;
    }
    paramString = new StringReader(paramString);
    try
    {
      XmlPullParser localXmlPullParser = XmlPullParserFactory.newInstance().newPullParser();
      localXmlPullParser.setInput(paramString);
      localXmlPullParser.next();
      a(localXmlPullParser);
      localXmlPullParser.next();
      localXmlPullParser.require(1, null, null);
      return;
    }
    catch (XmlPullParserException paramString)
    {
      paramString.printStackTrace();
      return;
    }
    catch (IOException paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  public final void a(String paramString, Map paramMap, e paramE, boolean paramBoolean)
  {
    this.n = paramE;
    a(paramString, l, paramMap, paramBoolean, l.a);
  }
  
  public final void a(boolean paramBoolean, String paramString)
  {
    this.n.response(this.m, paramBoolean);
  }
}
