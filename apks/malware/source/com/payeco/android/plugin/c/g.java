package com.payeco.android.plugin.c;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Environment;
import android.telephony.TelephonyManager;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.util.Enumeration;

public final class g
{
  public g() {}
  
  public static String a(Context paramContext)
  {
    int i = 1;
    WifiManager localWifiManager = (WifiManager)paramContext.getSystemService("wifi");
    paramContext = a(localWifiManager);
    if (paramContext != null) {
      return paramContext;
    }
    int j;
    if ((localWifiManager.getWifiState() != 3) && (localWifiManager.getWifiState() != 2))
    {
      localWifiManager.setWifiEnabled(true);
      j = 0;
    }
    for (;;)
    {
      if (j >= 10)
      {
        label58:
        if (i != 0) {
          localWifiManager.setWifiEnabled(false);
        }
        return paramContext;
        i = 0;
        break;
      }
      if (j != 0) {}
      try
      {
        Thread.sleep(100L);
        String str = a(localWifiManager);
        paramContext = str;
        if (str != null) {
          break label58;
        }
        str = d();
        paramContext = str;
        if (str != null) {
          break label58;
        }
        str = c();
        paramContext = str;
        if (str != null) {
          break label58;
        }
        j += 1;
        paramContext = str;
      }
      catch (InterruptedException paramContext)
      {
        for (;;)
        {
          paramContext.printStackTrace();
        }
      }
    }
  }
  
  private static String a(WifiManager paramWifiManager)
  {
    paramWifiManager = paramWifiManager.getConnectionInfo();
    if ((paramWifiManager == null) || (paramWifiManager.getMacAddress() == null)) {
      return null;
    }
    return paramWifiManager.getMacAddress().trim();
  }
  
  public static boolean a()
  {
    return (new File("/system/bin/su").exists()) || (new File("/system/xbin/su").exists());
  }
  
  public static boolean b()
  {
    return Environment.getExternalStorageState().equals("mounted");
  }
  
  public static boolean b(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getPackageInfo(paramContext.getPackageName(), 4096).requestedPermissions;
      if (paramContext != null)
      {
        if (paramContext.length <= 0) {
          return false;
        }
        int j = paramContext.length;
        int i = 0;
        while (i < j)
        {
          boolean bool = "android.permission.RECEIVE_SMS".equals(paramContext[i]);
          if (bool) {
            return true;
          }
          i += 1;
        }
      }
      return false;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  private static String c()
  {
    try
    {
      String str = new LineNumberReader(new InputStreamReader(Runtime.getRuntime().exec("cat /sys/class/net/wlan0/address").getInputStream())).readLine();
      if (str != null)
      {
        str = str.trim().toUpperCase();
        return str;
      }
    }
    catch (IOException localIOException)
    {
      localIOException.printStackTrace();
    }
    return null;
  }
  
  public static boolean c(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getPackageInfo(paramContext.getPackageName(), 4096).requestedPermissions;
      if (paramContext != null)
      {
        if (paramContext.length <= 0) {
          return false;
        }
        int j = paramContext.length;
        int i = 0;
        while (i < j)
        {
          boolean bool = "android.permission.READ_SMS".equals(paramContext[i]);
          if (bool) {
            return true;
          }
          i += 1;
        }
      }
      return false;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  @SuppressLint({"NewApi"})
  private static String d()
  {
    for (;;)
    {
      int i;
      try
      {
        Object localObject1 = NetworkInterface.getNetworkInterfaces();
        Object localObject2;
        if (!((Enumeration)localObject1).hasMoreElements())
        {
          localObject1 = null;
          localObject2 = NetworkInterface.getByInetAddress(InetAddress.getByName((String)localObject1)).getHardwareAddress();
          localObject1 = new StringBuffer(localObject2.length);
          int j = localObject2.length;
          i = 0;
          if (i >= j) {
            return String.valueOf(localObject1).trim().toUpperCase();
          }
        }
        else
        {
          localObject2 = ((NetworkInterface)((Enumeration)localObject1).nextElement()).getInetAddresses();
          if (!((Enumeration)localObject2).hasMoreElements()) {
            continue;
          }
          localObject3 = (InetAddress)((Enumeration)localObject2).nextElement();
          if (((InetAddress)localObject3).isLoopbackAddress()) {
            continue;
          }
          localObject1 = ((InetAddress)localObject3).getHostAddress();
          continue;
        }
        Object localObject3 = Integer.toHexString(localObject2[i] & 0xFF);
        if (((String)localObject3).length() == 1) {
          localObject1 = ((StringBuffer)localObject1).append("0").append((String)localObject3);
        } else {
          localObject1 = ((StringBuffer)localObject1).append((String)localObject3);
        }
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
        return null;
      }
      i += 1;
    }
  }
  
  public static String d(Context paramContext)
  {
    return ((TelephonyManager)paramContext.getSystemService("phone")).getDeviceId();
  }
  
  public static String e(Context paramContext)
  {
    return ((TelephonyManager)paramContext.getSystemService("phone")).getSubscriberId();
  }
}
