package com.payeco.android.plugin.b;

import android.app.Activity;
import android.content.Context;
import android.util.Log;
import com.payeco.android.plugin.a.e;
import com.payeco.android.plugin.c.b;
import com.payeco.android.plugin.c.c;
import com.payeco.android.plugin.c.d;
import java.io.File;
import java.util.Date;
import java.util.Random;
import org.json.JSONException;
import org.json.JSONObject;

public final class h
{
  private static String a;
  private static String b;
  private static String c;
  private static int d;
  private static int e;
  
  public h() {}
  
  public static int a()
  {
    return d;
  }
  
  public static String a(String paramString)
  {
    try
    {
      paramString = g.c().getString(paramString);
      return paramString;
    }
    catch (Exception paramString) {}
    return null;
  }
  
  public static void a(Activity paramActivity)
  {
    try
    {
      if (b.a(a.b))
      {
        b.c(a.b);
        Log.d("payeco", "成功删除:" + a.b);
      }
      try
      {
        if (b.a(a.c))
        {
          b.c(a.c);
          Log.d("payeco", "成功删除:" + a.c);
        }
        try
        {
          if (b.a(a.d))
          {
            b.c(a.d);
            Log.d("payeco", "成功删除:" + a.d);
          }
          try
          {
            if (b.a(a.a))
            {
              b.c(a.a);
              Log.d("payeco", "成功删除:" + a.a);
            }
            paramActivity.finish();
            return;
          }
          catch (Exception localException1)
          {
            for (;;) {}
          }
        }
        catch (Exception localException2)
        {
          for (;;) {}
        }
      }
      catch (Exception localException3)
      {
        for (;;) {}
      }
    }
    catch (Exception localException4)
    {
      for (;;) {}
    }
  }
  
  public static void a(Context paramContext)
  {
    if (("02".equals(a)) || ("00".equals(a)))
    {
      d = 0;
      return;
    }
    String str = d.b(paramContext, d(), "domainIndex");
    paramContext = d.b(paramContext, d(), "lastSaveDomainTime");
    long l;
    int j;
    int i;
    if (str != null)
    {
      l = Long.parseLong(paramContext);
      j = 1440;
      paramContext = g.c();
      i = j;
      if (paramContext != null)
      {
        i = j;
        if (!paramContext.has("DnsSwitchTime")) {}
      }
    }
    try
    {
      i = paramContext.getInt("DnsSwitchTime");
      if (new Date().getTime() - l <= i * 60 * 1000) {}
      for (d = Integer.parseInt(str);; d = 0)
      {
        e = 0;
        return;
      }
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        i = j;
      }
    }
  }
  
  public static void a(String paramString1, String paramString2, String paramString3)
  {
    a = paramString1;
    b = paramString2;
    c = paramString3;
    d = 0;
    e = 0;
  }
  
  public static void a(JSONObject paramJSONObject)
  {
    JSONObject localJSONObject = g.c();
    String str = g.f();
    if (paramJSONObject.has("GetLBS")) {
      localJSONObject.put("GetLBS", paramJSONObject.getString("GetLBS"));
    }
    if (paramJSONObject.has("LbsTime")) {
      localJSONObject.put("LbsTime", paramJSONObject.getString("LbsTime"));
    }
    if (paramJSONObject.has("PhotoSize")) {
      localJSONObject.put("PhotoSize", paramJSONObject.getString("PhotoSize"));
    }
    if (paramJSONObject.has("SoundTime")) {
      localJSONObject.put("SoundTime", paramJSONObject.getString("SoundTime"));
    }
    if (paramJSONObject.has("SmsNumber")) {
      localJSONObject.put("SmsNumber", paramJSONObject.getString("SmsNumber"));
    }
    if (paramJSONObject.has("SmsPattern")) {
      localJSONObject.put("SmsPattern", paramJSONObject.getString("SmsPattern"));
    }
    if (paramJSONObject.has("IsFetchSms")) {
      localJSONObject.put("IsFetchSms", paramJSONObject.getString("IsFetchSms"));
    }
    if (paramJSONObject.has("ClientTradeOutTime")) {
      localJSONObject.put("ClientTradeOutTime", paramJSONObject.getString("ClientTradeOutTime"));
    }
    if (paramJSONObject.has("ClientPayOutTime")) {
      localJSONObject.put("ClientPayOutTime", paramJSONObject.getString("ClientPayOutTime"));
    }
    if (paramJSONObject.has("DnsSwitchTime")) {
      localJSONObject.put("DnsSwitchTime", paramJSONObject.getString("DnsSwitchTime"));
    }
    b.a(str, localJSONObject.toString().getBytes("utf-8"));
  }
  
  public static void a(JSONObject paramJSONObject, Context paramContext)
  {
    JSONObject localJSONObject = g.d();
    String str1 = g.e();
    String str2 = g.g();
    if (paramJSONObject.has("CommPKeyIndex")) {
      localJSONObject.put("CommPKeyIndex", paramJSONObject.getString("CommPKeyIndex"));
    }
    if (paramJSONObject.has("CommPKey")) {
      localJSONObject.put("CommPKey", paramJSONObject.getString("CommPKey"));
    }
    if (paramJSONObject.has("PinPKeyIndex")) {
      localJSONObject.put("PinPKeyIndex", paramJSONObject.getString("PinPKeyIndex"));
    }
    if (paramJSONObject.has("PinPKey")) {
      localJSONObject.put("PinPKey", paramJSONObject.getString("PinPKey"));
    }
    paramJSONObject = d(paramContext);
    paramContext = localJSONObject.toString().getBytes("utf-8");
    paramJSONObject = com.payeco.android.plugin.a.g.a(paramJSONObject, paramContext);
    b.a(str2, e.a(paramContext));
    b.a(str1, paramJSONObject);
  }
  
  private static byte[] a(String paramString1, String paramString2, byte[] paramArrayOfByte)
  {
    byte[] arrayOfByte = "{\"PinPKey\":\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDJ1fKGMV\\/yOUnY1ysFCk0yPP4bfOolC\\/nTAyHmoser+1yzeLtyYsfitYonFIsXBKoAYwSAhNE+ZSdXZs4A5zt4EKoU+T3IoByCoKgvpCuOx8rgIAqC3O\\/95pGb9n6rKHR2sz5EPT0aBUUDAB2FJYjA9Sy+kURxa52EOtRKolSmEwIDAQAB\",\"PinPKeyIndex\":\"1\",\"CommPKey\":\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDS4TageE+BMTBTsq\\/fayJZBY6p9jMe3TLBhGJag2dP+vVOJxWwT2guucBMvM+z29d1CIc3LKVbxcO9wF3UBgLbw5F4LpNUeG+KmHyeH\\/qwVWIu13dCsrvqOzUvsJlA9zVA9YVvvCaCfTIHfd\\/bU5KDQeIJpnwYvm5LNCZOFEITFwIDAQAB\",\"CommPKeyIndex\":\"1\"}".getBytes("utf-8");
    paramArrayOfByte = com.payeco.android.plugin.a.g.a(paramArrayOfByte, arrayOfByte);
    b.a(paramString2, e.a(arrayOfByte));
    b.a(paramString1, paramArrayOfByte);
    return arrayOfByte;
  }
  
  public static String b()
  {
    String str;
    if ("01".equals(a)) {
      str = "https://" + e();
    }
    for (;;)
    {
      return str + "/ppi/plugin/itf.do";
      if ("02".equals(a)) {
        str = "http://" + e();
      } else {
        str = "https://" + e();
      }
    }
  }
  
  public static String b(String paramString)
  {
    try
    {
      paramString = g.d().getString(paramString);
      return paramString;
    }
    catch (JSONException paramString)
    {
      paramString.printStackTrace();
    }
    return null;
  }
  
  public static void b(Context paramContext)
  {
    Object localObject = g.e();
    String str = g.g();
    byte[] arrayOfByte1 = d(paramContext);
    if ((!b.a((String)localObject)) || (!b.a(str))) {
      paramContext = a((String)localObject, str, arrayOfByte1);
    }
    for (;;)
    {
      paramContext = new JSONObject(new String(paramContext, "utf-8"));
      localObject = f();
      g.b(paramContext);
      g.a((byte[])localObject);
      return;
      paramContext = com.payeco.android.plugin.a.g.b(arrayOfByte1, b.b((String)localObject));
      if (paramContext != null)
      {
        byte[] arrayOfByte2 = b.b(str);
        byte[] arrayOfByte3 = e.a(paramContext);
        if ((arrayOfByte2 != null) && (arrayOfByte3 != null) && (arrayOfByte2.length == arrayOfByte3.length))
        {
          int i = 0;
          while (i < arrayOfByte3.length)
          {
            if (arrayOfByte2[i] != arrayOfByte3[i]) {
              break label142;
            }
            i += 1;
          }
          continue;
        }
      }
      label142:
      paramContext = a((String)localObject, str, arrayOfByte1);
    }
  }
  
  public static String c(String paramString)
  {
    try
    {
      paramString = c.a(com.payeco.android.plugin.a.g.a(g.h(), paramString.getBytes("utf-8")));
      return paramString;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
    return null;
  }
  
  public static void c(Context paramContext)
  {
    if (!"01".equals(a)) {
      return;
    }
    d.a(paramContext, d(), "domainIndex", d);
    d.a(paramContext, d(), "lastSaveDomainTime", new Date().getTime());
  }
  
  public static boolean c()
  {
    if (!"01".equals(a)) {}
    do
    {
      return false;
      i = e + 1;
      e = i;
    } while (i >= a.e.length);
    int i = d + 1;
    d = i;
    if (i >= a.e.length) {
      d = 0;
    }
    return true;
  }
  
  public static String d()
  {
    if ("01".equals(a)) {
      return "payecoPreferencesPro";
    }
    if ("02".equals(a)) {
      return "payecoPreferencesDev";
    }
    return "payecoPreferencesTest";
  }
  
  public static final String d(String paramString)
  {
    Object localObject;
    if (a.equals("01")) {
      localObject = "payecoPluginPro";
    }
    for (;;)
    {
      paramString = paramString + File.separator + (String)localObject;
      localObject = new File(paramString);
      if (!((File)localObject).exists()) {
        ((File)localObject).mkdirs();
      }
      return paramString;
      if (a.equals("02")) {
        localObject = "payecoPluginDev";
      } else {
        localObject = "payecoPluginTest";
      }
    }
  }
  
  private static byte[] d(Context paramContext)
  {
    Object localObject = d.b(paramContext, d(), "DataKey");
    if (localObject == null)
    {
      localObject = f();
      String str = c.a((byte[])localObject);
      d.a(paramContext, d(), "DataKey", str);
      return localObject;
    }
    return c.a((String)localObject);
  }
  
  private static String e()
  {
    if ("01".equals(a)) {
      return a.e[d];
    }
    if ("02".equals(a))
    {
      StringBuilder localStringBuilder = new StringBuilder(String.valueOf(b));
      if ("80".equals(c)) {}
      for (String str = "";; str = ":" + c) {
        return str;
      }
    }
    return "testmobile.payeco.com";
  }
  
  private static byte[] f()
  {
    byte[] arrayOfByte = new byte[24];
    Random localRandom = new Random();
    int i = 0;
    for (;;)
    {
      if (i >= 24) {
        return arrayOfByte;
      }
      arrayOfByte[i] = ((byte)localRandom.nextInt(256));
      i += 1;
    }
  }
}
