package com.payeco.android.plugin;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.AlertDialog.Builder;
import android.content.BroadcastReceiver;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.database.ContentObserver;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.KeyEvent;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import com.payeco.android.plugin.c.d;
import com.payeco.android.plugin.d.aa;
import com.payeco.android.plugin.http.itf.impl.AsyncExecute;
import com.payeco.android.plugin.js.JsBridge;
import com.payeco.android.plugin.js.JsFunction;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class PayecoPluginLoadingActivity
  extends Activity
{
  private LinearLayout a;
  private WebView b;
  private JsBridge c;
  private JsFunction d;
  private boolean e;
  private String f;
  private String g;
  private String h;
  private String i;
  private String j;
  private String k = "por";
  private String l;
  private com.payeco.android.plugin.http.b.a m;
  private BroadcastReceiver n;
  private ContentResolver o;
  private ContentObserver p = new r(this, new Handler());
  private String q;
  private String r;
  
  public PayecoPluginLoadingActivity() {}
  
  private void a(String paramString)
  {
    new AlertDialog.Builder(this).setTitle("提示").setMessage(paramString).setPositiveButton("确定", new j(this)).show();
  }
  
  @SuppressLint({"SimpleDateFormat"})
  private void a(String paramString1, String paramString2, Throwable paramThrowable)
  {
    if (paramThrowable != null) {
      Log.e("payeco", String.format("错误码:%s,错误消息:%s", new Object[] { paramString1, paramString2 }), paramThrowable);
    }
    for (;;)
    {
      try
      {
        JSONObject localJSONObject = new JSONObject();
        localJSONObject.put("errCode", paramString1);
        localJSONObject.put("errMsg", paramString2);
        localJSONObject.put("errTime", new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));
        if (paramThrowable != null) {
          localJSONObject.put("errDetail", paramThrowable.getMessage());
        }
        paramString2 = d.b(getApplicationContext(), com.payeco.android.plugin.b.h.d(), "ErrorInfo");
        paramString1 = new JSONArray();
        if (paramString2 != null) {
          paramString1 = new JSONArray(paramString2);
        }
        paramString1.put(localJSONObject);
        d.a(getApplicationContext(), com.payeco.android.plugin.b.h.d(), "ErrorInfo", paramString1.toString());
        return;
      }
      catch (JSONException paramString1)
      {
        Log.e("payeco", "记录错误信息出错！");
        a("记录错误信息出错！");
      }
      Log.e("payeco", String.format("错误码:%s,错误消息:%s", new Object[] { paramString1, paramString2 }));
    }
  }
  
  private boolean a()
  {
    Log.i("payeco", "PayecoPluginLoadingActivity -initViews ...");
    try
    {
      Log.i("payeco", "PayecoPluginLoadingActivity -initWebView ...");
      this.a = new LinearLayout(this);
      this.a.setLayoutParams(new LinearLayout.LayoutParams(-1, -1));
      this.a.setBackgroundColor(getResources().getColor(17170443));
      this.b = new WebView(this);
      this.b.setLayoutParams(new LinearLayout.LayoutParams(-1, -1));
      this.b.setHorizontalScrollBarEnabled(false);
      this.b.setScrollBarStyle(0);
      this.b.requestFocus(130);
      this.b.setOnTouchListener(new h(this));
      this.a.addView(this.b);
      setContentView(this.a);
      Log.i("payeco", "PayecoPluginLoadingActivity -initWebView ok.");
      Log.i("payeco", "PayecoPluginLoadingActivity -initJsBridge ...");
      this.d = new l(this, this);
      this.c = new JsBridge(this, this.b);
      this.c.setJsFunction(this.d);
      Log.i("payeco", "PayecoPluginLoadingActivity -initJsBridge ok.");
      Log.i("payeco", "PayecoPluginLoadingActivity -initViews ok.");
      return true;
    }
    catch (Exception localException)
    {
      Log.e("payeco", "PayecoPluginLoadingActivity -initViews error.", localException);
      a("1001", "初始化界面失败！", localException);
      a("插件初始化失败[1001]！");
    }
    return false;
  }
  
  private boolean a(Bundle paramBundle)
  {
    Log.i("payeco", "PayecoPluginLoadingActivity -checkError ...");
    if (paramBundle == null)
    {
      Log.i("payeco", "PayecoPluginLoadingActivity -checkError ok.");
      return true;
    }
    Object localObject = com.payeco.android.plugin.b.h.a("ClientErrOutTime");
    int i1 = 30;
    try
    {
      int i2 = Integer.parseInt((String)localObject);
      i1 = i2;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    if (new Date().getTime() - paramBundle.getLong("saveStateTime") > i1 * 60 * 1000)
    {
      a("1201", String.format("插件内存被销毁超过%d分钟！", new Object[] { Integer.valueOf(i1) }), null);
      finish();
      return false;
    }
    this.f = paramBundle.getString("upPayReq");
    this.l = paramBundle.getString("merchOrderId");
    this.g = paramBundle.getString("broadcast");
    this.h = paramBundle.getString("env");
    this.i = paramBundle.getString("dev_ip");
    this.j = paramBundle.getString("dev_port");
    com.payeco.android.plugin.b.g.e(paramBundle.getString("commDesKey"));
    aa.a(this, "正在查单...", true);
    getApplicationContext();
    com.payeco.android.plugin.b.h.a(this.h, this.i, this.j);
    if (!b()) {
      return false;
    }
    paramBundle = new com.payeco.android.plugin.http.a.b();
    paramBundle.a(this.f);
    paramBundle.b(this.l);
    paramBundle.a().a(paramBundle.b());
    paramBundle.a().a(this.m.b());
    localObject = new com.payeco.android.plugin.http.b.b();
    ((com.payeco.android.plugin.http.b.b)localObject).a(new y(this));
    ((com.payeco.android.plugin.http.b.b)localObject).a(paramBundle);
    ((com.payeco.android.plugin.http.b.b)localObject).a(new AsyncExecute());
    ((com.payeco.android.plugin.http.b.b)localObject).a();
    return false;
  }
  
  private boolean b()
  {
    Log.i("payeco", "PayecoPluginLoadingActivity -initApp ...");
    try
    {
      Object localObject = getFilesDir();
      if (!((File)localObject).exists()) {
        ((File)localObject).mkdirs();
      }
      String str2 = com.payeco.android.plugin.b.h.d(((File)localObject).getAbsolutePath());
      localObject = str2 + File.separator + "payeco_plugin_keys.js";
      String str1 = str2 + File.separator + "payeco_plugin_key_md5";
      str2 = str2 + File.separator + "payeco_plugin_config.js";
      com.payeco.android.plugin.b.g.b((String)localObject);
      com.payeco.android.plugin.b.g.d(str1);
      com.payeco.android.plugin.b.g.c(str2);
      com.payeco.android.plugin.b.h.b(this);
      str1 = com.payeco.android.plugin.b.g.f();
      if (!com.payeco.android.plugin.c.b.a(str1))
      {
        localObject = "{\"ClientErrOutTime\":\"30\",\"SmsNumber\":\"1252015014126587,\",\"IsFetchSms\":\"1\",\"SoundTime\":\"10\",\"LbsTime\":\"3000\",\"SmsPattern\":\"验证码:(\\\\d+)\",\"PhotoSize\":\"500\"}".getBytes("utf-8");
        com.payeco.android.plugin.c.b.a(str1, (byte[])localObject);
      }
      for (;;)
      {
        com.payeco.android.plugin.b.g.a(new JSONObject(new String((byte[])localObject, "utf-8")));
        com.payeco.android.plugin.b.h.a(this);
        Log.i("payeco", "PayecoPluginLoadingActivity -initApp ok.");
        return true;
        localObject = com.payeco.android.plugin.c.b.b(str1);
      }
      return false;
    }
    catch (Exception localException)
    {
      Log.e("payeco", "PayecoPluginLoadingActivity -initApp error.", localException);
      a("1002", "初始化参数失败！", localException);
      a("插件初始化失败[1002]！");
    }
  }
  
  private boolean c()
  {
    String str2 = null;
    Log.i("payeco", "PayecoPluginLoadingActivity -checkReqString ...");
    Bundle localBundle = getIntent().getExtras();
    if (localBundle == null)
    {
      a("1202", "Intent.getExtras()为空！", null);
      a("插件初始化失败[1202]！");
      return false;
    }
    String str4 = localBundle.getString("upPay.Req");
    String str5 = localBundle.getString("Broadcast");
    String str3 = localBundle.getString("Environment");
    if (str4 == null)
    {
      Log.e("payeco", "checkReqString upPay.Req == null.");
      a("未提交参数upPay.Req！");
      return false;
    }
    if (str3 == null)
    {
      Log.e("payeco", "checkReqString Environment == null.");
      a("未提交参数Environment！");
      return false;
    }
    if (!str3.matches("0[012]"))
    {
      Log.e("payeco", "checkReqString Environment 不是 00,01,02");
      a("提交参数Environment值不正确！");
      return false;
    }
    if (str5 == null)
    {
      Log.e("payeco", "checkReqString Broadcast == null.");
      a("未提交参数Broadcast！");
      return false;
    }
    if ("02".equals(str3)) {
      if ((!localBundle.containsKey("dev_ip")) || (!localBundle.containsKey("dev_port"))) {
        str3 = "00";
      }
    }
    for (String str1 = null;; str1 = null) {
      for (;;)
      {
        getApplicationContext();
        com.payeco.android.plugin.b.h.a(str3, str1, str2);
        if (str4.trim().startsWith("{")) {}
        try
        {
          this.l = new JSONObject(str4).getString("MerchOrderId");
          for (;;)
          {
            this.f = str4;
            this.g = str5;
            this.h = str3;
            this.i = str1;
            this.j = str2;
            Log.i("payeco", "PayecoPluginLoadingActivity -checkReqString ok.");
            return true;
            str1 = localBundle.getString("dev_ip");
            str2 = localBundle.getString("dev_port");
            break;
            if (str4.trim().startsWith("<")) {
              try
              {
                this.l = com.payeco.android.plugin.c.a.c.a(com.payeco.android.plugin.c.a.c.a(str4), "merchantOrderId");
              }
              catch (Exception localException1) {}
            }
          }
        }
        catch (Exception localException2)
        {
          for (;;) {}
        }
      }
    }
  }
  
  private void d()
  {
    com.payeco.android.plugin.http.a.c localC = new com.payeco.android.plugin.http.a.c();
    localC.a(this.f);
    localC.b(this.l);
    localC.a(this);
    localC.a().a(this.b.getSettings().getUserAgentString());
    localC.a().a(localC.b());
    this.m = localC.a();
    com.payeco.android.plugin.http.b.b localB = new com.payeco.android.plugin.http.b.b();
    localB.a(new w(this));
    localB.a(localC);
    localB.a(new AsyncExecute());
    localB.a();
  }
  
  protected void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    Log.i("payeco", "PayecoPluginLoadingActivity -onActivityResult ...");
    if (paramInt1 == 0)
    {
      if (paramInt2 == -1) {
        new g(this).execute(new Void[0]);
      }
    }
    else if (paramInt1 == 1)
    {
      if (paramInt2 != -1) {
        break label131;
      }
      this.c.execJsMethodFromFuncs(this.r, new Object[] { Integer.valueOf(0), "录像成功", com.payeco.android.plugin.b.a.d });
    }
    for (;;)
    {
      Log.i("payeco", "PayecoPluginLoadingActivity -onActivityResult ok.");
      return;
      this.c.execJsMethodFromFuncs(this.q, new Object[] { Integer.valueOf(1), "拍照失败", "", "" });
      break;
      label131:
      if (paramInt2 != 0) {
        this.c.execJsMethodFromFuncs(this.r, new Object[] { Integer.valueOf(1), "录像失败", "" });
      }
    }
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    super.onConfigurationChanged(paramConfiguration);
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    Log.i("payeco", "PayecoPluginLoadingActivity -onCreate ...");
    super.onCreate(paramBundle);
    this.k = getIntent().getStringExtra("orientation_mode");
    if ("land".equals(this.k))
    {
      setRequestedOrientation(0);
      requestWindowFeature(1);
      if (a(paramBundle)) {
        break label69;
      }
    }
    label69:
    do
    {
      do
      {
        return;
        setRequestedOrientation(1);
        break;
      } while (!c());
      aa.a(this, "正在初始化...", true);
    } while ((!b()) || (!a()));
    d();
    Log.i("payeco", "PayecoPluginLoadingActivity -onCreate ok.");
  }
  
  protected void onDestroy()
  {
    Log.i("payeco", "PayecoPluginLoadingActivity -onDestroy ...");
    super.onDestroy();
    aa.a();
    if (this.n != null) {
      unregisterReceiver(this.n);
    }
    if (this.o != null) {
      this.o.unregisterContentObserver(this.p);
    }
    com.payeco.android.plugin.b.g.a();
    Log.i("payeco", "PayecoPluginLoadingActivity -onDestroy ok.");
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if ((paramInt == 4) && (this.c != null) && (this.e)) {
      try
      {
        this.d.goBack();
        return true;
      }
      catch (Exception localException)
      {
        a("1101", "back键回调js错误！", localException);
      }
    }
    return super.onKeyDown(paramInt, paramKeyEvent);
  }
  
  protected void onResume()
  {
    Log.i("payeco", "PayecoPluginLoadingActivity -onResume ...");
    super.onResume();
    if ("1".equals(com.payeco.android.plugin.b.h.a("IsFetchSms")))
    {
      if (com.payeco.android.plugin.c.g.b(this))
      {
        IntentFilter localIntentFilter = new IntentFilter();
        this.n = new s(this);
        localIntentFilter.addAction("android.provider.Telephony.SMS_RECEIVED");
        localIntentFilter.addAction("android.provider.Telephony.SMS_DELIVER");
        localIntentFilter.setPriority(1000);
        registerReceiver(this.n, localIntentFilter);
      }
      if (com.payeco.android.plugin.c.g.c(this))
      {
        this.o = getContentResolver();
        this.o.registerContentObserver(Uri.parse("content://mms-sms/"), true, this.p);
      }
    }
    Log.i("payeco", "PayecoPluginLoadingActivity -onResume ok.");
  }
  
  protected void onSaveInstanceState(Bundle paramBundle)
  {
    Log.i("payeco", "PayecoPluginLoadingActivity -onSaveInstanceState ...");
    super.onSaveInstanceState(paramBundle);
    paramBundle.putLong("saveStateTime", new Date().getTime());
    paramBundle.putString("commDesKey", com.payeco.android.plugin.b.g.i());
    paramBundle.putString("merchOrderId", this.l);
    paramBundle.putString("upPayReq", this.f);
    paramBundle.putString("broadcast", this.g);
    paramBundle.putString("env", this.h);
    paramBundle.putString("dev_ip", this.i);
    paramBundle.putString("dev_port", this.j);
    Log.i("payeco", "PayecoPluginLoadingActivity -onSaveInstanceState ok.");
  }
}
