package com.payeco.android.plugin;

import android.content.pm.PackageManager;
import android.util.Log;
import android.webkit.WebView;
import com.payeco.android.plugin.b.h;
import com.payeco.android.plugin.d.aa;
import org.json.JSONException;
import org.json.JSONObject;

final class w
  implements com.payeco.android.plugin.http.itf.a
{
  private int b = 0;
  
  private w(PayecoPluginLoadingActivity paramPayecoPluginLoadingActivity, byte paramByte) {}
  
  public final void a(Exception paramException)
  {
    if (paramException != null) {
      Log.e("payeco", "插件初始化通讯异常!", paramException);
    }
    while ((paramException != null) && (PayecoPluginLoadingActivity.b(this.a).d() == 0)) {
      if (!h.c())
      {
        PayecoPluginLoadingActivity.a(this.a, "2010", "连接切换多次切换域名后仍无法通讯成功！");
        PayecoPluginLoadingActivity.a(this.a, "插件初始化通讯失败[2010]！");
        return;
        Log.e("payeco", "插件初始化通讯异常!");
      }
      else
      {
        PayecoPluginLoadingActivity.a(this.a);
        return;
      }
    }
    PayecoPluginLoadingActivity.a(this.a, "2011", "请求服务失败，网络状态码：" + PayecoPluginLoadingActivity.b(this.a).d() + "！");
    PayecoPluginLoadingActivity.a(this.a, "插件初始化通讯失败[2010]！");
  }
  
  public final void a(String paramString)
  {
    int j = 1;
    h.c(this.a.getApplicationContext());
    if (paramString == null)
    {
      PayecoPluginLoadingActivity.a(this.a, "2001", "通讯失败响应为空！");
      PayecoPluginLoadingActivity.a(this.a, "插件初始化通讯失败[2001]！");
      return;
    }
    int i;
    if (paramString.startsWith("{"))
    {
      i = this.b;
      this.b = (i + 1);
      if (i >= 3)
      {
        PayecoPluginLoadingActivity.a(this.a, "2009", String.format("通讯失败连接更新三次无果[%s]！", new Object[] { paramString }));
        PayecoPluginLoadingActivity.a(this.a, "插件初始化通讯失败[2009]！");
        return;
      }
      try
      {
        JSONObject localJSONObject1 = new JSONObject(paramString);
        if (localJSONObject1.has("errCode"))
        {
          if (localJSONObject1.has("info")) {
            try
            {
              PayecoPluginLoadingActivity.a(this.a, localJSONObject1.getString("info"));
              return;
            }
            catch (Exception localException1)
            {
              PayecoPluginLoadingActivity.a(this.a, "2003", String.format("通讯失败无法读取错误信息[%s]！", new Object[] { paramString }));
              PayecoPluginLoadingActivity.a(this.a, "插件初始化通讯失败[2003]！");
              return;
            }
          }
          try
          {
            PayecoPluginLoadingActivity.a(this.a, "2004", String.format("通讯失败无法读取错误信息[%s]！", new Object[] { paramString }));
            PayecoPluginLoadingActivity.a(this.a, String.format("插件初始化通讯失败，错误码:%s，[2004]", new Object[] { localException2.getString("errCode") }));
            return;
          }
          catch (JSONException localJSONException)
          {
            PayecoPluginLoadingActivity.a(this.a, "2005", String.format("通讯失败无法读取错误信息[%s]！", new Object[] { paramString }));
            PayecoPluginLoadingActivity.a(this.a, "插件初始化通讯失败[2005]！");
            return;
          }
        }
      }
      catch (Exception localException2)
      {
        PayecoPluginLoadingActivity.a(this.a, "2002", String.format("通讯失败无法解析响应[%s]！", new Object[] { paramString }));
        PayecoPluginLoadingActivity.a(this.a, "插件初始化通讯失败[2002]！");
        return;
      }
      try
      {
        JSONObject localJSONObject2 = localJSONException.getJSONObject("package");
        PayecoPluginLoadingActivity.b(this.a).a(this.a);
      }
      catch (Exception localException3)
      {
        try
        {
          h.a(localJSONObject2);
        }
        catch (Exception localException4)
        {
          PayecoPluginLoadingActivity.a(this.a, "2007", String.format("通讯失败无法更新配置[%s]！", new Object[] { paramString }));
          PayecoPluginLoadingActivity.a(this.a, "插件初始化通讯失败[2007]！");
          return;
        }
        try
        {
          h.a(localJSONObject2, this.a);
          PayecoPluginLoadingActivity.a(this.a);
          return;
        }
        catch (Exception localException5)
        {
          PayecoPluginLoadingActivity.a(this.a, "2008", String.format("通讯失败无法更新密钥[%s]！", new Object[] { paramString }));
          PayecoPluginLoadingActivity.a(this.a, "插件初始化通讯失败[2008]！");
          return;
        }
        localException3 = localException3;
        PayecoPluginLoadingActivity.a(this.a, "2006", String.format("通讯失败无法获取package[%s]！", new Object[] { paramString }));
        PayecoPluginLoadingActivity.a(this.a, "插件初始化通讯失败[2006]！");
        return;
      }
    }
    PayecoPluginLoadingActivity.c(this.a);
    PayecoPluginLoadingActivity.d(this.a).loadDataWithBaseURL(h.b(), paramString, "text/html", "utf-8", h.b());
    paramString = this.a.getPackageManager();
    if (paramString.checkPermission("android.permission.ACCESS_COARSE_LOCATION", this.a.getPackageName()) == 0)
    {
      i = 1;
      if (paramString.checkPermission("android.permission.ACCESS_FINE_LOCATION", this.a.getPackageName()) != 0) {
        break label550;
      }
      label508:
      if ((i == 0) || (j == 0)) {
        break label555;
      }
      new Thread(new x(this)).start();
      PayecoPluginLoadingActivity.e(this.a);
    }
    for (;;)
    {
      aa.a();
      return;
      i = 0;
      break;
      label550:
      j = 0;
      break label508;
      label555:
      Log.d("hx", "木有这个权限");
    }
  }
}
