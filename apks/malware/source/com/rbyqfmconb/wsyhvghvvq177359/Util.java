package com.rbyqfmconb.wsyhvghvvq177359;

import android.accounts.Account;
import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.PackageManager;
import android.content.res.Resources;
import android.graphics.Point;
import android.location.Address;
import android.location.Geocoder;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Environment;
import android.provider.Settings.Global;
import android.provider.Settings.Secure;
import android.telephony.TelephonyManager;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.Display;
import android.view.WindowManager;
import com.google.android.gms.ads.identifier.AdvertisingIdClient;
import com.google.android.gms.ads.identifier.AdvertisingIdClient.Info;
import com.google.android.gms.common.GooglePlayServicesNotAvailableException;
import com.google.android.gms.common.GooglePlayServicesRepairableException;
import java.io.IOException;
import java.io.PrintStream;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.TimeZone;
import org.json.JSONObject;

class Util
{
  private static final int NETWORK_TYPE_EHRPD = 14;
  private static final int NETWORK_TYPE_EVDO_B = 12;
  private static final int NETWORK_TYPE_HSDPA = 8;
  private static final int NETWORK_TYPE_HSPA = 10;
  private static final int NETWORK_TYPE_HSPAP = 15;
  private static final int NETWORK_TYPE_HSUPA = 9;
  private static final int NETWORK_TYPE_IDEN = 11;
  private static final int NETWORK_TYPE_LTE = 13;
  private static final String TAG = "BunSDK";
  private static String a;
  private static boolean b;
  private static String c;
  private static String d;
  private static String e = "airplay";
  private static String f;
  private static String g = "0";
  private static String h = "0";
  private static String i;
  private static String j;
  private static float k;
  private static int l;
  private static Context m;
  private static String n;
  private static String o;
  private static long p = 0L;
  private static String q = "0";
  
  Util(Context paramContext)
  {
    m = paramContext;
  }
  
  public static float a(float paramFloat, Context paramContext)
    throws Exception
  {
    return paramContext.getResources().getDisplayMetrics().densityDpi / 160.0F * paramFloat;
  }
  
  static String a()
  {
    return "6.2";
  }
  
  public static void a(float paramFloat)
  {
    k = paramFloat;
  }
  
  static void a(int paramInt)
  {
    l = paramInt;
  }
  
  static void a(long paramLong)
  {
    p = paramLong;
  }
  
  public static void a(Context paramContext)
  {
    try
    {
      new Thread(new Runnable()
      {
        public void run()
        {
          try
          {
            AdvertisingIdClient.Info localInfo = AdvertisingIdClient.getAdvertisingIdInfo(this.a);
            Util.o(localInfo.getId());
            Util.a(localInfo.isLimitAdTrackingEnabled());
            Util.a("Advertisment id: " + Util.y());
            Util.a("Ad opt out enabled : " + Util.z());
            return;
          }
          catch (IOException localIOException)
          {
            Log.e("BunSDK", "IOException", localIOException);
            return;
          }
          catch (GooglePlayServicesNotAvailableException localGooglePlayServicesNotAvailableException)
          {
            Log.e("BunSDK", "GooglePlayServicesNotAvailableException", localGooglePlayServicesNotAvailableException);
            return;
          }
          catch (IllegalStateException localIllegalStateException)
          {
            Log.e("BunSDK", "IllegalStateException", localIllegalStateException);
            return;
          }
          catch (GooglePlayServicesRepairableException localGooglePlayServicesRepairableException)
          {
            Log.e("BunSDK", "GooglePlayServicesRepairableException", localGooglePlayServicesRepairableException);
            return;
          }
          catch (Exception localException)
          {
            Log.e("BunSDK", "Exception", localException);
          }
        }
      }, "ad_id").start();
      return;
    }
    catch (Exception paramContext)
    {
      Log.e("BunSDK", "Exception", paramContext);
    }
  }
  
  static void a(String paramString) {}
  
  static void a(String paramString, Throwable paramThrowable) {}
  
  static boolean a(Context paramContext, Class<?> paramClass)
    throws NullPointerException, Exception
  {
    return paramContext.getPackageManager().queryIntentActivities(new Intent(paramContext, paramClass), 65536).size() > 0;
  }
  
  static boolean a(Context paramContext, String paramString)
    throws NullPointerException, Exception
  {
    return paramContext.getPackageManager().queryIntentActivities(new Intent(paramString), 65536).size() > 0;
  }
  
  public static float b(float paramFloat, Context paramContext)
    throws Exception
  {
    return paramFloat / (paramContext.getResources().getDisplayMetrics().densityDpi / 160.0F);
  }
  
  static String b(long paramLong)
  {
    try
    {
      Object localObject = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
      localObject = "" + ((SimpleDateFormat)localObject).format(new Date(paramLong)) + "_" + ((SimpleDateFormat)localObject).getTimeZone().getDisplayName() + "_" + ((SimpleDateFormat)localObject).getTimeZone().getID() + "_" + ((SimpleDateFormat)localObject).getTimeZone().getDisplayName(false, 0);
      return localObject;
    }
    catch (Exception localException) {}
    return "00";
  }
  
  static void b(String paramString)
  {
    Log.d("System.out", " " + paramString);
  }
  
  static boolean b()
  {
    return b;
  }
  
  static boolean b(Context paramContext)
  {
    DisplayMetrics localDisplayMetrics = paramContext.getApplicationContext().getResources().getDisplayMetrics();
    paramContext = ((WindowManager)paramContext.getSystemService("window")).getDefaultDisplay();
    int i1 = paramContext.getWidth();
    int i2 = paramContext.getHeight();
    float f1 = localDisplayMetrics.density;
    return (i1 / f1 >= 600.0F) && (i2 / f1 >= 600.0F);
  }
  
  static boolean b(Context paramContext, Class<?> paramClass)
    throws NullPointerException, Exception
  {
    return paramContext.getPackageManager().queryIntentServices(new Intent(paramContext, paramClass), 65536).size() > 0;
  }
  
  static String c()
  {
    return a;
  }
  
  static void c(Context paramContext)
  {
    m = paramContext;
  }
  
  static void c(String paramString)
  {
    c = paramString;
  }
  
  static String d(Context paramContext)
  {
    String str2 = "";
    String str1 = str2;
    try
    {
      if (Build.VERSION.SDK_INT >= 5)
      {
        str1 = str2;
        if (paramContext.checkCallingOrSelfPermission("android.permission.GET_ACCOUNTS") == 0) {
          str1 = android.accounts.AccountManager.get(paramContext).getAccountsByType("com.google")[0].name;
        }
      }
      return str1;
    }
    catch (Exception paramContext)
    {
      a("No email account found.");
    }
    return "";
  }
  
  static void d()
  {
    try
    {
      q = m(f + r());
      return;
    }
    catch (Exception localException)
    {
      Log.e("BunSDK", "Error occured while generating session id.");
    }
  }
  
  public static void d(String paramString)
  {
    d = paramString;
  }
  
  static String e()
  {
    return q;
  }
  
  /* Error */
  static String e(Context paramContext)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokestatic 267	android/accounts/AccountManager:get	(Landroid/content/Context;)Landroid/accounts/AccountManager;
    //   4: invokevirtual 300	android/accounts/AccountManager:getAccounts	()[Landroid/accounts/Account;
    //   7: astore_0
    //   8: new 302	org/json/JSONObject
    //   11: dup
    //   12: invokespecial 303	org/json/JSONObject:<init>	()V
    //   15: astore_3
    //   16: iconst_0
    //   17: istore_1
    //   18: aload_0
    //   19: arraylength
    //   20: istore_2
    //   21: iload_1
    //   22: iload_2
    //   23: if_icmpge +30 -> 53
    //   26: aload_3
    //   27: aload_0
    //   28: iload_1
    //   29: aaload
    //   30: getfield 306	android/accounts/Account:type	Ljava/lang/String;
    //   33: aload_0
    //   34: iload_1
    //   35: aaload
    //   36: getfield 278	android/accounts/Account:name	Ljava/lang/String;
    //   39: invokestatic 290	com/rbyqfmconb/wsyhvghvvq177359/Util:m	(Ljava/lang/String;)Ljava/lang/String;
    //   42: invokevirtual 310	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   45: pop
    //   46: iload_1
    //   47: iconst_1
    //   48: iadd
    //   49: istore_1
    //   50: goto -32 -> 18
    //   53: aload_3
    //   54: invokevirtual 311	org/json/JSONObject:toString	()Ljava/lang/String;
    //   57: astore_0
    //   58: aload_0
    //   59: areturn
    //   60: astore_0
    //   61: ldc -85
    //   63: areturn
    //   64: astore 4
    //   66: goto -20 -> 46
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	69	0	paramContext	Context
    //   17	33	1	i1	int
    //   20	4	2	i2	int
    //   15	39	3	localJSONObject	JSONObject
    //   64	1	4	localException	Exception
    // Exception table:
    //   from	to	target	type
    //   0	16	60	java/lang/Exception
    //   18	21	60	java/lang/Exception
    //   53	58	60	java/lang/Exception
    //   26	46	64	java/lang/Exception
  }
  
  static void e(String paramString)
  {
    e = paramString;
  }
  
  static Context f()
  {
    return m;
  }
  
  /* Error */
  static String f(Context paramContext)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokestatic 267	android/accounts/AccountManager:get	(Landroid/content/Context;)Landroid/accounts/AccountManager;
    //   4: invokevirtual 300	android/accounts/AccountManager:getAccounts	()[Landroid/accounts/Account;
    //   7: astore_0
    //   8: new 302	org/json/JSONObject
    //   11: dup
    //   12: invokespecial 303	org/json/JSONObject:<init>	()V
    //   15: astore_3
    //   16: iconst_0
    //   17: istore_1
    //   18: aload_0
    //   19: arraylength
    //   20: istore_2
    //   21: iload_1
    //   22: iload_2
    //   23: if_icmpge +30 -> 53
    //   26: aload_3
    //   27: aload_0
    //   28: iload_1
    //   29: aaload
    //   30: getfield 306	android/accounts/Account:type	Ljava/lang/String;
    //   33: aload_0
    //   34: iload_1
    //   35: aaload
    //   36: getfield 278	android/accounts/Account:name	Ljava/lang/String;
    //   39: invokestatic 313	com/rbyqfmconb/wsyhvghvvq177359/Util:n	(Ljava/lang/String;)Ljava/lang/String;
    //   42: invokevirtual 310	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   45: pop
    //   46: iload_1
    //   47: iconst_1
    //   48: iadd
    //   49: istore_1
    //   50: goto -32 -> 18
    //   53: aload_3
    //   54: invokevirtual 311	org/json/JSONObject:toString	()Ljava/lang/String;
    //   57: astore_0
    //   58: aload_0
    //   59: areturn
    //   60: astore_0
    //   61: ldc -85
    //   63: areturn
    //   64: astore 4
    //   66: goto -20 -> 46
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	69	0	paramContext	Context
    //   17	33	1	i1	int
    //   20	4	2	i2	int
    //   15	39	3	localJSONObject	JSONObject
    //   64	1	4	localException	Exception
    // Exception table:
    //   from	to	target	type
    //   0	16	60	java/lang/Exception
    //   18	21	60	java/lang/Exception
    //   53	58	60	java/lang/Exception
    //   26	46	64	java/lang/Exception
  }
  
  static void f(String paramString)
  {
    f = paramString;
  }
  
  static String g()
  {
    return c;
  }
  
  static String g(Context paramContext)
  {
    if (paramContext == null) {
      return "";
    }
    try
    {
      paramContext = Settings.Secure.getString(paramContext.getApplicationContext().getContentResolver(), "android_id");
      a("Android ID: " + paramContext);
      MessageDigest localMessageDigest = MessageDigest.getInstance("MD5");
      localMessageDigest.update(paramContext.getBytes(), 0, paramContext.length());
      paramContext = new BigInteger(1, localMessageDigest.digest()).toString(16);
      return paramContext;
    }
    catch (NullPointerException paramContext)
    {
      Log.e("BunSDK", "Android Id not found.");
      return "NOT FOUND";
    }
    catch (NoSuchAlgorithmException paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
  }
  
  static void g(String paramString)
  {
    n = paramString;
  }
  
  public static String h()
  {
    return d;
  }
  
  static String h(Context paramContext)
  {
    if (paramContext == null) {
      return "";
    }
    try
    {
      paramContext = Settings.Secure.getString(paramContext.getApplicationContext().getContentResolver(), "android_id");
      MessageDigest localMessageDigest = MessageDigest.getInstance("SHA-1");
      localMessageDigest.update(paramContext.getBytes(), 0, paramContext.length());
      paramContext = new BigInteger(1, localMessageDigest.digest()).toString(16);
      return paramContext;
    }
    catch (NullPointerException paramContext)
    {
      Log.e("BunSDK", "Android Id not found.");
      return "NOT FOUND";
    }
    catch (NoSuchAlgorithmException paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
  }
  
  static void h(String paramString)
  {
    h = paramString;
  }
  
  static String i()
  {
    return e;
  }
  
  static String i(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getPackageName();
      return paramContext;
    }
    catch (Exception paramContext) {}
    return "";
  }
  
  static void i(String paramString)
  {
    g = paramString;
  }
  
  static String j()
  {
    return f;
  }
  
  static String j(Context paramContext)
  {
    if (paramContext == null) {
      return "";
    }
    paramContext = (TelephonyManager)paramContext.getSystemService("phone");
    if ((paramContext != null) && (paramContext.getSimState() == 5)) {
      return paramContext.getSimOperatorName();
    }
    return "";
  }
  
  public static void j(String paramString)
  {
    i = paramString;
  }
  
  static String k()
  {
    return n;
  }
  
  static String k(Context paramContext)
  {
    if (paramContext == null) {
      return "";
    }
    paramContext = (TelephonyManager)paramContext.getSystemService("phone");
    if ((paramContext != null) && (paramContext.getPhoneType() == 1)) {
      return paramContext.getNetworkOperatorName();
    }
    return "";
  }
  
  public static void k(String paramString)
  {
    j = paramString;
  }
  
  static int l(Context paramContext)
  {
    if (paramContext == null) {
      return 0;
    }
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    if ((paramContext != null) && (paramContext.isConnected()) && (paramContext.getTypeName().equals("WIFI"))) {
      return 1;
    }
    return 0;
  }
  
  static String l()
  {
    return h;
  }
  
  static void l(String paramString)
  {
    o = paramString;
  }
  
  static String m()
  {
    return g;
  }
  
  static String m(Context paramContext)
  {
    if (paramContext != null)
    {
      paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
      if ((paramContext != null) && (paramContext.isConnected()) && (!paramContext.getTypeName().equals("WIFI"))) {
        return paramContext.getSubtypeName();
      }
    }
    return "";
  }
  
  static final String m(String paramString)
  {
    try
    {
      MessageDigest localMessageDigest = MessageDigest.getInstance("MD5");
      localMessageDigest.update(paramString.getBytes(), 0, paramString.length());
      paramString = new BigInteger(1, localMessageDigest.digest()).toString(16);
      return paramString;
    }
    catch (NoSuchAlgorithmException paramString)
    {
      paramString.printStackTrace();
      return "";
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
    return "";
  }
  
  static long n()
  {
    return p;
  }
  
  static final String n(String paramString)
  {
    try
    {
      MessageDigest localMessageDigest = MessageDigest.getInstance("SHA-1");
      localMessageDigest.update(paramString.getBytes(), 0, paramString.length());
      paramString = new BigInteger(1, localMessageDigest.digest()).toString(16);
      return paramString;
    }
    catch (NoSuchAlgorithmException paramString)
    {
      paramString.printStackTrace();
      return "";
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
    return "";
  }
  
  static boolean n(Context paramContext)
  {
    if (paramContext == null) {
      return false;
    }
    try
    {
      paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
      if ((paramContext == null) || (!paramContext.isConnected())) {
        break label185;
      }
      int i1 = paramContext.getType();
      if (i1 == 1)
      {
        System.out.println("CONNECTED VIA WIFI");
        return true;
      }
      if (i1 == 0)
      {
        i1 = paramContext.getSubtype();
        switch (i1)
        {
        default: 
          return false;
        case 7: 
          return false;
        case 4: 
          return false;
        case 2: 
          return false;
        case 5: 
          return true;
        case 6: 
          return true;
        case 1: 
          return false;
        case 8: 
          return true;
        case 10: 
          return true;
        case 9: 
          return true;
        case 3: 
          return true;
        case 14: 
          return true;
        case 12: 
          return true;
        case 15: 
          return true;
        case 11: 
          return false;
        case 13: 
          return true;
        }
        return false;
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return false;
    label185:
    return false;
  }
  
  public static String o()
  {
    return i;
  }
  
  static String o(Context paramContext)
  {
    Object localObject = "";
    if (paramContext != null)
    {
      paramContext = ((WindowManager)paramContext.getSystemService("window")).getDefaultDisplay();
      if (Build.VERSION.SDK_INT >= 13)
      {
        localObject = new Point();
        paramContext.getSize((Point)localObject);
        localObject = ((Point)localObject).x + "_" + ((Point)localObject).y;
      }
    }
    else
    {
      return localObject;
    }
    return "" + paramContext.getWidth() + "_" + paramContext.getHeight();
  }
  
  public static float p()
  {
    return k;
  }
  
  static String[] p(Context paramContext)
  {
    String[] arrayOfString = new String[2];
    arrayOfString[0] = "";
    arrayOfString[1] = "";
    try
    {
      paramContext = new Geocoder(paramContext);
      if ((h == null) || (h.equals("invalid")) || (g == null) || (g.equals("invalid"))) {
        return arrayOfString;
      }
      paramContext = paramContext.getFromLocation(Double.parseDouble(h), Double.parseDouble(g), 1);
      if (!paramContext.isEmpty())
      {
        arrayOfString[0] = ((Address)paramContext.get(0)).getCountryName();
        arrayOfString[1] = ((Address)paramContext.get(0)).getPostalCode();
        a("Postal Code: " + arrayOfString[1] + " Country Code: " + ((Address)paramContext.get(0)).getCountryCode());
      }
    }
    catch (Throwable paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
    catch (Exception paramContext)
    {
      for (;;) {}
    }
    catch (IOException paramContext)
    {
      for (;;) {}
    }
    return arrayOfString;
    return arrayOfString;
  }
  
  public static String q()
  {
    return j;
  }
  
  static String q(Context paramContext)
  {
    float f1 = paramContext.getResources().getDisplayMetrics().density;
    return "" + f1;
  }
  
  static String r()
  {
    try
    {
      Object localObject = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
      localObject = "" + ((SimpleDateFormat)localObject).format(new Date()) + "_" + ((SimpleDateFormat)localObject).getTimeZone().getDisplayName() + "_" + ((SimpleDateFormat)localObject).getTimeZone().getID() + "_" + ((SimpleDateFormat)localObject).getTimeZone().getDisplayName(false, 0);
      return localObject;
    }
    catch (Exception localException) {}
    return "00";
  }
  
  static String r(Context paramContext)
  {
    paramContext = paramContext.getResources().getDisplayMetrics();
    return "" + paramContext.densityDpi;
  }
  
  static String s()
  {
    return Build.MODEL;
  }
  
  static boolean s(Context paramContext)
  {
    try
    {
      paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
      if ((paramContext != null) && (paramContext.isConnected())) {
        return true;
      }
      Log.e("BunSDK", "Internet connection not found.");
      MA.sendAdError("Internet connection not found.");
      return false;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return false;
  }
  
  static String t()
  {
    return "" + Build.VERSION.SDK_INT;
  }
  
  /* Error */
  static String t(Context paramContext)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 134	android/content/Context:getPackageManager	()Landroid/content/pm/PackageManager;
    //   4: astore_1
    //   5: aload_1
    //   6: aload_0
    //   7: invokevirtual 376	android/content/Context:getPackageName	()Ljava/lang/String;
    //   10: iconst_0
    //   11: invokevirtual 527	android/content/pm/PackageManager:getApplicationInfo	(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;
    //   14: astore_0
    //   15: aload_0
    //   16: ifnull +14 -> 30
    //   19: aload_1
    //   20: aload_0
    //   21: invokevirtual 531	android/content/pm/PackageManager:getApplicationLabel	(Landroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;
    //   24: astore_0
    //   25: aload_0
    //   26: checkcast 339	java/lang/String
    //   29: areturn
    //   30: ldc_w 533
    //   33: astore_0
    //   34: goto -9 -> 25
    //   37: astore_0
    //   38: aload_0
    //   39: invokevirtual 369	java/lang/Exception:printStackTrace	()V
    //   42: ldc -85
    //   44: areturn
    //   45: astore_0
    //   46: aconst_null
    //   47: astore_0
    //   48: goto -33 -> 15
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	51	0	paramContext	Context
    //   4	16	1	localPackageManager	PackageManager
    // Exception table:
    //   from	to	target	type
    //   0	5	37	java/lang/Exception
    //   5	15	37	java/lang/Exception
    //   19	25	37	java/lang/Exception
    //   25	30	37	java/lang/Exception
    //   5	15	45	android/content/pm/PackageManager$NameNotFoundException
  }
  
  static int u()
  {
    return l;
  }
  
  @SuppressLint({"InlinedApi"})
  static String u(Context paramContext)
  {
    try
    {
      if (Build.VERSION.SDK_INT >= 17) {
        return Settings.Global.getString(paramContext.getContentResolver(), "install_non_market_apps");
      }
      paramContext = Settings.Secure.getString(paramContext.getContentResolver(), "install_non_market_apps");
      return paramContext;
    }
    catch (Exception paramContext) {}
    return "0";
  }
  
  static String v()
  {
    return Build.MANUFACTURER;
  }
  
  public static String v(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getSharedPreferences("mraid", 0).getString("mr", null);
      return paramContext;
    }
    catch (Exception paramContext) {}
    return null;
  }
  
  static String w()
  {
    return o;
  }
  
  public static JSONObject w(Context paramContext)
  {
    boolean bool5 = true;
    for (;;)
    {
      try
      {
        TelephonyManager localTelephonyManager = (TelephonyManager)paramContext.getSystemService("phone");
        if ((localTelephonyManager == null) || (localTelephonyManager.getSimState() != 5)) {
          break label179;
        }
        bool1 = true;
        bool2 = true;
        if (Build.VERSION.SDK_INT <= 7) {
          break label173;
        }
        bool3 = a(paramContext, "android.intent.action.EDIT");
        int i1;
        if (paramContext.checkCallingOrSelfPermission("android.permission.WRITE_EXTERNAL_STORAGE") == 0)
        {
          i1 = 1;
          paramContext = Environment.getExternalStorageState();
          if ((i1 == 0) || (!paramContext.equals("mounted"))) {
            break label167;
          }
          bool4 = true;
          if (Build.VERSION.SDK_INT > 10)
          {
            paramContext = new JSONObject();
            paramContext.put("sms", bool2);
            paramContext.put("tel", bool1);
            paramContext.put("calendar", bool3);
            paramContext.put("storePictures", bool4);
            paramContext.put("inlineVideo", bool5);
            return paramContext;
          }
        }
        else
        {
          i1 = 0;
          continue;
        }
        bool5 = false;
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
        return null;
      }
      continue;
      label167:
      boolean bool4 = false;
      continue;
      label173:
      boolean bool3 = false;
      continue;
      label179:
      boolean bool1 = false;
      boolean bool2 = false;
    }
  }
  
  static String x()
  {
    return Locale.getDefault().getDisplayLanguage();
  }
  
  public static final class NativeMraid
    implements Runnable
  {
    a<Boolean> a;
    private Context b;
    
    public NativeMraid(Context paramContext, a<Boolean> paramA)
    {
      this.b = paramContext;
      this.a = paramA;
    }
    
    /* Error */
    public void run()
    {
      // Byte code:
      //   0: aconst_null
      //   1: astore_1
      //   2: aconst_null
      //   3: astore 4
      //   5: aload_1
      //   6: astore_2
      //   7: aload_0
      //   8: getfield 21	com/rbyqfmconb/wsyhvghvvq177359/Util$NativeMraid:b	Landroid/content/Context;
      //   11: invokestatic 33	com/rbyqfmconb/wsyhvghvvq177359/Util:s	(Landroid/content/Context;)Z
      //   14: ifeq +388 -> 402
      //   17: aload_1
      //   18: astore_2
      //   19: ldc 35
      //   21: ldc 37
      //   23: invokestatic 43	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
      //   26: pop
      //   27: aload_1
      //   28: astore_2
      //   29: new 45	java/net/URL
      //   32: dup
      //   33: ldc 47
      //   35: invokestatic 53	com/rbyqfmconb/wsyhvghvvq177359/Base64:decodeString	(Ljava/lang/String;)Ljava/lang/String;
      //   38: invokespecial 56	java/net/URL:<init>	(Ljava/lang/String;)V
      //   41: invokevirtual 60	java/net/URL:openConnection	()Ljava/net/URLConnection;
      //   44: checkcast 62	java/net/HttpURLConnection
      //   47: astore_1
      //   48: aload_1
      //   49: ldc 64
      //   51: invokevirtual 67	java/net/HttpURLConnection:setRequestMethod	(Ljava/lang/String;)V
      //   54: aload_1
      //   55: sipush 15000
      //   58: invokevirtual 71	java/net/HttpURLConnection:setConnectTimeout	(I)V
      //   61: aload_1
      //   62: sipush 15000
      //   65: invokevirtual 74	java/net/HttpURLConnection:setReadTimeout	(I)V
      //   68: aload_1
      //   69: iconst_1
      //   70: invokevirtual 78	java/net/HttpURLConnection:setUseCaches	(Z)V
      //   73: aload_1
      //   74: iconst_1
      //   75: invokevirtual 81	java/net/HttpURLConnection:setDefaultUseCaches	(Z)V
      //   78: aload_1
      //   79: invokevirtual 84	java/net/HttpURLConnection:connect	()V
      //   82: aload_1
      //   83: invokevirtual 88	java/net/HttpURLConnection:getResponseCode	()I
      //   86: sipush 200
      //   89: if_icmpne +226 -> 315
      //   92: aload_1
      //   93: invokevirtual 92	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
      //   96: astore_3
      //   97: new 94	java/io/BufferedReader
      //   100: dup
      //   101: new 96	java/io/InputStreamReader
      //   104: dup
      //   105: aload_3
      //   106: invokespecial 99	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
      //   109: invokespecial 102	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
      //   112: astore 4
      //   114: new 104	java/lang/StringBuilder
      //   117: dup
      //   118: invokespecial 105	java/lang/StringBuilder:<init>	()V
      //   121: astore_2
      //   122: aload 4
      //   124: invokevirtual 109	java/io/BufferedReader:readLine	()Ljava/lang/String;
      //   127: astore 5
      //   129: aload 5
      //   131: ifnull +73 -> 204
      //   134: aload_2
      //   135: aload 5
      //   137: invokevirtual 113	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   140: pop
      //   141: aload_2
      //   142: ldc 115
      //   144: invokevirtual 113	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   147: pop
      //   148: goto -26 -> 122
      //   151: astore_3
      //   152: aload_1
      //   153: astore_2
      //   154: ldc 35
      //   156: new 104	java/lang/StringBuilder
      //   159: dup
      //   160: invokespecial 105	java/lang/StringBuilder:<init>	()V
      //   163: ldc 117
      //   165: invokevirtual 113	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   168: aload_3
      //   169: invokevirtual 120	java/lang/Exception:getMessage	()Ljava/lang/String;
      //   172: invokevirtual 113	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   175: invokevirtual 123	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   178: invokestatic 126	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
      //   181: pop
      //   182: aload_1
      //   183: ifnull +7 -> 190
      //   186: aload_1
      //   187: invokevirtual 129	java/net/HttpURLConnection:disconnect	()V
      //   190: aload_0
      //   191: getfield 23	com/rbyqfmconb/wsyhvghvvq177359/Util$NativeMraid:a	Lcom/rbyqfmconb/wsyhvghvvq177359/a;
      //   194: iconst_0
      //   195: invokestatic 135	java/lang/Boolean:valueOf	(Z)Ljava/lang/Boolean;
      //   198: invokeinterface 140 2 0
      //   203: return
      //   204: aload 4
      //   206: invokevirtual 143	java/io/BufferedReader:close	()V
      //   209: aload_3
      //   210: invokevirtual 146	java/io/InputStream:close	()V
      //   213: aload_2
      //   214: invokevirtual 123	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   217: astore_3
      //   218: aload_3
      //   219: ifnull +77 -> 296
      //   222: aload_3
      //   223: ldc -108
      //   225: invokevirtual 154	java/lang/String:equals	(Ljava/lang/Object;)Z
      //   228: ifne +68 -> 296
      //   231: aload_3
      //   232: ldc -100
      //   234: invokevirtual 160	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
      //   237: ifeq +59 -> 296
      //   240: aload_0
      //   241: getfield 21	com/rbyqfmconb/wsyhvghvvq177359/Util$NativeMraid:b	Landroid/content/Context;
      //   244: ldc -100
      //   246: iconst_0
      //   247: invokevirtual 166	android/content/Context:getSharedPreferences	(Ljava/lang/String;I)Landroid/content/SharedPreferences;
      //   250: invokeinterface 172 1 0
      //   255: astore_3
      //   256: aload_3
      //   257: ldc -82
      //   259: aload_2
      //   260: invokevirtual 123	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   263: invokeinterface 180 3 0
      //   268: pop
      //   269: aload_0
      //   270: getfield 23	com/rbyqfmconb/wsyhvghvvq177359/Util$NativeMraid:a	Lcom/rbyqfmconb/wsyhvghvvq177359/a;
      //   273: aload_3
      //   274: invokeinterface 184 1 0
      //   279: invokestatic 135	java/lang/Boolean:valueOf	(Z)Ljava/lang/Boolean;
      //   282: invokeinterface 140 2 0
      //   287: aload_1
      //   288: ifnull -85 -> 203
      //   291: aload_1
      //   292: invokevirtual 129	java/net/HttpURLConnection:disconnect	()V
      //   295: return
      //   296: ldc -70
      //   298: ldc -68
      //   300: invokestatic 126	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
      //   303: pop
      //   304: aload_1
      //   305: ifnull -115 -> 190
      //   308: aload_1
      //   309: invokevirtual 129	java/net/HttpURLConnection:disconnect	()V
      //   312: goto -122 -> 190
      //   315: ldc 35
      //   317: new 104	java/lang/StringBuilder
      //   320: dup
      //   321: invokespecial 105	java/lang/StringBuilder:<init>	()V
      //   324: ldc -66
      //   326: invokevirtual 113	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   329: aload_1
      //   330: invokevirtual 88	java/net/HttpURLConnection:getResponseCode	()I
      //   333: invokevirtual 193	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
      //   336: invokevirtual 123	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   339: invokestatic 43	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
      //   342: pop
      //   343: ldc 35
      //   345: new 104	java/lang/StringBuilder
      //   348: dup
      //   349: invokespecial 105	java/lang/StringBuilder:<init>	()V
      //   352: ldc -61
      //   354: invokevirtual 113	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   357: aload_1
      //   358: invokevirtual 198	java/net/HttpURLConnection:getResponseMessage	()Ljava/lang/String;
      //   361: invokevirtual 113	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   364: invokevirtual 123	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   367: invokestatic 43	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
      //   370: pop
      //   371: goto -67 -> 304
      //   374: astore_2
      //   375: aload_1
      //   376: astore_3
      //   377: aload_2
      //   378: astore_1
      //   379: aload_3
      //   380: ifnull +7 -> 387
      //   383: aload_3
      //   384: invokevirtual 129	java/net/HttpURLConnection:disconnect	()V
      //   387: aload_1
      //   388: athrow
      //   389: astore_1
      //   390: aload_2
      //   391: astore_3
      //   392: goto -13 -> 379
      //   395: astore_3
      //   396: aload 4
      //   398: astore_1
      //   399: goto -247 -> 152
      //   402: aconst_null
      //   403: astore_1
      //   404: goto -100 -> 304
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	407	0	this	NativeMraid
      //   1	387	1	localObject1	Object
      //   389	1	1	localObject2	Object
      //   398	6	1	localObject3	Object
      //   6	254	2	localObject4	Object
      //   374	17	2	localObject5	Object
      //   96	10	3	localInputStream	java.io.InputStream
      //   151	59	3	localException1	Exception
      //   217	175	3	localObject6	Object
      //   395	1	3	localException2	Exception
      //   3	394	4	localBufferedReader	java.io.BufferedReader
      //   127	9	5	str	String
      // Exception table:
      //   from	to	target	type
      //   48	122	151	java/lang/Exception
      //   122	129	151	java/lang/Exception
      //   134	148	151	java/lang/Exception
      //   204	218	151	java/lang/Exception
      //   222	287	151	java/lang/Exception
      //   296	304	151	java/lang/Exception
      //   315	371	151	java/lang/Exception
      //   48	122	374	finally
      //   122	129	374	finally
      //   134	148	374	finally
      //   204	218	374	finally
      //   222	287	374	finally
      //   296	304	374	finally
      //   315	371	374	finally
      //   7	17	389	finally
      //   19	27	389	finally
      //   29	48	389	finally
      //   154	182	389	finally
      //   7	17	395	java/lang/Exception
      //   19	27	395	java/lang/Exception
      //   29	48	395	java/lang/Exception
    }
  }
}
