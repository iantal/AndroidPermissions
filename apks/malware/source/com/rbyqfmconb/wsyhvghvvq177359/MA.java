package com.rbyqfmconb.wsyhvghvvq177359;

import android.app.Activity;
import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.pm.PackageManager;
import android.os.Build.VERSION;
import android.os.Environment;
import android.os.Handler;
import android.util.Log;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;
import org.json.JSONObject;

public class MA
  extends o
{
  static final String TAG = "BunSDK";
  private static Activity activity;
  static AdListener adListener;
  private static b cA;
  static boolean enableCaching = true;
  static Handler handler;
  static boolean isDialogClosed = true;
  private static boolean isIntegrationIssue;
  private static boolean isShowOptinDialog = true;
  private static AdListener.OptinListener optinListener;
  static JP.ParseMraidJson parseMraidJson;
  private static long time = 0L;
  Runnable optinRunnable = new Runnable()
  {
    /* Error */
    public void run()
    {
      // Byte code:
      //   0: invokestatic 28	com/rbyqfmconb/wsyhvghvvq177359/AdActivity:a	()Z
      //   3: ifeq +4 -> 7
      //   6: return
      //   7: aconst_null
      //   8: astore_2
      //   9: aconst_null
      //   10: astore 5
      //   12: invokestatic 32	com/rbyqfmconb/wsyhvghvvq177359/MA:access$000	()Landroid/app/Activity;
      //   15: invokestatic 38	com/rbyqfmconb/wsyhvghvvq177359/Util:s	(Landroid/content/Context;)Z
      //   18: istore_1
      //   19: iload_1
      //   20: ifeq +250 -> 270
      //   23: new 40	java/net/URL
      //   26: dup
      //   27: ldc 42
      //   29: invokestatic 48	com/rbyqfmconb/wsyhvghvvq177359/Base64:decodeString	(Ljava/lang/String;)Ljava/lang/String;
      //   32: invokespecial 51	java/net/URL:<init>	(Ljava/lang/String;)V
      //   35: invokevirtual 55	java/net/URL:openConnection	()Ljava/net/URLConnection;
      //   38: checkcast 57	java/net/HttpURLConnection
      //   41: astore_3
      //   42: new 59	java/io/BufferedReader
      //   45: dup
      //   46: new 61	java/io/InputStreamReader
      //   49: dup
      //   50: aload_3
      //   51: invokevirtual 65	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
      //   54: invokespecial 68	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
      //   57: invokespecial 71	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
      //   60: astore_2
      //   61: new 73	java/lang/StringBuilder
      //   64: dup
      //   65: invokespecial 74	java/lang/StringBuilder:<init>	()V
      //   68: astore 4
      //   70: aload_2
      //   71: invokevirtual 78	java/io/BufferedReader:readLine	()Ljava/lang/String;
      //   74: astore 5
      //   76: aload 5
      //   78: ifnull +117 -> 195
      //   81: aload 4
      //   83: aload 5
      //   85: invokevirtual 82	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   88: pop
      //   89: goto -19 -> 70
      //   92: astore 4
      //   94: aload_3
      //   95: astore_2
      //   96: aload 4
      //   98: invokevirtual 85	java/lang/Exception:printStackTrace	()V
      //   101: aload_3
      //   102: ifnull +168 -> 270
      //   105: aload_3
      //   106: invokevirtual 88	java/net/HttpURLConnection:disconnect	()V
      //   109: ldc 90
      //   111: astore_2
      //   112: new 92	android/content/Intent
      //   115: dup
      //   116: invokestatic 32	com/rbyqfmconb/wsyhvghvvq177359/MA:access$000	()Landroid/app/Activity;
      //   119: ldc 25
      //   121: invokespecial 95	android/content/Intent:<init>	(Landroid/content/Context;Ljava/lang/Class;)V
      //   124: astore_3
      //   125: aload_3
      //   126: ldc 96
      //   128: invokevirtual 100	android/content/Intent:setFlags	(I)Landroid/content/Intent;
      //   131: pop
      //   132: aload_3
      //   133: ldc 101
      //   135: invokevirtual 104	android/content/Intent:addFlags	(I)Landroid/content/Intent;
      //   138: pop
      //   139: aload_3
      //   140: ldc 106
      //   142: new 73	java/lang/StringBuilder
      //   145: dup
      //   146: invokespecial 74	java/lang/StringBuilder:<init>	()V
      //   149: ldc 90
      //   151: invokevirtual 82	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   154: aload_2
      //   155: invokevirtual 82	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   158: invokevirtual 109	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   161: invokevirtual 113	android/content/Intent:putExtra	(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
      //   164: pop
      //   165: aload_3
      //   166: ldc 114
      //   168: invokevirtual 104	android/content/Intent:addFlags	(I)Landroid/content/Intent;
      //   171: pop
      //   172: invokestatic 32	com/rbyqfmconb/wsyhvghvvq177359/MA:access$000	()Landroid/app/Activity;
      //   175: aload_3
      //   176: invokevirtual 120	android/app/Activity:startActivity	(Landroid/content/Intent;)V
      //   179: return
      //   180: astore_2
      //   181: ldc 122
      //   183: ldc 124
      //   185: invokestatic 130	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;)I
      //   188: pop
      //   189: ldc 124
      //   191: invokestatic 135	com/rbyqfmconb/wsyhvghvvq177359/o:sendIntegrationError	(Ljava/lang/String;)V
      //   194: return
      //   195: aload 4
      //   197: invokevirtual 109	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   200: astore_2
      //   201: aload_3
      //   202: ifnull +74 -> 276
      //   205: aload_3
      //   206: invokevirtual 88	java/net/HttpURLConnection:disconnect	()V
      //   209: goto -97 -> 112
      //   212: aload_2
      //   213: ifnull +7 -> 220
      //   216: aload_2
      //   217: invokevirtual 88	java/net/HttpURLConnection:disconnect	()V
      //   220: aload_3
      //   221: athrow
      //   222: astore_2
      //   223: ldc 122
      //   225: new 73	java/lang/StringBuilder
      //   228: dup
      //   229: invokespecial 74	java/lang/StringBuilder:<init>	()V
      //   232: ldc -119
      //   234: invokevirtual 82	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   237: aload_2
      //   238: invokevirtual 140	java/lang/Exception:getMessage	()Ljava/lang/String;
      //   241: invokevirtual 82	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   244: invokevirtual 109	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   247: invokestatic 130	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;)I
      //   250: pop
      //   251: return
      //   252: astore 4
      //   254: aload_3
      //   255: astore_2
      //   256: aload 4
      //   258: astore_3
      //   259: goto -47 -> 212
      //   262: astore 4
      //   264: aload 5
      //   266: astore_3
      //   267: goto -173 -> 94
      //   270: ldc 90
      //   272: astore_2
      //   273: goto -161 -> 112
      //   276: goto -164 -> 112
      //   279: astore_3
      //   280: goto -68 -> 212
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	283	0	this	1
      //   18	2	1	bool	boolean
      //   8	147	2	localObject1	Object
      //   180	1	2	localActivityNotFoundException	ActivityNotFoundException
      //   200	17	2	str1	String
      //   222	16	2	localException1	Exception
      //   255	18	2	localObject2	Object
      //   41	226	3	localObject3	Object
      //   279	1	3	localObject4	Object
      //   68	14	4	localStringBuilder	StringBuilder
      //   92	104	4	localException2	Exception
      //   252	5	4	localObject5	Object
      //   262	1	4	localException3	Exception
      //   10	255	5	str2	String
      // Exception table:
      //   from	to	target	type
      //   42	70	92	java/lang/Exception
      //   70	76	92	java/lang/Exception
      //   81	89	92	java/lang/Exception
      //   195	201	92	java/lang/Exception
      //   0	6	180	android/content/ActivityNotFoundException
      //   12	19	180	android/content/ActivityNotFoundException
      //   105	109	180	android/content/ActivityNotFoundException
      //   112	179	180	android/content/ActivityNotFoundException
      //   205	209	180	android/content/ActivityNotFoundException
      //   216	220	180	android/content/ActivityNotFoundException
      //   220	222	180	android/content/ActivityNotFoundException
      //   0	6	222	java/lang/Exception
      //   12	19	222	java/lang/Exception
      //   105	109	222	java/lang/Exception
      //   112	179	222	java/lang/Exception
      //   205	209	222	java/lang/Exception
      //   216	220	222	java/lang/Exception
      //   220	222	222	java/lang/Exception
      //   42	70	252	finally
      //   70	76	252	finally
      //   81	89	252	finally
      //   195	201	252	finally
      //   23	42	262	java/lang/Exception
      //   23	42	279	finally
      //   96	101	279	finally
    }
  };
  
  static
  {
    isIntegrationIssue = false;
  }
  
  public MA(Activity paramActivity, AdListener paramAdListener, boolean paramBoolean)
  {
    adListener = paramAdListener;
    enableCaching = paramBoolean;
    Log.i("BunSDK", "Starting Bundled SDK");
    if (paramActivity == null)
    {
      Log.e("BunSDK", "Activity reference must not be null.");
      sendIntegrationError("Activty reference must not be null.");
    }
    do
    {
      return;
      if (!(paramActivity instanceof Activity))
      {
        Log.e("BunSDK", "Invalid activty reference.");
        sendIntegrationError("Invalid Activity reference.");
        return;
      }
      activity = paramActivity;
      Util.c(paramActivity);
      if ((checkRequiredDetails(paramActivity)) && (checkSmartWallintegration()))
      {
        isIntegrationIssue = false;
        Log.i("BunSDK", "AppId: " + Util.j());
        Log.i("BunSDK", "Caching enabled: " + paramBoolean);
        Util.d();
        cA = new b(paramActivity);
        paramAdListener = paramActivity.getSharedPreferences("sdkPrefs", 0);
        if ((paramAdListener == null) || (!paramAdListener.contains("SDKEnabled"))) {
          enableSDK(paramActivity, true);
        }
        handler = new Handler();
        if (validate(paramActivity)) {
          Util.a(paramActivity);
        }
        isShowOptinDialog = d.i(activity);
        if ((isShowOptinDialog) && (!AdActivity.a()) && (isDialogClosed))
        {
          isDialogClosed = false;
          new Thread(this.optinRunnable, "optin").start();
        }
      }
      else
      {
        isIntegrationIssue = true;
        return;
      }
    } while (isShowOptinDialog);
    info(paramActivity);
  }
  
  MA(Context paramContext)
  {
    try
    {
      isDialogClosed = true;
      isShowOptinDialog = d.i(paramContext);
      if (checkRequiredDetails(paramContext))
      {
        isIntegrationIssue = false;
        if ((isSDKEnabled(paramContext)) && (!isShowOptinDialog) && (isDialogClosed)) {
          info(paramContext);
        }
      }
      else
      {
        isIntegrationIssue = true;
        return;
      }
    }
    catch (Exception paramContext)
    {
      Util.a("error in MA() " + paramContext.getMessage());
    }
  }
  
  static boolean checkRequiredDetails(Context paramContext)
  {
    boolean bool1 = true;
    if (paramContext == null) {}
    try
    {
      Log.e("BunSDK", "Context is null.");
      sendIntegrationError("Context is null");
      bool1 = false;
      if (!getDataFromManifest(paramContext)) {
        bool1 = false;
      }
      if (!checkRequiredPermission(paramContext)) {
        bool1 = false;
      }
      if (!new p(paramContext).b()) {
        bool1 = false;
      }
      new d(paramContext).a();
      if (!Util.b(paramContext, LService.class))
      {
        Log.e("BunSDK", "Required LService not found in Manifest. Please add");
        bool1 = false;
      }
      boolean bool2 = isBootReceiverDeclared(paramContext);
      if (!bool2) {
        return false;
      }
    }
    catch (Exception paramContext)
    {
      Log.e("BunSDK", "Error occurred while checking required details: ", paramContext);
      return false;
    }
    return bool1;
  }
  
  private boolean checkSmartWallActivity()
    throws NullPointerException, Exception
  {
    if (!Util.a(activity, AdActivity.class))
    {
      Log.e("BunSDK", "Required AdActivity not found in Manifest. Please add.");
      sendIntegrationError("Required AdActivity not found in Manifest. Please add.");
      new n(activity, 103);
      return false;
    }
    return true;
  }
  
  private boolean checkSmartWallintegration()
  {
    boolean bool;
    try
    {
      bool = checkSmartWallActivity();
      if (!Util.a(activity, BrowserActivity.class))
      {
        Log.e("BunSDK", "Required BrowserActivity not found in Manifest. Please add.");
        sendIntegrationError("Required BrowserActivity not found in Manifest. Please add.");
        new n(activity, 104);
        return false;
      }
    }
    catch (Exception localException)
    {
      Log.e("BunSDK", "Error occurred while validating SmartWall: ", localException);
      return false;
    }
    return bool;
  }
  
  static AdListener.OptinListener getOptinListener()
  {
    return optinListener;
  }
  
  /* Error */
  private void info(final Context paramContext)
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: invokestatic 284	java/lang/System:currentTimeMillis	()J
    //   5: lstore_2
    //   6: lload_2
    //   7: getstatic 63	com/rbyqfmconb/wsyhvghvvq177359/MA:time	J
    //   10: lcmp
    //   11: ifge +61 -> 72
    //   14: getstatic 63	com/rbyqfmconb/wsyhvghvvq177359/MA:time	J
    //   17: lstore 4
    //   19: new 118	java/lang/StringBuilder
    //   22: dup
    //   23: invokespecial 119	java/lang/StringBuilder:<init>	()V
    //   26: ldc_w 286
    //   29: invokevirtual 125	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32: new 288	java/util/Date
    //   35: dup
    //   36: lload_2
    //   37: invokespecial 291	java/util/Date:<init>	(J)V
    //   40: invokevirtual 294	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   43: ldc_w 296
    //   46: invokevirtual 125	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   49: new 288	java/util/Date
    //   52: dup
    //   53: lload_2
    //   54: lload 4
    //   56: lsub
    //   57: invokespecial 291	java/util/Date:<init>	(J)V
    //   60: invokevirtual 294	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   63: invokevirtual 132	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   66: invokestatic 208	com/rbyqfmconb/wsyhvghvvq177359/Util:a	(Ljava/lang/String;)V
    //   69: aload_0
    //   70: monitorexit
    //   71: return
    //   72: aload_1
    //   73: invokestatic 201	com/rbyqfmconb/wsyhvghvvq177359/MA:isSDKEnabled	(Landroid/content/Context;)Z
    //   76: istore 6
    //   78: iload 6
    //   80: ifeq -11 -> 69
    //   83: ldc 30
    //   85: ldc_w 298
    //   88: invokestatic 83	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   91: pop
    //   92: new 16	com/rbyqfmconb/wsyhvghvvq177359/MA$4
    //   95: dup
    //   96: aload_0
    //   97: aload_1
    //   98: invokespecial 301	com/rbyqfmconb/wsyhvghvvq177359/MA$4:<init>	(Lcom/rbyqfmconb/wsyhvghvvq177359/MA;Landroid/content/Context;)V
    //   101: astore 7
    //   103: aload_1
    //   104: invokestatic 304	com/rbyqfmconb/wsyhvghvvq177359/Util:s	(Landroid/content/Context;)Z
    //   107: ifeq +10 -> 117
    //   110: aload 7
    //   112: invokeinterface 307 1 0
    //   117: aload_1
    //   118: new 309	android/content/Intent
    //   121: dup
    //   122: aload_1
    //   123: ldc -16
    //   125: invokespecial 312	android/content/Intent:<init>	(Landroid/content/Context;Ljava/lang/Class;)V
    //   128: invokevirtual 318	android/content/Context:startService	(Landroid/content/Intent;)Landroid/content/ComponentName;
    //   131: pop
    //   132: goto -63 -> 69
    //   135: astore_1
    //   136: ldc_w 320
    //   139: aload_1
    //   140: invokevirtual 321	java/lang/Exception:toString	()Ljava/lang/String;
    //   143: invokestatic 83	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   146: pop
    //   147: goto -78 -> 69
    //   150: astore_1
    //   151: aload_0
    //   152: monitorexit
    //   153: aload_1
    //   154: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	155	0	this	MA
    //   0	155	1	paramContext	Context
    //   5	49	2	l1	long
    //   17	38	4	l2	long
    //   76	3	6	bool	boolean
    //   101	10	7	local4	4
    // Exception table:
    //   from	to	target	type
    //   83	117	135	java/lang/Exception
    //   117	132	135	java/lang/Exception
    //   2	69	150	finally
    //   72	78	150	finally
    //   83	117	150	finally
    //   117	132	150	finally
    //   136	147	150	finally
  }
  
  static boolean isBootReceiverDeclared(Context paramContext)
  {
    try
    {
      if (paramContext.getPackageManager().queryBroadcastReceivers(new Intent(paramContext, BootReceiver.class), 0).size() == 0)
      {
        Log.i("BunSDK", "BootReceiver is not declared in Manifest. Please add.");
        sendIntegrationError("BootReceiver is not declared in Manifest. Please add.");
        return false;
      }
    }
    catch (Exception paramContext)
    {
      Util.a("Error occurred in isBootReceiverDeclared", paramContext);
    }
    return true;
  }
  
  public static void setOptinListener(AdListener.OptinListener paramOptinListener)
  {
    optinListener = paramOptinListener;
  }
  
  private void showOverlayAd(final String paramString)
  {
    int i;
    String str;
    try
    {
      Object localObject = new JSONObject(paramString);
      label39:
      label54:
      boolean bool;
      if (((JSONObject)localObject).isNull("status"))
      {
        i = 0;
        if (!((JSONObject)localObject).isNull("message")) {
          break label126;
        }
        str = "invalid";
        if (!((JSONObject)localObject).isNull("adtype")) {
          break label139;
        }
        paramString = "";
        if (!((JSONObject)localObject).isNull("error")) {
          break label151;
        }
        bool = false;
        label68:
        if ((i != 200) || (!str.equalsIgnoreCase("Success"))) {
          break label355;
        }
        if (!((JSONObject)localObject).isNull("data")) {
          break label164;
        }
      }
      label126:
      label139:
      label151:
      label164:
      for (str = "nodata";; str = ((JSONObject)localObject).getString("data"))
      {
        if (!str.equals("nodata")) {
          break label177;
        }
        return;
        i = ((JSONObject)localObject).getInt("status");
        break;
        str = ((JSONObject)localObject).getString("message");
        break label39;
        paramString = ((JSONObject)localObject).getString("adtype");
        break label54;
        bool = ((JSONObject)localObject).getBoolean("error");
        break label68;
      }
      label177:
      localObject = new JSONObject(str);
      str = ((JSONObject)localObject).getString("tag");
      i = ((JSONObject)localObject).getInt("height");
      int j = ((JSONObject)localObject).getInt("width");
      localObject = ((JSONObject)localObject).getString("api_url");
      m.d(paramString);
      m.c((String)localObject);
      m.a(bool);
      m.b(j);
      m.a(i);
      m.b(str);
      if ((paramString.equals("OLAU")) || (paramString.equals("DAU")) || (paramString.equals("DCC")) || (paramString.equals("DCM")))
      {
        new Thread(new Runnable()
        {
          public void run()
          {
            Intent localIntent = new Intent(MA.activity, AdActivity.class);
            localIntent.setFlags(268435456);
            localIntent.addFlags(8388608);
            localIntent.setAction("overlayad");
            localIntent.putExtra("adtype", paramString);
            MA.activity.startActivity(localIntent);
          }
        }, "overlay_showing").start();
        return;
      }
    }
    catch (Exception paramString)
    {
      Log.e("BunSDK", "Error occurred in overlay ad", paramString);
      return;
    }
    Log.w("BunSDK", "Invalid adtype delivered in overylay ad " + paramString);
    return;
    label355:
    validateStatusCode(i, str);
  }
  
  static void startNewAdThread()
  {
    try
    {
      handler.postDelayed(new Runnable()
      {
        public void run()
        {
          d.a(MA.activity);
        }
      }, 3000L);
      return;
    }
    catch (Exception localException)
    {
      d.a(activity);
    }
  }
  
  static final void validateStatusCode(int paramInt, String paramString)
  {
    if ((paramString == null) || (paramString.equals(""))) {
      return;
    }
    switch (paramInt)
    {
    default: 
      return;
    case 100: 
      sendIntegrationError(paramString);
      return;
    case 120: 
      sendIntegrationError(paramString);
      return;
    case 130: 
      sendIntegrationError(paramString);
      return;
    case 204: 
      sendNoAdMessage();
      return;
    }
    sendNoAdMessage();
  }
  
  public void callAppWall()
  {
    try
    {
      if ((!isDialogClosed) && (isShowOptinDialog))
      {
        SharedPreferences.Editor localEditor = activity.getSharedPreferences("eap", 0).edit();
        localEditor.putBoolean("appwall", true);
        localEditor.commit();
        return;
      }
      Log.i("BunSDK", "Initialising AppWall.....");
      if ((isIntegrationIssue) || (!checkSmartWallActivity())) {
        return;
      }
      if ((activity == null) || (!isSDKEnabled(activity))) {
        break label226;
      }
      if (d.c(activity) > System.currentTimeMillis())
      {
        Log.i("BunSDK", "AppWall called within 10 secs. Ignoring request");
        sendAdError("AppWall called within 10 secs. Ignoring request.");
        return;
      }
    }
    catch (Exception localException)
    {
      Log.e("BunSDK", "Error occurred in appwall ", localException);
      return;
    }
    if (AdActivity.a())
    {
      Log.i("BunSDK", "Another ad is showing on screen.");
      sendAdError("Another ad is showing on screen.");
      return;
    }
    if (cA == null) {
      cA = new b(activity);
    }
    if (cA.e(AdListener.AdType.appwall))
    {
      Log.i("BunSDK", "AppWall Ad already available in cache. Request ignored.");
      sendAdError("AppWall Ad already available in cache. Request Ignored.");
      return;
    }
    d.b(activity);
    a local6 = new a()
    {
      public void a()
      {
        try
        {
          ArrayList localArrayList = new ArrayList();
          new Thread(new l(MA.activity, this, localArrayList, "aHR0cHM6Ly9hcGkuYWlycHVzaC5jb20vYXBwd2FsbC9nZXRpZC5waHA=", 0L, true), "AppWall").start();
          return;
        }
        catch (NullPointerException localNullPointerException)
        {
          localNullPointerException.printStackTrace();
          return;
        }
        catch (Exception localException)
        {
          localException.printStackTrace();
        }
      }
      
      public void a(String paramAnonymousString)
      {
        Log.i("BunSDK", "AppWall Json: " + paramAnonymousString);
        if (paramAnonymousString == null) {
          return;
        }
        Object localObject;
        int i;
        for (;;)
        {
          try
          {
            if (!MA.enableCaching) {
              break label134;
            }
            localObject = new JSONObject(paramAnonymousString);
            if (((JSONObject)localObject).isNull("status"))
            {
              i = 0;
              if (!((JSONObject)localObject).isNull("message")) {
                break label118;
              }
              localObject = "invalid";
              if ((i != 200) || (!((String)localObject).equalsIgnoreCase("Success"))) {
                break;
              }
              MA.cA.a(AdListener.AdType.appwall, paramAnonymousString);
              o.sendAdCached(AdListener.AdType.appwall);
              return;
            }
          }
          catch (Exception paramAnonymousString)
          {
            paramAnonymousString.printStackTrace();
            return;
          }
          i = ((JSONObject)localObject).getInt("status");
          continue;
          label118:
          localObject = ((JSONObject)localObject).getString("message");
        }
        MA.validateStatusCode(i, (String)localObject);
        return;
        label134:
        MA.this.parseAppWallJson(paramAnonymousString);
      }
    };
    if (Util.s(activity))
    {
      local6.a();
      return;
      label226:
      Log.i("BunSDK", "MA is disabled Please enable to recive ads.");
      sendAdError("MA is disabled Please enable to recive ads.");
    }
  }
  
  public void callLandingPageAd()
  {
    try
    {
      if ((!isDialogClosed) && (isShowOptinDialog))
      {
        SharedPreferences.Editor localEditor = activity.getSharedPreferences("eap", 0).edit();
        localEditor.putBoolean("landingpagead", true);
        localEditor.commit();
        return;
      }
      Log.i("BunSDK", "Initialising LandingPage AD.....");
      if ((isIntegrationIssue) || (!checkSmartWallActivity())) {
        return;
      }
      if ((activity == null) || (!isSDKEnabled(activity))) {
        break label226;
      }
      if (d.c(activity) > System.currentTimeMillis())
      {
        Log.i("BunSDK", "LandingPage Ad called within 10 secs. Ignoring request");
        sendAdError("LandingPage Ad called within 10 secs. Ignoring request");
        return;
      }
    }
    catch (Exception localException)
    {
      Log.e("BunSDK", "Error occurred in LandingPage ad: ", localException);
      return;
    }
    if (AdActivity.a())
    {
      Log.i("BunSDK", "Another ad is showing on screen.");
      sendAdError("Another ad is showing on screen.");
      return;
    }
    if (cA == null) {
      cA = new b(activity);
    }
    if (cA.e(AdListener.AdType.landing_page))
    {
      Log.i("BunSDK", "LandingPage Ad already available in cache. Request ignored.");
      sendAdError("LandingPage Ad already available in cache. Request Ignored.");
      return;
    }
    d.b(activity);
    a local7 = new a()
    {
      public void a()
      {
        try
        {
          ArrayList localArrayList = new ArrayList();
          new Thread(new l(MA.activity, this, localArrayList, "aHR0cHM6Ly9hcGkuYWlycHVzaC5jb20vZnVsbHBhZ2UvYWRjYWxsLnBocA==", 0L, true), "LP").start();
          return;
        }
        catch (Exception localException) {}
      }
      
      public void a(String paramAnonymousString)
      {
        Log.i("BunSDK", "LandingPage Json: " + paramAnonymousString);
        if (paramAnonymousString == null) {
          return;
        }
        Object localObject;
        int i;
        for (;;)
        {
          try
          {
            if (!MA.enableCaching) {
              break label134;
            }
            localObject = new JSONObject(paramAnonymousString);
            if (((JSONObject)localObject).isNull("status"))
            {
              i = 0;
              if (!((JSONObject)localObject).isNull("message")) {
                break label118;
              }
              localObject = "invalid";
              if ((i != 200) || (!((String)localObject).equalsIgnoreCase("Success"))) {
                break;
              }
              MA.cA.a(AdListener.AdType.landing_page, paramAnonymousString);
              o.sendAdCached(AdListener.AdType.landing_page);
              return;
            }
          }
          catch (Exception paramAnonymousString)
          {
            paramAnonymousString.printStackTrace();
            return;
          }
          i = ((JSONObject)localObject).getInt("status");
          continue;
          label118:
          localObject = ((JSONObject)localObject).getString("message");
        }
        MA.validateStatusCode(i, (String)localObject);
        return;
        label134:
        MA.this.parseLandingPageAdJson(paramAnonymousString);
      }
    };
    if (Util.s(activity))
    {
      local7.a();
      return;
      label226:
      Log.i("BunSDK", "MA is disabled Please enable to recive ads.");
      sendAdError("MA is disabled Please enable to recive ads.");
    }
  }
  
  public void callOverlayAd()
  {
    try
    {
      if ((!isDialogClosed) && (isShowOptinDialog))
      {
        SharedPreferences.Editor localEditor = activity.getSharedPreferences("eap", 0).edit();
        localEditor.putBoolean("overylayad", true);
        localEditor.commit();
        return;
      }
      Log.i("BunSDK", "Initialising Overlay AD.....");
      if ((isIntegrationIssue) || (!checkSmartWallActivity())) {
        return;
      }
      if (!isSDKEnabled(activity)) {
        break label220;
      }
      if (d.c(activity) > System.currentTimeMillis())
      {
        Log.i("BunSDK", "Overlay Ad called within 10 secs. Ignoring request");
        sendAdError("Overlay Ad called within 10 secs. Ignoring request");
        return;
      }
    }
    catch (Exception localException)
    {
      Log.e("BunSDK", "Error occurred in Overlay ad: ", localException);
      return;
    }
    if (AdActivity.a())
    {
      Log.i("BunSDK", "Another ad is showing on screen.");
      sendAdError("Another ad is showing on screen.");
      return;
    }
    if (cA == null) {
      cA = new b(activity);
    }
    if (cA.e(AdListener.AdType.overlay))
    {
      Log.i("BunSDK", "Overlay Ad already available in cache. Request ignored.");
      sendAdError("Overlay Ad already available in cache. Request Ignored.");
      return;
    }
    d.b(activity);
    a local10 = new a()
    {
      public void a()
      {
        try
        {
          ArrayList localArrayList = new ArrayList();
          new Thread(new l(MA.activity, this, localArrayList, "aHR0cHM6Ly9hcGkuYWlycHVzaC5jb20vb3ZlcmxheWFkcy9vdmVybGF5YWRjYWxsLnBocA==", 0L, true), "overlay").start();
          return;
        }
        catch (Exception localException)
        {
          Log.e("BunSDK", "Error occurred in while requesting: ", localException);
        }
      }
      
      public void a(String paramAnonymousString)
      {
        Log.i("BunSDK", "Overlay Json: " + paramAnonymousString);
        if (paramAnonymousString == null) {
          return;
        }
        Object localObject;
        int i;
        for (;;)
        {
          try
          {
            if (!MA.enableCaching) {
              break label134;
            }
            localObject = new JSONObject(paramAnonymousString);
            if (((JSONObject)localObject).isNull("status"))
            {
              i = 0;
              if (!((JSONObject)localObject).isNull("message")) {
                break label118;
              }
              localObject = "invalid";
              if ((i != 200) || (!((String)localObject).equalsIgnoreCase("Success"))) {
                break;
              }
              MA.cA.a(AdListener.AdType.overlay, paramAnonymousString);
              o.sendAdCached(AdListener.AdType.overlay);
              return;
            }
          }
          catch (Exception paramAnonymousString)
          {
            paramAnonymousString.printStackTrace();
            return;
          }
          i = ((JSONObject)localObject).getInt("status");
          continue;
          label118:
          localObject = ((JSONObject)localObject).getString("message");
        }
        MA.validateStatusCode(i, (String)localObject);
        return;
        label134:
        MA.this.showOverlayAd(paramAnonymousString);
      }
    };
    if (Util.s(activity))
    {
      local10.a();
      return;
      label220:
      Log.i("BunSDK", "MA SDK is disabled Please enable to recive ads.");
      sendAdError("MA SDK is disabled Please enable to recive ads.");
    }
  }
  
  public void callSmartWallAd()
  {
    try
    {
      if ((!isDialogClosed) && (isShowOptinDialog))
      {
        SharedPreferences.Editor localEditor = activity.getSharedPreferences("eap", 0).edit();
        localEditor.putBoolean("interstitialads", true);
        localEditor.commit();
        return;
      }
      Log.i("BunSDK", "Initialising SmartWall.....");
      if ((isIntegrationIssue) || (!checkSmartWallintegration()) || (!q.a(activity))) {
        return;
      }
      if (!Util.a(activity, VActivity.class))
      {
        Log.e("BunSDK", "Required VActivity not found in Manifest. Please add");
        sendIntegrationError("Required VActivity not found in Manifest. Please add");
        new n(activity, 102);
        return;
      }
    }
    catch (Exception localException)
    {
      Log.e("BunSDK", "Error occurred in startSmartWall method: ", localException);
      return;
    }
    if ((activity != null) && (isSDKEnabled(activity)))
    {
      if (d.c(activity) > System.currentTimeMillis())
      {
        Log.i("BunSDK", "SmartWall Ad called within 10 secs. Request ignored.");
        sendAdError("SmartWall Ad called within 10 secs. Request ignored.");
        return;
      }
      if (AdActivity.a())
      {
        Log.i("BunSDK", "Another ad is showing on screen.");
        sendAdError("Another ad is showing on screen.");
        return;
      }
      if (cA == null) {
        cA = new b(activity);
      }
      if (cA.e(AdListener.AdType.smartwall))
      {
        Log.i("BunSDK", "SmartWall Ad already available in cache. Request ignored.");
        sendAdError("SmartWall Ad already available in cache. Request Ignored.");
        return;
      }
      d.b(activity);
      a local5 = new a()
      {
        public void a()
        {
          try
          {
            ArrayList localArrayList = new ArrayList();
            new Thread(new l(MA.activity, this, localArrayList, "aHR0cHM6Ly9hcGkuYWlycHVzaC5jb20vbHAvZ2V0aW50ZXJzdGl0aWFsYWRzLnBocA==", 0L, true), "SmartWall").start();
            return;
          }
          catch (Exception localException)
          {
            localException.printStackTrace();
          }
        }
        
        public void a(String paramAnonymousString)
        {
          Log.i("BunSDK", "SmartWall JSON: " + paramAnonymousString);
          if (paramAnonymousString == null) {
            return;
          }
          for (;;)
          {
            try
            {
              localObject = new JSONObject(paramAnonymousString);
              if (((JSONObject)localObject).isNull("status"))
              {
                i = 0;
                if (!((JSONObject)localObject).isNull("message")) {
                  break label189;
                }
                str = "";
                if (!((JSONObject)localObject).isNull("adtype")) {
                  break label200;
                }
                localObject = "";
                if ((i != 200) || (!str.equalsIgnoreCase("Success")) || (((String)localObject).equals(""))) {
                  break;
                }
                if (!MA.enableCaching) {
                  break label237;
                }
                if ((!paramAnonymousString.startsWith("<VAST>")) || (Build.VERSION.SDK_INT <= 7)) {
                  break label212;
                }
                new q(MA.activity).b(paramAnonymousString);
                MA.cA.a(AdListener.AdType.smartwall, paramAnonymousString);
                o.sendAdCached(AdListener.AdType.smartwall);
                MA.cA.a(true);
                return;
              }
            }
            catch (Exception paramAnonymousString)
            {
              Log.e("BunSDK", "Error: ", paramAnonymousString);
              return;
            }
            int i = ((JSONObject)localObject).getInt("status");
            continue;
            label189:
            String str = ((JSONObject)localObject).getString("message");
            continue;
            label200:
            Object localObject = ((JSONObject)localObject).getString("adtype");
          }
          label212:
          MA.cA.a(AdListener.AdType.smartwall, paramAnonymousString);
          o.sendAdCached(AdListener.AdType.smartwall);
          MA.cA.a(true);
          return;
          label237:
          MA.this.parseSmartwallJson(paramAnonymousString);
        }
      };
      if (Util.s(activity)) {
        local5.a();
      }
    }
    else
    {
      Log.i("BunSDK", "MA is disabled Please enable to recive ads.");
      sendAdError("MA is disabled Please enable to recive ads.");
    }
  }
  
  public void callVideoAd()
  {
    try
    {
      if (Build.VERSION.SDK_INT < 8)
      {
        Log.e("BunSDK", "Video ad supported on Android 2.2 and later devices.");
        sendAdError("Video ad supported on Android 2.2 and later devices.");
        return;
      }
      if ((!isDialogClosed) && (isShowOptinDialog))
      {
        SharedPreferences.Editor localEditor = activity.getSharedPreferences("eap", 0).edit();
        localEditor.putBoolean("videoad", true);
        localEditor.commit();
        return;
      }
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
      return;
    }
    Log.i("BunSDK", "Initialising video ad.....");
    if ((!isIntegrationIssue) && (q.a(activity)))
    {
      if (!Util.a(activity, VActivity.class))
      {
        Log.e("BunSDK", "Required VActivity not found in Manifest. Please add");
        sendIntegrationError("Required VActivity not found in Manifest. Please add");
        new n(activity, 102);
        return;
      }
      if (isSDKEnabled(activity))
      {
        Object localObject = Environment.getExternalStorageState();
        if ((localObject != null) && (((String)localObject).equalsIgnoreCase("mounted")))
        {
          if (AdActivity.a())
          {
            Log.w("BunSDK", "Another ad is already showing on screen.");
            sendAdError("Another ad is already showing on screen.");
            return;
          }
          if (System.currentTimeMillis() < d.e(activity))
          {
            Log.w("BunSDK", "Video ad is called before 30 secs. Ignoring request.");
            sendAdError("Video ad is called before 30 secs. Ignoring request.");
            return;
          }
          if (cA == null) {
            cA = new b(activity);
          }
          if (cA.e(AdListener.AdType.video))
          {
            Log.i("BunSDK", "Video Ad already available in cache. Request ignored.");
            sendAdError("Video Ad already available in cache. Request Ignored.");
            return;
          }
          localObject = new q(activity);
          if (Util.s(activity)) {
            ((q)localObject).a();
          }
        }
        else
        {
          Log.w("BunSDK", "Can't call video ad at this time. SD card not mounted.");
          sendAdError("Can't call video ad at this time. SD card not mounted.");
        }
      }
      else
      {
        Log.e("BunSDK", "MA is disabled please enable to receive ads.");
      }
    }
  }
  
  public void displayRichMediaInterstitialAd()
  {
    try
    {
      if ((!isDialogClosed) && (isShowOptinDialog))
      {
        SharedPreferences.Editor localEditor = activity.getSharedPreferences("eap", 0).edit();
        localEditor.putBoolean("rich_media", true);
        localEditor.commit();
        return;
      }
      Log.i("BunSDK", "Initialising Rich Media Interstitial Ad.....");
      if ((isIntegrationIssue) || (!checkSmartWallintegration())) {
        return;
      }
      if ((activity == null) || (!isSDKEnabled(activity))) {
        break label226;
      }
      if (d.c(activity) > System.currentTimeMillis())
      {
        Log.i("BunSDK", "Rich Media Interstitial Ad called within 10 secs. Ignoring request");
        sendAdError("Rich Media Interstitial Ad called within 10 secs. Ignoring request");
        return;
      }
    }
    catch (Exception localException)
    {
      Log.e("BunSDK", "Error occurred in Rich Media interstital ad: ", localException);
      return;
    }
    if (AdActivity.a())
    {
      Log.i("BunSDK", "Another ad is showing on screen.");
      sendAdError("Another ad is showing on screen.");
      return;
    }
    if (cA == null) {
      cA = new b(activity);
    }
    if (cA.e(AdListener.AdType.interstitial))
    {
      Log.i("BunSDK", "Rich media interstitial Ad already available in cache. Request ignored.");
      sendAdError("Rich media interstitial Ad already available in cache. Request Ignored.");
      return;
    }
    d.b(activity);
    a local8 = new a()
    {
      public void a()
      {
        try
        {
          ArrayList localArrayList = new ArrayList();
          localArrayList.add(new BasicNameValuePair("banner_type", "rich_media"));
          localArrayList.add(new BasicNameValuePair("supports", "" + Util.w(MA.activity)));
          localArrayList.add(new BasicNameValuePair("placement_type", "fullpage"));
          new Thread(new l(MA.activity, this, localArrayList, "aHR0cHM6Ly9hcGkuYWlycHVzaC5jb20vbXJhaWQvbXJhaWRhZGNhbGwucGhw", 0L, true), "AdView").start();
          return;
        }
        catch (Exception localException) {}
      }
      
      public void a(String paramAnonymousString)
      {
        Log.i("BunSDK", "Rich Media Ad Json: " + paramAnonymousString);
        if (paramAnonymousString == null) {
          return;
        }
        JSONObject localJSONObject;
        int i;
        String str1;
        for (;;)
        {
          try
          {
            localJSONObject = new JSONObject(paramAnonymousString);
            if (localJSONObject.isNull("status"))
            {
              i = 0;
              if (!localJSONObject.isNull("message")) {
                break label153;
              }
              str1 = "invalid";
              if (!localJSONObject.isNull("adtype")) {
                break label164;
              }
              str2 = null;
              if ((i != 200) || (!str1.equalsIgnoreCase("Success"))) {
                break label210;
              }
              if ((str2 != null) && (str2.equals("MFP"))) {
                break;
              }
              Log.w("BunSDK", "Invalid adtype: " + str2);
              return;
            }
          }
          catch (Exception paramAnonymousString)
          {
            paramAnonymousString.printStackTrace();
            return;
          }
          i = localJSONObject.getInt("status");
          continue;
          label153:
          str1 = localJSONObject.getString("message");
          continue;
          label164:
          String str2 = localJSONObject.getString("adtype");
        }
        if (MA.enableCaching)
        {
          MA.cA.a(AdListener.AdType.interstitial, paramAnonymousString);
          o.sendAdCached(AdListener.AdType.interstitial);
          return;
        }
        MA.this.parseRichMediaInterstitialJson(localJSONObject);
        return;
        label210:
        MA.validateStatusCode(i, str1);
      }
    };
    if (Util.s(activity))
    {
      local8.a();
      return;
      label226:
      Log.i("BunSDK", "MA is disabled Please enable to recive ads.");
      sendAdError("MA is disabled Please enable to recive ads.");
    }
  }
  
  void parseAppWallJson(String paramString)
  {
    try
    {
      Object localObject = new JSONObject(paramString);
      int i;
      if (((JSONObject)localObject).isNull("status"))
      {
        i = 0;
        if (!((JSONObject)localObject).isNull("message")) {
          break label165;
        }
      }
      label165:
      for (paramString = "";; paramString = ((JSONObject)localObject).getString("message"))
      {
        if ((i != 200) || (!paramString.equals("Success"))) {
          break label199;
        }
        paramString = ((JSONObject)localObject).getString("url");
        if ((paramString != null) && (!paramString.equals("")))
        {
          d.b(activity);
          localObject = new Intent(activity, AdActivity.class);
          ((Intent)localObject).setFlags(268435456);
          ((Intent)localObject).addFlags(536870912);
          ((Intent)localObject).addFlags(8388608);
          ((Intent)localObject).setAction("appwallad");
          ((Intent)localObject).putExtra("adtype", "AW");
          ((Intent)localObject).putExtra("url", paramString);
        }
        try
        {
          activity.startActivity((Intent)localObject);
          return;
        }
        catch (ActivityNotFoundException paramString)
        {
          Log.e("BunSDK", "Required SmartWallActivity not found in Manifest. Please add.");
          return;
        }
        i = ((JSONObject)localObject).getInt("status");
        break;
      }
      label199:
      return;
    }
    catch (JSONException paramString)
    {
      Log.e("BunSDK", "Error in AppWall json: ", paramString);
      return;
      validateStatusCode(i, paramString);
      return;
    }
    catch (Exception paramString)
    {
      Log.e("BunSDK", "Error in AppWall response: ", paramString);
    }
  }
  
  /* Error */
  void parseLandingPageAdJson(String paramString)
  {
    // Byte code:
    //   0: aload_1
    //   1: ifnull +160 -> 161
    //   4: new 350	org/json/JSONObject
    //   7: dup
    //   8: aload_1
    //   9: invokespecial 352	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   12: astore_3
    //   13: aload_3
    //   14: ldc_w 354
    //   17: invokevirtual 357	org/json/JSONObject:isNull	(Ljava/lang/String;)Z
    //   20: ifeq +142 -> 162
    //   23: sipush 200
    //   26: istore_2
    //   27: aload_3
    //   28: ldc_w 359
    //   31: invokevirtual 357	org/json/JSONObject:isNull	(Ljava/lang/String;)Z
    //   34: ifeq +139 -> 173
    //   37: ldc_w 361
    //   40: astore_1
    //   41: iload_2
    //   42: sipush 200
    //   45: if_icmpne +173 -> 218
    //   48: aload_1
    //   49: ldc_w 369
    //   52: invokevirtual 382	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   55: ifeq +163 -> 218
    //   58: aload_3
    //   59: ldc_w 632
    //   62: invokevirtual 357	org/json/JSONObject:isNull	(Ljava/lang/String;)Z
    //   65: ifeq +119 -> 184
    //   68: ldc_w 361
    //   71: astore_1
    //   72: aload_1
    //   73: ldc_w 361
    //   76: invokevirtual 382	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   79: ifne +82 -> 161
    //   82: getstatic 102	com/rbyqfmconb/wsyhvghvvq177359/MA:activity	Landroid/app/Activity;
    //   85: invokestatic 502	com/rbyqfmconb/wsyhvghvvq177359/d:b	(Landroid/content/Context;)Z
    //   88: pop
    //   89: new 309	android/content/Intent
    //   92: dup
    //   93: getstatic 102	com/rbyqfmconb/wsyhvghvvq177359/MA:activity	Landroid/app/Activity;
    //   96: ldc -75
    //   98: invokespecial 312	android/content/Intent:<init>	(Landroid/content/Context;Ljava/lang/Class;)V
    //   101: astore_3
    //   102: aload_3
    //   103: ldc_w 667
    //   106: invokevirtual 648	android/content/Intent:setAction	(Ljava/lang/String;)Landroid/content/Intent;
    //   109: pop
    //   110: aload_3
    //   111: ldc_w 633
    //   114: invokevirtual 637	android/content/Intent:setFlags	(I)Landroid/content/Intent;
    //   117: pop
    //   118: aload_3
    //   119: ldc_w 638
    //   122: invokevirtual 641	android/content/Intent:addFlags	(I)Landroid/content/Intent;
    //   125: pop
    //   126: aload_3
    //   127: ldc_w 642
    //   130: invokevirtual 641	android/content/Intent:addFlags	(I)Landroid/content/Intent;
    //   133: pop
    //   134: aload_3
    //   135: ldc_w 363
    //   138: ldc_w 669
    //   141: invokevirtual 654	android/content/Intent:putExtra	(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
    //   144: pop
    //   145: aload_3
    //   146: ldc_w 632
    //   149: aload_1
    //   150: invokevirtual 654	android/content/Intent:putExtra	(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
    //   153: pop
    //   154: getstatic 102	com/rbyqfmconb/wsyhvghvvq177359/MA:activity	Landroid/app/Activity;
    //   157: aload_3
    //   158: invokevirtual 658	android/app/Activity:startActivity	(Landroid/content/Intent;)V
    //   161: return
    //   162: aload_3
    //   163: ldc_w 354
    //   166: invokevirtual 386	org/json/JSONObject:getInt	(Ljava/lang/String;)I
    //   169: istore_2
    //   170: goto -143 -> 27
    //   173: aload_3
    //   174: ldc_w 359
    //   177: invokevirtual 390	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   180: astore_1
    //   181: goto -140 -> 41
    //   184: aload_3
    //   185: ldc_w 632
    //   188: invokevirtual 390	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   191: astore_1
    //   192: goto -120 -> 72
    //   195: astore_1
    //   196: ldc 30
    //   198: ldc_w 660
    //   201: invokestatic 88	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;)I
    //   204: pop
    //   205: return
    //   206: astore_1
    //   207: ldc 30
    //   209: ldc_w 671
    //   212: aload_1
    //   213: invokestatic 253	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   216: pop
    //   217: return
    //   218: iload_2
    //   219: aload_1
    //   220: invokestatic 440	com/rbyqfmconb/wsyhvghvvq177359/MA:validateStatusCode	(ILjava/lang/String;)V
    //   223: return
    //   224: astore_1
    //   225: ldc 30
    //   227: ldc_w 673
    //   230: aload_1
    //   231: invokestatic 253	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   234: pop
    //   235: return
    //   236: astore_1
    //   237: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	238	0	this	MA
    //   0	238	1	paramString	String
    //   26	193	2	i	int
    //   12	173	3	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   154	161	195	android/content/ActivityNotFoundException
    //   4	23	206	org/json/JSONException
    //   27	37	206	org/json/JSONException
    //   48	68	206	org/json/JSONException
    //   72	154	206	org/json/JSONException
    //   154	161	206	org/json/JSONException
    //   162	170	206	org/json/JSONException
    //   173	181	206	org/json/JSONException
    //   184	192	206	org/json/JSONException
    //   196	205	206	org/json/JSONException
    //   218	223	206	org/json/JSONException
    //   4	23	224	java/lang/Exception
    //   27	37	224	java/lang/Exception
    //   48	68	224	java/lang/Exception
    //   72	154	224	java/lang/Exception
    //   162	170	224	java/lang/Exception
    //   173	181	224	java/lang/Exception
    //   184	192	224	java/lang/Exception
    //   196	205	224	java/lang/Exception
    //   218	223	224	java/lang/Exception
    //   154	161	236	java/lang/Exception
  }
  
  void parseRichMediaInterstitialJson(JSONObject paramJSONObject)
  {
    try
    {
      parseMraidJson = new JP.ParseMraidJson(activity, paramJSONObject);
      paramJSONObject = Util.v(activity);
      if ((paramJSONObject != null) && (!paramJSONObject.equals("")))
      {
        d.b(activity);
        paramJSONObject = new Intent(activity, AdActivity.class);
        paramJSONObject.setAction("mfpad");
        paramJSONObject.setFlags(268435456);
        paramJSONObject.addFlags(8388608);
        paramJSONObject.addFlags(536870912);
        paramJSONObject.putExtra("adtype", "MFP");
        activity.startActivity(paramJSONObject);
        return;
      }
      paramJSONObject = new a()
      {
        public void a()
        {
          new Thread(new Util.NativeMraid(MA.activity, this), "native").start();
        }
        
        public void a(Boolean paramAnonymousBoolean)
        {
          if (paramAnonymousBoolean.booleanValue())
          {
            d.b(MA.activity);
            paramAnonymousBoolean = new Intent(MA.activity, AdActivity.class);
            paramAnonymousBoolean.setAction("mfpad");
            paramAnonymousBoolean.setFlags(268435456);
            paramAnonymousBoolean.addFlags(8388608);
            paramAnonymousBoolean.addFlags(536870912);
            paramAnonymousBoolean.putExtra("adtype", "MFP");
            MA.activity.startActivity(paramAnonymousBoolean);
            return;
          }
          Log.e("BunSDK", "Not able to get doc.");
        }
      };
      if (Util.s(activity))
      {
        paramJSONObject.a();
        return;
      }
    }
    catch (JSONException paramJSONObject)
    {
      paramJSONObject.printStackTrace();
      return;
    }
    catch (IOException paramJSONObject)
    {
      Log.i("BunSDK", "Rich Media Full Page: " + paramJSONObject.getMessage());
      return;
    }
    catch (Exception paramJSONObject)
    {
      paramJSONObject.printStackTrace();
    }
  }
  
  void parseSmartwallJson(String paramString)
  {
    JSONObject localJSONObject;
    int i;
    String str1;
    String str2;
    try
    {
      if ((paramString.startsWith("<VAST>")) && (Build.VERSION.SDK_INT > 7))
      {
        new q(activity).b(paramString);
        return;
      }
      localJSONObject = new JSONObject(paramString);
      if (!localJSONObject.isNull("status")) {
        break label134;
      }
      i = 0;
    }
    catch (JSONException paramString)
    {
      for (;;)
      {
        Log.e("BunSDK", "Error in Smart Wall json: ", paramString);
        return;
        i = localJSONObject.getInt("status");
        continue;
        str1 = localJSONObject.getString("message");
        continue;
        str2 = localJSONObject.getString("adtype");
      }
      if ((!str2.equals("OLAU")) && (!str2.equals("DAU")) && (!str2.equals("DCC")) && (!str2.equals("DCM"))) {
        break label233;
      }
      showOverlayAd(paramString);
      return;
    }
    catch (Exception paramString)
    {
      Log.e("BunSDK", "Error in Smart Wall response: ", paramString);
      return;
    }
    if (localJSONObject.isNull("message"))
    {
      str1 = "";
      if (!localJSONObject.isNull("adtype")) {
        break label158;
      }
      str2 = "";
      if ((i != 200) || (str2.equals(""))) {
        break label318;
      }
      if (!str2.equalsIgnoreCase("AW")) {
        break label171;
      }
      parseAppWallJson(paramString);
    }
    label134:
    label158:
    label171:
    label233:
    if ((!str2.equals("")) && (str2.equalsIgnoreCase("FP")))
    {
      parseLandingPageAdJson(paramString);
      return;
    }
    if ((!str2.equals("")) && (str2.equalsIgnoreCase("MFP")))
    {
      parseRichMediaInterstitialJson(localJSONObject);
      return;
    }
    Log.i("BunSDK", "Invalid ad type delivered in SmartWall: " + str2);
    return;
    label318:
    validateStatusCode(i, str1);
  }
  
  public void showCachedAd(Activity paramActivity, AdListener.AdType paramAdType)
    throws Exception
  {
    try
    {
      if (!isDialogClosed) {
        throw new IllegalStateException("EULA is showing on screen.");
      }
    }
    catch (Exception paramActivity)
    {
      Log.e("BunSDK", "Error occurred while showing Cache ad: " + paramActivity.getMessage());
      throw new Exception(paramActivity.getMessage());
    }
    if ((paramActivity == null) || (paramAdType == null))
    {
      Log.e("BunSDK", "Activity or Adtype is null.");
      throw new IllegalStateException("Activity or Adtype is null.");
    }
    activity = paramActivity;
    if (!isSDKEnabled(paramActivity)) {
      throw new IllegalStateException("MA SDK is disabled can not show ad.");
    }
    if (AdActivity.a()) {
      throw new IllegalStateException("Another ad is showing on screen.");
    }
    if (!Util.s(paramActivity)) {
      throw new IllegalStateException("Internet connection not available.");
    }
    if (cA == null) {
      cA = new b(paramActivity);
    }
    switch (3.a[paramAdType.ordinal()])
    {
    }
    for (;;)
    {
      throw new IOException("Invalid AdType.");
      paramAdType = cA.a(AdListener.AdType.smartwall);
      if ((paramAdType != null) && (!paramAdType.equals("")))
      {
        if ((paramAdType.startsWith("<VAST>")) && (Build.VERSION.SDK_INT > 7))
        {
          localObject = cA.b(AdListener.AdType.video);
          paramAdType = localObject[0];
          localObject = localObject[1];
          if ((paramAdType != null) && (!paramAdType.equals("")) && (localObject != null) && (!((String)localObject).equals("")))
          {
            new q(paramActivity).a(paramAdType, (String)localObject);
            return;
          }
          Log.e("BunSDK", "SmartWall video was not cached");
          throw new IOException("SmartWall ad is not available in cache");
        }
        parseSmartwallJson(paramAdType);
        return;
      }
      throw new IOException("SmartWall ad is not available in cache");
      paramActivity = cA.a(AdListener.AdType.appwall);
      if ((paramActivity != null) && (!paramActivity.equals("")))
      {
        parseAppWallJson(paramActivity);
        return;
      }
      throw new IOException("Appwall ad is not available in cache");
      paramActivity = cA.a(AdListener.AdType.landing_page);
      if ((paramActivity != null) && (!paramActivity.equals("")))
      {
        parseLandingPageAdJson(paramActivity);
        return;
      }
      throw new IOException("Landingpage ad is not available in cache");
      paramActivity = cA.a(AdListener.AdType.interstitial);
      if ((paramActivity != null) && (!paramActivity.equals("")))
      {
        parseRichMediaInterstitialJson(new JSONObject(paramActivity));
        return;
      }
      throw new IOException("Interstitial ad is not available in cache");
      Object localObject = cA.b(AdListener.AdType.video);
      paramAdType = localObject[0];
      localObject = localObject[1];
      if ((paramAdType != null) && (!paramAdType.equals("")) && (localObject != null) && (!((String)localObject).equals("")))
      {
        new q(paramActivity).a(paramAdType, (String)localObject);
        return;
      }
      throw new IOException("Video ad is not available in cache");
      paramActivity = cA.a(AdListener.AdType.overlay);
      if ((paramActivity != null) && (!paramActivity.equals("")))
      {
        showOverlayAd(paramActivity);
        return;
      }
      throw new IOException("Overlay ad is not available in cache");
    }
  }
}
