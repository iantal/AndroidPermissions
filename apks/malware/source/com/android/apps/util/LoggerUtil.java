package com.android.apps.util;

import android.content.Context;
import android.util.Log;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Map;

public final class LoggerUtil
{
  private static final String LOG_TAG = "Logger";
  private static final Class<?>[] getLoggerParams = { Context.class, String.class };
  private static final Class<?>[] onEvent2Params;
  private static final Class<?>[] onEvent3Params;
  private static final Class<?>[] onEventParams;
  private static final Class<?>[] onPauseParams;
  private static final Class<?>[] onResumeParams = { Context.class };
  private static final Class<?>[] sendMapParams;
  private static final Class<?>[] sendParams;
  private static String tinybeeAppId;
  
  static
  {
    onPauseParams = new Class[] { Context.class };
    onEventParams = new Class[] { Context.class, String.class };
    onEvent2Params = new Class[] { Context.class, String.class, String.class };
    onEvent3Params = new Class[] { Context.class, String.class, Map.class };
    sendParams = new Class[] { String.class };
    sendMapParams = new Class[] { String.class, Map.class };
  }
  
  public LoggerUtil() {}
  
  private static Object getTinybeeLogger(Context paramContext)
  {
    return Class.forName("me.gall.tinybee.LoggerManager").getMethod("getLogger", getLoggerParams).invoke(null, new Object[] { paramContext, tinybeeAppId });
  }
  
  public static void log(Context paramContext, String paramString)
  {
    try
    {
      Class.forName("com.umeng.analytics.MobclickAgent").getMethod("onEvent", onEventParams).invoke(null, new Object[] { paramContext, paramString });
      if (tinybeeAppId == null) {}
    }
    catch (Exception localException)
    {
      for (;;)
      {
        try
        {
          Class.forName("me.gall.tinybee.Logger").getMethod("send", sendParams).invoke(getTinybeeLogger(paramContext), new Object[] { paramString });
          return;
        }
        catch (Exception paramContext)
        {
          Log.w("Logger", paramContext);
        }
        localException = localException;
        Log.w("Logger", localException);
      }
    }
  }
  
  public static void log(Context paramContext, String paramString1, String paramString2)
  {
    try
    {
      Class.forName("com.umeng.analytics.MobclickAgent").getMethod("onEvent", onEvent2Params).invoke(null, new Object[] { paramContext, paramString1, paramString2 });
      if (tinybeeAppId == null) {}
    }
    catch (Exception localException)
    {
      for (;;)
      {
        try
        {
          HashMap localHashMap = new HashMap();
          localHashMap.put("value", paramString2);
          Class.forName("me.gall.tinybee.Logger").getMethod("send", sendMapParams).invoke(getTinybeeLogger(paramContext), new Object[] { paramString1, localHashMap });
          return;
        }
        catch (Exception paramContext)
        {
          Log.w("Logger", paramContext);
        }
        localException = localException;
        Log.w("Logger", localException);
      }
    }
  }
  
  public static void log(Context paramContext, String paramString1, String paramString2, String paramString3)
  {
    HashMap localHashMap = new HashMap();
    localHashMap.put(paramString2, paramString3);
    log(paramContext, paramString1, localHashMap);
  }
  
  public static void log(Context paramContext, String paramString, Map<String, String> paramMap)
  {
    try
    {
      Class.forName("com.umeng.analytics.MobclickAgent").getMethod("onEvent", onEvent3Params).invoke(null, new Object[] { paramContext, paramString, paramMap });
      if (tinybeeAppId == null) {}
    }
    catch (Exception localException)
    {
      for (;;)
      {
        try
        {
          Class.forName("me.gall.tinybee.Logger").getMethod("send", sendMapParams).invoke(getTinybeeLogger(paramContext), new Object[] { paramString, paramMap });
          return;
        }
        catch (Exception paramContext)
        {
          Log.w("Logger", paramContext);
        }
        localException = localException;
        Log.w("Logger", localException);
      }
    }
  }
  
  public static void pause(Context paramContext)
  {
    try
    {
      Class.forName("com.umeng.analytics.MobclickAgent").getMethod("onPause", onPauseParams).invoke(null, new Object[] { paramContext });
      if (tinybeeAppId == null) {}
    }
    catch (Exception localException)
    {
      for (;;)
      {
        try
        {
          Class.forName("me.gall.tinybee.Logger").getMethod("onPause", onPauseParams).invoke(getTinybeeLogger(paramContext), new Object[] { paramContext });
          return;
        }
        catch (Exception paramContext)
        {
          Log.w("Logger", paramContext);
        }
        localException = localException;
        Log.w("Logger", localException);
      }
    }
  }
  
  public static void resume(Context paramContext)
  {
    try
    {
      Class.forName("com.umeng.analytics.MobclickAgent").getMethod("onResume", onResumeParams).invoke(null, new Object[] { paramContext });
      if (tinybeeAppId == null) {}
    }
    catch (Exception localException)
    {
      for (;;)
      {
        try
        {
          Class.forName("me.gall.tinybee.Logger").getMethod("onResume", onResumeParams).invoke(getTinybeeLogger(paramContext), new Object[] { paramContext });
          return;
        }
        catch (Exception paramContext)
        {
          Log.w("Logger", paramContext);
        }
        localException = localException;
        Log.w("Logger", localException);
      }
    }
  }
  
  public static void setTinybeeAppId(String paramString)
  {
    tinybeeAppId = paramString;
  }
}
