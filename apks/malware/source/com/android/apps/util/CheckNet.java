package com.android.apps.util;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.telephony.TelephonyManager;
import android.util.Log;

public class CheckNet
{
  public static String LOG_TAG = "CheckNet";
  public Context context;
  
  public CheckNet() {}
  
  public static ConnectivityManager getConnectivityManager()
  {
    return (ConnectivityManager)SystemProject.mContext.getSystemService("connectivity");
  }
  
  public static TelephonyManager getTelephonyManager()
  {
    return (TelephonyManager)SystemProject.mContext.getSystemService("phone");
  }
  
  public static final boolean isConnect()
  {
    return (isWifiEnable()) || (isDataConnectionEnable());
  }
  
  public static final boolean isDataConnectionEnable()
  {
    bool1 = true;
    if (SystemProject.mContext.checkCallingOrSelfPermission("android.permission.ACCESS_NETWORK_STATE") != 0) {
      return true;
    }
    for (;;)
    {
      try
      {
        boolean bool2 = getConnectivityManager().getNetworkInfo(0).isConnectedOrConnecting();
        if (bool2 != true) {
          continue;
        }
      }
      catch (Exception localException)
      {
        String str;
        int i;
        Log.w(LOG_TAG, localException);
        bool1 = false;
        continue;
      }
      str = LOG_TAG;
      new StringBuilder("DataConnect state: ").append(bool1).toString();
      return bool1;
      i = getTelephonyManager().getDataState();
      if (i != 2) {
        bool1 = false;
      }
    }
  }
  
  public static final boolean isWifiEnable()
  {
    bool1 = true;
    if ((SystemProject.mContext != null) && (SystemProject.mContext.checkCallingOrSelfPermission("android.permission.ACCESS_NETWORK_STATE") != 0)) {
      return true;
    }
    try
    {
      boolean bool2 = getConnectivityManager().getNetworkInfo(1).isConnected();
      if (bool2 != true) {
        break label69;
      }
    }
    catch (Exception localException)
    {
      for (;;)
      {
        String str;
        Log.w(LOG_TAG, localException);
        bool1 = false;
      }
    }
    str = LOG_TAG;
    new StringBuilder("Wifi state: ").append(bool1).toString();
    return bool1;
  }
}
