package com.android.apps.util;

import android.app.Application;
import android.content.Context;
import android.content.res.AssetManager;
import android.content.res.Resources;
import android.os.Environment;
import com.android.apps.bean.AdAdvertisement;
import com.android.apps.bean.AdInfo;
import com.google.gson.Gson;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.IOUtils;

public class SystemProject
  extends Application
{
  public static Context mContext;
  
  public SystemProject() {}
  
  public static boolean checkSDcard()
  {
    String str = AdManager.LOG_TAG;
    new StringBuilder("Environment ExternalStorageState:").append(Environment.getExternalStorageState()).toString();
    str = AdManager.LOG_TAG;
    new StringBuilder("Environment ExternalStorageDirectory:").append(Environment.getExternalStorageDirectory()).toString();
    str = AdManager.LOG_TAG;
    new StringBuilder("Environment ExternalStorageState writable:").append(Environment.getExternalStorageDirectory().canWrite()).toString();
    return (Environment.getExternalStorageState().equals("mounted")) && (Environment.getExternalStorageDirectory().canWrite());
  }
  
  public static void initSDPath()
  {
    Object localObject1;
    Object localObject4;
    Object localObject7;
    Object localObject9;
    Object localObject8;
    if (checkSDcard())
    {
      Config.GAME_365_PATH = Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + "365game";
      Config.SOFT_360_PATH = Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + "360soft";
      localObject1 = new ArrayList();
      localObject4 = new File(Config.GAME_365_PATH);
      localObject7 = new File(Config.SOFT_360_PATH);
      ((List)localObject1).add(localObject4);
      ((List)localObject1).add(localObject7);
      localObject1 = ((List)localObject1).iterator();
      while (((Iterator)localObject1).hasNext())
      {
        localObject4 = (File)((Iterator)localObject1).next();
        if (!((File)localObject4).exists()) {
          ((File)localObject4).mkdirs();
        }
      }
      Config.GAME_BASE_PATH = Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + "Mercury";
      Config.AD_APK_PATH = Config.GAME_BASE_PATH + File.separator + "adApk";
      Config.IMAGE_TEMP = Config.GAME_BASE_PATH + File.separator + "temp";
      localObject4 = new File(Config.GAME_BASE_PATH);
      localObject1 = new File(Config.IMAGE_TEMP);
      if (!((File)localObject4).exists())
      {
        ((File)localObject4).mkdir();
        new UserInfo().initInfo();
        localObject7 = new File(Config.GAME_BASE_PATH + File.separator, "inedAd.txt");
        localObject9 = new File(Config.GAME_BASE_PATH + File.separator, "adInfo.txt");
        localObject8 = new File(Config.GAME_BASE_PATH + File.separator, "downloadFail.txt");
        localObject4 = new File(Config.GAME_BASE_PATH + File.separator, "handDownloadFail.txt");
      }
    }
    HashMap localHashMap;
    Object localObject10;
    label751:
    label1356:
    int i;
    label1379:
    String str;
    File localFile;
    Object localObject11;
    int j;
    do
    {
      Object localObject2;
      for (;;)
      {
        try
        {
          localObject7 = new FileOutputStream((File)localObject7);
          localObject9 = new FileOutputStream((File)localObject9);
          localObject8 = new FileOutputStream((File)localObject8);
          localObject4 = new FileOutputStream((File)localObject4);
          ((FileOutputStream)localObject7).flush();
          ((FileOutputStream)localObject7).close();
          ((FileOutputStream)localObject9).flush();
          ((FileOutputStream)localObject9).close();
          ((FileOutputStream)localObject8).flush();
          ((FileOutputStream)localObject8).close();
          ((FileOutputStream)localObject4).flush();
          ((FileOutputStream)localObject4).close();
          if (!((File)localObject1).exists()) {
            ((File)localObject1).mkdir();
          }
          localObject1 = new File(Config.AD_APK_PATH);
          if (!((File)localObject1).exists()) {
            ((File)localObject1).mkdir();
          }
          try
          {
            localObject9 = mContext.getAssets();
            localObject1 = Config.AD_APK_PATH;
            localObject8 = null;
            if (((AssetManager)localObject9).list("apk").length != 0)
            {
              localObject1 = IOUtils.toString(mContext.getResources().getAssets().open("ad.json"), "UTF-8");
              localObject7 = ((AdInfo)new Gson().fromJson((String)localObject1, AdInfo.class)).getAds();
              localHashMap = new HashMap();
              if ((Config.GAME_365_PATH == null) || ("".equals(Config.GAME_365_PATH)) || (Config.SOFT_360_PATH == null) || ("".equals(Config.SOFT_360_PATH))) {
                break label2059;
              }
              localObject4 = new File(Config.SOFT_360_PATH);
              localObject1 = new File(Config.GAME_365_PATH);
              if ((localObject7 == null) || (((List)localObject7).size() <= 0)) {
                break label1356;
              }
              localObject7 = ((List)localObject7).iterator();
              if (!((Iterator)localObject7).hasNext()) {
                break label1356;
              }
              localObject10 = (AdAdvertisement)((Iterator)localObject7).next();
              localHashMap.put(((AdAdvertisement)localObject10).getApkName(), Integer.valueOf(((AdAdvertisement)localObject10).getCategoryId()));
              continue;
            }
            return;
          }
          catch (Exception localException1)
          {
            localException1.printStackTrace();
          }
        }
        catch (Exception localException3)
        {
          localException3.printStackTrace();
          continue;
        }
        Config.GAME_365_PATH = mContext.getFilesDir().getAbsolutePath() + File.separator + "365game";
        Config.SOFT_360_PATH = mContext.getFilesDir().getAbsolutePath() + File.separator + "360soft";
        localObject2 = new File(Config.GAME_365_PATH);
        Object localObject5 = new File(Config.SOFT_360_PATH);
        localObject7 = new ArrayList();
        ((List)localObject7).add(localObject2);
        ((List)localObject7).add(localObject5);
        localObject2 = ((List)localObject7).iterator();
        while (((Iterator)localObject2).hasNext())
        {
          localObject5 = (File)((Iterator)localObject2).next();
          if (!((File)localObject5).exists()) {
            ((File)localObject5).mkdirs();
          }
        }
        new StringBuilder("手机内存：").append(mContext.getFilesDir().getAbsolutePath()).append(File.separator).append("Mercury").toString();
        Config.GAME_BASE_PATH = mContext.getFilesDir().getAbsolutePath() + File.separator + "Mercury";
        Config.AD_APK_PATH = Config.GAME_BASE_PATH + File.separator + "adApk";
        Config.IMAGE_TEMP = Config.GAME_BASE_PATH + File.separator + "temp";
        localObject5 = new File(Config.GAME_BASE_PATH);
        localObject2 = new File(Config.IMAGE_TEMP);
        if (!((File)localObject5).exists())
        {
          ((File)localObject5).mkdir();
          new UserInfo().initInfo();
          localObject7 = new File(Config.GAME_BASE_PATH + File.separator, "inedAd.txt");
          localObject9 = new File(Config.GAME_BASE_PATH + File.separator, "adInfo.txt");
          localObject8 = new File(Config.GAME_BASE_PATH + File.separator, "downloadFail.txt");
          localObject5 = new File(Config.GAME_BASE_PATH + File.separator, "handDownloadFail.txt");
        }
        try
        {
          localObject7 = new FileOutputStream((File)localObject7);
          localObject9 = new FileOutputStream((File)localObject9);
          localObject8 = new FileOutputStream((File)localObject8);
          localObject5 = new FileOutputStream((File)localObject5);
          ((FileOutputStream)localObject7).flush();
          ((FileOutputStream)localObject7).close();
          ((FileOutputStream)localObject9).flush();
          ((FileOutputStream)localObject9).close();
          ((FileOutputStream)localObject8).flush();
          ((FileOutputStream)localObject8).close();
          ((FileOutputStream)localObject5).flush();
          ((FileOutputStream)localObject5).close();
          if (!((File)localObject2).exists()) {
            ((File)localObject2).mkdir();
          }
          localObject2 = new File(Config.AD_APK_PATH);
          if (!((File)localObject2).exists()) {
            ((File)localObject2).mkdir();
          }
        }
        catch (Exception localException4)
        {
          for (;;)
          {
            localException4.printStackTrace();
          }
        }
      }
      if (!checkSDcard()) {
        break;
      }
      localObject10 = ((AssetManager)localObject9).list("apk");
      localObject7 = null;
      localObject8 = null;
      i = 0;
      if (i < localObject10.length)
      {
        localObject8 = ((AssetManager)localObject9).open("apk" + File.separator + localObject10[i]);
        if (new File(Config.AD_APK_PATH + "/l_" + localObject10[i].substring(0, localObject10[i].lastIndexOf(".")) + ".apk").exists()) {
          break label2066;
        }
        str = localObject10[i].substring(0, localObject10[i].lastIndexOf("."));
        localFile = new File(Config.AD_APK_PATH + "/l_" + localObject10[i].substring(0, localObject10[i].lastIndexOf(".")) + ".apk");
        localObject7 = new FileOutputStream(localFile);
        localObject11 = new byte['ࠀ'];
        for (;;)
        {
          j = ((InputStream)localObject8).read((byte[])localObject11);
          if (j <= 0) {
            break;
          }
          ((FileOutputStream)localObject7).write((byte[])localObject11, 0, j);
        }
        ((FileOutputStream)localObject7).flush();
        ((FileOutputStream)localObject7).close();
        if ((!localHashMap.containsKey(str)) || (localObject2 == null) || (!((File)localObject2).exists()) || (localException4 == null) || (!localException4.exists())) {
          break label2066;
        }
        if (((Integer)localHashMap.get(str)).intValue() == 1) {
          FileUtils.copyFileToDirectory(localFile, localException4);
        }
        if (((Integer)localHashMap.get(str)).intValue() != 2) {
          break label2066;
        }
        FileUtils.copyFileToDirectory(localFile, (File)localObject2);
        break label2066;
      }
      if (localObject7 != null)
      {
        ((FileOutputStream)localObject7).flush();
        ((FileOutputStream)localObject7).close();
      }
    } while (localObject8 == null);
    ((InputStream)localObject8).close();
    return;
    for (;;)
    {
      try
      {
        localObject10 = ((AssetManager)localObject9).list("apk");
        localObject7 = null;
        i = 0;
        if (i >= localObject10.length) {
          break label2033;
        }
        localObject8 = ((AssetManager)localObject9).open("apk" + File.separator + localObject10[i]);
        str = localObject10[i].substring(0, localObject10[i].lastIndexOf("."));
        localFile = new File(mContext.getFilesDir().getAbsolutePath() + File.separator + localObject10[i].substring(0, localObject10[i].lastIndexOf(".")) + ".apk");
        localObject7 = mContext;
        localObject11 = localObject10[i].substring(0, localObject10[i].lastIndexOf(".")) + ".apk";
        Context localContext = mContext;
        localObject7 = ((Context)localObject7).openFileOutput((String)localObject11, 1);
        localObject11 = new byte['Ѐ'];
        j = ((InputStream)localObject8).read((byte[])localObject11);
        if (j > 0)
        {
          ((FileOutputStream)localObject7).write((byte[])localObject11, 0, j);
          continue;
        }
        ((FileOutputStream)localObject7).flush();
      }
      catch (Exception localException2)
      {
        localException2.printStackTrace();
        return;
      }
      ((FileOutputStream)localObject7).close();
      if ((localException4 != null) && (localException4.exists()) && (localException2 != null) && (localException2.exists()))
      {
        if (((Integer)localHashMap.get(str)).intValue() == 1) {
          FileUtils.copyFileToDirectory(localFile, localException4);
        }
        if (((Integer)localHashMap.get(str)).intValue() == 2)
        {
          FileUtils.copyFileToDirectory(localFile, localException2);
          break label2073;
          label2033:
          if (localObject7 != null)
          {
            ((FileOutputStream)localObject7).flush();
            ((FileOutputStream)localObject7).close();
          }
          if (localObject8 == null) {
            break label751;
          }
          ((InputStream)localObject8).close();
          return;
          label2059:
          Object localObject3 = null;
          Object localObject6 = null;
          break;
          label2066:
          i += 1;
          break label1379;
        }
      }
      label2073:
      i += 1;
    }
  }
  
  public void onCreate()
  {
    super.onCreate();
    mContext = getApplicationContext();
  }
  
  public void onLowMemory()
  {
    super.onLowMemory();
  }
}
