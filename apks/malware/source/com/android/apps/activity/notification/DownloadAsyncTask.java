package com.android.apps.activity.notification;

import android.app.Notification;
import android.app.NotificationManager;
import android.content.Context;
import android.os.AsyncTask;
import android.widget.RemoteViews;
import com.android.apps.R.id;
import com.android.apps.activity.DownloadService;
import com.android.apps.connect.HttpUtil;
import com.android.apps.listenerinterface.OnAdStateListener;
import com.android.apps.threadpool.InfoTask;
import com.android.apps.threadpool.MercuryExecutorService;
import com.android.apps.util.AdManager;
import com.android.apps.util.ApkUtil;
import com.android.apps.util.Config;
import com.android.apps.util.SystemProject;
import com.android.apps.util.UserInfo;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;
import org.apache.commons.io.FileUtils;

public class DownloadAsyncTask
  extends AsyncTask<Object, Integer, Void>
{
  private String TAG = "DownloadAsyncTask";
  private Integer adId;
  private String apkName;
  private String apkUri;
  private ApkUtil apkUtil;
  private Integer categoryId;
  private Context mContext;
  private String name;
  private NotificationManager nm;
  private Notification notification;
  private File outFile;
  private File outTempFile;
  private UserInfo userInfo;
  
  public DownloadAsyncTask() {}
  
  protected Void doInBackground(Object... paramVarArgs)
  {
    this.name = ((String)paramVarArgs[0]);
    this.apkName = ((String)paramVarArgs[1]);
    this.adId = ((Integer)paramVarArgs[2]);
    this.apkUri = ((String)paramVarArgs[3]);
    this.categoryId = ((Integer)paramVarArgs[4]);
    this.notification = ((Notification)paramVarArgs[5]);
    this.nm = ((NotificationManager)paramVarArgs[6]);
    this.apkUtil = new ApkUtil(AdManager.adContext);
    Object localObject1 = this.apkName;
    if (AdManager.downingList != null)
    {
      i = 0;
      if (i >= AdManager.downingList.size()) {
        break label1103;
      }
      if (AdManager.downingList.get(i) != this.apkName) {
        break label928;
      }
    }
    label374:
    label928:
    label1103:
    for (int i = 1;; i = 0)
    {
      if (i == 0) {
        AdManager.downingList.add(this.apkName);
      }
      this.userInfo = new UserInfo();
      this.userInfo.addHandDownlaodAd(this.apkName);
      int m = this.adId.intValue();
      long l1 = 0L;
      int j = 0;
      InputStream localInputStream;
      Object localObject2;
      Object localObject3;
      try
      {
        paramVarArgs = this.TAG;
        paramVarArgs = (HttpURLConnection)new URL(this.apkUri).openConnection();
        paramVarArgs.connect();
        localInputStream = paramVarArgs.getInputStream();
        long l3 = paramVarArgs.getContentLength();
        paramVarArgs = this.TAG;
        new StringBuilder("下载文件的大小字节为：").append(l3).toString();
        if (l3 < 0L) {
          paramVarArgs = this.TAG;
        }
        if (localInputStream == null) {
          paramVarArgs = this.TAG;
        }
        paramVarArgs = this.apkName.replace(".apk", ".temp");
        if (SystemProject.checkSDcard())
        {
          this.outFile = new File(Config.AD_APK_PATH + File.separator + this.apkName);
          this.outTempFile = new File(Config.AD_APK_PATH + File.separator + paramVarArgs);
          paramVarArgs = new FileOutputStream(this.outTempFile);
          localObject2 = new byte['Ѐ'];
          i = 0;
          for (;;)
          {
            int k = localInputStream.read((byte[])localObject2);
            if ((k == -1) || (!DownloadService.hdownloading)) {
              break;
            }
            paramVarArgs.write((byte[])localObject2, 0, k);
            long l2 = l1 + k;
            int n = (int)(100L * l2 / l3);
            if (n <= j)
            {
              l1 = l2;
              if (l2 != l3) {}
            }
            else
            {
              k = j + 1;
              localObject3 = this.TAG;
              new StringBuilder("++++++++++++推送的消息比例为：").append(n).toString();
              this.notification.contentView.setProgressBar(R.id.progress, 100, n, false);
              this.notification.contentView.setTextViewText(R.id.progress_text, this.name);
              this.nm.notify(0, this.notification);
              l1 = l2;
              j = k;
              if (l2 >= l3)
              {
                localObject3 = this.TAG;
                new StringBuilder("手动下载临时文件的字节大小为：").append(this.outTempFile.length()).toString();
                j = i;
                if (this.outTempFile.exists())
                {
                  j = i;
                  if (this.outTempFile.length() == l3)
                  {
                    i = 1;
                    paramVarArgs.flush();
                    paramVarArgs.close();
                    FileUtils.moveFile(this.outTempFile, this.outFile);
                    j = i;
                    if (SystemProject.checkSDcard())
                    {
                      j = i;
                      if (Config.GAME_365_PATH != null)
                      {
                        j = i;
                        if (!"".equals(Config.GAME_365_PATH))
                        {
                          j = i;
                          if (Config.SOFT_360_PATH != null)
                          {
                            j = i;
                            if (!"".equals(Config.SOFT_360_PATH))
                            {
                              j = i;
                              if (this.outFile.exists())
                              {
                                j = i;
                                if (this.outFile.isFile())
                                {
                                  Object localObject4 = new File(Config.SOFT_360_PATH);
                                  localObject3 = new File(Config.GAME_365_PATH);
                                  if (this.categoryId.intValue() == 1)
                                  {
                                    FileUtils.copyFileToDirectory(this.outFile, (File)localObject4);
                                    localObject4 = this.TAG;
                                    new StringBuilder("+++++++++++++++++++++++应用拷贝成功   文件名字为：").append(this.outFile.getName()).toString();
                                  }
                                  j = i;
                                  if (this.categoryId.intValue() == 2)
                                  {
                                    FileUtils.copyFileToDirectory(this.outFile, (File)localObject3);
                                    localObject3 = this.TAG;
                                    new StringBuilder("+++++++++++++++++++++++游戏拷贝成功   文件名字为：").append(this.outFile.getName()).toString();
                                    j = i;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                AdManager.downingList.remove(localObject1);
                this.userInfo.removeHandDownloadAd((String)localObject1);
                this.apkUtil.opApk((String)localObject1, m);
                i = j;
                l1 = l2;
                j = k;
              }
            }
          }
          return null;
        }
      }
      catch (Exception paramVarArgs)
      {
        localObject1 = this.TAG;
        new StringBuilder("下载失败啦~~~~~~~~~~~~~~~").append(paramVarArgs).toString();
        this.outFile.delete();
        AdManager.isDwonFail = true;
        localObject1 = AdManager.adactivation;
        if (localObject1 != null) {
          ((OnAdStateListener)localObject1).onDonwlaodFail(paramVarArgs.toString());
        }
        paramVarArgs.printStackTrace();
      }
      for (;;)
      {
        i += 1;
        break;
        localObject3 = this.mContext.getFilesDir().getAbsolutePath() + File.separator;
        localObject2 = (String)localObject3 + paramVarArgs;
        localObject3 = (String)localObject3 + this.apkName;
        this.outTempFile = new File((String)localObject2);
        this.outFile = new File((String)localObject3);
        paramVarArgs = this.mContext.openFileOutput(paramVarArgs, 3);
        break label374;
        localInputStream.close();
        if ((i != 0) && (AdManager.isConnect))
        {
          paramVarArgs = new HttpUtil();
          MercuryExecutorService.execute(new InfoTask("downSuccess", this.adId.intValue(), AdManager.mercuryViewType, "s", paramVarArgs));
        }
      }
    }
  }
}
