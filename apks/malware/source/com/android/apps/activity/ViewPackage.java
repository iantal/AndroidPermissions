package com.android.apps.activity;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.android.apps.R.drawable;
import com.android.apps.R.id;
import com.android.apps.R.layout;
import com.android.apps.bean.AdAdvertisement;
import com.android.apps.connect.HttpUtil;
import com.android.apps.listenerinterface.OnAdStateListener;
import com.android.apps.threadpool.MercuryExecutorService;
import com.android.apps.threadpool.Task;
import com.android.apps.util.AdManager;
import com.android.apps.util.ApkUtil;
import com.android.apps.util.CheckNet;
import com.android.apps.util.ImageLoader;
import com.android.apps.util.ImageLoader.CallbackImpl;
import com.android.apps.util.ImageLoader.ImageCallback;
import com.android.apps.util.PackageAdapter;
import com.android.apps.util.ToastUtil;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ViewPackage
  extends Activity
{
  public static final int ADTYPE = 1;
  public static boolean FIRETTIME = false;
  private static int adNum = 0;
  public static boolean erInternet = false;
  public static List<AdAdvertisement> listNvAd;
  public static Context mContext;
  public static int nvAdNum = 0;
  public static RelativeLayout rl;
  public TextView adInfo;
  public TextView adName;
  PackageAdapter adapter;
  private ApkUtil apkUtil;
  private int backNum = 0;
  private HttpUtil httpUtil;
  private List<Map<String, Object>> listItem;
  private ListView listView;
  private Button nextButton;
  public ImageView packageImage;
  SharedPreferences preferences;
  private Button setupButton;
  private ToastUtil toastUtil;
  
  public ViewPackage() {}
  
  private List<Map<String, Object>> getListItem()
  {
    ArrayList localArrayList = new ArrayList();
    String[] arrayOfString = ((AdAdvertisement)listNvAd.get(adNum)).getDetails().split("_%_");
    int i = 0;
    while (i < arrayOfString.length)
    {
      HashMap localHashMap = new HashMap();
      localHashMap.put("details", arrayOfString[i]);
      localArrayList.add(localHashMap);
      i += 1;
    }
    return localArrayList;
  }
  
  private void setAdapter()
  {
    setPackageImage();
    this.listItem = getListItem();
    this.adapter = new PackageAdapter(this.listItem, adNum, this);
    this.listView.setAdapter(this.adapter);
  }
  
  private void setPackageImage()
  {
    Object localObject2 = ((AdAdvertisement)listNvAd.get(adNum)).getsIconUrl();
    Object localObject1 = localObject2;
    if (!((String)localObject2).startsWith("http")) {
      localObject1 = AdManager.dpiStr + (String)localObject2;
    }
    localObject2 = new ImageLoader.CallbackImpl(this.packageImage);
    localObject1 = new ImageLoader().initImage((String)localObject1, this.packageImage, mContext, (ImageLoader.ImageCallback)localObject2);
    if (localObject1 == null) {
      this.packageImage.setImageResource(R.drawable.mercury_nullimagelist);
    }
    for (;;)
    {
      this.adName.setText(((AdAdvertisement)listNvAd.get(adNum)).getName());
      this.adInfo.setText(((AdAdvertisement)listNvAd.get(adNum)).getApkInfo());
      return;
      this.packageImage.setImageBitmap((Bitmap)localObject1);
    }
  }
  
  protected void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    new StringBuilder("requestCode").append(paramInt1).append("..").append(paramInt2).toString();
    boolean bool;
    if (paramInt1 == 1024)
    {
      bool = CheckNet.isConnect();
      new StringBuilder("重新判断网络连接！").append(bool).toString();
      if ((bool) || (AdManager.sdkVersion.equals("15"))) {
        break label134;
      }
      if ((listNvAd != null) && (listNvAd.size() != 0) && (!AdManager.isConnect) && (((AdAdvertisement)listNvAd.get(0)).getApkUrl().equals(" "))) {
        AdManager.openConnect(listNvAd, this);
      }
    }
    for (;;)
    {
      super.onActivityResult(paramInt1, paramInt2, paramIntent);
      return;
      label134:
      AdManager.isConnect = bool;
      AdManager.getAd();
      AdManager.adViewDestory();
      AdManager.initAdView();
    }
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    requestWindowFeature(1);
    getWindow().setFlags(1024, 1024);
    setContentView(R.layout.adviewpackage);
    this.httpUtil = new HttpUtil();
    this.apkUtil = new ApkUtil(this);
    this.apkUtil.initState();
    mContext = this;
    this.toastUtil = new ToastUtil(mContext);
    AdManager.adContext = mContext;
    com.android.apps.util.UserInfo.mContext = this;
    this.listView = ((ListView)findViewById(R.id.adviewpackage_listview));
    this.listView.setDividerHeight(0);
    this.listView.setEnabled(true);
    this.packageImage = ((ImageView)findViewById(R.id.adviewpackage_imageview));
    this.adName = ((TextView)findViewById(R.id.adviewapckage_text1));
    this.adInfo = ((TextView)findViewById(R.id.adviewapckage_text2));
    this.setupButton = ((Button)findViewById(R.id.adviewpackage_button1));
    this.nextButton = ((Button)findViewById(R.id.adviewpackage_button2));
    ImageLoader.context = this;
    if (AdManager.erInternet) {
      this.toastUtil.toast("网络连接异常，请您稍后再试。");
    }
    paramBundle = AdManager.listNvAd;
    listNvAd = paramBundle;
    AdManager.openConnect(paramBundle, this);
    if (listNvAd != null)
    {
      setAdapter();
      this.setupButton.setOnClickListener(new View.OnClickListener()
      {
        public final void onClick(View paramAnonymousView)
        {
          AdManager.currentAd = (AdAdvertisement)ViewPackage.listNvAd.get(ViewPackage.adNum);
          if ((((AdAdvertisement)ViewPackage.listNvAd.get(ViewPackage.adNum)).getApkUrl() != null) && (!((AdAdvertisement)ViewPackage.listNvAd.get(ViewPackage.adNum)).getApkUrl().equals(" ")))
          {
            paramAnonymousView = ViewPackage.this.apkUtil.getKindOfApkName(((AdAdvertisement)ViewPackage.listNvAd.get(ViewPackage.adNum)).getApkName());
            if (AdManager.isConnect) {
              MercuryExecutorService.execute(new Task("package", ((AdAdvertisement)ViewPackage.listNvAd.get(ViewPackage.adNum)).getId(), "-1", "1", "-1", ViewPackage.this.httpUtil));
            }
            if (paramAnonymousView == null) {
              break label184;
            }
            ViewPackage.this.apkUtil.opApk(paramAnonymousView, ((AdAdvertisement)ViewPackage.listNvAd.get(ViewPackage.adNum)).getId());
          }
          label184:
          do
          {
            return;
            ViewPackage.this.toastUtil.toast("开始下载，下载完成后自动安装。");
            ViewPackage.this.apkUtil.downApk(((AdAdvertisement)ViewPackage.listNvAd.get(ViewPackage.adNum)).getName(), ((AdAdvertisement)ViewPackage.listNvAd.get(ViewPackage.adNum)).getApkName() + ".apk", ((AdAdvertisement)ViewPackage.listNvAd.get(ViewPackage.adNum)).getId(), ((AdAdvertisement)ViewPackage.listNvAd.get(ViewPackage.adNum)).getCategoryId(), ((AdAdvertisement)ViewPackage.listNvAd.get(ViewPackage.adNum)).getApkUrl());
          } while (!AdManager.isConnect);
          MercuryExecutorService.execute(new Task("package", ((AdAdvertisement)ViewPackage.listNvAd.get(ViewPackage.adNum)).getId(), "1", "-1", "-1", ViewPackage.this.httpUtil));
        }
      });
      this.nextButton.setOnClickListener(new View.OnClickListener()
      {
        public final void onClick(View paramAnonymousView)
        {
          ViewPackage.access$012(1);
          if (ViewPackage.adNum > ViewPackage.listNvAd.size() - 1) {
            ViewPackage.access$002(0);
          }
          ViewPackage.this.setAdapter();
          if (AdManager.isConnect) {
            MercuryExecutorService.execute(new Task("package", "-1", "-1", "-1", "1", ViewPackage.this.httpUtil));
          }
        }
      });
    }
    AdManager.checkQuietlyDownloadPermission(this);
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if (this.backNum <= 0)
    {
      this.backNum += 1;
      this.toastUtil.toast("退出安装则游戏无法被激活，再按一次退出程序。");
      return false;
    }
    if ((paramInt == 4) && (paramKeyEvent.getRepeatCount() == 0))
    {
      OnAdStateListener localOnAdStateListener = AdManager.adactivation;
      if (localOnAdStateListener != null) {
        localOnAdStateListener.onBack();
      }
    }
    return super.onKeyDown(paramInt, paramKeyEvent);
  }
  
  protected void onPause()
  {
    super.onPause();
  }
  
  protected void onPostResume()
  {
    super.onPostResume();
  }
  
  protected void onRestart()
  {
    super.onRestart();
  }
  
  protected void onResume()
  {
    super.onResume();
  }
  
  protected void onStart()
  {
    super.onStart();
  }
  
  protected void onStop()
  {
    super.onStop();
  }
}
