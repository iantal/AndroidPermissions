package com.android.apps.activity;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.RelativeLayout;
import com.android.apps.R.id;
import com.android.apps.R.layout;
import com.android.apps.bean.AdAdvertisement;
import com.android.apps.connect.HttpUtil;
import com.android.apps.listenerinterface.OnAdStateListener;
import com.android.apps.threadpool.MercuryExecutorService;
import com.android.apps.threadpool.Task;
import com.android.apps.util.AdManager;
import com.android.apps.util.ApkUtil;
import com.android.apps.util.CheckNet;
import com.android.apps.util.ThreeAdapter;
import com.android.apps.util.ToastUtil;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class ViewThree
  extends Activity
{
  public static final int ADTYPE = 1;
  public static int adNum = 0;
  public static int allAdNum;
  public static boolean erInternet = false;
  public static List<AdAdvertisement> listNvAd;
  public static List<Map<String, Object>> listitem;
  public static Context mContext;
  public static int nvAdNum = 0;
  public static int poAdNum;
  ThreeAdapter adapter;
  private ApkUtil apkUtil;
  private int backNum = 0;
  public ImageButton changeButton;
  private HttpUtil httpUtil;
  private List<Map<String, Object>> listItem;
  private ListView listView;
  SharedPreferences preferences;
  RelativeLayout relativeLayout;
  private ToastUtil toastUtil;
  
  static
  {
    allAdNum = 0;
    poAdNum = 0;
  }
  
  public ViewThree() {}
  
  private List<Map<String, Object>> getListItem()
  {
    listitem = new ArrayList();
    Iterator localIterator = listNvAd.iterator();
    while (localIterator.hasNext())
    {
      AdAdvertisement localAdAdvertisement = (AdAdvertisement)localIterator.next();
      HashMap localHashMap = new HashMap();
      String str2 = localAdAdvertisement.getsIconUrl();
      String str1 = str2;
      if (!str2.startsWith("http")) {
        str1 = AdManager.dpiStr + str2;
      }
      localHashMap.put("image", str1);
      localHashMap.put("adId", Integer.valueOf(localAdAdvertisement.getId()));
      localHashMap.put("appName", localAdAdvertisement.getName());
      localHashMap.put("appInfo", localAdAdvertisement.getApkInfo());
      localHashMap.put("apkUrl", localAdAdvertisement.getApkUrl());
      localHashMap.put("apkName", localAdAdvertisement.getApkName());
      localHashMap.put("startApk", Boolean.valueOf(localAdAdvertisement.isApkStart()));
      localHashMap.put("packageName", localAdAdvertisement.getApkPackage());
      localHashMap.put("categoryId", Integer.valueOf(localAdAdvertisement.getCategoryId()));
      listitem.add(localHashMap);
    }
    return listitem;
  }
  
  private void setAdapter()
  {
    this.listItem = getListItem();
    this.adapter = new ThreeAdapter(this.listItem, this);
    this.listView.setAdapter(this.adapter);
  }
  
  protected void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    boolean bool;
    if (paramInt1 == 1024)
    {
      bool = CheckNet.isConnect();
      new StringBuilder("重新判断网络连接！").append(bool).toString();
      if ((bool) || (AdManager.sdkVersion.equals("15"))) {
        break label61;
      }
      AdManager.openConnect(listNvAd, this);
    }
    for (;;)
    {
      super.onActivityResult(paramInt1, paramInt2, paramIntent);
      return;
      label61:
      AdManager.isConnect = bool;
      AdManager.getAd();
      AdManager.adViewDestory();
      AdManager.initAdView();
    }
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setContentView(R.layout.adviewthree);
    new IntentFilter("android.net.conn.CONNECTIVITY_CHANGE");
    this.httpUtil = new HttpUtil();
    this.apkUtil = new ApkUtil(this);
    this.apkUtil.initState();
    mContext = this;
    this.toastUtil = new ToastUtil(mContext);
    AdManager.adContext = mContext;
    com.android.apps.util.UserInfo.mContext = this;
    this.listView = ((ListView)findViewById(R.id.adviewthree_listview));
    this.changeButton = ((ImageButton)findViewById(R.id.adViewthree_Imagebutton));
    this.relativeLayout = ((RelativeLayout)findViewById(R.id.adviewthree_relayout));
    com.android.apps.util.ImageLoader.context = this;
    listNvAd = new ArrayList();
    if (AdManager.erInternet) {
      this.toastUtil.toast("网络连接异常，请您稍后再试。");
    }
    paramBundle = AdManager.listNvAd;
    listNvAd = paramBundle;
    AdManager.openConnect(paramBundle, this);
    if (listNvAd != null)
    {
      setAdapter();
      this.changeButton.setOnClickListener(new View.OnClickListener()
      {
        public final void onClick(View paramAnonymousView)
        {
          paramAnonymousView = new ArrayList();
          if (ViewThree.listNvAd.size() > 3)
          {
            int i = 0;
            while (i < 3)
            {
              paramAnonymousView.add(ViewThree.listNvAd.get(i));
              i += 1;
            }
            ViewThree.listNvAd.removeAll(paramAnonymousView);
            ViewThree.listNvAd.addAll(paramAnonymousView);
          }
          ViewThree.this.setAdapter();
          if (AdManager.isConnect) {
            MercuryExecutorService.execute(new Task("three", "-1", "-1", "-1", "1", ViewThree.this.httpUtil));
          }
        }
      });
      if ((listNvAd.size() <= 3) && (this.relativeLayout != null)) {
        this.relativeLayout.setVisibility(4);
      }
    }
    AdManager.checkQuietlyDownloadPermission(this);
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if (this.backNum <= 0)
    {
      this.backNum += 1;
      this.toastUtil.toast("退出安装则游戏无法被激活，再按一次退出程序。");
      return false;
    }
    if ((paramInt == 4) && (paramKeyEvent.getRepeatCount() == 0))
    {
      OnAdStateListener localOnAdStateListener = AdManager.adactivation;
      if (localOnAdStateListener != null) {
        localOnAdStateListener.onBack();
      }
    }
    return super.onKeyDown(paramInt, paramKeyEvent);
  }
}
