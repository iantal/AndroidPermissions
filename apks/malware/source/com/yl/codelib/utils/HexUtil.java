package com.yl.codelib.utils;

import java.io.UnsupportedEncodingException;

public class HexUtil
{
  public HexUtil() {}
  
  public static String byte2String(byte[] paramArrayOfByte)
  {
    try
    {
      paramArrayOfByte = new String(paramArrayOfByte, "utf-8");
      return paramArrayOfByte;
    }
    catch (UnsupportedEncodingException paramArrayOfByte) {}
    return null;
  }
  
  public static String hexDecode(String paramString)
  {
    paramString = paramString.toCharArray();
    byte[] arrayOfByte = new byte[paramString.length];
    int i = 0;
    for (;;)
    {
      if (i >= paramString.length) {}
      try
      {
        paramString = new String(arrayOfByte, "UTF-8");
        return paramString;
      }
      catch (UnsupportedEncodingException paramString) {}
      arrayOfByte[i] = ((byte)paramString[i]);
      i += 1;
    }
    return null;
  }
  
  public static String hexEncode(String paramString)
  {
    char[] arrayOfChar = null;
    try
    {
      paramString = paramString.getBytes("UTF-8");
      arrayOfChar = new char[paramString.length];
      int i = 0;
      for (;;)
      {
        if (i >= paramString.length) {
          return new String(arrayOfChar);
        }
        arrayOfChar[i] = ((char)(paramString[i] & 0xFF));
        i += 1;
      }
    }
    catch (UnsupportedEncodingException paramString)
    {
      for (;;)
      {
        paramString = arrayOfChar;
      }
    }
  }
  
  public static String str2HexStr(String paramString)
  {
    char[] arrayOfChar = "0123456789ABCDEF".toCharArray();
    StringBuilder localStringBuilder = new StringBuilder("");
    paramString = paramString.getBytes();
    localStringBuilder.append("{ ");
    int i = 0;
    for (;;)
    {
      if (i >= paramString.length)
      {
        localStringBuilder.append("}");
        return localStringBuilder.toString().trim();
      }
      int j = paramString[i];
      localStringBuilder.append("(byte) 0x");
      localStringBuilder.append(arrayOfChar[((j & 0xF0) >> 4)]);
      localStringBuilder.append(arrayOfChar[(paramString[i] & 0xF)]);
      localStringBuilder.append(", ");
      i += 1;
    }
  }
  
  public static String toHexString(String paramString)
  {
    String str1 = "";
    int i = 0;
    for (;;)
    {
      if (i >= paramString.length()) {
        return str1;
      }
      String str2 = Integer.toHexString(paramString.charAt(i));
      str1 = str1 + str2;
      i += 1;
    }
  }
}
