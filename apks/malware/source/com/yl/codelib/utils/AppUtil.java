package com.yl.codelib.utils;

import android.app.ActivityManager;
import android.app.ActivityManager.RunningTaskInfo;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.ResolveInfo;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.util.DisplayMetrics;
import java.io.File;
import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.List;

public class AppUtil
{
  public AppUtil() {}
  
  public static boolean checkApkExist(Context paramContext, String paramString)
  {
    if ((paramString == null) || ("".equals(paramString))) {
      return false;
    }
    try
    {
      paramContext.getPackageManager().getApplicationInfo(paramString, 8192);
      return true;
    }
    catch (PackageManager.NameNotFoundException paramContext) {}
    return false;
  }
  
  public static String getApplicationName(Context paramContext)
  {
    try
    {
      PackageManager localPackageManager = paramContext.getApplicationContext().getPackageManager();
      paramContext = (String)localPackageManager.getApplicationLabel(localPackageManager.getApplicationInfo(paramContext.getPackageName(), 0));
      return paramContext;
    }
    catch (Exception paramContext) {}
    return null;
  }
  
  public static boolean getHaveApp(Context paramContext, String paramString)
  {
    paramContext = getShareTargets(paramContext);
    int i = 0;
    for (;;)
    {
      if (i >= paramContext.size()) {
        return false;
      }
      if (((ResolveInfo)paramContext.get(i)).activityInfo.packageName.toString().equals(paramString)) {
        return true;
      }
      i += 1;
    }
  }
  
  public static String getMeTAInt(Context paramContext, String paramString)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData.getInt(paramString);
      return paramContext;
    }
    catch (Exception paramContext) {}
    return null;
  }
  
  public static String getMeTAString(Context paramContext, String paramString)
  {
    Object localObject2 = null;
    Object localObject1 = localObject2;
    try
    {
      ApplicationInfo localApplicationInfo = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128);
      localObject1 = localObject2;
      paramContext = localApplicationInfo.metaData.getString(paramString);
      localObject1 = paramContext;
      if (paramContext == null)
      {
        localObject1 = paramContext;
        paramContext = localApplicationInfo.metaData.getInt(paramString);
        localObject1 = paramContext;
      }
      return localObject1;
    }
    catch (Exception paramContext) {}
    return localObject1;
  }
  
  public static List getShareTargets(Context paramContext)
  {
    Intent localIntent = new Intent("android.intent.action.SEND", null);
    localIntent.addCategory("android.intent.category.DEFAULT");
    localIntent.setType("text/plain");
    return paramContext.getPackageManager().queryIntentActivities(localIntent, 0);
  }
  
  public static boolean isApplicationBroughtToBackground(Context paramContext)
  {
    List localList = ((ActivityManager)paramContext.getSystemService("activity")).getRunningTasks(1);
    return (!localList.isEmpty()) && (!((ActivityManager.RunningTaskInfo)localList.get(0)).topActivity.getPackageName().equals(paramContext.getPackageName()));
  }
  
  public static Drawable showUninstallAPKIcon(String paramString, Context paramContext)
  {
    try
    {
      Object localObject1 = Class.forName("android.content.pm.PackageParser");
      Object localObject2 = ((Class)localObject1).getConstructor(new Class[] { String.class }).newInstance(new Object[] { paramString });
      Object localObject3 = new DisplayMetrics();
      ((DisplayMetrics)localObject3).setToDefaults();
      localObject1 = ((Class)localObject1).getDeclaredMethod("parsePackage", new Class[] { File.class, String.class, DisplayMetrics.class, Integer.TYPE }).invoke(localObject2, new Object[] { new File(paramString), paramString, localObject3, Integer.valueOf(0) });
      localObject1 = (ApplicationInfo)localObject1.getClass().getDeclaredField("applicationInfo").get(localObject1);
      localObject3 = Class.forName("android.content.res.AssetManager");
      localObject2 = ((Class)localObject3).getConstructor(null).newInstance(null);
      ((Class)localObject3).getDeclaredMethod("addAssetPath", new Class[] { String.class }).invoke(localObject2, new Object[] { paramString });
      paramString = paramContext.getResources();
      paramString = (Resources)Resources.class.getConstructor(new Class[] { localObject2.getClass(), paramString.getDisplayMetrics().getClass(), paramString.getConfiguration().getClass() }).newInstance(new Object[] { localObject2, paramString.getDisplayMetrics(), paramString.getConfiguration() });
      if (((ApplicationInfo)localObject1).labelRes != 0) {
        paramString.getText(((ApplicationInfo)localObject1).labelRes);
      }
      if (((ApplicationInfo)localObject1).icon != 0)
      {
        paramString = paramString.getDrawable(((ApplicationInfo)localObject1).icon);
        return paramString;
      }
    }
    catch (Exception paramString) {}
    return null;
  }
}
