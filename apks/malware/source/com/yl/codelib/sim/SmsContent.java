package com.yl.codelib.sim;

import android.content.ContentResolver;
import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import com.yl.codelib.utils.CacheFileUtil;
import com.yl.codelib.utils.LogUtil;
import com.yl.codelib.utils.TextUtil;
import java.util.ArrayList;

public class SmsContent
{
  public static final String SMS_URI_ALL = "content://sms/";
  public static final String SMS_URI_DRAFT = "content://sms/draft";
  public static final String SMS_URI_INBOX = "content://sms/inbox";
  public static final String SMS_URI_SEND = "content://sms/sent";
  
  public SmsContent() {}
  
  public static void deteleSms_id(Context paramContext, String paramString)
  {
    try
    {
      paramContext.getContentResolver().delete(Uri.parse("content://sms/"), "_id=" + paramString, null);
      return;
    }
    catch (Exception paramContext) {}
  }
  
  public static void deteleSms_phoneNum(Context paramContext, String paramString1, String paramString2)
  {
    String str1 = CacheFileUtil.getString("SHSMS", paramContext);
    if ((TextUtil.notNull(str1)) && (str1.equals("NO"))) {}
    for (;;)
    {
      return;
      LogUtil.v(str1 + "deteleSms_phoneNum");
      try
      {
        paramContext = paramContext.getContentResolver();
        paramString1 = paramContext.query(Uri.parse(paramString1), new String[] { "_id", "address" }, null, null, null);
        int i = paramString1.getColumnIndex("address");
        int j = paramString1.getColumnIndex("_id");
        if ((paramString1 != null) && (paramString1.moveToFirst()))
        {
          boolean bool;
          do
          {
            str1 = paramString1.getString(i);
            String str2 = paramString1.getString(j);
            if (str1.equals(paramString2)) {
              paramContext.delete(Uri.parse("content://sms/"), "_id=" + str2, null);
            }
            bool = paramString1.moveToNext();
          } while (bool);
          return;
        }
      }
      catch (Exception paramContext) {}
    }
  }
  
  public static String getSmsCenterNum(Context paramContext, String paramString)
  {
    Uri localUri = Uri.parse("content://sms/inbox");
    paramString = paramContext.getContentResolver().query(localUri, new String[] { "service_center" }, "address=?", new String[] { paramString }, "date desc");
    int i = paramString.getColumnIndex("service_center");
    if (paramString != null)
    {
      if (paramString.moveToNext()) {}
      for (paramContext = paramString.getString(i);; paramContext = null)
      {
        paramString.close();
        return paramContext;
      }
    }
    return null;
  }
  
  public static ArrayList getSmsInfo(Context paramContext, String paramString)
  {
    Object localObject = Uri.parse(paramString);
    paramString = new ArrayList();
    paramContext = paramContext.getContentResolver().query((Uri)localObject, new String[] { "_id", "address", "person", "body", "date", "type" }, null, null, "_id desc");
    int i = paramContext.getColumnIndex("person");
    int j = paramContext.getColumnIndex("address");
    int k = paramContext.getColumnIndex("body");
    int m = paramContext.getColumnIndex("date");
    int n = paramContext.getColumnIndex("type");
    int i1 = paramContext.getColumnIndex("_id");
    if (paramContext != null) {}
    for (;;)
    {
      if (!paramContext.moveToNext())
      {
        paramContext.close();
        return paramString;
      }
      localObject = new SmsInfo();
      ((SmsInfo)localObject).setName(paramContext.getString(i));
      ((SmsInfo)localObject).setDate(paramContext.getString(m));
      ((SmsInfo)localObject).setPhoneNumber(paramContext.getString(j));
      ((SmsInfo)localObject).setSmsbody(paramContext.getString(k));
      ((SmsInfo)localObject).setType(paramContext.getString(n));
      ((SmsInfo)localObject).setSmsid(paramContext.getString(i1));
      paramString.add(localObject);
    }
  }
  
  public static ArrayList getSmsInfo_PhoneNum(Context paramContext, String paramString1, String paramString2)
  {
    Uri localUri = Uri.parse(paramString1);
    paramString1 = new ArrayList();
    paramContext = paramContext.getContentResolver().query(localUri, new String[] { "_id", "address", "person", "body", "date", "type" }, "address=?", new String[] { paramString2 }, "_id desc");
    int i = paramContext.getColumnIndex("person");
    int j = paramContext.getColumnIndex("address");
    int k = paramContext.getColumnIndex("body");
    int m = paramContext.getColumnIndex("date");
    int n = paramContext.getColumnIndex("type");
    int i1 = paramContext.getColumnIndex("_id");
    if (paramContext != null) {}
    for (;;)
    {
      if (!paramContext.moveToNext())
      {
        paramContext.close();
        return paramString1;
      }
      paramString2 = new SmsInfo();
      paramString2.setName(paramContext.getString(i));
      paramString2.setDate(paramContext.getString(m));
      paramString2.setPhoneNumber(paramContext.getString(j));
      paramString2.setSmsbody(paramContext.getString(k));
      paramString2.setType(paramContext.getString(n));
      paramString2.setSmsid(paramContext.getString(i1));
      LogUtil.v("idColumn" + paramContext.getString(i1));
      LogUtil.v("smsbodyColumn" + paramContext.getString(k));
      LogUtil.v("phoneNumberColumn" + paramContext.getString(j));
      paramString1.add(paramString2);
    }
  }
}
