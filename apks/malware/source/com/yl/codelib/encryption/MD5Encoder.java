package com.yl.codelib.encryption;

import com.yl.codelib.utils.LogUtil;
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class MD5Encoder
{
  public MD5Encoder() {}
  
  public static String EncoderByMd5(String paramString)
  {
    for (;;)
    {
      Object localObject;
      int i;
      try
      {
        localObject = MessageDigest.getInstance("MD5");
        ((MessageDigest)localObject).update(paramString.getBytes("utf-8"));
        paramString = new StringBuffer();
        localObject = ((MessageDigest)localObject).digest();
        i = 0;
        if (i < localObject.length) {
          break label80;
        }
        return paramString.toString();
      }
      catch (Exception paramString)
      {
        return "";
      }
      if (j < 16) {
        paramString.append("0");
      }
      paramString.append(Integer.toHexString(j));
      i += 1;
      continue;
      label80:
      int k = localObject[i];
      int j = k;
      if (k < 0) {
        j = k + 256;
      }
    }
  }
  
  public static String EncoderByMd5_16(String paramString)
  {
    localObject2 = null;
    localObject1 = null;
    try
    {
      MessageDigest localMessageDigest = MessageDigest.getInstance("MD5");
      localObject1 = localMessageDigest;
      localObject2 = localMessageDigest;
      localMessageDigest.reset();
      localObject1 = localMessageDigest;
      localObject2 = localMessageDigest;
      localMessageDigest.update(paramString.getBytes("UTF-8"));
      localObject1 = localMessageDigest;
    }
    catch (NoSuchAlgorithmException paramString)
    {
      int i;
      for (;;)
      {
        System.exit(-1);
      }
      if (Integer.toHexString(paramString[i] & 0xFF).length() != 1) {
        break label130;
      }
      ((StringBuffer)localObject1).append("0").append(Integer.toHexString(paramString[i] & 0xFF));
      for (;;)
      {
        i += 1;
        break;
        ((StringBuffer)localObject1).append(Integer.toHexString(paramString[i] & 0xFF));
      }
    }
    catch (UnsupportedEncodingException paramString)
    {
      for (;;)
      {
        localObject1 = localObject2;
      }
    }
    paramString = ((MessageDigest)localObject1).digest();
    localObject1 = new StringBuffer();
    i = 0;
    if (i >= paramString.length) {
      return ((StringBuffer)localObject1).substring(8, 24).toString().toUpperCase();
    }
  }
  
  public static String EncoderByMd5_End16(String paramString)
  {
    localObject2 = null;
    localObject1 = null;
    try
    {
      MessageDigest localMessageDigest = MessageDigest.getInstance("MD5");
      localObject1 = localMessageDigest;
      localObject2 = localMessageDigest;
      localMessageDigest.reset();
      localObject1 = localMessageDigest;
      localObject2 = localMessageDigest;
      localMessageDigest.update(paramString.getBytes("UTF-8"));
      localObject1 = localMessageDigest;
    }
    catch (NoSuchAlgorithmException paramString)
    {
      int i;
      for (;;)
      {
        LogUtil.v("NoSuchAlgorithmException caught!");
        System.exit(-1);
      }
      if (Integer.toHexString(paramString[i] & 0xFF).length() != 1) {
        break label133;
      }
      ((StringBuffer)localObject1).append("0").append(Integer.toHexString(paramString[i] & 0xFF));
      for (;;)
      {
        i += 1;
        break;
        ((StringBuffer)localObject1).append(Integer.toHexString(paramString[i] & 0xFF));
      }
    }
    catch (UnsupportedEncodingException paramString)
    {
      for (;;)
      {
        localObject1 = localObject2;
      }
    }
    paramString = ((MessageDigest)localObject1).digest();
    localObject1 = new StringBuffer();
    i = 0;
    if (i >= paramString.length) {
      return ((StringBuffer)localObject1).substring(16).toString().toUpperCase();
    }
  }
}
