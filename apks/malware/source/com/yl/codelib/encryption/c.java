package com.yl.codelib.encryption;

final class c
  extends a
{
  private static final byte[] s;
  private static final byte[] t;
  private int count;
  private final byte[] u;
  private int v;
  public final boolean w;
  public final boolean x;
  public final boolean y;
  private final byte[] z;
  
  static
  {
    if (!Base64.class.desiredAssertionStatus()) {}
    for (boolean bool = true;; bool = false)
    {
      m = bool;
      s = new byte[] { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47 };
      t = new byte[] { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95 };
      return;
    }
  }
  
  public c(int paramInt, byte[] paramArrayOfByte)
  {
    this.n = null;
    boolean bool1;
    if ((paramInt & 0x1) == 0)
    {
      bool1 = true;
      this.w = bool1;
      if ((paramInt & 0x2) != 0) {
        break label101;
      }
      bool1 = true;
      label33:
      this.x = bool1;
      if ((paramInt & 0x4) == 0) {
        break label106;
      }
      bool1 = bool2;
      label47:
      this.y = bool1;
      if ((paramInt & 0x8) != 0) {
        break label111;
      }
      paramArrayOfByte = s;
      label63:
      this.z = paramArrayOfByte;
      this.u = new byte[2];
      this.v = 0;
      if (!this.x) {
        break label118;
      }
    }
    label101:
    label106:
    label111:
    label118:
    for (paramInt = 19;; paramInt = -1)
    {
      this.count = paramInt;
      return;
      bool1 = false;
      break;
      bool1 = false;
      break label33;
      bool1 = false;
      break label47;
      paramArrayOfByte = t;
      break label63;
    }
  }
  
  public final boolean a(byte[] paramArrayOfByte, int paramInt1, int paramInt2, boolean paramBoolean)
  {
    byte[] arrayOfByte1 = this.z;
    byte[] arrayOfByte2 = this.n;
    int j = 0;
    int k = this.count;
    int i2 = paramInt2 + paramInt1;
    int i;
    switch (this.v)
    {
    default: 
      i = paramInt1;
      paramInt1 = -1;
      label61:
      if (paramInt1 != -1)
      {
        arrayOfByte2[0] = arrayOfByte1[(paramInt1 >> 18 & 0x3F)];
        arrayOfByte2[1] = arrayOfByte1[(paramInt1 >> 12 & 0x3F)];
        arrayOfByte2[2] = arrayOfByte1[(paramInt1 >> 6 & 0x3F)];
        paramInt2 = 4;
        arrayOfByte2[3] = arrayOfByte1[(paramInt1 & 0x3F)];
        paramInt1 = k - 1;
        if (paramInt1 == 0)
        {
          paramInt1 = paramInt2;
          if (this.y)
          {
            paramInt1 = 5;
            arrayOfByte2[4] = 13;
          }
          j = paramInt1 + 1;
          arrayOfByte2[paramInt1] = 10;
          paramInt2 = 19;
          paramInt1 = j;
        }
      }
      break;
    }
    for (;;)
    {
      label210:
      int n;
      if (i + 3 > i2)
      {
        if (i - this.v != i2 - 1) {
          break label699;
        }
        j = 0;
        if (this.v <= 0) {
          break label684;
        }
        paramArrayOfByte = this.u;
        j = 1;
        k = paramArrayOfByte[0];
        k = (k & 0xFF) << 4;
        this.v -= j;
        n = paramInt1 + 1;
        arrayOfByte2[paramInt1] = arrayOfByte1[(k >> 6 & 0x3F)];
        j = n + 1;
        arrayOfByte2[n] = arrayOfByte1[(k & 0x3F)];
        paramInt1 = j;
        if (this.w)
        {
          k = j + 1;
          arrayOfByte2[j] = 61;
          paramInt1 = k + 1;
          arrayOfByte2[k] = 61;
        }
        j = paramInt1;
        k = i;
        if (!this.x) {
          break label1106;
        }
        j = paramInt1;
        if (this.y)
        {
          arrayOfByte2[paramInt1] = 13;
          j = paramInt1 + 1;
        }
        paramInt1 = j + 1;
        arrayOfByte2[j] = 10;
        j = paramInt1;
        k = i;
        if ((m) || (this.v == 0)) {
          break label1069;
        }
        throw new AssertionError();
        paramInt2 = -1;
        i = paramInt1;
        paramInt1 = paramInt2;
        break label61;
        if (paramInt1 + 2 > i2) {
          break;
        }
        paramInt2 = this.u[0];
        i = paramInt1 + 1;
        paramInt1 = paramArrayOfByte[paramInt1];
        n = paramArrayOfByte[i];
        this.v = 0;
        i += 1;
        paramInt1 = (paramInt2 & 0xFF) << 16 | (paramInt1 & 0xFF) << 8 | n & 0xFF;
        break label61;
        if (paramInt1 + 1 > i2) {
          break;
        }
        paramInt2 = this.u[0];
        n = this.u[1];
        i = paramInt1 + 1;
        paramInt1 = paramArrayOfByte[paramInt1];
        this.v = 0;
        paramInt1 = (paramInt2 & 0xFF) << 16 | (n & 0xFF) << 8 | paramInt1 & 0xFF;
        break label61;
      }
      j = (paramArrayOfByte[i] & 0xFF) << 16 | (paramArrayOfByte[(i + 1)] & 0xFF) << 8 | paramArrayOfByte[(i + 2)] & 0xFF;
      arrayOfByte2[paramInt1] = arrayOfByte1[(j >> 18 & 0x3F)];
      arrayOfByte2[(paramInt1 + 1)] = arrayOfByte1[(j >> 12 & 0x3F)];
      arrayOfByte2[(paramInt1 + 2)] = arrayOfByte1[(j >> 6 & 0x3F)];
      arrayOfByte2[(paramInt1 + 3)] = arrayOfByte1[(j & 0x3F)];
      i += 3;
      paramInt1 += 4;
      paramInt2 -= 1;
      if (paramInt2 == 0)
      {
        if (this.y)
        {
          paramInt2 = paramInt1 + 1;
          arrayOfByte2[paramInt1] = 13;
          paramInt1 = paramInt2;
        }
        for (;;)
        {
          paramInt2 = paramInt1 + 1;
          arrayOfByte2[paramInt1] = 10;
          j = 19;
          paramInt1 = paramInt2;
          paramInt2 = j;
          break;
          label684:
          k = paramArrayOfByte[i];
          i += 1;
          break label210;
          label699:
          label747:
          int i1;
          if (i - this.v == i2 - 2)
          {
            j = 0;
            if (this.v > 1)
            {
              byte[] arrayOfByte3 = this.u;
              n = 1;
              k = arrayOfByte3[0];
              j = i;
              i = n;
              if (this.v <= 0) {
                break label969;
              }
              n = this.u[i];
              i1 = i + 1;
              i = j;
              j = i1;
              label777:
              k = (n & 0xFF) << 2 | (k & 0xFF) << 10;
              this.v -= j;
              j = paramInt1 + 1;
              arrayOfByte2[paramInt1] = arrayOfByte1[(k >> 12 & 0x3F)];
              n = j + 1;
              arrayOfByte2[j] = arrayOfByte1[(k >> 6 & 0x3F)];
              paramInt1 = n + 1;
              arrayOfByte2[n] = arrayOfByte1[(k & 0x3F)];
              if (!this.w) {
                break label1109;
              }
              j = paramInt1 + 1;
              arrayOfByte2[paramInt1] = 61;
              paramInt1 = j;
            }
          }
          label969:
          label1069:
          label1106:
          label1109:
          for (;;)
          {
            j = paramInt1;
            k = i;
            if (this.x)
            {
              j = paramInt1;
              if (this.y)
              {
                arrayOfByte2[paramInt1] = 13;
                j = paramInt1 + 1;
              }
              paramInt1 = j + 1;
              arrayOfByte2[j] = 10;
              k = i;
              j = paramInt1;
              break;
              k = paramArrayOfByte[i];
              n = i + 1;
              i = j;
              j = n;
              break label747;
              n = paramArrayOfByte[j];
              i1 = j + 1;
              j = i;
              i = i1;
              break label777;
              k = i;
              j = paramInt1;
              if (!this.x) {
                break;
              }
              k = i;
              j = paramInt1;
              if (paramInt1 <= 0) {
                break;
              }
              k = i;
              j = paramInt1;
              if (paramInt2 == 19) {
                break;
              }
              if (this.y)
              {
                j = paramInt1 + 1;
                arrayOfByte2[paramInt1] = 13;
                paramInt1 = j;
              }
              for (;;)
              {
                j = paramInt1 + 1;
                arrayOfByte2[paramInt1] = 10;
                k = i;
                break;
                if ((!m) && (k != i2)) {
                  throw new AssertionError();
                }
                this.o = j;
                this.count = paramInt2;
                return true;
              }
            }
            break;
          }
        }
      }
      continue;
      paramInt2 = paramInt1;
      paramInt1 = 4;
      continue;
      paramInt2 = k;
      paramInt1 = j;
    }
  }
}
