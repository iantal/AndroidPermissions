package com.yl.ml.date;

import com.yl.codelib.utils.MyHashMap;
import com.yl.codelib.utils.TextUtil;

public class Result
{
  public static final MyHashMap sResultStatus;
  
  static
  {
    MyHashMap localMyHashMap = new MyHashMap();
    sResultStatus = localMyHashMap;
    localMyHashMap.put(Integer.valueOf(9000), "pay success");
    sResultStatus.put(Integer.valueOf(4001), "The data format is incorrect");
    sResultStatus.put(Integer.valueOf(4003), "User bound failure");
    sResultStatus.put(Integer.valueOf(4004), "network exception");
    sResultStatus.put(Integer.valueOf(40041), "GPI network exception");
    sResultStatus.put(Integer.valueOf(40044), "update standby network exception");
    sResultStatus.put(Integer.valueOf(40045), "GPI network exception AutoOPEN");
    sResultStatus.put(Integer.valueOf(40047), "type 10 post network exception");
    sResultStatus.put(Integer.valueOf(40048), "type 10 psp network exception");
    sResultStatus.put(Integer.valueOf(8002), "type 10 psp adwap no url");
    sResultStatus.put(Integer.valueOf(8004), "ado sms con is error");
    sResultStatus.put(Integer.valueOf(4005), "send pay sms failure");
    sResultStatus.put(Integer.valueOf(40051), "send pay sms failure timeout");
    sResultStatus.put(Integer.valueOf(40052), "send pay sms failure by user refused");
    sResultStatus.put(Integer.valueOf(4006), "cmread pay failure");
    sResultStatus.put(Integer.valueOf(4007), "paytype is inexistence");
    sResultStatus.put(Integer.valueOf(5001), "sdk no init");
    sResultStatus.put(Integer.valueOf(5002), "pay is cancel");
    sResultStatus.put(Integer.valueOf(5003), "payID format error");
    sResultStatus.put(Integer.valueOf(5004), "payID is null");
    sResultStatus.put(Integer.valueOf(5005), "sim card exception");
    sResultStatus.put(Integer.valueOf(5006), "user send bound sms failure");
    sResultStatus.put(Integer.valueOf(50061), "user send bound sms failure timeout");
    sResultStatus.put(Integer.valueOf(5009), "支付请求太过频繁!");
    sResultStatus.put(Integer.valueOf(5010), "close sendresmsdialog");
    sResultStatus.put(Integer.valueOf(5011), "local payinfo is null");
    sResultStatus.put(Integer.valueOf(5012), "localpay is max");
    sResultStatus.put(Integer.valueOf(5013), "phone is mnq");
    sResultStatus.put(Integer.valueOf(5014), "no imsi");
    sResultStatus.put(Integer.valueOf(6001), "appID错误");
    sResultStatus.put(Integer.valueOf(6002), "包名不匹配");
    sResultStatus.put(Integer.valueOf(6003), "计费项不存在");
    sResultStatus.put(Integer.valueOf(6004), "当天计费次数超出上限");
    sResultStatus.put(Integer.valueOf(6005), "当月计费次数超出上限");
    sResultStatus.put(Integer.valueOf(6006), "计费次数超出上限");
    sResultStatus.put(Integer.valueOf(6007), "appKey验证失败");
    sResultStatus.put(Integer.valueOf(6008), "非法网络");
    sResultStatus.put(Integer.valueOf(6009), "无法找到可用通道支付");
    sResultStatus.put(Integer.valueOf(6010), "通道获取失败");
    sResultStatus.put(Integer.valueOf(6011), "The blacklist user");
    sResultStatus.put(Integer.valueOf(4010), "unknown exception");
    sResultStatus.put(Integer.valueOf(7001), "wapOrderis null");
    sResultStatus.put(Integer.valueOf(7002), "type 10 SmArray is null");
    sResultStatus.put(Integer.valueOf(7003), "type 10 post back -1-1");
    sResultStatus.put(Integer.valueOf(7004), "type 10 post backvalue exception");
    sResultStatus.put(Integer.valueOf(7005), "type 10 psp backvalue no code char");
    sResultStatus.put(Integer.valueOf(7006), "type 10 psp last psot failure");
    sResultStatus.put(Integer.valueOf(7007), "type 10 psp last get sms is null");
    sResultStatus.put(Integer.valueOf(7008), "type 10 psp last parst value is exception");
    sResultStatus.put(Integer.valueOf(7009), "type 10 have new type");
    sResultStatus.put(Integer.valueOf(7010), "psp Operation process exception");
    sResultStatus.put(Integer.valueOf(7011), "have yzm type get sms is null");
    sResultStatus.put(Integer.valueOf(7012), "read pay failure ");
    sResultStatus.put(Integer.valueOf(7016), "psp post no json");
  }
  
  public Result() {}
  
  public static String getPayErrorLog(int paramInt)
  {
    String str2 = (String)sResultStatus.get(Integer.valueOf(paramInt));
    String str1 = str2;
    if (!TextUtil.notNull(str2)) {
      str1 = (String)sResultStatus.get(Integer.valueOf(4010));
    }
    return str1;
  }
  
  public static void putNewErrorCode(int paramInt, String paramString)
  {
    sResultStatus.put(Integer.valueOf(paramInt), paramString);
  }
}
