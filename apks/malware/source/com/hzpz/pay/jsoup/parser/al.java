package com.hzpz.pay.jsoup.parser;

import com.hzpz.pay.jsoup.helper.Validate;
import com.hzpz.pay.jsoup.nodes.Attribute;
import com.hzpz.pay.jsoup.nodes.Attributes;

abstract class al
  extends ad
{
  protected String b;
  boolean c = false;
  Attributes d;
  private String e;
  private StringBuilder f = new StringBuilder();
  private boolean g = false;
  
  al()
  {
    super(null);
  }
  
  private void t()
  {
    this.g = true;
  }
  
  final al a(String paramString)
  {
    this.b = paramString;
    return this;
  }
  
  final void a(char paramChar)
  {
    b(String.valueOf(paramChar));
  }
  
  final void a(char[] paramArrayOfChar)
  {
    t();
    this.f.append(paramArrayOfChar);
  }
  
  final void b(char paramChar)
  {
    c(String.valueOf(paramChar));
  }
  
  final void b(String paramString)
  {
    if (this.b == null) {}
    for (;;)
    {
      this.b = paramString;
      return;
      paramString = this.b.concat(paramString);
    }
  }
  
  final void c(char paramChar)
  {
    t();
    this.f.append(paramChar);
  }
  
  final void c(String paramString)
  {
    if (this.e == null) {}
    for (;;)
    {
      this.e = paramString;
      return;
      paramString = this.e.concat(paramString);
    }
  }
  
  final void d(String paramString)
  {
    t();
    this.f.append(paramString);
  }
  
  al n()
  {
    this.b = null;
    this.e = null;
    a(this.f);
    this.g = false;
    this.c = false;
    this.d = null;
    return this;
  }
  
  final void o()
  {
    if (this.d == null) {
      this.d = new Attributes();
    }
    if (this.e != null) {
      if (this.g) {
        break label67;
      }
    }
    label67:
    for (Attribute localAttribute = new Attribute(this.e, "");; localAttribute = new Attribute(this.e, this.f.toString()))
    {
      this.d.a(localAttribute);
      this.e = null;
      a(this.f);
      return;
    }
  }
  
  final void p()
  {
    if (this.e != null) {
      o();
    }
  }
  
  final String q()
  {
    if ((this.b == null) || (this.b.length() == 0)) {}
    for (boolean bool = true;; bool = false)
    {
      Validate.b(bool);
      return this.b;
    }
  }
  
  final boolean r()
  {
    return this.c;
  }
  
  final Attributes s()
  {
    return this.d;
  }
}
