package com.hzpz.pay.jsoup.parser;

import com.hzpz.pay.jsoup.helper.StringUtil;
import com.hzpz.pay.jsoup.nodes.Element;

 enum v
{
  v()
  {
    super(str, i, null);
  }
  
  private boolean a(ad paramAd, de paramDe)
  {
    paramDe.m("head");
    return paramDe.a(paramAd);
  }
  
  final boolean a(ad paramAd, b paramB)
  {
    if (c.a(paramAd)) {
      paramB.a(paramAd.l());
    }
    ak localAk;
    do
    {
      return true;
      switch (t.a[paramAd.a.ordinal()])
      {
      default: 
        return a(paramAd, paramB);
      case 1: 
        paramB.a(paramAd.j());
        return true;
      case 2: 
        paramB.b(this);
        return false;
      case 3: 
        localAk = paramAd.f();
        str = localAk.q();
        if (str.equals("html")) {
          return g.a(paramAd, paramB);
        }
        if (!StringUtil.a(str, new String[] { "base", "basefont", "bgsound", "command", "link" })) {
          break label182;
        }
        paramAd = paramB.b(localAk);
      }
    } while ((!str.equals("base")) || (!paramAd.e("href")));
    paramB.a(paramAd);
    return true;
    label182:
    if (str.equals("meta"))
    {
      paramB.b(localAk);
      return true;
    }
    if (str.equals("title"))
    {
      c.a(localAk, paramB);
      return true;
    }
    if (StringUtil.a(str, new String[] { "noframes", "style" }))
    {
      c.b(localAk, paramB);
      return true;
    }
    if (str.equals("noscript"))
    {
      paramB.a(localAk);
      paramB.a(e);
      return true;
    }
    if (str.equals("script"))
    {
      paramB.d.a(ao.f);
      paramB.b();
      paramB.a(h);
      paramB.a(localAk);
      return true;
    }
    if (str.equals("head"))
    {
      paramB.b(this);
      return false;
    }
    return a(paramAd, paramB);
    String str = paramAd.h().q();
    if (str.equals("head"))
    {
      paramB.h();
      paramB.a(f);
      return true;
    }
    if (StringUtil.a(str, new String[] { "body", "html", "br" })) {
      return a(paramAd, paramB);
    }
    paramB.b(this);
    return false;
  }
}
