package com.hzpz.pay.jsoup.parser;

import com.hzpz.pay.jsoup.helper.StringUtil;
import com.hzpz.pay.jsoup.nodes.Attribute;
import com.hzpz.pay.jsoup.nodes.Attributes;
import com.hzpz.pay.jsoup.nodes.Document;
import com.hzpz.pay.jsoup.nodes.Document.QuirksMode;
import com.hzpz.pay.jsoup.nodes.Element;
import com.hzpz.pay.jsoup.nodes.Node;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

 enum y
{
  y()
  {
    super(str, i, null);
  }
  
  final boolean a(ad paramAd, b paramB)
  {
    switch (t.a[paramAd.a.ordinal()])
    {
    }
    Object localObject1;
    Object localObject2;
    int i;
    label777:
    label899:
    String str;
    for (;;)
    {
      return true;
      paramAd = paramAd.l();
      if (paramAd.n().equals(c.a()))
      {
        paramB.b(this);
        return false;
      }
      if ((paramB.d()) && (c.a(paramAd)))
      {
        paramB.v();
        paramB.a(paramAd);
      }
      else
      {
        paramB.v();
        paramB.a(paramAd);
        paramB.a(false);
        continue;
        paramB.a(paramAd.j());
        continue;
        paramB.b(this);
        return false;
        localObject1 = paramAd.f();
        localObject2 = ((ak)localObject1).q();
        if (((String)localObject2).equals("html"))
        {
          paramB.b(this);
          paramAd = (Element)paramB.i().get(0);
          paramB = ((ak)localObject1).s().iterator();
          while (paramB.hasNext())
          {
            localObject1 = (Attribute)paramB.next();
            if (!paramAd.e(((Attribute)localObject1).a())) {
              paramAd.w().a((Attribute)localObject1);
            }
          }
        }
        if (StringUtil.a((String)localObject2, ab.a())) {
          return paramB.a(paramAd, d);
        }
        if (((String)localObject2).equals("body"))
        {
          paramB.b(this);
          paramAd = paramB.i();
          if ((paramAd.size() == 1) || ((paramAd.size() > 2) && (!((Element)paramAd.get(1)).a().equals("body")))) {
            return false;
          }
          paramB.a(false);
          paramAd = (Element)paramAd.get(1);
          paramB = ((ak)localObject1).s().iterator();
          while (paramB.hasNext())
          {
            localObject1 = (Attribute)paramB.next();
            if (!paramAd.e(((Attribute)localObject1).a())) {
              paramAd.w().a((Attribute)localObject1);
            }
          }
        }
        if (((String)localObject2).equals("frameset"))
        {
          paramB.b(this);
          paramAd = paramB.i();
          if ((paramAd.size() == 1) || ((paramAd.size() > 2) && (!((Element)paramAd.get(1)).a().equals("body")))) {
            return false;
          }
          if (!paramB.d()) {
            return false;
          }
          localObject2 = (Element)paramAd.get(1);
          if (((Element)localObject2).m() != null) {
            ((Element)localObject2).C();
          }
          while (paramAd.size() > 1) {
            paramAd.remove(paramAd.size() - 1);
          }
          paramB.a((ak)localObject1);
          paramB.a(s);
        }
        else if (StringUtil.a((String)localObject2, ab.b()))
        {
          if (paramB.g("p")) {
            paramB.m("p");
          }
          paramB.a((ak)localObject1);
        }
        else if (StringUtil.a((String)localObject2, ab.c()))
        {
          if (paramB.g("p")) {
            paramB.m("p");
          }
          if (StringUtil.a(paramB.z().a(), ab.c()))
          {
            paramB.b(this);
            paramB.h();
          }
          paramB.a((ak)localObject1);
        }
        else if (StringUtil.a((String)localObject2, ab.d()))
        {
          if (paramB.g("p")) {
            paramB.m("p");
          }
          paramB.a((ak)localObject1);
          paramB.a(false);
        }
        else if (((String)localObject2).equals("form"))
        {
          if (paramB.p() != null)
          {
            paramB.b(this);
            return false;
          }
          if (paramB.g("p")) {
            paramB.m("p");
          }
          paramB.a((ak)localObject1, true);
        }
        else
        {
          if (((String)localObject2).equals("li"))
          {
            paramB.a(false);
            paramAd = paramB.i();
            i = paramAd.size() - 1;
            for (;;)
            {
              if (i > 0)
              {
                localObject2 = (Element)paramAd.get(i);
                if (!((Element)localObject2).a().equals("li")) {
                  break label777;
                }
                paramB.m("li");
              }
              while ((paramB.h((Element)localObject2)) && (!StringUtil.a(((Element)localObject2).a(), ab.e())))
              {
                if (paramB.g("p")) {
                  paramB.m("p");
                }
                paramB.a((ak)localObject1);
                break;
              }
              i -= 1;
            }
          }
          if (StringUtil.a((String)localObject2, ab.f()))
          {
            paramB.a(false);
            paramAd = paramB.i();
            i = paramAd.size() - 1;
            for (;;)
            {
              if (i > 0)
              {
                localObject2 = (Element)paramAd.get(i);
                if (!StringUtil.a(((Element)localObject2).a(), ab.f())) {
                  break label899;
                }
                paramB.m(((Element)localObject2).a());
              }
              while ((paramB.h((Element)localObject2)) && (!StringUtil.a(((Element)localObject2).a(), ab.e())))
              {
                if (paramB.g("p")) {
                  paramB.m("p");
                }
                paramB.a((ak)localObject1);
                break;
              }
              i -= 1;
            }
          }
          if (((String)localObject2).equals("plaintext"))
          {
            if (paramB.g("p")) {
              paramB.m("p");
            }
            paramB.a((ak)localObject1);
            paramB.d.a(ao.g);
          }
          else if (((String)localObject2).equals("button"))
          {
            if (paramB.g("button"))
            {
              paramB.b(this);
              paramB.m("button");
              paramB.a((ad)localObject1);
            }
            else
            {
              paramB.v();
              paramB.a((ak)localObject1);
              paramB.a(false);
            }
          }
          else if (((String)localObject2).equals("a"))
          {
            if (paramB.k("a") != null)
            {
              paramB.b(this);
              paramB.m("a");
              paramAd = paramB.b("a");
              if (paramAd != null)
              {
                paramB.j(paramAd);
                paramB.e(paramAd);
              }
            }
            paramB.v();
            paramB.i(paramB.a((ak)localObject1));
          }
          else if (StringUtil.a((String)localObject2, ab.g()))
          {
            paramB.v();
            paramB.i(paramB.a((ak)localObject1));
          }
          else if (((String)localObject2).equals("nobr"))
          {
            paramB.v();
            if (paramB.e("nobr"))
            {
              paramB.b(this);
              paramB.m("nobr");
              paramB.v();
            }
            paramB.i(paramB.a((ak)localObject1));
          }
          else if (StringUtil.a((String)localObject2, ab.h()))
          {
            paramB.v();
            paramB.a((ak)localObject1);
            paramB.x();
            paramB.a(false);
          }
          else if (((String)localObject2).equals("table"))
          {
            if ((paramB.e().f() != Document.QuirksMode.b) && (paramB.g("p"))) {
              paramB.m("p");
            }
            paramB.a((ak)localObject1);
            paramB.a(false);
            paramB.a(i);
          }
          else if (StringUtil.a((String)localObject2, ab.i()))
          {
            paramB.v();
            paramB.b((ak)localObject1);
            paramB.a(false);
          }
          else if (((String)localObject2).equals("input"))
          {
            paramB.v();
            if (!paramB.b((ak)localObject1).d("type").equalsIgnoreCase("hidden")) {
              paramB.a(false);
            }
          }
          else if (StringUtil.a((String)localObject2, ab.j()))
          {
            paramB.b((ak)localObject1);
          }
          else if (((String)localObject2).equals("hr"))
          {
            if (paramB.g("p")) {
              paramB.m("p");
            }
            paramB.b((ak)localObject1);
            paramB.a(false);
          }
          else if (((String)localObject2).equals("image"))
          {
            if (paramB.b("svg") == null) {
              return paramB.a(((ak)localObject1).a("img"));
            }
            paramB.a((ak)localObject1);
          }
          else if (((String)localObject2).equals("isindex"))
          {
            paramB.b(this);
            if (paramB.p() != null) {
              return false;
            }
            paramB.d.b();
            paramB.l("form");
            if (((ak)localObject1).d.b("action")) {
              paramB.p().a("action", ((ak)localObject1).d.a("action"));
            }
            paramB.l("hr");
            paramB.l("label");
            if (((ak)localObject1).d.b("prompt")) {}
            for (paramAd = ((ak)localObject1).d.a("prompt");; paramAd = "This is a searchable index. Enter search keywords: ")
            {
              paramB.a(new af().a(paramAd));
              paramAd = new Attributes();
              localObject1 = ((ak)localObject1).d.iterator();
              while (((Iterator)localObject1).hasNext())
              {
                localObject2 = (Attribute)((Iterator)localObject1).next();
                if (!StringUtil.a(((Attribute)localObject2).a(), ab.k())) {
                  paramAd.a((Attribute)localObject2);
                }
              }
            }
            paramAd.a("name", "isindex");
            paramB.a("input", paramAd);
            paramB.m("label");
            paramB.l("hr");
            paramB.m("form");
          }
          else if (((String)localObject2).equals("textarea"))
          {
            paramB.a((ak)localObject1);
            paramB.d.a(ao.c);
            paramB.b();
            paramB.a(false);
            paramB.a(h);
          }
          else if (((String)localObject2).equals("xmp"))
          {
            if (paramB.g("p")) {
              paramB.m("p");
            }
            paramB.v();
            paramB.a(false);
            c.b((ak)localObject1, paramB);
          }
          else if (((String)localObject2).equals("iframe"))
          {
            paramB.a(false);
            c.b((ak)localObject1, paramB);
          }
          else if (((String)localObject2).equals("noembed"))
          {
            c.b((ak)localObject1, paramB);
          }
          else if (((String)localObject2).equals("select"))
          {
            paramB.v();
            paramB.a((ak)localObject1);
            paramB.a(false);
            paramAd = paramB.a();
            if ((paramAd.equals(i)) || (paramAd.equals(k)) || (paramAd.equals(m)) || (paramAd.equals(n)) || (paramAd.equals(o))) {
              paramB.a(q);
            } else {
              paramB.a(p);
            }
          }
          else if (StringUtil.a((String)localObject2, ab.l()))
          {
            if (paramB.z().a().equals("option")) {
              paramB.m("option");
            }
            paramB.v();
            paramB.a((ak)localObject1);
          }
          else if (StringUtil.a((String)localObject2, ab.m()))
          {
            if (paramB.e("ruby"))
            {
              paramB.s();
              if (!paramB.z().a().equals("ruby"))
              {
                paramB.b(this);
                paramB.d("ruby");
              }
              paramB.a((ak)localObject1);
            }
          }
          else if (((String)localObject2).equals("math"))
          {
            paramB.v();
            paramB.a((ak)localObject1);
            paramB.d.b();
          }
          else if (((String)localObject2).equals("svg"))
          {
            paramB.v();
            paramB.a((ak)localObject1);
            paramB.d.b();
          }
          else
          {
            if (StringUtil.a((String)localObject2, ab.n()))
            {
              paramB.b(this);
              return false;
            }
            paramB.v();
            paramB.a((ak)localObject1);
            continue;
            localObject1 = paramAd.h();
            str = ((aj)localObject1).q();
            if (str.equals("body"))
            {
              if (!paramB.e("body"))
              {
                paramB.b(this);
                return false;
              }
              paramB.a(r);
            }
            else if (str.equals("html"))
            {
              if (paramB.m("body")) {
                return paramB.a((ad)localObject1);
              }
            }
            else if (StringUtil.a(str, ab.o()))
            {
              if (!paramB.e(str))
              {
                paramB.b(this);
                return false;
              }
              paramB.s();
              if (!paramB.z().a().equals(str)) {
                paramB.b(this);
              }
              paramB.c(str);
            }
            else if (str.equals("form"))
            {
              paramAd = paramB.p();
              paramB.a(null);
              if ((paramAd == null) || (!paramB.e(str)))
              {
                paramB.b(this);
                return false;
              }
              paramB.s();
              if (!paramB.z().a().equals(str)) {
                paramB.b(this);
              }
              paramB.e(paramAd);
            }
            else if (str.equals("p"))
            {
              if (!paramB.g(str))
              {
                paramB.b(this);
                paramB.l(str);
                return paramB.a((ad)localObject1);
              }
              paramB.j(str);
              if (!paramB.z().a().equals(str)) {
                paramB.b(this);
              }
              paramB.c(str);
            }
            else if (str.equals("li"))
            {
              if (!paramB.f(str))
              {
                paramB.b(this);
                return false;
              }
              paramB.j(str);
              if (!paramB.z().a().equals(str)) {
                paramB.b(this);
              }
              paramB.c(str);
            }
            else if (StringUtil.a(str, ab.f()))
            {
              if (!paramB.e(str))
              {
                paramB.b(this);
                return false;
              }
              paramB.j(str);
              if (!paramB.z().a().equals(str)) {
                paramB.b(this);
              }
              paramB.c(str);
            }
            else
            {
              if (!StringUtil.a(str, ab.c())) {
                break;
              }
              if (!paramB.b(ab.c()))
              {
                paramB.b(this);
                return false;
              }
              paramB.j(str);
              if (!paramB.z().a().equals(str)) {
                paramB.b(this);
              }
              paramB.a(ab.c());
            }
          }
        }
      }
    }
    if (str.equals("sarcasm")) {
      return b(paramAd, paramB);
    }
    int j;
    label2656:
    Element localElement;
    Object localObject3;
    Object localObject4;
    int k;
    if (StringUtil.a(str, ab.p()))
    {
      j = 0;
      if (j < 8)
      {
        localElement = paramB.k(str);
        if (localElement == null) {
          return b(paramAd, paramB);
        }
        if (!paramB.d(localElement))
        {
          paramB.b(this);
          paramB.j(localElement);
          return true;
        }
        if (!paramB.e(localElement.a()))
        {
          paramB.b(this);
          return false;
        }
        if (paramB.z() != localElement) {
          paramB.b(this);
        }
        localObject3 = null;
        localObject2 = null;
        i = 0;
        localObject4 = paramB.i();
        int m = ((ArrayList)localObject4).size();
        k = 0;
        label2762:
        localObject1 = localObject3;
        if (k < m)
        {
          localObject1 = localObject3;
          if (k < 64)
          {
            localObject1 = (Element)((ArrayList)localObject4).get(k);
            if (localObject1 == localElement)
            {
              localObject1 = (Element)((ArrayList)localObject4).get(k - 1);
              i = 1;
            }
          }
        }
      }
    }
    for (;;)
    {
      k += 1;
      localObject2 = localObject1;
      break label2762;
      if ((i != 0) && (paramB.h((Element)localObject1)))
      {
        if (localObject1 == null)
        {
          paramB.c(localElement.a());
          paramB.j(localElement);
          return true;
        }
        localObject3 = localObject1;
        i = 0;
        Object localObject5 = localObject1;
        if (i < 3)
        {
          localObject4 = localObject3;
          if (paramB.d((Element)localObject3)) {
            localObject4 = paramB.f((Element)localObject3);
          }
          if (!paramB.k((Element)localObject4))
          {
            paramB.e((Element)localObject4);
            localObject3 = localObject4;
          }
          for (;;)
          {
            i += 1;
            break;
            if (localObject4 == localElement) {
              break label3002;
            }
            localObject3 = new Element(Tag.a(((Element)localObject4).a()), paramB.f());
            paramB.c((Element)localObject4, (Element)localObject3);
            paramB.b((Element)localObject4, (Element)localObject3);
            if (localObject5.m() != null) {
              localObject5.C();
            }
            ((Element)localObject3).a(localObject5);
            localObject5 = localObject3;
          }
        }
        label3002:
        if (StringUtil.a(((Element)localObject2).a(), ab.q()))
        {
          if (localObject5.m() != null) {
            localObject5.C();
          }
          paramB.a(localObject5);
        }
        for (;;)
        {
          localObject2 = new Element(localElement.j(), paramB.f());
          ((Element)localObject2).w().a(localElement.w());
          localObject3 = (Node[])((Element)localObject1).y().toArray(new Node[((Element)localObject1).z()]);
          k = localObject3.length;
          i = 0;
          while (i < k)
          {
            ((Element)localObject2).a(localObject3[i]);
            i += 1;
          }
          if (localObject5.m() != null) {
            localObject5.C();
          }
          ((Element)localObject2).a(localObject5);
        }
        ((Element)localObject1).a((Node)localObject2);
        paramB.j(localElement);
        paramB.e(localElement);
        paramB.a((Element)localObject1, (Element)localObject2);
        j += 1;
        break label2656;
        break;
        if (StringUtil.a(str, ab.h()))
        {
          if (paramB.e("name")) {
            break;
          }
          if (!paramB.e(str))
          {
            paramB.b(this);
            return false;
          }
          paramB.s();
          if (!paramB.z().a().equals(str)) {
            paramB.b(this);
          }
          paramB.c(str);
          paramB.w();
          break;
        }
        if (str.equals("br"))
        {
          paramB.b(this);
          paramB.l("br");
          return false;
        }
        return b(paramAd, paramB);
      }
      localObject1 = localObject2;
    }
  }
  
  final boolean b(ad paramAd, b paramB)
  {
    paramAd = paramAd.h().q();
    ArrayList localArrayList = paramB.i();
    int i = localArrayList.size() - 1;
    for (;;)
    {
      Element localElement;
      if (i >= 0)
      {
        localElement = (Element)localArrayList.get(i);
        if (localElement.a().equals(paramAd))
        {
          paramB.j(paramAd);
          if (!paramAd.equals(paramB.z().a())) {
            paramB.b(this);
          }
          paramB.c(paramAd);
        }
      }
      else
      {
        return true;
      }
      if (paramB.h(localElement))
      {
        paramB.b(this);
        return false;
      }
      i -= 1;
    }
  }
}
