package com.hzpz.pay;

import java.io.ByteArrayInputStream;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserFactory;

public final class av
  extends az
{
  public av.a a;
  
  public av() {}
  
  private static X a(String paramString)
  {
    for (;;)
    {
      XmlPullParser localXmlPullParser;
      X localX;
      try
      {
        paramString = new ByteArrayInputStream(paramString.getBytes());
        localXmlPullParser = XmlPullParserFactory.newInstance().newPullParser();
        localXmlPullParser.setInput(paramString, "utf-8");
        i = localXmlPullParser.getEventType();
        localX = new X();
        if (i != 1) {
          break label233;
        }
        paramString.close();
        return localX;
      }
      catch (Exception paramString)
      {
        paramString.printStackTrace();
        return null;
      }
      int i = localXmlPullParser.next();
      continue;
      if ("orderid".equalsIgnoreCase(localXmlPullParser.getName()))
      {
        localX.b = localXmlPullParser.nextText();
      }
      else if ("returnvalue".equalsIgnoreCase(localXmlPullParser.getName()))
      {
        localX.a = localXmlPullParser.nextText();
      }
      else if ("mo".equalsIgnoreCase(localXmlPullParser.getName()))
      {
        localX.c = localXmlPullParser.nextText();
      }
      else if ("mo2".equalsIgnoreCase(localXmlPullParser.getName()))
      {
        localX.d = localXmlPullParser.nextText();
      }
      else if ("called".equalsIgnoreCase(localXmlPullParser.getName()))
      {
        localX.e = localXmlPullParser.nextText();
      }
      else if ("called2".equalsIgnoreCase(localXmlPullParser.getName()))
      {
        localX.f = localXmlPullParser.nextText();
        continue;
        label233:
        switch (i)
        {
        }
      }
    }
  }
  
  public final void a(String paramString, boolean paramBoolean)
  {
    if ((PzPay.1.1.d(paramString)) || (paramBoolean))
    {
      this.a.a(null, paramBoolean);
      return;
    }
    this.a.a(a(paramString), paramBoolean);
  }
}
