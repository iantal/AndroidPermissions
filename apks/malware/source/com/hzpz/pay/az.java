package com.hzpz.pay;

import android.os.Handler;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.apache.http.Header;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.message.BasicNameValuePair;

public abstract class az
{
  public static String b = "";
  private Map a;
  public String c;
  boolean d = false;
  public boolean e;
  private az.a f;
  private String g = null;
  
  public az() {}
  
  private static void a(String paramString, Header[] paramArrayOfHeader)
  {
    paramString = new StringBuffer(paramString);
    paramString.append("===========?");
    int j = paramArrayOfHeader.length;
    int i = 0;
    for (;;)
    {
      if (i >= j)
      {
        aP.c("TAG", paramString.toString());
        return;
      }
      Header localHeader = paramArrayOfHeader[i];
      paramString.append(localHeader.getName()).append("=").append(localHeader.getValue()).append("&");
      i += 1;
    }
  }
  
  private HttpUriRequest b(String paramString, Map paramMap, az.a paramA)
  {
    Object localObject;
    String str;
    if (paramA.equals(az.a.b))
    {
      paramA = new ArrayList();
      if (paramMap != null) {
        localObject = paramMap.keySet().iterator();
      }
      for (;;)
      {
        if (!((Iterator)localObject).hasNext()) {}
        try
        {
          paramA = new UrlEncodedFormEntity(paramA);
          localObject = new HttpPost(paramString);
          if ((paramMap != null) && (paramMap.containsKey("form")))
          {
            ((HttpPost)localObject).setHeader("User-Agent", PzPay.n);
            ((HttpPost)localObject).setHeader("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8");
            ((HttpPost)localObject).setHeader("x-up-calling-line-id", PzPay.t);
          }
          for (;;)
          {
            a(paramString, ((HttpPost)localObject).getAllHeaders());
            ((HttpPost)localObject).setEntity(paramA);
            return localObject;
            str = (String)((Iterator)localObject).next();
            paramA.add(new BasicNameValuePair(str, (String)paramMap.get(str)));
            break;
            ((HttpPost)localObject).setHeader("AppId", PzPay.o);
            ((HttpPost)localObject).setHeader("PNO", PzPay.p);
            ((HttpPost)localObject).setHeader("V", "1.4.5");
            ((HttpPost)localObject).setHeader("APNAME", b);
            ((HttpPost)localObject).setHeader("UA", PzPay.n);
            ((HttpPost)localObject).setHeader("UID", PzPay.q);
            ((HttpPost)localObject).setHeader("IMSI", PzPay.r);
            ((HttpPost)localObject).setHeader("IMEI", PzPay.s);
            ((HttpPost)localObject).setHeader("TEL", PzPay.t);
            if (PzPay.u != null) {
              ((HttpPost)localObject).setHeader("CType", String.valueOf(PzPay.u.ordinal()));
            }
          }
          paramA = new HttpGet(paramString);
        }
        catch (UnsupportedEncodingException paramString)
        {
          throw new RuntimeException(paramString.getMessage(), paramString);
        }
      }
    }
    if ((paramMap != null) && (paramMap.containsKey("form")))
    {
      paramA.setHeader("User-Agent", PzPay.n);
      paramA.setHeader("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8");
      paramA.setHeader("x-up-calling-line-id", PzPay.t);
      if ((paramMap != null) && (!paramMap.isEmpty())) {
        localObject = paramMap.keySet().iterator();
      }
    }
    for (;;)
    {
      if (!((Iterator)localObject).hasNext())
      {
        a(paramString, paramA.getAllHeaders());
        return paramA;
        paramA.setHeader("AppId", PzPay.o);
        paramA.setHeader("PNO", PzPay.p);
        paramA.setHeader("V", "1.4.5");
        paramA.setHeader("APNAME", b);
        paramA.setHeader("UA", PzPay.n);
        paramA.setHeader("UID", PzPay.q);
        paramA.setHeader("IMSI", PzPay.r);
        paramA.setHeader("IMEI", PzPay.s);
        paramA.setHeader("TEL", PzPay.t);
        if (PzPay.u == null) {
          break;
        }
        paramA.setHeader("CType", String.valueOf(PzPay.u.ordinal()));
        break;
      }
      str = (String)((Iterator)localObject).next();
      paramA.setHeader(str, (String)paramMap.get(str));
    }
  }
  
  public final String a(String paramString, az.a paramA)
  {
    return a(paramString, new HashMap(), paramA);
  }
  
  /* Error */
  public final String a(String paramString, Map paramMap, az.a paramA)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aload_0
    //   4: iconst_0
    //   5: putfield 29	com/hzpz/pay/az:d	Z
    //   8: new 253	org/apache/http/impl/client/DefaultHttpClient
    //   11: dup
    //   12: invokespecial 254	org/apache/http/impl/client/DefaultHttpClient:<init>	()V
    //   15: astore 5
    //   17: aload 5
    //   19: invokeinterface 260 1 0
    //   24: ldc_w 262
    //   27: sipush 30000
    //   30: invokeinterface 268 3 0
    //   35: pop
    //   36: aload 5
    //   38: invokeinterface 260 1 0
    //   43: ldc_w 270
    //   46: sipush 30000
    //   49: invokeinterface 268 3 0
    //   54: pop
    //   55: invokestatic 275	android/net/Proxy:getDefaultHost	()Ljava/lang/String;
    //   58: ifnull +43 -> 101
    //   61: aload_0
    //   62: getfield 277	com/hzpz/pay/az:e	Z
    //   65: ifne +36 -> 101
    //   68: new 279	org/apache/http/HttpHost
    //   71: dup
    //   72: invokestatic 275	android/net/Proxy:getDefaultHost	()Ljava/lang/String;
    //   75: invokestatic 282	android/net/Proxy:getDefaultPort	()I
    //   78: invokespecial 285	org/apache/http/HttpHost:<init>	(Ljava/lang/String;I)V
    //   81: astore 6
    //   83: aload 5
    //   85: invokeinterface 260 1 0
    //   90: ldc_w 287
    //   93: aload 6
    //   95: invokeinterface 291 3 0
    //   100: pop
    //   101: aload 5
    //   103: aload_0
    //   104: aload_1
    //   105: aload_2
    //   106: aload_3
    //   107: invokespecial 293	com/hzpz/pay/az:b	(Ljava/lang/String;Ljava/util/Map;Lcom/hzpz/pay/az$a;)Lorg/apache/http/client/methods/HttpUriRequest;
    //   110: invokeinterface 297 2 0
    //   115: astore_1
    //   116: aload 4
    //   118: astore_3
    //   119: aload_1
    //   120: invokeinterface 303 1 0
    //   125: invokeinterface 308 1 0
    //   130: sipush 200
    //   133: if_icmpne +101 -> 234
    //   136: new 310	java/io/BufferedReader
    //   139: dup
    //   140: new 312	java/io/InputStreamReader
    //   143: dup
    //   144: aload_1
    //   145: invokeinterface 316 1 0
    //   150: invokeinterface 322 1 0
    //   155: invokespecial 325	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   158: invokespecial 328	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   161: astore_1
    //   162: aload_1
    //   163: astore_2
    //   164: new 330	java/lang/StringBuilder
    //   167: dup
    //   168: invokespecial 331	java/lang/StringBuilder:<init>	()V
    //   171: astore 5
    //   173: aload_1
    //   174: astore_2
    //   175: aload_1
    //   176: invokevirtual 334	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   179: astore_3
    //   180: aload_3
    //   181: ifnonnull +55 -> 236
    //   184: aload_1
    //   185: astore_2
    //   186: aload_0
    //   187: aload 5
    //   189: invokevirtual 335	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   192: putfield 27	com/hzpz/pay/az:g	Ljava/lang/String;
    //   195: aload_1
    //   196: astore_2
    //   197: ldc_w 337
    //   200: new 330	java/lang/StringBuilder
    //   203: dup
    //   204: ldc_w 339
    //   207: invokespecial 340	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   210: aload_0
    //   211: getfield 27	com/hzpz/pay/az:g	Ljava/lang/String;
    //   214: invokevirtual 343	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   217: invokevirtual 335	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   220: invokestatic 55	com/hzpz/pay/aP:c	(Ljava/lang/String;Ljava/lang/String;)V
    //   223: aload_1
    //   224: astore_2
    //   225: aload_0
    //   226: getfield 27	com/hzpz/pay/az:g	Ljava/lang/String;
    //   229: astore_3
    //   230: aload_1
    //   231: invokevirtual 346	java/io/BufferedReader:close	()V
    //   234: aload_3
    //   235: areturn
    //   236: aload_1
    //   237: astore_2
    //   238: aload 5
    //   240: aload_3
    //   241: invokevirtual 343	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   244: pop
    //   245: aload_1
    //   246: astore_2
    //   247: aload_1
    //   248: invokevirtual 334	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   251: astore_3
    //   252: goto -72 -> 180
    //   255: astore_1
    //   256: aconst_null
    //   257: astore_1
    //   258: aload_1
    //   259: astore_2
    //   260: ldc_w 337
    //   263: ldc_w 348
    //   266: invokestatic 55	com/hzpz/pay/aP:c	(Ljava/lang/String;Ljava/lang/String;)V
    //   269: aload_1
    //   270: astore_2
    //   271: aload_0
    //   272: iconst_1
    //   273: putfield 29	com/hzpz/pay/az:d	Z
    //   276: aload 4
    //   278: astore_3
    //   279: aload_1
    //   280: ifnull -46 -> 234
    //   283: aload_1
    //   284: invokevirtual 346	java/io/BufferedReader:close	()V
    //   287: aconst_null
    //   288: areturn
    //   289: astore_1
    //   290: aconst_null
    //   291: areturn
    //   292: astore_1
    //   293: aconst_null
    //   294: astore_1
    //   295: aload_1
    //   296: astore_2
    //   297: ldc_w 337
    //   300: ldc_w 350
    //   303: invokestatic 55	com/hzpz/pay/aP:c	(Ljava/lang/String;Ljava/lang/String;)V
    //   306: aload_1
    //   307: astore_2
    //   308: aload_0
    //   309: iconst_1
    //   310: putfield 29	com/hzpz/pay/az:d	Z
    //   313: aload 4
    //   315: astore_3
    //   316: aload_1
    //   317: ifnull -83 -> 234
    //   320: aload_1
    //   321: invokevirtual 346	java/io/BufferedReader:close	()V
    //   324: aconst_null
    //   325: areturn
    //   326: astore_1
    //   327: aconst_null
    //   328: areturn
    //   329: astore_3
    //   330: aconst_null
    //   331: astore_2
    //   332: aload_2
    //   333: astore_1
    //   334: ldc_w 352
    //   337: aload_3
    //   338: invokevirtual 353	org/apache/http/client/ClientProtocolException:getMessage	()Ljava/lang/String;
    //   341: invokestatic 55	com/hzpz/pay/aP:c	(Ljava/lang/String;Ljava/lang/String;)V
    //   344: aload 4
    //   346: astore_3
    //   347: aload_2
    //   348: ifnull -114 -> 234
    //   351: aload_2
    //   352: invokevirtual 346	java/io/BufferedReader:close	()V
    //   355: aconst_null
    //   356: areturn
    //   357: astore_1
    //   358: aconst_null
    //   359: areturn
    //   360: astore_3
    //   361: aconst_null
    //   362: astore_2
    //   363: aload_2
    //   364: astore_1
    //   365: ldc_w 352
    //   368: aload_3
    //   369: invokevirtual 354	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   372: invokestatic 55	com/hzpz/pay/aP:c	(Ljava/lang/String;Ljava/lang/String;)V
    //   375: aload 4
    //   377: astore_3
    //   378: aload_2
    //   379: ifnull -145 -> 234
    //   382: aload_2
    //   383: invokevirtual 346	java/io/BufferedReader:close	()V
    //   386: aconst_null
    //   387: areturn
    //   388: astore_1
    //   389: aconst_null
    //   390: areturn
    //   391: astore_1
    //   392: aconst_null
    //   393: astore_2
    //   394: aload_2
    //   395: ifnull +7 -> 402
    //   398: aload_2
    //   399: invokevirtual 346	java/io/BufferedReader:close	()V
    //   402: aload_1
    //   403: athrow
    //   404: astore_1
    //   405: aload_3
    //   406: areturn
    //   407: astore_2
    //   408: goto -6 -> 402
    //   411: astore_1
    //   412: goto -18 -> 394
    //   415: astore_3
    //   416: aload_1
    //   417: astore_2
    //   418: aload_3
    //   419: astore_1
    //   420: goto -26 -> 394
    //   423: astore_3
    //   424: aload_1
    //   425: astore_2
    //   426: goto -63 -> 363
    //   429: astore_3
    //   430: aload_1
    //   431: astore_2
    //   432: goto -100 -> 332
    //   435: astore_2
    //   436: goto -141 -> 295
    //   439: astore_2
    //   440: goto -182 -> 258
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	443	0	this	az
    //   0	443	1	paramString	String
    //   0	443	2	paramMap	Map
    //   0	443	3	paramA	az.a
    //   1	375	4	localObject1	Object
    //   15	224	5	localObject2	Object
    //   81	13	6	localHttpHost	org.apache.http.HttpHost
    // Exception table:
    //   from	to	target	type
    //   8	101	255	org/apache/http/conn/ConnectTimeoutException
    //   101	116	255	org/apache/http/conn/ConnectTimeoutException
    //   119	162	255	org/apache/http/conn/ConnectTimeoutException
    //   283	287	289	java/io/IOException
    //   8	101	292	java/net/SocketTimeoutException
    //   101	116	292	java/net/SocketTimeoutException
    //   119	162	292	java/net/SocketTimeoutException
    //   320	324	326	java/io/IOException
    //   8	101	329	org/apache/http/client/ClientProtocolException
    //   101	116	329	org/apache/http/client/ClientProtocolException
    //   119	162	329	org/apache/http/client/ClientProtocolException
    //   351	355	357	java/io/IOException
    //   8	101	360	java/lang/Exception
    //   101	116	360	java/lang/Exception
    //   119	162	360	java/lang/Exception
    //   382	386	388	java/io/IOException
    //   8	101	391	finally
    //   101	116	391	finally
    //   119	162	391	finally
    //   230	234	404	java/io/IOException
    //   398	402	407	java/io/IOException
    //   164	173	411	finally
    //   175	180	411	finally
    //   186	195	411	finally
    //   197	223	411	finally
    //   225	230	411	finally
    //   238	245	411	finally
    //   247	252	411	finally
    //   260	269	411	finally
    //   271	276	411	finally
    //   297	306	411	finally
    //   308	313	411	finally
    //   334	344	415	finally
    //   365	375	415	finally
    //   164	173	423	java/lang/Exception
    //   175	180	423	java/lang/Exception
    //   186	195	423	java/lang/Exception
    //   197	223	423	java/lang/Exception
    //   225	230	423	java/lang/Exception
    //   238	245	423	java/lang/Exception
    //   247	252	423	java/lang/Exception
    //   164	173	429	org/apache/http/client/ClientProtocolException
    //   175	180	429	org/apache/http/client/ClientProtocolException
    //   186	195	429	org/apache/http/client/ClientProtocolException
    //   197	223	429	org/apache/http/client/ClientProtocolException
    //   225	230	429	org/apache/http/client/ClientProtocolException
    //   238	245	429	org/apache/http/client/ClientProtocolException
    //   247	252	429	org/apache/http/client/ClientProtocolException
    //   164	173	435	java/net/SocketTimeoutException
    //   175	180	435	java/net/SocketTimeoutException
    //   186	195	435	java/net/SocketTimeoutException
    //   197	223	435	java/net/SocketTimeoutException
    //   225	230	435	java/net/SocketTimeoutException
    //   238	245	435	java/net/SocketTimeoutException
    //   247	252	435	java/net/SocketTimeoutException
    //   164	173	439	org/apache/http/conn/ConnectTimeoutException
    //   175	180	439	org/apache/http/conn/ConnectTimeoutException
    //   186	195	439	org/apache/http/conn/ConnectTimeoutException
    //   197	223	439	org/apache/http/conn/ConnectTimeoutException
    //   225	230	439	org/apache/http/conn/ConnectTimeoutException
    //   238	245	439	org/apache/http/conn/ConnectTimeoutException
    //   247	252	439	org/apache/http/conn/ConnectTimeoutException
  }
  
  public final void a(String paramString, Map paramMap, az.a paramA, boolean paramBoolean)
  {
    this.e = paramBoolean;
    this.c = paramString;
    this.a = paramMap;
    this.f = paramA;
    new Handler().post(new bh(this));
  }
  
  public abstract void a(String paramString, boolean paramBoolean);
}
