package com.hzpz.pay;

import java.io.UnsupportedEncodingException;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

public final class bc
{
  private static final char[] a = { 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102 };
  private static final byte[] b = { 48, 48, 48, 48, 48, 48, 48, 48 };
  
  public static String a(String paramString1, String paramString2)
  {
    return a(paramString1, paramString2, "UTF-8");
  }
  
  private static String a(String paramString1, String paramString2, String paramString3)
  {
    try
    {
      int j = paramString1.length() % 8;
      int i;
      if (j != 0)
      {
        paramString1 = new StringBuffer(paramString1);
        i = 0;
        if (i < 8 - j) {}
      }
      for (paramString1 = new String(paramString1).getBytes(paramString3);; paramString1 = paramString1.getBytes(paramString3))
      {
        return bb.a(a(paramString2, 1, null, paramString1)).replaceAll("[\\n\\r]", "");
        paramString1.append(' ');
        i += 1;
        break;
      }
      return null;
    }
    catch (UnsupportedEncodingException paramString1)
    {
      paramString1.printStackTrace();
    }
  }
  
  private static SecretKey a(String paramString)
  {
    Object localObject = null;
    try
    {
      paramString = b(paramString).substring(0, 24).getBytes("GBK");
      return new SecretKeySpec(paramString, "DESede");
    }
    catch (UnsupportedEncodingException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
        paramString = localObject;
      }
    }
  }
  
  private static byte[] a(String paramString, int paramInt, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
  {
    paramString = a(paramString);
    paramArrayOfByte1 = new IvParameterSpec(b);
    try
    {
      Cipher localCipher = Cipher.getInstance("DESede/CBC/NoPadding");
      localCipher.init(1, paramString, paramArrayOfByte1);
      paramString = localCipher.doFinal(paramArrayOfByte2);
      return paramString;
    }
    catch (NoSuchAlgorithmException paramString)
    {
      paramString.printStackTrace();
      return null;
    }
    catch (NoSuchPaddingException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
      }
    }
    catch (InvalidKeyException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
      }
    }
    catch (InvalidAlgorithmParameterException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
      }
    }
    catch (IllegalBlockSizeException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
      }
    }
    catch (BadPaddingException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
      }
    }
  }
  
  private static char[] a(byte[] paramArrayOfByte)
  {
    int j = 0;
    int k = paramArrayOfByte.length;
    char[] arrayOfChar = new char[k << 1];
    int i = 0;
    for (;;)
    {
      if (i >= k) {
        return arrayOfChar;
      }
      int m = j + 1;
      arrayOfChar[j] = a[((paramArrayOfByte[i] & 0xF0) >>> 4)];
      j = m + 1;
      arrayOfChar[m] = a[(paramArrayOfByte[i] & 0xF)];
      i += 1;
    }
  }
  
  /* Error */
  private static String b(String paramString)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_1
    //   2: ldc -115
    //   4: invokestatic 146	java/security/MessageDigest:getInstance	(Ljava/lang/String;)Ljava/security/MessageDigest;
    //   7: astore_2
    //   8: aload_2
    //   9: astore_1
    //   10: aload_1
    //   11: aload_0
    //   12: ldc 90
    //   14: invokevirtual 58	java/lang/String:getBytes	(Ljava/lang/String;)[B
    //   17: invokevirtual 149	java/security/MessageDigest:update	([B)V
    //   20: new 41	java/lang/String
    //   23: dup
    //   24: aload_1
    //   25: invokevirtual 153	java/security/MessageDigest:digest	()[B
    //   28: invokestatic 155	com/hzpz/pay/bc:a	([B)[C
    //   31: invokespecial 158	java/lang/String:<init>	([C)V
    //   34: areturn
    //   35: astore_2
    //   36: aload_2
    //   37: invokevirtual 133	java/security/NoSuchAlgorithmException:printStackTrace	()V
    //   40: goto -30 -> 10
    //   43: astore_0
    //   44: aload_0
    //   45: invokevirtual 80	java/io/UnsupportedEncodingException:printStackTrace	()V
    //   48: goto -28 -> 20
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	51	0	paramString	String
    //   1	24	1	localObject	Object
    //   7	2	2	localMessageDigest	java.security.MessageDigest
    //   35	2	2	localNoSuchAlgorithmException	NoSuchAlgorithmException
    // Exception table:
    //   from	to	target	type
    //   2	8	35	java/security/NoSuchAlgorithmException
    //   10	20	43	java/io/UnsupportedEncodingException
  }
}
