package com.popgame.popcentersdk.view;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.PorterDuff.Mode;
import android.graphics.PorterDuffXfermode;
import android.graphics.RectF;
import android.webkit.WebView;
import com.popgame.popcentersdk.util.XPUtils;

public class PopWebView
  extends WebView
{
  private int height = 0;
  private float p_radius = 0.0F;
  private int p_x = 0;
  private int p_y = 0;
  private Paint paint1;
  private Paint paint2;
  private int width = 0;
  
  public PopWebView(Context paramContext)
  {
    super(paramContext);
  }
  
  private void drawLeftDown(Canvas paramCanvas)
  {
    try
    {
      Path localPath = new Path();
      localPath.moveTo(this.p_x, this.p_y + this.height - this.p_radius);
      localPath.lineTo(this.p_x, this.p_y + this.height);
      localPath.lineTo(this.p_x + this.p_radius, this.p_y + this.height);
      localPath.arcTo(new RectF(this.p_x, this.p_y + this.height - this.p_radius * 2.0F, this.p_x + this.p_radius * 2.0F, this.p_y + this.height), 90.0F, 90.0F);
      localPath.close();
      paramCanvas.drawPath(localPath, this.paint1);
      return;
    }
    catch (Throwable paramCanvas)
    {
      paramCanvas.printStackTrace();
    }
  }
  
  private void drawLeftUp(Canvas paramCanvas)
  {
    try
    {
      Path localPath = new Path();
      localPath.moveTo(this.p_x, this.p_radius);
      localPath.lineTo(this.p_x, this.p_y);
      localPath.lineTo(this.p_radius, this.p_y);
      localPath.arcTo(new RectF(this.p_x, this.p_y, this.p_x + this.p_radius * 2.0F, this.p_y + this.p_radius * 2.0F), -90.0F, -90.0F);
      localPath.close();
      paramCanvas.drawPath(localPath, this.paint1);
      return;
    }
    catch (Throwable paramCanvas)
    {
      paramCanvas.printStackTrace();
    }
  }
  
  private void drawRightDown(Canvas paramCanvas)
  {
    try
    {
      Path localPath = new Path();
      localPath.moveTo(this.p_x + this.width - this.p_radius, this.p_y + this.height);
      localPath.lineTo(this.p_x + this.width, this.p_y + this.height);
      localPath.lineTo(this.p_x + this.width, this.p_y + this.height - this.p_radius);
      localPath.arcTo(new RectF(this.p_x + this.width - this.p_radius * 2.0F, this.p_y + this.height - this.p_radius * 2.0F, this.p_x + this.width, this.p_y + this.height), 0.0F, 90.0F);
      localPath.close();
      paramCanvas.drawPath(localPath, this.paint1);
      return;
    }
    catch (Throwable paramCanvas)
    {
      paramCanvas.printStackTrace();
    }
  }
  
  private void drawRightUp(Canvas paramCanvas)
  {
    try
    {
      Path localPath = new Path();
      localPath.moveTo(this.p_x + this.width, this.p_y + this.p_radius);
      localPath.lineTo(this.p_x + this.width, this.p_y);
      localPath.lineTo(this.p_x + this.width - this.p_radius, this.p_y);
      localPath.arcTo(new RectF(this.p_x + this.width - this.p_radius * 2.0F, this.p_y, this.p_x + this.width, this.p_y + this.p_radius * 2.0F), -90.0F, 90.0F);
      localPath.close();
      paramCanvas.drawPath(localPath, this.paint1);
      return;
    }
    catch (Throwable paramCanvas)
    {
      paramCanvas.printStackTrace();
    }
  }
  
  public void draw(Canvas paramCanvas)
  {
    try
    {
      this.p_x = getScrollX();
      this.p_y = getScrollY();
      Bitmap localBitmap = Bitmap.createBitmap(this.p_x + this.width, this.p_y + this.height, Bitmap.Config.ARGB_8888);
      Canvas localCanvas = new Canvas(localBitmap);
      super.draw(localCanvas);
      drawLeftUp(localCanvas);
      drawRightUp(localCanvas);
      drawLeftDown(localCanvas);
      drawRightDown(localCanvas);
      paramCanvas.drawBitmap(localBitmap, 0.0F, 0.0F, this.paint2);
      localBitmap.recycle();
      return;
    }
    catch (Throwable paramCanvas)
    {
      paramCanvas.printStackTrace();
    }
  }
  
  public void initPopWebView(int paramInt1, int paramInt2, float paramFloat)
  {
    try
    {
      this.width = paramInt1;
      this.height = paramInt2;
      this.p_radius = paramFloat;
      this.paint1 = new Paint();
      this.paint1.setColor(-1);
      this.paint1.setAntiAlias(true);
      this.paint1.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_OUT));
      this.paint2 = new Paint();
      this.paint2.setXfermode(null);
      return;
    }
    catch (Throwable localThrowable)
    {
      XPUtils.xpPrint("initPopWebView Error");
      localThrowable.printStackTrace();
    }
  }
}
