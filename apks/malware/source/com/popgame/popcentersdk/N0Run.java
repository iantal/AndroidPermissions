package com.popgame.popcentersdk;

import android.app.Activity;
import android.content.Context;
import com.n0stop.n0base.N0Base;
import com.popgame.popcentersdk.business.PopSdkListener;
import com.popgame.popcentersdk.business.PopUserBusiness;
import com.popgame.popcentersdk.channel.chaerge.POPChargeCenter;
import com.popgame.popcentersdk.channel.login.POPUserCenter;
import com.popgame.popcentersdk.util.HttpClients;
import com.popgame.popcentersdk.util.XPUtils;

public class N0Run
{
  private static PopSdkListener MyListener;
  public static boolean N0RunDebug = true;
  public static final String TAG = "PopGame";
  public static Object activityK1O1Run;
  private static HttpClients client = null;
  public static String m_para;
  private static String screenDirection = "H";
  public static String sdkParam;
  public static boolean status = false;
  
  static
  {
    MyListener = null;
    activityK1O1Run = null;
    m_para = null;
    sdkParam = null;
  }
  
  public N0Run() {}
  
  public static PopSdkListener GetCenterListener()
  {
    return MyListener;
  }
  
  public static void SDKDestroy(Activity paramActivity)
  {
    POPUserCenter.getInstance().Destroy(paramActivity);
  }
  
  public static String SdkSubmitExtendData(String paramString, Activity paramActivity)
  {
    String str = PopUserBusiness.checkExtendParm(paramString);
    if (str.equals("N")) {
      return str;
    }
    sdkParam = paramString;
    POPUserCenter.getInstance().sdkSubmitExtendData(paramString, paramActivity);
    return str;
  }
  
  public static String UserCenter(Object paramObject, boolean paramBoolean)
  {
    if ((PopManager.UserIP != null) && (!PopManager.UserIP.equals("")))
    {
      XPUtils.xpPrint("2222");
      try
      {
        activityK1O1Run = paramObject;
        POPUserCenter.getInstance().userCenter((Activity)activityK1O1Run, null, paramBoolean);
        return "yes";
      }
      catch (Throwable paramObject)
      {
        paramObject.printStackTrace();
        XPUtils.xpPrint(paramObject.toString());
        return "no";
      }
    }
    XPUtils.xpPrint("no");
    return "no";
  }
  
  public static void UserLogout(Activity paramActivity)
  {
    POPUserCenter.getInstance().logOut(paramActivity);
  }
  
  public static String charge(Activity paramActivity, String paramString1, String paramString2, boolean paramBoolean)
  {
    activityK1O1Run = paramActivity;
    return POPChargeCenter.getInstance().charge((Activity)activityK1O1Run, paramString2, paramBoolean);
  }
  
  public static String getChannelNum()
  {
    return m_para;
  }
  
  public static void ngamerun(Object paramObject, String paramString)
  {
    if (status) {
      return;
    }
    XPUtils.xpPrint("activity-->" + paramObject);
    m_para = paramString;
    ngamerun1(paramObject);
  }
  
  private static void ngamerun1(Object paramObject)
  {
    try
    {
      activityK1O1Run = paramObject;
      if (status) {
        return;
      }
      status = true;
      PopManager.getInstance().initialLogCenter(m_para, "abcc");
      PopManager.initial();
      POPUserCenter.init();
      POPChargeCenter.init();
      XPUtils.xpPrint("enter");
      return;
    }
    catch (Throwable paramObject)
    {
      if (N0RunDebug)
      {
        paramObject.printStackTrace();
        XPUtils.xpPrint(paramObject.toString());
      }
    }
  }
  
  public static void nsorun(String paramString)
  {
    try
    {
      System.loadLibrary(paramString);
      return;
    }
    catch (Throwable paramString) {}
  }
  
  public static void runCharge(Context paramContext, String paramString)
  {
    String str = paramString;
    if (paramString.indexOf("##") < 0) {
      str = paramString + "##0";
    }
    N0Base.runCharge(paramContext, "payctrl:pay?args=" + str + "&delayTime=1");
  }
  
  public static void setCenterListener(PopSdkListener paramPopSdkListener)
  {
    MyListener = paramPopSdkListener;
  }
  
  public static void setScreenOrientation(Activity paramActivity, boolean paramBoolean)
  {
    if (paramBoolean)
    {
      screenDirection = "L";
      paramActivity.setRequestedOrientation(0);
      return;
    }
    screenDirection = "H";
    paramActivity.setRequestedOrientation(1);
  }
}
