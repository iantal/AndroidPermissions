package com.bx.pay.netx.core;

import android.os.Process;
import com.bx.pay.netx.core.a.a;
import com.bx.pay.netx.core.a.d;
import java.util.concurrent.BlockingQueue;

public final class b
  extends Thread
{
  private static final boolean a = w.b;
  private final BlockingQueue b;
  private final BlockingQueue c;
  private final a d;
  private final e e;
  private volatile boolean f = false;
  
  public b(BlockingQueue paramBlockingQueue1, BlockingQueue paramBlockingQueue2, a paramA, e paramE)
  {
    this.d = paramA;
    this.e = paramE;
    this.b = paramBlockingQueue1;
    this.c = paramBlockingQueue2;
  }
  
  public final void a()
  {
    this.f = true;
    interrupt();
  }
  
  public final void run()
  {
    if (a) {
      w.a("start new dispatcher", new Object[0]);
    }
    Process.setThreadPriority(10);
    if (this.d != null) {
      this.d.a();
    }
    ab localAb;
    label108:
    d localD;
    for (;;)
    {
      try
      {
        localAb = (ab)this.b.take();
        localAb.a("cache-queue-take");
        this.e.c(localAb);
        if (!localAb.i()) {
          break label108;
        }
        localAb.b("cache-discard-canceled");
        this.e.b(localAb);
        this.e.a(localAb);
        continue;
        if (!this.f) {
          continue;
        }
      }
      catch (InterruptedException localInterruptedException) {}
      return;
      if (this.d == null) {
        break label317;
      }
      localD = this.d.a(localAb.e());
      label127:
      if (localD == null)
      {
        localAb.a("cache-miss");
        this.c.put(localAb);
        this.e.e(localAb);
      }
      else
      {
        if (localD.b >= System.currentTimeMillis()) {
          break label322;
        }
        i = 1;
        label173:
        if (i == 0) {
          break;
        }
        localAb.a("cache-hit-expired");
        this.c.put(localAb);
        this.e.e(localAb);
      }
    }
    localAb.a("cache-hit");
    af localAf = localAb.a(new u(localD.a, localD.c));
    localAb.a("cache-hit-parsed");
    this.e.d(localAb);
    if (localD.b < System.currentTimeMillis()) {}
    for (int i = 1;; i = 0)
    {
      if (i == 0)
      {
        this.e.a(localAb, localAf);
        break;
      }
      localAb.a("cache-hit-refresh-needed");
      localAf.d = true;
      this.e.a(localAb, localAf, new c(this, localAb));
      break;
      label317:
      localD = null;
      break label127;
      label322:
      i = 0;
      break label173;
    }
  }
}
