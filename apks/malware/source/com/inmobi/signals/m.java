package com.inmobi.signals;

import com.inmobi.commons.core.utilities.Logger;
import com.inmobi.commons.core.utilities.Logger.InternalLogLevel;
import com.inmobi.signals.b.a;
import java.util.Calendar;
import java.util.List;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class m
{
  private static final String a = m.class.getSimpleName();
  private long b;
  private a c;
  private List d;
  
  public m()
  {
    a(Calendar.getInstance().getTimeInMillis());
  }
  
  public void a(long paramLong)
  {
    this.b = paramLong;
  }
  
  public void a(a paramA)
  {
    this.c = paramA;
  }
  
  public void a(List paramList)
  {
    this.d = paramList;
  }
  
  public boolean a()
  {
    return (this.c != null) || (this.d != null);
  }
  
  public JSONObject b()
  {
    JSONObject localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("ts", this.b);
      if (this.c != null) {
        localJSONObject.put("c-ap", this.c.b());
      }
      JSONArray localJSONArray = new JSONArray();
      if (this.d != null)
      {
        int i = 0;
        while (i < this.d.size())
        {
          localJSONArray.put(((a)this.d.get(i)).b());
          i += 1;
        }
        if (localJSONArray.length() > 0) {
          localJSONObject.put("v-ap", localJSONArray);
        }
      }
      return localJSONObject;
    }
    catch (JSONException localJSONException)
    {
      Logger.a(Logger.InternalLogLevel.INTERNAL, a, "Error while converting IceWifiCellSample to string.", localJSONException);
    }
    return localJSONObject;
  }
}
