package com.inmobi.rendering;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import com.inmobi.commons.core.utilities.Logger;
import com.inmobi.commons.core.utilities.Logger.InternalLogLevel;
import com.inmobi.commons.core.utilities.info.DisplayInfo;
import com.inmobi.commons.core.utilities.info.c;
import java.util.HashMap;
import java.util.Map;
import java.util.Stack;

@SuppressLint({"ClickableViewAccessibility"})
public class InMobiAdActivity
  extends Activity
{
  @SuppressLint({"UseSparseArrays"})
  public static Map a = new HashMap();
  @SuppressLint({"UseSparseArrays"})
  public static Map b = new HashMap();
  public static Integer c = Integer.valueOf(0);
  private static final String d = InMobiAdActivity.class.getSimpleName();
  private static Stack e = new Stack();
  private static RenderView f;
  private RenderView g;
  private RenderView h;
  private CustomView i;
  private CustomView j;
  private int k;
  private boolean l = false;
  
  public InMobiAdActivity() {}
  
  public static int a(Intent paramIntent, InMobiAdActivity.b paramB)
  {
    Integer localInteger = c;
    c = Integer.valueOf(c.intValue() + 1);
    a.put(c, paramB);
    b.put(c, paramIntent);
    return c.intValue();
  }
  
  public static int a(RenderView paramRenderView)
  {
    e.push(paramRenderView);
    return e.indexOf(paramRenderView);
  }
  
  public static RenderView a()
  {
    return (RenderView)e.peek();
  }
  
  private void a(ViewGroup paramViewGroup)
  {
    float f1 = DisplayInfo.a().c();
    LinearLayout localLinearLayout = new LinearLayout(this);
    Object localObject = new RelativeLayout.LayoutParams(-1, (int)(48.0F * f1));
    localLinearLayout.setOrientation(0);
    localLinearLayout.setId(65533);
    localLinearLayout.setWeightSum(100.0F);
    localLinearLayout.setBackgroundResource(17301658);
    localLinearLayout.setBackgroundColor(-7829368);
    ((RelativeLayout.LayoutParams)localObject).addRule(12);
    paramViewGroup.addView(localLinearLayout, (ViewGroup.LayoutParams)localObject);
    paramViewGroup = new LinearLayout.LayoutParams(-1, -1);
    paramViewGroup.weight = 25.0F;
    localObject = new CustomView(this, f1, CustomView.SwitchIconType.CLOSE_ICON);
    ((CustomView)localObject).setOnTouchListener(new InMobiAdActivity.1(this));
    localLinearLayout.addView((View)localObject, paramViewGroup);
    localObject = new CustomView(this, f1, CustomView.SwitchIconType.REFRESH);
    ((CustomView)localObject).setOnTouchListener(new InMobiAdActivity.2(this));
    localLinearLayout.addView((View)localObject, paramViewGroup);
    localObject = new CustomView(this, f1, CustomView.SwitchIconType.BACK);
    ((CustomView)localObject).setOnTouchListener(new InMobiAdActivity.3(this));
    localLinearLayout.addView((View)localObject, paramViewGroup);
    localObject = new CustomView(this, f1, CustomView.SwitchIconType.FORWARD_INACTIVE);
    ((CustomView)localObject).setOnTouchListener(new InMobiAdActivity.4(this));
    localLinearLayout.addView((View)localObject, paramViewGroup);
  }
  
  private void b()
  {
    RelativeLayout localRelativeLayout = new RelativeLayout(this);
    RelativeLayout.LayoutParams localLayoutParams = new RelativeLayout.LayoutParams(-1, -1);
    localLayoutParams.addRule(10);
    localLayoutParams.addRule(2, 65533);
    localRelativeLayout.setBackgroundColor(-1);
    localRelativeLayout.addView(this.h, localLayoutParams);
    a(localRelativeLayout);
    setContentView(localRelativeLayout);
  }
  
  public static void b(RenderView paramRenderView)
  {
    f = paramRenderView;
  }
  
  private void c()
  {
    FrameLayout localFrameLayout = (FrameLayout)findViewById(16908290);
    RelativeLayout localRelativeLayout = new RelativeLayout(this);
    float f1 = DisplayInfo.a().c();
    RelativeLayout.LayoutParams localLayoutParams1 = new RelativeLayout.LayoutParams(-1, -1);
    localLayoutParams1.addRule(10);
    if (this.g.getParent() != null) {
      ((ViewGroup)this.g.getParent()).removeView(this.g);
    }
    RelativeLayout.LayoutParams localLayoutParams2 = new RelativeLayout.LayoutParams((int)(50.0F * f1), (int)(50.0F * f1));
    localLayoutParams2.addRule(11);
    this.i = new CustomView(this, f1, CustomView.SwitchIconType.CLOSE_BUTTON);
    this.i.setId(65532);
    this.i.setOnClickListener(new InMobiAdActivity.5(this));
    this.j = new CustomView(this, f1, CustomView.SwitchIconType.CLOSE_TRANSPARENT);
    this.j.setId(65531);
    this.j.setOnClickListener(new InMobiAdActivity.6(this));
    localRelativeLayout.setId(65534);
    localRelativeLayout.addView(this.g, localLayoutParams1);
    localRelativeLayout.addView(this.i, localLayoutParams2);
    localRelativeLayout.addView(this.j, localLayoutParams2);
    localRelativeLayout.setBackgroundColor(0);
    localFrameLayout.addView(localRelativeLayout, new RelativeLayout.LayoutParams(-1, -1));
    this.g.a(this.g.e());
    this.g.b(this.g.d());
  }
  
  void a(boolean paramBoolean)
  {
    this.l = paramBoolean;
  }
  
  protected void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    super.onActivityResult(paramInt1, paramInt2, paramIntent);
    InMobiAdActivity.b localB = (InMobiAdActivity.b)a.get(Integer.valueOf(paramInt1));
    a.remove(Integer.valueOf(paramInt1));
    b.remove(Integer.valueOf(paramInt1));
    localB.a(paramInt2, paramIntent);
    this.l = true;
    finish();
  }
  
  public void onBackPressed()
  {
    if (this.k == 102)
    {
      this.g.h();
      if (!this.g.f()) {}
    }
    while (this.k != 100)
    {
      return;
      this.l = true;
      this.g.j();
      return;
    }
    this.l = true;
    finish();
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    super.onConfigurationChanged(paramConfiguration);
    if (this.h != null) {
      this.h.k();
    }
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    this.k = getIntent().getIntExtra("com.inmobi.rendering.InMobiAdActivity.EXTRA_AD_ACTIVITY_TYPE", 102);
    if (this.k == 100)
    {
      paramBundle = getIntent().getStringExtra("com.inmobi.rendering.InMobiAdActivity.IN_APP_BROWSER_URL");
      this.h = new RenderView(this, new RenderingProperties(RenderingProperties.PlacementType.FULL_SCREEN));
      this.h.a(f.getListener(), f.getRenderingConfig(), f.getMraidConfig());
      b();
      this.h.loadUrl(paramBundle);
      this.h.getListener().e(this.h);
      this.h.setFullScreenActivity(this);
    }
    do
    {
      do
      {
        do
        {
          return;
          if (this.k != 102) {
            break;
          }
          m = getIntent().getIntExtra("com.inmobi.rendering.InMobiAdActivity.EXTRA_AD_RENDERVIEW_INDEX", -1);
        } while (m == -1);
        if (getIntent().getBooleanExtra("com.inmobi.rendering.InMobiAdActivity.EXTRA_AD_ACTIVITY_IS_FULL_SCREEN", false))
        {
          requestWindowFeature(1);
          getWindow().setFlags(1024, 1024);
        }
        this.g = ((RenderView)e.get(m));
        c();
        this.g.setFullScreenActivity(this);
      } while (this.g.getAdScreenEventsListener() == null);
      this.g.getAdScreenEventsListener().a();
      return;
    } while (this.k != 103);
    int m = getIntent().getIntExtra("id", -1);
    if (m == -1)
    {
      Logger.a(Logger.InternalLogLevel.INTERNAL, d, "Invalid Request Code Supplied");
      return;
    }
    startActivityForResult((Intent)b.get(Integer.valueOf(m)), m);
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
    if (this.l)
    {
      if (this.k != 100) {
        break label44;
      }
      this.h.getListener().f(this.h);
      this.h.destroy();
    }
    label44:
    while (this.k != 102) {
      return;
    }
    if (this.g.getAdScreenEventsListener() != null) {
      this.g.getAdScreenEventsListener().b();
    }
    e.pop();
  }
  
  protected void onResume()
  {
    super.onResume();
  }
}
