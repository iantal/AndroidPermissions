package com.inmobi.commons.core.a;

import com.inmobi.commons.core.utilities.Logger;
import com.inmobi.commons.core.utilities.Logger.InternalLogLevel;

public class c
  implements Thread.UncaughtExceptionHandler
{
  private static final String b = c.class.getSimpleName();
  private static boolean c = false;
  private static c.a d;
  private Thread.UncaughtExceptionHandler a;
  
  private c(Thread.UncaughtExceptionHandler paramUncaughtExceptionHandler)
  {
    this.a = paramUncaughtExceptionHandler;
  }
  
  public static void a()
  {
    try
    {
      if (!c)
      {
        a localA = new a();
        d = new c.a();
        com.inmobi.commons.core.configs.b.a().a(localA, d);
        com.inmobi.commons.core.c.a.a().a(localA.a(), localA.e());
        Thread.setDefaultUncaughtExceptionHandler(new c(Thread.getDefaultUncaughtExceptionHandler()));
        c = true;
      }
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  private boolean a(Throwable paramThrowable)
  {
    boolean bool2 = false;
    paramThrowable = paramThrowable.getStackTrace();
    int j = paramThrowable.length;
    int i = 0;
    for (;;)
    {
      boolean bool1 = bool2;
      if (i < j)
      {
        if (paramThrowable[i].getClassName().contains("com.inmobi.")) {
          bool1 = true;
        }
      }
      else {
        return bool1;
      }
      i += 1;
    }
  }
  
  public void uncaughtException(Thread paramThread, Throwable paramThrowable)
  {
    if (a(paramThrowable))
    {
      Logger.a(Logger.InternalLogLevel.INTERNAL, b, "Crash due to inmobi, will report it");
      b localB = new b(paramThread, paramThrowable);
      com.inmobi.commons.core.c.a.a().a(localB);
    }
    this.a.uncaughtException(paramThread, paramThrowable);
  }
}
