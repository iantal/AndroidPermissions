package com.inmobi.commons.core.utilities.info;

import android.content.Context;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.os.Build.VERSION;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.WindowManager;
import android.widget.TextView;
import com.inmobi.commons.a.a;
import java.util.HashMap;
import java.util.Map;

public class DisplayInfo
{
  public static int a(int paramInt)
  {
    float f = a().c();
    return Math.round(paramInt / f);
  }
  
  public static c a()
  {
    DisplayMetrics localDisplayMetrics = new DisplayMetrics();
    ((WindowManager)a.b().getSystemService("window")).getDefaultDisplay().getMetrics(localDisplayMetrics);
    float f = localDisplayMetrics.density;
    return new c(Math.round(localDisplayMetrics.widthPixels / f), Math.round(localDisplayMetrics.heightPixels / f), f);
  }
  
  public static int b()
  {
    Context localContext = a.b();
    int i = ((WindowManager)localContext.getSystemService("window")).getDefaultDisplay().getRotation();
    switch (localContext.getResources().getConfiguration().orientation)
    {
    default: 
      return DisplayInfo.ORIENTATION_VALUES.PORTRAIT.getValue();
    case 1: 
      if (Build.VERSION.SDK_INT < 8) {
        return DisplayInfo.ORIENTATION_VALUES.PORTRAIT.getValue();
      }
      if ((i == 1) || (i == 2)) {
        return DisplayInfo.ORIENTATION_VALUES.REVERSE_PORTRAIT.getValue();
      }
      return DisplayInfo.ORIENTATION_VALUES.PORTRAIT.getValue();
    }
    if (Build.VERSION.SDK_INT < 8) {
      return DisplayInfo.ORIENTATION_VALUES.LANDSCAPE.getValue();
    }
    if ((i == 0) || (i == 1)) {
      return DisplayInfo.ORIENTATION_VALUES.LANDSCAPE.getValue();
    }
    return DisplayInfo.ORIENTATION_VALUES.REVERSE_LANDSCAPE.getValue();
  }
  
  public static Map c()
  {
    HashMap localHashMap = new HashMap();
    localHashMap.put("d-device-screen-density", String.valueOf(a().c()));
    localHashMap.put("d-device-screen-size", d());
    localHashMap.put("d-density-dependent-screen-size", e());
    localHashMap.put("d-orientation", String.valueOf(b()));
    localHashMap.put("d-textsize", String.valueOf(f()));
    return localHashMap;
  }
  
  private static String d()
  {
    c localC = a();
    return localC.b() + "X" + localC.a();
  }
  
  private static String e()
  {
    DisplayMetrics localDisplayMetrics = new DisplayMetrics();
    ((WindowManager)a.b().getSystemService("window")).getDefaultDisplay().getMetrics(localDisplayMetrics);
    int i = localDisplayMetrics.widthPixels;
    int j = localDisplayMetrics.heightPixels;
    return i + "x" + j;
  }
  
  private static float f()
  {
    return new TextView(a.b()).getTextSize();
  }
}
