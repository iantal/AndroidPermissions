package com.unicom.wounipaysms.duandai;

import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import com.unicom.wounipaysms.bean.UpLinkSMSMBean;
import com.unicom.wounipaysms.delegate.RequestDelegate;
import com.unicom.wounipaysms.tools.PhoneInfoTools;

public class LixianSMS
{
  private String command = "1";
  private Context context;
  private String cporderid = "";
  private String feetype = "1";
  private Bundle mBundle;
  private Handler mPayPhoneHandler;
  private String mstrIMSI = "";
  private RequestDelegate reqDelegate;
  SendSMS sendsms;
  
  public LixianSMS(Bundle paramBundle, RequestDelegate paramRequestDelegate, Context paramContext)
  {
    this.context = paramContext;
    this.reqDelegate = paramRequestDelegate;
    this.mBundle = paramBundle;
    initPayPhoneHandler();
    this.mstrIMSI = getIMSI(paramContext);
    this.feetype = paramBundle.getString("feetype");
    if (TextUtils.isEmpty(this.feetype)) {
      this.feetype = "1";
    }
    if (PhoneInfoTools.isUnicomCard(this.mstrIMSI))
    {
      sendSMStoServer();
      return;
    }
    notUnicomCard();
  }
  
  public static final String getIMSI(Context paramContext)
  {
    String str = ((TelephonyManager)paramContext.getSystemService("phone")).getSubscriberId();
    paramContext = str;
    if (str == null) {
      paramContext = "";
    }
    return paramContext;
  }
  
  private UpLinkSMSMBean getMsg(Bundle paramBundle)
  {
    UpLinkSMSMBean localUpLinkSMSMBean = new UpLinkSMSMBean();
    localUpLinkSMSMBean.setKey(paramBundle.getString("key"));
    localUpLinkSMSMBean.setItfType(paramBundle.getString("itfType"));
    localUpLinkSMSMBean.setCommand(this.command);
    localUpLinkSMSMBean.setFeeType(this.feetype);
    localUpLinkSMSMBean.setCPID(paramBundle.getString("cpId"));
    localUpLinkSMSMBean.setServiceID(paramBundle.getString("serviceId"));
    localUpLinkSMSMBean.setChannelID(paramBundle.getString("channelId"));
    localUpLinkSMSMBean.setAppID(paramBundle.getString("appId"));
    localUpLinkSMSMBean.setMyID(paramBundle.getString("myId"));
    localUpLinkSMSMBean.setTIME(paramBundle.getString("time"));
    localUpLinkSMSMBean.setCpcustom(paramBundle.getString("cpcustom"));
    localUpLinkSMSMBean.setCPORDERID(paramBundle.getString("cporderId"));
    localUpLinkSMSMBean.setVerifyCode(localUpLinkSMSMBean.getCPID() + localUpLinkSMSMBean.getAppID() + localUpLinkSMSMBean.getServiceID());
    localUpLinkSMSMBean.setTradeName(paramBundle.getString("tradeName"));
    localUpLinkSMSMBean.setShowDialog(paramBundle.getBoolean("showDialog", true));
    localUpLinkSMSMBean.setPrice(paramBundle.getString("price"));
    localUpLinkSMSMBean.setServicePhone(paramBundle.getString("servicePhone"));
    localUpLinkSMSMBean.setKey(paramBundle.getString("key"));
    return localUpLinkSMSMBean;
  }
  
  private void initPayPhoneHandler()
  {
    this.mPayPhoneHandler = new LixianSMS.1(this, this.context.getMainLooper());
  }
  
  private void notUnicomCard()
  {
    this.reqDelegate.requestFailed(9992, "非联通的卡，请换另外的支付方式");
  }
  
  public void sendConfirmSMSToServer()
  {
    if (this.sendsms != null) {
      this.sendsms.sendVerifySMSToServer();
    }
    while (this.reqDelegate == null) {
      return;
    }
    this.reqDelegate.requestFailed(2238, "验证短信发送异常");
  }
  
  protected void sendSMStoServer()
  {
    UpLinkSMSMBean localUpLinkSMSMBean = getMsg(this.mBundle);
    if (TextUtils.isEmpty(localUpLinkSMSMBean.getServicePhone()))
    {
      this.reqDelegate.requestFailed(2235, "未填入客服电话");
      return;
    }
    if (TextUtils.isEmpty(localUpLinkSMSMBean.getPrice()))
    {
      this.reqDelegate.requestFailed(2234, "未填入产品价格");
      return;
    }
    if (TextUtils.isEmpty(localUpLinkSMSMBean.getTradeName()))
    {
      this.reqDelegate.requestFailed(2233, "未填入交易名称");
      return;
    }
    this.sendsms = new SendSMS(this.context, localUpLinkSMSMBean, this.reqDelegate);
    this.sendsms.sendOrderSMSToServer();
    WoUniPay.getInstance(this.context).showProgressDialog("正在订购，请稍候...");
  }
}
