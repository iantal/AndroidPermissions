package com.jiexinhongye.libforztool.ztool;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;

public class ZFileTask
{
  private ZProgressChanger a = new ZProgressChanger(null, null, null, 0L);
  
  public ZFileTask() {}
  
  public static boolean copyFile(File paramFile1, File paramFile2)
  {
    try
    {
      paramFile1 = new ZProgressChanger(new FileInputStream(paramFile1), new FileOutputStream(paramFile2));
      boolean bool = paramFile1.start();
      paramFile1.clear();
      return bool;
    }
    catch (FileNotFoundException paramFile1)
    {
      paramFile1.printStackTrace();
    }
    return false;
  }
  
  public static String getStr(File paramFile)
  {
    return getStr(paramFile, "utf-8");
  }
  
  /* Error */
  public static String getStr(File paramFile, String paramString)
  {
    // Byte code:
    //   0: new 56	java/io/InputStreamReader
    //   3: dup
    //   4: new 24	java/io/FileInputStream
    //   7: dup
    //   8: aload_0
    //   9: invokespecial 27	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   12: aload_1
    //   13: invokespecial 59	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;Ljava/lang/String;)V
    //   16: astore_0
    //   17: new 61	java/io/CharArrayWriter
    //   20: dup
    //   21: invokespecial 62	java/io/CharArrayWriter:<init>	()V
    //   24: astore 4
    //   26: aload 4
    //   28: astore_3
    //   29: aload_0
    //   30: astore_1
    //   31: sipush 1024
    //   34: newarray char
    //   36: astore 5
    //   38: aload 4
    //   40: astore_3
    //   41: aload_0
    //   42: astore_1
    //   43: aload_0
    //   44: aload 5
    //   46: invokevirtual 66	java/io/InputStreamReader:read	([C)I
    //   49: istore_2
    //   50: iload_2
    //   51: iconst_m1
    //   52: if_icmpne +46 -> 98
    //   55: aload 4
    //   57: astore_3
    //   58: aload_0
    //   59: astore_1
    //   60: aload_0
    //   61: invokevirtual 69	java/io/InputStreamReader:close	()V
    //   64: aload 4
    //   66: astore_3
    //   67: aload_0
    //   68: astore_1
    //   69: aload 4
    //   71: invokevirtual 70	java/io/CharArrayWriter:close	()V
    //   74: aload 4
    //   76: astore_3
    //   77: aload_0
    //   78: astore_1
    //   79: aload 4
    //   81: invokevirtual 74	java/io/CharArrayWriter:toString	()Ljava/lang/String;
    //   84: astore 5
    //   86: aload_0
    //   87: invokevirtual 69	java/io/InputStreamReader:close	()V
    //   90: aload 4
    //   92: invokevirtual 70	java/io/CharArrayWriter:close	()V
    //   95: aload 5
    //   97: areturn
    //   98: aload 4
    //   100: astore_3
    //   101: aload_0
    //   102: astore_1
    //   103: aload 4
    //   105: aload 5
    //   107: iconst_0
    //   108: iload_2
    //   109: invokevirtual 78	java/io/CharArrayWriter:write	([CII)V
    //   112: aload 4
    //   114: astore_3
    //   115: aload_0
    //   116: astore_1
    //   117: aload 4
    //   119: invokevirtual 81	java/io/CharArrayWriter:flush	()V
    //   122: goto -84 -> 38
    //   125: astore 5
    //   127: aload 4
    //   129: astore_3
    //   130: aload_0
    //   131: astore_1
    //   132: aload 5
    //   134: invokevirtual 43	java/io/FileNotFoundException:printStackTrace	()V
    //   137: aload_0
    //   138: invokevirtual 69	java/io/InputStreamReader:close	()V
    //   141: aload 4
    //   143: invokevirtual 70	java/io/CharArrayWriter:close	()V
    //   146: aconst_null
    //   147: areturn
    //   148: astore_0
    //   149: aload_0
    //   150: invokevirtual 82	java/io/IOException:printStackTrace	()V
    //   153: goto -63 -> 90
    //   156: astore_0
    //   157: aload_0
    //   158: invokevirtual 82	java/io/IOException:printStackTrace	()V
    //   161: goto -20 -> 141
    //   164: astore 5
    //   166: aconst_null
    //   167: astore 4
    //   169: aconst_null
    //   170: astore_0
    //   171: aload 4
    //   173: astore_3
    //   174: aload_0
    //   175: astore_1
    //   176: aload 5
    //   178: invokevirtual 83	java/io/UnsupportedEncodingException:printStackTrace	()V
    //   181: aload_0
    //   182: invokevirtual 69	java/io/InputStreamReader:close	()V
    //   185: aload 4
    //   187: invokevirtual 70	java/io/CharArrayWriter:close	()V
    //   190: aconst_null
    //   191: areturn
    //   192: astore_0
    //   193: aload_0
    //   194: invokevirtual 82	java/io/IOException:printStackTrace	()V
    //   197: goto -12 -> 185
    //   200: astore 5
    //   202: aconst_null
    //   203: astore 4
    //   205: aconst_null
    //   206: astore_0
    //   207: aload 4
    //   209: astore_3
    //   210: aload_0
    //   211: astore_1
    //   212: aload 5
    //   214: invokevirtual 82	java/io/IOException:printStackTrace	()V
    //   217: aload_0
    //   218: invokevirtual 69	java/io/InputStreamReader:close	()V
    //   221: aload 4
    //   223: invokevirtual 70	java/io/CharArrayWriter:close	()V
    //   226: aconst_null
    //   227: areturn
    //   228: astore_0
    //   229: aload_0
    //   230: invokevirtual 82	java/io/IOException:printStackTrace	()V
    //   233: goto -12 -> 221
    //   236: astore 4
    //   238: aconst_null
    //   239: astore_3
    //   240: aconst_null
    //   241: astore_0
    //   242: aload_0
    //   243: invokevirtual 69	java/io/InputStreamReader:close	()V
    //   246: aload_3
    //   247: invokevirtual 70	java/io/CharArrayWriter:close	()V
    //   250: aload 4
    //   252: athrow
    //   253: astore_0
    //   254: aload_0
    //   255: invokevirtual 82	java/io/IOException:printStackTrace	()V
    //   258: goto -12 -> 246
    //   261: astore 4
    //   263: aconst_null
    //   264: astore_3
    //   265: goto -23 -> 242
    //   268: astore 4
    //   270: aload_1
    //   271: astore_0
    //   272: goto -30 -> 242
    //   275: astore 5
    //   277: aconst_null
    //   278: astore 4
    //   280: goto -73 -> 207
    //   283: astore 5
    //   285: goto -78 -> 207
    //   288: astore 5
    //   290: aconst_null
    //   291: astore 4
    //   293: goto -122 -> 171
    //   296: astore 5
    //   298: goto -127 -> 171
    //   301: astore 5
    //   303: aconst_null
    //   304: astore 4
    //   306: aconst_null
    //   307: astore_0
    //   308: goto -181 -> 127
    //   311: astore 5
    //   313: aconst_null
    //   314: astore 4
    //   316: goto -189 -> 127
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	319	0	paramFile	File
    //   0	319	1	paramString	String
    //   49	60	2	i	int
    //   28	237	3	localCharArrayWriter1	java.io.CharArrayWriter
    //   24	198	4	localCharArrayWriter2	java.io.CharArrayWriter
    //   236	15	4	localObject1	Object
    //   261	1	4	localObject2	Object
    //   268	1	4	localObject3	Object
    //   278	37	4	localObject4	Object
    //   36	70	5	localObject5	Object
    //   125	8	5	localFileNotFoundException1	FileNotFoundException
    //   164	13	5	localUnsupportedEncodingException1	java.io.UnsupportedEncodingException
    //   200	13	5	localIOException1	IOException
    //   275	1	5	localIOException2	IOException
    //   283	1	5	localIOException3	IOException
    //   288	1	5	localUnsupportedEncodingException2	java.io.UnsupportedEncodingException
    //   296	1	5	localUnsupportedEncodingException3	java.io.UnsupportedEncodingException
    //   301	1	5	localFileNotFoundException2	FileNotFoundException
    //   311	1	5	localFileNotFoundException3	FileNotFoundException
    // Exception table:
    //   from	to	target	type
    //   31	38	125	java/io/FileNotFoundException
    //   43	50	125	java/io/FileNotFoundException
    //   60	64	125	java/io/FileNotFoundException
    //   69	74	125	java/io/FileNotFoundException
    //   79	86	125	java/io/FileNotFoundException
    //   103	112	125	java/io/FileNotFoundException
    //   117	122	125	java/io/FileNotFoundException
    //   86	90	148	java/io/IOException
    //   137	141	156	java/io/IOException
    //   0	17	164	java/io/UnsupportedEncodingException
    //   181	185	192	java/io/IOException
    //   0	17	200	java/io/IOException
    //   217	221	228	java/io/IOException
    //   0	17	236	finally
    //   242	246	253	java/io/IOException
    //   17	26	261	finally
    //   31	38	268	finally
    //   43	50	268	finally
    //   60	64	268	finally
    //   69	74	268	finally
    //   79	86	268	finally
    //   103	112	268	finally
    //   117	122	268	finally
    //   132	137	268	finally
    //   176	181	268	finally
    //   212	217	268	finally
    //   17	26	275	java/io/IOException
    //   31	38	283	java/io/IOException
    //   43	50	283	java/io/IOException
    //   60	64	283	java/io/IOException
    //   69	74	283	java/io/IOException
    //   79	86	283	java/io/IOException
    //   103	112	283	java/io/IOException
    //   117	122	283	java/io/IOException
    //   17	26	288	java/io/UnsupportedEncodingException
    //   31	38	296	java/io/UnsupportedEncodingException
    //   43	50	296	java/io/UnsupportedEncodingException
    //   60	64	296	java/io/UnsupportedEncodingException
    //   69	74	296	java/io/UnsupportedEncodingException
    //   79	86	296	java/io/UnsupportedEncodingException
    //   103	112	296	java/io/UnsupportedEncodingException
    //   117	122	296	java/io/UnsupportedEncodingException
    //   0	17	301	java/io/FileNotFoundException
    //   17	26	311	java/io/FileNotFoundException
  }
  
  public static boolean writeFile(InputStream paramInputStream, File paramFile)
  {
    return writeFile(paramInputStream, paramFile, -1L, null, false);
  }
  
  public static boolean writeFile(InputStream paramInputStream, File paramFile, long paramLong, ZProgressListener paramZProgressListener, boolean paramBoolean)
  {
    return new ZFileTask().writeFileWithStream(paramInputStream, paramFile, paramLong, paramZProgressListener, paramBoolean);
  }
  
  public static boolean writeFile(byte[] paramArrayOfByte, File paramFile)
  {
    return writeFile(paramArrayOfByte, paramFile, -1L, null, false);
  }
  
  public static boolean writeFile(byte[] paramArrayOfByte, File paramFile, long paramLong, ZProgressListener paramZProgressListener, boolean paramBoolean)
  {
    return writeFile(new ByteArrayInputStream(paramArrayOfByte), paramFile, paramLong, paramZProgressListener, paramBoolean);
  }
  
  public void cancel()
  {
    this.a.cancel();
  }
  
  public final String toString()
  {
    return "ZFileTask [zpc=" + this.a + ", zpl=" + null + "]";
  }
  
  public void updataProgressLinstener(ZProgressListener paramZProgressListener, boolean paramBoolean)
  {
    if (this.a.isCancel()) {
      this.a.setCancel(false);
    }
    this.a.setZProgressLinstener(paramZProgressListener, paramBoolean);
  }
  
  public boolean writeFileWithStream(InputStream paramInputStream, File paramFile, long paramLong, ZProgressListener paramZProgressListener, boolean paramBoolean)
  {
    return writeFileWithStream(paramInputStream, paramFile, paramLong, paramZProgressListener, paramBoolean, 0L);
  }
  
  public boolean writeFileWithStream(InputStream paramInputStream, File paramFile, long paramLong1, ZProgressListener paramZProgressListener, boolean paramBoolean, long paramLong2)
  {
    if ((paramInputStream == null) || (paramFile == null)) {}
    for (;;)
    {
      return false;
      try
      {
        if ((paramFile.exists()) || (paramFile.createNewFile()))
        {
          paramFile = new FileOutputStream(paramFile, paramBoolean);
          this.a.setZProgressLinstener(paramZProgressListener, true);
          this.a.setInputStream(paramInputStream);
          this.a.setOutputStream(paramFile);
          this.a.setMaxLenght(paramLong1);
          paramBoolean = this.a.start(paramLong2);
          this.a.clear();
          return paramBoolean;
        }
      }
      catch (FileNotFoundException paramInputStream)
      {
        paramInputStream.printStackTrace();
        this.a.clear();
        return false;
      }
      catch (IOException paramInputStream)
      {
        paramInputStream.printStackTrace();
        this.a.clear();
      }
    }
    return false;
  }
}
