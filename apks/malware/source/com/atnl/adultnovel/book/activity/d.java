package com.atnl.adultnovel.book.activity;

import android.content.Context;
import android.os.Environment;
import android.util.Log;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

public class d
{
  String a;
  String b;
  String c;
  a d;
  private boolean e;
  private boolean f;
  
  public d(Context paramContext, String paramString1, String paramString2)
  {
    this(paramContext, paramString1, "/download/", paramString2);
  }
  
  public d(Context paramContext, String paramString1, String paramString2, String paramString3)
  {
    this.a = paramString1;
    this.b = paramString2;
    this.c = paramString3;
  }
  
  public void a()
  {
    File localFile = new File(Environment.getExternalStoragePublicDirectory(this.b), this.c);
    if (a(localFile))
    {
      Log.i("result", "保存在");
      this.d.a(localFile);
      return;
    }
    int i;
    try
    {
      localObject = (HttpURLConnection)new URL(this.a).openConnection();
      ((HttpURLConnection)localObject).setDoInput(true);
      ((HttpURLConnection)localObject).setRequestMethod("GET");
      ((HttpURLConnection)localObject).setRequestProperty("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
      ((HttpURLConnection)localObject).connect();
      k = ((HttpURLConnection)localObject).getContentLength();
      this.d.a(k);
      if (((HttpURLConnection)localObject).getResponseCode() != 200) {
        break label354;
      }
      localObject = new BufferedInputStream(((HttpURLConnection)localObject).getInputStream());
      localBufferedOutputStream = new BufferedOutputStream(new FileOutputStream(localFile));
      arrayOfByte = new byte['⠀'];
      i = 0;
    }
    catch (MalformedURLException localMalformedURLException)
    {
      for (;;)
      {
        Object localObject;
        int k;
        BufferedOutputStream localBufferedOutputStream;
        byte[] arrayOfByte;
        localMalformedURLException.printStackTrace();
        this.d.c();
        return;
        try
        {
          Thread.sleep(50L);
          j = i;
        }
        catch (InterruptedException localInterruptedException)
        {
          do
          {
            for (;;)
            {
              int m;
              localInterruptedException.printStackTrace();
              int j = i;
            }
          } while (!this.f);
          this.d.d();
          localIOException.delete();
        }
        i = j;
        if (!this.e)
        {
          m = ((BufferedInputStream)localObject).read(arrayOfByte);
          i = j;
          if (m > 0)
          {
            localBufferedOutputStream.write(arrayOfByte, 0, m);
            j += m;
            this.d.b(j);
            if (j != k) {
              break;
            }
            this.d.a(localMalformedURLException);
          }
        }
      }
    }
    catch (IOException localIOException)
    {
      localIOException.printStackTrace();
      this.d.c();
      return;
    }
    if (this.e) {
      this.d.a();
    }
    if (this.f) {
      this.d.d();
    }
    for (;;)
    {
      ((BufferedInputStream)localObject).close();
      localBufferedOutputStream.close();
      return;
    }
    label354:
    this.d.c();
  }
  
  public void a(a paramA)
  {
    this.d = paramA;
  }
  
  public boolean a(File paramFile)
  {
    try
    {
      boolean bool = paramFile.exists();
      return bool;
    }
    catch (Exception paramFile) {}
    return false;
  }
  
  public void b()
  {
    this.e = true;
  }
  
  public void c()
  {
    this.e = false;
    this.f = false;
    this.d.b();
  }
  
  public void d()
  {
    this.f = true;
  }
}
