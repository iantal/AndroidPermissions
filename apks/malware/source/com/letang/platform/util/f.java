package com.letang.platform.util;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.res.AssetManager;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.NetworkInfo.State;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Environment;
import android.telephony.TelephonyManager;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.Display;
import android.view.WindowManager;
import com.letang.a;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.List;
import java.util.Locale;
import java.util.Properties;
import org.apache.http.message.BasicNameValuePair;

public final class f
{
  public static boolean a = "mounted".equals(Environment.getExternalStorageState());
  
  public static void a(Context paramContext, String paramString, List paramList)
  {
    try
    {
      localObject = (TelephonyManager)paramContext.getSystemService("phone");
      str = ((TelephonyManager)localObject).getSimOperator();
      paramList.add(new BasicNameValuePair("phoneModel", Build.BRAND + "-" + Build.BOARD + "-" + Build.DISPLAY + "-" + Build.DEVICE + "-" + Build.MODEL));
      paramList.add(new BasicNameValuePair("androidVersion", Build.VERSION.SDK + "-" + Build.VERSION.RELEASE));
      paramList.add(new BasicNameValuePair("operator", str));
      paramList.add(new BasicNameValuePair("uid", paramString));
      paramList.add(new BasicNameValuePair("IMEI", ((TelephonyManager)localObject).getDeviceId()));
      paramList.add(new BasicNameValuePair("IMSI", ((TelephonyManager)localObject).getSubscriberId()));
      paramList.add(new BasicNameValuePair("counrty", Locale.getDefault().getCountry()));
      paramList.add(new BasicNameValuePair("language", Locale.getDefault().getLanguage()));
      paramList.add(new BasicNameValuePair("sdcard", String.valueOf(a.t)));
      ((TelephonyManager)localObject).getDeviceId();
      paramList.add(new BasicNameValuePair("screenType", d(paramContext)));
    }
    catch (Exception localException)
    {
      for (;;)
      {
        try
        {
          paramString = paramContext.getAssets().open("cha.pro");
          paramContext = new Properties();
          paramContext.load(paramString);
          paramString = paramContext.getProperty("channelId");
          Object localObject = paramContext.getProperty("gameId");
          String str = paramContext.getProperty("cpId");
          paramContext = paramContext.getProperty("promoterId");
          paramList.add(new BasicNameValuePair("channelId", paramString));
          paramList.add(new BasicNameValuePair("gameId", (String)localObject));
          paramList.add(new BasicNameValuePair("cpId", str));
          paramList.add(new BasicNameValuePair("promoterId", paramContext));
          return;
        }
        catch (Exception paramContext)
        {
          paramList.add(new BasicNameValuePair("channelId", "-1"));
          paramList.add(new BasicNameValuePair("gameId", "-1"));
          paramList.add(new BasicNameValuePair("cpId", "-1"));
          paramList.add(new BasicNameValuePair("promoterId", "-1"));
        }
        localException = localException;
        paramList.add(new BasicNameValuePair("operator", "0000"));
        paramList.add(new BasicNameValuePair("uid", paramString));
        paramList.add(new BasicNameValuePair("IMEI", "00000000"));
        paramList.add(new BasicNameValuePair("IMSI", "00000000"));
        paramList.add(new BasicNameValuePair("counrty", "0"));
        paramList.add(new BasicNameValuePair("language", "0"));
        paramList.add(new BasicNameValuePair("sdcard", "false"));
        paramList.add(new BasicNameValuePair("screenType", d(paramContext)));
        paramList.add(new BasicNameValuePair("androidVersion", String.valueOf(Build.VERSION.SDK_INT)));
      }
    }
  }
  
  public static boolean a(Context paramContext)
  {
    try
    {
      paramContext = (ConnectivityManager)paramContext.getSystemService("connectivity");
      if (paramContext != null)
      {
        paramContext = paramContext.getActiveNetworkInfo();
        if ((paramContext != null) && (paramContext.isConnected()))
        {
          paramContext = paramContext.getState();
          NetworkInfo.State localState = NetworkInfo.State.CONNECTED;
          if (paramContext == localState) {
            return true;
          }
        }
      }
    }
    catch (Exception paramContext)
    {
      Log.v("error", paramContext.toString());
      paramContext.printStackTrace();
    }
    return false;
  }
  
  public static String b(Context paramContext)
  {
    Object localObject1 = "";
    if (a.t) {}
    try
    {
      localObject1 = new FileInputStream(new File(a.o));
      Object localObject2 = new Properties();
      ((Properties)localObject2).load((InputStream)localObject1);
      localObject1 = ((Properties)localObject2).getProperty("userId");
      localObject2 = localObject1;
      if (((String)localObject1).equals("")) {
        localObject2 = paramContext.getSharedPreferences("joy_share", 2).getString("userId", "");
      }
      return localObject2;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        localException.printStackTrace();
        String str = "";
      }
    }
  }
  
  /* Error */
  public static String c(Context paramContext)
  {
    // Byte code:
    //   0: new 265	java/lang/StringBuffer
    //   3: dup
    //   4: invokespecial 266	java/lang/StringBuffer:<init>	()V
    //   7: astore_2
    //   8: aload_0
    //   9: ldc_w 268
    //   12: invokevirtual 272	android/content/Context:checkCallingOrSelfPermission	(Ljava/lang/String;)I
    //   15: ifne +65 -> 80
    //   18: aload_0
    //   19: invokestatic 278	android/accounts/AccountManager:get	(Landroid/content/Context;)Landroid/accounts/AccountManager;
    //   22: ldc_w 280
    //   25: invokevirtual 284	android/accounts/AccountManager:getAccountsByType	(Ljava/lang/String;)[Landroid/accounts/Account;
    //   28: astore_0
    //   29: iconst_0
    //   30: istore_1
    //   31: iload_1
    //   32: aload_0
    //   33: arraylength
    //   34: if_icmplt +8 -> 42
    //   37: aload_2
    //   38: invokevirtual 285	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   41: areturn
    //   42: aload_2
    //   43: new 47	java/lang/StringBuilder
    //   46: dup
    //   47: aload_0
    //   48: iload_1
    //   49: aaload
    //   50: getfield 290	android/accounts/Account:name	Ljava/lang/String;
    //   53: invokestatic 57	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   56: invokespecial 61	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   59: ldc_w 292
    //   62: invokevirtual 67	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   65: invokevirtual 82	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   68: invokevirtual 295	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   71: pop
    //   72: iload_1
    //   73: iconst_1
    //   74: iadd
    //   75: istore_1
    //   76: goto -45 -> 31
    //   79: astore_0
    //   80: ldc -21
    //   82: areturn
    //   83: astore_0
    //   84: goto -4 -> 80
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	87	0	paramContext	Context
    //   30	46	1	i	int
    //   7	36	2	localStringBuffer	StringBuffer
    // Exception table:
    //   from	to	target	type
    //   8	29	79	java/lang/Error
    //   31	42	79	java/lang/Error
    //   42	72	79	java/lang/Error
    //   8	29	83	java/lang/Exception
    //   31	42	83	java/lang/Exception
    //   42	72	83	java/lang/Exception
  }
  
  private static String d(Context paramContext)
  {
    try
    {
      new DisplayMetrics();
      paramContext = ((WindowManager)paramContext.getSystemService("window")).getDefaultDisplay();
      DisplayMetrics localDisplayMetrics = new DisplayMetrics();
      paramContext.getMetrics(localDisplayMetrics);
      int i = localDisplayMetrics.widthPixels;
      int j = localDisplayMetrics.heightPixels;
      paramContext = i + "*" + j + "*" + localDisplayMetrics.density;
      return paramContext;
    }
    catch (Exception paramContext)
    {
      return "0-0";
    }
    catch (Error paramContext) {}
    return "0-0";
  }
}
