package com.push2.sdk;

import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import com.push2.sdk.util.PhoneUtil;
import com.push2.sdk.util.i;
import com.push2.sdk.util.j;
import com.push2.sdk.util.r;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

 enum d
{
  INSTANCE;
  
  private static String TAG = "InitHandler";
  private Context context;
  private String cpId;
  private String cpKey;
  private Handler initHandler = new d.1(this);
  private PushListener.OnInitListener initListener;
  private j loginResponse = new j();
  private PhoneUtil phoneUtil;
  private WebsocketHandler websocketHandler;
  
  private void isOpenWebSocket()
  {
    if (this.loginResponse.e()) {
      this.initHandler.sendEmptyMessage(4);
    }
  }
  
  private void sendDataByInitHandler(int paramInt, String paramString)
  {
    Message localMessage = this.initHandler.obtainMessage();
    localMessage.what = paramInt;
    Bundle localBundle = new Bundle();
    localBundle.putString("result", paramString);
    localMessage.setData(localBundle);
    this.initHandler.sendMessage(localMessage);
  }
  
  private void setContext(Context paramContext)
  {
    this.context = paramContext;
  }
  
  private void setInitListener(PushListener.OnInitListener paramOnInitListener)
  {
    this.initListener = paramOnInitListener;
  }
  
  private void youshuLoginMM(List paramList)
  {
    g.INSTANCE.youshuLoginMM(paramList, new d.3(this));
  }
  
  private void youshuLoginPush()
  {
    g.INSTANCE.youshuLoginPush(new d.2(this));
  }
  
  public void disconnect()
  {
    if (this.websocketHandler != null) {
      this.websocketHandler.a();
    }
  }
  
  public void doInit(Context paramContext, PushListener.OnInitListener paramOnInitListener)
  {
    setContext(paramContext);
    setInitListener(paramOnInitListener);
    this.cpId = PushSDK.getCpId();
    this.cpKey = PushSDK.getCpKey();
    this.phoneUtil = PushSDK.INSTANCE.getPhoneUtil();
    if ((r.a(this.cpId)) || (r.a(this.cpKey)) || (r.a(this.phoneUtil.getImei())) || (r.a(this.phoneUtil.getImsi())) || (r.a(this.phoneUtil.e())) || (r.a(this.phoneUtil.f())))
    {
      paramContext = "Parameter is not complete! [cpid=" + this.cpId + ",cpkey=" + this.cpKey + ",imsi=" + this.phoneUtil.getImsi() + ",imei=" + this.phoneUtil.getImei() + ",手机型号=" + this.phoneUtil.e() + ",操作系统版本号=" + this.phoneUtil.f() + "]";
      i.d(TAG, paramContext);
      if (paramOnInitListener != null)
      {
        HashMap localHashMap = new HashMap();
        localHashMap.put("code", "-6");
        localHashMap.put("msg", paramContext);
        paramOnInitListener.onFailure(localHashMap);
      }
      return;
    }
    youshuLoginPush();
  }
  
  public Context getContext()
  {
    return this.context;
  }
  
  public PushListener.OnInitListener getInitListener()
  {
    return this.initListener;
  }
}
