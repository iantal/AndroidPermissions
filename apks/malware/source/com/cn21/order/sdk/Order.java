package com.cn21.order.sdk;

import android.content.Context;
import android.text.TextUtils;
import com.cn21.order.sdk.entity.Channel;
import com.cn21.order.sdk.helper.a;
import com.cn21.order.sdk.util.b;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class Order
{
  public static final String CHARGE_TYPE_MONTH = "3";
  public static final String CHARGE_TYPE_ORDER = "0";
  public static final String INTERFACE_VERSION_V1 = "v1.0";
  public static final String INTERFACE_VERSION_V2 = "v2.0";
  public static final int OPTYPE_ORDER = 0;
  public static final int OPTYPE_UNSUBSCRIBE = 3;
  public static final String PAY_CENTER_ACTION = "com.cn21.android.paycenter.sdk.action";
  public static final String PAY_CENTER_ACTION_MESSAGE_KEY = "message";
  public static final int PAY_CENTER_ACTION_NO_RESULT = -2;
  public static final int PAY_CENTER_ACTION_RESULT_ERROR = -1;
  public static final String PAY_CENTER_ACTION_RESULT_KEY = "result";
  public static final int PAY_CENTER_ACTION_RESULT_OK = 1;
  public static String channelId = null;
  public static boolean needLogin189Account = false;
  
  public Order() {}
  
  public static Channel getChannelInfo(String paramString1, String paramString2)
  {
    return a.a(paramString1, paramString2);
  }
  
  public static Channel getChannelInfo4Sms(String paramString1, String paramString2)
  {
    return a.c(paramString1, paramString2);
  }
  
  public static JSONObject getOrderStatus(String paramString1, String paramString2)
  {
    paramString1 = a.b(paramString1, paramString2);
    if (paramString1 != null)
    {
      try
      {
        if ((paramString1.getInt("code") != 0) || (paramString1.getJSONArray("obj") == null)) {
          break label101;
        }
        paramString2 = paramString1.getJSONArray("obj");
        if ((paramString2 != null) && (paramString2.length() > 0))
        {
          paramString2 = (JSONObject)paramString2.get(0);
          JSONObject localJSONObject = new JSONObject();
          localJSONObject.put("status", paramString2.getInt("status"));
          localJSONObject.put("msg", paramString1.getString("msg"));
          return localJSONObject;
        }
      }
      catch (JSONException paramString1)
      {
        paramString1.printStackTrace();
      }
      return null;
    }
    label101:
    return null;
  }
  
  public static void init(Context paramContext, String paramString1, String paramString2, boolean paramBoolean, String paramString3)
  {
    if ((paramContext == null) || (TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      throw new IllegalArgumentException("Certain parameter is null");
    }
    if ((!TextUtils.isEmpty(paramString1)) && (!TextUtils.isEmpty(paramString2)))
    {
      b.a(paramString1);
      b.b(paramString2);
    }
    needLogin189Account = paramBoolean;
    channelId = paramString3;
  }
  
  public static JSONObject order(String paramString1, String paramString2, String paramString3)
  {
    return a.a(paramString1, paramString2, paramString3);
  }
  
  public static JSONObject sendCode(String paramString1, String paramString2, String paramString3, int paramInt, String paramString4)
  {
    return a.a(paramString1, paramString2, paramString3, paramInt, paramString4);
  }
  
  public static void sendMessagePay(Context paramContext, String paramString1, String paramString2, String paramString3)
  {
    a.a(paramContext, paramString1, paramString2, paramString3);
  }
}
