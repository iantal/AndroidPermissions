package com.cn21.order.sdk.helper;

import android.annotation.SuppressLint;
import android.app.PendingIntent;
import android.content.Context;
import android.telephony.SmsManager;
import android.text.TextUtils;
import com.cn21.order.sdk.entity.Channel;
import com.cn21.order.sdk.util.Util;
import java.security.NoSuchAlgorithmException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.crypto.Cipher;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.SecretKeySpec;
import org.json.JSONException;
import org.json.JSONObject;

public final class a
{
  public a() {}
  
  @SuppressLint({"SimpleDateFormat"})
  public static Channel a(String paramString1, String paramString2)
  {
    if ((TextUtils.isEmpty(paramString1)) || (!Util.checkProtocolVersion(paramString2))) {
      return null;
    }
    JSONObject localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("channelId", paramString1);
      paramString1 = com.cn21.order.sdk.util.b.a("api/sso/emp/getChannelInfo", localJSONObject, paramString2);
      if ((paramString1 != null) && (paramString1.getInt("result") == 0) && (paramString1.getJSONObject("obj") != null))
      {
        paramString1 = paramString1.getJSONObject("obj");
        paramString1 = new Channel(paramString1.getString("channelId"), paramString1.getString("channelName"), (float)paramString1.getDouble("price"), paramString1.getString("cpName"), paramString1.getString("appName"), paramString1.getString("chargeType"), paramString1.getString("empName"));
        return paramString1;
      }
    }
    catch (JSONException paramString1)
    {
      paramString1.printStackTrace();
      return null;
    }
    return null;
  }
  
  @SuppressLint({"SimpleDateFormat"})
  public static JSONObject a(String paramString1, String paramString2, String paramString3)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2)) || (!Util.checkProtocolVersion(paramString3)))
    {
      paramString1 = new JSONObject();
      try
      {
        paramString1.put("result", -102025);
        paramString1.put("msg", "参数异常");
        return paramString1;
      }
      catch (JSONException paramString2)
      {
        paramString2.printStackTrace();
        return paramString1;
      }
    }
    JSONObject localJSONObject = new JSONObject();
    SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("yyyy-MM-ddHH:mm:ss");
    try
    {
      localJSONObject.put("timeStamp", localSimpleDateFormat.format(new Date()));
      localJSONObject.put("tradeId", paramString1);
      localJSONObject.put("code", paramString2);
      paramString1 = com.cn21.order.sdk.util.b.a("api/sso/emp/order", localJSONObject, paramString3);
      return paramString1;
    }
    catch (JSONException paramString1)
    {
      paramString1.printStackTrace();
    }
    return null;
  }
  
  @SuppressLint({"SimpleDateFormat"})
  public static JSONObject a(String paramString1, String paramString2, String paramString3, int paramInt, String paramString4)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2)) || ((paramInt != 0) && (paramInt != 3)) || (!Util.checkProtocolVersion(paramString4)))
    {
      paramString1 = new JSONObject();
      try
      {
        paramString1.put("result", -102025);
        paramString1.put("msg", "参数异常");
        return paramString1;
      }
      catch (JSONException paramString2)
      {
        paramString2.printStackTrace();
        return paramString1;
      }
    }
    JSONObject localJSONObject = new JSONObject();
    SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("yyyy-MM-ddHH:mm:ss");
    try
    {
      localJSONObject.put("timeStamp", localSimpleDateFormat.format(new Date()));
      localJSONObject.put("userId", paramString1);
      localJSONObject.put("channelId", paramString2);
      if (!TextUtils.isEmpty(paramString3)) {
        localJSONObject.put("outOrderNo", paramString3);
      }
      localJSONObject.put("optype", paramInt);
      paramString1 = com.cn21.order.sdk.util.b.a("api/sso/emp/sendCode", localJSONObject, paramString4);
      return paramString1;
    }
    catch (JSONException paramString1)
    {
      paramString1.printStackTrace();
    }
    return null;
  }
  
  public static void a(Context paramContext, String paramString1, String paramString2, String paramString3)
  {
    if ((!TextUtils.isEmpty(paramString1)) && (!TextUtils.isEmpty(paramString2))) {
      new Thread(new b(paramContext, paramString3, paramString1, paramString2)).start();
    }
  }
  
  public static void a(String paramString1, String paramString2, PendingIntent paramPendingIntent)
  {
    SmsManager localSmsManager = SmsManager.getDefault();
    if (paramString2.length() > 70)
    {
      paramString2 = localSmsManager.divideMessage(paramString2).iterator();
      for (;;)
      {
        if (!paramString2.hasNext()) {
          return;
        }
        localSmsManager.sendTextMessage(paramString1, null, (String)paramString2.next(), paramPendingIntent, null);
      }
    }
    localSmsManager.sendTextMessage(paramString1, null, paramString2, paramPendingIntent, null);
  }
  
  public static byte[] a(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
  {
    try
    {
      paramArrayOfByte1 = new SecretKeySpec(paramArrayOfByte1, "DESede");
      Cipher localCipher = Cipher.getInstance("DESede");
      localCipher.init(1, paramArrayOfByte1);
      paramArrayOfByte1 = localCipher.doFinal(paramArrayOfByte2);
      return paramArrayOfByte1;
    }
    catch (NoSuchAlgorithmException paramArrayOfByte1)
    {
      paramArrayOfByte1.printStackTrace();
      return null;
    }
    catch (NoSuchPaddingException paramArrayOfByte1)
    {
      for (;;)
      {
        paramArrayOfByte1.printStackTrace();
      }
    }
    catch (Exception paramArrayOfByte1)
    {
      for (;;)
      {
        paramArrayOfByte1.printStackTrace();
      }
    }
  }
  
  @SuppressLint({"SimpleDateFormat"})
  public static JSONObject b(String paramString1, String paramString2)
  {
    if ((TextUtils.isEmpty(paramString1)) || (!Util.checkProtocolVersion(paramString2)))
    {
      paramString1 = new JSONObject();
      try
      {
        paramString1.put("result", -102025);
        paramString1.put("msg", "参数异常");
        return paramString1;
      }
      catch (JSONException paramString2)
      {
        paramString2.printStackTrace();
        return paramString1;
      }
    }
    JSONObject localJSONObject = new JSONObject();
    SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("yyyy-MM-ddHH:mm:ss");
    try
    {
      localJSONObject.put("timeStamp", localSimpleDateFormat.format(new Date()));
      localJSONObject.put("tradeId", paramString1);
      paramString1 = com.cn21.order.sdk.util.b.a("front/api/paydata/getdata", localJSONObject, paramString2);
      return paramString1;
    }
    catch (JSONException paramString1)
    {
      paramString1.printStackTrace();
    }
    return null;
  }
  
  @SuppressLint({"SimpleDateFormat"})
  public static Channel c(String paramString1, String paramString2)
  {
    if ((TextUtils.isEmpty(paramString1)) || (!Util.checkProtocolVersion(paramString2))) {
      return null;
    }
    JSONObject localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("channelId", paramString1);
      paramString1 = com.cn21.order.sdk.util.b.a("api/sms/getChannelInfo", localJSONObject, paramString2);
      if ((paramString1 != null) && (paramString1.getInt("result") == 0) && (paramString1.getJSONObject("obj") != null))
      {
        paramString1 = paramString1.getJSONObject("obj");
        paramString1 = new Channel(paramString1.getString("channelId"), paramString1.getString("channelName"), (float)paramString1.getDouble("price"), paramString1.getString("cpName"), paramString1.getString("appName"), paramString1.getString("command"), paramString1.getString("accessNo"), paramString1.optString("chargeType"), paramString1.optString("empName"));
        return paramString1;
      }
    }
    catch (JSONException paramString1)
    {
      paramString1.printStackTrace();
      return null;
    }
    return null;
  }
}
