package com.w545taxxxg9.media;

import android.content.res.AssetFileDescriptor;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnCompletionListener;
import android.media.MediaPlayer.OnErrorListener;
import android.media.MediaPlayer.OnPreparedListener;
import android.net.Uri;
import android.webkit.WebView;
import com.w545taxxxg9.Utils.UrlConverter;
import java.io.IOException;

public class WebViewJsAudioPlayer
{
  public static String JS_INTERFACE_NAME = "AudioPlayer";
  private String _onLoadListener;
  private String _onTrackFinishedListener;
  private WebView _parentWebView;
  private MediaPlayer _player;
  
  public WebViewJsAudioPlayer(WebView paramWebView)
  {
    this._parentWebView = paramWebView;
    this._player = new MediaPlayer();
  }
  
  private void _callFunction(final String paramString, String[] paramArrayOfString)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("javascript:");
    localStringBuilder.append(paramString);
    localStringBuilder.append("(");
    if (paramArrayOfString != null)
    {
      int j = 0;
      int k = paramArrayOfString.length;
      int i = 0;
      while (i < k)
      {
        paramString = paramArrayOfString[i];
        if (j > 0) {
          localStringBuilder.append(",");
        }
        localStringBuilder.append("'");
        localStringBuilder.append(paramString.replace("'", "'"));
        localStringBuilder.append("'");
        j += 1;
        i += 1;
      }
    }
    localStringBuilder.append(");");
    paramString = localStringBuilder.toString();
    this._parentWebView.post(new Runnable()
    {
      public void run()
      {
        WebViewJsAudioPlayer.this._parentWebView.loadUrl(paramString);
      }
    });
  }
  
  private void _playInternet(String paramString)
  {
    paramString = Uri.parse(paramString);
    try
    {
      this._player.setDataSource(this._parentWebView.getContext(), paramString);
      this._player.setAudioStreamType(3);
      this._player.prepareAsync();
      return;
    }
    catch (IllegalArgumentException paramString)
    {
      paramString.printStackTrace();
      return;
    }
    catch (SecurityException paramString)
    {
      paramString.printStackTrace();
      return;
    }
    catch (IllegalStateException paramString)
    {
      paramString.printStackTrace();
      return;
    }
    catch (IOException paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  private void _playLocal(String paramString)
  {
    UrlConverter localUrlConverter = new UrlConverter(this._parentWebView);
    if (paramString.contains("file://")) {}
    try
    {
      paramString = localUrlConverter.toFileDescriptor(paramString);
      this._player.setDataSource(paramString.getFileDescriptor(), paramString.getStartOffset(), paramString.getLength());
      this._player.setAudioStreamType(3);
      this._player.prepareAsync();
      return;
    }
    catch (IllegalArgumentException paramString)
    {
      paramString.printStackTrace();
      return;
    }
    catch (SecurityException paramString)
    {
      paramString.printStackTrace();
      return;
    }
    catch (IllegalStateException paramString)
    {
      paramString.printStackTrace();
      return;
    }
    catch (IOException paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  private void _setPlayerEvenets()
  {
    this._player.setOnPreparedListener(new MediaPlayer.OnPreparedListener()
    {
      public void onPrepared(MediaPlayer paramAnonymousMediaPlayer)
      {
        if ((WebViewJsAudioPlayer.this._onLoadListener != null) && (WebViewJsAudioPlayer.this._onLoadListener.length() != 0)) {
          WebViewJsAudioPlayer.this._callFunction(WebViewJsAudioPlayer.this._onLoadListener, null);
        }
        paramAnonymousMediaPlayer.start();
      }
    });
    this._player.setOnCompletionListener(new MediaPlayer.OnCompletionListener()
    {
      public void onCompletion(MediaPlayer paramAnonymousMediaPlayer)
      {
        if ((paramAnonymousMediaPlayer.isPlaying()) && (WebViewJsAudioPlayer.this._onTrackFinishedListener != null) && (WebViewJsAudioPlayer.this._onTrackFinishedListener.length() != 0)) {
          WebViewJsAudioPlayer.this._callFunction(WebViewJsAudioPlayer.this._onTrackFinishedListener, null);
        }
      }
    });
    this._player.setOnErrorListener(new MediaPlayer.OnErrorListener()
    {
      public boolean onError(MediaPlayer paramAnonymousMediaPlayer, int paramAnonymousInt1, int paramAnonymousInt2)
      {
        WebViewJsAudioPlayer.this._player.reset();
        return false;
      }
    });
  }
  
  public int getCurrentPosition()
  {
    int j = 0;
    int i = j;
    if (this._player != null)
    {
      i = j;
      if (this._player.isPlaying()) {
        i = this._player.getCurrentPosition();
      }
    }
    return i;
  }
  
  public int getDuration()
  {
    int j = 0;
    int i = j;
    if (this._player != null)
    {
      i = j;
      if (this._player.isPlaying()) {
        i = this._player.getDuration();
      }
    }
    return i;
  }
  
  public void pause()
  {
    if ((this._player != null) && (this._player.isPlaying())) {
      this._player.pause();
    }
  }
  
  public void play(String paramString)
  {
    paramString = new UrlConverter(this._parentWebView).toAbsolute(paramString);
    stop();
    _setPlayerEvenets();
    if (paramString.contains("file://"))
    {
      _playLocal(paramString);
      return;
    }
    _playInternet(paramString);
  }
  
  public void resume()
  {
    if ((this._player != null) && (!this._player.isPlaying())) {
      this._player.start();
    }
  }
  
  public void setOnLoadListener(String paramString)
  {
    this._onLoadListener = paramString;
  }
  
  public void setOnTrackFinishedListener(String paramString)
  {
    this._onTrackFinishedListener = paramString;
  }
  
  public void stop()
  {
    if (this._player != null)
    {
      if (this._player.isPlaying()) {
        this._player.stop();
      }
      this._player.reset();
    }
  }
}
