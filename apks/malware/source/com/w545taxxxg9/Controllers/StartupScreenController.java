package com.w545taxxxg9.Controllers;

import android.graphics.Bitmap;
import android.util.Log;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.RelativeLayout.LayoutParams;
import com.w545taxxxg9.MainNavigationActivity;
import com.w545taxxxg9.Views.BrowserWebView;
import java.io.PrintStream;
import java.util.Timer;
import java.util.TimerTask;

public class StartupScreenController
  implements InjectMainNavigationController
{
  private final long LOADINGSHOWTIME = 10L;
  private BrowserWebView _browser;
  private Timer _closeStartupScreenTimer;
  private TimerTask _closeStartupScreenTimerTask;
  private int _height;
  private MainNavigationActivity _mainctivity;
  private ViewGroup _startupScreenViewContainer;
  private String _strUrl;
  private int _time;
  private int _width;
  
  public StartupScreenController(ViewGroup paramViewGroup)
  {
    if (paramViewGroup != null)
    {
      this._startupScreenViewContainer = paramViewGroup;
      this._browser = ((BrowserWebView)this._startupScreenViewContainer.findViewById(2131427349));
      this._closeStartupScreenTimerTask = new TimerTask()
      {
        public void run()
        {
          StartupScreenController.access$002(StartupScreenController.this, null);
          if (StartupScreenController.this._mainctivity != null) {
            StartupScreenController.this._mainctivity.runOnUiThread(new Runnable()
            {
              public void run()
              {
                StartupScreenController.this._mainctivity.showContentView();
              }
            });
          }
        }
      };
    }
  }
  
  private void showBanner()
  {
    this._browser.setVisibility(0);
  }
  
  public MainNavigationActivity getMainNavigationActivity()
  {
    return this._mainctivity;
  }
  
  public void initializeBanner(String paramString, int paramInt1, int paramInt2, int paramInt3)
  {
    if (this._closeStartupScreenTimer == null) {
      return;
    }
    this._closeStartupScreenTimer.cancel();
    this._closeStartupScreenTimer = null;
    this._strUrl = paramString;
    this._time = paramInt1;
    this._height = paramInt2;
    this._width = paramInt3;
    paramString = new RelativeLayout.LayoutParams(this._width, this._height);
    this._browser.setLayoutParams(paramString);
    this._browser.setWebViewClient(new WebViewClient()
    {
      public void onLoadResource(WebView paramAnonymousWebView, String paramAnonymousString)
      {
        Log.e("initWithTabs Error", paramAnonymousString);
        System.out.println("initWithTabs Error" + paramAnonymousString);
      }
      
      public void onPageFinished(WebView paramAnonymousWebView, String paramAnonymousString)
      {
        super.onPageFinished(paramAnonymousWebView, paramAnonymousString);
        StartupScreenController.this.showBanner();
        if (StartupScreenController.this._time > 0) {
          new Timer().schedule(new TimerTask()
          {
            public void run()
            {
              if (StartupScreenController.this._mainctivity != null) {
                StartupScreenController.this._mainctivity.runOnUiThread(new Runnable()
                {
                  public void run()
                  {
                    StartupScreenController.this._mainctivity.showContentView();
                  }
                });
              }
            }
          }, StartupScreenController.this._time * 1000);
        }
      }
      
      public void onPageStarted(WebView paramAnonymousWebView, String paramAnonymousString, Bitmap paramAnonymousBitmap)
      {
        super.onPageStarted(paramAnonymousWebView, paramAnonymousString, paramAnonymousBitmap);
      }
      
      public void onReceivedError(WebView paramAnonymousWebView, int paramAnonymousInt, String paramAnonymousString1, String paramAnonymousString2)
      {
        super.onReceivedError(paramAnonymousWebView, paramAnonymousInt, paramAnonymousString1, paramAnonymousString2);
        StartupScreenController.this._mainctivity.showContentView();
      }
    });
    this._browser.loadUrl(this._strUrl);
  }
  
  public void loadingStart()
  {
    if (this._mainctivity != null) {
      this._mainctivity.showStartupScreenView();
    }
    this._closeStartupScreenTimer = new Timer();
    this._closeStartupScreenTimer.schedule(this._closeStartupScreenTimerTask, 10L);
  }
  
  public void setMainNavigationActivity(MainNavigationActivity paramMainNavigationActivity)
  {
    this._mainctivity = paramMainNavigationActivity;
  }
}
