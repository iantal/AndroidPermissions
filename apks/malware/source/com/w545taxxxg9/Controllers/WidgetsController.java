package com.w545taxxxg9.Controllers;

import com.w545taxxxg9.Model.WidgetEntity;
import java.util.Collections;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Vector;

public class WidgetsController
  implements IWidgetsController
{
  private Vector<WidgetEntity> _widgetCollection = new Vector();
  
  public WidgetsController() {}
  
  public void addWidget(WidgetEntity paramWidgetEntity)
  {
    this._widgetCollection.add(paramWidgetEntity);
    paramWidgetEntity = new WidgetEntityComparator();
    Collections.sort(this._widgetCollection, paramWidgetEntity);
  }
  
  public Enumeration<WidgetEntity> getEnumeration()
  {
    return this._widgetCollection.elements();
  }
  
  public WidgetEntity getWidgetById(String paramString)
  {
    Object localObject2 = null;
    Enumeration localEnumeration = this._widgetCollection.elements();
    Object localObject1;
    do
    {
      localObject1 = localObject2;
      if (!localEnumeration.hasMoreElements()) {
        break;
      }
      localObject1 = (WidgetEntity)localEnumeration.nextElement();
    } while (!((WidgetEntity)localObject1).getId().equals(paramString));
    return localObject1;
  }
  
  public WidgetEntity getWidgetByTabId(String paramString)
  {
    Object localObject2 = null;
    Enumeration localEnumeration = this._widgetCollection.elements();
    Object localObject1;
    do
    {
      localObject1 = localObject2;
      if (!localEnumeration.hasMoreElements()) {
        break;
      }
      localObject1 = (WidgetEntity)localEnumeration.nextElement();
    } while (!((WidgetEntity)localObject1).getTabId().equalsIgnoreCase(paramString));
    return localObject1;
  }
  
  public void removeAll()
  {
    this._widgetCollection.removeAllElements();
  }
  
  public void removeWidgetById(String paramString)
  {
    Iterator localIterator = this._widgetCollection.iterator();
    while (localIterator.hasNext()) {
      if (((WidgetEntity)localIterator.next()).getId().equals(paramString)) {
        localIterator.remove();
      }
    }
  }
  
  public int widgetsCount()
  {
    return this._widgetCollection.size();
  }
}
