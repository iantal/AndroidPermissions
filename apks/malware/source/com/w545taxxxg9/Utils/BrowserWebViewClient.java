package com.w545taxxxg9.Utils;

import android.content.ActivityNotFoundException;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.net.Uri;
import android.net.http.SslError;
import android.util.Log;
import android.webkit.CookieSyncManager;
import android.webkit.HttpAuthHandler;
import android.webkit.SslErrorHandler;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.widget.Toast;
import com.w545taxxxg9.Controllers.ITabsController;
import com.w545taxxxg9.Controllers.WebContentController;
import com.w545taxxxg9.Factory.Factory;
import com.w545taxxxg9.MainNavigationActivity;
import com.w545taxxxg9.Model.NavigationWidget;
import com.w545taxxxg9.Model.WidgetEntity;

public class BrowserWebViewClient
  extends SimpleWebViewClient
{
  private String _defaultUrl = "";
  private boolean _isRedirectEnabled = false;
  private MainNavigationActivity _mainActivity = Factory.getInstance().getMainNavigationActivity();
  private WebContentController _webContentController;
  
  public BrowserWebViewClient(WebContentController paramWebContentController)
  {
    super(Factory.getInstance().getMainNavigationActivity());
    this._webContentController = paramWebContentController;
    this._defaultUrl = paramWebContentController.getWidgetInfo().getLink();
    this._isRedirectEnabled = this._mainActivity.getConfig().getIsRedirectEnabled();
    this._activity = this._mainActivity;
  }
  
  public void onPageFinished(WebView paramWebView, String paramString)
  {
    Object localObject = this._webContentController.getInjectJSContent();
    paramWebView.loadUrl("javascript:(function(){ " + (String)localObject + " })()");
    if (!paramString.startsWith("https://"))
    {
      localObject = this._webContentController.getBannerInjectionJs();
      paramWebView.loadUrl("javascript:(function(){ " + (String)localObject + " })()");
    }
    CookieSyncManager.getInstance().sync();
    super.onPageFinished(paramWebView, paramString);
    Factory.getInstance().getTabsController().getSelectedTab().getWebView().getSettings().setBlockNetworkImage(false);
    if (this._isRedirectEnabled)
    {
      localObject = Factory.getInstance().getTabsController().getSelectedTab().getNavigationWidget();
      if (localObject != null) {
        ((NavigationWidget)localObject).onPageFinished(paramWebView, paramString);
      }
    }
  }
  
  public void onPageStarted(WebView paramWebView, String paramString, Bitmap paramBitmap)
  {
    if ((!this._isRedirectEnabled) && (!paramString.equals(this._defaultUrl))) {
      try
      {
        paramBitmap = new Intent("android.intent.action.VIEW", Uri.parse(paramString));
        paramWebView.stopLoading();
        if (this._mainActivity.getPackageManager().resolveActivity(paramBitmap, 0) != null)
        {
          this._mainActivity.startActivity(paramBitmap);
          return;
        }
        paramWebView = "Can not open url: " + paramString;
        Toast.makeText(this._mainActivity, paramWebView, 3).show();
        return;
      }
      catch (ActivityNotFoundException paramWebView)
      {
        Log.e("ActivityNotFoundException", "onPageStarted() :" + paramWebView.getMessage());
        return;
      }
    }
    this._webContentController.showProgressBarPanel();
    Object localObject = this._webContentController.getNavigationWidget();
    if (localObject != null) {
      ((NavigationWidget)localObject).onPageStart(paramWebView, paramString);
    }
    if (paramString.indexOf("file:///android_asset/content") == -1)
    {
      localObject = paramWebView.getSettings();
      ((WebSettings)localObject).setLoadWithOverviewMode(true);
      ((WebSettings)localObject).setUseWideViewPort(true);
      paramWebView.setInitialScale(0);
      ((WebSettings)localObject).setBuiltInZoomControls(true);
    }
    super.onPageStarted(paramWebView, paramString, paramBitmap);
  }
  
  public void onReceivedError(WebView paramWebView, int paramInt, String paramString1, String paramString2)
  {
    paramString1 = paramWebView.getUrl();
    if ((paramString1 != null) && (paramString1.equalsIgnoreCase(paramString2))) {
      paramWebView.loadUrl("file:///android_asset/error.html");
    }
    if (paramInt == -8) {
      this._mainActivity.showConnectionErrorDialog();
    }
  }
  
  public void onReceivedHttpAuthRequest(WebView paramWebView, HttpAuthHandler paramHttpAuthHandler, String paramString1, String paramString2)
  {
    Object localObject3 = null;
    Object localObject4 = null;
    Object localObject2 = localObject4;
    Object localObject1 = localObject3;
    if (paramHttpAuthHandler.useHttpAuthUsernamePassword())
    {
      localObject2 = localObject4;
      localObject1 = localObject3;
      if (paramWebView != null)
      {
        paramWebView = paramWebView.getHttpAuthUsernamePassword(paramString1, paramString2);
        localObject2 = localObject4;
        localObject1 = localObject3;
        if (paramWebView != null)
        {
          localObject2 = localObject4;
          localObject1 = localObject3;
          if (paramWebView.length == 2)
          {
            localObject1 = paramWebView[0];
            localObject2 = paramWebView[1];
          }
        }
      }
    }
    if ((localObject1 != null) && (localObject2 != null))
    {
      paramHttpAuthHandler.proceed(localObject1, localObject2);
      return;
    }
    this._mainActivity.showHttpAuthentication(this._webContentController.getWebView(), paramHttpAuthHandler, paramString1, paramString2, null, null, null, 0);
  }
  
  public void onReceivedSslError(WebView paramWebView, SslErrorHandler paramSslErrorHandler, SslError paramSslError)
  {
    paramSslErrorHandler.proceed();
  }
}
