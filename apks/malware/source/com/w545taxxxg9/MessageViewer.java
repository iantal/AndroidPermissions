package com.w545taxxxg9;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.os.Bundle;
import android.view.KeyEvent;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;
import com.w545taxxxg9.Utils.PushWebViewClient;
import com.w545taxxxg9.pull.PullServerController;

public class MessageViewer
  extends Activity
{
  Activity _activity = null;
  WebView _browser = null;
  
  public MessageViewer() {}
  
  private void destroyActivity()
  {
    if (this._browser != null)
    {
      this._browser.destroy();
      this._browser = null;
    }
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    this._activity = this;
    setContentView(2130903046);
    paramBundle = getIntent().getExtras();
    if (paramBundle != null)
    {
      setTitle(paramBundle.getString("title"));
      paramBundle = paramBundle.getString("url");
      if (paramBundle != null)
      {
        this._browser = ((WebView)findViewById(2131427350));
        this._browser.loadUrl(paramBundle);
        this._browser.setWebViewClient(new PushWebViewClient(paramBundle, this));
        this._browser.setWebChromeClient(new WebChromeClient() {});
        paramBundle = this._browser.getSettings();
        paramBundle.setJavaScriptEnabled(true);
        paramBundle.setJavaScriptCanOpenWindowsAutomatically(true);
        paramBundle.setAllowFileAccess(true);
        paramBundle.setPluginsEnabled(true);
        paramBundle.setGeolocationEnabled(true);
        paramBundle.setAppCacheMaxSize(5242880L);
        this._browser.setVerticalScrollBarEnabled(false);
        this._browser.setHorizontalScrollBarEnabled(false);
        paramBundle.setLoadWithOverviewMode(true);
        paramBundle.setUseWideViewPort(true);
        paramBundle.setBuiltInZoomControls(true);
        this._browser.setInitialScale(0);
      }
    }
    new PullServerController().reScheduleNotification(this);
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
    destroyActivity();
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if (paramInt == 4)
    {
      this._activity.finish();
      return true;
    }
    return super.onKeyDown(paramInt, paramKeyEvent);
  }
  
  protected void onPause()
  {
    super.onPause();
    this._activity.finish();
  }
  
  public void onRestoreInstanceState(Bundle paramBundle)
  {
    super.onRestoreInstanceState(paramBundle);
  }
  
  protected void onStart()
  {
    super.onStart();
  }
  
  public void showMessage(String paramString)
  {
    if (this._activity != null)
    {
      AlertDialog.Builder localBuilder = new AlertDialog.Builder(this._activity);
      localBuilder.setMessage(paramString);
      localBuilder.setPositiveButton("ok", new DialogInterface.OnClickListener()
      {
        public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt) {}
      });
      localBuilder.create().show();
    }
  }
}
