package com.tencent.msdk.request;

import com.tencent.msdk.Singleton;
import com.tencent.msdk.WeGame;
import com.tencent.msdk.WeGameNotifyGame;
import com.tencent.msdk.api.LoginRet;
import com.tencent.msdk.api.WakeupRet;
import com.tencent.msdk.communicator.HttpRequestManager;
import com.tencent.msdk.communicator.IHttpRequestListener;
import com.tencent.msdk.communicator.UrlManager;
import com.tencent.msdk.db.QQLoginModel;
import com.tencent.msdk.locallog.FilterLogHelper;
import com.tencent.msdk.login.LoginInfoManager;
import com.tencent.msdk.login.LoginManager;
import com.tencent.msdk.permission.PermissionManage;
import com.tencent.msdk.pf.WGPfManager;
import com.tencent.msdk.stat.BeaconHelper;
import com.tencent.msdk.stat.MsdkStat;
import com.tencent.msdk.tools.Logger;
import com.tencent.msdk.tools.T;
import java.util.HashMap;
import java.util.Map;
import org.json.JSONObject;

public class QQA8RequestMng
  implements IHttpRequestListener
{
  private static volatile QQA8RequestMng instance = null;
  private String callbackMsg = "";
  private int notifyState = 0;
  private long refreshStartTime = 0L;
  QQA8Response rspFromA8 = new QQA8Response();
  
  public QQA8RequestMng() {}
  
  public static QQA8RequestMng getInstance()
  {
    if (instance == null) {}
    try
    {
      if (instance == null) {
        instance = new QQA8RequestMng();
      }
      return instance;
    }
    finally {}
  }
  
  private void notify(boolean paramBoolean, String paramString, int paramInt)
  {
    LoginManager.getInstance().setIsCheckingToken(false);
    this.callbackMsg = (" content: " + paramString + " statusCode: " + paramInt);
    notifyWakup(paramBoolean);
    notifyLogin(paramBoolean);
  }
  
  private void notifyLogin(boolean paramBoolean)
  {
    LoginRet localLoginRet = LoginInfoManager.getInstance().getLastLoginUserInfo();
    localLoginRet.flag = -1;
    localLoginRet.desc = ":-( , MSDK 数据失败";
    if (true == paramBoolean)
    {
      localLoginRet.flag = 0;
      localLoginRet.desc = WeGame.setDescribe(0, localLoginRet.platform);
    }
    localLoginRet.desc = (localLoginRet.desc + " cb:" + this.callbackMsg);
    Logger.d("notifyLogin flag = " + localLoginRet.flag + " desc = " + localLoginRet.desc);
    WeGameNotifyGame.getInstance().OnPlatformLoginNotify(localLoginRet);
  }
  
  private void notifyWakup(boolean paramBoolean)
  {
    WakeupRet localWakeupRet = new WakeupRet();
    if (true == paramBoolean)
    {
      LoginRet localLoginRet = LoginInfoManager.getInstance().getLastLoginUserInfo();
      localWakeupRet.platform = WeGame.QQHALL;
      localWakeupRet.open_id = localLoginRet.open_id;
      localWakeupRet.flag = 0;
    }
    for (localWakeupRet.desc = WeGame.setDescribe(0, WeGame.QQHALL);; localWakeupRet.desc = "大厅拉起失败")
    {
      Logger.d("notifyWakup flag = " + localWakeupRet.flag + " desc = " + localWakeupRet.desc);
      localWakeupRet.desc = (localWakeupRet.desc + " cb:" + this.callbackMsg);
      WeGameNotifyGame.getInstance().OnPlatformWakeupNotify(localWakeupRet);
      return;
      localWakeupRet.flag = -1;
    }
  }
  
  private void reportEventToBeacon(boolean paramBoolean1, int paramInt, boolean paramBoolean2)
  {
    if (paramBoolean1)
    {
      BeaconHelper.reportMSDKEvent("qqA8Req", this.refreshStartTime, true, null, true);
      return;
    }
    HashMap localHashMap = new HashMap();
    localHashMap.put("param_FailCode", "" + paramInt);
    StringBuilder localStringBuilder = new StringBuilder().append("");
    if (paramBoolean2) {}
    for (paramInt = 1;; paramInt = 0)
    {
      localHashMap.put("msdk_logic_error", paramInt);
      BeaconHelper.reportMSDKEvent("qqA8Req", this.refreshStartTime, false, localHashMap, true);
      return;
    }
  }
  
  private void updateA8Info(QQA8Response paramQQA8Response)
  {
    WeGame.getInstance().setPlatId(WeGame.QQPLATID);
    long l = System.currentTimeMillis() / 1000L;
    QQLoginModel localQQLoginModel = new QQLoginModel();
    localQQLoginModel.open_id = paramQQA8Response.openid;
    localQQLoginModel.access_token = paramQQA8Response.accessToken;
    localQQLoginModel.access_token_expire = (paramQQA8Response.expired + l);
    localQQLoginModel.pay_token = paramQQA8Response.payToken;
    localQQLoginModel.pay_token_expire = (172800L + l);
    localQQLoginModel.pf = paramQQA8Response.pf;
    localQQLoginModel.pf_key = paramQQA8Response.pfKey;
    localQQLoginModel.save();
    WeGame.getInstance().setOpenSdkLoginInfo(paramQQA8Response.openid, paramQQA8Response.accessToken, paramQQA8Response.expired);
    WGPfManager.getInstance().setRegChannelId(paramQQA8Response.regChannel);
    PermissionManage.getInstance().updateDataFromNet(paramQQA8Response.permission);
  }
  
  protected String getInterfaceName()
  {
    String[] arrayOfString = getClass().getName().split("\\.");
    Object localObject2 = null;
    Object localObject1 = localObject2;
    if (arrayOfString != null)
    {
      localObject1 = localObject2;
      if (arrayOfString.length > 0) {
        localObject1 = arrayOfString[(arrayOfString.length - 1)];
      }
    }
    return localObject1;
  }
  
  public void onFailure(String paramString, int paramInt1, int paramInt2)
  {
    Logger.d("errorContent:" + paramString + " statusCode: " + paramInt1);
    reportEventToBeacon(false, paramInt1, false);
    notify(false, paramString, paramInt2);
  }
  
  /* Error */
  public void onSuccess(String paramString, int paramInt1, int paramInt2)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore 5
    //   3: ldc 35
    //   5: astore 8
    //   7: iload_3
    //   8: sipush 2011
    //   11: if_icmpne +48 -> 59
    //   14: aload_1
    //   15: ifnonnull +45 -> 60
    //   18: new 53	java/lang/StringBuilder
    //   21: dup
    //   22: invokespecial 54	java/lang/StringBuilder:<init>	()V
    //   25: ldc_w 289
    //   28: invokevirtual 60	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31: iload_2
    //   32: invokevirtual 65	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   35: invokevirtual 69	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   38: invokestatic 115	com/tencent/msdk/tools/Logger:d	(Ljava/lang/String;)V
    //   41: aload_0
    //   42: iconst_0
    //   43: ldc_w 291
    //   46: iload_2
    //   47: invokespecial 284	com/tencent/msdk/request/QQA8RequestMng:notify	(ZLjava/lang/String;I)V
    //   50: aload_0
    //   51: iconst_0
    //   52: sipush 1002
    //   55: iconst_0
    //   56: invokespecial 282	com/tencent/msdk/request/QQA8RequestMng:reportEventToBeacon	(ZIZ)V
    //   59: return
    //   60: aload 8
    //   62: astore 7
    //   64: aload 8
    //   66: astore 6
    //   68: iload 5
    //   70: istore 4
    //   72: new 293	com/tencent/msdk/remote/api/SafeJSONObject
    //   75: dup
    //   76: aload_1
    //   77: invokespecial 295	com/tencent/msdk/remote/api/SafeJSONObject:<init>	(Ljava/lang/String;)V
    //   80: astore_1
    //   81: aload 8
    //   83: astore 7
    //   85: aload 8
    //   87: astore 6
    //   89: iload 5
    //   91: istore 4
    //   93: aload_0
    //   94: getfield 33	com/tencent/msdk/request/QQA8RequestMng:rspFromA8	Lcom/tencent/msdk/request/QQA8Response;
    //   97: invokevirtual 298	com/tencent/msdk/request/QQA8Response:reset	()V
    //   100: aload 8
    //   102: astore 7
    //   104: aload 8
    //   106: astore 6
    //   108: iload 5
    //   110: istore 4
    //   112: aload_0
    //   113: getfield 33	com/tencent/msdk/request/QQA8RequestMng:rspFromA8	Lcom/tencent/msdk/request/QQA8Response;
    //   116: aload_1
    //   117: invokevirtual 302	com/tencent/msdk/request/QQA8Response:parseJson	(Lorg/json/JSONObject;)V
    //   120: aload 8
    //   122: astore 7
    //   124: aload 8
    //   126: astore 6
    //   128: iload 5
    //   130: istore 4
    //   132: aload_0
    //   133: getfield 33	com/tencent/msdk/request/QQA8RequestMng:rspFromA8	Lcom/tencent/msdk/request/QQA8Response;
    //   136: getfield 305	com/tencent/msdk/request/QQA8Response:msg	Ljava/lang/String;
    //   139: astore_1
    //   140: aload_1
    //   141: astore 7
    //   143: aload_1
    //   144: astore 6
    //   146: iload 5
    //   148: istore 4
    //   150: aload_0
    //   151: getfield 33	com/tencent/msdk/request/QQA8RequestMng:rspFromA8	Lcom/tencent/msdk/request/QQA8Response;
    //   154: getfield 308	com/tencent/msdk/request/QQA8Response:ret	I
    //   157: ifne +53 -> 210
    //   160: aload_1
    //   161: astore 7
    //   163: aload_1
    //   164: astore 6
    //   166: iload 5
    //   168: istore 4
    //   170: aload_0
    //   171: iconst_1
    //   172: iconst_0
    //   173: iconst_0
    //   174: invokespecial 282	com/tencent/msdk/request/QQA8RequestMng:reportEventToBeacon	(ZIZ)V
    //   177: iconst_1
    //   178: istore 4
    //   180: iconst_1
    //   181: istore 5
    //   183: aload_1
    //   184: astore 7
    //   186: aload_1
    //   187: astore 6
    //   189: aload_0
    //   190: aload_0
    //   191: getfield 33	com/tencent/msdk/request/QQA8RequestMng:rspFromA8	Lcom/tencent/msdk/request/QQA8Response;
    //   194: invokespecial 310	com/tencent/msdk/request/QQA8RequestMng:updateA8Info	(Lcom/tencent/msdk/request/QQA8Response;)V
    //   197: iload 5
    //   199: istore 4
    //   201: aload_0
    //   202: iload 4
    //   204: aload_1
    //   205: iload_2
    //   206: invokespecial 284	com/tencent/msdk/request/QQA8RequestMng:notify	(ZLjava/lang/String;I)V
    //   209: return
    //   210: aload_1
    //   211: astore 7
    //   213: aload_1
    //   214: astore 6
    //   216: iload 5
    //   218: istore 4
    //   220: aload_0
    //   221: iconst_0
    //   222: aload_0
    //   223: getfield 33	com/tencent/msdk/request/QQA8RequestMng:rspFromA8	Lcom/tencent/msdk/request/QQA8Response;
    //   226: getfield 308	com/tencent/msdk/request/QQA8Response:ret	I
    //   229: iconst_1
    //   230: invokespecial 282	com/tencent/msdk/request/QQA8RequestMng:reportEventToBeacon	(ZIZ)V
    //   233: aload_1
    //   234: astore 7
    //   236: aload_1
    //   237: astore 6
    //   239: iload 5
    //   241: istore 4
    //   243: new 53	java/lang/StringBuilder
    //   246: dup
    //   247: invokespecial 54	java/lang/StringBuilder:<init>	()V
    //   250: ldc_w 312
    //   253: invokevirtual 60	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   256: aload_0
    //   257: getfield 33	com/tencent/msdk/request/QQA8RequestMng:rspFromA8	Lcom/tencent/msdk/request/QQA8Response;
    //   260: getfield 308	com/tencent/msdk/request/QQA8Response:ret	I
    //   263: invokevirtual 65	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   266: ldc_w 314
    //   269: invokevirtual 60	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   272: aload_0
    //   273: getfield 33	com/tencent/msdk/request/QQA8RequestMng:rspFromA8	Lcom/tencent/msdk/request/QQA8Response;
    //   276: getfield 305	com/tencent/msdk/request/QQA8Response:msg	Ljava/lang/String;
    //   279: invokevirtual 60	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   282: invokevirtual 69	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   285: invokestatic 115	com/tencent/msdk/tools/Logger:d	(Ljava/lang/String;)V
    //   288: iconst_0
    //   289: istore 4
    //   291: goto -90 -> 201
    //   294: astore_1
    //   295: iconst_0
    //   296: istore 5
    //   298: aload 7
    //   300: astore 6
    //   302: iload 5
    //   304: istore 4
    //   306: aload_1
    //   307: invokevirtual 317	org/json/JSONException:printStackTrace	()V
    //   310: aload 7
    //   312: astore 6
    //   314: iload 5
    //   316: istore 4
    //   318: aload_0
    //   319: iconst_0
    //   320: sipush 1001
    //   323: iconst_0
    //   324: invokespecial 282	com/tencent/msdk/request/QQA8RequestMng:reportEventToBeacon	(ZIZ)V
    //   327: aload_0
    //   328: iconst_0
    //   329: aload 7
    //   331: iload_2
    //   332: invokespecial 284	com/tencent/msdk/request/QQA8RequestMng:notify	(ZLjava/lang/String;I)V
    //   335: return
    //   336: astore_1
    //   337: aload_0
    //   338: iload 4
    //   340: aload 6
    //   342: iload_2
    //   343: invokespecial 284	com/tencent/msdk/request/QQA8RequestMng:notify	(ZLjava/lang/String;I)V
    //   346: aload_1
    //   347: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	348	0	this	QQA8RequestMng
    //   0	348	1	paramString	String
    //   0	348	2	paramInt1	int
    //   0	348	3	paramInt2	int
    //   70	269	4	bool1	boolean
    //   1	314	5	bool2	boolean
    //   66	275	6	str1	String
    //   62	268	7	str2	String
    //   5	120	8	str3	String
    // Exception table:
    //   from	to	target	type
    //   72	81	294	org/json/JSONException
    //   93	100	294	org/json/JSONException
    //   112	120	294	org/json/JSONException
    //   132	140	294	org/json/JSONException
    //   150	160	294	org/json/JSONException
    //   170	177	294	org/json/JSONException
    //   189	197	294	org/json/JSONException
    //   220	233	294	org/json/JSONException
    //   243	288	294	org/json/JSONException
    //   72	81	336	finally
    //   93	100	336	finally
    //   112	120	336	finally
    //   132	140	336	finally
    //   150	160	336	finally
    //   170	177	336	finally
    //   189	197	336	finally
    //   220	233	336	finally
    //   243	288	336	finally
    //   306	310	336	finally
    //   318	327	336	finally
  }
  
  public void qqA8Req(String paramString1, String paramString2, int paramInt)
  {
    this.notifyState = paramInt;
    if ((T.ckIsEmpty(paramString1)) || (T.ckIsEmpty(paramString2)))
    {
      Logger.d("qqA8Req params error !!!");
      LoginManager.getInstance().setIsCheckingToken(false);
      notify(false, "qqA8Req params error !!!", -1);
      return;
    }
    this.refreshStartTime = System.currentTimeMillis();
    QQA8Request localQQA8Request = new QQA8Request();
    String str1 = WeGame.getInstance().qq_appid;
    String str2 = WGPfManager.getInstance().getChannelId();
    String str3 = WGPfManager.getInstance().getPlatformId();
    paramString1 = localQQA8Request.getReqJson(paramString1, paramString2, str1, str2, WeGame.getInstance().offerId, str3);
    ((MsdkStat)MsdkStat.gDefault.get()).addLoginLog(paramString1, false);
    paramString2 = UrlManager.getUrl("/auth/qqa8_login/", WeGame.QQPLATID);
    FilterLogHelper.saveKeysReq(getInterfaceName(), paramString1, null);
    new HttpRequestManager(this).postTextAsync(paramString2, paramString1.toString(), 2011);
  }
}
