package com.tencent.msdk.push;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.os.SystemClock;
import com.tencent.msdk.config.ConfigManager;
import com.tencent.msdk.push.db.PushClientDbModel;
import com.tencent.msdk.push.req.PullMsgReq;
import com.tencent.msdk.push.req.PullMsgReq.Callback;
import com.tencent.msdk.push.req.PullProxyReq;
import com.tencent.msdk.push.req.PullProxyReq.Callback;
import com.tencent.msdk.push.req.PushStateReq;
import com.tencent.msdk.tools.Logger;
import com.tencent.msdk.tools.T;
import org.json.JSONArray;
import org.json.JSONException;

public class AlarmReveiver
  extends BroadcastReceiver
{
  public static Context sCtx;
  
  public AlarmReveiver() {}
  
  private void resetPollingAlarm(Context paramContext, String paramString)
  {
    if ("false".equals(ConfigManager.getIsServerIntervalAccepted())) {}
    do
    {
      return;
      AlarmManager localAlarmManager = (AlarmManager)sCtx.getSystemService("alarm");
      paramContext = new Intent(paramContext, AlarmReveiver.class);
      long l = SystemClock.elapsedRealtime();
      int j = 600000;
      int i = j;
      if (!T.ckIsEmpty(paramString))
      {
        i = j;
        if (paramString.split(",").length <= 1) {}
      }
      try
      {
        i = Integer.parseInt(paramString.split(",")[1].trim());
        i = i * 60 * 1000;
      }
      catch (NumberFormatException paramString)
      {
        for (;;)
        {
          Logger.d("NumberFormatException ");
          i = j;
        }
      }
    } while ((HttpPushService.sPendingIntent == null) || (i == HttpPushService.sLastPollingInterval));
    Logger.d("cancel default pendingIntent");
    Logger.d("reset AlarmManager: " + i);
    localAlarmManager.cancel(HttpPushService.sPendingIntent);
    HttpPushService.sPendingIntent = PendingIntent.getBroadcast(HttpPushService.sHttpPushServiceContext, 8888, paramContext, 134217728);
    HttpPushService.sLastPollingInterval = i;
    localAlarmManager.setRepeating(3, i + l, i, HttpPushService.sPendingIntent);
  }
  
  public void onReceive(final Context paramContext, Intent paramIntent)
  {
    sCtx = paramContext;
    Logger.d("onReceive");
    paramIntent = new PullProxyReq();
    paramIntent.setmCallback(new PullProxyReq.Callback()
    {
      public void onFail(String paramAnonymousString)
      {
        Logger.d("poll push msg failed!");
      }
      
      public void onMsgReady(String paramAnonymousString)
      {
        Logger.d("PullProxyCallback onSuccess");
        new PullMsgReq(new AlarmReveiver.PullMsgReqCallback()).send();
      }
      
      public void onNoMsg(String paramAnonymousString)
      {
        Logger.d("no push msg@now");
        AlarmReveiver.this.resetPollingAlarm(paramContext, paramAnonymousString);
      }
    });
    paramIntent.send();
  }
  
  public static class PullMsgReqCallback
    implements PullMsgReq.Callback
  {
    public PullMsgReqCallback() {}
    
    public void onFail()
    {
      Logger.d("onFail");
    }
    
    public void onSuccess(JSONArray paramJSONArray)
    {
      if ((paramJSONArray == null) || (paramJSONArray.length() == 0))
      {
        Logger.d("pull msg success, but msgList empty!");
        return;
      }
      for (;;)
      {
        int i;
        int k;
        try
        {
          Object localObject = new PushMsgEmitter();
          j = 0;
          i = 0;
          if (i < paramJSONArray.length())
          {
            MsgEntry localMsgEntry = new MsgEntry(paramJSONArray.getJSONObject(i));
            ((PushMsgEmitter)localObject).emit(AlarmReveiver.sCtx, localMsgEntry);
            int m = localMsgEntry.getId();
            k = j;
            if (j < m) {
              k = m;
            }
          }
          else
          {
            paramJSONArray = new PushClientDbModel();
            localObject = new ContentValues();
            ((ContentValues)localObject).put("last_msg_id", "" + j);
            paramJSONArray.update((ContentValues)localObject, null, null);
            new PushStateReq().send();
            return;
          }
        }
        catch (JSONException paramJSONArray)
        {
          paramJSONArray.printStackTrace();
          return;
        }
        i += 1;
        int j = k;
      }
    }
  }
}
