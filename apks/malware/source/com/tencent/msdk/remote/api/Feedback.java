package com.tencent.msdk.remote.api;

import com.tencent.msdk.WeGame;
import com.tencent.msdk.WeGameNotifyGame;
import com.tencent.msdk.api.LoginRet;
import com.tencent.msdk.login.LoginUtils;
import com.tencent.msdk.tools.Logger;
import org.json.JSONException;
import org.json.JSONObject;

class Feedback
  extends RemoteApiBase
{
  private static final String EVENT_NAME = "feedback";
  private static final String PATH = "/feedback/views/";
  
  public Feedback(String paramString)
  {
    LoginRet localLoginRet = new LoginRet();
    LoginUtils.getLocalLoginRet(localLoginRet);
    if (localLoginRet.platform == 0)
    {
      Logger.e("Feedback called? but not login record");
      return;
    }
    try
    {
      this.jsonBody.put("gameID", WeGame.getInstance().qq_appid);
      this.jsonBody.put("openID", localLoginRet.open_id);
      this.jsonBody.put("question", paramString);
      this.jsonBody.put("device", "android");
      this.jsonBody.put("platID", localLoginRet.platform);
      return;
    }
    catch (JSONException paramString)
    {
      Logger.d("JSONException");
      paramString.printStackTrace();
    }
  }
  
  private void notifyGame(int paramInt, String paramString)
  {
    WeGameNotifyGame.getInstance().OnFeedbackNotify(paramInt, paramString);
  }
  
  protected int getMyId()
  {
    return RemoteApiWhat.Feedback.ordinal();
  }
  
  protected String getPath()
  {
    return "/feedback/views/";
  }
  
  public void onFailure(String paramString, int paramInt1, int paramInt2)
  {
    if (paramInt2 != getMyId())
    {
      Logger.d("a wrong callback");
      return;
    }
    notifyGame(0, String.format("errorCode: %d; errorContent: %s", new Object[] { Integer.valueOf(paramInt1), "" + paramString }));
    Logger.d("onFailure " + paramString + " statusCode: " + paramInt1);
    reportEventToBeacon("feedback", false, paramInt1, false);
  }
  
  public void onSuccess(String paramString, int paramInt1, int paramInt2)
  {
    if (paramInt2 != getMyId())
    {
      Logger.d("a wrong callback");
      return;
    }
    notifyGame(0, String.format("statusCode: %d; errorContent: %s", new Object[] { Integer.valueOf(paramInt1), "" + paramString }));
    Logger.d("onSuccess " + paramString + " statusCode: " + paramInt1);
    reportEventToBeacon("feedback", true, 0, false);
  }
}
