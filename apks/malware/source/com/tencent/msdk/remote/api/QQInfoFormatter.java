package com.tencent.msdk.remote.api;

import com.tencent.msdk.tools.Logger;
import java.util.Vector;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

class QQInfoFormatter
{
  QQInfoFormatter() {}
  
  public static Vector<PersonInfo> formatFriends(JSONArray paramJSONArray)
  {
    localVector = new Vector();
    if ((paramJSONArray == null) || (paramJSONArray.length() == 0)) {}
    for (;;)
    {
      return localVector;
      int i = 0;
      try
      {
        while (i < paramJSONArray.length())
        {
          Object localObject = paramJSONArray.getJSONObject(i);
          localObject = new PersonInfo(((JSONObject)localObject).getString("nickName"), ((JSONObject)localObject).getString("openid"), ((JSONObject)localObject).getString("gender"), ((JSONObject)localObject).getString("figureurl_qq") + "40", ((JSONObject)localObject).getString("figureurl_qq") + "40", ((JSONObject)localObject).getString("figureurl_qq") + "100", "", "");
          Logger.d(localObject);
          localVector.add(localObject);
          i += 1;
        }
        return localVector;
      }
      catch (JSONException paramJSONArray)
      {
        paramJSONArray.printStackTrace();
      }
    }
  }
  
  public static PersonInfo formatMyInfo(String paramString, SafeJSONObject paramSafeJSONObject)
  {
    try
    {
      paramString = paramSafeJSONObject.getString("nickName");
      String str1 = paramSafeJSONObject.getString("gender");
      String str2 = paramSafeJSONObject.getString("picture40");
      String str3 = paramSafeJSONObject.getString("picture40");
      String str4 = paramSafeJSONObject.getString("picture100");
      String str5 = paramSafeJSONObject.getString("language");
      String str6 = paramSafeJSONObject.getString("country");
      paramString = new PersonInfo(paramString, "", str1, str2, str3, str4, "", "", paramSafeJSONObject.getString("gpsCity"), str5, str6);
      return paramString;
    }
    catch (JSONException paramString)
    {
      paramString.printStackTrace();
    }
    return new PersonInfo();
  }
  
  public static Vector<PersonInfo> formatNearby(JSONArray paramJSONArray)
  {
    localVector = new Vector();
    if ((paramJSONArray == null) || (paramJSONArray.length() == 0)) {}
    for (;;)
    {
      return localVector;
      int i = 0;
      try
      {
        if (i >= paramJSONArray.length()) {
          continue;
        }
        JSONObject localJSONObject = paramJSONArray.getJSONObject(i);
        String str1 = localJSONObject.getString("nickName");
        String str2 = localJSONObject.getString("openid");
        Object localObject;
        label80:
        String str3;
        String str4;
        String str5;
        float f;
        if ("1".equals(localJSONObject.getString("gender")))
        {
          localObject = "男";
          str3 = localJSONObject.getString("figureurl_qq") + "/40";
          str4 = localJSONObject.getString("figureurl_qq") + "/40";
          str5 = localJSONObject.getString("figureurl_qq") + "/100";
          double d = localJSONObject.getDouble("distance");
          f = (float)d;
        }
        for (;;)
        {
          try
          {
            int j = Integer.parseInt(localJSONObject.getString("is_friend"));
            if (j != 1) {
              continue;
            }
            bool = true;
          }
          catch (Exception localException)
          {
            boolean bool = false;
            continue;
          }
          localObject = new PersonInfo(str1, str2, (String)localObject, str3, str4, str5, "", "", f, bool, localJSONObject.getLong("timestamp"));
          Logger.d(localObject);
          localVector.add(localObject);
          i += 1;
          break;
          localObject = "女";
          break label80;
          bool = false;
        }
        return localVector;
      }
      catch (JSONException paramJSONArray)
      {
        paramJSONArray.printStackTrace();
      }
    }
  }
}
