package com.tencent.msdk.ad;

import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.view.View;
import android.view.View.OnClickListener;
import com.tencent.msdk.WeGameNotifyGame;
import com.tencent.msdk.ad.view.ADPagerAdapter;
import com.tencent.msdk.ad.view.ADScrollViewPager;
import com.tencent.msdk.ad.view.ADShowResID;
import com.tencent.msdk.api.ADRet;
import com.tencent.msdk.api.eADCallNum;
import com.tencent.msdk.api.eADType;
import com.tencent.msdk.tools.Logger;
import com.tencent.msdk.tools.T;
import java.util.ArrayList;
import java.util.List;

public class ADDialog
  extends Dialog
  implements View.OnClickListener
{
  private List<ADItem> adItemList;
  private ArrayList<ADParcelable> adParcelables;
  private int btnNum;
  private boolean isConfigLayout = false;
  private Activity mActivity;
  private eADType mAdType;
  private View mFirstBtn;
  private int mLoopTime = 0;
  private View mSecondBtn;
  private int mSize;
  private View mThirdBtn;
  private int type;
  private ADScrollViewPager viewPager;
  
  public ADDialog(Context paramContext)
  {
    super(paramContext);
    this.mActivity = ((Activity)paramContext);
  }
  
  public ADDialog(Context paramContext, int paramInt1, int paramInt2, int paramInt3, ArrayList<ADParcelable> paramArrayList, int paramInt4, boolean paramBoolean)
  {
    super(paramContext, paramInt1);
    this.mActivity = ((Activity)paramContext);
    this.type = paramInt2;
    this.mAdType = eADType.getEnum(paramInt2);
    this.btnNum = paramInt3;
    this.adParcelables = paramArrayList;
    this.mLoopTime = paramInt4;
    if (this.adParcelables == null) {}
    for (paramInt1 = i;; paramInt1 = this.adParcelables.size())
    {
      this.mSize = paramInt1;
      this.isConfigLayout = paramBoolean;
      return;
    }
  }
  
  private void initPagerView(int paramInt, final ArrayList<ADParcelable> paramArrayList)
  {
    this.adItemList = new ArrayList();
    int i = 0;
    while (i < paramInt)
    {
      ADParcelable localADParcelable = (ADParcelable)paramArrayList.get(i);
      String str = localADParcelable.getPicPath();
      Object localObject = null;
      if (!T.ckIsEmpty(str)) {
        localObject = BitmapFactory.decodeFile(str);
      }
      localObject = new ADItem(localADParcelable.getAdType(), localADParcelable.getAdId(), (Bitmap)localObject, localADParcelable.getJumpUrl());
      this.adItemList.add(localObject);
      i += 1;
    }
    paramArrayList = new ADPagerAdapter(this.mActivity, this.adItemList);
    if (this.adItemList.size() > 1) {
      paramArrayList.setLoopMode(true);
    }
    for (;;)
    {
      this.viewPager.setAdapter(paramArrayList);
      if (this.mLoopTime > 0)
      {
        this.viewPager.setInterval(this.mLoopTime);
        this.viewPager.startAutoScroll();
      }
      this.viewPager.setCurrentItem(1073741823 - 1073741823 % this.adItemList.size());
      paramArrayList.reportADShowEvent(this.viewPager.getCurrentItem());
      this.viewPager.setOnPageChangeListener(new ViewPager.OnPageChangeListener()
      {
        public void onPageScrollStateChanged(int paramAnonymousInt) {}
        
        public void onPageScrolled(int paramAnonymousInt1, float paramAnonymousFloat, int paramAnonymousInt2) {}
        
        public void onPageSelected(int paramAnonymousInt)
        {
          paramArrayList.reportADShowEvent(paramAnonymousInt);
        }
      });
      return;
      paramArrayList.setLoopMode(false);
    }
  }
  
  private boolean initView()
  {
    Activity localActivity = this.mActivity;
    int i = this.type;
    int j = this.btnNum;
    if (this.mSize > 0) {}
    int k;
    int m;
    int n;
    for (boolean bool = false;; bool = true)
    {
      i = ADShowResID.getLayoutAdMain(localActivity, i, j, bool, this.isConfigLayout);
      j = ADShowResID.getIdAdViewPager(this.mActivity);
      k = ADShowResID.getIdAdViewBtn1(this.mActivity);
      m = ADShowResID.getIdAdViewBtn2(this.mActivity);
      n = ADShowResID.getIdAdViewBtn3(this.mActivity);
      if ((i != 0) && (k != 0) && (m != 0)) {
        break;
      }
      Logger.e("fail to find adShowDialog resource mainlayout, firstButton,secondButton...");
      return false;
    }
    setContentView(i);
    this.mFirstBtn = findViewById(k);
    this.mSecondBtn = findViewById(m);
    if ((this.mFirstBtn == null) || (this.mSecondBtn == null))
    {
      Logger.e("fail to findViewById firstButton,secondButton...");
      return false;
    }
    this.mFirstBtn.setOnClickListener(this);
    this.mSecondBtn.setOnClickListener(this);
    if (eADCallNum.getEnum(this.btnNum) == eADCallNum.Type_Three)
    {
      if (n == 0)
      {
        Logger.w("fail to find adShowDialog resource thirdBtnId...");
        return false;
      }
      this.mThirdBtn = findViewById(n);
      if (this.mThirdBtn == null)
      {
        Logger.e("fail to findViewById mThirdBtn...");
        return false;
      }
      this.mThirdBtn.setOnClickListener(this);
    }
    if (this.mSize > 0)
    {
      if (j == 0)
      {
        Logger.e("fail to find adShowDialog resource viewPagerId...");
        return false;
      }
      this.viewPager = ((ADScrollViewPager)findViewById(j));
      if (this.viewPager == null)
      {
        Logger.e("fail to findViewById viewPager...");
        return false;
      }
      initPagerView(this.mSize, this.adParcelables);
    }
    return true;
  }
  
  public void onActivityPause()
  {
    if (this.viewPager != null) {
      this.viewPager.stopAutoScroll();
    }
  }
  
  public void onActivityResume()
  {
    if ((this.viewPager != null) && (this.mLoopTime > 0)) {
      this.viewPager.startAutoScroll();
    }
  }
  
  public void onBackPressed()
  {
    super.onBackPressed();
    ADRet localADRet = new ADRet("", this.mAdType);
    WeGameNotifyGame.getInstance().OnADBackPressedNotify(localADRet);
  }
  
  public void onClick(View paramView)
  {
    dismiss();
    paramView = new ADRet((String)paramView.getTag(), this.mAdType);
    WeGameNotifyGame.getInstance().OnADNotify(paramView);
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    initView();
    setCancelable(false);
  }
  
  protected void onStop()
  {
    super.onStop();
    if (this.viewPager != null)
    {
      this.viewPager.stopAutoScroll();
      this.viewPager.setAdapter(null);
    }
    if (this.adItemList != null) {
      this.adItemList.clear();
    }
  }
}
