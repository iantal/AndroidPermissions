package com.tencent.msdk.ad.db;

import android.content.ContentValues;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import com.tencent.msdk.Singleton;
import com.tencent.msdk.ad.ADPosInfo;
import com.tencent.msdk.db.BaseDBModel;
import com.tencent.msdk.db.DbManager;
import com.tencent.msdk.tools.Logger;

public class ADPosDBModel
  extends BaseDBModel
{
  private static final String TBL_NAME = "ad_pos_tbl";
  public static final String adIdsCol = "adIds";
  public static final String adUrlCol = "adUrl";
  public static final String pLoopTimeCol = "pLoopTime";
  public static final String posIdCol = "posId";
  private DbManager helper = (DbManager)DbManager.gDefault.get();
  
  public ADPosDBModel() {}
  
  private ADPosInfo getADPosInfoColumnData(Cursor paramCursor)
  {
    ADPosInfo localADPosInfo = new ADPosInfo();
    localADPosInfo.mPosId = getStringByName(paramCursor, "posId");
    localADPosInfo.mPLoopTime = getIntByName(paramCursor, "pLoopTime");
    localADPosInfo.mADPosUrl = getStringByName(paramCursor, "adUrl");
    localADPosInfo.mADIds = getStringByName(paramCursor, "adIds");
    return localADPosInfo;
  }
  
  private ContentValues getContentCalues(ADPosInfo paramADPosInfo)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("posId", paramADPosInfo.mPosId);
    localContentValues.put("pLoopTime", Integer.valueOf(paramADPosInfo.mPLoopTime));
    localContentValues.put("adUrl", paramADPosInfo.mADPosUrl);
    localContentValues.put("adIds", paramADPosInfo.mADIds);
    return localContentValues;
  }
  
  public static String getCreateTblSql()
  {
    String str = "" + "CREATE TABLE IF NOT EXISTS [ad_pos_tbl] (";
    str = str + "[posId] NVARCHAR(128) NOT NULL,";
    str = str + "[pLoopTime] TIMESTAMP NULL,";
    str = str + "[adUrl] TIMESTAMP NULL,";
    str = str + "[adIds] NVARCHAR(512) NULL ";
    return str + ")";
  }
  
  public static String getDropTblSql()
  {
    return "DROP TABLE IF EXISTS ad_pos_tbl";
  }
  
  private boolean isExisted(ADPosInfo paramADPosInfo)
  {
    synchronized (this.helper)
    {
      paramADPosInfo = "" + paramADPosInfo.mPosId;
    }
  }
  
  private int update(ADPosInfo paramADPosInfo)
  {
    ContentValues localContentValues;
    synchronized (this.helper)
    {
      localContentValues = getContentCalues(paramADPosInfo);
    }
    try
    {
      paramADPosInfo = "" + paramADPosInfo.mPosId;
      int i = this.helper.getWritableDatabase().update("ad_pos_tbl", localContentValues, " `posId` = ? ", new String[] { paramADPosInfo });
      this.helper.close();
      return i;
    }
    catch (Exception paramADPosInfo)
    {
      paramADPosInfo = paramADPosInfo;
      this.helper.close();
      return 0;
      paramADPosInfo = finally;
      throw paramADPosInfo;
    }
    finally
    {
      paramADPosInfo = finally;
      this.helper.close();
      throw paramADPosInfo;
    }
  }
  
  public boolean create(ADPosInfo paramADPosInfo)
  {
    for (;;)
    {
      synchronized (this.helper)
      {
        paramADPosInfo = getContentCalues(paramADPosInfo);
        long l = this.helper.getWritableDatabase().insert("ad_pos_tbl", null, paramADPosInfo);
        this.helper.close();
        if (l != -1L)
        {
          bool = true;
          return bool;
        }
      }
      boolean bool = false;
    }
  }
  
  public ADPosInfo getADPosInfoById(String paramString)
  {
    synchronized (this.helper)
    {
      Cursor localCursor = this.helper.getReadableDatabase().query("ad_pos_tbl", null, " posId = ? ", new String[] { paramString }, null, null, null, null);
      Logger.d("query result:" + localCursor.getCount());
      ADPosInfo localADPosInfo = new ADPosInfo();
      paramString = localADPosInfo;
      if (localCursor != null)
      {
        paramString = localADPosInfo;
        if (localCursor.getCount() > 0)
        {
          localCursor.moveToFirst();
          paramString = getADPosInfoColumnData(localCursor);
        }
      }
      localCursor.close();
      return paramString;
    }
  }
  
  public boolean save(ADPosInfo paramADPosInfo)
  {
    if (isExisted(paramADPosInfo)) {
      return update(paramADPosInfo) > 0;
    }
    return create(paramADPosInfo);
  }
}
