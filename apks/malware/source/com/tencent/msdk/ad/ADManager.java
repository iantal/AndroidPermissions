package com.tencent.msdk.ad;

import android.app.Activity;
import android.content.Context;
import android.os.Environment;
import android.view.Display;
import android.view.WindowManager;
import com.tencent.msdk.WeGame;
import com.tencent.msdk.ad.db.ADDBModel;
import com.tencent.msdk.ad.db.ADPosDBModel;
import com.tencent.msdk.ad.request.ADPic;
import com.tencent.msdk.ad.request.ADRequestPara;
import com.tencent.msdk.ad.view.ADShowResID;
import com.tencent.msdk.api.LoginRet;
import com.tencent.msdk.api.eADType;
import com.tencent.msdk.config.ConfigManager;
import com.tencent.msdk.handle.MsdkThreadManager;
import com.tencent.msdk.login.LoginInfoManager;
import com.tencent.msdk.tools.Logger;
import com.tencent.msdk.tools.T;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;

public class ADManager
{
  private static ADManager instance = null;
  public static int sADTimeLimit;
  public static int sADVersion = 1;
  public static int sDefaultADTime;
  public static String sPicPath = "";
  public static int sRealADTime;
  private Activity mActivity = null;
  private boolean mIsConfigLayout = false;
  private int mPauseBtnNum;
  private ADDialog mPauseDialog;
  private int mStopBtnNum;
  private ADDialog mStopDialog;
  
  static
  {
    sADTimeLimit = 10;
    sDefaultADTime = 10;
    sRealADTime = 10;
  }
  
  public ADManager() {}
  
  private ArrayList<ADParcelable> createTestData(int paramInt)
  {
    Object localObject3 = Environment.getExternalStorageDirectory().toString() + "/MSDK/banner5.jpg";
    Object localObject2 = Environment.getExternalStorageDirectory().toString() + "/MSDK/banner2.jpg";
    Object localObject1 = Environment.getExternalStorageDirectory().toString() + "/MSDK/banner3.jpg";
    String str = Environment.getExternalStorageDirectory().toString() + "/MSDK/banner4.jpg";
    ArrayList localArrayList = new ArrayList();
    ADParcelable localADParcelable = new ADParcelable();
    localADParcelable.setAdType(paramInt);
    localADParcelable.setAdId(111);
    localADParcelable.setPicPath((String)localObject3);
    localADParcelable.setJumpUrl("http://www.baidu.com");
    localArrayList.add(localADParcelable);
    localObject3 = new ADParcelable();
    ((ADParcelable)localObject3).setAdType(paramInt);
    ((ADParcelable)localObject3).setAdId(112);
    ((ADParcelable)localObject3).setPicPath((String)localObject2);
    ((ADParcelable)localObject3).setJumpUrl("http://www.qq.com");
    localArrayList.add(localObject3);
    localObject2 = new ADParcelable();
    ((ADParcelable)localObject2).setAdType(paramInt);
    ((ADParcelable)localObject2).setAdId(113);
    ((ADParcelable)localObject2).setPicPath((String)localObject1);
    ((ADParcelable)localObject2).setJumpUrl("http://www.google.com.cn");
    localArrayList.add(localObject2);
    localObject1 = new ADParcelable();
    ((ADParcelable)localObject1).setAdType(paramInt);
    ((ADParcelable)localObject1).setAdId(114);
    ((ADParcelable)localObject1).setPicPath(str);
    ((ADParcelable)localObject1).setJumpUrl("http://www.hao123.com");
    localArrayList.add(localObject1);
    return localArrayList;
  }
  
  private int getBtnNumByType(int paramInt)
  {
    if (eADType.getEnum(paramInt) == eADType.Type_Stop) {
      return this.mStopBtnNum;
    }
    if (eADType.getEnum(paramInt) == eADType.Type_Pause) {
      return this.mPauseBtnNum;
    }
    return 0;
  }
  
  public static ADManager getInstance()
  {
    if (instance == null) {}
    try
    {
      if (instance == null) {
        instance = new ADManager();
      }
      return instance;
    }
    finally {}
  }
  
  private String getPosIdByType(int paramInt)
  {
    if (eADType.getEnum(paramInt) == eADType.Type_Stop) {
      return "2";
    }
    if (eADType.getEnum(paramInt) == eADType.Type_Pause) {
      return "1";
    }
    return null;
  }
  
  private void initADButtonNum()
  {
    int[] arrayOfInt = ConfigManager.getADButtonNum(WeGame.getInstance().getActivity());
    this.mPauseBtnNum = arrayOfInt[0];
    this.mStopBtnNum = arrayOfInt[1];
  }
  
  public void closeADDialog(int paramInt)
  {
    closeADDialog(eADType.getEnum(paramInt));
  }
  
  public void closeADDialog(eADType paramEADType)
  {
    if (paramEADType == eADType.Type_Stop) {
      if ((this.mStopDialog != null) && (this.mStopDialog.isShowing())) {
        this.mStopDialog.dismiss();
      }
    }
    while ((paramEADType != eADType.Type_Pause) || (this.mPauseDialog == null) || (!this.mPauseDialog.isShowing())) {
      return;
    }
    this.mPauseDialog.dismiss();
  }
  
  public void getADInfo()
  {
    if (!ConfigManager.needAD(WeGame.getInstance().getActivity()))
    {
      Logger.w("ad module is closed!");
      return;
    }
    Logger.d("getADInfo");
    ADRequestPara localADRequestPara = new ADRequestPara();
    localADRequestPara.mAdInfoList = new ADDBModel().getBriefADInfo();
    Object localObject = LoginInfoManager.getInstance().getLastLoginUserInfo();
    if (((LoginRet)localObject).platform == WeGame.WXPLATID)
    {
      localADRequestPara.mAppId = WeGame.getInstance().wx_appid;
      localADRequestPara.mMSDKKey = WeGame.getInstance().getMSDKKey();
      localADRequestPara.mOpenId = ((LoginRet)localObject).open_id;
    }
    for (;;)
    {
      Logger.d("mAppIdï¼š" + localADRequestPara.mAppId + "mOpenId:" + localADRequestPara.mOpenId);
      MsdkThreadManager.getInstance().getAD(localADRequestPara);
      return;
      if (((LoginRet)localObject).platform == WeGame.QQPLATID)
      {
        localADRequestPara.mAppId = WeGame.getInstance().qq_appid;
        localADRequestPara.mMSDKKey = WeGame.getInstance().getMSDKKey();
        localADRequestPara.mOpenId = ((LoginRet)localObject).open_id;
      }
      else
      {
        localObject = WeGame.getInstance().qq_appid;
        String str = WeGame.getInstance().wx_appid;
        if (T.ckIsEmpty((String)localObject))
        {
          if (T.ckIsEmpty(str))
          {
            localADRequestPara.mAppId = "";
            localADRequestPara.mMSDKKey = "";
            Logger.e("appid is null");
          }
          else
          {
            localADRequestPara.mAppId = WeGame.getInstance().wx_appid;
            localADRequestPara.mMSDKKey = WeGame.getInstance().getMSDKKey();
          }
        }
        else if (T.ckIsEmpty(str))
        {
          localADRequestPara.mAppId = WeGame.getInstance().qq_appid;
          localADRequestPara.mMSDKKey = WeGame.getInstance().getMSDKKey();
        }
        else
        {
          localADRequestPara.mAppId = (WeGame.getInstance().qq_appid + "|" + WeGame.getInstance().wx_appid);
          localADRequestPara.mMSDKKey = WeGame.getInstance().getMSDKKey();
        }
      }
    }
  }
  
  public Context getContext()
  {
    return this.mActivity;
  }
  
  public int getHeight()
  {
    return ((WindowManager)this.mActivity.getSystemService("window")).getDefaultDisplay().getHeight();
  }
  
  public ADPosInfo getPosInfoById(String paramString)
  {
    paramString = new ADPosDBModel().getADPosInfoById(paramString);
    Iterator localIterator = new ADDBModel().getADInfoByADList(paramString.mADIds).iterator();
    while (localIterator.hasNext())
    {
      ADInfo localADInfo = (ADInfo)localIterator.next();
      if (ADPic.checkPicExist(localADInfo.mADId, localADInfo.mPicUrl, localADInfo.mHashValue).booleanValue())
      {
        localADInfo.mPicUrl = ADPic.getLocalFilePathByIdURLHashValue(localADInfo.mADId, localADInfo.mPicUrl, localADInfo.mHashValue);
        paramString.mADList.add(localADInfo);
      }
    }
    return paramString;
  }
  
  public int getWidth()
  {
    return ((WindowManager)this.mActivity.getSystemService("window")).getDefaultDisplay().getWidth();
  }
  
  public void init(Activity paramActivity)
  {
    this.mActivity = paramActivity;
    this.mIsConfigLayout = ConfigManager.needConfigADLayout(this.mActivity);
    initADButtonNum();
    sPicPath = paramActivity.getFilesDir().getAbsolutePath();
    sRealADTime = ConfigManager.getADTime(WeGame.getInstance().getActivity());
  }
  
  public void onPause()
  {
    if ((this.mPauseDialog != null) && (this.mPauseDialog.isShowing())) {
      this.mPauseDialog.onActivityPause();
    }
    if ((this.mStopDialog != null) && (this.mStopDialog.isShowing())) {
      this.mStopDialog.onActivityPause();
    }
  }
  
  public void onResume()
  {
    if ((this.mPauseDialog != null) && (this.mPauseDialog.isShowing())) {
      this.mPauseDialog.onActivityResume();
    }
    if ((this.mStopDialog != null) && (this.mStopDialog.isShowing())) {
      this.mStopDialog.onActivityResume();
    }
  }
  
  public void openAdDialog(int paramInt)
  {
    int j = getBtnNumByType(paramInt);
    if (j == 0) {
      Logger.w("button num config error, please check msdkconfig.ini");
    }
    Object localObject1;
    Object localObject2;
    int k;
    int i;
    do
    {
      do
      {
        return;
        localObject1 = getPosIdByType(paramInt);
        if (localObject1 == null)
        {
          Logger.w("posId is wrong, please check AD net!");
          return;
        }
        localObject2 = getPosInfoById((String)localObject1);
        k = ((ADPosInfo)localObject2).mPLoopTime * 1000;
        localObject1 = new ArrayList();
        localObject2 = ((ADPosInfo)localObject2).mADList;
        i = 0;
        while ((localObject2 != null) && (i < ((ArrayList)localObject2).size()))
        {
          ADInfo localADInfo = (ADInfo)((ArrayList)localObject2).get(i);
          if (localADInfo != null)
          {
            ADParcelable localADParcelable = new ADParcelable();
            localADParcelable.setAdType(paramInt);
            localADParcelable.setAdId(localADInfo.mADId);
            localADParcelable.setPicPath(localADInfo.mPicUrl);
            localADParcelable.setJumpUrl(localADInfo.mJumpUrl);
            ((ArrayList)localObject1).add(localADParcelable);
          }
          i += 1;
        }
        localObject2 = WeGame.getInstance().getActivity();
      } while (((Activity)localObject2).isFinishing());
      i = ADShowResID.getStyleDlgTheme((Context)localObject2);
      if (eADType.getEnum(paramInt) == eADType.Type_Pause)
      {
        this.mPauseDialog = new ADDialog((Context)localObject2, i, paramInt, j, (ArrayList)localObject1, k, this.mIsConfigLayout);
        this.mPauseDialog.show();
        return;
      }
    } while (eADType.getEnum(paramInt) != eADType.Type_Stop);
    this.mStopDialog = new ADDialog((Context)localObject2, i, paramInt, j, (ArrayList)localObject1, k, this.mIsConfigLayout);
    this.mStopDialog.show();
  }
}
