package com.tencent.msdk.ad;

import com.tencent.msdk.remote.api.SafeJSONObject;
import com.tencent.msdk.tools.Logger;
import com.tencent.msdk.tools.T;
import java.util.ArrayList;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class ADInfo
  extends BriefADInfo
{
  public long mBeginTime = 0L;
  public long mEndTime = 0L;
  public String mHashValue = "";
  public String mJumpUrl = "";
  public String mPicUrl = "";
  private String mRawContent = "";
  
  public ADInfo() {}
  
  public ADInfo(int paramInt, long paramLong)
  {
    super(paramInt, paramLong);
  }
  
  public static ADInfo newInstance(String paramString)
  {
    if (T.ckIsEmpty(paramString)) {
      return null;
    }
    try
    {
      ADInfo localADInfo = newInstance(new SafeJSONObject(paramString));
      localADInfo.mRawContent = paramString;
      return localADInfo;
    }
    catch (JSONException paramString)
    {
      paramString.printStackTrace();
    }
    return null;
  }
  
  public static ADInfo newInstance(JSONObject paramJSONObject)
  {
    if (paramJSONObject == null) {
      return null;
    }
    ADInfo localADInfo = new ADInfo();
    localADInfo.mRawContent = paramJSONObject.toString();
    try
    {
      localADInfo.mADId = paramJSONObject.getInt("adid");
      localADInfo.mTimestamp = paramJSONObject.getLong("timestamp");
      localADInfo.mBeginTime = paramJSONObject.getLong("beginTime");
      localADInfo.mEndTime = paramJSONObject.getLong("endTime");
      localADInfo.mJumpUrl = paramJSONObject.getString("jumpUrl");
      localADInfo.mPicUrl = paramJSONObject.getString("picUrl");
      localADInfo.mHashValue = paramJSONObject.getString("hashValue");
      return localADInfo;
    }
    catch (JSONException paramJSONObject)
    {
      paramJSONObject.printStackTrace();
      return null;
    }
    catch (NumberFormatException paramJSONObject)
    {
      paramJSONObject.printStackTrace();
    }
    return null;
  }
  
  public static ArrayList<ADInfo> newInstanceList(JSONArray paramJSONArray)
  {
    ArrayList localArrayList = new ArrayList();
    if (paramJSONArray == null) {}
    for (;;)
    {
      return localArrayList;
      int i = 0;
      while (i < paramJSONArray.length())
      {
        try
        {
          ADInfo localADInfo = newInstance(paramJSONArray.getJSONObject(i));
          if (localADInfo != null) {
            localArrayList.add(localADInfo);
          } else {
            Logger.d("AD is null");
          }
        }
        catch (JSONException localJSONException)
        {
          localJSONException.printStackTrace();
        }
        i += 1;
      }
    }
  }
  
  public String toString()
  {
    return this.mRawContent;
  }
}
