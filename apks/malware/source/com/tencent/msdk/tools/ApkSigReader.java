package com.tencent.msdk.tools;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.Signature;
import java.io.IOException;
import java.io.InputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.cert.Certificate;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;

public class ApkSigReader
{
  public ApkSigReader() {}
  
  public static String getSign(Context paramContext)
  {
    Iterator localIterator = paramContext.getPackageManager().getInstalledPackages(64).iterator();
    String str = "";
    do
    {
      localObject = str;
      if (!localIterator.hasNext()) {
        break;
      }
      localObject = (PackageInfo)localIterator.next();
    } while (!((PackageInfo)localObject).packageName.equals(paramContext.getPackageName()));
    Object localObject = localObject.signatures[0].toCharsString();
    try
    {
      paramContext = MessageDigest.getInstance("MD5");
      paramContext.update(((String)localObject).getBytes());
      paramContext = HexUtil.bytes2HexStr(paramContext.digest()).toLowerCase(Locale.CHINA);
      return paramContext;
    }
    catch (NoSuchAlgorithmException paramContext)
    {
      paramContext.printStackTrace();
    }
    return "";
  }
  
  public static String getSignaturesFromApk(Context paramContext)
    throws IOException
  {
    Object localObject = paramContext.getPackageManager();
    try
    {
      paramContext = ((PackageManager)localObject).getPackageInfo(paramContext.getPackageName(), 64);
      if (paramContext == null) {
        return null;
      }
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      return null;
    }
    paramContext = new String(paramContext.signatures[0].toByteArray());
    try
    {
      localObject = MessageDigest.getInstance("MD5");
      ((MessageDigest)localObject).update(paramContext.getBytes());
      paramContext = HexUtil.bytes2HexStr(((MessageDigest)localObject).digest()).toLowerCase(Locale.CHINA);
      return paramContext;
    }
    catch (NoSuchAlgorithmException paramContext)
    {
      paramContext.printStackTrace();
    }
    return "";
  }
  
  private static Certificate[] loadCertificates(JarFile paramJarFile, JarEntry paramJarEntry, byte[] paramArrayOfByte)
  {
    Object localObject = null;
    try
    {
      paramJarFile = paramJarFile.getInputStream(paramJarEntry);
      while (paramJarFile.read(paramArrayOfByte, 0, paramArrayOfByte.length) != -1) {}
      paramJarFile.close();
      paramJarFile = localObject;
      if (paramJarEntry != null) {
        paramJarFile = paramJarEntry.getCertificates();
      }
      return paramJarFile;
    }
    catch (IOException paramJarFile) {}
    return null;
  }
  
  private static String toCharsString(byte[] paramArrayOfByte)
  {
    int k = paramArrayOfByte.length;
    char[] arrayOfChar = new char[k * 2];
    int i = 0;
    if (i < k)
    {
      int m = paramArrayOfByte[i];
      int j = m >> 4 & 0xF;
      if (j >= 10)
      {
        j = j + 97 - 10;
        label44:
        arrayOfChar[(i * 2)] = ((char)j);
        j = m & 0xF;
        if (j < 10) {
          break label97;
        }
        j = j + 97 - 10;
      }
      for (;;)
      {
        arrayOfChar[(i * 2 + 1)] = ((char)j);
        i += 1;
        break;
        j += 48;
        break label44;
        label97:
        j += 48;
      }
    }
    return new String(arrayOfChar);
  }
}
