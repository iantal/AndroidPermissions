package com.tencent.msdk.tools;

import android.content.ContentResolver;
import android.content.Context;
import android.database.Cursor;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Uri;
import java.util.Locale;

public class APNUtil
{
  public static final String ANP_NAME_CMNET = "cmnet";
  public static final String ANP_NAME_CMWAP = "cmwap";
  public static final String ANP_NAME_CTNET = "ctnet";
  public static final String ANP_NAME_CTWAP = "ctwap";
  public static final String ANP_NAME_NET = "net";
  public static final String ANP_NAME_NONE = "none";
  public static final String ANP_NAME_UNINET = "uninet";
  public static final String ANP_NAME_UNIWAP = "uniwap";
  public static final String ANP_NAME_WAP = "wap";
  public static final String ANP_NAME_WIFI = "wifi";
  public static final byte APNTYPE_3GNET = 11;
  public static final byte APNTYPE_3GWAP = 10;
  public static final byte APNTYPE_CMNET = 1;
  public static final byte APNTYPE_CMWAP = 2;
  public static final byte APNTYPE_CTNET = 8;
  public static final byte APNTYPE_CTWAP = 9;
  public static final byte APNTYPE_NET = 6;
  public static final byte APNTYPE_NONE = 0;
  public static final byte APNTYPE_UNINET = 4;
  public static final byte APNTYPE_UNIWAP = 5;
  public static final byte APNTYPE_WAP = 7;
  public static final byte APNTYPE_WIFI = 3;
  public static final String APN_PROP_APN = "apn";
  public static final String APN_PROP_PORT = "port";
  public static final String APN_PROP_PROXY = "proxy";
  public static final int JCE_APNTYPE_CMNET = 2;
  public static final int JCE_APNTYPE_CMWAP = 4;
  public static final int JCE_APNTYPE_CTNET = 256;
  public static final int JCE_APNTYPE_CTWAP = 512;
  public static final int JCE_APNTYPE_DEFAULT = 1;
  public static final int JCE_APNTYPE_NET = 64;
  public static final int JCE_APNTYPE_UNINET = 16;
  public static final int JCE_APNTYPE_UNIWAP = 32;
  public static final int JCE_APNTYPE_UNKNOWN = 0;
  public static final int JCE_APNTYPE_WAP = 128;
  public static final int JCE_APNTYPE_WIFI = 8;
  public static final int MPROXYTYPE_3GNET = 2048;
  public static final int MPROXYTYPE_3GWAP = 1024;
  public static final int MPROXYTYPE_CMNET = 4;
  public static final int MPROXYTYPE_CMWAP = 1;
  public static final int MPROXYTYPE_CTNET = 256;
  public static final int MPROXYTYPE_CTWAP = 512;
  public static final int MPROXYTYPE_DEFAULT = 128;
  public static final int MPROXYTYPE_NET = 32;
  public static final int MPROXYTYPE_UNINET = 8;
  public static final int MPROXYTYPE_UNIWAP = 16;
  public static final int MPROXYTYPE_WAP = 64;
  public static final int MPROXYTYPE_WIFI = 2;
  private static Uri PREFERRED_APN_URI = Uri.parse("content://telephony/carriers/preferapn");
  
  public APNUtil() {}
  
  public static String getApnPort(Context paramContext)
  {
    Cursor localCursor = paramContext.getContentResolver().query(PREFERRED_APN_URI, null, null, null, null);
    localCursor.moveToFirst();
    if (localCursor.isAfterLast())
    {
      localCursor.close();
      return "80";
    }
    String str = localCursor.getString(localCursor.getColumnIndex("port"));
    paramContext = str;
    if (str == null)
    {
      localCursor.close();
      paramContext = "80";
    }
    localCursor.close();
    return paramContext;
  }
  
  public static int getApnPortInt(Context paramContext)
  {
    paramContext = paramContext.getContentResolver().query(PREFERRED_APN_URI, null, null, null, null);
    paramContext.moveToFirst();
    if (paramContext.isAfterLast())
    {
      paramContext.close();
      return -1;
    }
    return paramContext.getInt(paramContext.getColumnIndex("port"));
  }
  
  public static String getApnProxy(Context paramContext)
  {
    paramContext = paramContext.getContentResolver().query(PREFERRED_APN_URI, null, null, null, null);
    paramContext.moveToFirst();
    if (paramContext.isAfterLast())
    {
      paramContext.close();
      return null;
    }
    String str = paramContext.getString(paramContext.getColumnIndex("proxy"));
    paramContext.close();
    return str;
  }
  
  public static String getApnProxyIp(Context paramContext)
  {
    int i = getApnType(paramContext);
    if ((i == 2) || (i == 5) || (i == 10)) {
      return "10.0.0.172";
    }
    if (i == 9) {
      return "10.0.0.200";
    }
    return getApnProxy(paramContext);
  }
  
  public static byte getApnType(Context paramContext)
  {
    byte b = 2;
    int i = getMProxyType(paramContext);
    if (i == 2) {
      b = 3;
    }
    while (i == 1) {
      return b;
    }
    if (i == 4) {
      return 1;
    }
    if (i == 16) {
      return 5;
    }
    if (i == 8) {
      return 4;
    }
    if (i == 64) {
      return 7;
    }
    if (i == 32) {
      return 6;
    }
    if (i == 512) {
      return 9;
    }
    if (i == 256) {
      return 8;
    }
    if (i == 1024) {
      return 10;
    }
    if (i == 2048) {
      return 11;
    }
    return 0;
  }
  
  public static int getMProxyType(Context paramContext)
  {
    try
    {
      Object localObject = (ConnectivityManager)paramContext.getSystemService("connectivity");
      if (localObject == null) {
        return 128;
      }
      localObject = ((ConnectivityManager)localObject).getActiveNetworkInfo();
      if (localObject != null)
      {
        String str = ((NetworkInfo)localObject).getTypeName();
        Logger.d("typeName:" + str);
        if (str.toUpperCase(Locale.CHINA).equals("WIFI")) {
          return 2;
        }
        localObject = ((NetworkInfo)localObject).getExtraInfo().toLowerCase();
        Logger.d("extraInfo:" + (String)localObject);
        if (((String)localObject).startsWith("cmwap")) {
          return 1;
        }
        if ((((String)localObject).startsWith("cmnet")) || (((String)localObject).startsWith("epc.tmobile.com"))) {
          break label277;
        }
        if (((String)localObject).startsWith("uniwap")) {
          return 16;
        }
        if (((String)localObject).startsWith("uninet")) {
          return 8;
        }
        if (((String)localObject).startsWith("wap")) {
          return 64;
        }
        if (((String)localObject).startsWith("net")) {
          return 32;
        }
        if (((String)localObject).startsWith("ctwap")) {
          return 512;
        }
        if (((String)localObject).startsWith("ctnet")) {
          return 256;
        }
        if (((String)localObject).startsWith("3gwap")) {
          return 1024;
        }
        if (((String)localObject).startsWith("3gnet")) {
          return 2048;
        }
        if (((String)localObject).startsWith("#777"))
        {
          paramContext = getApnProxy(paramContext);
          if (paramContext != null)
          {
            int i = paramContext.length();
            if (i > 0) {
              return 512;
            }
          }
          return 256;
        }
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 128;
    label277:
    return 4;
  }
  
  public static boolean hasProxy(Context paramContext)
  {
    int i = getMProxyType(paramContext);
    Logger.d("netType:" + i);
    return (i == 1) || (i == 16) || (i == 64) || (i == 512) || (i == 1024);
  }
  
  public static boolean isActiveNetworkAvailable(Context paramContext)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    if (paramContext != null) {
      return paramContext.isAvailable();
    }
    return false;
  }
  
  public static boolean isNetworkAvailable(Context paramContext)
  {
    paramContext = (ConnectivityManager)paramContext.getSystemService("connectivity");
    if (paramContext == null) {}
    do
    {
      return false;
      paramContext = paramContext.getActiveNetworkInfo();
    } while ((paramContext == null) || (!paramContext.isAvailable()));
    return true;
  }
}
