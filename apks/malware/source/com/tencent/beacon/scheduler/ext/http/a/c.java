package com.tencent.beacon.scheduler.ext.http.a;

import com.tencent.beacon.scheduler.a.b.b;
import com.tencent.beacon.scheduler.ext.http.HttpAccessRequest;
import com.tencent.beacon.scheduler.ext.http.HttpAccessResponse;
import java.io.InputStream;
import org.apache.http.Header;
import org.apache.http.HttpResponse;

public final class c
  implements HttpAccessResponse
{
  public int a = 0;
  public Exception b = null;
  public String c = null;
  public byte[] d = null;
  public InputStream e = null;
  public int f = 0;
  public int g = 0;
  public int h = 0;
  public HttpResponse i;
  public int j = 0;
  private HttpAccessRequest k;
  
  public c(HttpAccessRequest paramHttpAccessRequest)
  {
    this.k = paramHttpAccessRequest;
  }
  
  public final void appReportResult(int paramInt, String paramString)
  {
    int m = this.j;
    b.a();
    b.a(getRequest().getRequestUniqueKey(), paramInt, paramString, m);
  }
  
  public final void closeResponseInputStream()
  {
    if (this.e != null) {}
    try
    {
      this.e.close();
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public final int getConnectTime()
  {
    return this.f;
  }
  
  public final Exception getException()
  {
    return this.b;
  }
  
  public final String getJumpUrl()
  {
    return this.c;
  }
  
  public final int getReadTime()
  {
    return this.g;
  }
  
  public final HttpAccessRequest getRequest()
  {
    return this.k;
  }
  
  public final int getRequestCostTime()
  {
    return this.j;
  }
  
  public final byte[] getResponseData()
  {
    return this.d;
  }
  
  public final String getResponseHeader(String paramString)
  {
    if (this.i != null)
    {
      paramString = this.i.getFirstHeader(paramString);
      if (paramString != null) {
        return paramString.getValue();
      }
    }
    return null;
  }
  
  public final InputStream getResponseInputStream()
  {
    return this.e;
  }
  
  public final int getRetCode()
  {
    return this.a;
  }
  
  public final int getRetryTimes()
  {
    return this.h;
  }
}
