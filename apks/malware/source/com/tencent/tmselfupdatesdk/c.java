package com.tencent.tmselfupdatesdk;

import com.tencent.tmassistantbase.util.TMLog;
import com.tencent.tmassistantsdk.ITMAssistantCallBackListener;
import com.tencent.tmassistantsdk.TMAssistantCallYYBParamStruct;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.Iterator;

class c
  implements ITMAssistantCallBackListener
{
  c(TMSelfUpdateManager paramTMSelfUpdateManager) {}
  
  public void OnDownloadTaskProgressChanged(TMAssistantCallYYBParamStruct paramTMAssistantCallYYBParamStruct, long paramLong1, long paramLong2)
  {
    TMLog.i("TMSelfUpdateManager", "enter");
    TMLog.i("TMSelfUpdateManager", "receiveDataLen: " + paramLong1 + "; totalDataLen: " + paramLong2);
    paramTMAssistantCallYYBParamStruct = this.a.b.iterator();
    while (paramTMAssistantCallYYBParamStruct.hasNext())
    {
      Object localObject = ((WeakReference)paramTMAssistantCallYYBParamStruct.next()).get();
      if (localObject == null) {
        TMLog.i("TMSelfUpdateManager", "listener = null");
      } else if ((localObject instanceof ITMSelfUpdateListener)) {
        ((ITMSelfUpdateListener)localObject).onDownloadAppProgressChanged(paramLong1, paramLong2);
      }
    }
    TMLog.i("TMSelfUpdateManager", "exit");
  }
  
  public void OnDownloadTaskStateChanged(TMAssistantCallYYBParamStruct paramTMAssistantCallYYBParamStruct, int paramInt1, int paramInt2, String paramString)
  {
    TMLog.i("TMSelfUpdateManager", "enter");
    TMLog.i("TMSelfUpdateManager", "state: " + paramInt1 + "; errorCode: " + paramInt2 + "; errorMsg: " + paramString);
    if (paramTMAssistantCallYYBParamStruct != null)
    {
      this.a.g = false;
      TMLog.i("TMSelfUpdateManager", "mOpenSDKYYBStateListener;isFromStartUpdate:" + this.a.g);
      TMSelfUpdateManager.a(this.a, this.a.e, paramInt1, paramInt2, paramString);
    }
    TMLog.i("TMSelfUpdateManager", "exit");
  }
  
  public void OnQQDownloaderInvalid()
  {
    TMLog.i("TMSelfUpdateManager", "enter && exit");
  }
  
  public void OnServiceFree()
  {
    TMLog.i("TMSelfUpdateManager", "enter && exit");
  }
}
