package com.tencent.tmapkupdatesdk.internal.a;

public class g
{
  private final String a;
  private final String b;
  
  public g(String paramString1, String paramString2)
  {
    this.a = paramString1;
    this.b = paramString2;
  }
  
  /* Error */
  public void a()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 9
    //   3: aconst_null
    //   4: astore 5
    //   6: new 21	java/util/zip/ZipFile
    //   9: dup
    //   10: aload_0
    //   11: getfield 14	com/tencent/tmapkupdatesdk/internal/a/g:a	Ljava/lang/String;
    //   14: invokespecial 24	java/util/zip/ZipFile:<init>	(Ljava/lang/String;)V
    //   17: astore 8
    //   19: new 26	java/io/File
    //   22: dup
    //   23: aload_0
    //   24: getfield 14	com/tencent/tmapkupdatesdk/internal/a/g:a	Ljava/lang/String;
    //   27: invokespecial 27	java/io/File:<init>	(Ljava/lang/String;)V
    //   30: invokevirtual 31	java/io/File:exists	()Z
    //   33: istore_2
    //   34: iload_2
    //   35: ifne +38 -> 73
    //   38: iconst_0
    //   39: ifeq +11 -> 50
    //   42: new 33	java/lang/NullPointerException
    //   45: dup
    //   46: invokespecial 34	java/lang/NullPointerException:<init>	()V
    //   49: athrow
    //   50: iconst_0
    //   51: ifeq +11 -> 62
    //   54: new 33	java/lang/NullPointerException
    //   57: dup
    //   58: invokespecial 34	java/lang/NullPointerException:<init>	()V
    //   61: athrow
    //   62: aload 8
    //   64: ifnull +8 -> 72
    //   67: aload 8
    //   69: invokevirtual 37	java/util/zip/ZipFile:close	()V
    //   72: return
    //   73: aload 8
    //   75: ldc 39
    //   77: invokevirtual 43	java/util/zip/ZipFile:getEntry	(Ljava/lang/String;)Ljava/util/zip/ZipEntry;
    //   80: astore_3
    //   81: aload_3
    //   82: ifnull +140 -> 222
    //   85: new 45	java/io/BufferedInputStream
    //   88: dup
    //   89: aload 8
    //   91: aload_3
    //   92: invokevirtual 49	java/util/zip/ZipFile:getInputStream	(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;
    //   95: invokespecial 52	java/io/BufferedInputStream:<init>	(Ljava/io/InputStream;)V
    //   98: astore 4
    //   100: aload 4
    //   102: astore 7
    //   104: new 54	java/io/FileOutputStream
    //   107: dup
    //   108: new 26	java/io/File
    //   111: dup
    //   112: aload_0
    //   113: getfield 16	com/tencent/tmapkupdatesdk/internal/a/g:b	Ljava/lang/String;
    //   116: invokespecial 27	java/io/File:<init>	(Ljava/lang/String;)V
    //   119: iconst_0
    //   120: invokespecial 57	java/io/FileOutputStream:<init>	(Ljava/io/File;Z)V
    //   123: astore_3
    //   124: sipush 1024
    //   127: newarray byte
    //   129: astore 7
    //   131: aload 4
    //   133: aload 7
    //   135: iconst_0
    //   136: aload 7
    //   138: arraylength
    //   139: invokevirtual 63	java/io/InputStream:read	([BII)I
    //   142: istore_1
    //   143: aload_3
    //   144: astore 5
    //   146: aload 4
    //   148: astore 6
    //   150: iload_1
    //   151: iconst_m1
    //   152: if_icmpeq +297 -> 449
    //   155: aload_3
    //   156: aload 7
    //   158: iconst_0
    //   159: iload_1
    //   160: invokevirtual 67	java/io/FileOutputStream:write	([BII)V
    //   163: goto -32 -> 131
    //   166: astore 7
    //   168: aload_3
    //   169: astore 5
    //   171: aload 4
    //   173: astore_3
    //   174: aload 8
    //   176: astore 6
    //   178: aload 7
    //   180: astore 4
    //   182: aload 4
    //   184: invokevirtual 70	java/io/IOException:printStackTrace	()V
    //   187: aload_3
    //   188: ifnull +7 -> 195
    //   191: aload_3
    //   192: invokevirtual 71	java/io/InputStream:close	()V
    //   195: aload 5
    //   197: ifnull +8 -> 205
    //   200: aload 5
    //   202: invokevirtual 72	java/io/FileOutputStream:close	()V
    //   205: aload 6
    //   207: ifnull -135 -> 72
    //   210: aload 6
    //   212: invokevirtual 37	java/util/zip/ZipFile:close	()V
    //   215: return
    //   216: astore_3
    //   217: aload_3
    //   218: invokevirtual 70	java/io/IOException:printStackTrace	()V
    //   221: return
    //   222: aload 8
    //   224: ldc 74
    //   226: invokevirtual 43	java/util/zip/ZipFile:getEntry	(Ljava/lang/String;)Ljava/util/zip/ZipEntry;
    //   229: astore_3
    //   230: aload_3
    //   231: ifnull +212 -> 443
    //   234: new 45	java/io/BufferedInputStream
    //   237: dup
    //   238: aload 8
    //   240: aload_3
    //   241: invokevirtual 49	java/util/zip/ZipFile:getInputStream	(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;
    //   244: invokespecial 52	java/io/BufferedInputStream:<init>	(Ljava/io/InputStream;)V
    //   247: astore 4
    //   249: aload 4
    //   251: astore 7
    //   253: new 54	java/io/FileOutputStream
    //   256: dup
    //   257: new 26	java/io/File
    //   260: dup
    //   261: aload_0
    //   262: getfield 16	com/tencent/tmapkupdatesdk/internal/a/g:b	Ljava/lang/String;
    //   265: invokespecial 27	java/io/File:<init>	(Ljava/lang/String;)V
    //   268: iconst_0
    //   269: invokespecial 57	java/io/FileOutputStream:<init>	(Ljava/io/File;Z)V
    //   272: astore_3
    //   273: sipush 1024
    //   276: newarray byte
    //   278: astore 7
    //   280: aload 4
    //   282: aload 7
    //   284: iconst_0
    //   285: aload 7
    //   287: arraylength
    //   288: invokevirtual 63	java/io/InputStream:read	([BII)I
    //   291: istore_1
    //   292: aload_3
    //   293: astore 5
    //   295: aload 4
    //   297: astore 6
    //   299: iload_1
    //   300: iconst_m1
    //   301: if_icmpeq +148 -> 449
    //   304: aload_3
    //   305: aload 7
    //   307: iconst_0
    //   308: iload_1
    //   309: invokevirtual 67	java/io/FileOutputStream:write	([BII)V
    //   312: goto -32 -> 280
    //   315: astore 6
    //   317: aload_3
    //   318: astore 5
    //   320: aload 4
    //   322: astore_3
    //   323: aload 6
    //   325: astore 4
    //   327: aload 8
    //   329: astore 6
    //   331: goto -149 -> 182
    //   334: astore_3
    //   335: aconst_null
    //   336: astore 6
    //   338: aconst_null
    //   339: astore 4
    //   341: aload 9
    //   343: astore 5
    //   345: aload 4
    //   347: ifnull +8 -> 355
    //   350: aload 4
    //   352: invokevirtual 71	java/io/InputStream:close	()V
    //   355: aload 5
    //   357: ifnull +8 -> 365
    //   360: aload 5
    //   362: invokevirtual 72	java/io/FileOutputStream:close	()V
    //   365: aload 6
    //   367: ifnull +8 -> 375
    //   370: aload 6
    //   372: invokevirtual 37	java/util/zip/ZipFile:close	()V
    //   375: aload_3
    //   376: athrow
    //   377: astore 4
    //   379: aload 4
    //   381: invokevirtual 70	java/io/IOException:printStackTrace	()V
    //   384: goto -29 -> 355
    //   387: astore 4
    //   389: aload 4
    //   391: invokevirtual 70	java/io/IOException:printStackTrace	()V
    //   394: goto -29 -> 365
    //   397: astore 4
    //   399: aload 4
    //   401: invokevirtual 70	java/io/IOException:printStackTrace	()V
    //   404: goto -29 -> 375
    //   407: astore_3
    //   408: aload_3
    //   409: invokevirtual 70	java/io/IOException:printStackTrace	()V
    //   412: goto -217 -> 195
    //   415: astore_3
    //   416: aload_3
    //   417: invokevirtual 70	java/io/IOException:printStackTrace	()V
    //   420: goto -215 -> 205
    //   423: astore_3
    //   424: aload_3
    //   425: invokevirtual 70	java/io/IOException:printStackTrace	()V
    //   428: goto -378 -> 50
    //   431: astore_3
    //   432: aload_3
    //   433: invokevirtual 70	java/io/IOException:printStackTrace	()V
    //   436: goto -374 -> 62
    //   439: astore_3
    //   440: goto -223 -> 217
    //   443: aconst_null
    //   444: astore 5
    //   446: aconst_null
    //   447: astore 6
    //   449: aload 6
    //   451: ifnull +8 -> 459
    //   454: aload 6
    //   456: invokevirtual 71	java/io/InputStream:close	()V
    //   459: aload 5
    //   461: ifnull +8 -> 469
    //   464: aload 5
    //   466: invokevirtual 72	java/io/FileOutputStream:close	()V
    //   469: aload 8
    //   471: ifnull -399 -> 72
    //   474: aload 8
    //   476: invokevirtual 37	java/util/zip/ZipFile:close	()V
    //   479: return
    //   480: astore_3
    //   481: goto -264 -> 217
    //   484: astore_3
    //   485: aload_3
    //   486: invokevirtual 70	java/io/IOException:printStackTrace	()V
    //   489: goto -30 -> 459
    //   492: astore_3
    //   493: aload_3
    //   494: invokevirtual 70	java/io/IOException:printStackTrace	()V
    //   497: goto -28 -> 469
    //   500: astore_3
    //   501: aconst_null
    //   502: astore 4
    //   504: aload 8
    //   506: astore 6
    //   508: aload 9
    //   510: astore 5
    //   512: goto -167 -> 345
    //   515: astore_3
    //   516: aload 8
    //   518: astore 6
    //   520: aload 9
    //   522: astore 5
    //   524: aload 7
    //   526: astore 4
    //   528: goto -183 -> 345
    //   531: astore 6
    //   533: aload_3
    //   534: astore 5
    //   536: aload 6
    //   538: astore_3
    //   539: aload 8
    //   541: astore 6
    //   543: goto -198 -> 345
    //   546: astore 6
    //   548: aload_3
    //   549: astore 5
    //   551: aload 6
    //   553: astore_3
    //   554: aload 8
    //   556: astore 6
    //   558: goto -213 -> 345
    //   561: astore 7
    //   563: aload_3
    //   564: astore 4
    //   566: aload 7
    //   568: astore_3
    //   569: goto -224 -> 345
    //   572: astore 4
    //   574: aconst_null
    //   575: astore 6
    //   577: aconst_null
    //   578: astore_3
    //   579: goto -397 -> 182
    //   582: astore 4
    //   584: aconst_null
    //   585: astore_3
    //   586: aload 8
    //   588: astore 6
    //   590: goto -408 -> 182
    //   593: astore 6
    //   595: aload 4
    //   597: astore_3
    //   598: aload 6
    //   600: astore 4
    //   602: aload 8
    //   604: astore 6
    //   606: goto -424 -> 182
    //   609: astore 6
    //   611: aload 4
    //   613: astore_3
    //   614: aload 6
    //   616: astore 4
    //   618: aload 8
    //   620: astore 6
    //   622: goto -440 -> 182
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	625	0	this	g
    //   142	167	1	i	int
    //   33	2	2	bool	boolean
    //   80	112	3	localObject1	Object
    //   216	2	3	localIOException1	java.io.IOException
    //   229	94	3	localObject2	Object
    //   334	42	3	localObject3	Object
    //   407	2	3	localIOException2	java.io.IOException
    //   415	2	3	localIOException3	java.io.IOException
    //   423	2	3	localIOException4	java.io.IOException
    //   431	2	3	localIOException5	java.io.IOException
    //   439	1	3	localIOException6	java.io.IOException
    //   480	1	3	localIOException7	java.io.IOException
    //   484	2	3	localIOException8	java.io.IOException
    //   492	2	3	localIOException9	java.io.IOException
    //   500	1	3	localObject4	Object
    //   515	19	3	localObject5	Object
    //   538	76	3	localObject6	Object
    //   98	253	4	localObject7	Object
    //   377	3	4	localIOException10	java.io.IOException
    //   387	3	4	localIOException11	java.io.IOException
    //   397	3	4	localIOException12	java.io.IOException
    //   502	63	4	localObject8	Object
    //   572	1	4	localIOException13	java.io.IOException
    //   582	14	4	localIOException14	java.io.IOException
    //   600	17	4	localObject9	Object
    //   4	546	5	localObject10	Object
    //   148	150	6	localObject11	Object
    //   315	9	6	localIOException15	java.io.IOException
    //   329	190	6	localZipFile1	java.util.zip.ZipFile
    //   531	6	6	localObject12	Object
    //   541	1	6	localZipFile2	java.util.zip.ZipFile
    //   546	6	6	localObject13	Object
    //   556	33	6	localZipFile3	java.util.zip.ZipFile
    //   593	6	6	localIOException16	java.io.IOException
    //   604	1	6	localZipFile4	java.util.zip.ZipFile
    //   609	6	6	localIOException17	java.io.IOException
    //   620	1	6	localZipFile5	java.util.zip.ZipFile
    //   102	55	7	localObject14	Object
    //   166	13	7	localIOException18	java.io.IOException
    //   251	274	7	localObject15	Object
    //   561	6	7	localObject16	Object
    //   17	602	8	localZipFile6	java.util.zip.ZipFile
    //   1	520	9	localObject17	Object
    // Exception table:
    //   from	to	target	type
    //   124	131	166	java/io/IOException
    //   131	143	166	java/io/IOException
    //   155	163	166	java/io/IOException
    //   210	215	216	java/io/IOException
    //   273	280	315	java/io/IOException
    //   280	292	315	java/io/IOException
    //   304	312	315	java/io/IOException
    //   6	19	334	finally
    //   350	355	377	java/io/IOException
    //   360	365	387	java/io/IOException
    //   370	375	397	java/io/IOException
    //   191	195	407	java/io/IOException
    //   200	205	415	java/io/IOException
    //   42	50	423	java/io/IOException
    //   54	62	431	java/io/IOException
    //   67	72	439	java/io/IOException
    //   474	479	480	java/io/IOException
    //   454	459	484	java/io/IOException
    //   464	469	492	java/io/IOException
    //   19	34	500	finally
    //   73	81	500	finally
    //   85	100	500	finally
    //   222	230	500	finally
    //   234	249	500	finally
    //   104	124	515	finally
    //   253	273	515	finally
    //   124	131	531	finally
    //   131	143	531	finally
    //   155	163	531	finally
    //   273	280	546	finally
    //   280	292	546	finally
    //   304	312	546	finally
    //   182	187	561	finally
    //   6	19	572	java/io/IOException
    //   19	34	582	java/io/IOException
    //   73	81	582	java/io/IOException
    //   85	100	582	java/io/IOException
    //   222	230	582	java/io/IOException
    //   234	249	582	java/io/IOException
    //   104	124	593	java/io/IOException
    //   253	273	609	java/io/IOException
  }
}
