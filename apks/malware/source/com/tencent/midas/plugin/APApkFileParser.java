package com.tencent.midas.plugin;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.Signature;
import android.content.res.AssetManager;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.util.DisplayMetrics;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.util.HashSet;

public class APApkFileParser
{
  public APApkFileParser() {}
  
  public static Drawable getAPKIcon(Context paramContext, String paramString)
  {
    try
    {
      Object localObject = paramContext.getPackageManager().getPackageArchiveInfo(paramString, 1);
      if ((localObject == null) || (((PackageInfo)localObject).applicationInfo == null)) {
        break label133;
      }
      localObject = ((PackageInfo)localObject).applicationInfo;
      Class localClass = Class.forName("android.content.res.AssetManager");
      AssetManager localAssetManager = (AssetManager)localClass.getConstructor(null).newInstance(null);
      localClass.getDeclaredMethod("addAssetPath", new Class[] { String.class }).invoke(localAssetManager, new Object[] { paramString });
      paramString = new DisplayMetrics();
      paramString.setToDefaults();
      paramContext = new Resources(localAssetManager, paramString, paramContext.getResources().getConfiguration());
      if (((ApplicationInfo)localObject).icon != 0)
      {
        paramContext = paramContext.getDrawable(((ApplicationInfo)localObject).icon);
        return paramContext;
      }
    }
    catch (Throwable paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
    label133:
    return null;
  }
  
  public static PackageInfo getPackageInfo(Context paramContext, String paramString, int paramInt)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getPackageArchiveInfo(paramString, paramInt);
      return paramContext;
    }
    catch (Exception paramContext) {}
    return null;
  }
  
  public static boolean isApkFileBroken(Context paramContext, String paramString)
  {
    paramContext = paramContext.getPackageManager().getPackageArchiveInfo(paramString, 64);
    return (paramContext == null) || (paramContext.applicationInfo == null);
  }
  
  public static boolean isSignaturesSame(Signature[] paramArrayOfSignature1, Signature[] paramArrayOfSignature2)
  {
    if (paramArrayOfSignature1 == null) {}
    while (paramArrayOfSignature2 == null) {
      return true;
    }
    HashSet localHashSet = new HashSet();
    int j = paramArrayOfSignature1.length;
    int i = 0;
    if (i >= j)
    {
      paramArrayOfSignature1 = new HashSet();
      j = paramArrayOfSignature2.length;
      i = 0;
    }
    for (;;)
    {
      if (i >= j)
      {
        return localHashSet.equals(paramArrayOfSignature1);
        localHashSet.add(paramArrayOfSignature1[i]);
        i += 1;
        break;
      }
      paramArrayOfSignature1.add(paramArrayOfSignature2[i]);
      i += 1;
    }
  }
}
