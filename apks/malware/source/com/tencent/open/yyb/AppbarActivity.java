package com.tencent.open.yyb;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Rect;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Environment;
import android.text.TextUtils;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.view.WindowManager;
import android.view.WindowManager.LayoutParams;
import android.webkit.DownloadListener;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.FrameLayout.LayoutParams;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import com.tencent.connect.auth.QQToken;
import com.tencent.connect.share.QQShare;
import com.tencent.connect.share.QzoneShare;
import com.tencent.open.a.f;
import com.tencent.open.c.b;
import com.tencent.tauth.IUiListener;
import com.tencent.tauth.Tencent;
import com.tencent.tauth.UiError;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import org.json.JSONException;
import org.json.JSONObject;

public class AppbarActivity
  extends Activity
  implements View.OnClickListener
{
  private static final int FLOATING_DIALOG_HEIGHT = 100;
  public static final String MYAPP_CACHE_PATH = "/tencent/tassistant";
  private static final String UA_PREFIX = "qqdownloader/";
  private static final String WEBVIEW_PATH = "/webview_cache";
  private static ArrayList<String> specialModel = new ArrayList();
  private String appid;
  private AppbarJsBridge jsBridge;
  private final DownloadListener mDownloadListener = new DownloadListener()
  {
    public void onDownloadStart(String paramAnonymousString1, String paramAnonymousString2, String paramAnonymousString3, String paramAnonymousString4, long paramAnonymousLong)
    {
      f.b("openSDK_LOG", "-->(AppbarActivity)onDownloadStart : url = " + paramAnonymousString1);
      paramAnonymousString1 = new Intent("android.intent.action.VIEW", Uri.parse(paramAnonymousString1));
      try
      {
        AppbarActivity.this.startActivity(paramAnonymousString1);
        paramAnonymousString1 = AppbarActivity.this.getToken();
        if (paramAnonymousString1 != null) {
          a.a(paramAnonymousString1.getAppId(), "200", "SDK.APPBAR.HOME ACTION");
        }
        return;
      }
      catch (Exception paramAnonymousString1)
      {
        for (;;)
        {
          f.b("openSDK_LOG", "-->(AppbarActivity)onDownloadStart : activity aciton_view not found.");
        }
      }
    }
  };
  private MoreFloatingDialog mFloatingDialog;
  protected ProgressDialog mProgressDialog;
  private LinearLayout mRootView;
  private TitleBar mTitleBar;
  private QQToken mToken;
  private b mWebView;
  private ShareModel model;
  private Tencent tencent;
  private int titlebarTop;
  private String url;
  
  static
  {
    specialModel.add("MT870");
    specialModel.add("XT910");
    specialModel.add("XT928");
    specialModel.add("MT917");
    specialModel.add("Lenovo A60");
  }
  
  public AppbarActivity() {}
  
  private String buildTransaction(String paramString)
  {
    if (paramString == null) {
      return String.valueOf(System.currentTimeMillis());
    }
    return paramString + System.currentTimeMillis();
  }
  
  private void createViews()
  {
    FrameLayout.LayoutParams localLayoutParams = new FrameLayout.LayoutParams(-1, -1);
    this.mWebView.setLayoutParams(localLayoutParams);
    this.mRootView = new LinearLayout(this);
    localLayoutParams.gravity = 17;
    this.mRootView.setLayoutParams(localLayoutParams);
    this.mRootView.setOrientation(1);
    this.mTitleBar = new TitleBar(this);
    this.mTitleBar.getBackBtn().setOnClickListener(this);
    this.mTitleBar.getSharBtn().setOnClickListener(this);
    this.mRootView.addView(this.mTitleBar);
    this.mRootView.addView(this.mWebView);
    setContentView(this.mRootView);
  }
  
  private String getCommonPath(String paramString)
  {
    String str2 = getCommonRootDir();
    String str1 = str2;
    if (!TextUtils.isEmpty(paramString)) {
      str1 = str2 + paramString;
    }
    return getPath(str1, false);
  }
  
  private String getCommonRootDir()
  {
    if (isSDCardExistAndCanWrite()) {}
    for (Object localObject = Environment.getExternalStorageDirectory().getPath() + "/tencent/tassistant";; localObject = ((File)localObject).getAbsolutePath() + "/tencent/tassistant")
    {
      localObject = new File((String)localObject);
      if (!((File)localObject).exists()) {
        ((File)localObject).mkdirs();
      }
      return ((File)localObject).getAbsolutePath();
      localObject = getFilesDir();
      if (localObject == null) {
        return "";
      }
    }
  }
  
  private MoreFloatingDialog getFloatingDialg()
  {
    if (this.mFloatingDialog == null)
    {
      this.mFloatingDialog = new MoreFloatingDialog(this);
      this.mFloatingDialog.setCanceledOnTouchOutside(true);
      this.mFloatingDialog.getQQItem().setOnClickListener(this);
      this.mFloatingDialog.getQzoneItem().setOnClickListener(this);
    }
    return this.mFloatingDialog;
  }
  
  private String getPath(String paramString, boolean paramBoolean)
  {
    File localFile = new File(paramString);
    if (!localFile.exists())
    {
      localFile.mkdirs();
      if (paramBoolean) {
        paramString = new File(paramString + File.separator + ".nomedia");
      }
    }
    try
    {
      paramString.createNewFile();
      return localFile.getAbsolutePath();
    }
    catch (IOException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
      }
    }
  }
  
  private Tencent getTencent()
  {
    if (this.tencent == null) {
      this.tencent = Tencent.createInstance(this.appid, this);
    }
    return this.tencent;
  }
  
  private int getTitbarTop()
  {
    Rect localRect = new Rect();
    getWindow().getDecorView().getWindowVisibleDisplayFrame(localRect);
    DisplayMetrics localDisplayMetrics = new DisplayMetrics();
    getWindowManager().getDefaultDisplay().getMetrics(localDisplayMetrics);
    this.titlebarTop = (localDisplayMetrics.heightPixels - localRect.height());
    return this.titlebarTop;
  }
  
  private QQToken getToken()
  {
    if (this.mToken == null) {
      this.mToken = getTencent().getQQToken();
    }
    return this.mToken;
  }
  
  private String getWebViewCacheDir()
  {
    return getCommonPath("/webview_cache");
  }
  
  /* Error */
  private void initViews()
  {
    // Byte code:
    //   0: aload_0
    //   1: getfield 121	com/tencent/open/yyb/AppbarActivity:mWebView	Lcom/tencent/open/c/b;
    //   4: invokevirtual 367	com/tencent/open/c/b:getSettings	()Landroid/webkit/WebSettings;
    //   7: astore_1
    //   8: aload_1
    //   9: iconst_1
    //   10: invokevirtual 372	android/webkit/WebSettings:setBuiltInZoomControls	(Z)V
    //   13: aload_1
    //   14: new 137	java/lang/StringBuilder
    //   17: dup
    //   18: invokespecial 138	java/lang/StringBuilder:<init>	()V
    //   21: aload_1
    //   22: invokevirtual 375	android/webkit/WebSettings:getUserAgentString	()Ljava/lang/String;
    //   25: invokevirtual 142	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28: ldc_w 377
    //   31: invokevirtual 142	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34: ldc 38
    //   36: invokevirtual 142	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39: aload_0
    //   40: getfield 111	com/tencent/open/yyb/AppbarActivity:jsBridge	Lcom/tencent/open/yyb/AppbarJsBridge;
    //   43: invokevirtual 382	com/tencent/open/yyb/AppbarJsBridge:getVersion	()I
    //   46: invokevirtual 385	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   49: ldc_w 387
    //   52: invokevirtual 142	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   55: invokevirtual 149	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   58: invokevirtual 390	android/webkit/WebSettings:setUserAgentString	(Ljava/lang/String;)V
    //   61: aload_1
    //   62: iconst_1
    //   63: invokevirtual 393	android/webkit/WebSettings:setJavaScriptEnabled	(Z)V
    //   66: aload_1
    //   67: invokevirtual 399	java/lang/Object:getClass	()Ljava/lang/Class;
    //   70: astore_2
    //   71: aload_2
    //   72: ldc_w 401
    //   75: iconst_1
    //   76: anewarray 403	java/lang/Class
    //   79: dup
    //   80: iconst_0
    //   81: getstatic 409	java/lang/Boolean:TYPE	Ljava/lang/Class;
    //   84: aastore
    //   85: invokevirtual 413	java/lang/Class:getMethod	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    //   88: astore_3
    //   89: aload_3
    //   90: ifnull +20 -> 110
    //   93: aload_3
    //   94: aload_1
    //   95: iconst_1
    //   96: anewarray 395	java/lang/Object
    //   99: dup
    //   100: iconst_0
    //   101: iconst_1
    //   102: invokestatic 416	java/lang/Boolean:valueOf	(Z)Ljava/lang/Boolean;
    //   105: aastore
    //   106: invokevirtual 422	java/lang/reflect/Method:invoke	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    //   109: pop
    //   110: aload_2
    //   111: ldc_w 424
    //   114: iconst_1
    //   115: anewarray 403	java/lang/Class
    //   118: dup
    //   119: iconst_0
    //   120: getstatic 409	java/lang/Boolean:TYPE	Ljava/lang/Class;
    //   123: aastore
    //   124: invokevirtual 413	java/lang/Class:getMethod	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    //   127: astore_3
    //   128: aload_3
    //   129: ifnull +20 -> 149
    //   132: aload_3
    //   133: aload_1
    //   134: iconst_1
    //   135: anewarray 395	java/lang/Object
    //   138: dup
    //   139: iconst_0
    //   140: iconst_1
    //   141: invokestatic 416	java/lang/Boolean:valueOf	(Z)Ljava/lang/Boolean;
    //   144: aastore
    //   145: invokevirtual 422	java/lang/reflect/Method:invoke	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    //   148: pop
    //   149: aload_1
    //   150: aload_0
    //   151: invokespecial 426	com/tencent/open/yyb/AppbarActivity:getWebViewCacheDir	()Ljava/lang/String;
    //   154: invokevirtual 429	android/webkit/WebSettings:setAppCachePath	(Ljava/lang/String;)V
    //   157: aload_1
    //   158: aload_0
    //   159: invokespecial 426	com/tencent/open/yyb/AppbarActivity:getWebViewCacheDir	()Ljava/lang/String;
    //   162: invokevirtual 432	android/webkit/WebSettings:setDatabasePath	(Ljava/lang/String;)V
    //   165: aload_1
    //   166: iconst_1
    //   167: invokevirtual 435	android/webkit/WebSettings:setDatabaseEnabled	(Z)V
    //   170: aload_1
    //   171: iconst_1
    //   172: invokevirtual 438	android/webkit/WebSettings:setAppCacheEnabled	(Z)V
    //   175: aload_0
    //   176: invokespecial 441	com/tencent/open/yyb/AppbarActivity:supportWebViewFullScreen	()Z
    //   179: ifeq +108 -> 287
    //   182: aload_1
    //   183: iconst_1
    //   184: invokevirtual 444	android/webkit/WebSettings:setUseWideViewPort	(Z)V
    //   187: getstatic 449	android/os/Build$VERSION:SDK_INT	I
    //   190: bipush 7
    //   192: if_icmplt +36 -> 228
    //   195: aload_2
    //   196: ldc_w 451
    //   199: iconst_1
    //   200: anewarray 403	java/lang/Class
    //   203: dup
    //   204: iconst_0
    //   205: getstatic 409	java/lang/Boolean:TYPE	Ljava/lang/Class;
    //   208: aastore
    //   209: invokevirtual 413	java/lang/Class:getMethod	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    //   212: aload_1
    //   213: iconst_1
    //   214: anewarray 395	java/lang/Object
    //   217: dup
    //   218: iconst_0
    //   219: iconst_1
    //   220: invokestatic 416	java/lang/Boolean:valueOf	(Z)Ljava/lang/Boolean;
    //   223: aastore
    //   224: invokevirtual 422	java/lang/reflect/Method:invoke	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    //   227: pop
    //   228: invokestatic 456	com/tencent/open/utils/SystemUtils:isSupportMultiTouch	()Z
    //   231: ifeq +56 -> 287
    //   234: invokestatic 459	com/tencent/open/utils/SystemUtils:getAndroidSDKVersion	()I
    //   237: bipush 11
    //   239: if_icmpge +127 -> 366
    //   242: ldc_w 461
    //   245: ldc_w 463
    //   248: invokevirtual 467	java/lang/Class:getDeclaredField	(Ljava/lang/String;)Ljava/lang/reflect/Field;
    //   251: astore_1
    //   252: aload_1
    //   253: iconst_1
    //   254: invokevirtual 472	java/lang/reflect/Field:setAccessible	(Z)V
    //   257: new 474	android/widget/ZoomButtonsController
    //   260: dup
    //   261: aload_0
    //   262: getfield 121	com/tencent/open/yyb/AppbarActivity:mWebView	Lcom/tencent/open/c/b;
    //   265: invokespecial 476	android/widget/ZoomButtonsController:<init>	(Landroid/view/View;)V
    //   268: astore_2
    //   269: aload_2
    //   270: invokevirtual 479	android/widget/ZoomButtonsController:getZoomControls	()Landroid/view/View;
    //   273: bipush 8
    //   275: invokevirtual 482	android/view/View:setVisibility	(I)V
    //   278: aload_1
    //   279: aload_0
    //   280: getfield 121	com/tencent/open/yyb/AppbarActivity:mWebView	Lcom/tencent/open/c/b;
    //   283: aload_2
    //   284: invokevirtual 486	java/lang/reflect/Field:set	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   287: aload_0
    //   288: getfield 121	com/tencent/open/yyb/AppbarActivity:mWebView	Lcom/tencent/open/c/b;
    //   291: new 27	com/tencent/open/yyb/AppbarActivity$d
    //   294: dup
    //   295: aload_0
    //   296: aconst_null
    //   297: invokespecial 489	com/tencent/open/yyb/AppbarActivity$d:<init>	(Lcom/tencent/open/yyb/AppbarActivity;Lcom/tencent/open/yyb/AppbarActivity$1;)V
    //   300: invokevirtual 493	com/tencent/open/c/b:setWebViewClient	(Landroid/webkit/WebViewClient;)V
    //   303: aload_0
    //   304: getfield 121	com/tencent/open/yyb/AppbarActivity:mWebView	Lcom/tencent/open/c/b;
    //   307: new 24	com/tencent/open/yyb/AppbarActivity$c
    //   310: dup
    //   311: aload_0
    //   312: aconst_null
    //   313: invokespecial 494	com/tencent/open/yyb/AppbarActivity$c:<init>	(Lcom/tencent/open/yyb/AppbarActivity;Lcom/tencent/open/yyb/AppbarActivity$1;)V
    //   316: invokevirtual 498	com/tencent/open/c/b:setWebChromeClient	(Landroid/webkit/WebChromeClient;)V
    //   319: aload_0
    //   320: getfield 121	com/tencent/open/yyb/AppbarActivity:mWebView	Lcom/tencent/open/c/b;
    //   323: aload_0
    //   324: getfield 97	com/tencent/open/yyb/AppbarActivity:mDownloadListener	Landroid/webkit/DownloadListener;
    //   327: invokevirtual 502	com/tencent/open/c/b:setDownloadListener	(Landroid/webkit/DownloadListener;)V
    //   330: aload_0
    //   331: getfield 121	com/tencent/open/yyb/AppbarActivity:mWebView	Lcom/tencent/open/c/b;
    //   334: aload_0
    //   335: getfield 504	com/tencent/open/yyb/AppbarActivity:url	Ljava/lang/String;
    //   338: invokevirtual 507	com/tencent/open/c/b:loadUrl	(Ljava/lang/String;)V
    //   341: return
    //   342: astore_3
    //   343: aload_3
    //   344: invokevirtual 508	java/lang/NoSuchMethodException:printStackTrace	()V
    //   347: goto -237 -> 110
    //   350: astore_3
    //   351: aload_3
    //   352: invokevirtual 509	java/lang/Throwable:printStackTrace	()V
    //   355: goto -245 -> 110
    //   358: astore_3
    //   359: aload_3
    //   360: invokevirtual 510	java/lang/SecurityException:printStackTrace	()V
    //   363: goto -214 -> 149
    //   366: aload_0
    //   367: getfield 121	com/tencent/open/yyb/AppbarActivity:mWebView	Lcom/tencent/open/c/b;
    //   370: invokevirtual 367	com/tencent/open/c/b:getSettings	()Landroid/webkit/WebSettings;
    //   373: invokevirtual 399	java/lang/Object:getClass	()Ljava/lang/Class;
    //   376: ldc_w 512
    //   379: iconst_1
    //   380: anewarray 403	java/lang/Class
    //   383: dup
    //   384: iconst_0
    //   385: getstatic 409	java/lang/Boolean:TYPE	Ljava/lang/Class;
    //   388: aastore
    //   389: invokevirtual 413	java/lang/Class:getMethod	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    //   392: aload_0
    //   393: getfield 121	com/tencent/open/yyb/AppbarActivity:mWebView	Lcom/tencent/open/c/b;
    //   396: invokevirtual 367	com/tencent/open/c/b:getSettings	()Landroid/webkit/WebSettings;
    //   399: iconst_1
    //   400: anewarray 395	java/lang/Object
    //   403: dup
    //   404: iconst_0
    //   405: iconst_0
    //   406: invokestatic 416	java/lang/Boolean:valueOf	(Z)Ljava/lang/Boolean;
    //   409: aastore
    //   410: invokevirtual 422	java/lang/reflect/Method:invoke	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    //   413: pop
    //   414: goto -127 -> 287
    //   417: astore_1
    //   418: goto -131 -> 287
    //   421: astore_1
    //   422: goto -135 -> 287
    //   425: astore_1
    //   426: goto -198 -> 228
    //   429: astore_3
    //   430: goto -281 -> 149
    //   433: astore_3
    //   434: goto -285 -> 149
    //   437: astore_3
    //   438: goto -289 -> 149
    //   441: astore_3
    //   442: goto -293 -> 149
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	445	0	this	AppbarActivity
    //   7	272	1	localObject1	Object
    //   417	1	1	localException1	Exception
    //   421	1	1	localException2	Exception
    //   425	1	1	localException3	Exception
    //   70	214	2	localObject2	Object
    //   88	45	3	localMethod	java.lang.reflect.Method
    //   342	2	3	localNoSuchMethodException1	NoSuchMethodException
    //   350	2	3	localThrowable	Throwable
    //   358	2	3	localSecurityException	SecurityException
    //   429	1	3	localInvocationTargetException	java.lang.reflect.InvocationTargetException
    //   433	1	3	localIllegalAccessException	IllegalAccessException
    //   437	1	3	localIllegalArgumentException	IllegalArgumentException
    //   441	1	3	localNoSuchMethodException2	NoSuchMethodException
    // Exception table:
    //   from	to	target	type
    //   71	89	342	java/lang/NoSuchMethodException
    //   93	110	342	java/lang/NoSuchMethodException
    //   71	89	350	java/lang/Throwable
    //   93	110	350	java/lang/Throwable
    //   110	128	358	java/lang/SecurityException
    //   132	149	358	java/lang/SecurityException
    //   366	414	417	java/lang/Exception
    //   242	287	421	java/lang/Exception
    //   195	228	425	java/lang/Exception
    //   110	128	429	java/lang/reflect/InvocationTargetException
    //   132	149	429	java/lang/reflect/InvocationTargetException
    //   110	128	433	java/lang/IllegalAccessException
    //   132	149	433	java/lang/IllegalAccessException
    //   110	128	437	java/lang/IllegalArgumentException
    //   132	149	437	java/lang/IllegalArgumentException
    //   110	128	441	java/lang/NoSuchMethodException
    //   132	149	441	java/lang/NoSuchMethodException
  }
  
  private boolean isSDCardExistAndCanWrite()
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    try
    {
      if ("mounted".equals(Environment.getExternalStorageState()))
      {
        boolean bool3 = Environment.getExternalStorageDirectory().canWrite();
        bool1 = bool2;
        if (bool3) {
          bool1 = true;
        }
      }
      return bool1;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return false;
  }
  
  private void setSupportZoom(boolean paramBoolean)
  {
    if (this.mWebView != null) {
      this.mWebView.getSettings().setSupportZoom(paramBoolean);
    }
  }
  
  private void shareToWX(boolean paramBoolean)
  {
    f.b("openSDK_LOG", "-->shareToWX : wx_appid = wx8e8dc60535c9cd93");
    if (!TextUtils.isEmpty(this.model.c))
    {
      showProgressDialog(this, "", "");
      new b(new a()
      {
        public void a(byte[] paramAnonymousArrayOfByte)
        {
          AppbarActivity.this.mProgressDialog.dismiss();
        }
      }).execute(new String[] { this.model.c });
    }
  }
  
  private boolean supportWebViewFullScreen()
  {
    String str = Build.MODEL;
    return (!str.contains("vivo")) && (!specialModel.contains(str));
  }
  
  public void login()
  {
    f.b("openSDK_LOG", "-->login : activity~~~");
    getTencent().login(this, "all", new IUiListener()
    {
      public void onCancel()
      {
        f.b("openSDK_LOG", "-->(AppbarJsBridge)openLoginActivity onCancel");
        AppbarActivity.this.jsBridge.responseFail("loginCallback", 0, null, -2);
      }
      
      public void onComplete(Object paramAnonymousObject)
      {
        f.b("openSDK_LOG", "-->(AppbarJsBridge)openLoginActivity onComplete");
        paramAnonymousObject = (JSONObject)paramAnonymousObject;
        if (paramAnonymousObject.optInt("ret", -1) != 0)
        {
          AppbarActivity.this.jsBridge.responseFail("loginCallback", 0, null, -5);
          return;
        }
        try
        {
          Object localObject1 = paramAnonymousObject.getString("openid");
          String str = paramAnonymousObject.getString("access_token");
          paramAnonymousObject.getString("expires_in");
          Object localObject2 = AppbarActivity.this.getToken().getAppId();
          a.a(AppbarActivity.this, AppbarActivity.this.mWebView.getUrl(), (String)localObject1, str, (String)localObject2);
          localObject2 = new JSONObject();
          return;
        }
        catch (JSONException paramAnonymousObject)
        {
          try
          {
            ((JSONObject)localObject2).put("logintype", "SSO");
            ((JSONObject)localObject2).put("openid", localObject1);
            ((JSONObject)localObject2).put("accesstoken", str);
            AppbarActivity.this.jsBridge.response("loginCallback", 0, null, ((JSONObject)localObject2).toString());
            localObject1 = new Intent();
            ((Intent)localObject1).putExtra("login_info", paramAnonymousObject.toString());
            AppbarActivity.this.setResult(10101, (Intent)localObject1);
            return;
          }
          catch (JSONException paramAnonymousObject)
          {
            AppbarActivity.this.jsBridge.responseFail("loginCallback", 0, null, -5);
            f.b("openSDK_LOG", "-->(AppbarJsBridge)openLoginActivity onComplete: put keys callback failed.");
          }
          paramAnonymousObject = paramAnonymousObject;
          AppbarActivity.this.jsBridge.responseFail("loginCallback", 0, null, -5);
          f.b("openSDK_LOG", "-->(AppbarJsBridge)openLoginActivity onComplete: get keys failed.");
          return;
        }
      }
      
      public void onError(UiError paramAnonymousUiError)
      {
        f.b("openSDK_LOG", "-->(AppbarJsBridge)openLoginActivity onError");
        AppbarActivity.this.jsBridge.responseFail("loginCallback", 0, null, -5);
      }
    });
  }
  
  public void onBackPressed()
  {
    MoreFloatingDialog localMoreFloatingDialog = getFloatingDialg();
    if ((localMoreFloatingDialog != null) && (localMoreFloatingDialog.isShowing()))
    {
      localMoreFloatingDialog.dismiss();
      return;
    }
    super.onBackPressed();
  }
  
  public void onClick(View paramView)
  {
    MoreFloatingDialog localMoreFloatingDialog = getFloatingDialg();
    if (paramView == this.mTitleBar.getSharBtn()) {
      this.jsBridge.clickCallback();
    }
    do
    {
      return;
      if (paramView == localMoreFloatingDialog.getQQItem())
      {
        shareToQQ();
        return;
      }
      if (paramView == localMoreFloatingDialog.getQzoneItem())
      {
        shareToQzone();
        return;
      }
      if (paramView == localMoreFloatingDialog.getWXItem())
      {
        shareToWX();
        return;
      }
      if (paramView == localMoreFloatingDialog.getTimelineItem())
      {
        shareToTimeline();
        return;
      }
    } while (paramView != this.mTitleBar.getBackBtn());
    finish();
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    this.appid = getIntent().getStringExtra("appid");
    this.url = getIntent().getStringExtra("url");
    f.b("openSDK_LOG", "-->(AppbarActivity)onCreate : appid = " + this.appid + " url = " + this.url);
    this.mWebView = new b(this);
    this.jsBridge = new AppbarJsBridge(this, this.mWebView);
    createViews();
    initViews();
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
    if (this.mWebView != null)
    {
      this.mWebView.removeAllViews();
      this.mWebView.setVisibility(8);
      this.mWebView.stopLoading();
      this.mWebView.clearHistory();
      this.mWebView.destroy();
    }
  }
  
  protected void onPause()
  {
    super.onPause();
    MoreFloatingDialog localMoreFloatingDialog = getFloatingDialg();
    if ((localMoreFloatingDialog != null) && (localMoreFloatingDialog.isShowing())) {
      localMoreFloatingDialog.dismiss();
    }
  }
  
  protected void onResume()
  {
    super.onResume();
  }
  
  public void setAppbarTitle(String paramString)
  {
    this.mTitleBar.setTitle(paramString);
  }
  
  public void setShareModel(ShareModel paramShareModel)
  {
    this.model = paramShareModel;
  }
  
  public void setShareVisibility(boolean paramBoolean)
  {
    ImageView localImageView = this.mTitleBar.getSharBtn();
    if (paramBoolean) {}
    for (int i = 0;; i = 4)
    {
      localImageView.setVisibility(i);
      return;
    }
  }
  
  public void shareToQQ()
  {
    final QQToken localQQToken = getToken();
    if (localQQToken == null) {
      return;
    }
    QQShare localQQShare = new QQShare(this, localQQToken);
    Bundle localBundle = new Bundle();
    localBundle.putString("title", this.model.a);
    localBundle.putString("targetUrl", this.model.d);
    localBundle.putString("summary", this.model.b);
    localBundle.putString("imageUrl", this.model.c);
    f.b("openSDK_LOG", "-->(AppbarActivity)shareToQQ : model.mTitle = " + this.model.a);
    f.b("openSDK_LOG", "-->(AppbarActivity)shareToQQ : model.mTargetUrl = " + this.model.d);
    f.b("openSDK_LOG", "-->(AppbarActivity)shareToQQ : model.mDescription = " + this.model.b);
    f.b("openSDK_LOG", "-->(AppbarActivity)shareToQQ : model.mIconUrl = " + this.model.c);
    localQQShare.shareToQQ(this, localBundle, new IUiListener()
    {
      public void onCancel()
      {
        f.b("openSDK_LOG", "-->(AppbarActivity)shareToQQ onCancel");
        AppbarActivity.this.jsBridge.responseShareFail(1);
      }
      
      public void onComplete(Object paramAnonymousObject)
      {
        f.b("openSDK_LOG", "-->(AppbarActivity)shareToQQ onComplete");
        AppbarActivity.this.jsBridge.responseShare(1);
        a.a(localQQToken.getAppId(), "400", "SDK.APPBAR.HOME.SHARE.QQ");
      }
      
      public void onError(UiError paramAnonymousUiError)
      {
        f.b("openSDK_LOG", "-->(AppbarActivity)shareToQQ onError");
        AppbarActivity.this.jsBridge.responseShareFail(1);
      }
    });
    a.a(localQQToken.getAppId(), "200", "SDK.APPBAR.HOME.SHARE.QQ");
  }
  
  public void shareToQzone()
  {
    final QQToken localQQToken = getToken();
    if (localQQToken == null) {
      return;
    }
    QzoneShare localQzoneShare = new QzoneShare(this, localQQToken);
    Bundle localBundle = new Bundle();
    localBundle.putInt("req_type", 1);
    localBundle.putString("title", this.model.a);
    localBundle.putString("summary", this.model.b);
    localBundle.putString("targetUrl", this.model.d);
    ArrayList localArrayList = new ArrayList();
    f.b("openSDK_LOG", "-->shareToQzone : mIconUrl = " + this.model.c);
    localArrayList.add(this.model.c);
    localBundle.putStringArrayList("imageUrl", localArrayList);
    localQzoneShare.shareToQzone(this, localBundle, new IUiListener()
    {
      public void onCancel()
      {
        f.b("openSDK_LOG", "-->(AppbarActivity)shareToQzone onCancel");
        AppbarActivity.this.jsBridge.responseShareFail(2);
      }
      
      public void onComplete(Object paramAnonymousObject)
      {
        f.b("openSDK_LOG", "-->(AppbarActivity)shareToQzone onComplete");
        AppbarActivity.this.jsBridge.responseShare(2);
        a.a(localQQToken.getAppId(), "400", "SDK.APPBAR.HOME.SHARE.QZ");
      }
      
      public void onError(UiError paramAnonymousUiError)
      {
        f.b("openSDK_LOG", "-->(AppbarActivity)shareToQzone onError");
        AppbarActivity.this.jsBridge.responseShareFail(2);
      }
    });
    a.a(localQQToken.getAppId(), "200", "SDK.APPBAR.HOME.SHARE.QZ");
  }
  
  public void shareToTimeline()
  {
    shareToWX(true);
  }
  
  public void shareToWX()
  {
    shareToWX(false);
  }
  
  public void showFloatingDialog()
  {
    MoreFloatingDialog localMoreFloatingDialog = getFloatingDialg();
    localMoreFloatingDialog.show();
    Window localWindow = localMoreFloatingDialog.getWindow();
    WindowManager.LayoutParams localLayoutParams = localWindow.getAttributes();
    localLayoutParams.gravity = 48;
    localLayoutParams.y = (getTitbarTop() + this.mTitleBar.getHeight());
    Display localDisplay = localMoreFloatingDialog.getWindow().getWindowManager().getDefaultDisplay();
    localLayoutParams.height = localMoreFloatingDialog.dip2px(100.0F);
    localLayoutParams.width = ((int)(localDisplay.getWidth() * 0.95D) / 2);
    localLayoutParams.x = (localLayoutParams.width / 2);
    f.b("openSDK_LOG", "-->(AppbarDialog)showFloatingDialog : params.x = " + localLayoutParams.x);
    localWindow.setAttributes(localLayoutParams);
  }
  
  protected void showProgressDialog(Context paramContext, String paramString1, String paramString2)
  {
    String str = paramString1;
    if (TextUtils.isEmpty(paramString1)) {
      str = "请稍候";
    }
    paramString1 = paramString2;
    if (TextUtils.isEmpty(paramString2)) {
      paramString1 = "正在加载...";
    }
    this.mProgressDialog = ProgressDialog.show(paramContext, str, paramString1);
    this.mProgressDialog.setCancelable(true);
  }
  
  private static abstract interface a
  {
    public abstract void a(byte[] paramArrayOfByte);
  }
  
  private static class b
    extends AsyncTask<String, Void, byte[]>
  {
    private AppbarActivity.a a;
    
    public b(AppbarActivity.a paramA)
    {
      this.a = paramA;
    }
    
    protected void a(byte[] paramArrayOfByte)
    {
      super.onPostExecute(paramArrayOfByte);
      this.a.a(paramArrayOfByte);
    }
    
    /* Error */
    protected byte[] a(String... paramVarArgs)
    {
      // Byte code:
      //   0: new 36	java/net/URL
      //   3: dup
      //   4: aload_1
      //   5: iconst_0
      //   6: aaload
      //   7: invokespecial 39	java/net/URL:<init>	(Ljava/lang/String;)V
      //   10: astore_1
      //   11: aload_1
      //   12: invokevirtual 43	java/net/URL:openConnection	()Ljava/net/URLConnection;
      //   15: checkcast 45	java/net/HttpURLConnection
      //   18: astore_3
      //   19: aload_3
      //   20: sipush 5000
      //   23: invokevirtual 49	java/net/HttpURLConnection:setConnectTimeout	(I)V
      //   26: aload_3
      //   27: ldc 51
      //   29: invokevirtual 54	java/net/HttpURLConnection:setRequestMethod	(Ljava/lang/String;)V
      //   32: aload_3
      //   33: invokevirtual 58	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
      //   36: astore_1
      //   37: aload_3
      //   38: invokevirtual 62	java/net/HttpURLConnection:getResponseCode	()I
      //   41: sipush 200
      //   44: if_icmpne +46 -> 90
      //   47: new 64	java/io/ByteArrayOutputStream
      //   50: dup
      //   51: invokespecial 65	java/io/ByteArrayOutputStream:<init>	()V
      //   54: astore_3
      //   55: sipush 1024
      //   58: newarray byte
      //   60: astore 4
      //   62: aload_1
      //   63: aload 4
      //   65: invokevirtual 71	java/io/InputStream:read	([B)I
      //   68: istore_2
      //   69: iload_2
      //   70: iconst_m1
      //   71: if_icmpeq +49 -> 120
      //   74: aload_3
      //   75: aload 4
      //   77: iconst_0
      //   78: iload_2
      //   79: invokevirtual 75	java/io/ByteArrayOutputStream:write	([BII)V
      //   82: goto -20 -> 62
      //   85: astore_1
      //   86: aload_1
      //   87: invokevirtual 78	java/io/IOException:printStackTrace	()V
      //   90: aconst_null
      //   91: areturn
      //   92: astore_1
      //   93: aload_1
      //   94: invokevirtual 79	java/net/MalformedURLException:printStackTrace	()V
      //   97: aconst_null
      //   98: areturn
      //   99: astore_1
      //   100: aload_1
      //   101: invokevirtual 78	java/io/IOException:printStackTrace	()V
      //   104: aconst_null
      //   105: areturn
      //   106: astore_1
      //   107: aload_1
      //   108: invokevirtual 80	java/net/ProtocolException:printStackTrace	()V
      //   111: aconst_null
      //   112: areturn
      //   113: astore_1
      //   114: aload_1
      //   115: invokevirtual 78	java/io/IOException:printStackTrace	()V
      //   118: aconst_null
      //   119: areturn
      //   120: aload_3
      //   121: invokevirtual 83	java/io/ByteArrayOutputStream:close	()V
      //   124: aload_1
      //   125: invokevirtual 84	java/io/InputStream:close	()V
      //   128: aload_3
      //   129: invokevirtual 88	java/io/ByteArrayOutputStream:toByteArray	()[B
      //   132: astore_1
      //   133: aload_1
      //   134: areturn
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	135	0	this	b
      //   0	135	1	paramVarArgs	String[]
      //   68	11	2	i	int
      //   18	111	3	localObject	Object
      //   60	16	4	arrayOfByte	byte[]
      // Exception table:
      //   from	to	target	type
      //   37	62	85	java/io/IOException
      //   62	69	85	java/io/IOException
      //   74	82	85	java/io/IOException
      //   120	133	85	java/io/IOException
      //   0	11	92	java/net/MalformedURLException
      //   11	19	99	java/io/IOException
      //   26	32	106	java/net/ProtocolException
      //   32	37	113	java/io/IOException
    }
  }
  
  private class c
    extends WebChromeClient
  {
    private c() {}
    
    public void onReceivedTitle(WebView paramWebView, String paramString)
    {
      AppbarActivity.this.mTitleBar.setTitle(paramString);
    }
  }
  
  private class d
    extends WebViewClient
  {
    private d() {}
    
    public void onPageFinished(WebView paramWebView, String paramString)
    {
      super.onPageFinished(paramWebView, paramString);
      AppbarActivity.this.setSupportZoom(true);
      AppbarActivity.this.jsBridge.ready();
    }
    
    public void onPageStarted(WebView paramWebView, String paramString, Bitmap paramBitmap)
    {
      super.onPageStarted(paramWebView, paramString, paramBitmap);
      AppbarActivity.this.setSupportZoom(false);
      if ((!paramString.startsWith("http")) && (paramString.startsWith("https"))) {}
    }
    
    public boolean shouldOverrideUrlLoading(WebView paramWebView, String paramString)
    {
      boolean bool = true;
      f.b("openSDK_LOG", "-->(AppbarDialog)shouldOverrideUrlLoading : url = " + paramString);
      if (TextUtils.isEmpty(paramString)) {}
      do
      {
        return false;
        if ((paramString.startsWith("http")) || (paramString.startsWith("https"))) {
          return super.shouldOverrideUrlLoading(paramWebView, paramString);
        }
        if (paramString.startsWith("jsb://"))
        {
          AppbarActivity.this.jsBridge.invoke(paramString);
          return true;
        }
      } while ((!paramString.equals("about:blank;")) && (!paramString.equals("about:blank")));
      if (Build.VERSION.SDK_INT < 11) {}
      for (;;)
      {
        return bool;
        bool = false;
      }
    }
  }
}
