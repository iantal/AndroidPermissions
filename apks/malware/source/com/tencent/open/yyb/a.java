package com.tencent.open.yyb;

import android.content.Context;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.text.TextUtils;
import android.webkit.CookieManager;
import android.webkit.CookieSyncManager;
import com.tencent.open.a.f;
import com.tencent.open.utils.HttpUtils;
import com.tencent.open.utils.Util;
import com.tencent.open.utils.Util.Statistic;
import org.json.JSONObject;

public class a
{
  public static Drawable a(String paramString, Context paramContext)
  {
    return a(paramString, paramContext, new Rect(0, 0, 0, 0));
  }
  
  /* Error */
  public static Drawable a(String paramString, Context paramContext, Rect paramRect)
  {
    // Byte code:
    //   0: aload_1
    //   1: invokevirtual 33	android/content/Context:getApplicationContext	()Landroid/content/Context;
    //   4: astore 4
    //   6: aload 4
    //   8: invokevirtual 37	android/content/Context:getAssets	()Landroid/content/res/AssetManager;
    //   11: astore_1
    //   12: aload_1
    //   13: aload_0
    //   14: invokevirtual 43	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   17: astore_1
    //   18: aload_1
    //   19: ifnonnull +20 -> 39
    //   22: aload_1
    //   23: ifnull +7 -> 30
    //   26: aload_1
    //   27: invokevirtual 49	java/io/InputStream:close	()V
    //   30: aconst_null
    //   31: areturn
    //   32: astore_0
    //   33: aload_0
    //   34: invokevirtual 52	java/io/IOException:printStackTrace	()V
    //   37: aconst_null
    //   38: areturn
    //   39: aload_1
    //   40: astore_3
    //   41: aload_0
    //   42: ldc 54
    //   44: invokevirtual 60	java/lang/String:endsWith	(Ljava/lang/String;)Z
    //   47: ifeq +73 -> 120
    //   50: aload_1
    //   51: astore_3
    //   52: aload_1
    //   53: invokestatic 66	android/graphics/BitmapFactory:decodeStream	(Ljava/io/InputStream;)Landroid/graphics/Bitmap;
    //   56: astore_0
    //   57: aload_0
    //   58: ifnull +45 -> 103
    //   61: aload_1
    //   62: astore_3
    //   63: aload_0
    //   64: invokevirtual 72	android/graphics/Bitmap:getNinePatchChunk	()[B
    //   67: astore 5
    //   69: aload_1
    //   70: astore_3
    //   71: new 74	android/graphics/drawable/NinePatchDrawable
    //   74: dup
    //   75: aload 4
    //   77: invokevirtual 78	android/content/Context:getResources	()Landroid/content/res/Resources;
    //   80: aload_0
    //   81: aload 5
    //   83: aload_2
    //   84: aconst_null
    //   85: invokespecial 81	android/graphics/drawable/NinePatchDrawable:<init>	(Landroid/content/res/Resources;Landroid/graphics/Bitmap;[BLandroid/graphics/Rect;Ljava/lang/String;)V
    //   88: astore_2
    //   89: aload_2
    //   90: astore_0
    //   91: aload_1
    //   92: ifnull +9 -> 101
    //   95: aload_1
    //   96: invokevirtual 49	java/io/InputStream:close	()V
    //   99: aload_2
    //   100: astore_0
    //   101: aload_0
    //   102: areturn
    //   103: aload_1
    //   104: ifnull -74 -> 30
    //   107: aload_1
    //   108: invokevirtual 49	java/io/InputStream:close	()V
    //   111: aconst_null
    //   112: areturn
    //   113: astore_0
    //   114: aload_0
    //   115: invokevirtual 52	java/io/IOException:printStackTrace	()V
    //   118: aconst_null
    //   119: areturn
    //   120: aload_1
    //   121: astore_3
    //   122: aload_1
    //   123: aload_0
    //   124: invokestatic 87	android/graphics/drawable/Drawable:createFromStream	(Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;
    //   127: astore_2
    //   128: goto -39 -> 89
    //   131: astore_0
    //   132: aload_0
    //   133: invokevirtual 52	java/io/IOException:printStackTrace	()V
    //   136: aload_2
    //   137: astore_0
    //   138: goto -37 -> 101
    //   141: astore_1
    //   142: aconst_null
    //   143: astore_0
    //   144: aload_1
    //   145: invokevirtual 88	java/lang/OutOfMemoryError:printStackTrace	()V
    //   148: ldc 90
    //   150: ldc 92
    //   152: invokestatic 97	com/tencent/open/a/f:b	(Ljava/lang/String;Ljava/lang/String;)V
    //   155: aload_0
    //   156: ifnull +108 -> 264
    //   159: aload_0
    //   160: invokevirtual 49	java/io/InputStream:close	()V
    //   163: aconst_null
    //   164: astore_0
    //   165: goto -64 -> 101
    //   168: astore_0
    //   169: aload_0
    //   170: invokevirtual 52	java/io/IOException:printStackTrace	()V
    //   173: aconst_null
    //   174: astore_0
    //   175: goto -74 -> 101
    //   178: astore_0
    //   179: aconst_null
    //   180: astore_1
    //   181: aload_1
    //   182: astore_3
    //   183: aload_0
    //   184: invokevirtual 52	java/io/IOException:printStackTrace	()V
    //   187: aload_1
    //   188: astore_3
    //   189: ldc 90
    //   191: ldc 92
    //   193: invokestatic 97	com/tencent/open/a/f:b	(Ljava/lang/String;Ljava/lang/String;)V
    //   196: aload_1
    //   197: ifnull +67 -> 264
    //   200: aload_1
    //   201: invokevirtual 49	java/io/InputStream:close	()V
    //   204: aconst_null
    //   205: astore_0
    //   206: goto -105 -> 101
    //   209: astore_0
    //   210: aload_0
    //   211: invokevirtual 52	java/io/IOException:printStackTrace	()V
    //   214: aconst_null
    //   215: astore_0
    //   216: goto -115 -> 101
    //   219: astore_0
    //   220: aconst_null
    //   221: astore_3
    //   222: aload_3
    //   223: ifnull +7 -> 230
    //   226: aload_3
    //   227: invokevirtual 49	java/io/InputStream:close	()V
    //   230: aload_0
    //   231: athrow
    //   232: astore_1
    //   233: aload_1
    //   234: invokevirtual 52	java/io/IOException:printStackTrace	()V
    //   237: goto -7 -> 230
    //   240: astore_0
    //   241: goto -19 -> 222
    //   244: astore_1
    //   245: aload_0
    //   246: astore_3
    //   247: aload_1
    //   248: astore_0
    //   249: goto -27 -> 222
    //   252: astore_0
    //   253: goto -72 -> 181
    //   256: astore_2
    //   257: aload_1
    //   258: astore_0
    //   259: aload_2
    //   260: astore_1
    //   261: goto -117 -> 144
    //   264: aconst_null
    //   265: astore_0
    //   266: goto -165 -> 101
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	269	0	paramString	String
    //   0	269	1	paramContext	Context
    //   0	269	2	paramRect	Rect
    //   40	207	3	localObject	Object
    //   4	72	4	localContext	Context
    //   67	15	5	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   26	30	32	java/io/IOException
    //   107	111	113	java/io/IOException
    //   95	99	131	java/io/IOException
    //   12	18	141	java/lang/OutOfMemoryError
    //   159	163	168	java/io/IOException
    //   12	18	178	java/io/IOException
    //   200	204	209	java/io/IOException
    //   12	18	219	finally
    //   226	230	232	java/io/IOException
    //   41	50	240	finally
    //   52	57	240	finally
    //   63	69	240	finally
    //   71	89	240	finally
    //   122	128	240	finally
    //   183	187	240	finally
    //   189	196	240	finally
    //   144	155	244	finally
    //   41	50	252	java/io/IOException
    //   52	57	252	java/io/IOException
    //   63	69	252	java/io/IOException
    //   71	89	252	java/io/IOException
    //   122	128	252	java/io/IOException
    //   41	50	256	java/lang/OutOfMemoryError
    //   52	57	256	java/lang/OutOfMemoryError
    //   63	69	256	java/lang/OutOfMemoryError
    //   71	89	256	java/lang/OutOfMemoryError
    //   122	128	256	java/lang/OutOfMemoryError
  }
  
  public static void a(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4)
  {
    if (TextUtils.isEmpty(paramString1)) {
      return;
    }
    CookieSyncManager.createInstance(paramContext);
    CookieManager localCookieManager = CookieManager.getInstance();
    localCookieManager.setAcceptCookie(true);
    String str = Uri.parse(paramString1).getHost().toLowerCase();
    paramContext = null;
    if (str.endsWith(".qq.com")) {
      paramContext = ".qq.com";
    }
    localCookieManager.setCookie(paramString1, b("logintype", "MOBILEQ", paramContext));
    localCookieManager.setCookie(paramString1, b("qopenid", paramString2, paramContext));
    localCookieManager.setCookie(paramString1, b("qaccesstoken", paramString3, paramContext));
    localCookieManager.setCookie(paramString1, b("openappid", paramString4, paramContext));
    CookieSyncManager.getInstance().sync();
  }
  
  public static void a(String paramString1, String paramString2, String paramString3)
  {
    Bundle localBundle = new Bundle();
    localBundle.putString("uin", "1000");
    localBundle.putString("action", paramString2);
    localBundle.putString("appid", paramString1);
    localBundle.putString("via", paramString3);
    new b(null).execute(new Bundle[] { localBundle });
  }
  
  private static String b(String paramString1, String paramString2, String paramString3)
  {
    paramString2 = paramString1 + "=" + paramString2;
    paramString1 = paramString2;
    if (paramString3 != null)
    {
      paramString1 = paramString2 + "; path=/";
      paramString1 = paramString1 + "; domain=" + paramString3;
    }
    return paramString1;
  }
  
  public static class a
  {
    public String a;
    public String b;
    public long c;
    
    public a() {}
  }
  
  private static class b
    extends AsyncTask<Bundle, Void, Void>
  {
    private b() {}
    
    protected Void a(Bundle... paramVarArgs)
    {
      if (paramVarArgs == null) {
        return null;
      }
      String str;
      if (paramVarArgs.length == 2)
      {
        str = paramVarArgs[1].getString("uri");
        if (TextUtils.isEmpty(str)) {}
      }
      for (;;)
      {
        try
        {
          int i = Util.parseJson(HttpUtils.openUrl2(null, str, "GET", paramVarArgs[0]).response).getInt("ret");
          f.b("openSDK_LOG", "-->(ViaAsyncTask)doInBackground : ret = " + i);
          return null;
        }
        catch (Exception paramVarArgs)
        {
          f.b("openSDK_LOG", "-->(ViaAsyncTask)doInBackground : Exception = " + paramVarArgs.toString());
          paramVarArgs.printStackTrace();
          return null;
        }
        str = "http://analy.qq.com/cgi-bin/mapp_apptrace";
      }
    }
  }
}
