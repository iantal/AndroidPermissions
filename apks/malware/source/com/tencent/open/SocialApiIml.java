package com.tencent.open;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.text.TextUtils;
import android.webkit.CookieSyncManager;
import android.webkit.WebSettings;
import com.tencent.connect.auth.QQAuth;
import com.tencent.connect.auth.QQToken;
import com.tencent.connect.common.BaseApi;
import com.tencent.open.a.f;
import com.tencent.open.c.b;
import com.tencent.open.utils.Global;
import com.tencent.open.utils.OpenConfig;
import com.tencent.open.utils.ServerSetting;
import com.tencent.open.utils.SystemUtils;
import com.tencent.open.utils.Util;
import com.tencent.tauth.IUiListener;
import com.tencent.tauth.UiError;
import org.json.JSONException;
import org.json.JSONObject;

public class SocialApiIml
  extends BaseApi
{
  private static final String a = SocialApiIml.class.getName();
  private Activity b;
  
  public SocialApiIml(QQAuth paramQQAuth, QQToken paramQQToken)
  {
    super(paramQQAuth, paramQQToken);
  }
  
  public SocialApiIml(QQToken paramQQToken)
  {
    super(paramQQToken);
  }
  
  private b a(Bundle paramBundle, String paramString1, String paramString2, IUiListener paramIUiListener)
  {
    Intent localIntent = new Intent();
    localIntent.setClassName("com.qzone", "com.tencent.open.agent.AgentActivity");
    b localB = new b();
    localB.a = localIntent;
    localB.c = paramBundle;
    localB.d = paramString2;
    localB.e = paramIUiListener;
    localB.b = paramString1;
    return localB;
  }
  
  private void a(Activity paramActivity, Intent paramIntent, String paramString, Bundle paramBundle, IUiListener paramIUiListener)
  {
    f.b("openSDK_LOG", "-->handleIntentWithAgent " + paramString + " params=" + paramBundle + " activityIntent=" + paramIntent);
    paramIntent.putExtra("key_action", paramString);
    paramIntent.putExtra("key_params", paramBundle);
    this.mActivityIntent = paramIntent;
    startAssitActivity(paramActivity, paramIUiListener);
  }
  
  private void a(Activity paramActivity, Intent paramIntent, String paramString1, Bundle paramBundle, String paramString2, IUiListener paramIUiListener, boolean paramBoolean)
  {
    f.b("openSDK_LOG", "-->handleIntent " + paramString1 + " params=" + paramBundle + " activityIntent=" + paramIntent);
    if (paramIntent != null)
    {
      a(paramActivity, paramIntent, paramString1, paramBundle, paramIUiListener);
      return;
    }
    paramIntent = OpenConfig.getInstance(Global.getContext(), this.mToken.getAppId());
    if ((paramBoolean) || (paramIntent.getBoolean("C_LoginH5"))) {}
    for (int i = 1; i != 0; i = 0)
    {
      a(paramActivity, paramString1, paramBundle, paramString2, paramIUiListener);
      return;
    }
    handleDownloadLastestQQ(paramActivity, paramBundle, paramIUiListener);
  }
  
  private void a(Activity paramActivity, Bundle paramBundle, IUiListener paramIUiListener)
  {
    Intent localIntent = getAgentIntentWithTarget("com.tencent.open.agent.voice");
    String str = ServerSetting.getInstance().getEnvUrl(Global.getContext(), "http://qzs.qq.com/open/mobile/not_support.html?");
    if ((localIntent == null) && (a()))
    {
      if ((this.mProgressDialog == null) || (!this.mProgressDialog.isShowing()))
      {
        this.mProgressDialog = new ProgressDialog(paramActivity);
        this.mProgressDialog.setTitle("请稍候");
        this.mProgressDialog.show();
      }
      a(paramActivity, "action_voice", new a(a(paramBundle, "action_voice", str, paramIUiListener)));
      return;
    }
    a(paramActivity, localIntent, "action_voice", paramBundle, str, paramIUiListener, true);
  }
  
  private void a(Activity paramActivity, String paramString, Bundle paramBundle, IUiListener paramIUiListener)
  {
    this.b = paramActivity;
    Intent localIntent2 = getAgentIntentWithTarget("com.tencent.open.agent.SocialFriendChooser");
    Intent localIntent1 = localIntent2;
    if (localIntent2 == null) {
      localIntent1 = getAgentIntentWithTarget("com.tencent.open.agent.RequestFreegiftActivity");
    }
    paramBundle.putAll(composeActivityParams());
    if ("action_ask".equals(paramString)) {
      paramBundle.putString("type", "request");
    }
    for (;;)
    {
      a(paramActivity, localIntent1, paramString, paramBundle, ServerSetting.getInstance().getEnvUrl(Global.getContext(), "http://qzs.qq.com/open/mobile/request/sdk_request.html?"), paramIUiListener, false);
      return;
      if ("action_gift".equals(paramString)) {
        paramBundle.putString("type", "freegift");
      }
    }
  }
  
  private void a(Activity paramActivity, String paramString1, Bundle paramBundle, String paramString2, IUiListener paramIUiListener)
  {
    f.b("openSDK_LOG", "-->handleIntentWithH5 " + paramString1 + " params=" + paramBundle);
    Intent localIntent = getTargetActivityIntent("com.tencent.open.agent.AgentActivity");
    paramString1 = new c(paramActivity, paramIUiListener, paramString1, paramString2, paramBundle);
    paramBundle = getTargetActivityIntent("com.tencent.open.agent.EncryTokenActivity");
    if ((paramBundle != null) && (localIntent != null) && (localIntent.getComponent() != null) && (paramBundle.getComponent() != null) && (localIntent.getComponent().getPackageName().equals(paramBundle.getComponent().getPackageName())))
    {
      paramBundle.putExtra("oauth_consumer_key", this.mToken.getAppId());
      paramBundle.putExtra("openid", this.mToken.getOpenId());
      paramBundle.putExtra("access_token", this.mToken.getAccessToken());
      paramBundle.putExtra("key_action", "action_check_token");
      this.mActivityIntent = paramBundle;
      if (hasActivityForIntent()) {
        startAssitActivity(paramActivity, paramString1);
      }
      return;
    }
    paramBundle = Util.encrypt("tencent&sdk&qazxc***14969%%" + this.mToken.getAccessToken() + this.mToken.getAppId() + this.mToken.getOpenId() + "qzone3.4");
    paramActivity = new JSONObject();
    try
    {
      paramActivity.put("encry_token", paramBundle);
      paramString1.onComplete(paramActivity);
      return;
    }
    catch (JSONException paramBundle)
    {
      for (;;)
      {
        paramBundle.printStackTrace();
      }
    }
  }
  
  private void a(Context paramContext, String paramString1, Bundle paramBundle, String paramString2, IUiListener paramIUiListener)
  {
    f.a("openSDK_LOG", "OpenUi, showDialog --start");
    CookieSyncManager.createInstance(paramContext);
    paramBundle.putString("oauth_consumer_key", this.mToken.getAppId());
    if (this.mToken.isSessionValid()) {
      paramBundle.putString("access_token", this.mToken.getAccessToken());
    }
    paramContext = this.mToken.getOpenId();
    if (paramContext != null) {
      paramBundle.putString("openid", paramContext);
    }
    try
    {
      paramBundle.putString("pf", Global.getContext().getSharedPreferences("pfStore", 0).getString("pf", "openmobile_android"));
      paramContext = new StringBuilder();
      paramContext.append(paramString2);
      paramContext.append(Util.encodeUrl(paramBundle));
      paramContext = paramContext.toString();
      f.b("openSDK_LOG", "OpenUi, showDialog TDialog");
      if (("action_challenge".equals(paramString1)) || ("action_brag".equals(paramString1)))
      {
        f.b("openSDK_LOG", "OpenUi, showDialog PKDialog");
        new PKDialog(this.b, paramString1, paramContext, paramIUiListener, this.mToken).show();
        return;
      }
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
        paramBundle.putString("pf", "openmobile_android");
      }
      new TDialog(this.b, paramString1, paramContext, paramIUiListener, this.mToken).show();
    }
  }
  
  private void b()
  {
    if ((!this.b.isFinishing()) && (this.mProgressDialog != null) && (this.mProgressDialog.isShowing()))
    {
      this.mProgressDialog.dismiss();
      this.mProgressDialog = null;
    }
  }
  
  protected void a(Activity paramActivity, String paramString, IUiListener paramIUiListener)
  {
    Intent localIntent = new Intent();
    localIntent.setClassName("com.qzone", "com.tencent.open.agent.AgentActivity");
    localIntent.putExtra("key_action", "action_check");
    Bundle localBundle = new Bundle();
    localBundle.putString("apiName", paramString);
    localIntent.putExtra("key_params", localBundle);
    this.mActivityIntent = localIntent;
    startAssitActivity(paramActivity, paramIUiListener);
  }
  
  protected boolean a()
  {
    Intent localIntent = new Intent();
    localIntent.setClassName("com.qzone", "com.tencent.open.agent.CheckFunctionActivity");
    return SystemUtils.isActivityExist(Global.getContext(), localIntent);
  }
  
  public void ask(Activity paramActivity, Bundle paramBundle, IUiListener paramIUiListener)
  {
    a(paramActivity, "action_ask", paramBundle, paramIUiListener);
  }
  
  public void brag(Activity paramActivity, Bundle paramBundle, IUiListener paramIUiListener)
  {
    this.b = paramActivity;
    Intent localIntent = getAgentIntentWithTarget("com.tencent.open.agent.BragActivity");
    paramBundle.putAll(composeActivityParams());
    a(paramActivity, localIntent, "action_brag", paramBundle, ServerSetting.getInstance().getEnvUrl(Global.getContext(), "http://qzs.qq.com/open/mobile/brag/sdk_brag.html?"), paramIUiListener, false);
  }
  
  public void challenge(Activity paramActivity, Bundle paramBundle, IUiListener paramIUiListener)
  {
    this.b = paramActivity;
    Intent localIntent = getAgentIntentWithTarget("com.tencent.open.agent.ChallengeActivity");
    paramBundle.putAll(composeActivityParams());
    a(paramActivity, localIntent, "action_challenge", paramBundle, ServerSetting.getInstance().getEnvUrl(Global.getContext(), "http://qzs.qq.com/open/mobile/brag/sdk_brag.html?"), paramIUiListener, false);
  }
  
  protected Intent getTargetActivityIntent(String paramString)
  {
    Intent localIntent1 = new Intent();
    localIntent1.setClassName("com.qzone", paramString);
    Intent localIntent2 = new Intent();
    localIntent2.setClassName("com.tencent.mobileqq", paramString);
    if ((SystemUtils.isActivityExist(Global.getContext(), localIntent2)) && (SystemUtils.compareQQVersion(Global.getContext(), "4.7") >= 0)) {
      paramString = localIntent2;
    }
    do
    {
      return paramString;
      if ((!SystemUtils.isActivityExist(Global.getContext(), localIntent1)) || (SystemUtils.compareVersion(SystemUtils.getAppVersionName(Global.getContext(), "com.qzone"), "4.2") < 0)) {
        break;
      }
      paramString = localIntent1;
    } while (SystemUtils.isAppSignatureValid(Global.getContext(), localIntent1.getComponent().getPackageName(), "ec96e9ac1149251acbb1b0c5777cae95"));
    return null;
    return null;
  }
  
  public void gift(Activity paramActivity, Bundle paramBundle, IUiListener paramIUiListener)
  {
    a(paramActivity, "action_gift", paramBundle, paramIUiListener);
  }
  
  public void grade(Activity paramActivity, Bundle paramBundle, IUiListener paramIUiListener)
  {
    this.b = paramActivity;
    paramBundle.putAll(composeActivityParams());
    paramBundle.putString("version", Util.getAppVersion(paramActivity));
    Intent localIntent = getAgentIntentWithTarget("com.tencent.open.agent.AppGradeActivity");
    if ((localIntent == null) && (a()))
    {
      this.mProgressDialog = new ProgressDialog(paramActivity);
      this.mProgressDialog.setMessage("请稍候...");
      this.mProgressDialog.show();
      a(paramActivity, "action_grade", new a(a(paramBundle, "action_grade", "http://qzs.qq.com/open/mobile/rate/sdk_rate.html?", paramIUiListener)));
      return;
    }
    a(paramActivity, localIntent, "action_grade", paramBundle, "http://qzs.qq.com/open/mobile/rate/sdk_rate.html?", paramIUiListener, true);
  }
  
  public void invite(Activity paramActivity, Bundle paramBundle, IUiListener paramIUiListener)
  {
    this.b = paramActivity;
    Intent localIntent2 = getAgentIntentWithTarget("com.tencent.open.agent.SocialFriendChooser");
    Intent localIntent1 = localIntent2;
    if (localIntent2 == null) {
      localIntent1 = getAgentIntentWithTarget("com.tencent.open.agent.AppInvitationActivity");
    }
    paramBundle.putAll(composeActivityParams());
    a(paramActivity, localIntent1, "action_invite", paramBundle, ServerSetting.getInstance().getEnvUrl(Global.getContext(), "http://qzs.qq.com/open/mobile/invite/sdk_invite.html?"), paramIUiListener, false);
  }
  
  public void reactive(Activity paramActivity, Bundle paramBundle, IUiListener paramIUiListener)
  {
    this.b = paramActivity;
    Object localObject2 = getAgentIntentWithTarget("com.tencent.open.agent.SocialFriendChooser");
    Object localObject1 = localObject2;
    if (localObject2 == null) {
      localObject1 = getAgentIntentWithTarget("com.tencent.open.agent.ReactiveActivity");
    }
    paramBundle.putAll(composeActivityParams());
    localObject2 = ServerSetting.getInstance().getEnvUrl(Global.getContext(), "http://qzs.qq.com/open/mobile/reactive/sdk_reactive.html?");
    if ((localObject1 == null) && (a()))
    {
      this.mProgressDialog = new ProgressDialog(paramActivity);
      this.mProgressDialog.setMessage("请稍候...");
      this.mProgressDialog.show();
      paramBundle.putString("type", "reactive");
      a(paramActivity, "action_reactive", new a(a(paramBundle, "action_reactive", (String)localObject2, paramIUiListener)));
      return;
    }
    paramBundle.putString("sendImg", paramBundle.getString("img"));
    paramBundle.putString("type", "reactive");
    paramBundle.remove("img");
    a(paramActivity, (Intent)localObject1, "action_reactive", paramBundle, (String)localObject2, paramIUiListener, false);
  }
  
  public void story(Activity paramActivity, Bundle paramBundle, IUiListener paramIUiListener)
  {
    this.b = paramActivity;
    Intent localIntent = getAgentIntentWithTarget("com.tencent.open.agent.SendStoryActivity");
    paramBundle.putAll(composeActivityParams());
    a(paramActivity, localIntent, "action_story", paramBundle, ServerSetting.getInstance().getEnvUrl(Global.getContext(), "http://qzs.qq.com/open/mobile/sendstory/sdk_sendstory_v1.3.html?"), paramIUiListener, false);
  }
  
  public void voice(final Activity paramActivity, final Bundle paramBundle, final IUiListener paramIUiListener)
  {
    this.b = paramActivity;
    paramBundle.putAll(composeActivityParams());
    paramBundle.putString("version", Util.getAppVersion(paramActivity));
    if (!e.a())
    {
      paramIUiListener.onError(new UiError(-12, "检测不到SD卡，无法发送语音！", "检测不到SD卡，无法发送语音！"));
      return;
    }
    if (paramBundle.containsKey("image_date"))
    {
      Bitmap localBitmap = (Bitmap)paramBundle.getParcelable("image_date");
      if (localBitmap != null)
      {
        this.mProgressDialog = new ProgressDialog(paramActivity);
        this.mProgressDialog.setMessage("请稍候...");
        this.mProgressDialog.show();
        new e(new e.a()
        {
          public void a(String paramAnonymousString)
          {
            paramBundle.remove("image_date");
            if (!TextUtils.isEmpty(paramAnonymousString)) {
              paramBundle.putString("image_date", paramAnonymousString);
            }
            SocialApiIml.a(SocialApiIml.this, paramActivity, paramBundle, paramIUiListener);
          }
          
          public void b(String paramAnonymousString)
          {
            paramBundle.remove("image_date");
            paramAnonymousString = new UiError(-5, "图片读取失败，请检查该图片是否有效", "图片读取失败，请检查该图片是否有效");
            paramIUiListener.onError(paramAnonymousString);
            SocialApiIml.a(SocialApiIml.this);
          }
        }).execute(new Bitmap[] { localBitmap });
        return;
      }
    }
    a(paramActivity, paramBundle, paramIUiListener);
  }
  
  @SuppressLint({"SetJavaScriptEnabled"})
  public void writeEncryToken(Context paramContext)
  {
    String str = this.mToken.getAccessToken();
    Object localObject1 = this.mToken.getAppId();
    Object localObject2 = this.mToken.getOpenId();
    if ((str != null) && (str.length() > 0) && (localObject1 != null) && (((String)localObject1).length() > 0) && (localObject2 != null) && (((String)localObject2).length() > 0)) {}
    for (str = Util.encrypt("tencent&sdk&qazxc***14969%%" + str + (String)localObject1 + (String)localObject2 + "qzone3.4");; str = null)
    {
      localObject1 = new b(paramContext);
      localObject2 = ((b)localObject1).getSettings();
      ((WebSettings)localObject2).setDomStorageEnabled(true);
      ((WebSettings)localObject2).setJavaScriptEnabled(true);
      ((WebSettings)localObject2).setDatabaseEnabled(true);
      str = "<!DOCTYPE HTML><html lang=\"en-US\"><head><meta charset=\"UTF-8\"><title>localStorage Test</title><script type=\"text/javascript\">document.domain = 'qq.com';localStorage[\"" + this.mToken.getOpenId() + "_" + this.mToken.getAppId() + "\"]=\"" + str + "\";</script></head><body></body></html>";
      paramContext = ServerSetting.getInstance().getEnvUrl(paramContext, "http://qzs.qq.com");
      ((b)localObject1).loadDataWithBaseURL(paramContext, str, "text/html", "utf-8", paramContext);
      return;
    }
  }
  
  protected class a
    implements IUiListener
  {
    SocialApiIml.b a;
    
    public a(SocialApiIml.b paramB)
    {
      this.a = paramB;
    }
    
    public void onCancel()
    {
      SocialApiIml.a(SocialApiIml.this);
      e.a(this.a.c.getString("image_date"));
    }
    
    public void onComplete(Object paramObject)
    {
      boolean bool2 = false;
      boolean bool1 = bool2;
      if (paramObject != null) {
        paramObject = (JSONObject)paramObject;
      }
      try
      {
        bool1 = paramObject.getBoolean("check_result");
        SocialApiIml.a(SocialApiIml.this);
        if (bool1)
        {
          SocialApiIml.a(SocialApiIml.this, SocialApiIml.b(SocialApiIml.this), this.a.a, this.a.b, this.a.c, this.a.e);
          return;
        }
      }
      catch (JSONException paramObject)
      {
        for (;;)
        {
          paramObject.printStackTrace();
          bool1 = bool2;
        }
        e.a(this.a.c.getString("image_date"));
        SocialApiIml.a(SocialApiIml.this, SocialApiIml.b(SocialApiIml.this), this.a.b, this.a.c, this.a.d, this.a.e);
      }
    }
    
    public void onError(UiError paramUiError)
    {
      SocialApiIml.a(SocialApiIml.this);
      e.a(this.a.c.getString("image_date"));
      SocialApiIml.a(SocialApiIml.this, SocialApiIml.b(SocialApiIml.this), this.a.b, this.a.c, this.a.d, this.a.e);
    }
  }
  
  private static class b
  {
    Intent a;
    String b;
    Bundle c;
    String d;
    IUiListener e;
    
    public b() {}
  }
  
  private class c
    implements IUiListener
  {
    private IUiListener b;
    private String c;
    private String d;
    private Bundle e;
    private Activity f;
    
    c(Activity paramActivity, IUiListener paramIUiListener, String paramString1, String paramString2, Bundle paramBundle)
    {
      this.b = paramIUiListener;
      this.c = paramString1;
      this.d = paramString2;
      this.e = paramBundle;
    }
    
    public void onCancel()
    {
      this.b.onCancel();
    }
    
    public void onComplete(Object paramObject)
    {
      paramObject = (JSONObject)paramObject;
      try
      {
        paramObject = paramObject.getString("encry_token");
        this.e.putString("encrytoken", paramObject);
        SocialApiIml.a(SocialApiIml.this, SocialApiIml.b(SocialApiIml.this), this.c, this.e, this.d, this.b);
        if (TextUtils.isEmpty(paramObject))
        {
          f.b("miles", "The token get from qq or qzone is empty. Write temp token to localstorage.");
          SocialApiIml.this.writeEncryToken(this.f);
        }
        return;
      }
      catch (JSONException paramObject)
      {
        for (;;)
        {
          paramObject.printStackTrace();
          f.b("openSDK_LOG", "OpenApi, EncrytokenListener() onComplete error", paramObject);
          paramObject = null;
        }
      }
    }
    
    public void onError(UiError paramUiError)
    {
      f.b("openSDK_LOG", "OpenApi, EncryptTokenListener() onError" + paramUiError.errorMessage);
      this.b.onError(paramUiError);
    }
  }
}
