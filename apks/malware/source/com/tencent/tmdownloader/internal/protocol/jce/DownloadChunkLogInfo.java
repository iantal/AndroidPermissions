package com.tencent.tmdownloader.internal.protocol.jce;

import com.qq.taf.jce.JceInputStream;
import com.qq.taf.jce.JceOutputStream;
import com.qq.taf.jce.JceStruct;

public final class DownloadChunkLogInfo
  extends JceStruct
{
  public String UUID = "";
  public String appId = "";
  public byte currentRetryCnt = 0;
  public long endTime = 0L;
  public int errorCode = 0;
  public String flag = "";
  public byte isWap = 0;
  public String networkOperator = "";
  public int networkType = 0;
  public long readHeaderTime = 0L;
  public long receiveDataSize = 0L;
  public long requestRanagePosition = 0L;
  public long requestRanageSize = 0L;
  public String requestUrl = "";
  public long responseContentLength = 0L;
  public int responseHttpCode = 0;
  public long responseRangeLength = 0L;
  public long responseRangePosition = 0L;
  public int resultState = 0;
  public long startTime = 0L;
  public byte type = 0;
  public String via = "";
  
  public DownloadChunkLogInfo() {}
  
  public DownloadChunkLogInfo(String paramString1, byte paramByte1, String paramString2, String paramString3, int paramInt1, byte paramByte2, long paramLong1, long paramLong2, long paramLong3, long paramLong4, long paramLong5, int paramInt2, long paramLong6, long paramLong7, long paramLong8, long paramLong9, int paramInt3, int paramInt4, byte paramByte3, String paramString4, String paramString5, String paramString6)
  {
    this.UUID = paramString1;
    this.type = paramByte1;
    this.requestUrl = paramString2;
    this.networkOperator = paramString3;
    this.networkType = paramInt1;
    this.isWap = paramByte2;
    this.requestRanagePosition = paramLong1;
    this.requestRanageSize = paramLong2;
    this.responseRangePosition = paramLong3;
    this.responseRangeLength = paramLong4;
    this.responseContentLength = paramLong5;
    this.responseHttpCode = paramInt2;
    this.receiveDataSize = paramLong6;
    this.startTime = paramLong7;
    this.readHeaderTime = paramLong8;
    this.endTime = paramLong9;
    this.errorCode = paramInt3;
    this.resultState = paramInt4;
    this.currentRetryCnt = paramByte3;
    this.via = paramString4;
    this.appId = paramString5;
    this.flag = paramString6;
  }
  
  public void readFrom(JceInputStream paramJceInputStream)
  {
    this.UUID = paramJceInputStream.readString(0, false);
    this.type = paramJceInputStream.read(this.type, 1, false);
    this.requestUrl = paramJceInputStream.readString(2, false);
    this.networkOperator = paramJceInputStream.readString(3, false);
    this.networkType = paramJceInputStream.read(this.networkType, 4, false);
    this.isWap = paramJceInputStream.read(this.isWap, 5, false);
    this.requestRanagePosition = paramJceInputStream.read(this.requestRanagePosition, 6, false);
    this.requestRanageSize = paramJceInputStream.read(this.requestRanageSize, 7, false);
    this.responseRangePosition = paramJceInputStream.read(this.responseRangePosition, 9, false);
    this.responseRangeLength = paramJceInputStream.read(this.responseRangeLength, 10, false);
    this.responseContentLength = paramJceInputStream.read(this.responseContentLength, 11, false);
    this.responseHttpCode = paramJceInputStream.read(this.responseHttpCode, 12, false);
    this.receiveDataSize = paramJceInputStream.read(this.receiveDataSize, 13, false);
    this.startTime = paramJceInputStream.read(this.startTime, 14, false);
    this.readHeaderTime = paramJceInputStream.read(this.readHeaderTime, 15, false);
    this.endTime = paramJceInputStream.read(this.endTime, 16, false);
    this.errorCode = paramJceInputStream.read(this.errorCode, 17, false);
    this.resultState = paramJceInputStream.read(this.resultState, 18, false);
    this.currentRetryCnt = paramJceInputStream.read(this.currentRetryCnt, 19, false);
    this.via = paramJceInputStream.readString(20, false);
    this.appId = paramJceInputStream.readString(21, false);
    this.flag = paramJceInputStream.readString(22, false);
  }
  
  public void writeTo(JceOutputStream paramJceOutputStream)
  {
    if (this.UUID != null) {
      paramJceOutputStream.write(this.UUID, 0);
    }
    paramJceOutputStream.write(this.type, 1);
    if (this.requestUrl != null) {
      paramJceOutputStream.write(this.requestUrl, 2);
    }
    if (this.networkOperator != null) {
      paramJceOutputStream.write(this.networkOperator, 3);
    }
    paramJceOutputStream.write(this.networkType, 4);
    paramJceOutputStream.write(this.isWap, 5);
    paramJceOutputStream.write(this.requestRanagePosition, 6);
    paramJceOutputStream.write(this.requestRanageSize, 7);
    paramJceOutputStream.write(this.responseRangePosition, 9);
    paramJceOutputStream.write(this.responseRangeLength, 10);
    paramJceOutputStream.write(this.responseContentLength, 11);
    paramJceOutputStream.write(this.responseHttpCode, 12);
    paramJceOutputStream.write(this.receiveDataSize, 13);
    paramJceOutputStream.write(this.startTime, 14);
    paramJceOutputStream.write(this.readHeaderTime, 15);
    paramJceOutputStream.write(this.endTime, 16);
    paramJceOutputStream.write(this.errorCode, 17);
    paramJceOutputStream.write(this.resultState, 18);
    paramJceOutputStream.write(this.currentRetryCnt, 19);
    if (this.via != null) {
      paramJceOutputStream.write(this.via, 20);
    }
    if (this.appId != null) {
      paramJceOutputStream.write(this.appId, 21);
    }
    if (this.flag != null) {
      paramJceOutputStream.write(this.flag, 22);
    }
  }
}
