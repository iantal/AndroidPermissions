package com.tencent.tmdownloader.internal.a;

import android.text.TextUtils;
import com.tencent.tmassistantbase.util.GlobalUtil;
import com.tencent.tmassistantbase.util.TMLog;
import com.tencent.tmdownloader.internal.b.b;
import com.tencent.tmdownloader.internal.protocol.jce.DownloadNewChunkLogInfo;
import java.io.IOException;
import java.net.SocketTimeoutException;
import java.net.URI;
import java.net.UnknownHostException;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import org.apache.http.Header;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.conn.ClientConnectionManager;
import org.apache.http.conn.ConnectTimeoutException;

public class g
{
  protected boolean a = false;
  HttpClient b = null;
  HttpGet c = null;
  protected d d = null;
  protected final byte[] e = new byte['á€€'];
  b f;
  protected final int g = GlobalUtil.getMemUUID();
  
  public g(d paramD)
  {
    this.d = paramD;
  }
  
  private void a(Throwable paramThrowable)
  {
    if (paramThrowable != null) {
      paramThrowable.printStackTrace();
    }
  }
  
  private void a(HttpResponse paramHttpResponse)
  {
    if (paramHttpResponse == null) {}
    for (;;)
    {
      return;
      if (this.d.a.equals("application/vnd.android.package-archive"))
      {
        Object localObject = null;
        paramHttpResponse = paramHttpResponse.getHeaders("Content-Disposition");
        if ((paramHttpResponse != null) && (paramHttpResponse.length > 0))
        {
          paramHttpResponse = paramHttpResponse[0].getValue();
          if ((!TextUtils.isEmpty(paramHttpResponse)) && (paramHttpResponse.contains("filename=\"")))
          {
            String str = paramHttpResponse.substring(paramHttpResponse.indexOf("filename=\"") + "filename=\"".length());
            paramHttpResponse = localObject;
            if (!TextUtils.isEmpty(str))
            {
              paramHttpResponse = str.substring(0, str.indexOf("\""));
              TMLog.i("_DownloadTask", "header file Name =" + paramHttpResponse);
            }
          }
        }
        while (!TextUtils.isEmpty(paramHttpResponse))
        {
          paramHttpResponse = c.d(c.c(paramHttpResponse));
          this.d.l = paramHttpResponse;
          return;
          paramHttpResponse = c.b(this.d.c);
          continue;
          paramHttpResponse = c.b(this.d.c);
        }
      }
    }
  }
  
  private void a(HttpResponse paramHttpResponse, DownloadNewChunkLogInfo paramDownloadNewChunkLogInfo)
  {
    int i = paramHttpResponse.getStatusLine().getStatusCode();
    TMLog.i("_DownloadTask", "httpResponseCode = " + i + " " + Thread.currentThread().getName());
    Object localObject;
    switch (i)
    {
    default: 
      throw new m(i, "HTTP response code error, code = " + i);
    case 200: 
      localObject = paramHttpResponse.getHeaders("Content-Type");
      if ((localObject != null) && (localObject.length > 0))
      {
        if (!this.d.a.equals("resource/tm.android.unknown")) {
          break label224;
        }
        localObject = c.e(this.d.l);
        this.d.l = ((String)localObject);
      }
      for (;;)
      {
        b(paramHttpResponse, paramDownloadNewChunkLogInfo);
        return;
        localObject = localObject[0].getValue();
        if ((!TextUtils.isEmpty((CharSequence)localObject)) && (((String)localObject).startsWith("text"))) {
          throw new m(708, "Return contenttype = text " + Thread.currentThread().getName());
        }
        a(paramHttpResponse);
      }
    case 206: 
      if (this.d.a.equals("resource/tm.android.unknown"))
      {
        localObject = c.e(this.d.l);
        this.d.l = ((String)localObject);
      }
      for (;;)
      {
        b(paramHttpResponse, paramDownloadNewChunkLogInfo);
        return;
        a(paramHttpResponse);
      }
    case 301: 
    case 302: 
    case 303: 
    case 307: 
      if (this.d.e > 5) {
        throw new m(709, "Redirect cnt many times.");
      }
      paramHttpResponse = paramHttpResponse.getFirstHeader("location");
      if (paramHttpResponse != null)
      {
        paramHttpResponse = paramHttpResponse.getValue();
        if (c.f(paramHttpResponse))
        {
          this.d.c = c.a(paramHttpResponse);
          if (TextUtils.isEmpty(this.d.G)) {}
          for (this.d.G = this.d.c;; paramDownloadNewChunkLogInfo.G = (paramDownloadNewChunkLogInfo.G + "|" + this.d.c))
          {
            paramHttpResponse = this.d;
            paramHttpResponse.e += 1;
            return;
            paramHttpResponse = new StringBuilder();
            paramDownloadNewChunkLogInfo = this.d;
          }
        }
        throw new m(700, "Jump url is not valid. httpResponseCode = " + i + " url: " + paramHttpResponse);
      }
      throw new m(702, "location header is null. httpResponseCode = " + i);
    case 416: 
      throw new m(i, "HTTP response code error, code = " + i);
    case 503: 
      label224:
      throw new m(i, "HTTP response code error, code = " + i);
    }
    throw new m(i, "HTTP response code error, code = " + i);
  }
  
  private void a(HttpGet paramHttpGet)
  {
    String str = c.b();
    this.d.p = str;
    if ((!TextUtils.isEmpty(str)) && ((str.contains("wap")) || ((str.contains("net")) && (this.d.d > 0)))) {
      try
      {
        int i = f.a(str);
        long l3 = this.d.j;
        if (this.d.k > 0L)
        {
          l1 = this.d.j;
          long l2 = i + l1 - 1L;
          l1 = l2;
          if (l2 < this.d.k) {}
        }
        for (long l1 = this.d.k - 1L;; l1 = i - 1)
        {
          str = "bytes=" + l3 + "-" + l1;
          paramHttpGet.addHeader("range", str);
          TMLog.d("_DownloadTask", "set range header: " + str);
          return;
        }
        str = "bytes=" + this.d.j + "-";
      }
      catch (UnsupportedOperationException paramHttpGet)
      {
        paramHttpGet.printStackTrace();
        return;
      }
    }
    paramHttpGet.addHeader("range", str);
    TMLog.d("_DownloadTask", "set range header: " + str);
  }
  
  private void a(HttpGet paramHttpGet, Map paramMap)
  {
    if ((paramHttpGet != null) && (paramMap != null) && (paramMap.size() > 0))
    {
      paramMap = paramMap.entrySet().iterator();
      while (paramMap.hasNext())
      {
        Map.Entry localEntry = (Map.Entry)paramMap.next();
        paramHttpGet.addHeader((String)localEntry.getKey(), (String)localEntry.getValue());
      }
    }
  }
  
  /* Error */
  private void b(HttpResponse paramHttpResponse, DownloadNewChunkLogInfo paramDownloadNewChunkLogInfo)
  {
    // Byte code:
    //   0: aload_1
    //   1: invokeinterface 296 1 0
    //   6: astore 9
    //   8: aload_0
    //   9: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   12: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   15: lconst_0
    //   16: lcmp
    //   17: ifne +451 -> 468
    //   20: aload_1
    //   21: invokeinterface 142 1 0
    //   26: invokeinterface 147 1 0
    //   31: sipush 200
    //   34: if_icmpne +313 -> 347
    //   37: aload_0
    //   38: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   41: aload 9
    //   43: invokeinterface 302 1 0
    //   48: invokevirtual 305	com/tencent/tmdownloader/internal/a/d:a	(J)V
    //   51: ldc 105
    //   53: new 107	java/lang/StringBuilder
    //   56: dup
    //   57: invokespecial 108	java/lang/StringBuilder:<init>	()V
    //   60: ldc_w 307
    //   63: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   66: aload_0
    //   67: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   70: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   73: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   76: invokevirtual 117	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   79: invokestatic 123	com/tencent/tmassistantbase/util/TMLog:i	(Ljava/lang/String;Ljava/lang/String;)V
    //   82: ldc 105
    //   84: new 107	java/lang/StringBuilder
    //   87: dup
    //   88: invokespecial 108	java/lang/StringBuilder:<init>	()V
    //   91: ldc_w 309
    //   94: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   97: aload_0
    //   98: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   101: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   104: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   107: invokevirtual 117	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   110: invokestatic 312	com/tencent/tmassistantbase/util/TMLog:w	(Ljava/lang/String;Ljava/lang/String;)V
    //   113: aload_0
    //   114: getfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   117: ifnonnull +28 -> 145
    //   120: aload_0
    //   121: new 316	com/tencent/tmdownloader/internal/b/b
    //   124: dup
    //   125: aload_0
    //   126: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   129: getfield 319	com/tencent/tmdownloader/internal/a/d:m	Ljava/lang/String;
    //   132: aload_0
    //   133: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   136: getfield 133	com/tencent/tmdownloader/internal/a/d:l	Ljava/lang/String;
    //   139: invokespecial 321	com/tencent/tmdownloader/internal/b/b:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   142: putfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   145: lconst_0
    //   146: lstore 6
    //   148: lload 6
    //   150: lstore 4
    //   152: aload 9
    //   154: invokeinterface 325 1 0
    //   159: astore_1
    //   160: lload 6
    //   162: lstore 4
    //   164: ldc 105
    //   166: new 107	java/lang/StringBuilder
    //   169: dup
    //   170: invokespecial 108	java/lang/StringBuilder:<init>	()V
    //   173: ldc_w 327
    //   176: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   179: aload_0
    //   180: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   183: getfield 133	com/tencent/tmdownloader/internal/a/d:l	Ljava/lang/String;
    //   186: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   189: invokevirtual 117	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   192: invokestatic 123	com/tencent/tmassistantbase/util/TMLog:i	(Ljava/lang/String;Ljava/lang/String;)V
    //   195: lconst_0
    //   196: lstore 4
    //   198: aload_1
    //   199: aload_0
    //   200: getfield 33	com/tencent/tmdownloader/internal/a/g:e	[B
    //   203: invokevirtual 333	java/io/InputStream:read	([B)I
    //   206: istore_3
    //   207: iload_3
    //   208: ifle +14 -> 222
    //   211: aload_0
    //   212: getfield 25	com/tencent/tmdownloader/internal/a/g:a	Z
    //   215: ifeq +483 -> 698
    //   218: aload_1
    //   219: invokevirtual 336	java/io/InputStream:close	()V
    //   222: aload_0
    //   223: getfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   226: ifnull +15 -> 241
    //   229: aload_0
    //   230: getfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   233: invokevirtual 338	com/tencent/tmdownloader/internal/b/b:d	()V
    //   236: aload_0
    //   237: aconst_null
    //   238: putfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   241: aload_2
    //   242: lload 4
    //   244: putfield 343	com/tencent/tmdownloader/internal/protocol/jce/DownloadNewChunkLogInfo:down_Size	J
    //   247: aload 9
    //   249: invokeinterface 347 1 0
    //   254: astore_1
    //   255: aload_1
    //   256: ifnull +1170 -> 1426
    //   259: aload_1
    //   260: invokeinterface 76 1 0
    //   265: invokestatic 82	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   268: ifne +1089 -> 1357
    //   271: aload_2
    //   272: aload_1
    //   273: invokeinterface 76 1 0
    //   278: invokevirtual 350	java/lang/String:toLowerCase	()Ljava/lang/String;
    //   281: putfield 353	com/tencent/tmdownloader/internal/protocol/jce/DownloadNewChunkLogInfo:contentType	Ljava/lang/String;
    //   284: aload_2
    //   285: getfield 353	com/tencent/tmdownloader/internal/protocol/jce/DownloadNewChunkLogInfo:contentType	Ljava/lang/String;
    //   288: ldc_w 355
    //   291: invokevirtual 91	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   294: iconst_m1
    //   295: if_icmpeq +1062 -> 1357
    //   298: aload 9
    //   300: invokeinterface 325 1 0
    //   305: astore_1
    //   306: new 357	java/io/ByteArrayOutputStream
    //   309: dup
    //   310: invokespecial 358	java/io/ByteArrayOutputStream:<init>	()V
    //   313: astore_2
    //   314: sipush 1024
    //   317: newarray byte
    //   319: astore 9
    //   321: aload_1
    //   322: aload 9
    //   324: iconst_0
    //   325: aload 9
    //   327: arraylength
    //   328: invokevirtual 361	java/io/InputStream:read	([BII)I
    //   331: istore_3
    //   332: iload_3
    //   333: ifle +1101 -> 1434
    //   336: aload_2
    //   337: aload 9
    //   339: iconst_0
    //   340: iload_3
    //   341: invokevirtual 365	java/io/ByteArrayOutputStream:write	([BII)V
    //   344: goto -23 -> 321
    //   347: aload_1
    //   348: invokeinterface 142 1 0
    //   353: invokeinterface 147 1 0
    //   358: sipush 206
    //   361: if_icmpne +63 -> 424
    //   364: aload_1
    //   365: ldc_w 367
    //   368: invokeinterface 198 2 0
    //   373: astore_1
    //   374: aload_0
    //   375: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   378: aload_1
    //   379: invokeinterface 76 1 0
    //   384: invokestatic 372	com/tencent/tmdownloader/internal/a/b:b	(Ljava/lang/String;)J
    //   387: invokevirtual 305	com/tencent/tmdownloader/internal/a/d:a	(J)V
    //   390: ldc 105
    //   392: new 107	java/lang/StringBuilder
    //   395: dup
    //   396: invokespecial 108	java/lang/StringBuilder:<init>	()V
    //   399: ldc_w 374
    //   402: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   405: aload_0
    //   406: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   409: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   412: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   415: invokevirtual 117	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   418: invokestatic 123	com/tencent/tmassistantbase/util/TMLog:i	(Ljava/lang/String;Ljava/lang/String;)V
    //   421: goto -339 -> 82
    //   424: ldc 105
    //   426: new 107	java/lang/StringBuilder
    //   429: dup
    //   430: invokespecial 108	java/lang/StringBuilder:<init>	()V
    //   433: ldc_w 376
    //   436: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   439: aload_1
    //   440: invokeinterface 142 1 0
    //   445: invokeinterface 147 1 0
    //   450: invokevirtual 152	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   453: ldc_w 378
    //   456: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   459: invokevirtual 117	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   462: invokestatic 312	com/tencent/tmassistantbase/util/TMLog:w	(Ljava/lang/String;Ljava/lang/String;)V
    //   465: goto -383 -> 82
    //   468: aload_1
    //   469: invokeinterface 142 1 0
    //   474: invokeinterface 147 1 0
    //   479: sipush 206
    //   482: if_icmpne -369 -> 113
    //   485: aload_1
    //   486: ldc_w 367
    //   489: invokeinterface 198 2 0
    //   494: astore_1
    //   495: aload_1
    //   496: invokeinterface 76 1 0
    //   501: invokestatic 381	com/tencent/tmdownloader/internal/a/b:a	(Ljava/lang/String;)Lcom/tencent/tmdownloader/internal/a/b;
    //   504: astore 10
    //   506: aload_1
    //   507: invokeinterface 76 1 0
    //   512: invokestatic 372	com/tencent/tmdownloader/internal/a/b:b	(Ljava/lang/String;)J
    //   515: lstore 4
    //   517: ldc 105
    //   519: new 107	java/lang/StringBuilder
    //   522: dup
    //   523: invokespecial 108	java/lang/StringBuilder:<init>	()V
    //   526: ldc_w 383
    //   529: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   532: lload 4
    //   534: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   537: ldc_w 385
    //   540: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   543: aload_0
    //   544: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   547: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   550: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   553: invokevirtual 117	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   556: invokestatic 312	com/tencent/tmassistantbase/util/TMLog:w	(Ljava/lang/String;Ljava/lang/String;)V
    //   559: aload 10
    //   561: invokevirtual 387	com/tencent/tmdownloader/internal/a/b:b	()J
    //   564: aload_0
    //   565: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   568: getfield 235	com/tencent/tmdownloader/internal/a/d:j	J
    //   571: lcmp
    //   572: ifeq +52 -> 624
    //   575: new 165	com/tencent/tmdownloader/internal/a/m
    //   578: dup
    //   579: sipush 706
    //   582: ldc_w 389
    //   585: invokespecial 170	com/tencent/tmdownloader/internal/a/m:<init>	(ILjava/lang/String;)V
    //   588: athrow
    //   589: astore_1
    //   590: new 165	com/tencent/tmdownloader/internal/a/m
    //   593: dup
    //   594: sipush 704
    //   597: aload_1
    //   598: invokespecial 392	com/tencent/tmdownloader/internal/a/m:<init>	(ILjava/lang/Throwable;)V
    //   601: athrow
    //   602: astore_1
    //   603: aload_0
    //   604: getfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   607: ifnull +15 -> 622
    //   610: aload_0
    //   611: getfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   614: invokevirtual 338	com/tencent/tmdownloader/internal/b/b:d	()V
    //   617: aload_0
    //   618: aconst_null
    //   619: putfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   622: aload_1
    //   623: athrow
    //   624: lload 4
    //   626: aload_0
    //   627: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   630: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   633: lcmp
    //   634: ifeq +17 -> 651
    //   637: new 165	com/tencent/tmdownloader/internal/a/m
    //   640: dup
    //   641: sipush 705
    //   644: ldc_w 394
    //   647: invokespecial 170	com/tencent/tmdownloader/internal/a/m:<init>	(ILjava/lang/String;)V
    //   650: athrow
    //   651: ldc 105
    //   653: new 107	java/lang/StringBuilder
    //   656: dup
    //   657: invokespecial 108	java/lang/StringBuilder:<init>	()V
    //   660: ldc_w 396
    //   663: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   666: aload_1
    //   667: invokevirtual 399	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   670: invokevirtual 117	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   673: invokestatic 256	com/tencent/tmassistantbase/util/TMLog:d	(Ljava/lang/String;Ljava/lang/String;)V
    //   676: aload_0
    //   677: getfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   680: ifnull -567 -> 113
    //   683: aload_0
    //   684: getfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   687: invokevirtual 338	com/tencent/tmdownloader/internal/b/b:d	()V
    //   690: aload_0
    //   691: aconst_null
    //   692: putfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   695: goto -582 -> 113
    //   698: aload_0
    //   699: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   702: getfield 235	com/tencent/tmdownloader/internal/a/d:j	J
    //   705: iload_3
    //   706: i2l
    //   707: ladd
    //   708: lstore 6
    //   710: lload 6
    //   712: aload_0
    //   713: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   716: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   719: lcmp
    //   720: ifgt +513 -> 1233
    //   723: lload 6
    //   725: aload_0
    //   726: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   729: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   732: lcmp
    //   733: ifne +301 -> 1034
    //   736: iconst_1
    //   737: istore 8
    //   739: aload_0
    //   740: getfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   743: aload_0
    //   744: getfield 33	com/tencent/tmdownloader/internal/a/g:e	[B
    //   747: iconst_0
    //   748: iload_3
    //   749: aload_0
    //   750: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   753: getfield 235	com/tencent/tmdownloader/internal/a/d:j	J
    //   756: iload 8
    //   758: invokevirtual 402	com/tencent/tmdownloader/internal/b/b:a	([BIIJZ)Z
    //   761: ifne +453 -> 1214
    //   764: invokestatic 404	com/tencent/tmdownloader/internal/b/b:e	()Ljava/lang/String;
    //   767: aload_0
    //   768: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   771: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   774: invokestatic 407	com/tencent/tmdownloader/internal/a/c:a	(Ljava/lang/String;J)Z
    //   777: ifeq +350 -> 1127
    //   780: invokestatic 409	com/tencent/tmdownloader/internal/b/b:g	()Z
    //   783: ifeq +257 -> 1040
    //   786: new 107	java/lang/StringBuilder
    //   789: dup
    //   790: invokespecial 108	java/lang/StringBuilder:<init>	()V
    //   793: ldc_w 411
    //   796: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   799: aload_0
    //   800: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   803: getfield 133	com/tencent/tmdownloader/internal/a/d:l	Ljava/lang/String;
    //   806: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   809: ldc_w 413
    //   812: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   815: aload_0
    //   816: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   819: getfield 235	com/tencent/tmdownloader/internal/a/d:j	J
    //   822: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   825: ldc_w 415
    //   828: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   831: iload_3
    //   832: invokevirtual 152	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   835: ldc_w 417
    //   838: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   841: aload_0
    //   842: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   845: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   848: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   851: invokevirtual 117	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   854: astore_1
    //   855: ldc 105
    //   857: aload_1
    //   858: invokestatic 312	com/tencent/tmassistantbase/util/TMLog:w	(Ljava/lang/String;Ljava/lang/String;)V
    //   861: new 165	com/tencent/tmdownloader/internal/a/m
    //   864: dup
    //   865: sipush 703
    //   868: aload_1
    //   869: invokespecial 170	com/tencent/tmdownloader/internal/a/m:<init>	(ILjava/lang/String;)V
    //   872: athrow
    //   873: astore_1
    //   874: lload 4
    //   876: lstore 6
    //   878: lload 6
    //   880: lstore 4
    //   882: aload_1
    //   883: invokevirtual 418	java/net/SocketException:printStackTrace	()V
    //   886: lload 6
    //   888: lstore 4
    //   890: new 165	com/tencent/tmdownloader/internal/a/m
    //   893: dup
    //   894: sipush 605
    //   897: aload_1
    //   898: invokespecial 392	com/tencent/tmdownloader/internal/a/m:<init>	(ILjava/lang/Throwable;)V
    //   901: athrow
    //   902: astore_1
    //   903: aload_0
    //   904: getfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   907: ifnull +15 -> 922
    //   910: aload_0
    //   911: getfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   914: invokevirtual 338	com/tencent/tmdownloader/internal/b/b:d	()V
    //   917: aload_0
    //   918: aconst_null
    //   919: putfield 314	com/tencent/tmdownloader/internal/a/g:f	Lcom/tencent/tmdownloader/internal/b/b;
    //   922: aload_2
    //   923: lload 4
    //   925: putfield 343	com/tencent/tmdownloader/internal/protocol/jce/DownloadNewChunkLogInfo:down_Size	J
    //   928: aload 9
    //   930: invokeinterface 347 1 0
    //   935: astore 10
    //   937: aload 10
    //   939: ifnull +419 -> 1358
    //   942: aload 10
    //   944: invokeinterface 76 1 0
    //   949: invokestatic 82	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   952: ifne +392 -> 1344
    //   955: aload_2
    //   956: aload 10
    //   958: invokeinterface 76 1 0
    //   963: invokevirtual 350	java/lang/String:toLowerCase	()Ljava/lang/String;
    //   966: putfield 353	com/tencent/tmdownloader/internal/protocol/jce/DownloadNewChunkLogInfo:contentType	Ljava/lang/String;
    //   969: aload_2
    //   970: getfield 353	com/tencent/tmdownloader/internal/protocol/jce/DownloadNewChunkLogInfo:contentType	Ljava/lang/String;
    //   973: ldc_w 355
    //   976: invokevirtual 91	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   979: iconst_m1
    //   980: if_icmpeq +364 -> 1344
    //   983: aload 9
    //   985: invokeinterface 325 1 0
    //   990: astore_2
    //   991: new 357	java/io/ByteArrayOutputStream
    //   994: dup
    //   995: invokespecial 358	java/io/ByteArrayOutputStream:<init>	()V
    //   998: astore 9
    //   1000: sipush 1024
    //   1003: newarray byte
    //   1005: astore 10
    //   1007: aload_2
    //   1008: aload 10
    //   1010: iconst_0
    //   1011: aload 10
    //   1013: arraylength
    //   1014: invokevirtual 361	java/io/InputStream:read	([BII)I
    //   1017: istore_3
    //   1018: iload_3
    //   1019: ifle +349 -> 1368
    //   1022: aload 9
    //   1024: aload 10
    //   1026: iconst_0
    //   1027: iload_3
    //   1028: invokevirtual 365	java/io/ByteArrayOutputStream:write	([BII)V
    //   1031: goto -24 -> 1007
    //   1034: iconst_0
    //   1035: istore 8
    //   1037: goto -298 -> 739
    //   1040: new 107	java/lang/StringBuilder
    //   1043: dup
    //   1044: invokespecial 108	java/lang/StringBuilder:<init>	()V
    //   1047: ldc_w 420
    //   1050: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1053: aload_0
    //   1054: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   1057: getfield 133	com/tencent/tmdownloader/internal/a/d:l	Ljava/lang/String;
    //   1060: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1063: ldc_w 413
    //   1066: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1069: aload_0
    //   1070: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   1073: getfield 235	com/tencent/tmdownloader/internal/a/d:j	J
    //   1076: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1079: ldc_w 415
    //   1082: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1085: iload_3
    //   1086: invokevirtual 152	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1089: ldc_w 417
    //   1092: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1095: aload_0
    //   1096: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   1099: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   1102: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1105: invokevirtual 117	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1108: astore_1
    //   1109: ldc 105
    //   1111: aload_1
    //   1112: invokestatic 312	com/tencent/tmassistantbase/util/TMLog:w	(Ljava/lang/String;Ljava/lang/String;)V
    //   1115: new 165	com/tencent/tmdownloader/internal/a/m
    //   1118: dup
    //   1119: sipush 711
    //   1122: aload_1
    //   1123: invokespecial 170	com/tencent/tmdownloader/internal/a/m:<init>	(ILjava/lang/String;)V
    //   1126: athrow
    //   1127: new 107	java/lang/StringBuilder
    //   1130: dup
    //   1131: invokespecial 108	java/lang/StringBuilder:<init>	()V
    //   1134: ldc_w 422
    //   1137: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1140: aload_0
    //   1141: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   1144: getfield 133	com/tencent/tmdownloader/internal/a/d:l	Ljava/lang/String;
    //   1147: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1150: ldc_w 413
    //   1153: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1156: aload_0
    //   1157: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   1160: getfield 235	com/tencent/tmdownloader/internal/a/d:j	J
    //   1163: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1166: ldc_w 415
    //   1169: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1172: iload_3
    //   1173: invokevirtual 152	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1176: ldc_w 417
    //   1179: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1182: aload_0
    //   1183: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   1186: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   1189: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1192: invokevirtual 117	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1195: astore_1
    //   1196: ldc 105
    //   1198: aload_1
    //   1199: invokestatic 312	com/tencent/tmassistantbase/util/TMLog:w	(Ljava/lang/String;Ljava/lang/String;)V
    //   1202: new 165	com/tencent/tmdownloader/internal/a/m
    //   1205: dup
    //   1206: sipush 710
    //   1209: aload_1
    //   1210: invokespecial 170	com/tencent/tmdownloader/internal/a/m:<init>	(ILjava/lang/String;)V
    //   1213: athrow
    //   1214: aload_0
    //   1215: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   1218: iload_3
    //   1219: i2l
    //   1220: invokevirtual 424	com/tencent/tmdownloader/internal/a/d:b	(J)V
    //   1223: lload 4
    //   1225: iload_3
    //   1226: i2l
    //   1227: ladd
    //   1228: lstore 4
    //   1230: goto -1032 -> 198
    //   1233: ldc 105
    //   1235: new 107	java/lang/StringBuilder
    //   1238: dup
    //   1239: invokespecial 108	java/lang/StringBuilder:<init>	()V
    //   1242: ldc_w 426
    //   1245: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1248: iload_3
    //   1249: invokevirtual 152	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1252: ldc_w 428
    //   1255: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1258: ldc_w 430
    //   1261: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1264: aload_0
    //   1265: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   1268: getfield 235	com/tencent/tmdownloader/internal/a/d:j	J
    //   1271: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1274: ldc_w 428
    //   1277: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1280: ldc_w 432
    //   1283: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1286: aload_0
    //   1287: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   1290: getfield 238	com/tencent/tmdownloader/internal/a/d:k	J
    //   1293: invokevirtual 243	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1296: ldc_w 428
    //   1299: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1302: ldc_w 434
    //   1305: invokevirtual 114	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1308: iconst_0
    //   1309: invokevirtual 437	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   1312: invokevirtual 117	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1315: invokestatic 312	com/tencent/tmassistantbase/util/TMLog:w	(Ljava/lang/String;Ljava/lang/String;)V
    //   1318: new 165	com/tencent/tmdownloader/internal/a/m
    //   1321: dup
    //   1322: sipush 703
    //   1325: ldc_w 439
    //   1328: invokespecial 170	com/tencent/tmdownloader/internal/a/m:<init>	(ILjava/lang/String;)V
    //   1331: athrow
    //   1332: aload_0
    //   1333: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   1336: aload 9
    //   1338: invokevirtual 442	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   1341: putfield 445	com/tencent/tmdownloader/internal/a/d:H	Ljava/lang/String;
    //   1344: aload_1
    //   1345: athrow
    //   1346: aload_0
    //   1347: getfield 31	com/tencent/tmdownloader/internal/a/g:d	Lcom/tencent/tmdownloader/internal/a/d;
    //   1350: aload_2
    //   1351: invokevirtual 442	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   1354: putfield 445	com/tencent/tmdownloader/internal/a/d:H	Ljava/lang/String;
    //   1357: return
    //   1358: aload_2
    //   1359: ldc_w 447
    //   1362: putfield 353	com/tencent/tmdownloader/internal/protocol/jce/DownloadNewChunkLogInfo:contentType	Ljava/lang/String;
    //   1365: goto -21 -> 1344
    //   1368: new 449	java/io/BufferedReader
    //   1371: dup
    //   1372: new 451	java/io/InputStreamReader
    //   1375: dup
    //   1376: new 453	java/io/ByteArrayInputStream
    //   1379: dup
    //   1380: aload 9
    //   1382: invokevirtual 457	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   1385: invokespecial 460	java/io/ByteArrayInputStream:<init>	([B)V
    //   1388: invokespecial 463	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   1391: invokespecial 466	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   1394: astore_2
    //   1395: new 441	java/lang/StringBuffer
    //   1398: dup
    //   1399: invokespecial 467	java/lang/StringBuffer:<init>	()V
    //   1402: astore 9
    //   1404: aload_2
    //   1405: invokevirtual 470	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   1408: astore 10
    //   1410: aload 10
    //   1412: ifnull -80 -> 1332
    //   1415: aload 9
    //   1417: aload 10
    //   1419: invokevirtual 473	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   1422: pop
    //   1423: goto -19 -> 1404
    //   1426: aload_2
    //   1427: ldc_w 447
    //   1430: putfield 353	com/tencent/tmdownloader/internal/protocol/jce/DownloadNewChunkLogInfo:contentType	Ljava/lang/String;
    //   1433: return
    //   1434: new 449	java/io/BufferedReader
    //   1437: dup
    //   1438: new 451	java/io/InputStreamReader
    //   1441: dup
    //   1442: new 453	java/io/ByteArrayInputStream
    //   1445: dup
    //   1446: aload_2
    //   1447: invokevirtual 457	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   1450: invokespecial 460	java/io/ByteArrayInputStream:<init>	([B)V
    //   1453: invokespecial 463	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   1456: invokespecial 466	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   1459: astore_1
    //   1460: new 441	java/lang/StringBuffer
    //   1463: dup
    //   1464: invokespecial 467	java/lang/StringBuffer:<init>	()V
    //   1467: astore_2
    //   1468: aload_1
    //   1469: invokevirtual 470	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   1472: astore 9
    //   1474: aload 9
    //   1476: ifnull -130 -> 1346
    //   1479: aload_2
    //   1480: aload 9
    //   1482: invokevirtual 473	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   1485: pop
    //   1486: goto -18 -> 1468
    //   1489: astore_1
    //   1490: goto -612 -> 878
    //   1493: astore_1
    //   1494: goto -591 -> 903
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	1497	0	this	g
    //   0	1497	1	paramHttpResponse	HttpResponse
    //   0	1497	2	paramDownloadNewChunkLogInfo	DownloadNewChunkLogInfo
    //   206	1043	3	i	int
    //   150	1079	4	l1	long
    //   146	741	6	l2	long
    //   737	299	8	bool	boolean
    //   6	1475	9	localObject1	Object
    //   504	914	10	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   485	589	589	java/lang/Throwable
    //   624	651	589	java/lang/Throwable
    //   651	676	589	java/lang/Throwable
    //   485	589	602	finally
    //   590	602	602	finally
    //   624	651	602	finally
    //   651	676	602	finally
    //   198	207	873	java/net/SocketException
    //   211	222	873	java/net/SocketException
    //   698	736	873	java/net/SocketException
    //   739	873	873	java/net/SocketException
    //   1040	1127	873	java/net/SocketException
    //   1127	1214	873	java/net/SocketException
    //   1214	1223	873	java/net/SocketException
    //   1233	1332	873	java/net/SocketException
    //   152	160	902	finally
    //   164	195	902	finally
    //   882	886	902	finally
    //   890	902	902	finally
    //   152	160	1489	java/net/SocketException
    //   164	195	1489	java/net/SocketException
    //   198	207	1493	finally
    //   211	222	1493	finally
    //   698	736	1493	finally
    //   739	873	1493	finally
    //   1040	1127	1493	finally
    //   1127	1214	1493	finally
    //   1214	1223	1493	finally
    //   1233	1332	1493	finally
  }
  
  public int a()
  {
    return this.g;
  }
  
  public void a(String paramString)
  {
    this.d.g = true;
    this.d.a(2);
    if (0L == this.d.x) {
      this.d.x = System.currentTimeMillis();
    }
    paramString = null;
    Object localObject1 = null;
    i = 1;
    if (i != 0)
    {
      paramString = com.tencent.tmdownloader.internal.logreport.d.h().a((byte)0);
      paramString.taskId = this.d.f;
      paramString.downUrl = c();
      paramString.finalDownloadUrl = this.d.c;
      paramString.jumpUrl = this.d.G;
      if (!this.a) {}
    }
    else
    {
      if (paramString != null)
      {
        TMLog.i("_DownloadTask", "lastChunkLogData, addDownloadNewChunkLogData ");
        paramString.taskResult = this.d.o;
        paramString.result = ((byte)this.d.i);
        com.tencent.tmdownloader.internal.logreport.d.h().a(paramString);
      }
      if (!this.a)
      {
        if (!this.d.a()) {
          break label1782;
        }
        this.d.a(4);
      }
    }
    for (;;)
    {
      TMLog.i("_DownloadTask", "download finished, finalstatus: " + this.d.i + " errCode: " + this.d.o);
      this.d.g = false;
      return;
      try
      {
        this.b = k.a();
        k.a(this.b);
        this.c = new HttpGet();
        this.c.setURI(new URI(this.d.c));
        a(this.c, this.d.r);
        a(this.c);
        TMLog.i("_DownloadTask", "start httpGet " + Thread.currentThread().getName());
        HttpResponse localHttpResponse = this.b.execute(this.c);
        if (localHttpResponse == null) {
          throw new m(701, "response is null! " + Thread.currentThread().getName());
        }
      }
      catch (ConnectTimeoutException localConnectTimeoutException)
      {
        localConnectTimeoutException = localConnectTimeoutException;
        localConnectTimeoutException.printStackTrace();
        bool = this.d.b();
        if (bool) {}
        for (;;)
        {
          try
          {
            localObject6 = this.d;
            ((d)localObject6).d += 1;
          }
          finally
          {
            Object localObject6;
            int j;
            Object localObject2;
            d localD;
            Object localObject7;
            Object localObject3;
            i = 1;
            continue;
            Object localObject5 = localObject7;
            continue;
          }
          try
          {
            Thread.sleep(5000L);
            j = 1;
          }
          catch (InterruptedException localInterruptedException1)
          {
            this.d.o = 600;
            j = 0;
            continue;
          }
          if (this.c != null)
          {
            if (!this.c.isAborted()) {
              this.c.abort();
            }
            this.c = null;
          }
          if (this.b != null)
          {
            this.b.getConnectionManager().shutdown();
            this.b = null;
          }
          if (this.f != null)
          {
            this.f.d();
            this.f = null;
          }
          localObject6 = localObject1;
          i = j;
          if (j != 1) {
            continue;
          }
          localObject6 = localObject1;
          i = j;
          if (paramString == null) {
            continue;
          }
          localObject6 = localObject1;
          i = j;
          if (paramString.down_Size <= 0L) {
            continue;
          }
          paramString.taskResult = this.d.o;
          paramString.result = ((byte)this.d.i);
          com.tencent.tmdownloader.internal.logreport.d.h().a(paramString);
          i = j;
          paramString = null;
          break;
          a((HttpResponse)localObject6, paramString);
          bool = this.d.a();
          if (!bool)
          {
            j = 1;
            if (this.c != null)
            {
              if (!this.c.isAborted()) {
                this.c.abort();
              }
              this.c = null;
            }
            if (this.b != null)
            {
              this.b.getConnectionManager().shutdown();
              this.b = null;
            }
            if (this.f != null)
            {
              this.f.d();
              this.f = null;
            }
            localObject6 = localObject1;
            i = j;
            if (j != 1) {
              continue;
            }
            localObject6 = localObject1;
            i = j;
            if (paramString == null) {
              continue;
            }
            localObject6 = localObject1;
            i = j;
            if (paramString.down_Size <= 0L) {
              continue;
            }
            paramString.taskResult = this.d.o;
            paramString.result = ((byte)this.d.i);
            com.tencent.tmdownloader.internal.logreport.d.h().a(paramString);
            i = j;
          }
          else
          {
            j = 0;
            continue;
            this.d.o = 601;
            localObject2 = localObject6;
            j = 0;
          }
        }
      }
      catch (SocketTimeoutException localSocketTimeoutException)
      {
        localSocketTimeoutException = localSocketTimeoutException;
        localSocketTimeoutException.printStackTrace();
        bool = this.d.b();
        if (bool)
        {
          localD = this.d;
          localD.d += 1;
        }
        for (;;)
        {
          try
          {
            Thread.sleep(5000L);
            j = 1;
          }
          catch (InterruptedException localInterruptedException2)
          {
            this.d.o = 600;
            localObject3 = localObject7;
            j = 0;
            continue;
          }
          if (this.c != null)
          {
            if (!this.c.isAborted()) {
              this.c.abort();
            }
            this.c = null;
          }
          if (this.b != null)
          {
            this.b.getConnectionManager().shutdown();
            this.b = null;
          }
          if (this.f != null)
          {
            this.f.d();
            this.f = null;
          }
          localObject7 = localObject2;
          i = j;
          if (j != 1) {
            break label1806;
          }
          localObject7 = localObject2;
          i = j;
          if (paramString == null) {
            break label1806;
          }
          localObject7 = localObject2;
          i = j;
          if (paramString.down_Size <= 0L) {
            break label1806;
          }
          paramString.taskResult = this.d.o;
          paramString.result = ((byte)this.d.i);
          com.tencent.tmdownloader.internal.logreport.d.h().a(paramString);
          i = j;
          break;
          this.d.o = 602;
          localObject3 = localObject7;
          j = 0;
        }
      }
      catch (UnknownHostException localUnknownHostException)
      {
        for (;;)
        {
          localUnknownHostException = localUnknownHostException;
          localUnknownHostException.printStackTrace();
          this.d.o = 603;
          if (this.c != null)
          {
            if (!this.c.isAborted()) {
              this.c.abort();
            }
            this.c = null;
          }
          if (this.b != null)
          {
            this.b.getConnectionManager().shutdown();
            this.b = null;
          }
          if (this.f != null)
          {
            this.f.d();
            this.f = null;
          }
          i = 0;
        }
      }
      catch (InterruptedException localInterruptedException3)
      {
        for (;;)
        {
          localInterruptedException3 = localInterruptedException3;
          localInterruptedException3.printStackTrace();
          this.d.o = 600;
          if (this.c != null)
          {
            if (!this.c.isAborted()) {
              this.c.abort();
            }
            this.c = null;
          }
          if (this.b != null)
          {
            this.b.getConnectionManager().shutdown();
            this.b = null;
          }
          if (this.f != null)
          {
            this.f.d();
            this.f = null;
          }
          i = 0;
        }
      }
      catch (IOException localIOException)
      {
        for (;;)
        {
          localIOException = localIOException;
          localIOException.printStackTrace();
          this.d.o = 606;
          if (this.c != null)
          {
            if (!this.c.isAborted()) {
              this.c.abort();
            }
            this.c = null;
          }
          if (this.b != null)
          {
            this.b.getConnectionManager().shutdown();
            this.b = null;
          }
          if (this.f != null)
          {
            this.f.d();
            this.f = null;
          }
          i = 0;
        }
      }
      catch (m localM)
      {
        boolean bool;
        localM = localM;
        localM.printStackTrace();
        this.d.o = localM.a;
        if (704 == localM.a)
        {
          this.d.a(0L);
          new b(this.d.m, this.d.l).a();
          bool = this.d.b();
          if (bool)
          {
            localObject7 = this.d;
            ((d)localObject7).d += 1;
            i = 1;
          }
        }
        for (j = i;; j = 0)
        {
          if (this.c != null)
          {
            if (!this.c.isAborted()) {
              this.c.abort();
            }
            this.c = null;
          }
          if (this.b != null)
          {
            this.b.getConnectionManager().shutdown();
            this.b = null;
          }
          if (this.f != null)
          {
            this.f.d();
            this.f = null;
          }
          localObject7 = localM;
          i = j;
          if (j != 1) {
            break label1806;
          }
          localObject7 = localM;
          i = j;
          if (paramString == null) {
            break label1806;
          }
          localObject7 = localM;
          i = j;
          if (paramString.down_Size <= 0L) {
            break label1806;
          }
          paramString.taskResult = this.d.o;
          paramString.result = ((byte)this.d.i);
          com.tencent.tmdownloader.internal.logreport.d.h().a(paramString);
          i = j;
          break;
          i = 0;
          break label1402;
        }
      }
      catch (Throwable localThrowable1)
      {
        for (;;)
        {
          label1402:
          localThrowable1 = localThrowable1;
          localThrowable1.printStackTrace();
          this.d.o = 604;
          if (this.c != null)
          {
            if (!this.c.isAborted()) {
              this.c.abort();
            }
            this.c = null;
          }
          if (this.b != null)
          {
            this.b.getConnectionManager().shutdown();
            this.b = null;
          }
          if (this.f != null)
          {
            this.f.d();
            this.f = null;
          }
          i = 0;
        }
      }
      finally {}
      if (this.c != null)
      {
        if (!this.c.isAborted()) {
          this.c.abort();
        }
        this.c = null;
      }
      if (this.b != null)
      {
        this.b.getConnectionManager().shutdown();
        this.b = null;
      }
      if (this.f != null)
      {
        this.f.d();
        this.f = null;
      }
      if ((i == 1) && (paramString != null) && (paramString.down_Size > 0L))
      {
        paramString.taskResult = this.d.o;
        paramString.result = ((byte)this.d.i);
        com.tencent.tmdownloader.internal.logreport.d.h().a(paramString);
      }
      throw localThrowable2;
      label1782:
      this.d.a(5);
      a(localThrowable2);
    }
  }
  
  public void b()
  {
    TMLog.i("_DownloadTask", "url: " + this.d.b);
    this.a = true;
    if ((this.c != null) && (!this.c.isAborted())) {
      this.c.abort();
    }
  }
  
  public String c()
  {
    return this.d.b;
  }
  
  public int d()
  {
    return this.d.n;
  }
}
