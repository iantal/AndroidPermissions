package com.tencent.map.b;

import android.content.Context;
import android.telephony.CellLocation;
import android.telephony.NeighboringCellInfo;
import android.telephony.PhoneStateListener;
import android.telephony.TelephonyManager;
import android.telephony.gsm.GsmCellLocation;
import java.lang.reflect.Method;
import java.util.LinkedList;
import java.util.List;

public final class d
{
  private Context a = null;
  private TelephonyManager b = null;
  private a c = null;
  private c d = null;
  private b e = null;
  private boolean f = false;
  private List<NeighboringCellInfo> g = new LinkedList();
  private byte[] h = new byte[0];
  private byte[] i = new byte[0];
  private boolean j = false;
  
  public d() {}
  
  private int a(int paramInt)
  {
    String str = this.b.getNetworkOperator();
    if ((str != null) && (str.length() >= 3)) {}
    int k;
    for (;;)
    {
      try
      {
        k = Integer.valueOf(str.substring(0, 3)).intValue();
        if ((paramInt != 2) || (k != -1)) {
          break;
        }
        return 0;
      }
      catch (Exception localException) {}
      k = -1;
    }
    return k;
  }
  
  public final void a()
  {
    synchronized (this.h)
    {
      if (!this.f) {
        return;
      }
      if (this.b != null)
      {
        a localA = this.c;
        if (localA == null) {}
      }
    }
    try
    {
      this.b.listen(this.c, 0);
      this.f = false;
      return;
      localObject = finally;
      throw localObject;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        this.f = false;
      }
    }
  }
  
  public final boolean a(Context paramContext, c paramC)
  {
    synchronized (this.h)
    {
      if (this.f) {
        return true;
      }
      if ((paramContext == null) || (paramC == null)) {
        return false;
      }
      this.a = paramContext;
      this.d = paramC;
      try
      {
        this.b = ((TelephonyManager)this.a.getSystemService("phone"));
        paramContext = this.b;
        if (paramContext == null) {
          return false;
        }
        int k = this.b.getPhoneType();
        this.c = new a(a(k), k);
        paramContext = this.c;
        if (paramContext == null) {
          return false;
        }
        this.b.listen(this.c, 18);
        this.f = true;
        return this.f;
      }
      catch (Exception paramContext)
      {
        return false;
      }
    }
  }
  
  public final List<NeighboringCellInfo> b()
  {
    LinkedList localLinkedList = null;
    synchronized (this.i)
    {
      if (this.g != null)
      {
        localLinkedList = new LinkedList();
        localLinkedList.addAll(this.g);
      }
      return localLinkedList;
    }
  }
  
  public final class a
    extends PhoneStateListener
  {
    private int a = 0;
    private int b = 0;
    private int c = 0;
    private int d = 0;
    private int e = 0;
    private int f = -1;
    private int g = Integer.MAX_VALUE;
    private int h = Integer.MAX_VALUE;
    private Method i = null;
    private Method j = null;
    private Method k = null;
    private Method l = null;
    private Method m = null;
    
    public a(int paramInt1, int paramInt2)
    {
      this.b = paramInt1;
      this.a = paramInt2;
    }
    
    public final void onCellLocationChanged(CellLocation paramCellLocation)
    {
      this.f = -1;
      this.e = -1;
      this.d = -1;
      this.c = -1;
      if (paramCellLocation != null) {
        switch (this.a)
        {
        }
      }
      for (;;)
      {
        d.a(d.this, new d.b(d.this, this.a, this.b, this.c, this.d, this.e, this.f, this.g, this.h));
        if (d.a(d.this) != null) {
          d.a(d.this).a(d.b(d.this));
        }
        return;
        for (;;)
        {
          try
          {
            localObject = (GsmCellLocation)paramCellLocation;
            paramCellLocation = (CellLocation)localObject;
          }
          catch (Exception paramCellLocation)
          {
            label234:
            paramCellLocation = null;
          }
          for (;;)
          {
            try
            {
              if (((GsmCellLocation)localObject).getLac() <= 0)
              {
                paramCellLocation = (CellLocation)localObject;
                if (((GsmCellLocation)localObject).getCid() <= 0) {
                  paramCellLocation = (GsmCellLocation)d.d(d.this).getCellLocation();
                }
              }
              i1 = 1;
              if ((i1 == 0) || (paramCellLocation == null)) {
                break;
              }
              localObject = d.d(d.this).getNetworkOperator();
              if (localObject == null) {}
            }
            catch (Exception paramCellLocation)
            {
              paramCellLocation = (CellLocation)localObject;
              continue;
            }
            try
            {
              if (((String)localObject).length() > 3) {
                this.c = Integer.valueOf(((String)localObject).substring(3)).intValue();
              }
              this.d = paramCellLocation.getLac();
              this.e = paramCellLocation.getCid();
            }
            catch (Exception paramCellLocation)
            {
              this.e = -1;
              this.d = -1;
              this.c = -1;
              break label234;
            }
          }
          d.c(d.this);
          break;
          int i1 = 0;
        }
        if (paramCellLocation != null) {
          try
          {
            if (this.i == null)
            {
              this.i = Class.forName("android.telephony.cdma.CdmaCellLocation").getMethod("getBaseStationId", new Class[0]);
              this.j = Class.forName("android.telephony.cdma.CdmaCellLocation").getMethod("getSystemId", new Class[0]);
              this.k = Class.forName("android.telephony.cdma.CdmaCellLocation").getMethod("getNetworkId", new Class[0]);
              this.l = Class.forName("android.telephony.cdma.CdmaCellLocation").getMethod("getBaseStationLatitude", new Class[0]);
              this.m = Class.forName("android.telephony.cdma.CdmaCellLocation").getMethod("getBaseStationLongitude", new Class[0]);
            }
            this.c = ((Integer)this.j.invoke(paramCellLocation, new Object[0])).intValue();
            this.d = ((Integer)this.k.invoke(paramCellLocation, new Object[0])).intValue();
            this.e = ((Integer)this.i.invoke(paramCellLocation, new Object[0])).intValue();
            this.g = ((Integer)this.l.invoke(paramCellLocation, new Object[0])).intValue();
            this.h = ((Integer)this.m.invoke(paramCellLocation, new Object[0])).intValue();
          }
          catch (Exception paramCellLocation)
          {
            this.e = -1;
            this.d = -1;
            this.c = -1;
            this.g = Integer.MAX_VALUE;
            this.h = Integer.MAX_VALUE;
          }
        }
      }
    }
    
    public final void onSignalStrengthChanged(int paramInt)
    {
      if (this.a == 1) {
        d.c(d.this);
      }
      if (Math.abs(paramInt - (this.f + 113) / 2) > 3)
      {
        if (this.f != -1) {
          break label52;
        }
        this.f = ((paramInt << 1) - 113);
      }
      label52:
      do
      {
        return;
        this.f = ((paramInt << 1) - 113);
        d.a(d.this, new d.b(d.this, this.a, this.b, this.c, this.d, this.e, this.f, this.g, this.h));
      } while (d.a(d.this) == null);
      d.a(d.this).a(d.b(d.this));
    }
  }
  
  public final class b
    implements Cloneable
  {
    public int a = 0;
    public int b = 0;
    public int c = 0;
    public int d = 0;
    public int e = 0;
    public int f = 0;
    public int g = Integer.MAX_VALUE;
    public int h = Integer.MAX_VALUE;
    
    public b(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8)
    {
      this.a = paramInt1;
      this.b = paramInt2;
      this.c = paramInt3;
      this.d = paramInt4;
      this.e = paramInt5;
      this.f = paramInt6;
      this.g = paramInt7;
      this.h = paramInt8;
    }
    
    public final Object clone()
    {
      try
      {
        b localB = (b)super.clone();
        return localB;
      }
      catch (Exception localException) {}
      return null;
    }
  }
  
  public static abstract interface c
  {
    public abstract void a(d.b paramB);
  }
}
