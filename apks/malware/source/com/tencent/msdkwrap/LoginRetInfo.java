package com.tencent.msdkwrap;

import android.util.Log;
import com.tencent.msdk.api.LoginRet;
import com.tencent.msdk.api.TokenRet;
import java.util.Iterator;
import java.util.Vector;

public class LoginRetInfo
{
  private static LoginRetInfo m_Instance = null;
  public String accessToken = "";
  public int flag = 0;
  public int nLevel = 0;
  public String openid = "";
  public String payToken = "";
  public String pf = "";
  public String pfKey = "";
  public int platform = 0;
  public String refreshToken = "";
  public String userid = "";
  
  public LoginRetInfo() {}
  
  public static LoginRetInfo CreateFromLoginRet(LoginRet paramLoginRet)
  {
    if (m_Instance == null) {
      m_Instance = new LoginRetInfo();
    }
    m_Instance.flag = paramLoginRet.flag;
    m_Instance.openid = paramLoginRet.open_id;
    m_Instance.pf = paramLoginRet.pf;
    m_Instance.pfKey = paramLoginRet.pf_key;
    m_Instance.platform = paramLoginRet.platform;
    m_Instance.userid = paramLoginRet.user_id;
    paramLoginRet = paramLoginRet.token.iterator();
    for (;;)
    {
      if (!paramLoginRet.hasNext())
      {
        Log.d("LoginRetInfo.CreateFromLoginRet", "m_Instance.flag = " + m_Instance.flag);
        Log.d("LoginRetInfo.CreateFromLoginRet", "m_Instance.openid = " + m_Instance.openid);
        Log.d("LoginRetInfo.CreateFromLoginRet", "m_Instance.pf = " + m_Instance.pf);
        Log.d("LoginRetInfo.CreateFromLoginRet", "m_Instance.pfKey = " + m_Instance.pfKey);
        Log.d("LoginRetInfo.CreateFromLoginRet", "m_Instance.platform = " + m_Instance.platform);
        Log.d("LoginRetInfo.CreateFromLoginRet", "m_Instance.userid = " + m_Instance.userid);
        Log.d("LoginRetInfo.CreateFromLoginRet", "m_Instance.payToken = " + m_Instance.payToken);
        return m_Instance;
      }
      TokenRet localTokenRet = (TokenRet)paramLoginRet.next();
      switch (localTokenRet.type)
      {
      case 4: 
      default: 
        break;
      case 1: 
        m_Instance.accessToken = localTokenRet.value;
        break;
      case 3: 
        m_Instance.payToken = localTokenRet.value;
        break;
      case 5: 
        m_Instance.refreshToken = localTokenRet.value;
        break;
      case 2: 
        m_Instance.payToken = localTokenRet.value;
      }
    }
  }
  
  public static LoginRetInfo GetInstance()
  {
    if (m_Instance == null) {
      m_Instance = new LoginRetInfo();
    }
    return m_Instance;
  }
}
