package com.tencent.msdkwrap;

import android.app.Activity;
import android.graphics.BitmapFactory;
import android.util.Log;
import android.widget.Toast;
import com.tencent.mapserialize.MapSerializer;
import com.tencent.msdk.api.LoginRet;
import com.tencent.msdk.api.MsdkBaseInfo;
import com.tencent.msdk.api.ShareRet;
import com.tencent.msdk.api.WGPlatform;
import com.tencent.msdk.api.WakeupRet;
import com.tencent.msdk.api.eQQScene;
import com.tencent.msdk.api.eWechatScene;
import com.tencent.msdk.consts.EPlatform;
import com.tencent.msdk.qq.ApiName;
import com.tencent.msdk.tools.CommonUtil;
import com.tencent.msdk.tools.Logger;
import java.io.File;
import java.io.FileInputStream;
import java.util.HashMap;
import java.util.Vector;

public class MSDKWrapper
{
  public static boolean bEnableInput = false;
  public static LoginRetInfo loginRetInfo;
  public static Activity mainActivity;
  public static int platform = EPlatform.ePlatform_None.val();
  public static WakeupRet wakeupRet;
  
  public MSDKWrapper() {}
  
  public static void AddGameFriendToQQ(String paramString1, String paramString2, String paramString3)
  {
    WGPlatform.WGAddGameFriendToQQ(paramString1, paramString2, paramString3);
  }
  
  public static void BindQQGroup(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    WGPlatform.WGBindQQGroup(paramString1, paramString2, paramString3, paramString4);
  }
  
  public static boolean CheckIsApiSupport_SharePhoto_QQ()
  {
    return WGPlatform.WGCheckApiSupport(ApiName.WGSendToQQWithPhoto);
  }
  
  public static void CleanLocationInfo()
  {
    WGPlatform.WGCleanLocation();
  }
  
  public static void EnableInput(boolean paramBoolean)
  {
    bEnableInput = paramBoolean;
  }
  
  public static void Feedback(String paramString1, String paramString2)
  {
    WGPlatform.WGFeedback(paramString1, paramString2);
  }
  
  public static boolean GetAccountInfo_QQ()
  {
    return WGPlatform.WGQueryQQMyInfo();
  }
  
  public static boolean GetAccountInfo_WX()
  {
    return WGPlatform.WGQueryWXMyInfo();
  }
  
  public static String GetChannelID()
  {
    Logger.d("GetChannelID begin");
    String str = WGPlatform.WGGetChannelId();
    Logger.d("GetChannelID end : " + str);
    return str;
  }
  
  public static boolean GetFriendList_QQ()
  {
    return WGPlatform.WGQueryQQGameFriendsInfo();
  }
  
  public static boolean GetFriendList_WX()
  {
    return WGPlatform.WGQueryWXGameFriendsInfo();
  }
  
  public static boolean GetIsPlatformInstalled(int paramInt)
  {
    boolean bool = false;
    if (paramInt == EPlatform.ePlatform_Weixin.val()) {
      bool = WGPlatform.WGIsPlatformInstalled(EPlatform.ePlatform_Weixin);
    }
    while (paramInt != EPlatform.ePlatform_QQ.val()) {
      return bool;
    }
    return WGPlatform.WGIsPlatformInstalled(EPlatform.ePlatform_QQ);
  }
  
  public static String GetLoginRecord()
  {
    LoginRet localLoginRet = new LoginRet();
    WGPlatform.WGGetLoginRecord(localLoginRet);
    platform = localLoginRet.platform;
    return JsonUtil.LoginRet2String(localLoginRet);
  }
  
  public static void GetNearbyPersonList() {}
  
  public static String GetNoticeData(String paramString)
  {
    Vector localVector = WGPlatform.WGGetNoticeData(paramString);
    Logger.d("MSDKWrapper", "GetNoticeData, sceneId = " + paramString + ", Data size = " + localVector.size());
    return JsonUtil.Vector_Notice2String(localVector);
  }
  
  public static int GetPaytokenVaildTime()
  {
    return WGPlatform.WGGetPaytokenValidTime();
  }
  
  public static String GetPf(String paramString)
  {
    return WGPlatform.WGGetPf(paramString);
  }
  
  public static String GetPfKey()
  {
    return WGPlatform.WGGetPfKey();
  }
  
  public static String GetRegisterChannelID()
  {
    Logger.d("GetRegisterChannelID begin");
    String str = WGPlatform.WGGetRegisterChannelId();
    Logger.d("GetRegisterChannelID end : " + str);
    return str;
  }
  
  public static String GetWakeupRet()
  {
    String str2 = JsonUtil.WakeupRet2String(wakeupRet);
    String str1 = str2;
    if (str2 == null) {
      str1 = "";
    }
    return str1;
  }
  
  public static void HideQMI() {}
  
  public static void HideScrollNotice() {}
  
  public static void JoinQQGroup(String paramString)
  {
    WGPlatform.WGJoinQQGroup(paramString);
  }
  
  public static void Login() {}
  
  public static boolean LoginByWakeup(boolean paramBoolean)
  {
    return WGPlatform.WGSwitchUser(paramBoolean);
  }
  
  public static void LoginQQ()
  {
    WGPlatform.WGLogin(EPlatform.ePlatform_QQ);
  }
  
  public static void LoginWX()
  {
    Logger.d("LoginWX in java");
    WGPlatform.WGLogin(EPlatform.ePlatform_Weixin);
  }
  
  public static void Logout()
  {
    WGPlatform.WGLogout();
  }
  
  public static boolean OpenAmsCenter(String paramString)
  {
    return WGPlatform.WGOpenAmsCenter(paramString);
  }
  
  public static void OpenUrl(String paramString)
  {
    Logger.d("url:" + paramString);
    WGPlatform.WGOpenUrl(paramString);
  }
  
  public static void RefreshToken() {}
  
  public static void ReportEvent(String paramString1, String paramString2, boolean paramBoolean)
  {
    paramString2 = MapSerializer.stringToMap(paramString2);
    WGPlatform.WGReportEvent(paramString1, paramString2, paramBoolean);
    Log.i("DengTa", paramString2.toString());
  }
  
  public static void SendToWXWithURL(int paramInt, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6)
  {
    try
    {
      paramString5 = new FileInputStream(new File(paramString5));
      byte[] arrayOfByte = CommonUtil.bitmap2Bytes(BitmapFactory.decodeStream(paramString5));
      paramString5.close();
      if (paramInt == 0) {}
      for (paramString5 = eWechatScene.WechatScene_Session;; paramString5 = eWechatScene.WechatScene_Timeline)
      {
        WGPlatform.WGSendToWeixinWithUrl(paramString5, paramString1, paramString2, paramString3, paramString4, arrayOfByte, arrayOfByte.length, paramString6);
        return;
      }
      return;
    }
    catch (Exception paramString1)
    {
      Toast.makeText(mainActivity.getApplicationContext(), "ExceptionHappened", 0).show();
      paramString2 = new MSDKCallback();
      paramString3 = new ShareRet();
      paramString3.flag = -1;
      paramString3.platform = platform;
      paramString3.extInfo = paramString1.getMessage();
      paramString2.OnShareNotify(paramString3);
    }
  }
  
  public static void ShareMusic_QQ(int paramInt, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5)
  {
    if (paramInt == 0) {}
    for (eQQScene localEQQScene = eQQScene.QQScene_Session;; localEQQScene = eQQScene.QQScene_QZone)
    {
      WGPlatform.WGSendToQQWithMusic(localEQQScene, paramString1, paramString2, paramString3, paramString4, paramString5);
      return;
    }
  }
  
  public static void ShareMusic_WX(int paramInt, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8)
  {
    try
    {
      paramString6 = new FileInputStream(new File(paramString6));
      byte[] arrayOfByte = CommonUtil.bitmap2Bytes(BitmapFactory.decodeStream(paramString6));
      paramString6.close();
      if (paramInt == 0) {}
      for (paramString6 = eWechatScene.WechatScene_Session;; paramString6 = eWechatScene.WechatScene_Timeline)
      {
        WGPlatform.WGSendToWeixinWithMusic(paramString6, paramString2, paramString3, paramString4, paramString5, paramString1, arrayOfByte, arrayOfByte.length, paramString7, paramString8);
        return;
      }
      return;
    }
    catch (Exception paramString1)
    {
      Toast.makeText(mainActivity.getApplicationContext(), "ExceptionHappened", 0).show();
      paramString1 = new MSDKCallback();
      paramString2 = new ShareRet();
      paramString2.flag = -1;
      paramString2.platform = platform;
      paramString1.OnShareNotify(paramString2);
    }
  }
  
  public static void SharePhoto_QQ(int paramInt, String paramString)
  {
    if (paramInt == 0) {}
    for (eQQScene localEQQScene = eQQScene.QQScene_Session;; localEQQScene = eQQScene.QQScene_QZone)
    {
      WGPlatform.WGSendToQQWithPhoto(localEQQScene, paramString);
      return;
    }
  }
  
  public static void SharePhoto_WX(int paramInt, String paramString1, String paramString2, String paramString3, String paramString4)
  {
    try
    {
      paramString2 = new FileInputStream(new File(paramString2));
      byte[] arrayOfByte = CommonUtil.bitmap2Bytes(BitmapFactory.decodeStream(paramString2));
      paramString2.close();
      if (paramInt == 0) {}
      for (paramString2 = eWechatScene.WechatScene_Session;; paramString2 = eWechatScene.WechatScene_Timeline)
      {
        WGPlatform.WGSendToWeixinWithPhoto(paramString2, paramString1, arrayOfByte, arrayOfByte.length, paramString3, paramString4);
        return;
      }
      return;
    }
    catch (Exception paramString1)
    {
      Toast.makeText(mainActivity.getApplicationContext(), "ExceptionHappened", 0).show();
      paramString2 = new MSDKCallback();
      paramString3 = new ShareRet();
      paramString3.flag = -1;
      paramString3.platform = platform;
      paramString3.extInfo = paramString1.getMessage();
      paramString2.OnShareNotify(paramString3);
    }
  }
  
  public static void ShareStructMsg_QQ(int paramInt1, String paramString1, String paramString2, String paramString3, String paramString4, int paramInt2)
  {
    if (paramInt1 == 0) {}
    for (eQQScene localEQQScene = eQQScene.QQScene_Session;; localEQQScene = eQQScene.QQScene_QZone)
    {
      WGPlatform.WGSendToQQ(localEQQScene, paramString1, paramString2, paramString3, paramString4, paramInt2);
      return;
    }
  }
  
  public static void ShareStructMsg_WX(int paramInt, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5)
  {
    try
    {
      paramString4 = new FileInputStream(new File(paramString4));
      byte[] arrayOfByte = CommonUtil.bitmap2Bytes(BitmapFactory.decodeStream(paramString4));
      paramInt = arrayOfByte.length;
      paramString4.close();
      WGPlatform.WGSendToWeixin(paramString2, paramString3, paramString1, arrayOfByte, paramInt, paramString5);
      return;
    }
    catch (Exception paramString1)
    {
      paramString1 = new MSDKCallback();
      paramString2 = new ShareRet();
      paramString2.flag = -1;
      paramString2.platform = platform;
      paramString1.OnShareNotify(paramString2);
    }
  }
  
  public static boolean ShareToGameCenter_WX(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6)
  {
    paramString5 = JsonUtil.ParseBtnForm(paramString5);
    return WGPlatform.WGSendMessageToWechatGameCenter(paramString1, paramString2, paramString3, JsonUtil.ParseMsgForm(paramString4), paramString5, paramString6);
  }
  
  public static boolean ShareToGameFriend_QQ(int paramInt, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8)
  {
    return WGPlatform.WGSendToQQGameFriend(paramInt, paramString1, paramString2, paramString3, paramString4, paramString5, paramString6, paramString7);
  }
  
  public static boolean ShareToGameFriend_WX(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7)
  {
    return WGPlatform.WGSendToWXGameFriend(paramString2, paramString3, paramString4, paramString6, paramString1, paramString5, paramString7);
  }
  
  public static void ShowNotice(String paramString)
  {
    WGPlatform.WGShowNotice(paramString);
  }
  
  public static void ShowQMI()
  {
    Logger.d("MSDKWrapper", "ShowQMI");
  }
  
  public static void TestSpeed(String paramString)
  {
    WGPlatform.WGTestSpeed(JsonUtil.String2Array(paramString));
  }
  
  public static void YYBCheckNeedUpdate() {}
  
  public static int YYBIsInstalled()
  {
    return WGPlatform.WGCheckYYBInstalled();
  }
  
  public static void YYBStartUpdate() {}
  
  public static void YYBStartUpdateWithInYYB() {}
  
  public static void init(Activity paramActivity)
  {
    mainActivity = paramActivity;
    MsdkBaseInfo localMsdkBaseInfo = new MsdkBaseInfo();
    localMsdkBaseInfo.qqAppId = AppInfo.QQAppID;
    localMsdkBaseInfo.qqAppKey = AppInfo.QQAppKey;
    localMsdkBaseInfo.offerId = AppInfo.OfferId;
    localMsdkBaseInfo.wxAppId = AppInfo.WXAppID;
    localMsdkBaseInfo.msdkKey = AppInfo.MSDKkey;
    localMsdkBaseInfo.appVersionName = "2.8.3";
    localMsdkBaseInfo.appVersionCode = 280;
    WGPlatform.Initialized(paramActivity, localMsdkBaseInfo);
    WGPlatform.WGSetPermission(16777215);
    WGPlatform.WGSetObserver(new MSDKCallback());
    WGPlatform.WGSetSaveUpdateObserver(new UpdateCallback());
    if (WGPlatform.wakeUpFromHall(paramActivity.getIntent()))
    {
      Logger.d("LoginPlatform is Hall --onCreate");
      return;
    }
    WGPlatform.handleCallback(paramActivity.getIntent());
  }
}
