package com.tencent.msdkwrap;

import com.tencent.msdk.api.CardRet;
import com.tencent.msdk.api.LocationRet;
import com.tencent.msdk.api.LoginRet;
import com.tencent.msdk.api.ShareRet;
import com.tencent.msdk.api.WGPlatformObserver;
import com.tencent.msdk.api.WakeupRet;
import com.tencent.msdk.remote.api.RelationRet;
import com.tencent.msdk.tools.Logger;
import com.unity3d.player.UnityPlayer;

public class MSDKCallback
  implements WGPlatformObserver
{
  public MSDKCallback() {}
  
  public void OnAddWXCardNotify(CardRet paramCardRet) {}
  
  public String OnCrashExtMessageNotify()
  {
    Logger.d("MSDK", "OnCrashExtMessageNotify");
    UnityPlayer.UnitySendMessage("MSDKWrap", "onCrashNotify", "");
    return null;
  }
  
  public void OnFeedbackNotify(int paramInt, String paramString)
  {
    Logger.d("MSDK", "OnFeedbackNotify");
    UnityPlayer.UnitySendMessage("MSDKWrap", "onFeedbackNotify", String.valueOf(paramInt));
  }
  
  public void OnLocationGotNotify(LocationRet paramLocationRet) {}
  
  public void OnLocationNotify(RelationRet paramRelationRet)
  {
    Logger.d("MSDK", "OnLocationNotify");
    UnityPlayer.UnitySendMessage("MSDKWrap", "onLocationNotify", JsonUtil.RelationRet2String(paramRelationRet));
  }
  
  public void OnLoginNotify(LoginRet paramLoginRet)
  {
    Logger.d("called OnLoginNotify");
    MSDKWrapper.platform = paramLoginRet.platform;
    UnityPlayer.UnitySendMessage("MSDKWrap", "onLoginNotify", JsonUtil.LoginRet2String(paramLoginRet));
  }
  
  public void OnRelationNotify(RelationRet paramRelationRet)
  {
    Logger.d("MSDK", "Get relation");
    UnityPlayer.UnitySendMessage("MSDKWrap", "onRelationNotify", JsonUtil.RelationRet2String(paramRelationRet));
  }
  
  public void OnShareNotify(ShareRet paramShareRet)
  {
    Logger.d("MSDK", "OnShareNotify called");
    UnityPlayer.UnitySendMessage("MSDKWrap", "onShareNotify", JsonUtil.ShareRet2String(paramShareRet));
  }
  
  public void OnWakeupNotify(WakeupRet paramWakeupRet)
  {
    Logger.d("MSDK", "OnWakeupNotify called");
    MSDKWrapper.wakeupRet = paramWakeupRet;
    UnityPlayer.UnitySendMessage("MSDKWrap", "onWakeupNotify", JsonUtil.WakeupRet2String(paramWakeupRet));
  }
}
