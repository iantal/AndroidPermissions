package com.tencent.tp;

import android.content.Context;
import android.os.Build.VERSION;
import com.tencent.tp.a.a;
import java.lang.reflect.Field;
import java.lang.reflect.Method;

public class TssSdkSafeScan
{
  public TssSdkSafeScan() {}
  
  public static void scan()
  {
    Context localContext = TssSdkRuntime.getAppContext();
    if (localContext != null) {
      scan(localContext);
    }
  }
  
  private static void scan(Context paramContext)
  {
    Object localObject2 = null;
    if (a.c()) {
      return;
    }
    s localS = new s(paramContext);
    Method[] arrayOfMethod;
    int i;
    if (Build.VERSION.SDK_INT > 10)
    {
      arrayOfMethod = localS.getClass().getMethods();
      paramContext = localS.getClass().getFields();
      i = 0;
      if (i >= paramContext.length) {
        break label198;
      }
      if (!paramContext[i].getName().equals("THREAD_POOL_EXECUTOR")) {}
    }
    label172:
    label198:
    for (paramContext = paramContext[i];; paramContext = null)
    {
      i = 0;
      Object localObject1 = localObject2;
      if (i < arrayOfMethod.length)
      {
        if (arrayOfMethod[i].getName().equals("executeOnExecutor")) {
          localObject1 = arrayOfMethod[i];
        }
      }
      else {
        if ((localObject1 == null) || (paramContext == null)) {
          break label172;
        }
      }
      for (;;)
      {
        try
        {
          ((Method)localObject1).invoke(localS, new Object[] { paramContext.get(null), (Object[])null });
          try
          {
            j.a("info: on scan done.");
            return;
          }
          catch (Exception paramContext)
          {
            return;
          }
          i += 1;
          break;
          i += 1;
        }
        catch (Throwable paramContext)
        {
          try
          {
            j.b("EXCEPTION:START_ASYNC_TASK");
          }
          catch (Throwable paramContext) {}
          continue;
        }
        localS.execute(new Void[0]);
        continue;
        localS.execute(new Void[0]);
      }
    }
  }
}
