package com.tencent.tp.c;

import android.content.Context;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class f
{
  protected Context a;
  private String b;
  private boolean c;
  private Map d;
  
  public f(Context paramContext, String paramString, boolean paramBoolean)
  {
    this.a = paramContext;
    this.b = paramString;
    this.d = new HashMap();
    if (paramBoolean) {
      a(paramString);
    }
  }
  
  private void a(String paramString)
  {
    try
    {
      b(paramString);
      this.c = true;
      return;
    }
    catch (Exception paramString) {}
  }
  
  private void a(String paramString1, String paramString2, String paramString3)
  {
    HashMap localHashMap;
    if (!this.d.containsKey(paramString1))
    {
      localHashMap = new HashMap();
      this.d.put(paramString1, localHashMap);
    }
    for (paramString1 = localHashMap;; paramString1 = (Map)this.d.get(paramString1))
    {
      paramString1.put(paramString2, paramString3);
      return;
    }
  }
  
  private void b(String paramString)
    throws FileNotFoundException, IOException
  {
    if (!h.a(paramString)) {
      return;
    }
    DataInputStream localDataInputStream = new DataInputStream(new FileInputStream(paramString));
    paramString = null;
    for (;;)
    {
      String str = localDataInputStream.readLine();
      if (str == null)
      {
        localDataInputStream.close();
        return;
      }
      str = new String(str.getBytes("ISO-8859-1"), "UTF-8").trim();
      int i = str.indexOf("[");
      int j = str.indexOf("]");
      if ((i != -1) && (j != -1))
      {
        paramString = str.substring(i + 1, j);
      }
      else
      {
        i = str.indexOf("=");
        if (i != -1) {
          a(paramString, str.substring(0, i), str.substring(i + 1));
        }
      }
    }
  }
  
  public String a(String paramString1, String paramString2)
  {
    if (!this.c) {
      a(this.b);
    }
    if (this.d.containsKey(paramString1))
    {
      paramString1 = (Map)this.d.get(paramString1);
      if (paramString1.containsKey(paramString2)) {
        return (String)paramString1.get(paramString2);
      }
    }
    return null;
  }
}
