package com.tencent.tmassistant;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.IBinder;
import android.text.TextUtils;
import com.tencent.tmassistant.aidl.TMAssistantDownloadTaskInfo;
import com.tencent.tmassistantbase.util.TMLog;
import java.lang.ref.ReferenceQueue;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;

public class b
  extends d
{
  protected ReferenceQueue a;
  protected ArrayList b;
  
  public b(Context paramContext, String paramString)
  {
    super(paramContext, paramString, "com.tencent.tmdownloader.TMAssistantDownloadService");
    TMLog.i("TMAssistantDownloadSDKClient", "enter");
    TMLog.i("TMAssistantDownloadSDKClient", "context: " + paramContext + "; clientKey: " + paramString);
    this.a = new ReferenceQueue();
    this.b = new ArrayList();
    this.h = new c(this);
    TMLog.i("TMAssistantDownloadSDKClient", "exit");
  }
  
  public int a(String paramString1, int paramInt, String paramString2, String paramString3, Map paramMap, Bundle paramBundle)
  {
    for (;;)
    {
      try
      {
        TMLog.i("TMAssistantDownloadSDKClient", "enter");
        TMLog.i("TMAssistantDownloadSDKClient", "clientKey:" + this.d + ",url:" + paramString1 + "; priority: " + paramInt + "; contentType: " + paramString2 + "; fileName = " + paramString3);
        if (paramMap != null)
        {
          TMLog.i("TMAssistantDownloadSDKClient", "params.size: " + paramMap.size());
          if (paramString1 != null) {
            break;
          }
          TMLog.e("TMAssistantDownloadSDKClient", "exception: TMAssistantDownloadSDKClient.startDownloadTask url is null");
          throw new IllegalArgumentException("TMAssistantDownloadSDKClient.startDownloadTask url is null");
        }
      }
      finally {}
      TMLog.i("TMAssistantDownloadSDKClient", "params: null");
    }
    if ((paramString2.equals("resource/tm.android.unknown")) && (TextUtils.isEmpty(paramString3)))
    {
      TMLog.e("TMAssistantDownloadSDKClient", "exception: if contentType is others, filename shouldn't be null!");
      throw new IllegalArgumentException("if contentType is others, filename shouldn't be null!");
    }
    com.tencent.tmassistant.aidl.d localD = (com.tencent.tmassistant.aidl.d)super.g();
    if (localD != null)
    {
      TMLog.i("TMAssistantDownloadSDKClient", "startDownloadTask");
      paramInt = localD.a(this.d, paramString1, 0, paramString2, paramString3, paramMap, paramBundle);
      TMLog.i("TMAssistantDownloadSDKClient", "returnValue: " + paramInt);
      TMLog.i("TMAssistantDownloadSDKClient", "exit");
    }
    for (;;)
    {
      return paramInt;
      super.e();
      TMLog.i("TMAssistantDownloadSDKClient", "super.initTMAssistantDownloadSDK");
      TMLog.i("TMAssistantDownloadSDKClient", "returnValue: 0");
      TMLog.i("TMAssistantDownloadSDKClient", "exit");
      paramInt = 0;
    }
  }
  
  public int a(String paramString1, String paramString2, Bundle paramBundle)
  {
    try
    {
      TMLog.i("TMAssistantDownloadSDKClient", "enter");
      TMLog.i("TMAssistantDownloadSDKClient", "url: " + paramString1 + "; contentType: " + paramString2);
      int i = a(paramString1, 0, paramString2, null, null, paramBundle);
      TMLog.i("TMAssistantDownloadSDKClient", "returnValue: " + i);
      TMLog.i("TMAssistantDownloadSDKClient", "exit");
      return i;
    }
    finally
    {
      paramString1 = finally;
      throw paramString1;
    }
  }
  
  public TMAssistantDownloadTaskInfo a(String paramString)
  {
    try
    {
      TMLog.i("TMAssistantDownloadSDKClient", "enter");
      TMLog.i("TMAssistantDownloadSDKClient", "clientKey:" + this.d + ",url:" + paramString);
      if (paramString == null)
      {
        TMLog.e("TMAssistantDownloadSDKClient", "exception: TMAssistantDownloadSDKClient.getDownloadTaskState url is null");
        throw new IllegalArgumentException("TMAssistantDownloadSDKClient.getDownloadTaskState url is null");
      }
    }
    finally {}
    com.tencent.tmassistant.aidl.d localD = (com.tencent.tmassistant.aidl.d)super.g();
    if (localD != null)
    {
      paramString = localD.a(this.d, paramString);
      TMLog.i("TMAssistantDownloadSDKClient", "returnValue(taskInfo): " + paramString);
    }
    for (;;)
    {
      return paramString;
      super.e();
      TMLog.i("TMAssistantDownloadSDKClient", "returnValue: null");
      TMLog.i("TMAssistantDownloadSDKClient", "exit");
      paramString = null;
    }
  }
  
  protected void a()
  {
    TMLog.i("TMAssistantDownloadSDKClient", "enter");
    Iterator localIterator = this.b.iterator();
    while (localIterator.hasNext())
    {
      a localA = (a)((WeakReference)localIterator.next()).get();
      e.a().a(this, localA);
    }
    TMLog.i("TMAssistantDownloadSDKClient", "exit");
  }
  
  protected void a(IBinder paramIBinder)
  {
    this.g = com.tencent.tmassistant.aidl.e.a(paramIBinder);
  }
  
  public boolean a(a paramA)
  {
    for (;;)
    {
      Object localObject;
      try
      {
        TMLog.i("TMAssistantDownloadSDKClient", "enter");
        if (paramA == null)
        {
          TMLog.i("TMAssistantDownloadSDKClient", "listener == null");
          TMLog.i("TMAssistantDownloadSDKClient", "returnValue: false");
          TMLog.i("TMAssistantDownloadSDKClient", "exit");
          bool = false;
          return bool;
        }
        localObject = this.a.poll();
        if (localObject != null)
        {
          TMLog.i("TMAssistantDownloadSDKClient", "registerDownloadTaskListener removed listener!!!!");
          this.b.remove(localObject);
          continue;
        }
        localObject = this.b.iterator();
      }
      finally {}
      for (;;)
      {
        if (((Iterator)localObject).hasNext()) {
          if ((a)((WeakReference)((Iterator)localObject).next()).get() == paramA)
          {
            TMLog.i("TMAssistantDownloadSDKClient", "returnValue: true");
            TMLog.i("TMAssistantDownloadSDKClient", "exit");
            bool = true;
            break;
          }
        }
      }
      paramA = new WeakReference(paramA, this.a);
      this.b.add(paramA);
      TMLog.i("TMAssistantDownloadSDKClient", "returnValue: true");
      TMLog.i("TMAssistantDownloadSDKClient", "exit");
      boolean bool = true;
    }
  }
  
  protected void b()
  {
    ((com.tencent.tmassistant.aidl.d)this.g).a(this.d, (com.tencent.tmassistant.aidl.a)this.h);
  }
  
  public void b(String paramString)
  {
    try
    {
      TMLog.i("TMAssistantDownloadSDKClient", "enter");
      TMLog.i("TMAssistantDownloadSDKClient", "clientKey:" + this.d + ",url:" + paramString);
      if (paramString == null)
      {
        TMLog.e("TMAssistantDownloadSDKClient", "exception: TMAssistantDownloadSDKClient.startDownloadTask url is null");
        throw new IllegalArgumentException("TMAssistantDownloadSDKClient.startDownloadTask url is null");
      }
    }
    finally {}
    com.tencent.tmassistant.aidl.d localD = (com.tencent.tmassistant.aidl.d)super.g();
    if (localD != null)
    {
      localD.b(this.d, paramString);
      TMLog.i("TMAssistantDownloadSDKClient", "pauseDownloadTask");
    }
    for (;;)
    {
      TMLog.i("TMAssistantDownloadSDKClient", "exit");
      return;
      super.e();
      TMLog.i("TMAssistantDownloadSDKClient", "initTMAssistantDownloadSDK");
    }
  }
  
  protected Intent c()
  {
    return new Intent(this.c, Class.forName(this.e));
  }
  
  protected void d()
  {
    ((com.tencent.tmassistant.aidl.d)this.g).b(this.d, (com.tencent.tmassistant.aidl.a)this.h);
  }
}
