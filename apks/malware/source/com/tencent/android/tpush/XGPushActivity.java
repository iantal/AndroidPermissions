package com.tencent.android.tpush;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.ActivityNotFoundException;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.pm.ResolveInfo.DisplayNameComparator;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.util.Log;
import com.jg.JgClassChecked;
import com.tencent.android.tpush.common.p;
import com.tencent.android.tpush.encrypt.Rijndael;
import com.tencent.android.tpush.logging.TLog;
import java.io.PrintStream;
import java.lang.reflect.Method;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

@JgClassChecked(author=1, fComment="确认已进行安全校验", lastDate="20150316", reviewer=3, vComment={com.jg.EType.ACTIVITYCHECK, com.jg.EType.INTENTCHECK})
public class XGPushActivity
  extends Activity
{
  private Context mContext;
  
  public XGPushActivity() {}
  
  private void broadcastToTPushService(Intent paramIntent)
  {
    Intent localIntent = new Intent("com.tencent.android.tpush.action.PUSH_CLICK.RESULT");
    localIntent.putExtras(paramIntent);
    localIntent.putExtra("packName", this.mContext.getPackageName());
    localIntent.putExtra("clickTime", System.currentTimeMillis() / 1000L);
    sendBroadcast(localIntent);
  }
  
  private boolean checkIntent(Intent paramIntent)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (paramIntent != null)
    {
      bool1 = bool2;
      if (paramIntent.hasExtra("protect"))
      {
        paramIntent = paramIntent.getStringExtra("protect");
        bool1 = bool2;
        if (!p.a(paramIntent))
        {
          paramIntent = Long.valueOf(Rijndael.decrypt(paramIntent));
          bool1 = bool2;
          if (paramIntent.longValue() > 0L)
          {
            bool1 = bool2;
            if (System.currentTimeMillis() >= paramIntent.longValue()) {
              bool1 = true;
            }
          }
        }
      }
    }
    return bool1;
  }
  
  private void creatDialog(int paramInt, Intent paramIntent)
  {
    if (paramInt == 0)
    {
      localBuilder = new AlertDialog.Builder(this);
      localBuilder.setOnCancelListener(new i(this, paramIntent)).setTitle("提示").setMessage("是否确定打开此应用？").setPositiveButton("打开", new h(this, paramIntent)).setNegativeButton("取消", new f(this, paramIntent));
      localBuilder.create().show();
    }
    while (paramInt != 1) {
      return;
    }
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(this);
    localBuilder.setOnCancelListener(new l(this, paramIntent)).setTitle("提示").setMessage("本地未发现此应用，建议去下载！").setPositiveButton("下载", new k(this, paramIntent)).setNegativeButton("取消", new j(this, paramIntent));
    localBuilder.create().show();
  }
  
  private ResolveInfo getAppMainActivity(String paramString)
  {
    try
    {
      Object localObject1 = getPackageManager();
      Object localObject2 = new Intent("android.intent.action.MAIN", null);
      ((Intent)localObject2).addCategory("android.intent.category.LAUNCHER");
      localObject2 = ((PackageManager)localObject1).queryIntentActivities((Intent)localObject2, 0);
      Collections.sort((List)localObject2, new ResolveInfo.DisplayNameComparator((PackageManager)localObject1));
      localObject1 = ((List)localObject2).iterator();
      while (((Iterator)localObject1).hasNext())
      {
        localObject2 = (ResolveInfo)((Iterator)localObject1).next();
        String str1 = ((ResolveInfo)localObject2).activityInfo.name;
        String str2 = ((ResolveInfo)localObject2).activityInfo.packageName;
        System.out.println(" activityName---" + str1 + " pkgName---" + str2);
        boolean bool = str2.equals(paramString);
        if (bool) {
          return localObject2;
        }
      }
    }
    catch (Throwable paramString)
    {
      TLog.e("TPush", "查找主Activity出错", paramString);
    }
    return null;
  }
  
  private void openIntent(Intent paramIntent)
  {
    try
    {
      Intent localIntent = Intent.parseUri(paramIntent.getStringExtra("activity"), 1);
      localIntent.addFlags(268435456);
      localIntent.setComponent(null);
      int i = Build.VERSION.SDK_INT;
      if (i >= 15) {}
      try
      {
        localIntent.getClass().getMethod("setSelector", new Class[] { Intent.class }).invoke(localIntent, new Object[] { null });
        broadcastToTPushService(paramIntent);
        startActivity(localIntent);
        return;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          TLog.w("TPush", "invoke intent.setComponent error.", localException);
        }
      }
      return;
    }
    catch (Throwable paramIntent)
    {
      TLog.e("TPush", "openIntent error.", paramIntent);
    }
  }
  
  private void openUrl(String paramString, Intent paramIntent)
  {
    try
    {
      paramString = new Intent("android.intent.action.VIEW", Uri.parse(paramString));
      paramString.setFlags(268435456);
      broadcastToTPushService(paramIntent);
      startActivity(paramString);
      return;
    }
    catch (Throwable paramString)
    {
      TLog.e("TPush", "openUrl error.", paramString);
    }
  }
  
  private void pushClickedPackageResult(Intent paramIntent)
  {
    broadcastToTPushService(paramIntent);
    XGPushManager.reportNotifactionClicked2Mta(this, paramIntent);
    Object localObject = getAppMainActivity(paramIntent.getStringExtra("packageName"));
    if (localObject != null)
    {
      String str = ((ResolveInfo)localObject).activityInfo.name;
      localObject = ((ResolveInfo)localObject).activityInfo.packageName;
      Intent localIntent = new Intent();
      localIntent.putExtras(paramIntent);
      localIntent.setComponent(new ComponentName((String)localObject, str));
      creatDialog(0, localIntent);
      return;
    }
    creatDialog(1, paramIntent);
  }
  
  private void pushClickedResult(Intent paramIntent)
  {
    String str;
    if (paramIntent.getStringExtra("activity") != null) {
      str = paramIntent.getStringExtra("activity");
    }
    for (;;)
    {
      TLog.i("XGPushMessage", "activity intent =" + paramIntent + "activity = " + str + "intent.getFlags()" + paramIntent.getFlags());
      Intent localIntent = new Intent();
      localIntent.addFlags(paramIntent.getFlags());
      localIntent.setClassName(getApplicationContext(), str);
      paramIntent.putExtra("tag.tpush.MSG", "true");
      localIntent.putExtras(paramIntent);
      localIntent.putExtra("tag.tpush.NOTIFIC", XGPushManager.a(this));
      TLog.e("XGPushMessage", "notifaction intent flag:" + localIntent.getFlags());
      try
      {
        startActivity(localIntent);
        finish();
        return;
        str = "";
      }
      catch (ActivityNotFoundException paramIntent)
      {
        for (;;) {}
      }
    }
  }
  
  private void showAlertDialog(int paramInt, Intent paramIntent)
  {
    String str;
    if (paramInt == 0)
    {
      str = paramIntent.getStringExtra("activity");
      if (paramIntent.getIntExtra("action_confirm", 0) == 1) {
        new AlertDialog.Builder(this).setTitle("提示").setCancelable(false).setMessage("是否打开网站:" + str + "?").setPositiveButton("确认", new n(this, str, paramIntent)).setNegativeButton("取消", new m(this, paramIntent)).show();
      }
    }
    do
    {
      return;
      openUrl(str, paramIntent);
      return;
      if (paramInt != 1) {
        break;
      }
    } while (paramIntent.getIntExtra("action_confirm", 0) != 1);
    new AlertDialog.Builder(this).setTitle("提示").setCancelable(false).setMessage("继续打开Intent?").setPositiveButton("确认", new g(this, paramIntent)).setNegativeButton("取消", new o(this, paramIntent)).show();
    return;
    openIntent(paramIntent);
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    this.mContext = this;
    try
    {
      paramBundle = getIntent();
      TLog.i("TPush", "XGPushActivity receiver intent:" + paramBundle);
      if (checkIntent(paramBundle))
      {
        i = paramBundle.getIntExtra("action_type", 1);
        if (i == 1)
        {
          pushClickedResult(paramBundle);
          return;
        }
        if (i == 4)
        {
          pushClickedPackageResult(paramBundle);
          return;
        }
      }
    }
    catch (Throwable paramBundle)
    {
      int i;
      Log.w("TPush", "warning", paramBundle);
      try
      {
        finish();
        return;
      }
      catch (Throwable paramBundle)
      {
        return;
      }
      if (i == 2)
      {
        showAlertDialog(0, paramBundle);
        return;
      }
      if (i == 3)
      {
        showAlertDialog(1, paramBundle);
        return;
      }
      finish();
      return;
    }
    finish();
  }
  
  protected void onPause()
  {
    super.onPause();
  }
  
  protected void onResume()
  {
    super.onResume();
  }
  
  protected void onStart()
  {
    super.onStart();
  }
  
  protected void onStop()
  {
    super.onStop();
  }
}
