package com.tencent.android.tpush.common;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.net.wifi.ScanResult;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import com.tencent.android.tpush.logging.TLog;
import com.tencent.mid.util.Util;
import java.util.Collections;
import java.util.List;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class e
{
  public static Object a(Context paramContext, String paramString, Object paramObject)
  {
    try
    {
      ApplicationInfo localApplicationInfo = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128);
      paramContext = paramObject;
      if (localApplicationInfo != null)
      {
        paramString = localApplicationInfo.metaData.get(paramString);
        paramContext = paramObject;
        if (paramString != null) {
          paramContext = paramString;
        }
      }
      return paramContext;
    }
    catch (Throwable paramContext)
    {
      TLog.w("TPush", "cann't not get accessid from META_DATA");
    }
    return paramObject;
  }
  
  public static JSONArray a(Context paramContext, int paramInt)
  {
    JSONArray localJSONArray;
    try
    {
      if ((Util.checkPermission(paramContext, "android.permission.INTERNET")) && (Util.checkPermission(paramContext, "android.permission.ACCESS_NETWORK_STATE")))
      {
        paramContext = (WifiManager)paramContext.getSystemService("wifi");
        if (paramContext != null)
        {
          paramContext = paramContext.getScanResults();
          if ((paramContext != null) && (paramContext.size() > 0))
          {
            Collections.sort(paramContext, new f());
            localJSONArray = new JSONArray();
            int i = 0;
            while ((i < paramContext.size()) && (i < paramInt))
            {
              ScanResult localScanResult = (ScanResult)paramContext.get(i);
              JSONObject localJSONObject = new JSONObject();
              localJSONObject.put("bs", localScanResult.BSSID);
              localJSONObject.put("ss", localScanResult.SSID);
              localJSONArray.put(localJSONObject);
              i += 1;
            }
          }
        }
      }
      else
      {
        TLog.w("TPush", "can not get the permisson of android.permission.INTERNET");
      }
    }
    catch (Throwable paramContext)
    {
      for (;;)
      {
        TLog.w("TPush", paramContext.toString());
      }
    }
    return null;
    return localJSONArray;
  }
  
  public static boolean a(JSONObject paramJSONObject, String paramString, Object paramObject)
  {
    if (paramObject != null) {
      try
      {
        paramJSONObject.put(paramString, paramObject);
        return true;
      }
      catch (JSONException paramJSONObject) {}
    }
    return false;
  }
  
  public static Object b(JSONObject paramJSONObject, String paramString, Object paramObject)
  {
    Object localObject = paramObject;
    try
    {
      if (paramJSONObject.has(paramString)) {
        localObject = paramJSONObject.get(paramString);
      }
      return localObject;
    }
    catch (JSONException paramJSONObject) {}
    return paramObject;
  }
}
