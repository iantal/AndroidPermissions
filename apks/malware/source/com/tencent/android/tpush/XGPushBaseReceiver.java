package com.tencent.android.tpush;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import com.tencent.android.tpush.a.a;
import com.tencent.android.tpush.a.h;
import com.tencent.android.tpush.encrypt.Rijndael;
import com.tencent.android.tpush.logging.TLog;
import com.tencent.android.tpush.service.channel.security.TpnsSecurity;
import com.tencent.android.tpush.service.d.d;
import com.tencent.android.tpush.service.l;
import java.util.List;
import org.json.JSONException;

public abstract class XGPushBaseReceiver
  extends BroadcastReceiver
{
  public static final int SUCCESS = 0;
  
  public XGPushBaseReceiver() {}
  
  private void a(Context paramContext, Intent paramIntent)
  {
    try
    {
      paramIntent = h.a(paramContext, paramIntent);
      if ((paramIntent != null) && (paramIntent.h() != null) && (paramIntent.h().b() == 2))
      {
        XGPushManager.msgAck(paramContext, paramIntent);
        XGPushTextMessage localXGPushTextMessage = new XGPushTextMessage();
        localXGPushTextMessage.a = paramIntent.h().d();
        localXGPushTextMessage.b = paramIntent.h().e();
        localXGPushTextMessage.c = paramIntent.h().f();
        TLog.tf("XGPushMessage", "call onTextMessage, message:" + localXGPushTextMessage);
        onTextMessage(paramContext, localXGPushTextMessage);
      }
      return;
    }
    catch (JSONException paramContext)
    {
      TLog.e("XGPushMessage", "解包失败", paramContext);
      return;
    }
    catch (IllegalArgumentException paramContext)
    {
      TLog.e("XGPushMessage", "参数不对", paramContext);
    }
  }
  
  private void b(Context paramContext, Intent paramIntent)
  {
    int j = paramIntent.getIntExtra("TPUSH.FEEDBACK", -1);
    int i = paramIntent.getIntExtra("TPUSH.ERRORCODE", -1);
    TLog.i("XGPushMessage", ">>XGPushBaseReceiver receiver feedbackHandler>>@feedbackType:" + j + " ,@errorCode:" + i);
    switch (j)
    {
    default: 
      TLog.e("XGPushMessage", "未知的feedbackType:" + j);
    case 1: 
    case 2: 
    case 3: 
    case 4: 
      do
      {
        do
        {
          return;
          localObject = new XGPushRegisterResult();
          ((XGPushRegisterResult)localObject).parseIntent(paramIntent);
          onRegisterResult(paramContext, i, (XGPushRegisterResult)localObject);
          return;
          onUnregisterResult(paramContext, i);
          return;
          localObject = Rijndael.decrypt(paramIntent.getStringExtra("tagName"));
        } while (d.a((String)localObject));
        j = paramIntent.getIntExtra("tagFlag", -1);
        if (j == 1)
        {
          onSetTagResult(paramContext, i, (String)localObject);
          return;
        }
        if (j == 2)
        {
          onDeleteTagResult(paramContext, i, (String)localObject);
          return;
        }
        TLog.e("XGPushMessage", "错误的标签处理类型：" + j + " ,标签名：" + (String)localObject);
        return;
        i = paramIntent.getIntExtra("action", 2);
        l = paramIntent.getLongExtra("accId", 0L);
        localObject = XGPushConfig.getAccessidList(paramContext);
        if ((localObject != null) && (((List)localObject).size() > 0) && (((List)localObject).contains(Long.valueOf(l))))
        {
          localObject = new XGPushClickedResult();
          ((XGPushClickedResult)localObject).parseIntent(paramIntent);
          onNotifactionClickedResult(paramContext, (XGPushClickedResult)localObject);
        }
      } while (i != 2);
      long l = paramIntent.getLongExtra("busiMsgId", -1L);
      TLog.v("XGService", "ACTION_PUSH_CANCELLED_RESULT onReceive(" + paramContext.getPackageName() + "," + paramIntent + "busiId" + l + ", actionType = " + i + ")");
      XGPushManager.reportNotifactionClear2Mta(paramContext, l);
      return;
    }
    Object localObject = new XGPushShowedResult();
    ((XGPushShowedResult)localObject).parseIntent(paramIntent);
    onNotifactionShowedResult(paramContext, (XGPushShowedResult)localObject);
  }
  
  public abstract void onDeleteTagResult(Context paramContext, int paramInt, String paramString);
  
  public abstract void onNotifactionClickedResult(Context paramContext, XGPushClickedResult paramXGPushClickedResult);
  
  public abstract void onNotifactionShowedResult(Context paramContext, XGPushShowedResult paramXGPushShowedResult);
  
  public final void onReceive(Context paramContext, Intent paramIntent)
  {
    if ((paramContext != null) && (paramIntent != null))
    {
      String str;
      try
      {
        l.b(paramContext.getApplicationContext());
        TLog.i("XGPushMessage", ">>TPushBaseReceiver receiver msg>>");
        if (!TpnsSecurity.checkTpnsSecurityLibSo(paramContext)) {
          return;
        }
        if (!XGPushManager.isEnableService(paramContext)) {
          return;
        }
        TLog.i("TPush", ">>TPushBaseReceiver receiver msg>>" + paramIntent + "," + paramIntent.getExtras());
        str = paramIntent.getAction();
        if ("com.tencent.android.tpush.action.PUSH_MESSAGE".equals(str))
        {
          a(paramContext, paramIntent);
          return;
        }
      }
      catch (Throwable paramContext)
      {
        TLog.e("XGPushMessage", ">>> XGPushBaseReceiver onReceive", paramContext);
        return;
      }
      if ("com.tencent.android.tpush.action.FEEDBACK".equals(str))
      {
        b(paramContext, paramIntent);
        return;
      }
      TLog.tf("XGPushMessage", "未知的action:" + str);
    }
  }
  
  public abstract void onRegisterResult(Context paramContext, int paramInt, XGPushRegisterResult paramXGPushRegisterResult);
  
  public abstract void onSetTagResult(Context paramContext, int paramInt, String paramString);
  
  public abstract void onTextMessage(Context paramContext, XGPushTextMessage paramXGPushTextMessage);
  
  public abstract void onUnregisterResult(Context paramContext, int paramInt);
}
