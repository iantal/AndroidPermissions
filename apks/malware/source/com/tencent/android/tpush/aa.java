package com.tencent.android.tpush;

import android.content.Context;
import android.content.Intent;
import com.tencent.android.tpush.common.l;
import com.tencent.android.tpush.common.n;
import com.tencent.android.tpush.common.o;
import com.tencent.android.tpush.common.p;
import com.tencent.android.tpush.encrypt.Rijndael;
import com.tencent.android.tpush.horse.Tools;
import com.tencent.android.tpush.logging.TLog;
import com.tencent.android.tpush.service.channel.security.TpnsSecurity;
import com.tencent.android.tpush.service.d.d;

final class aa
  implements Runnable
{
  aa(Context paramContext, XGIOperateCallback paramXGIOperateCallback, long paramLong, String paramString1, String paramString2, String paramString3, String paramString4, int paramInt) {}
  
  public void run()
  {
    try
    {
      if (!l.a(this.a))
      {
        TLog.e("TPush", "check Permissions failed!");
        if (this.b == null) {
          return;
        }
        this.b.onFail("PermissionChecker", 10003, "check Permissions failed!");
        return;
      }
      if (!TpnsSecurity.checkTpnsSecurityLibSo(this.a))
      {
        if (this.b == null) {
          return;
        }
        this.b.onFail("missing libTpnsSecurity.so", 10004, "please add libTpnsSecurity.so to your project!");
        return;
      }
    }
    catch (Throwable localThrowable)
    {
      TLog.e("TPush", localThrowable.getMessage());
      return;
    }
    if (!XGPushManager.isEnableService(this.a))
    {
      if (this.b != null) {
        this.b.onFail("", 10004, "XG is disable");
      }
    }
    else
    {
      long l;
      if (this.c > 0L)
      {
        l = this.c;
        if (!p.a(this.d)) {
          break label223;
        }
      }
      label223:
      for (String str = XGPushConfig.getAccessKey(this.a);; str = this.d)
      {
        if ((l > 0L) && (!p.a(str))) {
          break label232;
        }
        this.b.onFail(null, 10001, "The accessId or accessKey is(are) invalid!@accessId:" + l + ", @accessKey:" + str);
        return;
        l = XGPushConfig.getAccessId(this.a);
        break;
      }
      label232:
      Object localObject = d.e(this.a, "isClearCache.com.tencent.tpush.cache.redirect");
      if ((localObject == null) || (!"memeda3".equals(localObject))) {
        Tools.clearAll(this.a);
      }
      p.e(this.a);
      localObject = new Intent("com.tencent.android.tpush.action.REGISTER");
      ((Intent)localObject).putExtra("accId", Rijndael.encrypt("" + l));
      ((Intent)localObject).putExtra("accKey", Rijndael.encrypt(str));
      ((Intent)localObject).putExtra("packName", Rijndael.encrypt(this.a.getPackageName()));
      ((Intent)localObject).putExtra("appVer", p.d(this.a));
      if (n.a(this.a) != null) {
        ((Intent)localObject).putExtra("reserved", Rijndael.encrypt(n.a(this.a).a()));
      }
      if (this.e != null) {
        ((Intent)localObject).putExtra("account", Rijndael.encrypt(this.e));
      }
      if (this.f != null) {
        ((Intent)localObject).putExtra("ticket", Rijndael.encrypt(this.f));
      }
      if (this.g != null) {
        ((Intent)localObject).putExtra("qua", Rijndael.encrypt(this.g));
      }
      ((Intent)localObject).putExtra("ticketType", this.h);
      ((Intent)localObject).putExtra("operation", 100);
      ((Intent)localObject).putExtra("aidl", p.a());
      ((Intent)localObject).putExtra("currentTimeMillis", System.currentTimeMillis());
      ((Intent)localObject).putExtra("opType", 0);
      boolean bool = o.a(this.a).a();
      int i = p.b(this.a);
      TLog.i("TPush", "service status:" + i + ",isMIUI:" + bool);
      if ((i == 1) && (!bool))
      {
        TLog.d("TPush", ">>> service is running,just regeister");
        XGPushManager.b(this.a, (Intent)localObject, this.b);
        return;
      }
      XGPushManager.a(this.a, (Intent)localObject, this.b, bool);
    }
  }
}
