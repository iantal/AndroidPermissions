package com.tencent.android.tpush.service.cache;

import android.content.Context;
import com.tencent.android.tpush.common.k;
import com.tencent.android.tpush.data.a;
import com.tencent.android.tpush.data.b;
import com.tencent.android.tpush.encrypt.Rijndael;
import com.tencent.android.tpush.horse.data.OptStrategyList;
import com.tencent.android.tpush.horse.data.StrategyItem;
import com.tencent.android.tpush.logging.TLog;
import com.tencent.android.tpush.service.channel.exception.NullReturnException;
import com.tencent.android.tpush.service.channel.protocol.AppInfo;
import com.tencent.android.tpush.service.channel.protocol.UnregInfo;
import com.tencent.android.tpush.service.d.d;
import com.tencent.android.tpush.service.l;
import com.tencent.mid.api.MidService;
import com.tencent.mid.util.Util;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;

public class CacheManager
{
  private CacheManager() {}
  
  public static boolean UninstallInfoByPkgName(String paramString)
  {
    TLog.v("XGService", "@@ UninstallInfoByPkgName(" + paramString + ")");
    if ((l.f() != null) && (!d.a(paramString)))
    {
      a(paramString, c(paramString, ".reg"), 2);
      return true;
    }
    TLog.e("XGService", ">>> uninstall registerInfo : " + paramString + " failed!");
    return false;
  }
  
  public static boolean UninstallInfoSuccessByPkgName(String paramString)
  {
    TLog.v("XGService", "@@ UninstallInfoSuccessByPkgName(" + paramString + ")");
    if ((l.f() != null) && (!d.a(paramString)))
    {
      a(paramString, c(paramString, ".reg"), 4);
      return true;
    }
    TLog.e("XGService", ">>> uninstall registerInfo : " + paramString + " failed!");
    return false;
  }
  
  public static boolean UnregisterInfoByPkgName(String paramString)
  {
    TLog.v("XGService", "@@ UnregisterInfoByPkgName(" + paramString + ")");
    if ((l.f() != null) && (!d.a(paramString)))
    {
      a(paramString, c(paramString, ".reg"), 1);
      return true;
    }
    TLog.e("XGService", ">>> unregister registerInfo : " + paramString + " failed!");
    return false;
  }
  
  public static boolean UnregisterInfoSuccessByPkgName(String paramString)
  {
    TLog.v("XGService", "@@ UnregisterInfoSuccessByPkgName(" + paramString + ")");
    if ((l.f() != null) && (!d.a(paramString)))
    {
      a(paramString, c(paramString, ".reg"), 3);
      return true;
    }
    TLog.e("XGService", ">>> unregister registerInfo : " + paramString + " failed!");
    return false;
  }
  
  private static b a(String paramString1, String paramString2)
  {
    TLog.v("XGService", "@@ getRegisterInfoByPkgNameFromSettings(" + paramString1 + ")");
    Object localObject2 = null;
    Object localObject1 = localObject2;
    if (l.f() != null)
    {
      localObject1 = localObject2;
      if (!d.a(paramString1)) {
        localObject1 = b(d.e(l.f(), paramString2), paramString1);
      }
    }
    return localObject1;
  }
  
  private static String a(Context paramContext, String paramString)
  {
    if ((paramContext != null) && (d.a(paramString))) {
      return Rijndael.decrypt(d.e(paramContext, paramString));
    }
    return null;
  }
  
  private static List a(Context paramContext, String paramString, int paramInt)
  {
    if ((paramContext != null) && (!d.a(paramString)))
    {
      paramContext = a(paramContext, paramString);
      if (!d.a(paramContext))
      {
        paramContext = paramContext.split("\\|");
        if ((paramContext != null) && (paramContext.length > 0))
        {
          paramString = new ArrayList();
          int j = paramContext.length;
          int i = 0;
          for (;;)
          {
            if (i < j)
            {
              String[] arrayOfString = paramContext[i].split(":");
              a localA;
              if ((arrayOfString != null) && (arrayOfString.length > 0))
              {
                localA = new a();
                localA.a = arrayOfString[0];
                if (arrayOfString.length != 2) {}
              }
              try
              {
                localA.b = Integer.parseInt(arrayOfString[1]);
                localA.c = paramInt;
                paramString.add(localA);
                i += 1;
              }
              catch (NumberFormatException localNumberFormatException)
              {
                for (;;)
                {
                  TLog.e("TPush", localNumberFormatException.getMessage());
                }
              }
            }
          }
          if (paramString.size() != 0) {
            return paramString;
          }
        }
      }
    }
    return null;
    return paramString;
  }
  
  private static void a(String paramString)
  {
    TLog.v("XGService", "@@ removeRegisterInfoByPkgNameFromSettings(" + paramString + ")");
    if (l.f() != null) {
      d.a(l.f(), c(paramString, ".reg"), "");
    }
  }
  
  private static void a(String paramString1, String paramString2, int paramInt)
  {
    TLog.v("XGService", "@@ getRegisterInfoByPkgNameFromSettings(" + paramString1 + ")");
    paramString1 = a(paramString1, c(paramString1, ".reg"));
    if (paramString1 != null) {
      a(paramString1, paramString2, paramInt);
    }
  }
  
  private static boolean a(Context paramContext, String paramString, int paramInt, List paramList)
  {
    if ((paramList != null) && (paramList.size() > 0))
    {
      List localList = a(paramContext, paramString, paramInt);
      if (localList != null)
      {
        Iterator localIterator1 = localList.iterator();
        while (localIterator1.hasNext())
        {
          a localA = (a)localIterator1.next();
          Iterator localIterator2 = paramList.iterator();
          while (localIterator2.hasNext()) {
            if (localA.a((a)localIterator2.next())) {
              localList.remove(localA);
            }
          }
        }
        localList.addAll(paramList);
        return a(paramContext, paramString, localList);
      }
      return a(paramContext, paramString, paramList);
    }
    return false;
  }
  
  private static boolean a(Context paramContext, String paramString, int paramInt, String[] paramArrayOfString)
  {
    if ((paramContext != null) && (d.a(paramString)) && (paramArrayOfString != null) && (paramArrayOfString.length > 0))
    {
      List localList = a(paramContext, paramString, paramInt);
      if (localList != null)
      {
        Iterator localIterator = localList.iterator();
        while (localIterator.hasNext())
        {
          a localA = (a)localIterator.next();
          int j = paramArrayOfString.length;
          int i = 0;
          while (i < j)
          {
            String str = paramArrayOfString[i];
            if (localA.a(str))
            {
              TLog.v("TPush", ">>> delete ip " + str + " @[" + paramInt + "]");
              localList.remove(localA);
            }
            i += 1;
          }
        }
        return a(paramContext, paramString, localList);
      }
    }
    return false;
  }
  
  private static boolean a(Context paramContext, String paramString, List paramList)
  {
    if ((paramContext != null) && (d.a(paramString)) && (paramList != null) && (paramList.size() > 0))
    {
      StringBuilder localStringBuilder = new StringBuilder();
      paramList = paramList.iterator();
      while (paramList.hasNext())
      {
        a localA = (a)paramList.next();
        localStringBuilder.append(localA.a);
        if (localA.b > 0) {
          localStringBuilder.append(localA.b);
        }
        localStringBuilder.append("|");
      }
      if (localStringBuilder.length() > 0) {
        localStringBuilder.deleteCharAt(localStringBuilder.length() - 1);
      }
      if (localStringBuilder.length() > 0)
      {
        TLog.v("TPush", ">>> update ip success. @[" + paramString + "]");
        return d.a(paramContext, ".com.tencent.tpush.cache.adv.ip", Rijndael.encrypt(localStringBuilder.toString()));
      }
    }
    TLog.v("TPush", ">>> update ip fail. @[" + paramString + "]");
    return false;
  }
  
  private static boolean a(b paramB, String paramString, int paramInt)
  {
    TLog.v("XGService", "@@ addRegisterInfoToSettings(" + paramB + ")");
    if ((l.f() != null) && (paramB != null))
    {
      String str = Rijndael.encrypt(paramB.a + "|" + paramB.b + "|" + paramB.c + "|" + paramInt + "|" + System.currentTimeMillis());
      if (!d.a(str))
      {
        d.a(l.f(), paramString, str);
        TLog.i("XGService", ">> update registerInfo " + paramB.d + " success.");
        return true;
      }
    }
    TLog.e("XGService", ">> add registerInfo failed!");
    return false;
  }
  
  public static boolean addAdvancedIP(Context paramContext, List paramList)
  {
    return a(paramContext, ".com.tencent.tpush.cache.adv.ip", 0, paramList);
  }
  
  public static void addOptKey(Context paramContext, String paramString)
  {
    TLog.v("XGService", "@@ addOptKey(" + paramContext.getPackageName() + ")");
    try
    {
      HashSet localHashSet1 = getOptKeyList(paramContext);
      localHashSet1.add(paramString);
      addOptKeyList(paramContext, localHashSet1);
      return;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        HashSet localHashSet2 = new HashSet();
      }
    }
  }
  
  public static void addOptKeyList(Context paramContext, HashSet paramHashSet)
  {
    if (paramContext != null) {
      TLog.v("XGService", "@@ addOptKeyList(" + paramContext.getPackageName() + ")");
    }
    try
    {
      d.a(paramContext, ".com.tencent.tpush.cache.keylist", Rijndael.encrypt(k.a(paramHashSet)));
      return;
    }
    catch (Exception paramContext)
    {
      TLog.e("XGService", paramContext.getMessage());
    }
  }
  
  public static boolean addOptStrategy(StrategyItem paramStrategyItem)
  {
    for (;;)
    {
      OptStrategyList localOptStrategyList2;
      try
      {
        String str = d.g(l.f());
        TLog.v("XGService", "@@ addOptStrategy(" + str + ")");
        try
        {
          OptStrategyList localOptStrategyList1 = getOptStrategyList(l.f(), str);
          if (paramStrategyItem.d() != 1) {
            break label141;
          }
          TLog.i("XGService", ">> http");
          if (paramStrategyItem.f() == 0)
          {
            TLog.i("XGService", ">> no redirected");
            localOptStrategyList1.d(paramStrategyItem);
            boolean bool = addOptStrategyList(l.f(), str, localOptStrategyList1);
            return bool;
          }
        }
        catch (Exception localException)
        {
          TLog.e("XGService", ">> Can not get OptStrategyList from local", localException);
          localOptStrategyList2 = new OptStrategyList();
          continue;
        }
        TLog.i("XGService", ">> redirected");
      }
      finally {}
      localOptStrategyList2.c(paramStrategyItem);
      continue;
      label141:
      TLog.i("XGService", ">> tcp");
      if (paramStrategyItem.f() == 0)
      {
        TLog.i("XGService", ">> no redirected");
        localOptStrategyList2.b(paramStrategyItem);
      }
      else
      {
        TLog.i("XGService", ">> redirected");
        localOptStrategyList2.a(paramStrategyItem);
      }
    }
  }
  
  public static boolean addOptStrategyList(Context paramContext, String paramString, OptStrategyList paramOptStrategyList)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (paramContext != null)
    {
      if (paramString != null) {
        break label25;
      }
      bool1 = bool2;
    }
    for (;;)
    {
      return bool1;
      try
      {
        label25:
        TLog.v("XGService", "@@ addOptStrategyList(" + paramContext.getPackageName() + "," + paramString + ")");
        addOptKey(paramContext, paramString);
        paramString = paramString + ".com.tencent.tpush.cache.redirect";
        try
        {
          paramOptStrategyList.a(System.currentTimeMillis());
          bool1 = d.a(paramContext, paramString, Rijndael.encrypt(k.a(paramOptStrategyList)));
        }
        catch (Exception paramContext)
        {
          TLog.e("XGService", paramContext.getMessage());
          bool1 = bool2;
        }
      }
      finally {}
    }
  }
  
  public static boolean addRegisterInfo(b paramB)
  {
    TLog.v("XGService", "@@ addRegisterInfo()");
    return a(paramB, c(paramB.d, ".reg"), 0);
  }
  
  public static void addRegisterInfos(String paramString)
  {
    TLog.v("XGService", "@@ addRegisterInfos(" + paramString + ")");
    try
    {
      Context localContext = l.f();
      String str1 = d.e(localContext, c("tpush_reginfos", ".reg"));
      if (d.a(str1)) {
        str1 = Rijndael.encrypt(paramString + ",");
      }
      for (;;)
      {
        TLog.i("XGService", str1);
        d.a(localContext, c("tpush_reginfos", ".reg"), str1);
        return;
        String str2 = Rijndael.decrypt(str1);
        if (!str2.contains(paramString)) {
          str1 = Rijndael.encrypt(str2 + paramString + ",");
        }
      }
      return;
    }
    catch (Exception paramString)
    {
      TLog.e("XGService", paramString.getMessage());
    }
  }
  
  public static boolean addSecondaryIP(Context paramContext, List paramList)
  {
    return a(paramContext, ".com.tencent.tpush.cache.sec.ip", 1, paramList);
  }
  
  public static boolean addServerItems(Context paramContext, String paramString, ArrayList paramArrayList)
  {
    if ((paramContext == null) || (paramString == null)) {
      return false;
    }
    TLog.v("XGService", "@@ addServerItems(" + paramContext.getPackageName() + "," + paramString + "," + paramArrayList + ")");
    saveDomainKey(paramContext, paramString);
    paramString = paramString + ".com.tencent.tpush.cache.server";
    try
    {
      boolean bool = d.a(paramContext, paramString, Rijndael.encrypt(k.a(paramArrayList)));
      return bool;
    }
    catch (Exception paramContext)
    {
      TLog.e("XGService", paramContext.getMessage());
    }
    return false;
  }
  
  private static b b(String paramString1, String paramString2)
  {
    try
    {
      paramString1 = Rijndael.decrypt(paramString1);
      if (!d.a(paramString1))
      {
        paramString1 = paramString1.split("\\|");
        if (paramString1.length < 5) {
          return null;
        }
        b localB = new b();
        localB.a = Long.parseLong(paramString1[0]);
        localB.b = paramString1[1];
        localB.c = paramString1[2];
        localB.e = Integer.parseInt(paramString1[3]);
        localB.f = Long.parseLong(paramString1[4]);
        localB.d = paramString2;
        return localB;
      }
    }
    catch (Exception paramString1)
    {
      TLog.e("XGService", paramString1.getMessage());
    }
    return null;
  }
  
  private static String c(String paramString1, String paramString2)
  {
    return paramString1 + ".com.tencent.tpush.cache" + paramString2;
  }
  
  public static void clearDomainServerItem(Context paramContext)
  {
    TLog.v("XGService", "@@ clearDomainServerItem(" + paramContext.getPackageName() + ")");
    try
    {
      Object localObject = getDomainKeyList(paramContext);
      ((ArrayList)localObject).add(String.valueOf(3));
      ((ArrayList)localObject).add(String.valueOf(1));
      ((ArrayList)localObject).add(String.valueOf(2));
      localObject = ((ArrayList)localObject).iterator();
      while (((Iterator)localObject).hasNext())
      {
        String str = (String)((Iterator)localObject).next();
        TLog.i("XGService", ">> server key=" + str);
        str = str + ".com.tencent.tpush.cache.server";
        try
        {
          d.a(paramContext, str, "");
        }
        catch (Exception localException)
        {
          TLog.e("XGService", localException.getMessage());
        }
      }
    }
    catch (NullReturnException localNullReturnException)
    {
      for (;;)
      {
        ArrayList localArrayList = new ArrayList();
      }
    }
  }
  
  public static void clearOptKeyList(Context paramContext)
  {
    if (paramContext != null) {
      d.a(paramContext, ".com.tencent.tpush.cache.keylist", "");
    }
  }
  
  public static boolean deleteAdvancedIP(Context paramContext, String[] paramArrayOfString)
  {
    return a(paramContext, ".com.tencent.tpush.cache.adv.ip", 0, paramArrayOfString);
  }
  
  public static boolean deteleSecondaryIP(Context paramContext, String[] paramArrayOfString)
  {
    return a(paramContext, ".com.tencent.tpush.cache.sec.ip", 1, paramArrayOfString);
  }
  
  public static List getAdvancedIP(Context paramContext)
  {
    return a(paramContext, ".com.tencent.tpush.cache.adv.ip", 0);
  }
  
  public static String getDomain(Context paramContext)
  {
    if (paramContext != null)
    {
      TLog.v("XGService", "@@ getDomain(" + paramContext.getPackageName() + ")");
      return d.e(paramContext, ".com.tencent.tpush.cache.domain");
    }
    return "";
  }
  
  public static ArrayList getDomainKeyList(Context paramContext)
  {
    if (paramContext == null) {
      throw new NullReturnException("getDomainKeyList return null,because ctx is null");
    }
    TLog.v("XGService", "@@ getDomainKeyList(" + paramContext.getPackageName() + ")");
    try
    {
      paramContext = k.a(Rijndael.decrypt(d.e(paramContext, ".com.tencent.tpush.cache.domain.key")));
      if ((paramContext instanceof ArrayList)) {
        return (ArrayList)paramContext;
      }
      throw new NullReturnException("getDomainKeyList return null,because object not instance of ArrayList<?>");
    }
    catch (Exception paramContext)
    {
      TLog.w("XGService", paramContext.getMessage());
      throw new NullReturnException("getDomainKeyList return null，deseriallize err", paramContext);
    }
  }
  
  public static long getLastLoadIpTime(Context paramContext)
  {
    long l = 0L;
    if (paramContext != null) {
      l = d.c(paramContext, ".com.tencent.tpush.cache.load.ip.last.time", 0L);
    }
    return l;
  }
  
  public static HashSet getOptKeyList(Context paramContext)
  {
    if (paramContext == null) {
      throw new NullReturnException("getOptKeyList return null,because ctx is null");
    }
    TLog.v("XGService", "@@ getOptKeyList(" + paramContext.getPackageName() + ")");
    try
    {
      paramContext = k.a(Rijndael.decrypt(d.e(paramContext, ".com.tencent.tpush.cache.keylist")));
      if ((paramContext instanceof HashSet)) {
        return (HashSet)paramContext;
      }
      throw new NullReturnException("getOptKeyList return null,because object not instance of ArrayList<?>");
    }
    catch (Exception paramContext)
    {
      throw new NullReturnException("getOptKeyList return null，deseriallize err", paramContext);
    }
  }
  
  public static OptStrategyList getOptStrategyList(Context paramContext, String paramString)
  {
    if ((paramContext == null) || (paramString == null)) {
      for (;;)
      {
        try
        {
          StringBuffer localStringBuffer = new StringBuffer("getStrategy return null,contex is null(");
          if (paramContext == null)
          {
            bool = true;
            throw new NullReturnException(bool + ") and key=" + paramString);
          }
        }
        catch (Exception paramContext)
        {
          throw new NullReturnException("getOptStrategyList return null,deserialize err", paramContext);
        }
        boolean bool = false;
      }
    }
    TLog.v("XGService", "@@ getOptStrategyList(" + paramContext.getPackageName() + "," + paramString + ")");
    paramContext = k.a(Rijndael.decrypt(d.e(paramContext, paramString + ".com.tencent.tpush.cache.redirect")));
    if ((paramContext instanceof OptStrategyList)) {
      return (OptStrategyList)paramContext;
    }
    throw new NullReturnException("getStrategy return null, because serializer object is not instanceof OptStrategyList");
  }
  
  public static String getQua(Context paramContext, long paramLong)
  {
    String str = "";
    if (paramContext != null) {
      str = Rijndael.decrypt(d.e(paramContext, ".com.tencent.tpush.cache.qua." + paramLong));
    }
    return str;
  }
  
  public static List getRegisterInfo(Context paramContext)
  {
    TLog.v("XGService", "@@ getRegisterInfo()");
    Object localObject2 = null;
    Object localObject1 = localObject2;
    if (paramContext != null)
    {
      paramContext = getRegisterInfos(paramContext);
      localObject1 = localObject2;
      if (paramContext != null)
      {
        localObject1 = localObject2;
        if (paramContext.size() > 0)
        {
          localObject1 = new ArrayList();
          paramContext = paramContext.iterator();
          while (paramContext.hasNext())
          {
            localObject2 = (String)paramContext.next();
            TLog.i("XGService", ">> registerInfo : " + (String)localObject2);
            localObject2 = getRegisterInfoByPkgName((String)localObject2);
            if ((localObject2 != null) && (((b)localObject2).e < 4)) {
              ((List)localObject1).add(localObject2);
            }
          }
        }
      }
    }
    return localObject1;
  }
  
  public static b getRegisterInfoByPkgName(String paramString)
  {
    return a(paramString, c(paramString, ".reg"));
  }
  
  public static List getRegisterInfos(Context paramContext)
  {
    TLog.v("XGService", "@@ getRegisterInfos()");
    try
    {
      Object localObject = Rijndael.decrypt(d.e(paramContext, c("tpush_reginfos", ".reg")));
      if (!d.a((String)localObject)) {
        TLog.i("XGService", (String)localObject);
      }
      for (localObject = new ArrayList(Arrays.asList(((String)localObject).split(",")));; localObject = new ArrayList())
      {
        if (!((List)localObject).contains(paramContext.getPackageName())) {
          ((List)localObject).add(paramContext.getPackageName());
        }
        return localObject;
      }
    }
    catch (Exception localException)
    {
      for (;;)
      {
        TLog.e("XGService", localException.getMessage());
        ArrayList localArrayList = new ArrayList();
      }
    }
  }
  
  public static List getSecondaryIP(Context paramContext)
  {
    return a(paramContext, ".com.tencent.tpush.cache.sec.ip", 1);
  }
  
  public static ArrayList getServerItems(Context paramContext, String paramString)
  {
    TLog.v("XGService", "@@ getServerItems(" + paramContext + "," + paramString + ")");
    if (paramString == null) {
      throw new NullReturnException("getServerItems return null,because key is null");
    }
    paramString = paramString + ".com.tencent.tpush.cache.server";
    try
    {
      paramContext = k.a(Rijndael.decrypt(d.e(paramContext, paramString)));
      if ((paramContext instanceof ArrayList)) {
        return (ArrayList)paramContext;
      }
      throw new NullReturnException("getServerItems return null,because object not instance of Arraylist<?>");
    }
    catch (Exception paramContext)
    {
      throw new NullReturnException("getServerItem return null,deseriallize err", paramContext);
    }
  }
  
  public static ArrayList getSpeedTestList(Context paramContext)
  {
    if (paramContext == null) {
      throw new NullReturnException("getSpeedTestList return null ,because ctx is null");
    }
    paramContext = Rijndael.decrypt(d.e(paramContext, ".com.tencent.tpush.cache.speed.test"));
    try
    {
      paramContext = k.a(paramContext);
      if ((paramContext instanceof ArrayList)) {
        return (ArrayList)paramContext;
      }
      throw new NullReturnException("getSpeedTestList return null ,because instanceof err");
    }
    catch (Exception paramContext)
    {
      throw new NullReturnException("getSpeedTestList return null ,because deserialize err", paramContext);
    }
  }
  
  public static long getTestSpeedTime(Context paramContext)
  {
    long l = 0L;
    if (paramContext != null) {
      l = d.c(paramContext, "Channel.SpeedDetector.LastActivationTimestamp", 0L);
    }
    return l;
  }
  
  public static String getToken(Context paramContext)
  {
    String str = null;
    if (paramContext != null) {
      str = MidService.getLocalMidOnly(paramContext);
    }
    paramContext = str;
    if (d.a(str)) {
      paramContext = "0";
    }
    TLog.i("XGService", "token==" + paramContext);
    return paramContext;
  }
  
  public static ArrayList getUninstallAndUnregisterInfo(Context paramContext)
  {
    TLog.v("XGService", ">>> getUninstallInfo.");
    Object localObject2 = null;
    Object localObject1 = localObject2;
    if (paramContext != null)
    {
      paramContext = getRegisterInfos(paramContext);
      localObject1 = localObject2;
      if (paramContext != null)
      {
        localObject1 = localObject2;
        if (paramContext.size() > 0)
        {
          localObject1 = new ArrayList();
          paramContext = paramContext.iterator();
          while (paramContext.hasNext())
          {
            localObject2 = (String)paramContext.next();
            TLog.i("XGService", ">> registerInfo : " + (String)localObject2);
            localObject2 = getRegisterInfoByPkgName((String)localObject2);
            if ((localObject2 != null) && (((b)localObject2).e > 0) && (((b)localObject2).e < 3))
            {
              UnregInfo localUnregInfo = new UnregInfo();
              localUnregInfo.appInfo = new AppInfo(((b)localObject2).a, ((b)localObject2).b, d.c(((b)localObject2).d), (byte)0);
              localUnregInfo.isUninstall = ((byte)((b)localObject2).e);
              localUnregInfo.timestamp = ((b)localObject2).f;
              ((ArrayList)localObject1).add(localUnregInfo);
            }
          }
        }
      }
    }
    return localObject1;
  }
  
  public static List getUninstallInfo(Context paramContext)
  {
    TLog.v("XGService", ">>> getUninstallInfo.");
    Object localObject2 = null;
    Object localObject1 = localObject2;
    if (paramContext != null)
    {
      paramContext = getRegisterInfos(paramContext);
      localObject1 = localObject2;
      if (paramContext != null)
      {
        localObject1 = localObject2;
        if (paramContext.size() > 0)
        {
          localObject1 = new ArrayList();
          paramContext = paramContext.iterator();
          while (paramContext.hasNext())
          {
            localObject2 = (String)paramContext.next();
            TLog.i("XGService", ">> registerInfo : " + (String)localObject2);
            localObject2 = getRegisterInfoByPkgName((String)localObject2);
            if ((localObject2 != null) && (((b)localObject2).e > 1) && (((b)localObject2).e < 3)) {
              ((List)localObject1).add(localObject2);
            }
          }
        }
      }
    }
    return localObject1;
  }
  
  public static List getUnregisterInfo(Context paramContext)
  {
    TLog.v("XGService", ">>> getUnregisterInfo.");
    Object localObject2 = null;
    Object localObject1 = localObject2;
    if (paramContext != null)
    {
      paramContext = getRegisterInfos(paramContext);
      localObject1 = localObject2;
      if (paramContext != null)
      {
        localObject1 = localObject2;
        if (paramContext.size() > 0)
        {
          localObject1 = new ArrayList();
          paramContext = paramContext.iterator();
          while (paramContext.hasNext())
          {
            localObject2 = (String)paramContext.next();
            TLog.i("XGService", ">> registerInfo : " + (String)localObject2);
            localObject2 = getRegisterInfoByPkgName((String)localObject2);
            if ((localObject2 != null) && (((b)localObject2).e > 0) && (((b)localObject2).e < 2)) {
              ((List)localObject1).add(localObject2);
            }
          }
        }
      }
    }
    return localObject1;
  }
  
  public static void removeRegisterInfoByPkgName(String paramString)
  {
    TLog.v("XGService", "@@ removeRegisterInfoByPkgName(" + paramString + ")");
    a(paramString);
  }
  
  public static void removeRegisterInfos(String paramString)
  {
    TLog.v("XGService", "@@ removeRegisterInfos(" + paramString + ")");
    try
    {
      Context localContext = l.f();
      String str2 = d.e(localContext, c("tpush_reginfos", ".reg"));
      String str1 = str2;
      if (!d.a(str2))
      {
        String str3 = Rijndael.decrypt(str2);
        str1 = str2;
        if (str3.contains(paramString + ",")) {
          str1 = Rijndael.encrypt(str3.replaceAll(paramString + ",", ""));
        }
      }
      TLog.i("XGService", str1);
      d.a(localContext, c("tpush_reginfos", ".reg"), str1);
      return;
    }
    catch (Exception paramString)
    {
      TLog.e("XGService", paramString.getMessage());
    }
  }
  
  public static void saveDomain(Context paramContext, String paramString)
  {
    if (paramContext != null)
    {
      TLog.v("XGService", "@@ clearCacheServerItems(" + paramContext.getPackageName() + ")");
      d.a(paramContext, ".com.tencent.tpush.cache.domain", paramString);
    }
  }
  
  public static void saveDomainKey(Context paramContext, String paramString)
  {
    if (paramContext != null) {
      TLog.v("XGService", "@@ saveDomainKey(" + paramContext.getPackageName() + "," + paramString + ")");
    }
    try
    {
      ArrayList localArrayList1 = getDomainKeyList(paramContext);
      localArrayList1.add(paramString);
      saveDomainKeyList(paramContext, localArrayList1);
      return;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        TLog.w("XGService", localException.getMessage());
        ArrayList localArrayList2 = new ArrayList();
      }
    }
  }
  
  public static void saveDomainKeyList(Context paramContext, ArrayList paramArrayList)
  {
    String str;
    if (paramContext != null)
    {
      TLog.v("XGService", "@@ saveDomainKeyList(" + paramContext.getPackageName() + "," + paramArrayList + ")");
      str = "";
      if (paramArrayList == null) {}
    }
    try
    {
      str = k.a(paramArrayList);
      d.a(paramContext, ".com.tencent.tpush.cache.domain.key", Rijndael.encrypt(str));
      return;
    }
    catch (Exception paramContext)
    {
      TLog.e("XGService", paramContext.getMessage());
    }
  }
  
  public static boolean saveLoadIpTime(Context paramContext, long paramLong)
  {
    if ((paramContext != null) && (paramLong > 0L)) {
      return d.b(paramContext, ".com.tencent.tpush.cache.load.ip.last.time", paramLong);
    }
    return false;
  }
  
  public static void saveSpeedTestList(Context paramContext, ArrayList paramArrayList)
  {
    if (paramContext == null) {
      return;
    }
    try
    {
      d.a(paramContext, ".com.tencent.tpush.cache.speed.test", Rijndael.encrypt(k.a(paramArrayList)));
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public static boolean setQua(Context paramContext, long paramLong, String paramString)
  {
    if ((paramContext != null) && (!d.a(paramString)) && (paramLong > 0L)) {
      return d.a(paramContext, ".com.tencent.tpush.cache.qua." + paramLong, Rijndael.encrypt(paramString));
    }
    return false;
  }
  
  public static boolean setTestSpeedTime(Context paramContext, long paramLong)
  {
    if ((paramContext != null) && (paramLong > 0L)) {
      return d.b(paramContext, "Channel.SpeedDetector.LastActivationTimestamp", paramLong);
    }
    return false;
  }
  
  public static boolean setToken(Context paramContext, String paramString)
  {
    if ((paramContext != null) && (!d.a(paramString)))
    {
      TLog.v("XGService", "@@ setToken(" + paramContext.getPackageName() + "," + paramString + ")");
      if (!paramString.equals(getToken(paramContext)))
      {
        TLog.i("XGService", ">> save " + paramString);
        Util.updateIfLocalInvalid(paramContext, paramString);
        return true;
      }
    }
    return false;
  }
  
  public static boolean updateAdvancedIP(Context paramContext, List paramList)
  {
    return a(paramContext, ".com.tencent.tpush.cache.adv.ip", paramList);
  }
  
  public static boolean updateSecondaryIP(Context paramContext, List paramList)
  {
    return a(paramContext, ".com.tencent.tpush.cache.sec.ip", paramList);
  }
  
  public static void updateUnregUninList(Context paramContext, ArrayList paramArrayList)
  {
    if ((paramContext != null) && (paramArrayList != null) && (paramArrayList.size() > 0))
    {
      TLog.v("XGService", "@@ updateUnregUninList(" + paramContext.getPackageName() + "," + paramArrayList + ")");
      List localList = getUnregisterInfo(paramContext);
      paramContext = getUninstallInfo(paramContext);
      if (localList != null)
      {
        int i = 0;
        while (i < paramArrayList.size())
        {
          UnregInfo localUnregInfo = (UnregInfo)paramArrayList.get(i);
          Object localObject;
          if (localUnregInfo.isUninstall == 1)
          {
            int j = 0;
            while (j < localList.size())
            {
              localObject = (b)localList.get(j);
              if (((b)localObject).a == localUnregInfo.appInfo.accessId)
              {
                a(((b)localObject).d, c(((b)localObject).d, ".reg"), 3);
                TLog.i("XGService", ">> update unreg of " + ((b)localObject).d + " from reconnback list.");
              }
              j += 1;
            }
          }
          if (localUnregInfo.isUninstall == 2)
          {
            localObject = paramContext.iterator();
            while (((Iterator)localObject).hasNext())
            {
              b localB = (b)((Iterator)localObject).next();
              if (localB.a == localUnregInfo.appInfo.accessId)
              {
                TLog.i("XGService", ">> remove uninstall of " + localB.d + " from reconnback list.");
                a(localB.d, c(localB.d, ".reg"), 4);
              }
            }
          }
          i += 1;
        }
      }
    }
  }
}
