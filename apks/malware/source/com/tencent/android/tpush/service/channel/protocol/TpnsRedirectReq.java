package com.tencent.android.tpush.service.channel.protocol;

import com.qq.taf.jce.JceDisplayer;
import com.qq.taf.jce.JceInputStream;
import com.qq.taf.jce.JceOutputStream;
import com.qq.taf.jce.JceStruct;
import com.qq.taf.jce.JceUtil;

public final class TpnsRedirectReq
  extends JceStruct
  implements Cloneable
{
  public byte network = 0;
  public byte op = 0;
  
  static
  {
    if (!TpnsRedirectReq.class.desiredAssertionStatus()) {}
    for (boolean bool = true;; bool = false)
    {
      $assertionsDisabled = bool;
      return;
    }
  }
  
  public TpnsRedirectReq() {}
  
  public TpnsRedirectReq(byte paramByte1, byte paramByte2)
  {
    this.network = paramByte1;
    this.op = paramByte2;
  }
  
  public String className()
  {
    return "TPNS_CLIENT_PROTOCOL.TpnsRedirectReq";
  }
  
  public Object clone()
  {
    Object localObject1 = null;
    try
    {
      Object localObject2 = super.clone();
      localObject1 = localObject2;
    }
    catch (CloneNotSupportedException localCloneNotSupportedException)
    {
      while ($assertionsDisabled) {}
      throw new AssertionError();
    }
    return localObject1;
  }
  
  public void display(StringBuilder paramStringBuilder, int paramInt)
  {
    paramStringBuilder = new JceDisplayer(paramStringBuilder, paramInt);
    paramStringBuilder.display(this.network, "network");
    paramStringBuilder.display(this.op, "op");
  }
  
  public void displaySimple(StringBuilder paramStringBuilder, int paramInt)
  {
    paramStringBuilder = new JceDisplayer(paramStringBuilder, paramInt);
    paramStringBuilder.displaySimple(this.network, true);
    paramStringBuilder.displaySimple(this.op, false);
  }
  
  public boolean equals(Object paramObject)
  {
    if (paramObject == null) {}
    do
    {
      return false;
      paramObject = (TpnsRedirectReq)paramObject;
    } while ((!JceUtil.equals(this.network, paramObject.network)) || (!JceUtil.equals(this.op, paramObject.op)));
    return true;
  }
  
  public String fullClassName()
  {
    return "com.tencent.android.tpush.service.channel.protocol.TpnsRedirectReq";
  }
  
  public byte getNetwork()
  {
    return this.network;
  }
  
  public byte getOp()
  {
    return this.op;
  }
  
  public int hashCode()
  {
    try
    {
      throw new Exception("Need define key first!");
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return 0;
  }
  
  public void readFrom(JceInputStream paramJceInputStream)
  {
    this.network = paramJceInputStream.read(this.network, 0, false);
    this.op = paramJceInputStream.read(this.op, 1, false);
  }
  
  public void setNetwork(byte paramByte)
  {
    this.network = paramByte;
  }
  
  public void setOp(byte paramByte)
  {
    this.op = paramByte;
  }
  
  public void writeTo(JceOutputStream paramJceOutputStream)
  {
    paramJceOutputStream.write(this.network, 0);
    paramJceOutputStream.write(this.op, 1);
  }
}
