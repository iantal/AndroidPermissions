package com.tencent.android.tpush.service.channel.c;

import com.tencent.android.tpush.service.channel.exception.IORefusedException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public class e
{
  static
  {
    if (!e.class.desiredAssertionStatus()) {}
    for (boolean bool = true;; bool = false)
    {
      a = bool;
      return;
    }
  }
  
  public e() {}
  
  public static int a(InputStream paramInputStream, byte[] paramArrayOfByte, int paramInt)
  {
    int i;
    if ((paramInputStream.available() == 0) && (paramArrayOfByte.length - paramInt > 0))
    {
      i = 0;
      return i;
    }
    if (paramArrayOfByte.length - paramInt < paramInputStream.available()) {}
    for (int j = paramArrayOfByte.length - paramInt;; j = paramInputStream.available())
    {
      i = j;
      if (j <= 0) {
        break;
      }
      paramInt = paramInputStream.read(paramArrayOfByte, paramInt, j);
      i = paramInt;
      if (paramInt != -1) {
        break;
      }
      throw new IOException("the end of stream has been reached!");
    }
  }
  
  public static int a(OutputStream paramOutputStream, int paramInt)
  {
    if ((!a) && ((paramInt < 0) || (paramInt > 255L))) {
      throw new AssertionError();
    }
    paramOutputStream.write((byte)(paramInt & 0xFF));
    return 1;
  }
  
  public static int a(OutputStream paramOutputStream, long paramLong)
  {
    if ((!a) && ((paramLong < 0L) || (paramLong > 4294967295L))) {
      throw new AssertionError();
    }
    paramOutputStream.write(new byte[] { (byte)(int)(paramLong >> 24 & 0xFF), (byte)(int)(paramLong >> 16 & 0xFF), (byte)(int)(paramLong >> 8 & 0xFF), (byte)(int)(paramLong & 0xFF) });
    return 4;
  }
  
  public static int a(OutputStream paramOutputStream, byte[] paramArrayOfByte)
  {
    int i = 0;
    int j = 0;
    while (i < paramArrayOfByte.length)
    {
      paramOutputStream.write(paramArrayOfByte, i, 1);
      j += 1;
      i += 1;
    }
    return j;
  }
  
  public static short a(InputStream paramInputStream)
  {
    if (!a(paramInputStream, 1)) {
      throw new IORefusedException("inputstream cannot read 1 byte");
    }
    byte[] arrayOfByte = new byte[1];
    if (paramInputStream.read(arrayOfByte) == -1) {
      throw new IOException("the end of stream has been reached!");
    }
    return (short)(arrayOfByte[0] & 0xFF);
  }
  
  public static boolean a(InputStream paramInputStream, int paramInt)
  {
    return paramInputStream.available() >= paramInt;
  }
  
  public static int b(OutputStream paramOutputStream, int paramInt)
  {
    paramOutputStream.write(new byte[] { (byte)(paramInt >> 24 & 0xFF), (byte)(paramInt >> 16 & 0xFF), (byte)(paramInt >> 8 & 0xFF), (byte)(paramInt & 0xFF) });
    return 4;
  }
  
  public static long b(InputStream paramInputStream)
  {
    if (!a(paramInputStream, 4)) {
      throw new IORefusedException("inputstream cannot read 4 byte");
    }
    byte[] arrayOfByte = new byte[4];
    if (paramInputStream.read(arrayOfByte) == -1) {
      throw new IOException("the end of stream has been reached!");
    }
    int i = arrayOfByte[3];
    int j = arrayOfByte[2];
    int k = arrayOfByte[1];
    return (arrayOfByte[0] & 0xFF) << 24 | i & 0xFF | (j & 0xFF) << 8 | (k & 0xFF) << 16;
  }
  
  public static int c(InputStream paramInputStream)
  {
    if (!a(paramInputStream, 4)) {
      throw new IORefusedException("inputstream cannot read 4 byte");
    }
    byte[] arrayOfByte = new byte[4];
    if (paramInputStream.read(arrayOfByte) == -1) {
      throw new IOException("the end of stream has been reached!");
    }
    int i = arrayOfByte[3];
    int j = arrayOfByte[2];
    int k = arrayOfByte[1];
    return (arrayOfByte[0] & 0xFF) << 24 | i & 0xFF | (j & 0xFF) << 8 | (k & 0xFF) << 16;
  }
}
