package com.tencent.android.tpush;

import android.app.Notification;
import android.app.PendingIntent;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.support.v4.app.NotificationCompat.Builder;
import android.widget.RemoteViews;
import com.tencent.android.tpush.common.e;
import org.json.JSONObject;

public abstract class XGPushNotificationBuilder
{
  public static final String BASIC_NOTIFICATION_BUILDER_TYPE = "basic";
  public static final String CUSTOM_NOTIFICATION_BUILDER_TYPE = "custom";
  protected Integer a = null;
  protected PendingIntent b = null;
  protected RemoteViews c = null;
  protected Integer d = null;
  protected PendingIntent e = null;
  protected Integer f = null;
  protected Integer g = null;
  protected Integer h = null;
  protected Integer i = null;
  protected Integer j = null;
  protected Integer k = null;
  protected Integer l = null;
  protected Uri m = null;
  protected CharSequence n = null;
  protected long[] o = null;
  protected Long p = null;
  protected Integer q = null;
  protected Bitmap r = null;
  protected Integer s = null;
  protected String t;
  protected Integer u = null;
  
  public XGPushNotificationBuilder() {}
  
  protected Notification a(Context paramContext)
  {
    new Notification();
    if (this.u == null) {
      this.u = Integer.valueOf(0);
    }
    NotificationCompat.Builder localBuilder = new NotificationCompat.Builder(paramContext);
    if (this.q != null) {
      localBuilder.setSmallIcon(this.q.intValue());
    }
    if (this.r != null) {
      localBuilder.setLargeIcon(this.r);
    }
    if (this.s != null) {
      localBuilder.setLargeIcon(BitmapFactory.decodeResource(paramContext.getResources(), this.s.intValue()));
    }
    if (this.t == null)
    {
      this.t = getTitle(paramContext);
      if (this.n != null)
      {
        localBuilder.setContentText(this.n);
        localBuilder.setTicker(this.n);
      }
      paramContext = localBuilder.build();
      if (this.a != null) {
        paramContext.audioStreamType = this.a.intValue();
      }
      if (this.b != null) {
        paramContext.contentIntent = this.b;
      }
      if (this.c != null) {
        paramContext.contentView = this.c;
      }
      if (this.d != null) {
        paramContext.defaults = this.d.intValue();
      }
      if (this.g != null) {
        paramContext.icon = this.g.intValue();
      }
      if (this.e != null) {
        paramContext.deleteIntent = this.e;
      }
      if (this.f == null) {
        break label408;
      }
    }
    label408:
    for (paramContext.flags = this.f.intValue();; paramContext.flags = 16)
    {
      if (this.h != null) {
        paramContext.iconLevel = this.h.intValue();
      }
      if (this.i != null) {
        paramContext.ledARGB = this.i.intValue();
      }
      if (this.j != null) {
        paramContext.ledOffMS = this.j.intValue();
      }
      if (this.k != null) {
        paramContext.ledOnMS = this.k.intValue();
      }
      if (this.l != null) {
        paramContext.number = this.l.intValue();
      }
      if (this.m != null) {
        paramContext.sound = this.m;
      }
      if (this.o != null) {
        paramContext.vibrate = this.o;
      }
      if (this.p == null) {
        break label417;
      }
      paramContext.when = this.p.longValue();
      return paramContext;
      localBuilder.setContentTitle(this.t);
      break;
    }
    label417:
    paramContext.when = System.currentTimeMillis();
    return paramContext;
  }
  
  protected abstract void a(JSONObject paramJSONObject);
  
  protected abstract void b(JSONObject paramJSONObject);
  
  public abstract Notification buildNotification(Context paramContext);
  
  public void decode(String paramString)
  {
    paramString = new JSONObject(paramString);
    b(paramString);
    this.a = ((Integer)e.b(paramString, "audioStringType", null));
    this.d = ((Integer)e.b(paramString, "defaults", null));
    this.f = ((Integer)e.b(paramString, "flags", null));
    this.g = ((Integer)e.b(paramString, "icon", null));
    this.h = ((Integer)e.b(paramString, "iconLevel", null));
    this.i = ((Integer)e.b(paramString, "ledARGB", null));
    this.j = ((Integer)e.b(paramString, "ledOffMS", null));
    this.k = ((Integer)e.b(paramString, "ledOnMS", null));
    this.l = ((Integer)e.b(paramString, "number", null));
    Object localObject = (String)e.b(paramString, "sound", null);
    this.q = ((Integer)e.b(paramString, "smallIcon", null));
    this.s = ((Integer)e.b(paramString, "notificationLargeIcon", null));
    if (localObject != null) {
      this.m = Uri.parse((String)localObject);
    }
    localObject = (String)e.b(paramString, "vibrate", null);
    if (localObject != null)
    {
      localObject = ((String)localObject).split(",");
      int i2 = localObject.length;
      this.o = new long[i2];
      int i1 = 0;
      while (i1 < i2)
      {
        this.o[i1] = Long.valueOf(localObject[i1]).longValue();
        i1 += 1;
      }
    }
    this.u = ((Integer)e.b(paramString, "notificationId", null));
  }
  
  public void encode(JSONObject paramJSONObject)
  {
    a(paramJSONObject);
    e.a(paramJSONObject, "audioStringType", this.a);
    e.a(paramJSONObject, "defaults", this.d);
    e.a(paramJSONObject, "flags", this.f);
    e.a(paramJSONObject, "icon", this.g);
    e.a(paramJSONObject, "iconLevel", this.h);
    e.a(paramJSONObject, "ledARGB", this.i);
    e.a(paramJSONObject, "ledOffMS", this.j);
    e.a(paramJSONObject, "ledOnMS", this.k);
    e.a(paramJSONObject, "number", this.l);
    e.a(paramJSONObject, "sound", this.m);
    e.a(paramJSONObject, "smallIcon", this.q);
    e.a(paramJSONObject, "notificationLargeIcon", this.s);
    if (this.o != null)
    {
      StringBuilder localStringBuilder = new StringBuilder();
      int i1 = 0;
      while (i1 < this.o.length)
      {
        localStringBuilder.append(String.valueOf(this.o[i1]));
        if (i1 != this.o.length - 1) {
          localStringBuilder.append(",");
        }
        i1 += 1;
      }
      e.a(paramJSONObject, "vibrate", localStringBuilder.toString());
    }
    e.a(paramJSONObject, "notificationId", this.u);
  }
  
  public int getApplicationIcon(Context paramContext)
  {
    return paramContext.getApplicationInfo().icon;
  }
  
  public int getAudioStringType()
  {
    return this.a.intValue();
  }
  
  public PendingIntent getContentIntent()
  {
    return this.b;
  }
  
  public int getDefaults()
  {
    return this.d.intValue();
  }
  
  public int getFlags()
  {
    return this.f.intValue();
  }
  
  public Integer getIcon()
  {
    return this.g;
  }
  
  public int getIconLevel()
  {
    return this.h.intValue();
  }
  
  public Bitmap getLargeIcon()
  {
    return this.r;
  }
  
  public int getLedARGB()
  {
    return this.i.intValue();
  }
  
  public int getLedOffMS()
  {
    return this.j.intValue();
  }
  
  public int getLedOnMS()
  {
    return this.k.intValue();
  }
  
  public int getNumber()
  {
    return this.l.intValue();
  }
  
  public Integer getSmallIcon()
  {
    return this.q;
  }
  
  public Uri getSound()
  {
    return this.m;
  }
  
  public CharSequence getTickerText()
  {
    return this.n;
  }
  
  public String getTitle(Context paramContext)
  {
    if (this.t == null)
    {
      ApplicationInfo localApplicationInfo = paramContext.getApplicationInfo();
      this.t = ((String)paramContext.getApplicationContext().getPackageManager().getApplicationLabel(localApplicationInfo));
    }
    return this.t;
  }
  
  public abstract String getType();
  
  public long[] getVibrate()
  {
    return this.o;
  }
  
  public long getWhen()
  {
    return this.p.longValue();
  }
  
  public XGPushNotificationBuilder setAudioStringType(int paramInt)
  {
    this.a = Integer.valueOf(paramInt);
    return this;
  }
  
  public XGPushNotificationBuilder setContentIntent(PendingIntent paramPendingIntent)
  {
    this.b = paramPendingIntent;
    return this;
  }
  
  public XGPushNotificationBuilder setContentView(RemoteViews paramRemoteViews)
  {
    this.c = paramRemoteViews;
    return this;
  }
  
  public XGPushNotificationBuilder setDefaults(int paramInt)
  {
    if (this.d == null)
    {
      this.d = Integer.valueOf(paramInt);
      return this;
    }
    this.d = Integer.valueOf(this.d.intValue() | paramInt);
    return this;
  }
  
  public XGPushNotificationBuilder setFlags(int paramInt)
  {
    if (this.f == null)
    {
      this.f = Integer.valueOf(paramInt);
      return this;
    }
    this.f = Integer.valueOf(this.f.intValue() | paramInt);
    return this;
  }
  
  public XGPushNotificationBuilder setIcon(Integer paramInteger)
  {
    this.g = paramInteger;
    return this;
  }
  
  public XGPushNotificationBuilder setIconLevel(int paramInt)
  {
    this.h = Integer.valueOf(paramInt);
    return this;
  }
  
  public XGPushNotificationBuilder setLargeIcon(Bitmap paramBitmap)
  {
    this.r = paramBitmap;
    return this;
  }
  
  public XGPushNotificationBuilder setLedARGB(int paramInt)
  {
    this.i = Integer.valueOf(paramInt);
    return this;
  }
  
  public XGPushNotificationBuilder setLedOffMS(int paramInt)
  {
    this.j = Integer.valueOf(paramInt);
    return this;
  }
  
  public XGPushNotificationBuilder setLedOnMS(int paramInt)
  {
    this.k = Integer.valueOf(paramInt);
    return this;
  }
  
  public XGPushNotificationBuilder setNotificationLargeIcon(int paramInt)
  {
    this.s = Integer.valueOf(paramInt);
    return this;
  }
  
  public XGPushNotificationBuilder setNumber(int paramInt)
  {
    this.l = Integer.valueOf(paramInt);
    return this;
  }
  
  public XGPushNotificationBuilder setSmallIcon(Integer paramInteger)
  {
    this.q = paramInteger;
    return this;
  }
  
  public XGPushNotificationBuilder setSound(Uri paramUri)
  {
    this.m = paramUri;
    return this;
  }
  
  public XGPushNotificationBuilder setTickerText(CharSequence paramCharSequence)
  {
    this.n = paramCharSequence;
    return this;
  }
  
  public void setTitle(String paramString)
  {
    this.t = paramString;
  }
  
  public XGPushNotificationBuilder setVibrate(long[] paramArrayOfLong)
  {
    this.o = paramArrayOfLong;
    return this;
  }
  
  public XGPushNotificationBuilder setWhen(long paramLong)
  {
    this.p = Long.valueOf(paramLong);
    return this;
  }
}
