package com.tencent.bugly.crashreport.common.info;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Environment;
import android.os.StatFs;
import android.telephony.TelephonyManager;
import com.tencent.bugly.a.bf;
import com.tencent.bugly.a.d;
import java.io.File;
import java.util.Locale;

public class e
{
  public static String a()
  {
    try
    {
      String str = Build.MODEL;
      return str;
    }
    catch (Throwable localThrowable)
    {
      if (!bf.a(localThrowable)) {
        localThrowable.printStackTrace();
      }
    }
    return "fail";
  }
  
  public static String a(Context paramContext)
  {
    Object localObject = "fail";
    if (paramContext == null) {
      paramContext = "fail";
    }
    do
    {
      return paramContext;
      try
      {
        paramContext = ((TelephonyManager)paramContext.getSystemService("phone")).getDeviceId();
        if (paramContext == null) {
          return "null";
        }
        localObject = paramContext;
        paramContext = paramContext.toLowerCase();
        return paramContext;
      }
      catch (Throwable localThrowable)
      {
        paramContext = (Context)localObject;
      }
    } while (bf.a(localThrowable));
    localThrowable.printStackTrace();
    return localObject;
  }
  
  public static String b()
  {
    try
    {
      String str = Build.VERSION.RELEASE;
      return str;
    }
    catch (Throwable localThrowable)
    {
      if (!bf.a(localThrowable)) {
        localThrowable.printStackTrace();
      }
    }
    return "fail";
  }
  
  public static String b(Context paramContext)
  {
    Object localObject = "fail";
    if (paramContext == null) {
      paramContext = "fail";
    }
    do
    {
      return paramContext;
      try
      {
        paramContext = ((TelephonyManager)paramContext.getSystemService("phone")).getSubscriberId();
        if (paramContext == null) {
          return "null";
        }
        localObject = paramContext;
        paramContext = paramContext.toLowerCase();
        return paramContext;
      }
      catch (Throwable localThrowable)
      {
        paramContext = (Context)localObject;
      }
    } while (bf.a(localThrowable));
    localThrowable.printStackTrace();
    return localObject;
  }
  
  public static int c()
  {
    try
    {
      int i = Build.VERSION.SDK_INT;
      return i;
    }
    catch (Throwable localThrowable)
    {
      if (!bf.a(localThrowable)) {
        localThrowable.printStackTrace();
      }
    }
    return -1;
  }
  
  /* Error */
  public static String c(Context paramContext)
  {
    // Byte code:
    //   0: ldc 25
    //   2: astore_1
    //   3: aload_0
    //   4: ifnonnull +5 -> 9
    //   7: aload_1
    //   8: areturn
    //   9: aload_0
    //   10: invokevirtual 66	android/content/Context:getContentResolver	()Landroid/content/ContentResolver;
    //   13: ldc 68
    //   15: invokestatic 74	android/provider/Settings$Secure:getString	(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
    //   18: astore_0
    //   19: aload_0
    //   20: ifnonnull +6 -> 26
    //   23: ldc 42
    //   25: areturn
    //   26: aload_0
    //   27: invokevirtual 47	java/lang/String:toLowerCase	()Ljava/lang/String;
    //   30: astore_1
    //   31: aload_1
    //   32: areturn
    //   33: astore_2
    //   34: aload_1
    //   35: astore_0
    //   36: aload_0
    //   37: astore_1
    //   38: aload_2
    //   39: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   42: ifne -35 -> 7
    //   45: aload_2
    //   46: invokevirtual 23	java/lang/Throwable:printStackTrace	()V
    //   49: aload_0
    //   50: areturn
    //   51: astore_2
    //   52: goto -16 -> 36
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	55	0	paramContext	Context
    //   2	36	1	localObject	Object
    //   33	13	2	localThrowable1	Throwable
    //   51	1	2	localThrowable2	Throwable
    // Exception table:
    //   from	to	target	type
    //   9	19	33	java/lang/Throwable
    //   26	31	51	java/lang/Throwable
  }
  
  public static String d(Context paramContext)
  {
    Object localObject = "fail";
    if (paramContext == null) {
      paramContext = "fail";
    }
    do
    {
      return paramContext;
      try
      {
        paramContext = ((WifiManager)paramContext.getSystemService("wifi")).getConnectionInfo().getMacAddress();
        if (paramContext == null) {
          return "null";
        }
        localObject = paramContext;
        paramContext = paramContext.toLowerCase();
        return paramContext;
      }
      catch (Throwable localThrowable)
      {
        paramContext = (Context)localObject;
      }
    } while (bf.a(localThrowable));
    localThrowable.printStackTrace();
    return localObject;
  }
  
  public static boolean d()
  {
    return Environment.getExternalStorageState().equals("mounted");
  }
  
  public static String e()
  {
    try
    {
      String str = System.getProperty("os.arch");
      str = "" + str;
      return str;
    }
    catch (Throwable localThrowable)
    {
      if (!bf.a(localThrowable)) {
        localThrowable.printStackTrace();
      }
    }
    return "fail";
  }
  
  public static String e(Context paramContext)
  {
    try
    {
      NetworkInfo localNetworkInfo = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
      if (localNetworkInfo == null) {
        return null;
      }
      if (localNetworkInfo.getType() == 1)
      {
        paramContext = "WIFI";
      }
      else if (localNetworkInfo.getType() == 0)
      {
        paramContext = (TelephonyManager)paramContext.getSystemService("phone");
        if (paramContext != null)
        {
          int i = paramContext.getNetworkType();
          switch (i)
          {
          case 15: 
            paramContext = "MOBILE(" + i + ")";
          }
        }
      }
    }
    catch (Exception paramContext)
    {
      if (bf.a(paramContext)) {
        break label191;
      }
      paramContext.printStackTrace();
      return "unknown";
      paramContext = "unknown";
      break label194;
      label191:
      return "unknown";
    }
    paramContext = "HSPA+";
    for (;;)
    {
      label194:
      return paramContext;
      break;
      paramContext = "GPRS";
      continue;
      paramContext = "EDGE";
      continue;
      paramContext = "UMTS";
      continue;
      paramContext = "HSDPA";
      continue;
      paramContext = "HSUPA";
      continue;
      paramContext = "HSPA";
      continue;
      paramContext = "CDMA";
      continue;
      paramContext = "EVDO_0";
      continue;
      paramContext = "EVDO_A";
      continue;
      paramContext = "1xRTT";
      continue;
      paramContext = "iDen";
      continue;
      paramContext = "EVDO_B";
      continue;
      paramContext = "LTE";
      continue;
      paramContext = "eHRPD";
    }
  }
  
  public static long f()
  {
    long l1 = -1L;
    try
    {
      StatFs localStatFs = new StatFs(Environment.getDataDirectory().getPath());
      long l2 = localStatFs.getBlockSize();
      int i = localStatFs.getBlockCount();
      l1 = i * l2;
    }
    catch (Throwable localThrowable)
    {
      while (bf.a(localThrowable)) {}
      localThrowable.printStackTrace();
    }
    return l1;
    return -1L;
  }
  
  public static String f(Context paramContext)
  {
    String str = d.a(paramContext, "ro.miui.ui.version.name");
    if ((!d.a(str)) && (!str.equals("fail"))) {
      return "XiaoMi/MIUI/" + str;
    }
    str = d.a(paramContext, "ro.build.version.emui");
    if ((!d.a(str)) && (!str.equals("fail"))) {
      return "HuaWei/EMOTION/" + str;
    }
    str = d.a(paramContext, "ro.lenovo.series");
    if ((!d.a(str)) && (!str.equals("fail")))
    {
      paramContext = d.a(paramContext, "ro.build.version.incremental");
      return "Lenovo/VIBE/" + paramContext;
    }
    str = d.a(paramContext, "ro.build.nubia.rom.name");
    if ((!d.a(str)) && (!str.equals("fail"))) {
      return "Zte/NUBIA/" + str + "_" + d.a(paramContext, "ro.build.nubia.rom.code");
    }
    str = d.a(paramContext, "ro.meizu.product.model");
    if ((!d.a(str)) && (!str.equals("fail"))) {
      return "Meizu/FLYME/" + d.a(paramContext, "ro.build.display.id");
    }
    str = d.a(paramContext, "ro.build.version.opporom");
    if ((!d.a(str)) && (!str.equals("fail"))) {
      return "Oppo/COLOROS/" + str;
    }
    str = d.a(paramContext, "ro.vivo.os.build.display.id");
    if ((!d.a(str)) && (!str.equals("fail"))) {
      return "vivo/FUNTOUCH/" + str;
    }
    str = d.a(paramContext, "ro.aa.romver");
    if ((!d.a(str)) && (!str.equals("fail"))) {
      return "htc/" + str + "/" + d.a(paramContext, "ro.build.description");
    }
    str = d.a(paramContext, "ro.lewa.version");
    if ((!d.a(str)) && (!str.equals("fail"))) {
      return "tcl/" + str + "/" + d.a(paramContext, "ro.build.display.id");
    }
    str = d.a(paramContext, "ro.gn.gnromvernumber");
    if ((!d.a(str)) && (!str.equals("fail"))) {
      return "amigo/" + str + "/" + d.a(paramContext, "ro.build.display.id");
    }
    str = d.a(paramContext, "ro.build.tyd.kbstyle_version");
    if ((!d.a(str)) && (!str.equals("fail"))) {
      return "dido/" + str;
    }
    return d.a(paramContext, "ro.build.fingerprint") + "/" + d.a(paramContext, "ro.build.rom.id");
  }
  
  public static long g()
  {
    long l1 = -1L;
    try
    {
      StatFs localStatFs = new StatFs(Environment.getDataDirectory().getPath());
      long l2 = localStatFs.getBlockSize();
      int i = localStatFs.getAvailableBlocks();
      l1 = i * l2;
    }
    catch (Throwable localThrowable)
    {
      while (bf.a(localThrowable)) {}
      localThrowable.printStackTrace();
    }
    return l1;
    return -1L;
  }
  
  public static String g(Context paramContext)
  {
    return d.a(paramContext, "ro.board.platform");
  }
  
  /* Error */
  public static long h()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 5
    //   3: new 286	java/io/FileReader
    //   6: dup
    //   7: ldc_w 288
    //   10: invokespecial 289	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   13: astore 4
    //   15: new 291	java/io/BufferedReader
    //   18: dup
    //   19: aload 4
    //   21: sipush 2048
    //   24: invokespecial 294	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   27: astore_3
    //   28: aload_3
    //   29: invokevirtual 297	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   32: ldc_w 299
    //   35: iconst_2
    //   36: invokevirtual 303	java/lang/String:split	(Ljava/lang/String;I)[Ljava/lang/String;
    //   39: iconst_1
    //   40: aaload
    //   41: invokevirtual 47	java/lang/String:toLowerCase	()Ljava/lang/String;
    //   44: ldc_w 305
    //   47: ldc 116
    //   49: invokevirtual 309	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   52: invokevirtual 312	java/lang/String:trim	()Ljava/lang/String;
    //   55: invokestatic 318	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   58: lstore_0
    //   59: lload_0
    //   60: ldc2_w 319
    //   63: lmul
    //   64: lstore_0
    //   65: aload_3
    //   66: ifnull +7 -> 73
    //   69: aload_3
    //   70: invokevirtual 323	java/io/BufferedReader:close	()V
    //   73: aload 4
    //   75: ifnull +8 -> 83
    //   78: aload 4
    //   80: invokevirtual 324	java/io/FileReader:close	()V
    //   83: lload_0
    //   84: lreturn
    //   85: astore_2
    //   86: aload_2
    //   87: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   90: ifne -17 -> 73
    //   93: aload_2
    //   94: invokevirtual 325	java/io/IOException:printStackTrace	()V
    //   97: goto -24 -> 73
    //   100: astore_2
    //   101: aload_2
    //   102: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   105: ifne -22 -> 83
    //   108: aload_2
    //   109: invokevirtual 325	java/io/IOException:printStackTrace	()V
    //   112: lload_0
    //   113: lreturn
    //   114: astore 4
    //   116: aconst_null
    //   117: astore_2
    //   118: aload 5
    //   120: astore_3
    //   121: aload 4
    //   123: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   126: ifne +8 -> 134
    //   129: aload 4
    //   131: invokevirtual 23	java/lang/Throwable:printStackTrace	()V
    //   134: aload_3
    //   135: ifnull +7 -> 142
    //   138: aload_3
    //   139: invokevirtual 323	java/io/BufferedReader:close	()V
    //   142: aload_2
    //   143: ifnull +7 -> 150
    //   146: aload_2
    //   147: invokevirtual 324	java/io/FileReader:close	()V
    //   150: ldc2_w 326
    //   153: lreturn
    //   154: astore_3
    //   155: aload_3
    //   156: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   159: ifne -17 -> 142
    //   162: aload_3
    //   163: invokevirtual 325	java/io/IOException:printStackTrace	()V
    //   166: goto -24 -> 142
    //   169: astore_2
    //   170: aload_2
    //   171: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   174: ifne -24 -> 150
    //   177: aload_2
    //   178: invokevirtual 325	java/io/IOException:printStackTrace	()V
    //   181: goto -31 -> 150
    //   184: astore_2
    //   185: aconst_null
    //   186: astore_3
    //   187: aconst_null
    //   188: astore 4
    //   190: aload_3
    //   191: ifnull +7 -> 198
    //   194: aload_3
    //   195: invokevirtual 323	java/io/BufferedReader:close	()V
    //   198: aload 4
    //   200: ifnull +8 -> 208
    //   203: aload 4
    //   205: invokevirtual 324	java/io/FileReader:close	()V
    //   208: aload_2
    //   209: athrow
    //   210: astore_3
    //   211: aload_3
    //   212: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   215: ifne -17 -> 198
    //   218: aload_3
    //   219: invokevirtual 325	java/io/IOException:printStackTrace	()V
    //   222: goto -24 -> 198
    //   225: astore_3
    //   226: aload_3
    //   227: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   230: ifne -22 -> 208
    //   233: aload_3
    //   234: invokevirtual 325	java/io/IOException:printStackTrace	()V
    //   237: goto -29 -> 208
    //   240: astore_2
    //   241: aconst_null
    //   242: astore_3
    //   243: goto -53 -> 190
    //   246: astore_2
    //   247: goto -57 -> 190
    //   250: astore 5
    //   252: aload_2
    //   253: astore 4
    //   255: aload 5
    //   257: astore_2
    //   258: goto -68 -> 190
    //   261: astore_3
    //   262: aload 4
    //   264: astore_2
    //   265: aload_3
    //   266: astore 4
    //   268: aload 5
    //   270: astore_3
    //   271: goto -150 -> 121
    //   274: astore 5
    //   276: aload 4
    //   278: astore_2
    //   279: aload 5
    //   281: astore 4
    //   283: goto -162 -> 121
    // Local variable table:
    //   start	length	slot	name	signature
    //   58	55	0	l	long
    //   85	9	2	localIOException1	java.io.IOException
    //   100	9	2	localIOException2	java.io.IOException
    //   117	30	2	localObject1	Object
    //   169	9	2	localIOException3	java.io.IOException
    //   184	25	2	localObject2	Object
    //   240	1	2	localObject3	Object
    //   246	7	2	localObject4	Object
    //   257	22	2	localObject5	Object
    //   27	112	3	localObject6	Object
    //   154	9	3	localIOException4	java.io.IOException
    //   186	9	3	localObject7	Object
    //   210	9	3	localIOException5	java.io.IOException
    //   225	9	3	localIOException6	java.io.IOException
    //   242	1	3	localObject8	Object
    //   261	5	3	localThrowable1	Throwable
    //   270	1	3	localObject9	Object
    //   13	66	4	localFileReader	java.io.FileReader
    //   114	16	4	localThrowable2	Throwable
    //   188	94	4	localObject10	Object
    //   1	118	5	localObject11	Object
    //   250	19	5	localObject12	Object
    //   274	6	5	localThrowable3	Throwable
    // Exception table:
    //   from	to	target	type
    //   69	73	85	java/io/IOException
    //   78	83	100	java/io/IOException
    //   3	15	114	java/lang/Throwable
    //   138	142	154	java/io/IOException
    //   146	150	169	java/io/IOException
    //   3	15	184	finally
    //   194	198	210	java/io/IOException
    //   203	208	225	java/io/IOException
    //   15	28	240	finally
    //   28	59	246	finally
    //   121	134	250	finally
    //   15	28	261	java/lang/Throwable
    //   28	59	274	java/lang/Throwable
  }
  
  /* Error */
  public static long i()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 9
    //   3: new 286	java/io/FileReader
    //   6: dup
    //   7: ldc_w 288
    //   10: invokespecial 289	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   13: astore 8
    //   15: new 291	java/io/BufferedReader
    //   18: dup
    //   19: aload 8
    //   21: sipush 2048
    //   24: invokespecial 294	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   27: astore 7
    //   29: aload 7
    //   31: invokevirtual 297	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   34: pop
    //   35: aload 7
    //   37: invokevirtual 297	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   40: ldc_w 299
    //   43: iconst_2
    //   44: invokevirtual 303	java/lang/String:split	(Ljava/lang/String;I)[Ljava/lang/String;
    //   47: iconst_1
    //   48: aaload
    //   49: invokevirtual 47	java/lang/String:toLowerCase	()Ljava/lang/String;
    //   52: ldc_w 305
    //   55: ldc 116
    //   57: invokevirtual 309	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   60: invokevirtual 312	java/lang/String:trim	()Ljava/lang/String;
    //   63: invokestatic 318	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   66: lstore_0
    //   67: aload 7
    //   69: invokevirtual 297	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   72: ldc_w 299
    //   75: iconst_2
    //   76: invokevirtual 303	java/lang/String:split	(Ljava/lang/String;I)[Ljava/lang/String;
    //   79: iconst_1
    //   80: aaload
    //   81: invokevirtual 47	java/lang/String:toLowerCase	()Ljava/lang/String;
    //   84: ldc_w 305
    //   87: ldc 116
    //   89: invokevirtual 309	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   92: invokevirtual 312	java/lang/String:trim	()Ljava/lang/String;
    //   95: invokestatic 318	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   98: lstore_2
    //   99: aload 7
    //   101: invokevirtual 297	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   104: ldc_w 299
    //   107: iconst_2
    //   108: invokevirtual 303	java/lang/String:split	(Ljava/lang/String;I)[Ljava/lang/String;
    //   111: iconst_1
    //   112: aaload
    //   113: invokevirtual 47	java/lang/String:toLowerCase	()Ljava/lang/String;
    //   116: ldc_w 305
    //   119: ldc 116
    //   121: invokevirtual 309	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   124: invokevirtual 312	java/lang/String:trim	()Ljava/lang/String;
    //   127: invokestatic 318	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   130: lstore 4
    //   132: lload_0
    //   133: ldc2_w 319
    //   136: lmul
    //   137: lload_2
    //   138: ldc2_w 319
    //   141: lmul
    //   142: ladd
    //   143: lload 4
    //   145: ldc2_w 319
    //   148: lmul
    //   149: ladd
    //   150: lstore_0
    //   151: aload 7
    //   153: ifnull +8 -> 161
    //   156: aload 7
    //   158: invokevirtual 323	java/io/BufferedReader:close	()V
    //   161: aload 8
    //   163: ifnull +8 -> 171
    //   166: aload 8
    //   168: invokevirtual 324	java/io/FileReader:close	()V
    //   171: lload_0
    //   172: lreturn
    //   173: astore 6
    //   175: aload 6
    //   177: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   180: ifne -19 -> 161
    //   183: aload 6
    //   185: invokevirtual 325	java/io/IOException:printStackTrace	()V
    //   188: goto -27 -> 161
    //   191: astore 6
    //   193: aload 6
    //   195: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   198: ifne -27 -> 171
    //   201: aload 6
    //   203: invokevirtual 325	java/io/IOException:printStackTrace	()V
    //   206: lload_0
    //   207: lreturn
    //   208: astore 8
    //   210: aconst_null
    //   211: astore 6
    //   213: aload 9
    //   215: astore 7
    //   217: aload 8
    //   219: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   222: ifne +8 -> 230
    //   225: aload 8
    //   227: invokevirtual 23	java/lang/Throwable:printStackTrace	()V
    //   230: aload 7
    //   232: ifnull +8 -> 240
    //   235: aload 7
    //   237: invokevirtual 323	java/io/BufferedReader:close	()V
    //   240: aload 6
    //   242: ifnull +8 -> 250
    //   245: aload 6
    //   247: invokevirtual 324	java/io/FileReader:close	()V
    //   250: ldc2_w 326
    //   253: lreturn
    //   254: astore 7
    //   256: aload 7
    //   258: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   261: ifne -21 -> 240
    //   264: aload 7
    //   266: invokevirtual 325	java/io/IOException:printStackTrace	()V
    //   269: goto -29 -> 240
    //   272: astore 6
    //   274: aload 6
    //   276: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   279: ifne -29 -> 250
    //   282: aload 6
    //   284: invokevirtual 325	java/io/IOException:printStackTrace	()V
    //   287: goto -37 -> 250
    //   290: astore 6
    //   292: aconst_null
    //   293: astore 7
    //   295: aconst_null
    //   296: astore 8
    //   298: aload 7
    //   300: ifnull +8 -> 308
    //   303: aload 7
    //   305: invokevirtual 323	java/io/BufferedReader:close	()V
    //   308: aload 8
    //   310: ifnull +8 -> 318
    //   313: aload 8
    //   315: invokevirtual 324	java/io/FileReader:close	()V
    //   318: aload 6
    //   320: athrow
    //   321: astore 7
    //   323: aload 7
    //   325: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   328: ifne -20 -> 308
    //   331: aload 7
    //   333: invokevirtual 325	java/io/IOException:printStackTrace	()V
    //   336: goto -28 -> 308
    //   339: astore 7
    //   341: aload 7
    //   343: invokestatic 19	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   346: ifne -28 -> 318
    //   349: aload 7
    //   351: invokevirtual 325	java/io/IOException:printStackTrace	()V
    //   354: goto -36 -> 318
    //   357: astore 6
    //   359: aconst_null
    //   360: astore 7
    //   362: goto -64 -> 298
    //   365: astore 6
    //   367: goto -69 -> 298
    //   370: astore 9
    //   372: aload 6
    //   374: astore 8
    //   376: aload 9
    //   378: astore 6
    //   380: goto -82 -> 298
    //   383: astore 7
    //   385: aload 8
    //   387: astore 6
    //   389: aload 7
    //   391: astore 8
    //   393: aload 9
    //   395: astore 7
    //   397: goto -180 -> 217
    //   400: astore 9
    //   402: aload 8
    //   404: astore 6
    //   406: aload 9
    //   408: astore 8
    //   410: goto -193 -> 217
    // Local variable table:
    //   start	length	slot	name	signature
    //   66	141	0	l1	long
    //   98	40	2	l2	long
    //   130	14	4	l3	long
    //   173	11	6	localIOException1	java.io.IOException
    //   191	11	6	localIOException2	java.io.IOException
    //   211	35	6	localObject1	Object
    //   272	11	6	localIOException3	java.io.IOException
    //   290	29	6	localObject2	Object
    //   357	1	6	localObject3	Object
    //   365	8	6	localObject4	Object
    //   378	27	6	localObject5	Object
    //   27	209	7	localObject6	Object
    //   254	11	7	localIOException4	java.io.IOException
    //   293	11	7	localObject7	Object
    //   321	11	7	localIOException5	java.io.IOException
    //   339	11	7	localIOException6	java.io.IOException
    //   360	1	7	localObject8	Object
    //   383	7	7	localThrowable1	Throwable
    //   395	1	7	localObject9	Object
    //   13	154	8	localFileReader	java.io.FileReader
    //   208	18	8	localThrowable2	Throwable
    //   296	113	8	localObject10	Object
    //   1	213	9	localObject11	Object
    //   370	24	9	localObject12	Object
    //   400	7	9	localThrowable3	Throwable
    // Exception table:
    //   from	to	target	type
    //   156	161	173	java/io/IOException
    //   166	171	191	java/io/IOException
    //   3	15	208	java/lang/Throwable
    //   235	240	254	java/io/IOException
    //   245	250	272	java/io/IOException
    //   3	15	290	finally
    //   303	308	321	java/io/IOException
    //   313	318	339	java/io/IOException
    //   15	29	357	finally
    //   29	132	365	finally
    //   217	230	370	finally
    //   15	29	383	java/lang/Throwable
    //   29	132	400	java/lang/Throwable
  }
  
  public static long j()
  {
    if (!d()) {
      return 0L;
    }
    try
    {
      StatFs localStatFs = new StatFs(Environment.getExternalStorageDirectory().getPath());
      int i = localStatFs.getBlockSize();
      int j = localStatFs.getBlockCount();
      long l = j;
      return i * l;
    }
    catch (Throwable localThrowable)
    {
      if (!bf.a(localThrowable)) {
        localThrowable.printStackTrace();
      }
    }
    return -2L;
  }
  
  public static long k()
  {
    if (!d()) {
      return 0L;
    }
    try
    {
      StatFs localStatFs = new StatFs(Environment.getExternalStorageDirectory().getPath());
      int i = localStatFs.getBlockSize();
      int j = localStatFs.getAvailableBlocks();
      long l = j;
      return i * l;
    }
    catch (Throwable localThrowable)
    {
      if (!bf.a(localThrowable)) {
        localThrowable.printStackTrace();
      }
    }
    return -2L;
  }
  
  public static String l()
  {
    Object localObject = "fail";
    try
    {
      String str = Locale.getDefault().getCountry();
      localObject = str;
    }
    catch (Throwable localThrowable)
    {
      while (bf.a(localThrowable)) {}
      localThrowable.printStackTrace();
    }
    return localObject;
    return "fail";
  }
  
  public static String m()
  {
    Object localObject = "fail";
    try
    {
      String str = Build.BRAND;
      localObject = str;
    }
    catch (Throwable localThrowable)
    {
      while (bf.a(localThrowable)) {}
      localThrowable.printStackTrace();
    }
    return localObject;
    return "fail";
  }
}
