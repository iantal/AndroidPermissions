package com.tencent.bugly.crashreport.common.info;

import android.app.ActivityManager;
import android.app.ActivityManager.MemoryInfo;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.os.Bundle;
import android.os.Process;
import com.tencent.bugly.a.bf;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class a
{
  public static final String[] a = ",msdk,imsdk".split(",");
  public static final String[] b = "0,1,2".split(",");
  private static String c = "BUGLY_DISABLE";
  private static ActivityManager d;
  
  public static String a(Context paramContext)
  {
    if (paramContext == null) {
      return null;
    }
    try
    {
      paramContext = paramContext.getPackageName();
      return paramContext;
    }
    catch (Throwable paramContext)
    {
      if (!bf.a(paramContext)) {
        paramContext.printStackTrace();
      }
    }
    return "fail";
  }
  
  /* Error */
  public static String a(Context paramContext, int paramInt)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore_2
    //   2: new 56	java/io/FileReader
    //   5: dup
    //   6: new 58	java/lang/StringBuilder
    //   9: dup
    //   10: invokespecial 61	java/lang/StringBuilder:<init>	()V
    //   13: ldc 63
    //   15: invokevirtual 67	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18: iload_1
    //   19: invokevirtual 70	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   22: ldc 72
    //   24: invokevirtual 67	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27: invokevirtual 75	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   30: invokespecial 78	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   33: astore_3
    //   34: aload_3
    //   35: astore_0
    //   36: sipush 512
    //   39: newarray char
    //   41: astore 4
    //   43: aload_3
    //   44: astore_0
    //   45: aload_3
    //   46: aload 4
    //   48: invokevirtual 82	java/io/FileReader:read	([C)I
    //   51: pop
    //   52: aload_3
    //   53: astore_0
    //   54: iload_2
    //   55: aload 4
    //   57: arraylength
    //   58: if_icmpge +10 -> 68
    //   61: aload 4
    //   63: iload_2
    //   64: caload
    //   65: ifne +37 -> 102
    //   68: aload_3
    //   69: astore_0
    //   70: new 23	java/lang/String
    //   73: dup
    //   74: aload 4
    //   76: invokespecial 85	java/lang/String:<init>	([C)V
    //   79: iconst_0
    //   80: iload_2
    //   81: invokevirtual 89	java/lang/String:substring	(II)Ljava/lang/String;
    //   84: astore 4
    //   86: aload 4
    //   88: astore_0
    //   89: aload_3
    //   90: ifnull +10 -> 100
    //   93: aload_3
    //   94: invokevirtual 92	java/io/FileReader:close	()V
    //   97: aload 4
    //   99: astore_0
    //   100: aload_0
    //   101: areturn
    //   102: iload_2
    //   103: iconst_1
    //   104: iadd
    //   105: istore_2
    //   106: goto -54 -> 52
    //   109: astore 4
    //   111: aconst_null
    //   112: astore_3
    //   113: aload_3
    //   114: astore_0
    //   115: aload 4
    //   117: invokestatic 48	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   120: ifne +10 -> 130
    //   123: aload_3
    //   124: astore_0
    //   125: aload 4
    //   127: invokevirtual 51	java/lang/Throwable:printStackTrace	()V
    //   130: iload_1
    //   131: invokestatic 96	java/lang/String:valueOf	(I)Ljava/lang/String;
    //   134: astore 4
    //   136: aload 4
    //   138: astore_0
    //   139: aload_3
    //   140: ifnull -40 -> 100
    //   143: aload_3
    //   144: invokevirtual 92	java/io/FileReader:close	()V
    //   147: aload 4
    //   149: areturn
    //   150: astore_0
    //   151: aload 4
    //   153: areturn
    //   154: astore_3
    //   155: aconst_null
    //   156: astore_0
    //   157: aload_0
    //   158: ifnull +7 -> 165
    //   161: aload_0
    //   162: invokevirtual 92	java/io/FileReader:close	()V
    //   165: aload_3
    //   166: athrow
    //   167: astore_0
    //   168: aload 4
    //   170: areturn
    //   171: astore_0
    //   172: goto -7 -> 165
    //   175: astore_3
    //   176: goto -19 -> 157
    //   179: astore 4
    //   181: goto -68 -> 113
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	184	0	paramContext	Context
    //   0	184	1	paramInt	int
    //   1	105	2	i	int
    //   33	111	3	localFileReader	java.io.FileReader
    //   154	12	3	localObject1	Object
    //   175	1	3	localObject2	Object
    //   41	57	4	localObject3	Object
    //   109	17	4	localThrowable1	Throwable
    //   134	35	4	str	String
    //   179	1	4	localThrowable2	Throwable
    // Exception table:
    //   from	to	target	type
    //   2	34	109	java/lang/Throwable
    //   143	147	150	java/lang/Throwable
    //   2	34	154	finally
    //   93	97	167	java/lang/Throwable
    //   161	165	171	java/lang/Throwable
    //   36	43	175	finally
    //   45	52	175	finally
    //   54	61	175	finally
    //   70	86	175	finally
    //   115	123	175	finally
    //   125	130	175	finally
    //   36	43	179	java/lang/Throwable
    //   45	52	179	java/lang/Throwable
    //   54	61	179	java/lang/Throwable
    //   70	86	179	java/lang/Throwable
  }
  
  public static boolean a(Context paramContext, String paramString)
  {
    if ((paramContext == null) || (paramString == null) || (paramString.trim().length() <= 0)) {}
    for (;;)
    {
      return false;
      try
      {
        paramContext = paramContext.getPackageManager().getPackageInfo(paramContext.getPackageName(), 4096).requestedPermissions;
        if (paramContext != null)
        {
          int j = paramContext.length;
          int i = 0;
          while (i < j)
          {
            boolean bool = paramString.equals(paramContext[i]);
            if (bool) {
              return true;
            }
            i += 1;
          }
          if (bf.a(paramContext)) {}
        }
      }
      catch (Throwable paramContext) {}
    }
    paramContext.printStackTrace();
    return false;
  }
  
  public static String b(Context paramContext)
  {
    try
    {
      String str = a(paramContext);
      paramContext = paramContext.getPackageManager().getPackageInfo(str, 0).versionName;
      return paramContext;
    }
    catch (Throwable paramContext)
    {
      for (;;)
      {
        if (!bf.a(paramContext)) {
          paramContext.printStackTrace();
        }
        paramContext = "fail";
      }
    }
    finally {}
  }
  
  public static boolean c(Context paramContext)
  {
    try
    {
      boolean bool = a(paramContext, "android.permission.READ_LOGS");
      return bool;
    }
    finally
    {
      paramContext = finally;
      throw paramContext;
    }
  }
  
  public static String d(Context paramContext)
  {
    try
    {
      paramContext = a(paramContext, Process.myPid());
      return paramContext;
    }
    catch (Throwable paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static int e(Context paramContext)
  {
    try
    {
      int i = paramContext.getResources().getConfiguration().orientation;
      return i;
    }
    catch (Throwable paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  public static List<String> f(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128);
      if (paramContext.metaData != null)
      {
        paramContext = paramContext.metaData.getString(c);
        if (paramContext != null)
        {
          if (paramContext.length() == 0) {
            return null;
          }
          paramContext = paramContext.split(",");
          int i = 0;
          while (i < paramContext.length)
          {
            paramContext[i] = paramContext[i].trim();
            i += 1;
          }
          paramContext = Arrays.asList(paramContext);
          return paramContext;
        }
      }
    }
    catch (Throwable paramContext)
    {
      if (!bf.a(paramContext)) {
        paramContext.printStackTrace();
      }
    }
    return null;
  }
  
  public static boolean g(Context paramContext)
  {
    if (paramContext == null) {
      return false;
    }
    if (d == null) {
      d = (ActivityManager)paramContext.getSystemService("activity");
    }
    try
    {
      paramContext = new ActivityManager.MemoryInfo();
      d.getMemoryInfo(paramContext);
      boolean bool = paramContext.lowMemory;
      return bool;
    }
    catch (Throwable paramContext)
    {
      if (!bf.a(paramContext)) {
        paramContext.printStackTrace();
      }
    }
    return false;
  }
  
  public static List<String> h(Context paramContext)
  {
    ArrayList localArrayList = new ArrayList();
    int i = 0;
    while (i < b.length - 1)
    {
      j = i + 1;
      while (j < b.length)
      {
        if (Integer.valueOf(b[i]).intValue() > Integer.valueOf(b[j]).intValue())
        {
          paramContext = a[i];
          a[i] = a[j];
          a[j] = paramContext;
          paramContext = b[i];
          b[i] = b[j];
          b[j] = paramContext;
        }
        j += 1;
      }
      i += 1;
    }
    String[] arrayOfString = a;
    int j = arrayOfString.length;
    i = 0;
    if (i < j)
    {
      String str = arrayOfString[i];
      if (!str.equals("")) {
        paramContext = "com.tencent.bugly." + str + ".crashreport.CrashReport";
      }
      for (;;)
      {
        try
        {
          Class.forName(paramContext);
          if (!str.equals("")) {
            continue;
          }
          localArrayList.add("bugly");
        }
        catch (Throwable paramContext)
        {
          continue;
        }
        i += 1;
        break;
        paramContext = "com.tencent.bugly." + ".crashreport.CrashReport".substring(1);
        continue;
        bf.a("[init] find bugly channel: %s", new Object[] { str });
        localArrayList.add(str);
      }
    }
    return localArrayList;
  }
}
