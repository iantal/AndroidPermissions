package com.tencent.bugly.crashreport.biz;

import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import com.tencent.bugly.a.bf;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class SessionBean
  implements Parcelable
{
  public static final Parcelable.Creator<SessionBean> CREATOR = new b();
  public String a;
  public String b;
  public long c;
  public long d;
  public int e;
  public int f;
  public List<PageBean> g;
  
  private SessionBean() {}
  
  private SessionBean(Parcel paramParcel)
  {
    this.a = paramParcel.readString();
    this.b = paramParcel.readString();
    this.c = paramParcel.readLong();
    this.d = paramParcel.readLong();
    this.e = paramParcel.readInt();
    this.f = paramParcel.readInt();
    paramParcel = paramParcel.readParcelableArray(PageBean.class.getClassLoader());
    this.g = new ArrayList();
    int j = paramParcel.length;
    int i = 0;
    while (i < j)
    {
      Object localObject = paramParcel[i];
      this.g.add((PageBean)localObject);
      i += 1;
    }
  }
  
  public static SessionBean a(String paramString, int paramInt, List<PageBean> paramList)
  {
    try
    {
      a(paramList);
      PageBean localPageBean = (PageBean)paramList.get(0);
      long l1 = ((PageBean)paramList.get(paramList.size() - 1)).h;
      long l2 = localPageBean.g;
      SessionBean localSessionBean = new SessionBean();
      localSessionBean.a = paramString;
      localSessionBean.b = localPageBean.f;
      localSessionBean.c = localPageBean.l;
      localSessionBean.d = (l1 - l2);
      localSessionBean.e = paramInt;
      localSessionBean.f = localPageBean.d;
      localSessionBean.g = paramList;
      b(paramList);
      c(paramList);
      return localSessionBean;
    }
    catch (Throwable paramString)
    {
      if (!bf.a(paramString)) {
        paramString.printStackTrace();
      }
    }
    return null;
  }
  
  private static void a(List<PageBean> paramList)
  {
    if (paramList == null) {}
    for (;;)
    {
      return;
      paramList = paramList.iterator();
      while (paramList.hasNext())
      {
        PageBean localPageBean = (PageBean)paramList.next();
        if (!localPageBean.b())
        {
          paramList.remove();
          bf.c("[page] error: %s,%s,%s", new Object[] { Integer.valueOf(localPageBean.a), localPageBean.b, Integer.valueOf(localPageBean.c) });
        }
      }
    }
  }
  
  private static void b(List<PageBean> paramList)
  {
    paramList = paramList.iterator();
    while (paramList.hasNext())
    {
      PageBean localPageBean = (PageBean)paramList.next();
      localPageBean.o = "";
      localPageBean.g = 0L;
      localPageBean.h = 0L;
      localPageBean.c = 0;
    }
  }
  
  private static void c(List<PageBean> paramList)
  {
    int i = 0;
    while (i < paramList.size())
    {
      ((PageBean)paramList.get(i)).m = i;
      i += 1;
    }
  }
  
  public boolean a()
  {
    long l = System.currentTimeMillis() - this.c;
    return (l > 604800000L) || (l < 0L);
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder(256);
    localStringBuilder.append(" id=").append(this.a).append(" preId=").append(this.b).append(" time=").append(this.c).append(" dura=").append(this.d).append(" cause=").append(this.e).append(" specialcode=").append(this.f).append(" pages=").append(this.g.size());
    return localStringBuilder.toString();
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    paramParcel.writeString(this.a);
    paramParcel.writeString(this.b);
    paramParcel.writeLong(this.c);
    paramParcel.writeLong(this.d);
    paramParcel.writeInt(this.e);
    paramParcel.writeInt(this.f);
    if (this.g != null) {}
    for (PageBean[] arrayOfPageBean1 = new PageBean[this.g.size()];; arrayOfPageBean1 = new PageBean[0])
    {
      PageBean[] arrayOfPageBean2 = (PageBean[])this.g.toArray(arrayOfPageBean1);
      paramParcel.writeParcelableArray((Parcelable[])this.g.toArray(arrayOfPageBean1), 0);
      arrayOfPageBean2.toString();
      return;
    }
  }
}
