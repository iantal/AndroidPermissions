package com.tencent.bugly.a;

import android.content.Context;
import android.os.Process;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;

public class d
{
  public static Context a(Context paramContext)
  {
    if (paramContext == null) {}
    Context localContext;
    do
    {
      return paramContext;
      localContext = paramContext.getApplicationContext();
    } while (localContext == null);
    return localContext;
  }
  
  public static String a()
  {
    return new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.US).format(new Date());
  }
  
  public static String a(Context paramContext, String paramString)
  {
    if ((paramString == null) || (paramString.trim().equals(""))) {
      return "";
    }
    paramContext = a(paramContext, new String[] { "/system/bin/sh", "-c", "getprop " + paramString });
    if ((paramContext != null) && (paramContext.size() > 0)) {
      return (String)paramContext.get(0);
    }
    return "fail";
  }
  
  public static String a(Throwable paramThrowable)
  {
    if (paramThrowable == null) {
      return "";
    }
    try
    {
      StringWriter localStringWriter = new StringWriter();
      paramThrowable.printStackTrace(new PrintWriter(localStringWriter));
      paramThrowable = localStringWriter.getBuffer().toString();
      return paramThrowable;
    }
    catch (Throwable paramThrowable)
    {
      if (!bf.a(paramThrowable)) {
        paramThrowable.printStackTrace();
      }
    }
    return "fail";
  }
  
  public static String a(Date paramDate)
  {
    if (paramDate == null) {
      return null;
    }
    return new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.US).format(paramDate);
  }
  
  public static String a(byte[] paramArrayOfByte)
  {
    if ((paramArrayOfByte == null) || (paramArrayOfByte.length == 0)) {
      return "NULL";
    }
    try
    {
      MessageDigest localMessageDigest = MessageDigest.getInstance("SHA-1");
      localMessageDigest.update(paramArrayOfByte);
      paramArrayOfByte = c(localMessageDigest.digest());
      return paramArrayOfByte;
    }
    catch (Throwable paramArrayOfByte)
    {
      if (!bf.a(paramArrayOfByte)) {
        paramArrayOfByte.printStackTrace();
      }
    }
    return null;
  }
  
  /* Error */
  public static java.util.ArrayList<String> a(Context paramContext, String[] paramArrayOfString)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_3
    //   2: new 135	java/util/ArrayList
    //   5: dup
    //   6: invokespecial 136	java/util/ArrayList:<init>	()V
    //   9: astore 4
    //   11: aload_0
    //   12: invokestatic 141	com/tencent/bugly/crashreport/common/info/c:a	(Landroid/content/Context;)Lcom/tencent/bugly/crashreport/common/info/c;
    //   15: invokevirtual 145	com/tencent/bugly/crashreport/common/info/c:N	()Z
    //   18: ifeq +27 -> 45
    //   21: new 135	java/util/ArrayList
    //   24: dup
    //   25: invokespecial 136	java/util/ArrayList:<init>	()V
    //   28: astore_1
    //   29: aload_1
    //   30: new 40	java/lang/String
    //   33: dup
    //   34: ldc -109
    //   36: invokespecial 150	java/lang/String:<init>	(Ljava/lang/String;)V
    //   39: invokevirtual 153	java/util/ArrayList:add	(Ljava/lang/Object;)Z
    //   42: pop
    //   43: aload_1
    //   44: areturn
    //   45: invokestatic 159	java/lang/Runtime:getRuntime	()Ljava/lang/Runtime;
    //   48: aload_1
    //   49: invokevirtual 163	java/lang/Runtime:exec	([Ljava/lang/String;)Ljava/lang/Process;
    //   52: astore_0
    //   53: new 165	java/io/BufferedReader
    //   56: dup
    //   57: new 167	java/io/InputStreamReader
    //   60: dup
    //   61: aload_0
    //   62: invokevirtual 173	java/lang/Process:getInputStream	()Ljava/io/InputStream;
    //   65: invokespecial 176	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   68: invokespecial 179	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   71: astore_1
    //   72: aload_1
    //   73: invokevirtual 182	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   76: astore_2
    //   77: aload_2
    //   78: ifnull +56 -> 134
    //   81: aload 4
    //   83: aload_2
    //   84: invokevirtual 153	java/util/ArrayList:add	(Ljava/lang/Object;)Z
    //   87: pop
    //   88: goto -16 -> 72
    //   91: astore 4
    //   93: aconst_null
    //   94: astore_0
    //   95: aload_0
    //   96: astore_3
    //   97: aload_1
    //   98: astore_2
    //   99: aload 4
    //   101: invokestatic 107	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   104: ifne +12 -> 116
    //   107: aload_0
    //   108: astore_3
    //   109: aload_1
    //   110: astore_2
    //   111: aload 4
    //   113: invokevirtual 109	java/lang/Throwable:printStackTrace	()V
    //   116: aload_1
    //   117: ifnull +7 -> 124
    //   120: aload_1
    //   121: invokevirtual 185	java/io/BufferedReader:close	()V
    //   124: aload_0
    //   125: ifnull +7 -> 132
    //   128: aload_0
    //   129: invokevirtual 185	java/io/BufferedReader:close	()V
    //   132: aconst_null
    //   133: areturn
    //   134: new 165	java/io/BufferedReader
    //   137: dup
    //   138: new 167	java/io/InputStreamReader
    //   141: dup
    //   142: aload_0
    //   143: invokevirtual 188	java/lang/Process:getErrorStream	()Ljava/io/InputStream;
    //   146: invokespecial 176	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   149: invokespecial 179	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   152: astore_0
    //   153: aload_0
    //   154: astore_3
    //   155: aload_1
    //   156: astore_2
    //   157: aload_0
    //   158: invokevirtual 182	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   161: astore 5
    //   163: aload 5
    //   165: ifnull +23 -> 188
    //   168: aload_0
    //   169: astore_3
    //   170: aload_1
    //   171: astore_2
    //   172: aload 4
    //   174: aload 5
    //   176: invokevirtual 153	java/util/ArrayList:add	(Ljava/lang/Object;)Z
    //   179: pop
    //   180: goto -27 -> 153
    //   183: astore 4
    //   185: goto -90 -> 95
    //   188: aload_1
    //   189: ifnull +7 -> 196
    //   192: aload_1
    //   193: invokevirtual 185	java/io/BufferedReader:close	()V
    //   196: aload 4
    //   198: astore_1
    //   199: aload_0
    //   200: ifnull -157 -> 43
    //   203: aload_0
    //   204: invokevirtual 185	java/io/BufferedReader:close	()V
    //   207: aload 4
    //   209: areturn
    //   210: astore_0
    //   211: aload_0
    //   212: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   215: aload 4
    //   217: areturn
    //   218: astore_1
    //   219: aload_1
    //   220: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   223: goto -27 -> 196
    //   226: astore_1
    //   227: aload_1
    //   228: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   231: goto -107 -> 124
    //   234: astore_0
    //   235: aload_0
    //   236: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   239: goto -107 -> 132
    //   242: astore_0
    //   243: aconst_null
    //   244: astore_1
    //   245: aload_1
    //   246: ifnull +7 -> 253
    //   249: aload_1
    //   250: invokevirtual 185	java/io/BufferedReader:close	()V
    //   253: aload_3
    //   254: ifnull +7 -> 261
    //   257: aload_3
    //   258: invokevirtual 185	java/io/BufferedReader:close	()V
    //   261: aload_0
    //   262: athrow
    //   263: astore_1
    //   264: aload_1
    //   265: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   268: goto -15 -> 253
    //   271: astore_1
    //   272: aload_1
    //   273: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   276: goto -15 -> 261
    //   279: astore_0
    //   280: goto -35 -> 245
    //   283: astore_0
    //   284: aload_2
    //   285: astore_1
    //   286: goto -41 -> 245
    //   289: astore 4
    //   291: aconst_null
    //   292: astore_0
    //   293: aconst_null
    //   294: astore_1
    //   295: goto -200 -> 95
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	298	0	paramContext	Context
    //   0	298	1	paramArrayOfString	String[]
    //   76	209	2	localObject	Object
    //   1	257	3	localContext	Context
    //   9	73	4	localArrayList	java.util.ArrayList
    //   91	82	4	localThrowable1	Throwable
    //   183	33	4	localThrowable2	Throwable
    //   289	1	4	localThrowable3	Throwable
    //   161	14	5	str	String
    // Exception table:
    //   from	to	target	type
    //   72	77	91	java/lang/Throwable
    //   81	88	91	java/lang/Throwable
    //   134	153	91	java/lang/Throwable
    //   157	163	183	java/lang/Throwable
    //   172	180	183	java/lang/Throwable
    //   203	207	210	java/io/IOException
    //   192	196	218	java/io/IOException
    //   120	124	226	java/io/IOException
    //   128	132	234	java/io/IOException
    //   45	72	242	finally
    //   249	253	263	java/io/IOException
    //   257	261	271	java/io/IOException
    //   72	77	279	finally
    //   81	88	279	finally
    //   134	153	279	finally
    //   99	107	283	finally
    //   111	116	283	finally
    //   157	163	283	finally
    //   172	180	283	finally
    //   45	72	289	java/lang/Throwable
  }
  
  public static void a(long paramLong)
  {
    try
    {
      Thread.sleep(paramLong);
      return;
    }
    catch (InterruptedException localInterruptedException)
    {
      localInterruptedException.printStackTrace();
    }
  }
  
  /* Error */
  public static boolean a(java.io.File paramFile1, java.io.File paramFile2, int paramInt)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: ldc -53
    //   5: iconst_0
    //   6: anewarray 4	java/lang/Object
    //   9: invokestatic 206	com/tencent/bugly/a/bf:c	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   12: pop
    //   13: aload_0
    //   14: ifnull +15 -> 29
    //   17: aload_1
    //   18: ifnull +11 -> 29
    //   21: aload_0
    //   22: aload_1
    //   23: invokevirtual 209	java/io/File:equals	(Ljava/lang/Object;)Z
    //   26: ifeq +15 -> 41
    //   29: ldc -45
    //   31: iconst_0
    //   32: anewarray 4	java/lang/Object
    //   35: invokestatic 214	com/tencent/bugly/a/bf:d	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   38: pop
    //   39: iconst_0
    //   40: ireturn
    //   41: aload_0
    //   42: invokevirtual 217	java/io/File:exists	()Z
    //   45: ifeq +10 -> 55
    //   48: aload_0
    //   49: invokevirtual 220	java/io/File:canRead	()Z
    //   52: ifne +15 -> 67
    //   55: ldc -34
    //   57: iconst_0
    //   58: anewarray 4	java/lang/Object
    //   61: invokestatic 214	com/tencent/bugly/a/bf:d	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   64: pop
    //   65: iconst_0
    //   66: ireturn
    //   67: aload_1
    //   68: invokevirtual 226	java/io/File:getParentFile	()Ljava/io/File;
    //   71: ifnull +21 -> 92
    //   74: aload_1
    //   75: invokevirtual 226	java/io/File:getParentFile	()Ljava/io/File;
    //   78: invokevirtual 217	java/io/File:exists	()Z
    //   81: ifne +11 -> 92
    //   84: aload_1
    //   85: invokevirtual 226	java/io/File:getParentFile	()Ljava/io/File;
    //   88: invokevirtual 229	java/io/File:mkdirs	()Z
    //   91: pop
    //   92: aload_1
    //   93: invokevirtual 217	java/io/File:exists	()Z
    //   96: ifne +8 -> 104
    //   99: aload_1
    //   100: invokevirtual 232	java/io/File:createNewFile	()Z
    //   103: pop
    //   104: aload_1
    //   105: invokevirtual 217	java/io/File:exists	()Z
    //   108: ifeq +10 -> 118
    //   111: aload_1
    //   112: invokevirtual 220	java/io/File:canRead	()Z
    //   115: ifne +20 -> 135
    //   118: iconst_0
    //   119: ireturn
    //   120: astore_3
    //   121: aload_3
    //   122: invokestatic 107	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   125: ifne -21 -> 104
    //   128: aload_3
    //   129: invokevirtual 109	java/lang/Throwable:printStackTrace	()V
    //   132: goto -28 -> 104
    //   135: new 234	java/io/FileInputStream
    //   138: dup
    //   139: aload_0
    //   140: invokespecial 237	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   143: astore_3
    //   144: new 239	java/util/zip/ZipOutputStream
    //   147: dup
    //   148: new 241	java/io/FileOutputStream
    //   151: dup
    //   152: aload_1
    //   153: invokespecial 242	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   156: invokespecial 245	java/util/zip/ZipOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   159: astore 4
    //   161: aload 4
    //   163: bipush 8
    //   165: invokevirtual 249	java/util/zip/ZipOutputStream:setMethod	(I)V
    //   168: aload 4
    //   170: new 251	java/util/zip/ZipEntry
    //   173: dup
    //   174: aload_0
    //   175: invokevirtual 254	java/io/File:getName	()Ljava/lang/String;
    //   178: invokespecial 255	java/util/zip/ZipEntry:<init>	(Ljava/lang/String;)V
    //   181: invokevirtual 259	java/util/zip/ZipOutputStream:putNextEntry	(Ljava/util/zip/ZipEntry;)V
    //   184: iload_2
    //   185: sipush 1000
    //   188: if_icmple +78 -> 266
    //   191: iload_2
    //   192: newarray byte
    //   194: astore_0
    //   195: aload_3
    //   196: aload_0
    //   197: invokevirtual 263	java/io/FileInputStream:read	([B)I
    //   200: istore_2
    //   201: iload_2
    //   202: ifle +71 -> 273
    //   205: aload 4
    //   207: aload_0
    //   208: iconst_0
    //   209: iload_2
    //   210: invokevirtual 267	java/util/zip/ZipOutputStream:write	([BII)V
    //   213: goto -18 -> 195
    //   216: astore 5
    //   218: aload_3
    //   219: astore_1
    //   220: aload 4
    //   222: astore_0
    //   223: aload 5
    //   225: astore_3
    //   226: aload_3
    //   227: invokestatic 107	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   230: ifne +7 -> 237
    //   233: aload_3
    //   234: invokevirtual 109	java/lang/Throwable:printStackTrace	()V
    //   237: aload_1
    //   238: ifnull +7 -> 245
    //   241: aload_1
    //   242: invokevirtual 268	java/io/FileInputStream:close	()V
    //   245: aload_0
    //   246: ifnull +7 -> 253
    //   249: aload_0
    //   250: invokevirtual 269	java/util/zip/ZipOutputStream:close	()V
    //   253: ldc_w 271
    //   256: iconst_0
    //   257: anewarray 4	java/lang/Object
    //   260: invokestatic 206	com/tencent/bugly/a/bf:c	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   263: pop
    //   264: iconst_0
    //   265: ireturn
    //   266: sipush 1000
    //   269: istore_2
    //   270: goto -79 -> 191
    //   273: aload 4
    //   275: invokevirtual 274	java/util/zip/ZipOutputStream:flush	()V
    //   278: aload 4
    //   280: invokevirtual 277	java/util/zip/ZipOutputStream:closeEntry	()V
    //   283: aload_3
    //   284: ifnull +7 -> 291
    //   287: aload_3
    //   288: invokevirtual 268	java/io/FileInputStream:close	()V
    //   291: aload 4
    //   293: ifnull +8 -> 301
    //   296: aload 4
    //   298: invokevirtual 269	java/util/zip/ZipOutputStream:close	()V
    //   301: ldc_w 271
    //   304: iconst_0
    //   305: anewarray 4	java/lang/Object
    //   308: invokestatic 206	com/tencent/bugly/a/bf:c	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   311: pop
    //   312: iconst_1
    //   313: ireturn
    //   314: astore_0
    //   315: aload_0
    //   316: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   319: goto -28 -> 291
    //   322: astore_0
    //   323: aload_0
    //   324: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   327: goto -26 -> 301
    //   330: astore_1
    //   331: aload_1
    //   332: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   335: goto -90 -> 245
    //   338: astore_0
    //   339: aload_0
    //   340: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   343: goto -90 -> 253
    //   346: astore_1
    //   347: aconst_null
    //   348: astore_0
    //   349: aconst_null
    //   350: astore_3
    //   351: aload_3
    //   352: ifnull +7 -> 359
    //   355: aload_3
    //   356: invokevirtual 268	java/io/FileInputStream:close	()V
    //   359: aload_0
    //   360: ifnull +7 -> 367
    //   363: aload_0
    //   364: invokevirtual 269	java/util/zip/ZipOutputStream:close	()V
    //   367: ldc_w 271
    //   370: iconst_0
    //   371: anewarray 4	java/lang/Object
    //   374: invokestatic 206	com/tencent/bugly/a/bf:c	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   377: pop
    //   378: aload_1
    //   379: athrow
    //   380: astore_3
    //   381: aload_3
    //   382: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   385: goto -26 -> 359
    //   388: astore_0
    //   389: aload_0
    //   390: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   393: goto -26 -> 367
    //   396: astore_1
    //   397: aconst_null
    //   398: astore_0
    //   399: goto -48 -> 351
    //   402: astore_1
    //   403: aload 4
    //   405: astore_0
    //   406: goto -55 -> 351
    //   409: astore 4
    //   411: aload_1
    //   412: astore_3
    //   413: aload 4
    //   415: astore_1
    //   416: goto -65 -> 351
    //   419: astore_3
    //   420: aconst_null
    //   421: astore_0
    //   422: aload 4
    //   424: astore_1
    //   425: goto -199 -> 226
    //   428: astore 4
    //   430: aconst_null
    //   431: astore_0
    //   432: aload_3
    //   433: astore_1
    //   434: aload 4
    //   436: astore_3
    //   437: goto -211 -> 226
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	440	0	paramFile1	java.io.File
    //   0	440	1	paramFile2	java.io.File
    //   0	440	2	paramInt	int
    //   120	9	3	localThrowable1	Throwable
    //   143	213	3	localObject1	Object
    //   380	2	3	localIOException	java.io.IOException
    //   412	1	3	localFile	java.io.File
    //   419	14	3	localThrowable2	Throwable
    //   436	1	3	localThrowable3	Throwable
    //   1	403	4	localZipOutputStream	java.util.zip.ZipOutputStream
    //   409	14	4	localObject2	Object
    //   428	7	4	localThrowable4	Throwable
    //   216	8	5	localThrowable5	Throwable
    // Exception table:
    //   from	to	target	type
    //   67	92	120	java/lang/Throwable
    //   92	104	120	java/lang/Throwable
    //   161	184	216	java/lang/Throwable
    //   191	195	216	java/lang/Throwable
    //   195	201	216	java/lang/Throwable
    //   205	213	216	java/lang/Throwable
    //   273	283	216	java/lang/Throwable
    //   287	291	314	java/io/IOException
    //   296	301	322	java/io/IOException
    //   241	245	330	java/io/IOException
    //   249	253	338	java/io/IOException
    //   135	144	346	finally
    //   355	359	380	java/io/IOException
    //   363	367	388	java/io/IOException
    //   144	161	396	finally
    //   161	184	402	finally
    //   191	195	402	finally
    //   195	201	402	finally
    //   205	213	402	finally
    //   273	283	402	finally
    //   226	237	409	finally
    //   135	144	419	java/lang/Throwable
    //   144	161	428	java/lang/Throwable
  }
  
  public static boolean a(String paramString)
  {
    return (paramString == null) || (paramString.trim().length() <= 0);
  }
  
  /* Error */
  public static byte[] a(java.io.File paramFile, String paramString)
  {
    // Byte code:
    //   0: ldc -53
    //   2: iconst_0
    //   3: anewarray 4	java/lang/Object
    //   6: invokestatic 206	com/tencent/bugly/a/bf:c	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   9: pop
    //   10: ldc_w 284
    //   13: astore_3
    //   14: aload_0
    //   15: ifnull +441 -> 456
    //   18: aload_0
    //   19: invokevirtual 217	java/io/File:exists	()Z
    //   22: ifeq +434 -> 456
    //   25: aload_0
    //   26: invokevirtual 220	java/io/File:canRead	()Z
    //   29: ifeq +427 -> 456
    //   32: new 234	java/io/FileInputStream
    //   35: dup
    //   36: aload_0
    //   37: invokespecial 237	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   40: astore_3
    //   41: aload_0
    //   42: invokevirtual 254	java/io/File:getName	()Ljava/lang/String;
    //   45: astore 4
    //   47: aload_3
    //   48: astore_0
    //   49: aload 4
    //   51: astore_3
    //   52: new 286	java/io/ByteArrayInputStream
    //   55: dup
    //   56: aload_1
    //   57: ldc_w 288
    //   60: invokevirtual 292	java/lang/String:getBytes	(Ljava/lang/String;)[B
    //   63: invokespecial 294	java/io/ByteArrayInputStream:<init>	([B)V
    //   66: astore 6
    //   68: new 296	java/io/ByteArrayOutputStream
    //   71: dup
    //   72: invokespecial 297	java/io/ByteArrayOutputStream:<init>	()V
    //   75: astore 7
    //   77: new 239	java/util/zip/ZipOutputStream
    //   80: dup
    //   81: aload 7
    //   83: invokespecial 245	java/util/zip/ZipOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   86: astore_1
    //   87: aload_1
    //   88: astore 4
    //   90: aload_0
    //   91: astore 5
    //   93: aload_1
    //   94: bipush 8
    //   96: invokevirtual 249	java/util/zip/ZipOutputStream:setMethod	(I)V
    //   99: aload_1
    //   100: astore 4
    //   102: aload_0
    //   103: astore 5
    //   105: aload_1
    //   106: new 251	java/util/zip/ZipEntry
    //   109: dup
    //   110: aload_3
    //   111: invokespecial 255	java/util/zip/ZipEntry:<init>	(Ljava/lang/String;)V
    //   114: invokevirtual 259	java/util/zip/ZipOutputStream:putNextEntry	(Ljava/util/zip/ZipEntry;)V
    //   117: aload_1
    //   118: astore 4
    //   120: aload_0
    //   121: astore 5
    //   123: sipush 1024
    //   126: newarray byte
    //   128: astore_3
    //   129: aload_0
    //   130: ifnull +88 -> 218
    //   133: aload_1
    //   134: astore 4
    //   136: aload_0
    //   137: astore 5
    //   139: aload_0
    //   140: aload_3
    //   141: invokevirtual 263	java/io/FileInputStream:read	([B)I
    //   144: istore_2
    //   145: iload_2
    //   146: ifle +72 -> 218
    //   149: aload_1
    //   150: astore 4
    //   152: aload_0
    //   153: astore 5
    //   155: aload_1
    //   156: aload_3
    //   157: iconst_0
    //   158: iload_2
    //   159: invokevirtual 267	java/util/zip/ZipOutputStream:write	([BII)V
    //   162: goto -29 -> 133
    //   165: astore_3
    //   166: aload_1
    //   167: astore 4
    //   169: aload_0
    //   170: astore 5
    //   172: aload_3
    //   173: invokestatic 107	com/tencent/bugly/a/bf:a	(Ljava/lang/Throwable;)Z
    //   176: ifne +13 -> 189
    //   179: aload_1
    //   180: astore 4
    //   182: aload_0
    //   183: astore 5
    //   185: aload_3
    //   186: invokevirtual 109	java/lang/Throwable:printStackTrace	()V
    //   189: aload_0
    //   190: ifnull +7 -> 197
    //   193: aload_0
    //   194: invokevirtual 268	java/io/FileInputStream:close	()V
    //   197: aload_1
    //   198: ifnull +7 -> 205
    //   201: aload_1
    //   202: invokevirtual 269	java/util/zip/ZipOutputStream:close	()V
    //   205: ldc_w 271
    //   208: iconst_0
    //   209: anewarray 4	java/lang/Object
    //   212: invokestatic 206	com/tencent/bugly/a/bf:c	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   215: pop
    //   216: aconst_null
    //   217: areturn
    //   218: aload_1
    //   219: astore 4
    //   221: aload_0
    //   222: astore 5
    //   224: aload 6
    //   226: aload_3
    //   227: invokevirtual 298	java/io/ByteArrayInputStream:read	([B)I
    //   230: istore_2
    //   231: iload_2
    //   232: ifle +55 -> 287
    //   235: aload_1
    //   236: astore 4
    //   238: aload_0
    //   239: astore 5
    //   241: aload_1
    //   242: aload_3
    //   243: iconst_0
    //   244: iload_2
    //   245: invokevirtual 267	java/util/zip/ZipOutputStream:write	([BII)V
    //   248: goto -30 -> 218
    //   251: astore_1
    //   252: aload 5
    //   254: astore_0
    //   255: aload 4
    //   257: astore_3
    //   258: aload_0
    //   259: ifnull +7 -> 266
    //   262: aload_0
    //   263: invokevirtual 268	java/io/FileInputStream:close	()V
    //   266: aload_3
    //   267: ifnull +7 -> 274
    //   270: aload_3
    //   271: invokevirtual 269	java/util/zip/ZipOutputStream:close	()V
    //   274: ldc_w 271
    //   277: iconst_0
    //   278: anewarray 4	java/lang/Object
    //   281: invokestatic 206	com/tencent/bugly/a/bf:c	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   284: pop
    //   285: aload_1
    //   286: athrow
    //   287: aload_1
    //   288: astore 4
    //   290: aload_0
    //   291: astore 5
    //   293: aload_1
    //   294: invokevirtual 277	java/util/zip/ZipOutputStream:closeEntry	()V
    //   297: aload_1
    //   298: astore 4
    //   300: aload_0
    //   301: astore 5
    //   303: aload_1
    //   304: invokevirtual 274	java/util/zip/ZipOutputStream:flush	()V
    //   307: aload_1
    //   308: astore 4
    //   310: aload_0
    //   311: astore 5
    //   313: aload_1
    //   314: invokevirtual 301	java/util/zip/ZipOutputStream:finish	()V
    //   317: aload_1
    //   318: astore 4
    //   320: aload_0
    //   321: astore 5
    //   323: aload 7
    //   325: invokevirtual 304	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   328: astore_3
    //   329: aload_0
    //   330: ifnull +7 -> 337
    //   333: aload_0
    //   334: invokevirtual 268	java/io/FileInputStream:close	()V
    //   337: aload_1
    //   338: ifnull +7 -> 345
    //   341: aload_1
    //   342: invokevirtual 269	java/util/zip/ZipOutputStream:close	()V
    //   345: ldc_w 271
    //   348: iconst_0
    //   349: anewarray 4	java/lang/Object
    //   352: invokestatic 206	com/tencent/bugly/a/bf:c	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   355: pop
    //   356: aload_3
    //   357: areturn
    //   358: astore_0
    //   359: aload_0
    //   360: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   363: goto -26 -> 337
    //   366: astore_0
    //   367: aload_0
    //   368: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   371: goto -26 -> 345
    //   374: astore_0
    //   375: aload_0
    //   376: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   379: goto -182 -> 197
    //   382: astore_0
    //   383: aload_0
    //   384: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   387: goto -182 -> 205
    //   390: astore_0
    //   391: aload_0
    //   392: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   395: goto -129 -> 266
    //   398: astore_0
    //   399: aload_0
    //   400: invokevirtual 189	java/io/IOException:printStackTrace	()V
    //   403: goto -129 -> 274
    //   406: astore_1
    //   407: aconst_null
    //   408: astore_3
    //   409: aconst_null
    //   410: astore_0
    //   411: goto -153 -> 258
    //   414: astore_1
    //   415: aload_3
    //   416: astore_0
    //   417: aconst_null
    //   418: astore_3
    //   419: goto -161 -> 258
    //   422: astore_1
    //   423: aconst_null
    //   424: astore_3
    //   425: goto -167 -> 258
    //   428: astore_3
    //   429: aconst_null
    //   430: astore_1
    //   431: aconst_null
    //   432: astore_0
    //   433: goto -267 -> 166
    //   436: astore_1
    //   437: aload_3
    //   438: astore_0
    //   439: aconst_null
    //   440: astore 4
    //   442: aload_1
    //   443: astore_3
    //   444: aload 4
    //   446: astore_1
    //   447: goto -281 -> 166
    //   450: astore_3
    //   451: aconst_null
    //   452: astore_1
    //   453: goto -287 -> 166
    //   456: aconst_null
    //   457: astore_0
    //   458: goto -406 -> 52
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	461	0	paramFile	java.io.File
    //   0	461	1	paramString	String
    //   144	101	2	i	int
    //   13	144	3	localObject1	Object
    //   165	78	3	localThrowable1	Throwable
    //   257	168	3	localObject2	Object
    //   428	10	3	localThrowable2	Throwable
    //   443	1	3	str1	String
    //   450	1	3	localThrowable3	Throwable
    //   45	400	4	str2	String
    //   91	231	5	localFile	java.io.File
    //   66	159	6	localByteArrayInputStream	java.io.ByteArrayInputStream
    //   75	249	7	localByteArrayOutputStream	java.io.ByteArrayOutputStream
    // Exception table:
    //   from	to	target	type
    //   93	99	165	java/lang/Throwable
    //   105	117	165	java/lang/Throwable
    //   123	129	165	java/lang/Throwable
    //   139	145	165	java/lang/Throwable
    //   155	162	165	java/lang/Throwable
    //   224	231	165	java/lang/Throwable
    //   241	248	165	java/lang/Throwable
    //   293	297	165	java/lang/Throwable
    //   303	307	165	java/lang/Throwable
    //   313	317	165	java/lang/Throwable
    //   323	329	165	java/lang/Throwable
    //   93	99	251	finally
    //   105	117	251	finally
    //   123	129	251	finally
    //   139	145	251	finally
    //   155	162	251	finally
    //   172	179	251	finally
    //   185	189	251	finally
    //   224	231	251	finally
    //   241	248	251	finally
    //   293	297	251	finally
    //   303	307	251	finally
    //   313	317	251	finally
    //   323	329	251	finally
    //   333	337	358	java/io/IOException
    //   341	345	366	java/io/IOException
    //   193	197	374	java/io/IOException
    //   201	205	382	java/io/IOException
    //   262	266	390	java/io/IOException
    //   270	274	398	java/io/IOException
    //   18	41	406	finally
    //   41	47	414	finally
    //   52	87	422	finally
    //   18	41	428	java/lang/Throwable
    //   41	47	436	java/lang/Throwable
    //   52	87	450	java/lang/Throwable
  }
  
  public static byte[] a(byte[] paramArrayOfByte, int paramInt)
  {
    if ((paramArrayOfByte == null) || (paramInt == -1)) {
      return paramArrayOfByte;
    }
    bf.c("rqdp{  zp:} %s rqdp{  len:} %s", new Object[] { Integer.valueOf(paramInt), Integer.valueOf(paramArrayOfByte.length) });
    try
    {
      h localH = g.a(paramInt);
      if (localH == null) {
        return null;
      }
      paramArrayOfByte = localH.a(paramArrayOfByte);
      return paramArrayOfByte;
    }
    catch (Throwable paramArrayOfByte)
    {
      if (!bf.a(paramArrayOfByte)) {
        paramArrayOfByte.printStackTrace();
      }
    }
    return null;
  }
  
  public static byte[] a(byte[] paramArrayOfByte, int paramInt1, int paramInt2, String paramString)
  {
    if (paramArrayOfByte == null) {}
    do
    {
      return null;
      try
      {
        paramArrayOfByte = a(a(paramArrayOfByte, paramInt1), paramInt2, paramString);
        return paramArrayOfByte;
      }
      catch (Throwable paramArrayOfByte) {}
    } while (bf.a(paramArrayOfByte));
    paramArrayOfByte.printStackTrace();
    return null;
  }
  
  public static byte[] a(byte[] paramArrayOfByte, int paramInt, String paramString)
  {
    if ((paramArrayOfByte == null) || (paramInt == -1)) {
      return paramArrayOfByte;
    }
    bf.c("rqdp{  enD:} %d %d", new Object[] { Integer.valueOf(paramArrayOfByte.length), Integer.valueOf(paramInt) });
    try
    {
      n localN = m.a(paramInt);
      if (localN == null) {
        return null;
      }
      localN.a(paramString);
      paramArrayOfByte = localN.b(paramArrayOfByte);
      return paramArrayOfByte;
    }
    catch (Throwable paramArrayOfByte)
    {
      if (!bf.a(paramArrayOfByte)) {
        paramArrayOfByte.printStackTrace();
      }
    }
    return null;
  }
  
  public static long b()
  {
    try
    {
      SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("yyyy-MM-dd", Locale.US);
      long l = localSimpleDateFormat.parse(localSimpleDateFormat.format(new Date())).getTime();
      return l;
    }
    catch (Throwable localThrowable)
    {
      if (!bf.a(localThrowable)) {
        localThrowable.printStackTrace();
      }
    }
    return -1L;
  }
  
  public static long b(byte[] paramArrayOfByte)
  {
    if ((paramArrayOfByte == null) && (paramArrayOfByte.length == 0)) {
      return -1L;
    }
    try
    {
      long l = Long.parseLong(new String(paramArrayOfByte, "utf-8"));
      return l;
    }
    catch (UnsupportedEncodingException paramArrayOfByte)
    {
      paramArrayOfByte.printStackTrace();
    }
    return -1L;
  }
  
  public static byte[] b(long paramLong)
  {
    try
    {
      byte[] arrayOfByte = ("" + paramLong).getBytes("utf-8");
      return arrayOfByte;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      localUnsupportedEncodingException.printStackTrace();
    }
    return null;
  }
  
  public static byte[] b(byte[] paramArrayOfByte, int paramInt)
  {
    if ((paramArrayOfByte == null) || (paramInt == -1)) {
      return paramArrayOfByte;
    }
    bf.c("rqdp{  unzp:} %s rqdp{  len:} %s", new Object[] { Integer.valueOf(paramInt), Integer.valueOf(paramArrayOfByte.length) });
    try
    {
      h localH = g.a(paramInt);
      if (localH == null) {
        return null;
      }
      paramArrayOfByte = localH.b(paramArrayOfByte);
      return paramArrayOfByte;
    }
    catch (Throwable paramArrayOfByte)
    {
      if (!bf.a(paramArrayOfByte)) {
        paramArrayOfByte.printStackTrace();
      }
    }
    return null;
  }
  
  public static byte[] b(byte[] paramArrayOfByte, int paramInt1, int paramInt2, String paramString)
  {
    try
    {
      paramArrayOfByte = b(b(paramArrayOfByte, paramInt2, paramString), paramInt1);
      return paramArrayOfByte;
    }
    catch (Exception paramArrayOfByte)
    {
      if (!bf.a(paramArrayOfByte)) {
        paramArrayOfByte.printStackTrace();
      }
    }
    return null;
  }
  
  public static byte[] b(byte[] paramArrayOfByte, int paramInt, String paramString)
  {
    if ((paramArrayOfByte == null) || (paramInt == -1)) {
      return paramArrayOfByte;
    }
    try
    {
      n localN = m.a(paramInt);
      if (localN == null) {
        return null;
      }
      localN.a(paramString);
      paramArrayOfByte = localN.a(paramArrayOfByte);
      return paramArrayOfByte;
    }
    catch (Throwable paramArrayOfByte)
    {
      if (!bf.a(paramArrayOfByte)) {
        paramArrayOfByte.printStackTrace();
      }
      bf.d("encrytype %d %s", new Object[] { Integer.valueOf(paramInt), paramString });
    }
    return null;
  }
  
  private static String c(byte[] paramArrayOfByte)
  {
    if (paramArrayOfByte == null) {
      return "";
    }
    StringBuffer localStringBuffer = new StringBuffer();
    int i = 0;
    while (i < paramArrayOfByte.length)
    {
      String str = Integer.toHexString(paramArrayOfByte[i] & 0xFF);
      if (str.length() == 1) {
        localStringBuffer.append("0");
      }
      localStringBuffer.append(str);
      i += 1;
    }
    return localStringBuffer.toString().toUpperCase();
  }
  
  public static void c()
  {
    Process.killProcess(Process.myPid());
    System.exit(1);
  }
}
