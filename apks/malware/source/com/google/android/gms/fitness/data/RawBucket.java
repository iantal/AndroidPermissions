package com.google.android.gms.fitness.data;

import android.os.Parcel;
import android.os.Parcelable.Creator;
import com.google.android.gms.common.internal.ao;
import com.google.android.gms.common.internal.ap;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.TimeUnit;

public final class RawBucket
  implements SafeParcelable
{
  public static final Parcelable.Creator<RawBucket> CREATOR = new o();
  final int a;
  public final long b;
  public final long c;
  public final Session d;
  public final int e;
  public final List<RawDataSet> f;
  public final int g;
  public final boolean h;
  
  public RawBucket(int paramInt1, long paramLong1, long paramLong2, Session paramSession, int paramInt2, List<RawDataSet> paramList, int paramInt3, boolean paramBoolean)
  {
    this.a = paramInt1;
    this.b = paramLong1;
    this.c = paramLong2;
    this.d = paramSession;
    this.e = paramInt2;
    this.f = paramList;
    this.g = paramInt3;
    this.h = paramBoolean;
  }
  
  public RawBucket(Bucket paramBucket, List<DataSource> paramList, List<DataType> paramList1)
  {
    this.a = 2;
    this.b = paramBucket.a(TimeUnit.MILLISECONDS);
    this.c = paramBucket.b(TimeUnit.MILLISECONDS);
    this.d = paramBucket.a();
    this.e = paramBucket.b();
    this.g = paramBucket.d();
    this.h = paramBucket.e();
    paramBucket = paramBucket.c();
    this.f = new ArrayList(paramBucket.size());
    paramBucket = paramBucket.iterator();
    while (paramBucket.hasNext())
    {
      DataSet localDataSet = (DataSet)paramBucket.next();
      this.f.add(new RawDataSet(localDataSet, paramList, paramList1));
    }
  }
  
  public final int describeContents()
  {
    return 0;
  }
  
  public final boolean equals(Object paramObject)
  {
    boolean bool2 = false;
    boolean bool1;
    if (this != paramObject)
    {
      bool1 = bool2;
      if (!(paramObject instanceof RawBucket)) {
        break label105;
      }
      paramObject = (RawBucket)paramObject;
      if ((this.b != paramObject.b) || (this.c != paramObject.c) || (this.e != paramObject.e) || (!ao.a(this.f, paramObject.f)) || (this.g != paramObject.g) || (this.h != paramObject.h)) {
        break label107;
      }
    }
    label105:
    label107:
    for (int i = 1;; i = 0)
    {
      bool1 = bool2;
      if (i != 0) {
        bool1 = true;
      }
      return bool1;
    }
  }
  
  public final int hashCode()
  {
    return Arrays.hashCode(new Object[] { Long.valueOf(this.b), Long.valueOf(this.c), Integer.valueOf(this.g) });
  }
  
  public final String toString()
  {
    return ao.a(this).a("startTime", Long.valueOf(this.b)).a("endTime", Long.valueOf(this.c)).a("activity", Integer.valueOf(this.e)).a("dataSets", this.f).a("bucketType", Integer.valueOf(this.g)).a("serverHasMoreData", Boolean.valueOf(this.h)).toString();
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    o.a(this, paramParcel, paramInt);
  }
}
