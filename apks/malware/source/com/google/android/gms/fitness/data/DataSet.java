package com.google.android.gms.fitness.data;

import android.os.Parcel;
import android.os.Parcelable.Creator;
import com.google.android.gms.common.internal.ao;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

public final class DataSet
  implements SafeParcelable
{
  public static final Parcelable.Creator<DataSet> CREATOR = new f();
  private final int a;
  private final DataSource b;
  private final DataType c;
  private final List<DataPoint> d;
  private final List<DataSource> e;
  private boolean f = false;
  
  DataSet(int paramInt, DataSource paramDataSource, List<RawDataPoint> paramList, List<DataSource> paramList1, boolean paramBoolean)
  {
    this.a = paramInt;
    this.b = paramDataSource;
    this.c = paramDataSource.a();
    this.f = paramBoolean;
    this.d = new ArrayList(paramList.size());
    if (paramInt >= 2) {}
    for (;;)
    {
      this.e = paramList1;
      paramDataSource = paramList.iterator();
      while (paramDataSource.hasNext())
      {
        paramList = (RawDataPoint)paramDataSource.next();
        this.d.add(new DataPoint(this.e, paramList));
      }
      paramList1 = Collections.singletonList(paramDataSource);
    }
  }
  
  public DataSet(RawDataSet paramRawDataSet, List<DataSource> paramList)
  {
    this.a = 3;
    int i = paramRawDataSet.b;
    if ((i >= 0) && (i < paramList.size())) {}
    for (Object localObject = paramList.get(i);; localObject = null)
    {
      this.b = ((DataSource)localObject);
      this.c = this.b.a();
      this.e = paramList;
      this.f = paramRawDataSet.e;
      paramRawDataSet = paramRawDataSet.d;
      this.d = new ArrayList(paramRawDataSet.size());
      paramRawDataSet = paramRawDataSet.iterator();
      while (paramRawDataSet.hasNext())
      {
        paramList = (RawDataPoint)paramRawDataSet.next();
        this.d.add(new DataPoint(this.e, paramList));
      }
    }
  }
  
  public final DataSource a()
  {
    return this.b;
  }
  
  final List<RawDataPoint> a(List<DataSource> paramList)
  {
    ArrayList localArrayList = new ArrayList(this.d.size());
    Iterator localIterator = this.d.iterator();
    while (localIterator.hasNext()) {
      localArrayList.add(new RawDataPoint((DataPoint)localIterator.next(), paramList));
    }
    return localArrayList;
  }
  
  public final DataType b()
  {
    return this.b.a();
  }
  
  public final boolean c()
  {
    return this.f;
  }
  
  final int d()
  {
    return this.a;
  }
  
  public final int describeContents()
  {
    return 0;
  }
  
  final List<RawDataPoint> e()
  {
    return a(this.e);
  }
  
  public final boolean equals(Object paramObject)
  {
    boolean bool2 = false;
    boolean bool1;
    if (paramObject != this)
    {
      bool1 = bool2;
      if (!(paramObject instanceof DataSet)) {
        break label93;
      }
      paramObject = (DataSet)paramObject;
      if ((!ao.a(this.b.a(), paramObject.b.a())) || (!ao.a(this.b, paramObject.b)) || (!ao.a(this.d, paramObject.d)) || (this.f != paramObject.f)) {
        break label95;
      }
    }
    label93:
    label95:
    for (int i = 1;; i = 0)
    {
      bool1 = bool2;
      if (i != 0) {
        bool1 = true;
      }
      return bool1;
    }
  }
  
  final List<DataSource> f()
  {
    return this.e;
  }
  
  public final int hashCode()
  {
    return Arrays.hashCode(new Object[] { this.b });
  }
  
  public final String toString()
  {
    Object localObject = e();
    String str = this.b.g();
    if (this.d.size() < 10) {}
    for (;;)
    {
      return String.format("DataSet{%s %s}", new Object[] { str, localObject });
      localObject = String.format("%d data points, first 5: %s", new Object[] { Integer.valueOf(this.d.size()), ((List)localObject).subList(0, 5) });
    }
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    f.a(this, paramParcel, paramInt);
  }
}
