package com.google.android.gms.games.multiplayer.turnbased;

import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable.Creator;
import com.google.android.gms.common.internal.ao;
import com.google.android.gms.common.internal.ap;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import com.google.android.gms.games.Game;
import com.google.android.gms.games.GameEntity;
import com.google.android.gms.games.multiplayer.Participant;
import com.google.android.gms.games.multiplayer.ParticipantEntity;
import java.util.ArrayList;
import java.util.Arrays;

public final class TurnBasedMatchEntity
  implements SafeParcelable, TurnBasedMatch
{
  public static final Parcelable.Creator<TurnBasedMatchEntity> CREATOR = new a();
  private final int b;
  private final GameEntity c;
  private final String d;
  private final String e;
  private final long f;
  private final String g;
  private final long h;
  private final String i;
  private final int j;
  private final int k;
  private final int l;
  private final byte[] m;
  private final ArrayList<ParticipantEntity> n;
  private final String o;
  private final byte[] p;
  private final int q;
  private final Bundle r;
  private final int s;
  private final boolean t;
  private final String u;
  private final String v;
  
  TurnBasedMatchEntity(int paramInt1, GameEntity paramGameEntity, String paramString1, String paramString2, long paramLong1, String paramString3, long paramLong2, String paramString4, int paramInt2, int paramInt3, int paramInt4, byte[] paramArrayOfByte1, ArrayList<ParticipantEntity> paramArrayList, String paramString5, byte[] paramArrayOfByte2, int paramInt5, Bundle paramBundle, int paramInt6, boolean paramBoolean, String paramString6, String paramString7)
  {
    this.b = paramInt1;
    this.c = paramGameEntity;
    this.d = paramString1;
    this.e = paramString2;
    this.f = paramLong1;
    this.g = paramString3;
    this.h = paramLong2;
    this.i = paramString4;
    this.j = paramInt2;
    this.s = paramInt6;
    this.k = paramInt3;
    this.l = paramInt4;
    this.m = paramArrayOfByte1;
    this.n = paramArrayList;
    this.o = paramString5;
    this.p = paramArrayOfByte2;
    this.q = paramInt5;
    this.r = paramBundle;
    this.t = paramBoolean;
    this.u = paramString6;
    this.v = paramString7;
  }
  
  public TurnBasedMatchEntity(TurnBasedMatch paramTurnBasedMatch)
  {
    this.b = 2;
    this.c = new GameEntity(paramTurnBasedMatch.b());
    this.d = paramTurnBasedMatch.c();
    this.e = paramTurnBasedMatch.d();
    this.f = paramTurnBasedMatch.e();
    this.g = paramTurnBasedMatch.j();
    this.h = paramTurnBasedMatch.l();
    this.i = paramTurnBasedMatch.m();
    this.j = paramTurnBasedMatch.f();
    this.s = paramTurnBasedMatch.g();
    this.k = paramTurnBasedMatch.i();
    this.l = paramTurnBasedMatch.o();
    this.o = paramTurnBasedMatch.p();
    this.q = paramTurnBasedMatch.r();
    this.r = paramTurnBasedMatch.s();
    this.t = paramTurnBasedMatch.u();
    this.u = paramTurnBasedMatch.h();
    this.v = paramTurnBasedMatch.v();
    byte[] arrayOfByte = paramTurnBasedMatch.n();
    if (arrayOfByte == null)
    {
      this.m = null;
      arrayOfByte = paramTurnBasedMatch.q();
      if (arrayOfByte != null) {
        break label310;
      }
      this.p = null;
    }
    for (;;)
    {
      paramTurnBasedMatch = paramTurnBasedMatch.k();
      int i2 = paramTurnBasedMatch.size();
      this.n = new ArrayList(i2);
      int i1 = 0;
      while (i1 < i2)
      {
        this.n.add((ParticipantEntity)((Participant)paramTurnBasedMatch.get(i1)).a());
        i1 += 1;
      }
      this.m = new byte[arrayOfByte.length];
      System.arraycopy(arrayOfByte, 0, this.m, 0, arrayOfByte.length);
      break;
      label310:
      this.p = new byte[arrayOfByte.length];
      System.arraycopy(arrayOfByte, 0, this.p, 0, arrayOfByte.length);
    }
  }
  
  static int a(TurnBasedMatch paramTurnBasedMatch)
  {
    return Arrays.hashCode(new Object[] { paramTurnBasedMatch.b(), paramTurnBasedMatch.c(), paramTurnBasedMatch.d(), Long.valueOf(paramTurnBasedMatch.e()), paramTurnBasedMatch.j(), Long.valueOf(paramTurnBasedMatch.l()), paramTurnBasedMatch.m(), Integer.valueOf(paramTurnBasedMatch.f()), Integer.valueOf(paramTurnBasedMatch.g()), paramTurnBasedMatch.h(), Integer.valueOf(paramTurnBasedMatch.i()), Integer.valueOf(paramTurnBasedMatch.o()), paramTurnBasedMatch.k(), paramTurnBasedMatch.p(), Integer.valueOf(paramTurnBasedMatch.r()), paramTurnBasedMatch.s(), Integer.valueOf(paramTurnBasedMatch.t()), Boolean.valueOf(paramTurnBasedMatch.u()) });
  }
  
  static boolean a(TurnBasedMatch paramTurnBasedMatch, Object paramObject)
  {
    if (!(paramObject instanceof TurnBasedMatch)) {}
    do
    {
      return false;
      if (paramTurnBasedMatch == paramObject) {
        return true;
      }
      paramObject = (TurnBasedMatch)paramObject;
    } while ((!ao.a(paramObject.b(), paramTurnBasedMatch.b())) || (!ao.a(paramObject.c(), paramTurnBasedMatch.c())) || (!ao.a(paramObject.d(), paramTurnBasedMatch.d())) || (!ao.a(Long.valueOf(paramObject.e()), Long.valueOf(paramTurnBasedMatch.e()))) || (!ao.a(paramObject.j(), paramTurnBasedMatch.j())) || (!ao.a(Long.valueOf(paramObject.l()), Long.valueOf(paramTurnBasedMatch.l()))) || (!ao.a(paramObject.m(), paramTurnBasedMatch.m())) || (!ao.a(Integer.valueOf(paramObject.f()), Integer.valueOf(paramTurnBasedMatch.f()))) || (!ao.a(Integer.valueOf(paramObject.g()), Integer.valueOf(paramTurnBasedMatch.g()))) || (!ao.a(paramObject.h(), paramTurnBasedMatch.h())) || (!ao.a(Integer.valueOf(paramObject.i()), Integer.valueOf(paramTurnBasedMatch.i()))) || (!ao.a(Integer.valueOf(paramObject.o()), Integer.valueOf(paramTurnBasedMatch.o()))) || (!ao.a(paramObject.k(), paramTurnBasedMatch.k())) || (!ao.a(paramObject.p(), paramTurnBasedMatch.p())) || (!ao.a(Integer.valueOf(paramObject.r()), Integer.valueOf(paramTurnBasedMatch.r()))) || (!ao.a(paramObject.s(), paramTurnBasedMatch.s())) || (!ao.a(Integer.valueOf(paramObject.t()), Integer.valueOf(paramTurnBasedMatch.t()))) || (!ao.a(Boolean.valueOf(paramObject.u()), Boolean.valueOf(paramTurnBasedMatch.u()))));
    return true;
  }
  
  static String b(TurnBasedMatch paramTurnBasedMatch)
  {
    return ao.a(paramTurnBasedMatch).a("Game", paramTurnBasedMatch.b()).a("MatchId", paramTurnBasedMatch.c()).a("CreatorId", paramTurnBasedMatch.d()).a("CreationTimestamp", Long.valueOf(paramTurnBasedMatch.e())).a("LastUpdaterId", paramTurnBasedMatch.j()).a("LastUpdatedTimestamp", Long.valueOf(paramTurnBasedMatch.l())).a("PendingParticipantId", paramTurnBasedMatch.m()).a("MatchStatus", Integer.valueOf(paramTurnBasedMatch.f())).a("TurnStatus", Integer.valueOf(paramTurnBasedMatch.g())).a("Description", paramTurnBasedMatch.h()).a("Variant", Integer.valueOf(paramTurnBasedMatch.i())).a("Data", paramTurnBasedMatch.n()).a("Version", Integer.valueOf(paramTurnBasedMatch.o())).a("Participants", paramTurnBasedMatch.k()).a("RematchId", paramTurnBasedMatch.p()).a("PreviousData", paramTurnBasedMatch.q()).a("MatchNumber", Integer.valueOf(paramTurnBasedMatch.r())).a("AutoMatchCriteria", paramTurnBasedMatch.s()).a("AvailableAutoMatchSlots", Integer.valueOf(paramTurnBasedMatch.t())).a("LocallyModified", Boolean.valueOf(paramTurnBasedMatch.u())).a("DescriptionParticipantId", paramTurnBasedMatch.v()).toString();
  }
  
  public final Game b()
  {
    return this.c;
  }
  
  public final String c()
  {
    return this.d;
  }
  
  public final String d()
  {
    return this.e;
  }
  
  public final int describeContents()
  {
    return 0;
  }
  
  public final long e()
  {
    return this.f;
  }
  
  public final boolean equals(Object paramObject)
  {
    return a(this, paramObject);
  }
  
  public final int f()
  {
    return this.j;
  }
  
  public final int g()
  {
    return this.s;
  }
  
  public final String h()
  {
    return this.u;
  }
  
  public final int hashCode()
  {
    return a(this);
  }
  
  public final int i()
  {
    return this.k;
  }
  
  public final String j()
  {
    return this.g;
  }
  
  public final ArrayList<Participant> k()
  {
    return new ArrayList(this.n);
  }
  
  public final long l()
  {
    return this.h;
  }
  
  public final String m()
  {
    return this.i;
  }
  
  public final byte[] n()
  {
    return this.m;
  }
  
  public final int o()
  {
    return this.l;
  }
  
  public final String p()
  {
    return this.o;
  }
  
  public final byte[] q()
  {
    return this.p;
  }
  
  public final int r()
  {
    return this.q;
  }
  
  public final Bundle s()
  {
    return this.r;
  }
  
  public final int t()
  {
    if (this.r == null) {
      return 0;
    }
    return this.r.getInt("max_automatch_players");
  }
  
  public final String toString()
  {
    return b(this);
  }
  
  public final boolean u()
  {
    return this.t;
  }
  
  public final String v()
  {
    return this.v;
  }
  
  public final int w()
  {
    return this.b;
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    a.a(this, paramParcel, paramInt);
  }
}
