package com.google.android.gms.games.request;

import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable.Creator;
import com.google.android.gms.common.internal.ao;
import com.google.android.gms.common.internal.ap;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import com.google.android.gms.games.Game;
import com.google.android.gms.games.GameEntity;
import com.google.android.gms.games.Player;
import com.google.android.gms.games.PlayerEntity;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public final class GameRequestEntity
  implements SafeParcelable, GameRequest
{
  public static final Parcelable.Creator<GameRequestEntity> CREATOR = new a();
  private final int a;
  private final GameEntity b;
  private final PlayerEntity c;
  private final byte[] d;
  private final String e;
  private final ArrayList<PlayerEntity> f;
  private final int g;
  private final long h;
  private final long i;
  private final Bundle j;
  private final int k;
  
  GameRequestEntity(int paramInt1, GameEntity paramGameEntity, PlayerEntity paramPlayerEntity, byte[] paramArrayOfByte, String paramString, ArrayList<PlayerEntity> paramArrayList, int paramInt2, long paramLong1, long paramLong2, Bundle paramBundle, int paramInt3)
  {
    this.a = paramInt1;
    this.b = paramGameEntity;
    this.c = paramPlayerEntity;
    this.d = paramArrayOfByte;
    this.e = paramString;
    this.f = paramArrayList;
    this.g = paramInt2;
    this.h = paramLong1;
    this.i = paramLong2;
    this.j = paramBundle;
    this.k = paramInt3;
  }
  
  public GameRequestEntity(GameRequest paramGameRequest)
  {
    this.a = 2;
    this.b = new GameEntity(paramGameRequest.e());
    this.c = new PlayerEntity(paramGameRequest.f());
    this.e = paramGameRequest.d();
    this.g = paramGameRequest.h();
    this.h = paramGameRequest.i();
    this.i = paramGameRequest.j();
    this.k = paramGameRequest.k();
    Object localObject = paramGameRequest.g();
    if (localObject == null) {
      this.d = null;
    }
    for (;;)
    {
      localObject = paramGameRequest.l();
      int n = ((List)localObject).size();
      this.f = new ArrayList(n);
      this.j = new Bundle();
      int m = 0;
      while (m < n)
      {
        Player localPlayer = (Player)((Player)((List)localObject).get(m)).a();
        String str = localPlayer.b();
        this.f.add((PlayerEntity)localPlayer);
        this.j.putInt(str, paramGameRequest.a(str));
        m += 1;
      }
      this.d = new byte[localObject.length];
      System.arraycopy(localObject, 0, this.d, 0, localObject.length);
    }
  }
  
  static int a(GameRequest paramGameRequest)
  {
    return Arrays.hashCode(new Object[] { paramGameRequest.e(), paramGameRequest.l(), paramGameRequest.d(), paramGameRequest.f(), c(paramGameRequest), Integer.valueOf(paramGameRequest.h()), Long.valueOf(paramGameRequest.i()), Long.valueOf(paramGameRequest.j()) });
  }
  
  static boolean a(GameRequest paramGameRequest, Object paramObject)
  {
    if (!(paramObject instanceof GameRequest)) {}
    do
    {
      return false;
      if (paramGameRequest == paramObject) {
        return true;
      }
      paramObject = (GameRequest)paramObject;
    } while ((!ao.a(paramObject.e(), paramGameRequest.e())) || (!ao.a(paramObject.l(), paramGameRequest.l())) || (!ao.a(paramObject.d(), paramGameRequest.d())) || (!ao.a(paramObject.f(), paramGameRequest.f())) || (!Arrays.equals(c(paramObject), c(paramGameRequest))) || (!ao.a(Integer.valueOf(paramObject.h()), Integer.valueOf(paramGameRequest.h()))) || (!ao.a(Long.valueOf(paramObject.i()), Long.valueOf(paramGameRequest.i()))) || (!ao.a(Long.valueOf(paramObject.j()), Long.valueOf(paramGameRequest.j()))));
    return true;
  }
  
  static String b(GameRequest paramGameRequest)
  {
    return ao.a(paramGameRequest).a("Game", paramGameRequest.e()).a("Sender", paramGameRequest.f()).a("Recipients", paramGameRequest.l()).a("Data", paramGameRequest.g()).a("RequestId", paramGameRequest.d()).a("Type", Integer.valueOf(paramGameRequest.h())).a("CreationTimestamp", Long.valueOf(paramGameRequest.i())).a("ExpirationTimestamp", Long.valueOf(paramGameRequest.j())).toString();
  }
  
  private static int[] c(GameRequest paramGameRequest)
  {
    List localList = paramGameRequest.l();
    int n = localList.size();
    int[] arrayOfInt = new int[n];
    int m = 0;
    while (m < n)
    {
      arrayOfInt[m] = paramGameRequest.a(((Player)localList.get(m)).b());
      m += 1;
    }
    return arrayOfInt;
  }
  
  public final int a(String paramString)
  {
    return this.j.getInt(paramString, 0);
  }
  
  public final int b()
  {
    return this.a;
  }
  
  public final Bundle c()
  {
    return this.j;
  }
  
  public final String d()
  {
    return this.e;
  }
  
  public final int describeContents()
  {
    return 0;
  }
  
  public final Game e()
  {
    return this.b;
  }
  
  public final boolean equals(Object paramObject)
  {
    return a(this, paramObject);
  }
  
  public final Player f()
  {
    return this.c;
  }
  
  public final byte[] g()
  {
    return this.d;
  }
  
  public final int h()
  {
    return this.g;
  }
  
  public final int hashCode()
  {
    return a(this);
  }
  
  public final long i()
  {
    return this.h;
  }
  
  public final long j()
  {
    return this.i;
  }
  
  public final int k()
  {
    return this.k;
  }
  
  public final List<Player> l()
  {
    return new ArrayList(this.f);
  }
  
  public final String toString()
  {
    return b(this);
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    a.a(this, paramParcel, paramInt);
  }
}
