package com.google.android.gms.games.internal.game;

import android.os.Parcel;
import com.google.android.gms.common.internal.ae;
import com.google.android.gms.common.internal.af;
import com.google.android.gms.games.Game;
import com.google.android.gms.games.GameEntity;
import com.google.android.gms.games.internal.GamesDowngradeableSafeParcel;
import com.google.android.gms.games.snapshot.SnapshotMetadata;
import com.google.android.gms.games.snapshot.SnapshotMetadataEntity;
import java.util.ArrayList;
import java.util.Arrays;

public final class ExtendedGameEntity
  extends GamesDowngradeableSafeParcel
  implements ExtendedGame
{
  public static final b a = new a();
  private final int b;
  private final GameEntity c;
  private final int d;
  private final boolean e;
  private final int f;
  private final long g;
  private final long h;
  private final String i;
  private final long j;
  private final String k;
  private final ArrayList<GameBadgeEntity> l;
  private final SnapshotMetadataEntity m;
  
  ExtendedGameEntity(int paramInt1, GameEntity paramGameEntity, int paramInt2, boolean paramBoolean, int paramInt3, long paramLong1, long paramLong2, String paramString1, long paramLong3, String paramString2, ArrayList<GameBadgeEntity> paramArrayList, SnapshotMetadataEntity paramSnapshotMetadataEntity)
  {
    this.b = paramInt1;
    this.c = paramGameEntity;
    this.d = paramInt2;
    this.e = paramBoolean;
    this.f = paramInt3;
    this.g = paramLong1;
    this.h = paramLong2;
    this.i = paramString1;
    this.j = paramLong3;
    this.k = paramString2;
    this.l = paramArrayList;
    this.m = paramSnapshotMetadataEntity;
  }
  
  public ExtendedGameEntity(ExtendedGame paramExtendedGame)
  {
    this.b = 2;
    Object localObject1 = paramExtendedGame.g_();
    if (localObject1 == null)
    {
      localObject1 = null;
      this.c = ((GameEntity)localObject1);
      this.d = paramExtendedGame.d();
      this.e = paramExtendedGame.e();
      this.f = paramExtendedGame.f();
      this.g = paramExtendedGame.g();
      this.h = paramExtendedGame.h();
      this.i = paramExtendedGame.i();
      this.j = paramExtendedGame.j();
      this.k = paramExtendedGame.k();
      localObject1 = paramExtendedGame.l();
      if (localObject1 != null) {
        break label213;
      }
    }
    label213:
    for (localObject1 = localObject2;; localObject1 = new SnapshotMetadataEntity((SnapshotMetadata)localObject1))
    {
      this.m = ((SnapshotMetadataEntity)localObject1);
      paramExtendedGame = paramExtendedGame.f_();
      int i1 = paramExtendedGame.size();
      this.l = new ArrayList(i1);
      int n = 0;
      while (n < i1)
      {
        this.l.add((GameBadgeEntity)((GameBadge)paramExtendedGame.get(n)).a());
        n += 1;
      }
      localObject1 = new GameEntity((Game)localObject1);
      break;
    }
  }
  
  static int a(ExtendedGame paramExtendedGame)
  {
    return Arrays.hashCode(new Object[] { paramExtendedGame.g_(), Integer.valueOf(paramExtendedGame.d()), Boolean.valueOf(paramExtendedGame.e()), Integer.valueOf(paramExtendedGame.f()), Long.valueOf(paramExtendedGame.g()), Long.valueOf(paramExtendedGame.h()), paramExtendedGame.i(), Long.valueOf(paramExtendedGame.j()), paramExtendedGame.k() });
  }
  
  static boolean a(ExtendedGame paramExtendedGame, Object paramObject)
  {
    if (!(paramObject instanceof ExtendedGame)) {}
    do
    {
      return false;
      if (paramExtendedGame == paramObject) {
        return true;
      }
      paramObject = (ExtendedGame)paramObject;
    } while ((!ae.a(paramObject.g_(), paramExtendedGame.g_())) || (!ae.a(Integer.valueOf(paramObject.d()), Integer.valueOf(paramExtendedGame.d()))) || (!ae.a(Boolean.valueOf(paramObject.e()), Boolean.valueOf(paramExtendedGame.e()))) || (!ae.a(Integer.valueOf(paramObject.f()), Integer.valueOf(paramExtendedGame.f()))) || (!ae.a(Long.valueOf(paramObject.g()), Long.valueOf(paramExtendedGame.g()))) || (!ae.a(Long.valueOf(paramObject.h()), Long.valueOf(paramExtendedGame.h()))) || (!ae.a(paramObject.i(), paramExtendedGame.i())) || (!ae.a(Long.valueOf(paramObject.j()), Long.valueOf(paramExtendedGame.j()))) || (!ae.a(paramObject.k(), paramExtendedGame.k())));
    return true;
  }
  
  static String b(ExtendedGame paramExtendedGame)
  {
    return ae.a(paramExtendedGame).a("Game", paramExtendedGame.g_()).a("Availability", Integer.valueOf(paramExtendedGame.d())).a("Owned", Boolean.valueOf(paramExtendedGame.e())).a("AchievementUnlockedCount", Integer.valueOf(paramExtendedGame.f())).a("LastPlayedServerTimestamp", Long.valueOf(paramExtendedGame.g())).a("PriceMicros", Long.valueOf(paramExtendedGame.h())).a("FormattedPrice", paramExtendedGame.i()).a("FullPriceMicros", Long.valueOf(paramExtendedGame.j())).a("FormattedFullPrice", paramExtendedGame.k()).a("Snapshot", paramExtendedGame.l()).toString();
  }
  
  public final int d()
  {
    return this.d;
  }
  
  public final int describeContents()
  {
    return 0;
  }
  
  public final boolean e()
  {
    return this.e;
  }
  
  public final boolean equals(Object paramObject)
  {
    return a(this, paramObject);
  }
  
  public final int f()
  {
    return this.f;
  }
  
  public final ArrayList<GameBadge> f_()
  {
    return new ArrayList(this.l);
  }
  
  public final long g()
  {
    return this.g;
  }
  
  public final long h()
  {
    return this.h;
  }
  
  public final int hashCode()
  {
    return a(this);
  }
  
  public final String i()
  {
    return this.i;
  }
  
  public final long j()
  {
    return this.j;
  }
  
  public final String k()
  {
    return this.k;
  }
  
  public final SnapshotMetadata l()
  {
    return this.m;
  }
  
  public final int m()
  {
    return this.b;
  }
  
  public final GameEntity n()
  {
    return this.c;
  }
  
  public final String toString()
  {
    return b(this);
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    int i1 = 0;
    if (!c())
    {
      b.a(this, paramParcel, paramInt);
      return;
    }
    this.c.writeToParcel(paramParcel, paramInt);
    paramParcel.writeInt(this.d);
    if (this.e) {}
    for (int n = 1;; n = 0)
    {
      paramParcel.writeInt(n);
      paramParcel.writeInt(this.f);
      paramParcel.writeLong(this.g);
      paramParcel.writeLong(this.h);
      paramParcel.writeString(this.i);
      paramParcel.writeLong(this.j);
      paramParcel.writeString(this.k);
      int i2 = this.l.size();
      paramParcel.writeInt(i2);
      n = i1;
      while (n < i2)
      {
        ((GameBadgeEntity)this.l.get(n)).writeToParcel(paramParcel, paramInt);
        n += 1;
      }
      break;
    }
  }
}
