package com.google.android.gms.games;

import android.os.Parcel;
import android.os.Parcelable.Creator;
import com.google.android.gms.common.internal.ao;
import com.google.android.gms.common.internal.ap;
import com.google.android.gms.common.internal.aq;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import java.util.Arrays;

public final class PlayerLevel
  implements SafeParcelable
{
  public static final Parcelable.Creator<PlayerLevel> CREATOR = new e();
  private final int a;
  private final int b;
  private final long c;
  private final long d;
  
  PlayerLevel(int paramInt1, int paramInt2, long paramLong1, long paramLong2)
  {
    if (paramLong1 >= 0L)
    {
      bool1 = true;
      aq.a(bool1, "Min XP must be positive!");
      if (paramLong2 <= paramLong1) {
        break label69;
      }
    }
    label69:
    for (boolean bool1 = bool2;; bool1 = false)
    {
      aq.a(bool1, "Max XP must be more than min XP!");
      this.a = paramInt1;
      this.b = paramInt2;
      this.c = paramLong1;
      this.d = paramLong2;
      return;
      bool1 = false;
      break;
    }
  }
  
  public PlayerLevel(int paramInt, long paramLong1, long paramLong2)
  {
    this(1, paramInt, paramLong1, paramLong2);
  }
  
  public final int a()
  {
    return this.a;
  }
  
  public final int b()
  {
    return this.b;
  }
  
  public final long c()
  {
    return this.c;
  }
  
  public final long d()
  {
    return this.d;
  }
  
  public final int describeContents()
  {
    return 0;
  }
  
  public final boolean equals(Object paramObject)
  {
    if (!(paramObject instanceof PlayerLevel)) {}
    do
    {
      return false;
      if (this == paramObject) {
        return true;
      }
      paramObject = (PlayerLevel)paramObject;
    } while ((!ao.a(Integer.valueOf(paramObject.b), Integer.valueOf(this.b))) || (!ao.a(Long.valueOf(paramObject.c), Long.valueOf(this.c))) || (!ao.a(Long.valueOf(paramObject.d), Long.valueOf(this.d))));
    return true;
  }
  
  public final int hashCode()
  {
    return Arrays.hashCode(new Object[] { Integer.valueOf(this.b), Long.valueOf(this.c), Long.valueOf(this.d) });
  }
  
  public final String toString()
  {
    return ao.a(this).a("LevelNumber", Integer.valueOf(this.b)).a("MinXp", Long.valueOf(this.c)).a("MaxXp", Long.valueOf(this.d)).toString();
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    e.a(this, paramParcel);
  }
}
