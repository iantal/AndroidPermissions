package com.google.android.gms.ads.internal.request;

import android.content.Context;
import android.content.res.Resources;
import android.os.Handler;
import android.text.TextUtils;
import android.util.DisplayMetrics;
import com.google.android.gms.ads.internal.client.AdSizeParcel;
import com.google.android.gms.ads.internal.util.client.b;
import com.google.android.gms.ads.internal.w;
import com.google.android.gms.b.ah;
import com.google.android.gms.b.ao;
import com.google.android.gms.b.cg;
import com.google.android.gms.b.he;
import com.google.android.gms.b.mm;
import com.google.android.gms.b.mp;
import com.google.android.gms.b.mu;
import com.google.android.gms.b.nj;
import com.google.android.gms.b.rd;
import org.json.JSONException;
import org.json.JSONObject;

public final class e
  extends mu
  implements k
{
  mu a;
  Object b = new Object();
  AdResponseParcel c;
  he d;
  private final d e;
  private final a f;
  private final Object g = new Object();
  private final Context h;
  private final ao i;
  
  public e(Context paramContext, a paramA, ao paramAo, d paramD)
  {
    this.e = paramD;
    this.h = paramContext;
    this.f = paramA;
    this.i = paramAo;
  }
  
  private AdSizeParcel a(AdRequestInfoParcel paramAdRequestInfoParcel)
  {
    if (this.c.n == null) {
      throw new h("The ad response must specify one of the supported ad sizes.", 0);
    }
    Object localObject = this.c.n.split("x");
    if (localObject.length != 2) {
      throw new h("Invalid ad size format from the ad response: " + this.c.n, 0);
    }
    for (;;)
    {
      int j;
      AdSizeParcel localAdSizeParcel;
      try
      {
        int n = Integer.parseInt(localObject[0]);
        int i1 = Integer.parseInt(localObject[1]);
        localObject = paramAdRequestInfoParcel.e.i;
        int i2 = localObject.length;
        j = 0;
        if (j >= i2) {
          break;
        }
        localAdSizeParcel = localObject[j];
        float f1 = this.h.getResources().getDisplayMetrics().density;
        if (localAdSizeParcel.g == -1)
        {
          k = (int)(localAdSizeParcel.h / f1);
          if (localAdSizeParcel.d != -2) {
            break label247;
          }
          m = (int)(localAdSizeParcel.e / f1);
          if ((n != k) || (i1 != m)) {
            break label257;
          }
          return new AdSizeParcel(localAdSizeParcel, paramAdRequestInfoParcel.e.i);
        }
      }
      catch (NumberFormatException paramAdRequestInfoParcel)
      {
        throw new h("Invalid ad size number from the ad response: " + this.c.n, 0);
      }
      int k = localAdSizeParcel.g;
      continue;
      label247:
      int m = localAdSizeParcel.d;
      continue;
      label257:
      j += 1;
    }
    throw new h("The ad size from the ad response was not one of the requested sizes: " + this.c.n, 0);
  }
  
  private boolean a(long paramLong)
  {
    paramLong = 60000L - (w.i().b() - paramLong);
    if (paramLong <= 0L) {
      return false;
    }
    try
    {
      this.b.wait(paramLong);
      return true;
    }
    catch (InterruptedException localInterruptedException)
    {
      throw new h("Ad request cancelled.", -1);
    }
  }
  
  public final void a()
  {
    int j = -2;
    AdRequestInfoParcel localAdRequestInfoParcel;
    long l3;
    label229:
    label248:
    boolean bool;
    synchronized (this.b)
    {
      b.a("AdLoaderBackgroundTask started.");
      Object localObject1 = this.i.a().a(this.h);
      Object localObject7 = com.google.android.gms.ads.internal.o.a(this.h).d();
      localAdRequestInfoParcel = new AdRequestInfoParcel(this.f, (String)localObject1, (String)localObject7);
      l2 = -1L;
      l1 = l2;
      for (;;)
      {
        try
        {
          l3 = w.i().b();
          l1 = l2;
          localObject1 = this.h;
          l1 = l2;
          if (!new j((Context)localObject1).a(localAdRequestInfoParcel)) {
            break label349;
          }
          l1 = l2;
          b.a("Fetching ad response from local ad request service.");
          l1 = l2;
          localObject1 = new n((Context)localObject1, localAdRequestInfoParcel, this);
          l1 = l2;
          ((n)localObject1).h();
          l1 = l2;
          localObject7 = this.g;
          l1 = l2;
          try
          {
            this.a = ((mu)localObject1);
            if (this.a != null) {
              break label419;
            }
            throw new h("Could not start the ad request service.", 0);
          }
          finally
          {
            l1 = l2;
            l1 = l2;
          }
          j = localH1.a();
        }
        catch (h localH1)
        {
          localObject3 = null;
        }
        if ((j != 3) && (j != -1)) {
          break label806;
        }
        b.c(localH1.getMessage());
        if (this.c != null) {
          break label817;
        }
        this.c = new AdResponseParcel(j);
        nj.a.post(new f(this));
        bool = TextUtils.isEmpty(this.c.s);
        if (bool) {
          break label849;
        }
        try
        {
          localJSONObject = new JSONObject(this.c.s);
          label296:
          localObject3 = new mm(localAdRequestInfoParcel, this.c, this.d, (AdSizeParcel)localObject3, j, l1, this.c.o, localJSONObject);
          nj.a.post(new g(this, (mm)localObject3));
          return;
        }
        catch (Exception localException)
        {
          JSONObject localJSONObject;
          label349:
          Object localObject5;
          b.b("Error parsing the JSON for Active View.", localException);
        }
        l1 = l2;
        b.a("Fetching ad response from remote ad request service.");
        l1 = l2;
        com.google.android.gms.ads.internal.client.l.a();
        l1 = l2;
        if (com.google.android.gms.ads.internal.util.client.a.b((Context)localObject3)) {
          break;
        }
        l1 = l2;
        b.e("Failed to connect to remote ad request service.");
        localObject3 = null;
      }
      l1 = l2;
      Object localObject3 = new o((Context)localObject3, localAdRequestInfoParcel, this);
    }
    label419:
    do
    {
      l1 = l2;
      if (!a(l3))
      {
        l1 = l2;
        throw new h("Timed out waiting for ad response.", 2);
      }
      l1 = l2;
    } while (this.c == null);
    long l1 = l2;
    localObject5 = this.g;
    l1 = l2;
    try
    {
      this.a = null;
      l1 = l2;
      if (this.c.f != -2)
      {
        l1 = l2;
        if (this.c.f != -3)
        {
          l1 = l2;
          throw new h("There was a problem getting an ad response. ErrorCode: " + this.c.f, this.c.f);
        }
      }
    }
    finally
    {
      l1 = l2;
      l1 = l2;
    }
    l1 = l2;
    long l2 = w.i().b();
    l1 = l2;
    if (this.c.f != -3)
    {
      l1 = l2;
      if (TextUtils.isEmpty(this.c.d))
      {
        l1 = l2;
        throw new h("No fill from ad server.", 3);
      }
      l1 = l2;
      w.h().a(this.h, this.c.v);
      l1 = l2;
      bool = this.c.i;
      if (bool) {
        l1 = l2;
      }
    }
    for (;;)
    {
      try
      {
        this.d = new he(this.c.d);
        l1 = l2;
        if (localAdRequestInfoParcel.e.i == null) {
          break label863;
        }
        l1 = l2;
        localObject5 = a(localAdRequestInfoParcel);
      }
      catch (JSONException localJSONException)
      {
        try
        {
          bool = this.c.w;
          w.h().a(bool);
          localCg = w.h().a(this.h);
          if ((localCg != null) && (!localCg.isAlive()))
          {
            b.a("start fetching content...");
            localCg.a();
          }
          l1 = l2;
        }
        catch (h localH2)
        {
          cg localCg;
          Object localObject9;
          l1 = l2;
        }
        localJSONException = localJSONException;
        l1 = l2;
        throw new h("Could not parse mediation config: " + this.c.d, 0);
      }
      label806:
      b.e(localCg.getMessage());
      break label229;
      label817:
      this.c = new AdResponseParcel(j, this.c.l);
      break label248;
      label849:
      localObject9 = null;
      break label296;
      break;
      label863:
      Object localObject6 = null;
    }
  }
  
  public final void a(AdResponseParcel paramAdResponseParcel)
  {
    synchronized (this.b)
    {
      b.a("Received ad response.");
      this.c = paramAdResponseParcel;
      this.b.notify();
      return;
    }
  }
  
  public final void b()
  {
    synchronized (this.g)
    {
      if (this.a != null) {
        this.a.j();
      }
      return;
    }
  }
}
