package com.google.android.gms.ads.internal.request;

import android.os.RemoteException;
import com.google.android.gms.ads.internal.util.client.b;
import com.google.android.gms.ads.internal.w;
import com.google.android.gms.b.mp;
import com.google.android.gms.b.mu;
import com.google.android.gms.b.rd;

public abstract class m
  extends mu
  implements k
{
  private final AdRequestInfoParcel a;
  private final k b;
  private final Object c = new Object();
  private AdResponseParcel d;
  
  public m(AdRequestInfoParcel paramAdRequestInfoParcel, k paramK)
  {
    this.a = paramAdRequestInfoParcel;
    this.b = paramK;
  }
  
  private boolean a(long paramLong)
  {
    paramLong = 60000L - (w.i().b() - paramLong);
    if (paramLong <= 0L) {
      return false;
    }
    try
    {
      this.c.wait(paramLong);
      return true;
    }
    catch (InterruptedException localInterruptedException) {}
    return false;
  }
  
  private boolean a(t paramT, AdRequestInfoParcel paramAdRequestInfoParcel)
  {
    try
    {
      paramT.a(paramAdRequestInfoParcel, new r(this));
      return true;
    }
    catch (RemoteException paramT)
    {
      b.c("Could not fetch ad response from ad request service.", paramT);
      w.h().a(paramT, true);
      this.b.a(new AdResponseParcel(0));
      return false;
    }
    catch (NullPointerException paramT)
    {
      for (;;)
      {
        b.c("Could not fetch ad response from ad request service due to an Exception.", paramT);
        w.h().a(paramT, true);
      }
    }
    catch (SecurityException paramT)
    {
      for (;;)
      {
        b.c("Could not fetch ad response from ad request service due to an Exception.", paramT);
        w.h().a(paramT, true);
      }
    }
    catch (Throwable paramT)
    {
      for (;;)
      {
        b.c("Could not fetch ad response from ad request service due to an Exception.", paramT);
        w.h().a(paramT, true);
      }
    }
  }
  
  public final void a()
  {
    try
    {
      ??? = d();
      if (??? == null)
      {
        ??? = new AdResponseParcel(0);
        this.b.a((AdResponseParcel)???);
      }
      while (!a((t)???, this.a)) {
        return;
      }
      long l = w.i().b();
      do
      {
        synchronized (this.c)
        {
          if (this.d != null) {
            this.b.a(this.d);
          }
        }
      } while (a(l));
    }
    finally
    {
      c();
    }
    if (this.d != null) {
      this.b.a(this.d);
    }
    for (;;)
    {
      break;
      this.b.a(new AdResponseParcel(0));
    }
  }
  
  public final void a(AdResponseParcel paramAdResponseParcel)
  {
    synchronized (this.c)
    {
      this.d = paramAdResponseParcel;
      this.c.notify();
      return;
    }
  }
  
  public final void b()
  {
    c();
  }
  
  public abstract void c();
  
  public abstract t d();
}
