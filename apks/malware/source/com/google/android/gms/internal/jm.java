package com.google.android.gms.internal;

import android.os.Parcel;
import com.google.android.gms.common.internal.ag;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;

public class jm
  implements SafeParcelable
{
  public static final pb a = new pb();
  private final int b;
  private final HashMap<String, HashMap<String, ji.a<?, ?>>> c;
  private final ArrayList<jm.a> d;
  private final String e;
  
  jm(int paramInt, ArrayList<jm.a> paramArrayList, String paramString)
  {
    this.b = paramInt;
    this.d = null;
    this.c = a(paramArrayList);
    this.e = ((String)ag.a(paramString));
    d();
  }
  
  private static HashMap<String, HashMap<String, ji.a<?, ?>>> a(ArrayList<jm.a> paramArrayList)
  {
    HashMap localHashMap = new HashMap();
    int j = paramArrayList.size();
    int i = 0;
    while (i < j)
    {
      jm.a localA = (jm.a)paramArrayList.get(i);
      localHashMap.put(localA.c, localA.a());
      i += 1;
    }
    return localHashMap;
  }
  
  private void d()
  {
    Iterator localIterator1 = this.c.keySet().iterator();
    while (localIterator1.hasNext())
    {
      Object localObject = (String)localIterator1.next();
      localObject = (HashMap)this.c.get(localObject);
      Iterator localIterator2 = ((HashMap)localObject).keySet().iterator();
      while (localIterator2.hasNext()) {
        ((ji.a)((HashMap)localObject).get((String)localIterator2.next())).a(this);
      }
    }
  }
  
  final int a()
  {
    return this.b;
  }
  
  public final HashMap<String, ji.a<?, ?>> a(String paramString)
  {
    return (HashMap)this.c.get(paramString);
  }
  
  final ArrayList<jm.a> b()
  {
    ArrayList localArrayList = new ArrayList();
    Iterator localIterator = this.c.keySet().iterator();
    while (localIterator.hasNext())
    {
      String str = (String)localIterator.next();
      localArrayList.add(new jm.a(str, (HashMap)this.c.get(str)));
    }
    return localArrayList;
  }
  
  public final String c()
  {
    return this.e;
  }
  
  public int describeContents()
  {
    pb localPb = a;
    return 0;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    Iterator localIterator1 = this.c.keySet().iterator();
    while (localIterator1.hasNext())
    {
      Object localObject = (String)localIterator1.next();
      localStringBuilder.append((String)localObject).append(":\n");
      localObject = (HashMap)this.c.get(localObject);
      Iterator localIterator2 = ((HashMap)localObject).keySet().iterator();
      while (localIterator2.hasNext())
      {
        String str = (String)localIterator2.next();
        localStringBuilder.append("  ").append(str).append(": ");
        localStringBuilder.append(((HashMap)localObject).get(str));
      }
    }
    return localStringBuilder.toString();
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    pb localPb = a;
    pb.a(this, paramParcel);
  }
}
