package com.google.android.gms.internal;

import android.content.Context;
import android.content.Intent;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.net.LocalSocket;
import android.net.LocalSocketAddress;
import android.os.Binder;
import android.os.Bundle;
import android.os.IBinder;
import android.os.Parcelable;
import android.os.RemoteException;
import android.view.View;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks;
import com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener;
import com.google.android.gms.games.GameBuffer;
import com.google.android.gms.games.OnGamesLoadedListener;
import com.google.android.gms.games.OnPlayersLoadedListener;
import com.google.android.gms.games.OnSignOutCompleteListener;
import com.google.android.gms.games.PlayerBuffer;
import com.google.android.gms.games.PlayerEntity;
import com.google.android.gms.games.RealTimeSocket;
import com.google.android.gms.games.achievement.AchievementBuffer;
import com.google.android.gms.games.achievement.OnAchievementUpdatedListener;
import com.google.android.gms.games.achievement.OnAchievementsLoadedListener;
import com.google.android.gms.games.leaderboard.LeaderboardBuffer;
import com.google.android.gms.games.leaderboard.LeaderboardScoreBuffer;
import com.google.android.gms.games.leaderboard.OnLeaderboardMetadataLoadedListener;
import com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener;
import com.google.android.gms.games.leaderboard.OnScoreSubmittedListener;
import com.google.android.gms.games.leaderboard.SubmitScoreResult;
import com.google.android.gms.games.multiplayer.Invitation;
import com.google.android.gms.games.multiplayer.InvitationBuffer;
import com.google.android.gms.games.multiplayer.OnInvitationReceivedListener;
import com.google.android.gms.games.multiplayer.OnInvitationsLoadedListener;
import com.google.android.gms.games.multiplayer.ParticipantUtils;
import com.google.android.gms.games.multiplayer.realtime.RealTimeMessage;
import com.google.android.gms.games.multiplayer.realtime.RealTimeMessageReceivedListener;
import com.google.android.gms.games.multiplayer.realtime.RealTimeReliableMessageSentListener;
import com.google.android.gms.games.multiplayer.realtime.Room;
import com.google.android.gms.games.multiplayer.realtime.RoomConfig;
import com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener;
import com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Locale;
import java.util.Map;

public final class bj
  extends p<bm>
{
  private PlayerEntity cA;
  private final bn cB;
  private boolean cC = false;
  private final Binder cD;
  private final long cE;
  private final boolean cF;
  private final String cy;
  private final Map<String, bo> cz;
  private final String g;
  
  public bj(Context paramContext, String paramString1, String paramString2, GooglePlayServicesClient.ConnectionCallbacks paramConnectionCallbacks, GooglePlayServicesClient.OnConnectionFailedListener paramOnConnectionFailedListener, String[] paramArrayOfString, int paramInt, View paramView, boolean paramBoolean)
  {
    super(paramContext, paramConnectionCallbacks, paramOnConnectionFailedListener, paramArrayOfString);
    this.cy = paramString1;
    this.g = ((String)x.d(paramString2));
    this.cD = new Binder();
    this.cz = new HashMap();
    this.cB = bn.a(this, paramInt);
    setViewForPopups(paramView);
    this.cE = hashCode();
    this.cF = paramBoolean;
  }
  
  private void ah()
  {
    this.cA = null;
  }
  
  private void ai()
  {
    Iterator localIterator = this.cz.values().iterator();
    while (localIterator.hasNext())
    {
      bo localBo = (bo)localIterator.next();
      try
      {
        localBo.close();
      }
      catch (IOException localIOException)
      {
        bk.a("GamesClient", "IOException:", localIOException);
      }
    }
    this.cz.clear();
  }
  
  private bo p(String paramString)
  {
    try
    {
      Object localObject = ((bm)o()).r(paramString);
      if (localObject == null) {
        return null;
      }
      bk.d("GamesClient", "Creating a socket to bind to:" + (String)localObject);
      LocalSocket localLocalSocket = new LocalSocket();
      return null;
    }
    catch (RemoteException paramString)
    {
      try
      {
        localLocalSocket.connect(new LocalSocketAddress((String)localObject));
        localObject = new bo(localLocalSocket, paramString);
        this.cz.put(paramString, localObject);
        return localObject;
      }
      catch (IOException paramString)
      {
        bk.c("GamesClient", "connect() call failed on socket: " + paramString.getMessage());
      }
      paramString = paramString;
      bk.c("GamesClient", "Unable to create socket. Service died.");
      return null;
    }
  }
  
  private Room x(k paramK)
  {
    by localBy = new by(paramK);
    paramK = null;
    try
    {
      if (localBy.getCount() > 0) {
        paramK = (Room)((Room)localBy.get(0)).freeze();
      }
      return paramK;
    }
    finally
    {
      localBy.close();
    }
  }
  
  public int a(byte[] paramArrayOfByte, String paramString, String[] paramArrayOfString)
  {
    x.b(paramArrayOfString, "Participant IDs must not be null");
    try
    {
      int i = ((bm)o()).b(paramArrayOfByte, paramString, paramArrayOfString);
      return i;
    }
    catch (RemoteException paramArrayOfByte)
    {
      bk.b("GamesClient", "service died");
    }
    return -1;
  }
  
  public void a(IBinder paramIBinder, Bundle paramBundle)
  {
    if (isConnected()) {}
    try
    {
      ((bm)o()).a(paramIBinder, paramBundle);
      return;
    }
    catch (RemoteException paramIBinder)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  protected void a(ConnectionResult paramConnectionResult)
  {
    super.a(paramConnectionResult);
    this.cC = false;
  }
  
  public void a(OnPlayersLoadedListener paramOnPlayersLoadedListener, int paramInt, boolean paramBoolean1, boolean paramBoolean2)
  {
    try
    {
      ((bm)o()).a(new ad(paramOnPlayersLoadedListener), paramInt, paramBoolean1, paramBoolean2);
      return;
    }
    catch (RemoteException paramOnPlayersLoadedListener)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void a(OnAchievementUpdatedListener paramOnAchievementUpdatedListener, String paramString)
  {
    if (paramOnAchievementUpdatedListener == null) {}
    for (paramOnAchievementUpdatedListener = null;; paramOnAchievementUpdatedListener = new d(paramOnAchievementUpdatedListener)) {
      try
      {
        ((bm)o()).a(paramOnAchievementUpdatedListener, paramString, this.cB.ao(), this.cB.an());
        return;
      }
      catch (RemoteException paramOnAchievementUpdatedListener)
      {
        bk.b("GamesClient", "service died");
      }
    }
  }
  
  public void a(OnAchievementUpdatedListener paramOnAchievementUpdatedListener, String paramString, int paramInt)
  {
    if (paramOnAchievementUpdatedListener == null) {}
    for (paramOnAchievementUpdatedListener = null;; paramOnAchievementUpdatedListener = new d(paramOnAchievementUpdatedListener)) {
      try
      {
        ((bm)o()).a(paramOnAchievementUpdatedListener, paramString, paramInt, this.cB.ao(), this.cB.an());
        return;
      }
      catch (RemoteException paramOnAchievementUpdatedListener)
      {
        bk.b("GamesClient", "service died");
      }
    }
  }
  
  public void a(OnScoreSubmittedListener paramOnScoreSubmittedListener, String paramString, long paramLong)
  {
    if (paramOnScoreSubmittedListener == null) {}
    for (paramOnScoreSubmittedListener = null;; paramOnScoreSubmittedListener = new ao(paramOnScoreSubmittedListener)) {
      try
      {
        ((bm)o()).a(paramOnScoreSubmittedListener, paramString, paramLong);
        return;
      }
      catch (RemoteException paramOnScoreSubmittedListener)
      {
        bk.b("GamesClient", "service died");
      }
    }
  }
  
  protected void a(u paramU, p<bm>.d paramP)
    throws RemoteException
  {
    String str = getContext().getResources().getConfiguration().locale.toString();
    paramP = new j(paramP);
    Bundle localBundle = new Bundle();
    localBundle.putBoolean("com.google.android.gms.games.key.isHeadless", this.cF);
    paramU.a(paramP, 3136100, getContext().getPackageName(), this.g, j(), this.cy, this.cB.ao(), str, localBundle);
  }
  
  protected void a(String... paramVarArgs)
  {
    int i = 0;
    int j = 0;
    boolean bool1 = false;
    if (i < paramVarArgs.length)
    {
      String str = paramVarArgs[i];
      boolean bool2;
      if (str.equals("https://www.googleapis.com/auth/games")) {
        bool2 = true;
      }
      for (;;)
      {
        i += 1;
        bool1 = bool2;
        break;
        bool2 = bool1;
        if (str.equals("https://www.googleapis.com/auth/games.firstparty"))
        {
          j = 1;
          bool2 = bool1;
        }
      }
    }
    if (j != 0)
    {
      if (!bool1) {}
      for (bool1 = true;; bool1 = false)
      {
        x.a(bool1, String.format("Cannot have both %s and %s!", new Object[] { "https://www.googleapis.com/auth/games", "https://www.googleapis.com/auth/games.firstparty" }));
        return;
      }
    }
    x.a(bool1, String.format("GamesClient requires %s to function.", new Object[] { "https://www.googleapis.com/auth/games" }));
  }
  
  public void aj()
  {
    if (isConnected()) {}
    try
    {
      ((bm)o()).aj();
      return;
    }
    catch (RemoteException localRemoteException)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  protected String b()
  {
    return "com.google.android.gms.games.service.START";
  }
  
  public void b(OnAchievementUpdatedListener paramOnAchievementUpdatedListener, String paramString)
  {
    if (paramOnAchievementUpdatedListener == null) {}
    for (paramOnAchievementUpdatedListener = null;; paramOnAchievementUpdatedListener = new d(paramOnAchievementUpdatedListener)) {
      try
      {
        ((bm)o()).b(paramOnAchievementUpdatedListener, paramString, this.cB.ao(), this.cB.an());
        return;
      }
      catch (RemoteException paramOnAchievementUpdatedListener)
      {
        bk.b("GamesClient", "service died");
      }
    }
  }
  
  protected String c()
  {
    return "com.google.android.gms.games.internal.IGamesService";
  }
  
  public void clearNotifications(int paramInt)
  {
    try
    {
      ((bm)o()).clearNotifications(paramInt);
      return;
    }
    catch (RemoteException localRemoteException)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void connect()
  {
    ah();
    super.connect();
  }
  
  public void createRoom(RoomConfig paramRoomConfig)
  {
    try
    {
      ai localAi = new ai(paramRoomConfig.getRoomUpdateListener(), paramRoomConfig.getRoomStatusUpdateListener(), paramRoomConfig.getMessageReceivedListener());
      ((bm)o()).a(localAi, this.cD, paramRoomConfig.getVariant(), paramRoomConfig.getInvitedPlayerIds(), paramRoomConfig.getAutoMatchCriteria(), paramRoomConfig.isSocketEnabled(), this.cE);
      return;
    }
    catch (RemoteException paramRoomConfig)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void disconnect()
  {
    this.cC = false;
    if (isConnected()) {}
    try
    {
      bm localBm = (bm)o();
      localBm.aj();
      localBm.b(this.cE);
      localBm.a(this.cE);
      ai();
      super.disconnect();
      return;
    }
    catch (RemoteException localRemoteException)
    {
      for (;;)
      {
        bk.b("GamesClient", "Failed to notify client disconnect.");
      }
    }
  }
  
  public Intent getAchievementsIntent()
  {
    n();
    Intent localIntent = new Intent("com.google.android.gms.games.VIEW_ACHIEVEMENTS");
    localIntent.addFlags(67108864);
    return localIntent;
  }
  
  public Intent getAllLeaderboardsIntent()
  {
    n();
    Intent localIntent = new Intent("com.google.android.gms.games.VIEW_LEADERBOARDS");
    localIntent.putExtra("com.google.android.gms.games.GAME_PACKAGE_NAME", this.cy);
    localIntent.addFlags(67108864);
    return localIntent;
  }
  
  public String getAppId()
  {
    try
    {
      String str = ((bm)o()).getAppId();
      return str;
    }
    catch (RemoteException localRemoteException)
    {
      bk.b("GamesClient", "service died");
    }
    return null;
  }
  
  public String getCurrentAccountName()
  {
    try
    {
      String str = ((bm)o()).getCurrentAccountName();
      return str;
    }
    catch (RemoteException localRemoteException)
    {
      bk.b("GamesClient", "service died");
    }
    return null;
  }
  
  /* Error */
  public com.google.android.gms.games.Player getCurrentPlayer()
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 514	com/google/android/gms/internal/bj:n	()V
    //   4: aload_0
    //   5: monitorenter
    //   6: aload_0
    //   7: getfield 206	com/google/android/gms/internal/bj:cA	Lcom/google/android/gms/games/PlayerEntity;
    //   10: astore_1
    //   11: aload_1
    //   12: ifnonnull +51 -> 63
    //   15: new 543	com/google/android/gms/games/PlayerBuffer
    //   18: dup
    //   19: aload_0
    //   20: invokevirtual 253	com/google/android/gms/internal/bj:o	()Landroid/os/IInterface;
    //   23: checkcast 255	com/google/android/gms/internal/bm
    //   26: invokeinterface 546 1 0
    //   31: invokespecial 547	com/google/android/gms/games/PlayerBuffer:<init>	(Lcom/google/android/gms/internal/k;)V
    //   34: astore_1
    //   35: aload_1
    //   36: invokevirtual 548	com/google/android/gms/games/PlayerBuffer:getCount	()I
    //   39: ifle +20 -> 59
    //   42: aload_0
    //   43: aload_1
    //   44: iconst_0
    //   45: invokevirtual 551	com/google/android/gms/games/PlayerBuffer:get	(I)Lcom/google/android/gms/games/Player;
    //   48: invokeinterface 554 1 0
    //   53: checkcast 556	com/google/android/gms/games/PlayerEntity
    //   56: putfield 206	com/google/android/gms/internal/bj:cA	Lcom/google/android/gms/games/PlayerEntity;
    //   59: aload_1
    //   60: invokevirtual 557	com/google/android/gms/games/PlayerBuffer:close	()V
    //   63: aload_0
    //   64: monitorexit
    //   65: aload_0
    //   66: getfield 206	com/google/android/gms/internal/bj:cA	Lcom/google/android/gms/games/PlayerEntity;
    //   69: areturn
    //   70: astore_2
    //   71: aload_1
    //   72: invokevirtual 557	com/google/android/gms/games/PlayerBuffer:close	()V
    //   75: aload_2
    //   76: athrow
    //   77: astore_1
    //   78: ldc -19
    //   80: ldc_w 329
    //   83: invokestatic 331	com/google/android/gms/internal/bk:b	(Ljava/lang/String;Ljava/lang/String;)V
    //   86: goto -23 -> 63
    //   89: astore_1
    //   90: aload_0
    //   91: monitorexit
    //   92: aload_1
    //   93: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	94	0	this	bj
    //   10	62	1	localObject1	Object
    //   77	1	1	localRemoteException	RemoteException
    //   89	4	1	localObject2	Object
    //   70	6	2	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   35	59	70	finally
    //   15	35	77	android/os/RemoteException
    //   59	63	77	android/os/RemoteException
    //   71	77	77	android/os/RemoteException
    //   6	11	89	finally
    //   15	35	89	finally
    //   59	63	89	finally
    //   63	65	89	finally
    //   71	77	89	finally
    //   78	86	89	finally
    //   90	92	89	finally
  }
  
  public String getCurrentPlayerId()
  {
    try
    {
      String str = ((bm)o()).getCurrentPlayerId();
      return str;
    }
    catch (RemoteException localRemoteException)
    {
      bk.b("GamesClient", "service died");
    }
    return null;
  }
  
  public Intent getInvitationInboxIntent()
  {
    n();
    Intent localIntent = new Intent("com.google.android.gms.games.SHOW_INVITATIONS");
    localIntent.putExtra("com.google.android.gms.games.GAME_PACKAGE_NAME", this.cy);
    return localIntent;
  }
  
  public Intent getLeaderboardIntent(String paramString)
  {
    n();
    Intent localIntent = new Intent("com.google.android.gms.games.VIEW_LEADERBOARD_SCORES");
    localIntent.putExtra("com.google.android.gms.games.LEADERBOARD_ID", paramString);
    localIntent.addFlags(67108864);
    return localIntent;
  }
  
  public RealTimeSocket getRealTimeSocketForParticipant(String paramString1, String paramString2)
  {
    if ((paramString2 == null) || (!ParticipantUtils.v(paramString2))) {
      throw new IllegalArgumentException("Bad participant ID");
    }
    bo localBo = (bo)this.cz.get(paramString2);
    if (localBo != null)
    {
      paramString1 = localBo;
      if (!localBo.isClosed()) {}
    }
    else
    {
      paramString1 = p(paramString2);
    }
    return paramString1;
  }
  
  public Intent getRealTimeWaitingRoomIntent(Room paramRoom, int paramInt)
  {
    n();
    Intent localIntent = new Intent("com.google.android.gms.games.SHOW_REAL_TIME_WAITING_ROOM");
    x.b(paramRoom, "Room parameter must not be null");
    localIntent.putExtra("room", (Parcelable)paramRoom.freeze());
    if (paramInt >= 0) {}
    for (boolean bool = true;; bool = false)
    {
      x.a(bool, "minParticipantsToStart must be >= 0");
      localIntent.putExtra("com.google.android.gms.games.MIN_PARTICIPANTS_TO_START", paramInt);
      return localIntent;
    }
  }
  
  public Intent getSelectPlayersIntent(int paramInt1, int paramInt2)
  {
    n();
    Intent localIntent = new Intent("com.google.android.gms.games.SELECT_PLAYERS");
    localIntent.putExtra("com.google.android.gms.games.MIN_SELECTIONS", paramInt1);
    localIntent.putExtra("com.google.android.gms.games.MAX_SELECTIONS", paramInt2);
    return localIntent;
  }
  
  public Intent getSettingsIntent()
  {
    n();
    Intent localIntent = new Intent("com.google.android.gms.games.SHOW_SETTINGS");
    localIntent.putExtra("com.google.android.gms.games.GAME_PACKAGE_NAME", this.cy);
    localIntent.addFlags(67108864);
    return localIntent;
  }
  
  public void h(String paramString, int paramInt)
  {
    try
    {
      ((bm)o()).h(paramString, paramInt);
      return;
    }
    catch (RemoteException paramString)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void i(String paramString, int paramInt)
  {
    try
    {
      ((bm)o()).i(paramString, paramInt);
      return;
    }
    catch (RemoteException paramString)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void joinRoom(RoomConfig paramRoomConfig)
  {
    try
    {
      ai localAi = new ai(paramRoomConfig.getRoomUpdateListener(), paramRoomConfig.getRoomStatusUpdateListener(), paramRoomConfig.getMessageReceivedListener());
      ((bm)o()).a(localAi, this.cD, paramRoomConfig.getInvitationId(), paramRoomConfig.isSocketEnabled(), this.cE);
      return;
    }
    catch (RemoteException paramRoomConfig)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  protected bm k(IBinder paramIBinder)
  {
    return bm.a.m(paramIBinder);
  }
  
  protected void k()
  {
    super.k();
    if (this.cC)
    {
      this.cB.am();
      this.cC = false;
    }
  }
  
  protected Bundle l()
  {
    try
    {
      Bundle localBundle = ((bm)o()).l();
      if (localBundle != null) {
        localBundle.setClassLoader(bj.class.getClassLoader());
      }
      return localBundle;
    }
    catch (RemoteException localRemoteException)
    {
      bk.b("GamesClient", "service died");
    }
    return null;
  }
  
  public void leaveRoom(RoomUpdateListener paramRoomUpdateListener, String paramString)
  {
    try
    {
      ((bm)o()).e(new ai(paramRoomUpdateListener), paramString);
      ai();
      return;
    }
    catch (RemoteException paramRoomUpdateListener)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void loadAchievements(OnAchievementsLoadedListener paramOnAchievementsLoadedListener)
  {
    try
    {
      ((bm)o()).c(new f(paramOnAchievementsLoadedListener));
      return;
    }
    catch (RemoteException paramOnAchievementsLoadedListener)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void loadGame(OnGamesLoadedListener paramOnGamesLoadedListener)
  {
    try
    {
      ((bm)o()).d(new k(paramOnGamesLoadedListener));
      return;
    }
    catch (RemoteException paramOnGamesLoadedListener)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void loadInvitations(OnInvitationsLoadedListener paramOnInvitationsLoadedListener)
  {
    try
    {
      ((bm)o()).e(new o(paramOnInvitationsLoadedListener));
      return;
    }
    catch (RemoteException paramOnInvitationsLoadedListener)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void loadLeaderboardMetadata(OnLeaderboardMetadataLoadedListener paramOnLeaderboardMetadataLoadedListener)
  {
    try
    {
      ((bm)o()).b(new t(paramOnLeaderboardMetadataLoadedListener));
      return;
    }
    catch (RemoteException paramOnLeaderboardMetadataLoadedListener)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void loadLeaderboardMetadata(OnLeaderboardMetadataLoadedListener paramOnLeaderboardMetadataLoadedListener, String paramString)
  {
    try
    {
      ((bm)o()).d(new t(paramOnLeaderboardMetadataLoadedListener), paramString);
      return;
    }
    catch (RemoteException paramOnLeaderboardMetadataLoadedListener)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void loadMoreScores(OnLeaderboardScoresLoadedListener paramOnLeaderboardScoresLoadedListener, LeaderboardScoreBuffer paramLeaderboardScoreBuffer, int paramInt1, int paramInt2)
  {
    try
    {
      ((bm)o()).a(new r(paramOnLeaderboardScoresLoadedListener), paramLeaderboardScoreBuffer.aq().ar(), paramInt1, paramInt2);
      return;
    }
    catch (RemoteException paramOnLeaderboardScoresLoadedListener)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void loadPlayer(OnPlayersLoadedListener paramOnPlayersLoadedListener, String paramString)
  {
    try
    {
      ((bm)o()).c(new ad(paramOnPlayersLoadedListener), paramString);
      return;
    }
    catch (RemoteException paramOnPlayersLoadedListener)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void loadPlayerCenteredScores(OnLeaderboardScoresLoadedListener paramOnLeaderboardScoresLoadedListener, String paramString, int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean)
  {
    try
    {
      ((bm)o()).b(new r(paramOnLeaderboardScoresLoadedListener), paramString, paramInt1, paramInt2, paramInt3, paramBoolean);
      return;
    }
    catch (RemoteException paramOnLeaderboardScoresLoadedListener)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void loadTopScores(OnLeaderboardScoresLoadedListener paramOnLeaderboardScoresLoadedListener, String paramString, int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean)
  {
    try
    {
      ((bm)o()).a(new r(paramOnLeaderboardScoresLoadedListener), paramString, paramInt1, paramInt2, paramInt3, paramBoolean);
      return;
    }
    catch (RemoteException paramOnLeaderboardScoresLoadedListener)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void registerInvitationListener(OnInvitationReceivedListener paramOnInvitationReceivedListener)
  {
    try
    {
      paramOnInvitationReceivedListener = new m(paramOnInvitationReceivedListener);
      ((bm)o()).a(paramOnInvitationReceivedListener, this.cE);
      return;
    }
    catch (RemoteException paramOnInvitationReceivedListener)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public int sendReliableRealTimeMessage(RealTimeReliableMessageSentListener paramRealTimeReliableMessageSentListener, byte[] paramArrayOfByte, String paramString1, String paramString2)
  {
    try
    {
      int i = ((bm)o()).a(new ag(paramRealTimeReliableMessageSentListener), paramArrayOfByte, paramString1, paramString2);
      return i;
    }
    catch (RemoteException paramRealTimeReliableMessageSentListener)
    {
      bk.b("GamesClient", "service died");
    }
    return -1;
  }
  
  public int sendUnreliableRealTimeMessageToAll(byte[] paramArrayOfByte, String paramString)
  {
    try
    {
      int i = ((bm)o()).b(paramArrayOfByte, paramString, null);
      return i;
    }
    catch (RemoteException paramArrayOfByte)
    {
      bk.b("GamesClient", "service died");
    }
    return -1;
  }
  
  public void setGravityForPopups(int paramInt)
  {
    this.cB.setGravity(paramInt);
  }
  
  public void setUseNewPlayerNotificationsFirstParty(boolean paramBoolean)
  {
    try
    {
      ((bm)o()).setUseNewPlayerNotificationsFirstParty(paramBoolean);
      return;
    }
    catch (RemoteException localRemoteException)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  public void setViewForPopups(View paramView)
  {
    this.cB.a(paramView);
  }
  
  public void signOut(OnSignOutCompleteListener paramOnSignOutCompleteListener)
  {
    if (paramOnSignOutCompleteListener == null) {}
    for (paramOnSignOutCompleteListener = null;; paramOnSignOutCompleteListener = new am(paramOnSignOutCompleteListener)) {
      try
      {
        ((bm)o()).a(paramOnSignOutCompleteListener);
        return;
      }
      catch (RemoteException paramOnSignOutCompleteListener)
      {
        bk.b("GamesClient", "service died");
      }
    }
  }
  
  public void unregisterInvitationListener()
  {
    try
    {
      ((bm)o()).b(this.cE);
      return;
    }
    catch (RemoteException localRemoteException)
    {
      bk.b("GamesClient", "service died");
    }
  }
  
  abstract class a
    extends bj.c
  {
    private final ArrayList<String> cG = new ArrayList();
    
    a(RoomStatusUpdateListener paramRoomStatusUpdateListener, k paramK, String[] paramArrayOfString)
    {
      super(paramRoomStatusUpdateListener, paramK);
      int i = 0;
      int j = paramArrayOfString.length;
      while (i < j)
      {
        this.cG.add(paramArrayOfString[i]);
        i += 1;
      }
    }
    
    protected void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom)
    {
      if (paramRoomStatusUpdateListener != null) {
        a(paramRoomStatusUpdateListener, paramRoom, this.cG);
      }
    }
    
    protected abstract void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom, ArrayList<String> paramArrayList);
  }
  
  final class aa
    extends bj.a
  {
    aa(RoomStatusUpdateListener paramRoomStatusUpdateListener, k paramK, String[] paramArrayOfString)
    {
      super(paramRoomStatusUpdateListener, paramK, paramArrayOfString);
    }
    
    protected void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom, ArrayList<String> paramArrayList)
    {
      if (paramRoomStatusUpdateListener != null) {
        paramRoomStatusUpdateListener.onPeerInvitedToRoom(paramRoom, paramArrayList);
      }
    }
  }
  
  final class ab
    extends bj.a
  {
    ab(RoomStatusUpdateListener paramRoomStatusUpdateListener, k paramK, String[] paramArrayOfString)
    {
      super(paramRoomStatusUpdateListener, paramK, paramArrayOfString);
    }
    
    protected void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom, ArrayList<String> paramArrayList)
    {
      if (paramRoomStatusUpdateListener != null) {
        paramRoomStatusUpdateListener.onPeerJoined(paramRoom, paramArrayList);
      }
    }
  }
  
  final class ac
    extends bj.a
  {
    ac(RoomStatusUpdateListener paramRoomStatusUpdateListener, k paramK, String[] paramArrayOfString)
    {
      super(paramRoomStatusUpdateListener, paramK, paramArrayOfString);
    }
    
    protected void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom, ArrayList<String> paramArrayList)
    {
      if (paramRoomStatusUpdateListener != null) {
        paramRoomStatusUpdateListener.onPeerLeft(paramRoom, paramArrayList);
      }
    }
  }
  
  final class ad
    extends bi
  {
    private final OnPlayersLoadedListener cW;
    
    ad(OnPlayersLoadedListener paramOnPlayersLoadedListener)
    {
      this.cW = ((OnPlayersLoadedListener)x.b(paramOnPlayersLoadedListener, "Listener must not be null"));
    }
    
    public void e(k paramK)
    {
      bj.this.a(new bj.ae(bj.this, this.cW, paramK));
    }
  }
  
  final class ae
    extends p<bm>.c<OnPlayersLoadedListener>
  {
    ae(OnPlayersLoadedListener paramOnPlayersLoadedListener, k paramK)
    {
      super(paramOnPlayersLoadedListener, paramK);
    }
    
    protected void a(OnPlayersLoadedListener paramOnPlayersLoadedListener)
    {
      paramOnPlayersLoadedListener.onPlayersLoaded(this.O.getStatusCode(), new PlayerBuffer(this.O));
    }
  }
  
  final class af
    extends p<bm>.b<RealTimeReliableMessageSentListener>
  {
    private final String cX;
    private final int cY;
    private final int p;
    
    af(RealTimeReliableMessageSentListener paramRealTimeReliableMessageSentListener, int paramInt1, int paramInt2, String paramString)
    {
      super(paramRealTimeReliableMessageSentListener);
      this.p = paramInt1;
      this.cY = paramInt2;
      this.cX = paramString;
    }
    
    public void a(RealTimeReliableMessageSentListener paramRealTimeReliableMessageSentListener)
    {
      if (paramRealTimeReliableMessageSentListener != null) {
        paramRealTimeReliableMessageSentListener.onRealTimeMessageSent(this.p, this.cY, this.cX);
      }
    }
  }
  
  final class ag
    extends bi
  {
    final RealTimeReliableMessageSentListener cZ;
    
    public ag(RealTimeReliableMessageSentListener paramRealTimeReliableMessageSentListener)
    {
      this.cZ = paramRealTimeReliableMessageSentListener;
    }
    
    public void a(int paramInt1, int paramInt2, String paramString)
    {
      bj.this.a(new bj.af(bj.this, this.cZ, paramInt1, paramInt2, paramString));
    }
  }
  
  final class ah
    extends bj.c
  {
    ah(RoomStatusUpdateListener paramRoomStatusUpdateListener, k paramK)
    {
      super(paramRoomStatusUpdateListener, paramK);
    }
    
    public void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom)
    {
      if (paramRoomStatusUpdateListener != null) {
        paramRoomStatusUpdateListener.onRoomAutoMatching(paramRoom);
      }
    }
  }
  
  final class ai
    extends bi
  {
    private final RoomUpdateListener da;
    private final RoomStatusUpdateListener db;
    private final RealTimeMessageReceivedListener dc;
    
    public ai(RoomUpdateListener paramRoomUpdateListener)
    {
      this.da = ((RoomUpdateListener)x.b(paramRoomUpdateListener, "Callbacks must not be null"));
      this.db = null;
      this.dc = null;
    }
    
    public ai(RoomUpdateListener paramRoomUpdateListener, RoomStatusUpdateListener paramRoomStatusUpdateListener, RealTimeMessageReceivedListener paramRealTimeMessageReceivedListener)
    {
      this.da = ((RoomUpdateListener)x.b(paramRoomUpdateListener, "Callbacks must not be null"));
      this.db = paramRoomStatusUpdateListener;
      this.dc = paramRealTimeMessageReceivedListener;
    }
    
    public void a(k paramK, String[] paramArrayOfString)
    {
      bj.this.a(new bj.aa(bj.this, this.db, paramK, paramArrayOfString));
    }
    
    public void b(k paramK, String[] paramArrayOfString)
    {
      bj.this.a(new bj.ab(bj.this, this.db, paramK, paramArrayOfString));
    }
    
    public void c(k paramK, String[] paramArrayOfString)
    {
      bj.this.a(new bj.ac(bj.this, this.db, paramK, paramArrayOfString));
    }
    
    public void d(k paramK, String[] paramArrayOfString)
    {
      bj.this.a(new bj.y(bj.this, this.db, paramK, paramArrayOfString));
    }
    
    public void e(k paramK, String[] paramArrayOfString)
    {
      bj.this.a(new bj.x(bj.this, this.db, paramK, paramArrayOfString));
    }
    
    public void f(k paramK, String[] paramArrayOfString)
    {
      bj.this.a(new bj.z(bj.this, this.db, paramK, paramArrayOfString));
    }
    
    public void n(k paramK)
    {
      bj.this.a(new bj.al(bj.this, this.da, paramK));
    }
    
    public void o(k paramK)
    {
      bj.this.a(new bj.q(bj.this, this.da, paramK));
    }
    
    public void onLeftRoom(int paramInt, String paramString)
    {
      bj.this.a(new bj.v(bj.this, this.da, paramInt, paramString));
    }
    
    public void onRealTimeMessageReceived(RealTimeMessage paramRealTimeMessage)
    {
      bk.a("GamesClient", "RoomBinderCallbacks: onRealTimeMessageReceived");
      bj.this.a(new bj.w(bj.this, this.dc, paramRealTimeMessage));
    }
    
    public void p(k paramK)
    {
      bj.this.a(new bj.ak(bj.this, this.db, paramK));
    }
    
    public void q(k paramK)
    {
      bj.this.a(new bj.ah(bj.this, this.db, paramK));
    }
    
    public void r(k paramK)
    {
      bj.this.a(new bj.aj(bj.this, this.da, paramK));
    }
    
    public void s(k paramK)
    {
      bj.this.a(new bj.h(bj.this, this.db, paramK));
    }
    
    public void t(k paramK)
    {
      bj.this.a(new bj.i(bj.this, this.db, paramK));
    }
  }
  
  final class aj
    extends bj.b
  {
    aj(RoomUpdateListener paramRoomUpdateListener, k paramK)
    {
      super(paramRoomUpdateListener, paramK);
    }
    
    public void a(RoomUpdateListener paramRoomUpdateListener, Room paramRoom)
    {
      if (paramRoomUpdateListener != null) {
        paramRoomUpdateListener.onRoomConnected(this.O.getStatusCode(), paramRoom);
      }
    }
  }
  
  final class ak
    extends bj.c
  {
    ak(RoomStatusUpdateListener paramRoomStatusUpdateListener, k paramK)
    {
      super(paramRoomStatusUpdateListener, paramK);
    }
    
    public void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom)
    {
      if (paramRoomStatusUpdateListener != null) {
        paramRoomStatusUpdateListener.onRoomConnecting(paramRoom);
      }
    }
  }
  
  final class al
    extends bj.b
  {
    public al(RoomUpdateListener paramRoomUpdateListener, k paramK)
    {
      super(paramRoomUpdateListener, paramK);
    }
    
    public void a(RoomUpdateListener paramRoomUpdateListener, Room paramRoom)
    {
      paramRoomUpdateListener.onRoomCreated(this.O.getStatusCode(), paramRoom);
    }
  }
  
  final class am
    extends bi
  {
    private final OnSignOutCompleteListener dd;
    
    public am(OnSignOutCompleteListener paramOnSignOutCompleteListener)
    {
      this.dd = ((OnSignOutCompleteListener)x.b(paramOnSignOutCompleteListener, "Listener must not be null"));
    }
    
    public void onSignOutComplete()
    {
      bj.this.a(new bj.an(bj.this, this.dd));
    }
  }
  
  final class an
    extends p<bm>.b<OnSignOutCompleteListener>
  {
    public an(OnSignOutCompleteListener paramOnSignOutCompleteListener)
    {
      super(paramOnSignOutCompleteListener);
    }
    
    public void a(OnSignOutCompleteListener paramOnSignOutCompleteListener)
    {
      paramOnSignOutCompleteListener.onSignOutComplete();
    }
  }
  
  final class ao
    extends bi
  {
    private final OnScoreSubmittedListener de;
    
    public ao(OnScoreSubmittedListener paramOnScoreSubmittedListener)
    {
      this.de = ((OnScoreSubmittedListener)x.b(paramOnScoreSubmittedListener, "Listener must not be null"));
    }
    
    public void d(k paramK)
    {
      paramK = new SubmitScoreResult(paramK);
      bj.this.a(new bj.ap(bj.this, this.de, paramK));
    }
  }
  
  final class ap
    extends p<bm>.b<OnScoreSubmittedListener>
  {
    private final SubmitScoreResult df;
    
    public ap(OnScoreSubmittedListener paramOnScoreSubmittedListener, SubmitScoreResult paramSubmitScoreResult)
    {
      super(paramOnScoreSubmittedListener);
      this.df = paramSubmitScoreResult;
    }
    
    public void a(OnScoreSubmittedListener paramOnScoreSubmittedListener)
    {
      paramOnScoreSubmittedListener.onScoreSubmitted(this.df.getStatusCode(), this.df);
    }
  }
  
  abstract class b
    extends p<bm>.c<RoomUpdateListener>
  {
    b(RoomUpdateListener paramRoomUpdateListener, k paramK)
    {
      super(paramRoomUpdateListener, paramK);
    }
    
    protected void a(RoomUpdateListener paramRoomUpdateListener)
    {
      a(paramRoomUpdateListener, bj.a(bj.this, this.O));
    }
    
    protected abstract void a(RoomUpdateListener paramRoomUpdateListener, Room paramRoom);
  }
  
  abstract class c
    extends p<bm>.c<RoomStatusUpdateListener>
  {
    c(RoomStatusUpdateListener paramRoomStatusUpdateListener, k paramK)
    {
      super(paramRoomStatusUpdateListener, paramK);
    }
    
    protected void a(RoomStatusUpdateListener paramRoomStatusUpdateListener)
    {
      if (paramRoomStatusUpdateListener != null) {
        a(paramRoomStatusUpdateListener, bj.a(bj.this, this.O));
      }
    }
    
    protected abstract void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom);
  }
  
  final class d
    extends bi
  {
    private final OnAchievementUpdatedListener cI;
    
    d(OnAchievementUpdatedListener paramOnAchievementUpdatedListener)
    {
      this.cI = ((OnAchievementUpdatedListener)x.b(paramOnAchievementUpdatedListener, "Listener must not be null"));
    }
    
    public void onAchievementUpdated(int paramInt, String paramString)
    {
      bj.this.a(new bj.e(bj.this, this.cI, paramInt, paramString));
    }
  }
  
  final class e
    extends p<bm>.b<OnAchievementUpdatedListener>
  {
    private final String cJ;
    private final int p;
    
    e(OnAchievementUpdatedListener paramOnAchievementUpdatedListener, int paramInt, String paramString)
    {
      super(paramOnAchievementUpdatedListener);
      this.p = paramInt;
      this.cJ = paramString;
    }
    
    protected void a(OnAchievementUpdatedListener paramOnAchievementUpdatedListener)
    {
      paramOnAchievementUpdatedListener.onAchievementUpdated(this.p, this.cJ);
    }
  }
  
  final class f
    extends bi
  {
    private final OnAchievementsLoadedListener cK;
    
    f(OnAchievementsLoadedListener paramOnAchievementsLoadedListener)
    {
      this.cK = ((OnAchievementsLoadedListener)x.b(paramOnAchievementsLoadedListener, "Listener must not be null"));
    }
    
    public void b(k paramK)
    {
      bj.this.a(new bj.g(bj.this, this.cK, paramK));
    }
  }
  
  final class g
    extends p<bm>.c<OnAchievementsLoadedListener>
  {
    g(OnAchievementsLoadedListener paramOnAchievementsLoadedListener, k paramK)
    {
      super(paramOnAchievementsLoadedListener, paramK);
    }
    
    protected void a(OnAchievementsLoadedListener paramOnAchievementsLoadedListener)
    {
      paramOnAchievementsLoadedListener.onAchievementsLoaded(this.O.getStatusCode(), new AchievementBuffer(this.O));
    }
  }
  
  final class h
    extends bj.c
  {
    h(RoomStatusUpdateListener paramRoomStatusUpdateListener, k paramK)
    {
      super(paramRoomStatusUpdateListener, paramK);
    }
    
    public void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom)
    {
      if (paramRoomStatusUpdateListener != null) {
        paramRoomStatusUpdateListener.onConnectedToRoom(paramRoom);
      }
    }
  }
  
  final class i
    extends bj.c
  {
    i(RoomStatusUpdateListener paramRoomStatusUpdateListener, k paramK)
    {
      super(paramRoomStatusUpdateListener, paramK);
    }
    
    public void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom)
    {
      if (paramRoomStatusUpdateListener != null) {
        paramRoomStatusUpdateListener.onDisconnectedFromRoom(paramRoom);
      }
    }
  }
  
  public final class j
    extends t.a
  {
    private final p.d cL;
    
    public j(p.d paramD)
    {
      this.cL = paramD;
    }
    
    public void a(int paramInt, IBinder paramIBinder, Bundle paramBundle)
    {
      this.cL.a(paramInt, paramIBinder, paramBundle);
      if ((paramInt == 0) && (paramBundle != null)) {
        bj.a(bj.this, paramBundle.getBoolean("show_welcome_popup"));
      }
    }
  }
  
  final class k
    extends bi
  {
    private final OnGamesLoadedListener cM;
    
    k(OnGamesLoadedListener paramOnGamesLoadedListener)
    {
      this.cM = ((OnGamesLoadedListener)x.b(paramOnGamesLoadedListener, "Listener must not be null"));
    }
    
    public void g(k paramK)
    {
      bj.this.a(new bj.l(bj.this, this.cM, paramK));
    }
  }
  
  final class l
    extends p<bm>.c<OnGamesLoadedListener>
  {
    l(OnGamesLoadedListener paramOnGamesLoadedListener, k paramK)
    {
      super(paramOnGamesLoadedListener, paramK);
    }
    
    protected void a(OnGamesLoadedListener paramOnGamesLoadedListener)
    {
      paramOnGamesLoadedListener.onGamesLoaded(this.O.getStatusCode(), new GameBuffer(this.O));
    }
  }
  
  final class m
    extends bi
  {
    private final OnInvitationReceivedListener cN;
    
    m(OnInvitationReceivedListener paramOnInvitationReceivedListener)
    {
      this.cN = paramOnInvitationReceivedListener;
    }
    
    public void k(k paramK)
    {
      InvitationBuffer localInvitationBuffer = new InvitationBuffer(paramK);
      paramK = null;
      try
      {
        if (localInvitationBuffer.getCount() > 0) {
          paramK = (Invitation)((Invitation)localInvitationBuffer.get(0)).freeze();
        }
        localInvitationBuffer.close();
        if (paramK != null) {
          bj.this.a(new bj.n(bj.this, this.cN, paramK));
        }
        return;
      }
      finally
      {
        localInvitationBuffer.close();
      }
    }
  }
  
  final class n
    extends p<bm>.b<OnInvitationReceivedListener>
  {
    private final Invitation cO;
    
    n(OnInvitationReceivedListener paramOnInvitationReceivedListener, Invitation paramInvitation)
    {
      super(paramOnInvitationReceivedListener);
      this.cO = paramInvitation;
    }
    
    protected void a(OnInvitationReceivedListener paramOnInvitationReceivedListener)
    {
      paramOnInvitationReceivedListener.onInvitationReceived(this.cO);
    }
  }
  
  final class o
    extends bi
  {
    private final OnInvitationsLoadedListener cP;
    
    o(OnInvitationsLoadedListener paramOnInvitationsLoadedListener)
    {
      this.cP = paramOnInvitationsLoadedListener;
    }
    
    public void j(k paramK)
    {
      bj.this.a(new bj.p(bj.this, this.cP, paramK));
    }
  }
  
  final class p
    extends p<bm>.c<OnInvitationsLoadedListener>
  {
    p(OnInvitationsLoadedListener paramOnInvitationsLoadedListener, k paramK)
    {
      super(paramOnInvitationsLoadedListener, paramK);
    }
    
    protected void a(OnInvitationsLoadedListener paramOnInvitationsLoadedListener)
    {
      paramOnInvitationsLoadedListener.onInvitationsLoaded(this.O.getStatusCode(), new InvitationBuffer(this.O));
    }
  }
  
  final class q
    extends bj.b
  {
    public q(RoomUpdateListener paramRoomUpdateListener, k paramK)
    {
      super(paramRoomUpdateListener, paramK);
    }
    
    public void a(RoomUpdateListener paramRoomUpdateListener, Room paramRoom)
    {
      paramRoomUpdateListener.onJoinedRoom(this.O.getStatusCode(), paramRoom);
    }
  }
  
  final class r
    extends bi
  {
    private final OnLeaderboardScoresLoadedListener cQ;
    
    r(OnLeaderboardScoresLoadedListener paramOnLeaderboardScoresLoadedListener)
    {
      this.cQ = ((OnLeaderboardScoresLoadedListener)x.b(paramOnLeaderboardScoresLoadedListener, "Listener must not be null"));
    }
    
    public void a(k paramK1, k paramK2)
    {
      bj.this.a(new bj.s(bj.this, this.cQ, paramK1, paramK2));
    }
  }
  
  final class s
    extends p<bm>.b<OnLeaderboardScoresLoadedListener>
  {
    private final k cR;
    private final k cS;
    
    s(OnLeaderboardScoresLoadedListener paramOnLeaderboardScoresLoadedListener, k paramK1, k paramK2)
    {
      super(paramOnLeaderboardScoresLoadedListener);
      this.cR = paramK1;
      this.cS = paramK2;
    }
    
    protected void a(OnLeaderboardScoresLoadedListener paramOnLeaderboardScoresLoadedListener)
    {
      LeaderboardBuffer localLeaderboardBuffer = new LeaderboardBuffer(this.cR);
      LeaderboardScoreBuffer localLeaderboardScoreBuffer = new LeaderboardScoreBuffer(this.cS);
      paramOnLeaderboardScoresLoadedListener.onLeaderboardScoresLoaded(this.cS.getStatusCode(), localLeaderboardBuffer, localLeaderboardScoreBuffer);
    }
  }
  
  final class t
    extends bi
  {
    private final OnLeaderboardMetadataLoadedListener cT;
    
    t(OnLeaderboardMetadataLoadedListener paramOnLeaderboardMetadataLoadedListener)
    {
      this.cT = ((OnLeaderboardMetadataLoadedListener)x.b(paramOnLeaderboardMetadataLoadedListener, "Listener must not be null"));
    }
    
    public void c(k paramK)
    {
      bj.this.a(new bj.u(bj.this, this.cT, paramK));
    }
  }
  
  final class u
    extends p<bm>.c<OnLeaderboardMetadataLoadedListener>
  {
    u(OnLeaderboardMetadataLoadedListener paramOnLeaderboardMetadataLoadedListener, k paramK)
    {
      super(paramOnLeaderboardMetadataLoadedListener, paramK);
    }
    
    protected void a(OnLeaderboardMetadataLoadedListener paramOnLeaderboardMetadataLoadedListener)
    {
      paramOnLeaderboardMetadataLoadedListener.onLeaderboardMetadataLoaded(this.O.getStatusCode(), new LeaderboardBuffer(this.O));
    }
  }
  
  final class v
    extends p<bm>.b<RoomUpdateListener>
  {
    private final String cU;
    private final int p;
    
    v(RoomUpdateListener paramRoomUpdateListener, int paramInt, String paramString)
    {
      super(paramRoomUpdateListener);
      this.p = paramInt;
      this.cU = paramString;
    }
    
    public void a(RoomUpdateListener paramRoomUpdateListener)
    {
      paramRoomUpdateListener.onLeftRoom(this.p, this.cU);
    }
  }
  
  final class w
    extends p<bm>.b<RealTimeMessageReceivedListener>
  {
    private final RealTimeMessage cV;
    
    w(RealTimeMessageReceivedListener paramRealTimeMessageReceivedListener, RealTimeMessage paramRealTimeMessage)
    {
      super(paramRealTimeMessageReceivedListener);
      this.cV = paramRealTimeMessage;
    }
    
    public void a(RealTimeMessageReceivedListener paramRealTimeMessageReceivedListener)
    {
      bk.a("GamesClient", "Deliver Message received callback");
      if (paramRealTimeMessageReceivedListener != null) {
        paramRealTimeMessageReceivedListener.onRealTimeMessageReceived(this.cV);
      }
    }
  }
  
  final class x
    extends bj.a
  {
    x(RoomStatusUpdateListener paramRoomStatusUpdateListener, k paramK, String[] paramArrayOfString)
    {
      super(paramRoomStatusUpdateListener, paramK, paramArrayOfString);
    }
    
    protected void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom, ArrayList<String> paramArrayList)
    {
      if (paramRoomStatusUpdateListener != null) {
        paramRoomStatusUpdateListener.onPeersConnected(paramRoom, paramArrayList);
      }
    }
  }
  
  final class y
    extends bj.a
  {
    y(RoomStatusUpdateListener paramRoomStatusUpdateListener, k paramK, String[] paramArrayOfString)
    {
      super(paramRoomStatusUpdateListener, paramK, paramArrayOfString);
    }
    
    protected void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom, ArrayList<String> paramArrayList)
    {
      if (paramRoomStatusUpdateListener != null) {
        paramRoomStatusUpdateListener.onPeerDeclined(paramRoom, paramArrayList);
      }
    }
  }
  
  final class z
    extends bj.a
  {
    z(RoomStatusUpdateListener paramRoomStatusUpdateListener, k paramK, String[] paramArrayOfString)
    {
      super(paramRoomStatusUpdateListener, paramK, paramArrayOfString);
    }
    
    protected void a(RoomStatusUpdateListener paramRoomStatusUpdateListener, Room paramRoom, ArrayList<String> paramArrayList)
    {
      if (paramRoomStatusUpdateListener != null) {
        paramRoomStatusUpdateListener.onPeersDisconnected(paramRoom, paramArrayList);
      }
    }
  }
}
