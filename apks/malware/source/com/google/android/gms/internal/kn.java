package com.google.android.gms.internal;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.graphics.Color;
import android.location.Location;
import android.os.Bundle;
import android.text.TextUtils;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public final class kn
{
  private static final SimpleDateFormat a = new SimpleDateFormat("yyyyMMdd");
  
  public static fk a(Context paramContext, fi paramFi, String paramString)
  {
    JSONObject localJSONObject;
    String str1;
    String str3;
    String str2;
    long l2;
    String str4;
    long l1;
    Object localObject1;
    int i;
    label204:
    Object localObject2;
    label242:
    int j;
    for (;;)
    {
      try
      {
        localJSONObject = new JSONObject(paramString);
        str1 = localJSONObject.optString("ad_base_url", null);
        paramString = localJSONObject.optString("ad_url", null);
        str3 = localJSONObject.optString("ad_size", null);
        str2 = localJSONObject.optString("ad_html", null);
        l2 = -1L;
        str4 = localJSONObject.optString("debug_dialog", null);
        if (!localJSONObject.has("interstitial_timeout")) {
          break label640;
        }
        l1 = (localJSONObject.getDouble("interstitial_timeout") * 1000.0D);
        localObject1 = localJSONObject.optString("orientation", null);
        i = -1;
        if ("portrait".equals(localObject1))
        {
          i = lo.c();
          if (!TextUtils.isEmpty(str2))
          {
            if (!TextUtils.isEmpty(str1)) {
              break label634;
            }
            mi.e("Could not parse the mediation config: Missing required ad_base_url field");
            return new fk(0);
          }
        }
        else
        {
          if (!"landscape".equals(localObject1)) {
            continue;
          }
          i = lo.b();
          continue;
        }
        if (!TextUtils.isEmpty(paramString))
        {
          localObject1 = kk.a(paramContext, paramFi.l.c, paramString, null);
          str1 = ((fk)localObject1).c;
          str2 = ((fk)localObject1).d;
          l2 = ((fk)localObject1).o;
          localObject2 = localJSONObject.optJSONArray("click_urls");
          if (localObject1 == null)
          {
            paramContext = null;
            if (localObject2 == null) {
              break;
            }
            paramString = paramContext;
            if (paramContext != null) {
              break label648;
            }
            paramString = new LinkedList();
            break label648;
            if (j >= ((JSONArray)localObject2).length()) {
              break label654;
            }
            paramString.add(((JSONArray)localObject2).getString(j));
            j += 1;
            continue;
          }
        }
        else
        {
          mi.e("Could not parse the mediation config: Missing required ad_html or ad_url field.");
          paramContext = new fk(0);
          return paramContext;
        }
      }
      catch (JSONException paramContext)
      {
        mi.e("Could not parse the mediation config: " + paramContext.getMessage());
        return new fk(0);
      }
      paramContext = ((fk)localObject1).e;
    }
    label332:
    Object localObject3 = localJSONObject.optJSONArray("impression_urls");
    if (localObject1 == null) {
      paramContext = null;
    }
    while (localObject3 != null)
    {
      paramString = paramContext;
      if (paramContext != null) {
        break label660;
      }
      paramString = new LinkedList();
      break label660;
      label370:
      while (j < ((JSONArray)localObject3).length())
      {
        paramString.add(((JSONArray)localObject3).getString(j));
        j += 1;
      }
      paramContext = ((fk)localObject1).g;
      continue;
      label412:
      JSONArray localJSONArray = localJSONObject.optJSONArray("manual_impression_urls");
      if (localObject1 == null) {}
      for (paramContext = null; localJSONArray != null; paramContext = ((fk)localObject1).k)
      {
        paramString = paramContext;
        if (paramContext != null) {
          break label672;
        }
        paramString = new LinkedList();
        break label672;
        label450:
        while (j < localJSONArray.length())
        {
          paramString.add(localJSONArray.getString(j));
          j += 1;
        }
      }
    }
    for (;;)
    {
      long l3 = l1;
      j = i;
      if (localObject1 != null)
      {
        if (((fk)localObject1).m != -1) {
          i = ((fk)localObject1).m;
        }
        l3 = l1;
        j = i;
        if (((fk)localObject1).h > 0L)
        {
          l3 = ((fk)localObject1).h;
          j = i;
        }
      }
      localObject1 = localJSONObject.optString("active_view");
      paramString = null;
      boolean bool = localJSONObject.optBoolean("ad_is_javascript", false);
      if (bool) {
        paramString = localJSONObject.optString("ad_passback_url", null);
      }
      paramContext = new fk(str1, str2, (List)localObject2, (List)localObject3, l3, paramContext, j, str3, l2, str4, bool, paramString, (String)localObject1, paramFi.q);
      return paramContext;
      continue;
      localObject3 = paramContext;
      break label412;
      localObject2 = paramContext;
      break label332;
      label634:
      localObject1 = null;
      break label204;
      label640:
      l1 = -1L;
      break;
      label648:
      j = 0;
      break label242;
      label654:
      localObject2 = paramString;
      break label332;
      label660:
      j = 0;
      break label370;
      localObject3 = paramString;
      break label412;
      label672:
      j = 0;
      break label450;
      paramContext = paramString;
    }
  }
  
  private static Integer a(boolean paramBoolean)
  {
    if (paramBoolean) {}
    for (int i = 1;; i = 0) {
      return Integer.valueOf(i);
    }
  }
  
  private static String a(int paramInt)
  {
    return String.format(Locale.US, "#%06x", new Object[] { Integer.valueOf(0xFFFFFF & paramInt) });
  }
  
  public static String a(fi paramFi, kt paramKt, String paramString1, String paramString2)
  {
    for (;;)
    {
      try
      {
        HashMap localHashMap = new HashMap();
        Object localObject = new ArrayList();
        if (!TextUtils.isEmpty(paramString1)) {
          ((List)localObject).add(paramString1);
        }
        if (!TextUtils.isEmpty(paramString2)) {
          ((List)localObject).add(paramString2);
        }
        if (((List)localObject).size() > 0) {
          localHashMap.put("eid", TextUtils.join(",", (Iterable)localObject));
        }
        if (paramFi.c != null) {
          localHashMap.put("ad_pos", paramFi.c);
        }
        paramString2 = paramFi.d;
        paramString1 = lf.a();
        if (paramString1 != null) {
          localHashMap.put("abf", paramString1);
        }
        if (paramString2.c != -1L) {
          localHashMap.put("cust_age", a.format(new Date(paramString2.c)));
        }
        if (paramString2.d != null) {
          localHashMap.put("extras", paramString2.d);
        }
        if (paramString2.e != -1) {
          localHashMap.put("cust_gender", Integer.valueOf(paramString2.e));
        }
        if (paramString2.f != null) {
          localHashMap.put("kw", paramString2.f);
        }
        if (paramString2.h != -1) {
          localHashMap.put("tag_for_child_directed_treatment", Integer.valueOf(paramString2.h));
        }
        if (paramString2.g) {
          localHashMap.put("adtest", "on");
        }
        if (paramString2.b >= 2)
        {
          if (paramString2.i) {
            localHashMap.put("d_imp_hdr", Integer.valueOf(1));
          }
          if (!TextUtils.isEmpty(paramString2.j)) {
            localHashMap.put("ppid", paramString2.j);
          }
          if (paramString2.k != null)
          {
            localObject = paramString2.k;
            if (Color.alpha(((bj)localObject).c) != 0) {
              localHashMap.put("acolor", a(((bj)localObject).c));
            }
            if (Color.alpha(((bj)localObject).d) != 0) {
              localHashMap.put("bgcolor", a(((bj)localObject).d));
            }
            if ((Color.alpha(((bj)localObject).e) != 0) && (Color.alpha(((bj)localObject).f) != 0))
            {
              localHashMap.put("gradientto", a(((bj)localObject).e));
              localHashMap.put("gradientfrom", a(((bj)localObject).f));
            }
            if (Color.alpha(((bj)localObject).g) != 0) {
              localHashMap.put("bcolor", a(((bj)localObject).g));
            }
            localHashMap.put("bthick", Integer.toString(((bj)localObject).h));
          }
        }
        switch (((bj)localObject).i)
        {
        default: 
          if (paramString1 != null) {
            localHashMap.put("btype", paramString1);
          }
          switch (((bj)localObject).j)
          {
          default: 
            if (paramString1 != null) {
              localHashMap.put("callbuttoncolor", paramString1);
            }
            if (((bj)localObject).k != null) {
              localHashMap.put("channel", ((bj)localObject).k);
            }
            if (Color.alpha(((bj)localObject).l) != 0) {
              localHashMap.put("dcolor", a(((bj)localObject).l));
            }
            if (((bj)localObject).m != null) {
              localHashMap.put("font", ((bj)localObject).m);
            }
            if (Color.alpha(((bj)localObject).n) != 0) {
              localHashMap.put("hcolor", a(((bj)localObject).n));
            }
            localHashMap.put("headersize", Integer.toString(((bj)localObject).o));
            if (((bj)localObject).p != null) {
              localHashMap.put("q", ((bj)localObject).p);
            }
            if ((paramString2.b >= 3) && (paramString2.m != null)) {
              localHashMap.put("url", paramString2.m);
            }
            localHashMap.put("format", paramFi.e.c);
            if (paramFi.e.g == -1) {
              localHashMap.put("smart_w", "full");
            }
            if (paramFi.e.d == -2) {
              localHashMap.put("smart_h", "auto");
            }
            if (paramFi.e.i != null)
            {
              paramString1 = new StringBuilder();
              paramString2 = paramFi.e.i;
              int k = paramString2.length;
              int i = 0;
              if (i < k)
              {
                localObject = paramString2[i];
                if (paramString1.length() != 0) {
                  paramString1.append("|");
                }
                if (((ay)localObject).g == -1)
                {
                  j = (int)(((ay)localObject).h / paramKt.q);
                  paramString1.append(j);
                  paramString1.append("x");
                  if (((ay)localObject).d == -2)
                  {
                    j = (int)(((ay)localObject).e / paramKt.q);
                    paramString1.append(j);
                    i += 1;
                  }
                }
                else
                {
                  j = ((ay)localObject).g;
                  continue;
                }
                int j = ((ay)localObject).d;
                continue;
              }
              localHashMap.put("sz", paramString1);
            }
            if (paramFi.n != 0)
            {
              localHashMap.put("native_version", Integer.valueOf(paramFi.n));
              localHashMap.put("native_templates", paramFi.o);
            }
            localHashMap.put("slotname", paramFi.f);
            localHashMap.put("pn", paramFi.g.packageName);
            if (paramFi.h != null) {
              localHashMap.put("vc", Integer.valueOf(paramFi.h.versionCode));
            }
            localHashMap.put("ms", paramFi.i);
            localHashMap.put("seq_num", paramFi.j);
            localHashMap.put("session_id", paramFi.k);
            localHashMap.put("js", paramFi.l.c);
            localHashMap.put("am", Integer.valueOf(paramKt.a));
            localHashMap.put("cog", a(paramKt.b));
            localHashMap.put("coh", a(paramKt.c));
            if (!TextUtils.isEmpty(paramKt.d)) {
              localHashMap.put("carrier", paramKt.d);
            }
            localHashMap.put("gl", paramKt.e);
            if (paramKt.f) {
              localHashMap.put("simulator", Integer.valueOf(1));
            }
            localHashMap.put("ma", a(paramKt.g));
            localHashMap.put("sp", a(paramKt.h));
            localHashMap.put("hl", paramKt.i);
            if (!TextUtils.isEmpty(paramKt.j)) {
              localHashMap.put("mv", paramKt.j);
            }
            localHashMap.put("muv", Integer.valueOf(paramKt.k));
            if (paramKt.l != -2) {
              localHashMap.put("cnt", Integer.valueOf(paramKt.l));
            }
            localHashMap.put("gnt", Integer.valueOf(paramKt.m));
            localHashMap.put("pt", Integer.valueOf(paramKt.n));
            localHashMap.put("rm", Integer.valueOf(paramKt.o));
            localHashMap.put("riv", Integer.valueOf(paramKt.p));
            localHashMap.put("u_sd", Float.valueOf(paramKt.q));
            localHashMap.put("sh", Integer.valueOf(paramKt.s));
            localHashMap.put("sw", Integer.valueOf(paramKt.r));
            paramString1 = new Bundle();
            paramString1.putInt("active_network_state", paramKt.w);
            paramString1.putBoolean("active_network_metered", paramKt.v);
            localHashMap.put("connectivity", paramString1);
            paramString1 = new Bundle();
            paramString1.putBoolean("is_charging", paramKt.u);
            paramString1.putDouble("battery_level", paramKt.t);
            localHashMap.put("battery", paramString1);
            if ((paramFi.d.b >= 2) && (paramFi.d.l != null))
            {
              paramKt = paramFi.d.l;
              paramString1 = new HashMap();
              float f = paramKt.getAccuracy();
              long l1 = paramKt.getTime();
              long l2 = (paramKt.getLatitude() * 1.0E7D);
              long l3 = (paramKt.getLongitude() * 1.0E7D);
              paramString1.put("radius", Float.valueOf(f * 1000.0F));
              paramString1.put("lat", Long.valueOf(l2));
              paramString1.put("long", Long.valueOf(l3));
              paramString1.put("time", Long.valueOf(l1 * 1000L));
              localHashMap.put("uule", paramString1);
            }
            if (paramFi.b >= 2) {
              localHashMap.put("quality_signals", paramFi.m);
            }
            if ((paramFi.b >= 4) && (paramFi.q)) {
              localHashMap.put("forceHttps", Boolean.valueOf(paramFi.q));
            }
            if ((paramFi.b >= 3) && (paramFi.p != null)) {
              localHashMap.put("content_info", paramFi.p);
            }
            if (mi.a(2))
            {
              paramFi = lo.a(localHashMap).toString(2);
              mi.d("Ad Request JSON: " + paramFi);
            }
            paramFi = lo.a(localHashMap).toString();
            return paramFi;
          }
          break;
        }
      }
      catch (JSONException paramFi)
      {
        mi.e("Problem serializing ad request to JSON: " + paramFi.getMessage());
        return null;
      }
      paramString1 = null;
      continue;
      paramString1 = null;
      continue;
      paramString1 = "none";
      continue;
      paramString1 = "dashed";
      continue;
      paramString1 = "dotted";
      continue;
      paramString1 = "solid";
      continue;
      paramString1 = "dark";
      continue;
      paramString1 = "light";
      continue;
      paramString1 = "medium";
    }
  }
}
