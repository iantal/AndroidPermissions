package com.google.android.gms.b;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;

final class xm
  implements Cloneable
{
  private xk<?, ?> a;
  private Object b;
  private List<xr> c = new ArrayList();
  
  xm() {}
  
  private byte[] c()
  {
    byte[] arrayOfByte = new byte[a()];
    a(xh.a(arrayOfByte));
    return arrayOfByte;
  }
  
  final int a()
  {
    int j;
    if (this.b != null)
    {
      j = this.a.a(this.b);
      return j;
    }
    Iterator localIterator = this.c.iterator();
    xr localXr;
    for (int i = 0;; i = localXr.b.length + (j + 0) + i)
    {
      j = i;
      if (!localIterator.hasNext()) {
        break;
      }
      localXr = (xr)localIterator.next();
      j = xh.e(localXr.a);
    }
  }
  
  final void a(xh paramXh)
  {
    if (this.b != null) {
      this.a.a(this.b, paramXh);
    }
    for (;;)
    {
      return;
      Iterator localIterator = this.c.iterator();
      while (localIterator.hasNext())
      {
        xr localXr = (xr)localIterator.next();
        paramXh.d(localXr.a);
        paramXh.b(localXr.b);
      }
    }
  }
  
  final void a(xr paramXr)
  {
    this.c.add(paramXr);
  }
  
  public final xm b()
  {
    int i = 0;
    xm localXm = new xm();
    try
    {
      localXm.a = this.a;
      if (this.c == null) {
        localXm.c = null;
      }
      for (;;)
      {
        if (this.b == null) {
          return localXm;
        }
        if (!(this.b instanceof xp)) {
          break;
        }
        localXm.b = ((xp)this.b).d();
        return localXm;
        localXm.c.addAll(this.c);
      }
      if (!(this.b instanceof byte[])) {
        break label116;
      }
    }
    catch (CloneNotSupportedException localCloneNotSupportedException)
    {
      throw new AssertionError(localCloneNotSupportedException);
    }
    localCloneNotSupportedException.b = ((byte[])this.b).clone();
    return localCloneNotSupportedException;
    label116:
    Object localObject1;
    Object localObject2;
    if ((this.b instanceof byte[][]))
    {
      localObject1 = (byte[][])this.b;
      localObject2 = new byte[localObject1.length][];
      localCloneNotSupportedException.b = localObject2;
      i = 0;
      while (i < localObject1.length)
      {
        localObject2[i] = ((byte[])localObject1[i].clone());
        i += 1;
      }
    }
    if ((this.b instanceof boolean[]))
    {
      localCloneNotSupportedException.b = ((boolean[])this.b).clone();
      return localCloneNotSupportedException;
    }
    if ((this.b instanceof int[]))
    {
      localCloneNotSupportedException.b = ((int[])this.b).clone();
      return localCloneNotSupportedException;
    }
    if ((this.b instanceof long[]))
    {
      localCloneNotSupportedException.b = ((long[])this.b).clone();
      return localCloneNotSupportedException;
    }
    if ((this.b instanceof float[]))
    {
      localCloneNotSupportedException.b = ((float[])this.b).clone();
      return localCloneNotSupportedException;
    }
    if ((this.b instanceof double[]))
    {
      localCloneNotSupportedException.b = ((double[])this.b).clone();
      return localCloneNotSupportedException;
    }
    if ((this.b instanceof xp[]))
    {
      localObject1 = (xp[])this.b;
      localObject2 = new xp[localObject1.length];
      localCloneNotSupportedException.b = localObject2;
      while (i < localObject1.length)
      {
        localObject2[i] = localObject1[i].d();
        i += 1;
      }
    }
    return localCloneNotSupportedException;
  }
  
  public final boolean equals(Object paramObject)
  {
    boolean bool2 = false;
    boolean bool1;
    if (paramObject == this) {
      bool1 = true;
    }
    do
    {
      do
      {
        return bool1;
        bool1 = bool2;
      } while (!(paramObject instanceof xm));
      paramObject = (xm)paramObject;
      if ((this.b == null) || (paramObject.b == null)) {
        break;
      }
      bool1 = bool2;
    } while (this.a != paramObject.a);
    if (!this.a.b.isArray()) {
      return this.b.equals(paramObject.b);
    }
    if ((this.b instanceof byte[])) {
      return Arrays.equals((byte[])this.b, (byte[])paramObject.b);
    }
    if ((this.b instanceof int[])) {
      return Arrays.equals((int[])this.b, (int[])paramObject.b);
    }
    if ((this.b instanceof long[])) {
      return Arrays.equals((long[])this.b, (long[])paramObject.b);
    }
    if ((this.b instanceof float[])) {
      return Arrays.equals((float[])this.b, (float[])paramObject.b);
    }
    if ((this.b instanceof double[])) {
      return Arrays.equals((double[])this.b, (double[])paramObject.b);
    }
    if ((this.b instanceof boolean[])) {
      return Arrays.equals((boolean[])this.b, (boolean[])paramObject.b);
    }
    return Arrays.deepEquals((Object[])this.b, (Object[])paramObject.b);
    if ((this.c != null) && (paramObject.c != null)) {
      return this.c.equals(paramObject.c);
    }
    try
    {
      bool1 = Arrays.equals(c(), paramObject.c());
      return bool1;
    }
    catch (IOException paramObject)
    {
      throw new IllegalStateException(paramObject);
    }
  }
  
  public final int hashCode()
  {
    try
    {
      int i = Arrays.hashCode(c());
      return i + 527;
    }
    catch (IOException localIOException)
    {
      throw new IllegalStateException(localIOException);
    }
  }
}
