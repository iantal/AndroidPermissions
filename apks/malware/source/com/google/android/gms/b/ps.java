package com.google.android.gms.b;

import android.content.Context;
import android.webkit.WebResourceResponse;
import android.webkit.WebView;
import com.google.android.gms.ads.internal.client.AdSizeParcel;
import com.google.android.gms.ads.internal.util.client.VersionInfoParcel;
import com.google.android.gms.ads.internal.util.client.b;
import com.google.android.gms.ads.internal.w;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;

public final class ps
  extends pb
{
  public ps(pa paramPa, boolean paramBoolean)
  {
    super(paramPa, paramBoolean);
  }
  
  public final WebResourceResponse shouldInterceptRequest(WebView paramWebView, String paramString)
  {
    try
    {
      if (!"mraid.js".equalsIgnoreCase(new File(paramString).getName())) {
        return super.shouldInterceptRequest(paramWebView, paramString);
      }
      if (!(paramWebView instanceof pa))
      {
        b.e("Tried to intercept request from a WebView that wasn't an AdWebView.");
        return super.shouldInterceptRequest(paramWebView, paramString);
      }
      Object localObject2 = (pa)paramWebView;
      ((pa)localObject2).i().g();
      if (((pa)localObject2).h().f)
      {
        localObject1 = dh.v;
        localObject1 = (String)w.n().a((cz)localObject1);
      }
      for (;;)
      {
        b.d("shouldInterceptRequest(" + (String)localObject1 + ")");
        localObject2 = ((pa)localObject2).getContext();
        String str = this.a.l().c;
        HashMap localHashMap = new HashMap();
        localHashMap.put("User-Agent", w.e().a((Context)localObject2, str));
        localHashMap.put("Cache-Control", "max-stale=3600");
        localObject1 = (String)new nx((Context)localObject2).a((String)localObject1, localHashMap).get(60L, TimeUnit.SECONDS);
        if (localObject1 != null) {
          break;
        }
        return null;
        if (((pa)localObject2).m())
        {
          localObject1 = dh.u;
          localObject1 = (String)w.n().a((cz)localObject1);
        }
        else
        {
          localObject1 = dh.t;
          localObject1 = (String)w.n().a((cz)localObject1);
        }
      }
      Object localObject1 = new WebResourceResponse("application/javascript", "UTF-8", new ByteArrayInputStream(((String)localObject1).getBytes("UTF-8")));
      return localObject1;
    }
    catch (InterruptedException localInterruptedException)
    {
      b.e("Could not fetch MRAID JS. " + localInterruptedException.getMessage());
      return super.shouldInterceptRequest(paramWebView, paramString);
    }
    catch (TimeoutException localTimeoutException)
    {
      for (;;) {}
    }
    catch (IOException localIOException)
    {
      for (;;) {}
    }
    catch (ExecutionException localExecutionException)
    {
      for (;;) {}
    }
  }
}
