package com.google.android.gms.analytics;

import android.net.Uri;
import android.net.Uri.Builder;
import android.text.TextUtils;
import com.google.android.gms.analytics.a.a;
import com.google.android.gms.analytics.a.b;
import com.google.android.gms.analytics.a.c;
import com.google.android.gms.analytics.internal.ab;
import com.google.android.gms.analytics.internal.ad;
import com.google.android.gms.analytics.internal.ae;
import com.google.android.gms.analytics.internal.ah;
import com.google.android.gms.analytics.internal.d;
import com.google.android.gms.analytics.internal.j;
import com.google.android.gms.analytics.internal.t;
import com.google.android.gms.b.pv;
import com.google.android.gms.b.pw;
import com.google.android.gms.b.px;
import com.google.android.gms.b.py;
import com.google.android.gms.b.tx;
import com.google.android.gms.b.ug;
import com.google.android.gms.b.uj;
import com.google.android.gms.b.uk;
import com.google.android.gms.b.ul;
import com.google.android.gms.b.un;
import com.google.android.gms.b.uo;
import com.google.android.gms.b.up;
import com.google.android.gms.b.uq;
import com.google.android.gms.b.ur;
import com.google.android.gms.b.us;
import com.google.android.gms.common.internal.aq;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public final class v
  extends ab
  implements ug
{
  private static DecimalFormat a;
  private final ae b;
  private final String c;
  private final Uri d;
  private final boolean e;
  private final boolean f;
  
  public v(ae paramAe, String paramString)
  {
    this(paramAe, paramString, (byte)0);
  }
  
  private v(ae paramAe, String paramString, byte paramByte)
  {
    super(paramAe);
    aq.a(paramString);
    this.b = paramAe;
    this.c = paramString;
    this.e = true;
    this.f = false;
    this.d = a(this.c);
  }
  
  static Uri a(String paramString)
  {
    aq.a(paramString);
    Uri.Builder localBuilder = new Uri.Builder();
    localBuilder.scheme("uri");
    localBuilder.authority("google-analytics.com");
    localBuilder.path(paramString);
    return localBuilder.build();
  }
  
  private static String a(double paramDouble)
  {
    if (a == null) {
      a = new DecimalFormat("0.######");
    }
    return a.format(paramDouble);
  }
  
  private static void a(Map<String, String> paramMap, String paramString, double paramDouble)
  {
    if (paramDouble != 0.0D) {
      paramMap.put(paramString, a(paramDouble));
    }
  }
  
  private static void a(Map<String, String> paramMap, String paramString, int paramInt1, int paramInt2)
  {
    if ((paramInt1 > 0) && (paramInt2 > 0)) {
      paramMap.put(paramString, paramInt1 + "x" + paramInt2);
    }
  }
  
  private static void a(Map<String, String> paramMap, String paramString1, String paramString2)
  {
    if (!TextUtils.isEmpty(paramString2)) {
      paramMap.put(paramString1, paramString2);
    }
  }
  
  private static void a(Map<String, String> paramMap, String paramString, boolean paramBoolean)
  {
    if (paramBoolean) {
      paramMap.put(paramString, "1");
    }
  }
  
  private static Map<String, String> b(tx paramTx)
  {
    HashMap localHashMap = new HashMap();
    Object localObject1 = (px)paramTx.a(px.class);
    Object localObject3;
    Object localObject4;
    Object localObject2;
    if (localObject1 != null)
    {
      localObject3 = ((px)localObject1).a().entrySet().iterator();
      label195:
      while (((Iterator)localObject3).hasNext())
      {
        localObject4 = (Map.Entry)((Iterator)localObject3).next();
        localObject1 = ((Map.Entry)localObject4).getValue();
        if (localObject1 == null) {
          localObject1 = null;
        }
        for (;;)
        {
          if (localObject1 == null) {
            break label195;
          }
          localHashMap.put(((Map.Entry)localObject4).getKey(), localObject1);
          break;
          if ((localObject1 instanceof String))
          {
            localObject2 = (String)localObject1;
            localObject1 = localObject2;
            if (TextUtils.isEmpty((CharSequence)localObject2)) {
              localObject1 = null;
            }
          }
          else if ((localObject1 instanceof Double))
          {
            localObject1 = (Double)localObject1;
            if (((Double)localObject1).doubleValue() != 0.0D) {
              localObject1 = a(((Double)localObject1).doubleValue());
            } else {
              localObject1 = null;
            }
          }
          else if ((localObject1 instanceof Boolean))
          {
            if (localObject1 != Boolean.FALSE) {
              localObject1 = "1";
            } else {
              localObject1 = null;
            }
          }
          else
          {
            localObject1 = String.valueOf(localObject1);
          }
        }
      }
    }
    localObject1 = (py)paramTx.a(py.class);
    if (localObject1 != null)
    {
      a(localHashMap, "t", ((py)localObject1).a());
      a(localHashMap, "cid", ((py)localObject1).b());
      a(localHashMap, "uid", ((py)localObject1).c());
      a(localHashMap, "sc", ((py)localObject1).f());
      a(localHashMap, "sf", ((py)localObject1).i());
      a(localHashMap, "ni", ((py)localObject1).g());
      a(localHashMap, "adid", ((py)localObject1).d());
      a(localHashMap, "ate", ((py)localObject1).e());
    }
    localObject1 = (uq)paramTx.a(uq.class);
    if (localObject1 != null)
    {
      a(localHashMap, "cd", ((uq)localObject1).a());
      a(localHashMap, "a", ((uq)localObject1).b());
      a(localHashMap, "dr", ((uq)localObject1).e());
    }
    localObject1 = (uo)paramTx.a(uo.class);
    if (localObject1 != null)
    {
      a(localHashMap, "ec", ((uo)localObject1).a());
      a(localHashMap, "ea", ((uo)localObject1).b());
      a(localHashMap, "el", ((uo)localObject1).c());
      a(localHashMap, "ev", ((uo)localObject1).d());
    }
    localObject1 = (uk)paramTx.a(uk.class);
    if (localObject1 != null)
    {
      a(localHashMap, "cn", ((uk)localObject1).a());
      a(localHashMap, "cs", ((uk)localObject1).b());
      a(localHashMap, "cm", ((uk)localObject1).c());
      a(localHashMap, "ck", ((uk)localObject1).d());
      a(localHashMap, "cc", ((uk)localObject1).e());
      a(localHashMap, "ci", ((uk)localObject1).f());
      a(localHashMap, "anid", ((uk)localObject1).g());
      a(localHashMap, "gclid", ((uk)localObject1).h());
      a(localHashMap, "dclid", ((uk)localObject1).i());
      a(localHashMap, "aclid", ((uk)localObject1).j());
    }
    localObject1 = (up)paramTx.a(up.class);
    if (localObject1 != null)
    {
      a(localHashMap, "exd", ((up)localObject1).a());
      a(localHashMap, "exf", ((up)localObject1).b());
    }
    localObject1 = (ur)paramTx.a(ur.class);
    if (localObject1 != null)
    {
      a(localHashMap, "sn", ((ur)localObject1).a());
      a(localHashMap, "sa", ((ur)localObject1).b());
      a(localHashMap, "st", ((ur)localObject1).c());
    }
    localObject1 = (us)paramTx.a(us.class);
    if (localObject1 != null)
    {
      a(localHashMap, "utv", ((us)localObject1).a());
      a(localHashMap, "utt", ((us)localObject1).b());
      a(localHashMap, "utc", ((us)localObject1).c());
      a(localHashMap, "utl", ((us)localObject1).d());
    }
    localObject1 = (pv)paramTx.a(pv.class);
    if (localObject1 != null)
    {
      localObject1 = ((pv)localObject1).a().entrySet().iterator();
      while (((Iterator)localObject1).hasNext())
      {
        localObject2 = (Map.Entry)((Iterator)localObject1).next();
        localObject3 = w.a(((Integer)((Map.Entry)localObject2).getKey()).intValue());
        if (!TextUtils.isEmpty((CharSequence)localObject3)) {
          localHashMap.put(localObject3, ((Map.Entry)localObject2).getValue());
        }
      }
    }
    localObject1 = (pw)paramTx.a(pw.class);
    if (localObject1 != null)
    {
      localObject1 = ((pw)localObject1).a().entrySet().iterator();
      while (((Iterator)localObject1).hasNext())
      {
        localObject2 = (Map.Entry)((Iterator)localObject1).next();
        localObject3 = w.b(((Integer)((Map.Entry)localObject2).getKey()).intValue());
        if (!TextUtils.isEmpty((CharSequence)localObject3)) {
          localHashMap.put(localObject3, a(((Double)((Map.Entry)localObject2).getValue()).doubleValue()));
        }
      }
    }
    localObject1 = (un)paramTx.a(un.class);
    if (localObject1 != null)
    {
      localObject2 = ((un)localObject1).a();
      if (localObject2 != null)
      {
        localObject2 = ((b)localObject2).a().entrySet().iterator();
        while (((Iterator)localObject2).hasNext())
        {
          localObject3 = (Map.Entry)((Iterator)localObject2).next();
          if (((String)((Map.Entry)localObject3).getKey()).startsWith("&")) {
            localHashMap.put(((String)((Map.Entry)localObject3).getKey()).substring(1), ((Map.Entry)localObject3).getValue());
          } else {
            localHashMap.put(((Map.Entry)localObject3).getKey(), ((Map.Entry)localObject3).getValue());
          }
        }
      }
      localObject2 = ((un)localObject1).d().iterator();
      int i = 1;
      while (((Iterator)localObject2).hasNext())
      {
        localHashMap.putAll(((c)((Iterator)localObject2).next()).e(w.f(i)));
        i += 1;
      }
      localObject2 = ((un)localObject1).b().iterator();
      i = 1;
      while (((Iterator)localObject2).hasNext())
      {
        localHashMap.putAll(((a)((Iterator)localObject2).next()).g(w.d(i)));
        i += 1;
      }
      localObject1 = ((un)localObject1).c().entrySet().iterator();
      i = 1;
      while (((Iterator)localObject1).hasNext())
      {
        localObject2 = (Map.Entry)((Iterator)localObject1).next();
        localObject4 = (List)((Map.Entry)localObject2).getValue();
        localObject3 = w.i(i);
        localObject4 = ((List)localObject4).iterator();
        int j = 1;
        while (((Iterator)localObject4).hasNext())
        {
          localHashMap.putAll(((a)((Iterator)localObject4).next()).g((String)localObject3 + w.g(j)));
          j += 1;
        }
        if (!TextUtils.isEmpty((CharSequence)((Map.Entry)localObject2).getKey())) {
          localHashMap.put((String)localObject3 + "nm", ((Map.Entry)localObject2).getKey());
        }
        i += 1;
      }
    }
    localObject1 = (ul)paramTx.a(ul.class);
    if (localObject1 != null)
    {
      a(localHashMap, "ul", ((ul)localObject1).f());
      a(localHashMap, "sd", ((ul)localObject1).a());
      a(localHashMap, "sr", ((ul)localObject1).b(), ((ul)localObject1).c());
      a(localHashMap, "vp", ((ul)localObject1).d(), ((ul)localObject1).e());
    }
    paramTx = (uj)paramTx.a(uj.class);
    if (paramTx != null)
    {
      a(localHashMap, "an", paramTx.a());
      a(localHashMap, "aid", paramTx.c());
      a(localHashMap, "aiid", paramTx.d());
      a(localHashMap, "av", paramTx.b());
    }
    return localHashMap;
  }
  
  public final Uri a()
  {
    return this.d;
  }
  
  public final void a(tx paramTx)
  {
    aq.a(paramTx);
    aq.b(paramTx.f(), "Can't deliver not submitted measurement");
    aq.c("deliver should be called on worker thread");
    Object localObject1 = paramTx.a();
    Object localObject2 = (py)((tx)localObject1).b(py.class);
    if (TextUtils.isEmpty(((py)localObject2).a())) {
      o().a(b((tx)localObject1), "Ignoring measurement without type");
    }
    do
    {
      return;
      if (TextUtils.isEmpty(((py)localObject2).b()))
      {
        o().a(b((tx)localObject1), "Ignoring measurement without client id");
        return;
      }
    } while (this.b.j().g());
    double d1 = ((py)localObject2).i();
    if (t.a(d1, ((py)localObject2).b()))
    {
      b("Sampling enabled. Hit sampled out. sampling rate", Double.valueOf(d1));
      return;
    }
    localObject1 = b((tx)localObject1);
    ((Map)localObject1).put("v", "1");
    ((Map)localObject1).put("_v", ad.b);
    ((Map)localObject1).put("tid", this.c);
    if (this.b.j().d())
    {
      paramTx = new StringBuilder();
      localObject1 = ((Map)localObject1).entrySet().iterator();
      while (((Iterator)localObject1).hasNext())
      {
        localObject2 = (Map.Entry)((Iterator)localObject1).next();
        if (paramTx.length() != 0) {
          paramTx.append(", ");
        }
        paramTx.append((String)((Map.Entry)localObject2).getKey());
        paramTx.append("=");
        paramTx.append((String)((Map.Entry)localObject2).getValue());
      }
      c("Dry run is enabled. GoogleAnalytics would have sent", paramTx.toString());
      return;
    }
    HashMap localHashMap = new HashMap();
    t.a(localHashMap, "uid", ((py)localObject2).c());
    Object localObject3 = (uj)paramTx.a(uj.class);
    if (localObject3 != null)
    {
      t.a(localHashMap, "an", ((uj)localObject3).a());
      t.a(localHashMap, "aid", ((uj)localObject3).c());
      t.a(localHashMap, "av", ((uj)localObject3).b());
      t.a(localHashMap, "aiid", ((uj)localObject3).d());
    }
    localObject3 = ((py)localObject2).b();
    String str = this.c;
    if (!TextUtils.isEmpty(((py)localObject2).d())) {}
    for (boolean bool = true;; bool = false)
    {
      localObject2 = new ah((String)localObject3, str, bool, 0L, localHashMap);
      ((Map)localObject1).put("_s", String.valueOf(s().a((ah)localObject2)));
      paramTx = new d(o(), (Map)localObject1, paramTx.d(), true);
      s().a(paramTx);
      return;
    }
  }
}
