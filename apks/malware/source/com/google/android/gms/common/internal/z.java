package com.google.android.gms.common.internal;

import android.content.Context;
import android.content.ServiceConnection;
import android.os.Handler;
import android.os.Handler.Callback;
import android.os.Message;
import com.google.android.gms.common.stats.b;
import java.util.HashMap;

final class z
  extends y
  implements Handler.Callback
{
  private final HashMap<aa, ab> a = new HashMap();
  private final Context b;
  private final Handler c;
  private final b d;
  private final long e;
  
  z(Context paramContext)
  {
    this.b = paramContext.getApplicationContext();
    this.c = new Handler(paramContext.getMainLooper(), this);
    this.d = b.a();
    this.e = 5000L;
  }
  
  private boolean a(aa paramAa, ServiceConnection paramServiceConnection, String paramString)
  {
    aq.a(paramServiceConnection, "ServiceConnection must not be null");
    for (;;)
    {
      ab localAb;
      synchronized (this.a)
      {
        localAb = (ab)this.a.get(paramAa);
        if (localAb == null)
        {
          localAb = new ab(this, paramAa);
          localAb.a(paramServiceConnection, paramString);
          localAb.a(paramString);
          this.a.put(paramAa, localAb);
          paramAa = localAb;
          boolean bool = paramAa.b();
          return bool;
        }
        this.c.removeMessages(0, localAb);
        if (localAb.b(paramServiceConnection)) {
          throw new IllegalStateException("Trying to bind a GmsServiceConnection that was already connected before.  config=" + paramAa);
        }
      }
      localAb.a(paramServiceConnection, paramString);
      switch (localAb.c())
      {
      case 1: 
        paramServiceConnection.onServiceConnected(localAb.f(), localAb.e());
        paramAa = localAb;
        break;
      case 2: 
        localAb.a(paramString);
        paramAa = localAb;
        break;
      default: 
        paramAa = localAb;
      }
    }
  }
  
  public final void a(String arg1, ServiceConnection paramServiceConnection)
  {
    aa localAa = new aa(???);
    aq.a(paramServiceConnection, "ServiceConnection must not be null");
    ab localAb;
    synchronized (this.a)
    {
      localAb = (ab)this.a.get(localAa);
      if (localAb == null) {
        throw new IllegalStateException("Nonexistent connection status for service config: " + localAa);
      }
    }
    if (!localAb.b(paramServiceConnection)) {
      throw new IllegalStateException("Trying to unbind a GmsServiceConnection  that was not bound before.  config=" + localAa);
    }
    localAb.a(paramServiceConnection);
    if (localAb.d())
    {
      paramServiceConnection = this.c.obtainMessage(0, localAb);
      this.c.sendMessageDelayed(paramServiceConnection, this.e);
    }
  }
  
  public final boolean a(String paramString1, ServiceConnection paramServiceConnection, String paramString2)
  {
    return a(new aa(paramString1), paramServiceConnection, paramString2);
  }
  
  public final boolean handleMessage(Message arg1)
  {
    switch (???.what)
    {
    default: 
      return false;
    }
    ab localAb = (ab)???.obj;
    synchronized (this.a)
    {
      if (localAb.d())
      {
        if (localAb.b()) {
          localAb.a();
        }
        this.a.remove(ab.a(localAb));
      }
      return true;
    }
  }
}
