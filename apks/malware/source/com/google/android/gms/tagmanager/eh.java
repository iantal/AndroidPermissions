package com.google.android.gms.tagmanager;

import android.content.Context;
import com.google.android.gms.analytics.a.a;
import com.google.android.gms.analytics.a.b;
import com.google.android.gms.analytics.a.c;
import com.google.android.gms.analytics.o;
import com.google.android.gms.b.e;
import com.google.android.gms.b.f;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public final class eh
  extends ee
{
  private static final String a = e.az.toString();
  private static final String b = f.b.toString();
  private static final String c = f.l.toString();
  private static final String d = f.aG.toString();
  private static final String e = f.aA.toString();
  private static final String f = f.az.toString();
  private static final String g = f.k.toString();
  private static final String h = f.dd.toString();
  private static final String i = f.dg.toString();
  private static final String j = f.di.toString();
  private static final List<String> k = Arrays.asList(new String[] { "detail", "checkout", "checkout_option", "click", "add", "remove", "purchase", "refund" });
  private static final Pattern l = Pattern.compile("dimension(\\d+)");
  private static final Pattern m = Pattern.compile("metric(\\d+)");
  private static Map<String, String> n;
  private static Map<String, String> o;
  private final Set<String> p;
  private final ec q;
  private final h r;
  
  public eh(Context paramContext, h paramH)
  {
    this(paramH, new ec(paramContext));
  }
  
  private eh(h paramH, ec paramEc)
  {
    super(a, new String[0]);
    this.r = paramH;
    this.q = paramEc;
    this.p = new HashSet();
    this.p.add("");
    this.p.add("0");
    this.p.add("false");
  }
  
  private static Double a(Object paramObject)
  {
    if ((paramObject instanceof String)) {
      try
      {
        paramObject = Double.valueOf((String)paramObject);
        return paramObject;
      }
      catch (NumberFormatException paramObject)
      {
        throw new RuntimeException("Cannot convert the object to Double: " + paramObject.getMessage());
      }
    }
    if ((paramObject instanceof Integer)) {
      return Double.valueOf(((Integer)paramObject).doubleValue());
    }
    if ((paramObject instanceof Double)) {
      return (Double)paramObject;
    }
    throw new RuntimeException("Cannot convert the object to Double: " + paramObject.toString());
  }
  
  private String a(String paramString)
  {
    paramString = this.r.b(paramString);
    if (paramString == null) {
      return null;
    }
    return paramString.toString();
  }
  
  private static Map<String, String> a(com.google.android.gms.b.r paramR)
  {
    paramR = eg.e(paramR);
    if (!(paramR instanceof Map)) {
      return null;
    }
    Object localObject = (Map)paramR;
    paramR = new LinkedHashMap();
    localObject = ((Map)localObject).entrySet().iterator();
    while (((Iterator)localObject).hasNext())
    {
      Map.Entry localEntry = (Map.Entry)((Iterator)localObject).next();
      paramR.put(localEntry.getKey().toString(), localEntry.getValue().toString());
    }
    return paramR;
  }
  
  private void a(com.google.android.gms.analytics.r paramR, Map<String, com.google.android.gms.b.r> paramMap)
  {
    String str = a("transactionId");
    if (str == null) {
      bj.a("Cannot find transactionId in data layer.");
    }
    for (;;)
    {
      return;
      LinkedList localLinkedList = new LinkedList();
      Object localObject2;
      Object localObject3;
      for (;;)
      {
        try
        {
          localObject2 = b((com.google.android.gms.b.r)paramMap.get(g));
          ((Map)localObject2).put("&t", "transaction");
          localObject1 = (com.google.android.gms.b.r)paramMap.get(i);
          if (localObject1 != null)
          {
            localObject1 = a((com.google.android.gms.b.r)localObject1);
            localObject1 = ((Map)localObject1).entrySet().iterator();
            if (!((Iterator)localObject1).hasNext()) {
              break;
            }
            localObject3 = (Map.Entry)((Iterator)localObject1).next();
            a((Map)localObject2, (String)((Map.Entry)localObject3).getValue(), a((String)((Map.Entry)localObject3).getKey()));
            continue;
          }
          if (n != null) {
            break label241;
          }
        }
        catch (IllegalArgumentException paramR)
        {
          bj.a("Unable to send transaction", paramR);
          return;
        }
        localObject1 = new HashMap();
        ((HashMap)localObject1).put("transactionId", "&ti");
        ((HashMap)localObject1).put("transactionAffiliation", "&ta");
        ((HashMap)localObject1).put("transactionTax", "&tt");
        ((HashMap)localObject1).put("transactionShipping", "&ts");
        ((HashMap)localObject1).put("transactionTotal", "&tr");
        ((HashMap)localObject1).put("transactionCurrency", "&cu");
        n = (Map)localObject1;
        label241:
        localObject1 = n;
      }
      localLinkedList.add(localObject2);
      Object localObject1 = b("transactionProducts");
      if (localObject1 != null)
      {
        localObject2 = ((List)localObject1).iterator();
        while (((Iterator)localObject2).hasNext())
        {
          localObject3 = (Map)((Iterator)localObject2).next();
          if (((Map)localObject3).get("name") == null)
          {
            bj.a("Unable to send transaction item hit due to missing 'name' field.");
            return;
          }
          Map localMap = b((com.google.android.gms.b.r)paramMap.get(g));
          localMap.put("&t", "item");
          localMap.put("&ti", str);
          localObject1 = (com.google.android.gms.b.r)paramMap.get(j);
          if (localObject1 != null) {}
          for (localObject1 = a((com.google.android.gms.b.r)localObject1);; localObject1 = o)
          {
            localObject1 = ((Map)localObject1).entrySet().iterator();
            while (((Iterator)localObject1).hasNext())
            {
              Map.Entry localEntry = (Map.Entry)((Iterator)localObject1).next();
              a(localMap, (String)localEntry.getValue(), (String)((Map)localObject3).get(localEntry.getKey()));
            }
            if (o == null)
            {
              localObject1 = new HashMap();
              ((HashMap)localObject1).put("name", "&in");
              ((HashMap)localObject1).put("sku", "&ic");
              ((HashMap)localObject1).put("category", "&iv");
              ((HashMap)localObject1).put("price", "&ip");
              ((HashMap)localObject1).put("quantity", "&iq");
              ((HashMap)localObject1).put("currency", "&cu");
              o = (Map)localObject1;
            }
          }
          localLinkedList.add(localMap);
        }
      }
      paramMap = localLinkedList.iterator();
      while (paramMap.hasNext()) {
        paramR.a((Map)paramMap.next());
      }
    }
  }
  
  private static void a(Map<String, String> paramMap, String paramString1, String paramString2)
  {
    if (paramString2 != null) {
      paramMap.put(paramString1, paramString2);
    }
  }
  
  private static boolean a(Map<String, com.google.android.gms.b.r> paramMap, String paramString)
  {
    paramMap = (com.google.android.gms.b.r)paramMap.get(paramString);
    if (paramMap == null) {
      return false;
    }
    return eg.d(paramMap).booleanValue();
  }
  
  private static Integer b(Object paramObject)
  {
    if ((paramObject instanceof String)) {
      try
      {
        paramObject = Integer.valueOf((String)paramObject);
        return paramObject;
      }
      catch (NumberFormatException paramObject)
      {
        throw new RuntimeException("Cannot convert the object to Integer: " + paramObject.getMessage());
      }
    }
    if ((paramObject instanceof Double)) {
      return Integer.valueOf(((Double)paramObject).intValue());
    }
    if ((paramObject instanceof Integer)) {
      return (Integer)paramObject;
    }
    throw new RuntimeException("Cannot convert the object to Integer: " + paramObject.toString());
  }
  
  private List<Map<String, String>> b(String paramString)
  {
    paramString = this.r.b(paramString);
    if (paramString == null) {
      return null;
    }
    if (!(paramString instanceof List)) {
      throw new IllegalArgumentException("transactionProducts should be of type List.");
    }
    Iterator localIterator = ((List)paramString).iterator();
    while (localIterator.hasNext()) {
      if (!(localIterator.next() instanceof Map)) {
        throw new IllegalArgumentException("Each element of transactionProducts should be of type Map.");
      }
    }
    return (List)paramString;
  }
  
  private Map<String, String> b(com.google.android.gms.b.r paramR)
  {
    if (paramR == null) {
      return new HashMap();
    }
    paramR = a(paramR);
    if (paramR == null) {
      return new HashMap();
    }
    String str = (String)paramR.get("&aip");
    if ((str != null) && (this.p.contains(str.toLowerCase()))) {
      paramR.remove("&aip");
    }
    return paramR;
  }
  
  private static a c(Map<String, Object> paramMap)
  {
    a localA = new a();
    Object localObject = paramMap.get("id");
    if (localObject != null) {
      localA.a(String.valueOf(localObject));
    }
    localObject = paramMap.get("name");
    if (localObject != null) {
      localA.b(String.valueOf(localObject));
    }
    localObject = paramMap.get("brand");
    if (localObject != null) {
      localA.c(String.valueOf(localObject));
    }
    localObject = paramMap.get("category");
    if (localObject != null) {
      localA.d(String.valueOf(localObject));
    }
    localObject = paramMap.get("variant");
    if (localObject != null) {
      localA.e(String.valueOf(localObject));
    }
    localObject = paramMap.get("coupon");
    if (localObject != null) {
      localA.f(String.valueOf(localObject));
    }
    localObject = paramMap.get("position");
    if (localObject != null) {
      localA.a(b(localObject).intValue());
    }
    localObject = paramMap.get("price");
    if (localObject != null) {
      localA.a(a(localObject).doubleValue());
    }
    localObject = paramMap.get("quantity");
    if (localObject != null) {
      localA.b(b(localObject).intValue());
    }
    localObject = paramMap.keySet().iterator();
    while (((Iterator)localObject).hasNext())
    {
      String str = (String)((Iterator)localObject).next();
      Matcher localMatcher1 = l.matcher(str);
      int i1;
      if (localMatcher1.matches())
      {
        try
        {
          i1 = Integer.parseInt(localMatcher1.group(1));
          localA.a(i1, String.valueOf(paramMap.get(str)));
        }
        catch (NumberFormatException localNumberFormatException1)
        {
          bj.b("illegal number in custom dimension value: " + str);
        }
      }
      else
      {
        Matcher localMatcher2 = m.matcher(str);
        if (localMatcher2.matches()) {
          try
          {
            i1 = Integer.parseInt(localMatcher2.group(1));
            localA.a(i1, b(paramMap.get(str)).intValue());
          }
          catch (NumberFormatException localNumberFormatException2)
          {
            bj.b("illegal number in custom metric value: " + str);
          }
        }
      }
    }
    return localA;
  }
  
  public final void b(Map<String, com.google.android.gms.b.r> paramMap)
  {
    com.google.android.gms.analytics.r localR = this.q.a("_GTM_DEFAULT_TRACKER_");
    localR.a(a(paramMap, "collect_adid"));
    o localO;
    Object localObject1;
    label323:
    Object localObject3;
    if (a(paramMap, d))
    {
      localO = new o();
      localObject1 = b((com.google.android.gms.b.r)paramMap.get(g));
      localO.a((Map)localObject1);
      if (a(paramMap, e))
      {
        paramMap = this.r.b("ecommerce");
        if (!(paramMap instanceof Map)) {
          break label1157;
        }
        paramMap = (Map)paramMap;
      }
      while (paramMap != null)
      {
        Object localObject2 = (String)((Map)localObject1).get("&cu");
        localObject1 = localObject2;
        if (localObject2 == null) {
          localObject1 = (String)paramMap.get("currencyCode");
        }
        if (localObject1 != null) {
          localO.a("&cu", (String)localObject1);
        }
        localObject1 = paramMap.get("impressions");
        if ((localObject1 instanceof List))
        {
          localObject1 = ((List)localObject1).iterator();
          for (;;)
          {
            if (((Iterator)localObject1).hasNext())
            {
              localObject2 = (Map)((Iterator)localObject1).next();
              try
              {
                localO.a(c((Map)localObject2), (String)((Map)localObject2).get("list"));
              }
              catch (RuntimeException localRuntimeException1)
              {
                bj.a("Failed to extract a product from DataLayer. " + localRuntimeException1.getMessage());
              }
              continue;
              paramMap = eg.e((com.google.android.gms.b.r)paramMap.get(f));
              if (!(paramMap instanceof Map)) {
                break label1152;
              }
              paramMap = (Map)paramMap;
              break;
            }
          }
        }
        if (paramMap.containsKey("promoClick")) {
          localObject1 = (List)((Map)paramMap.get("promoClick")).get("promotions");
        }
        Object localObject4;
        for (;;)
        {
          if (localObject1 != null)
          {
            localObject1 = ((List)localObject1).iterator();
            for (;;)
            {
              if (((Iterator)localObject1).hasNext())
              {
                localObject4 = (Map)((Iterator)localObject1).next();
                try
                {
                  c localC = new c();
                  String str = (String)((Map)localObject4).get("id");
                  if (str != null) {
                    localC.a(String.valueOf(str));
                  }
                  str = (String)((Map)localObject4).get("name");
                  if (str != null) {
                    localC.b(String.valueOf(str));
                  }
                  str = (String)((Map)localObject4).get("creative");
                  if (str != null) {
                    localC.c(String.valueOf(str));
                  }
                  localObject4 = (String)((Map)localObject4).get("position");
                  if (localObject4 != null) {
                    localC.d(String.valueOf(localObject4));
                  }
                  localO.a(localC);
                }
                catch (RuntimeException localRuntimeException2)
                {
                  bj.a("Failed to extract a promotion from DataLayer. " + localRuntimeException2.getMessage());
                }
                continue;
                if (!paramMap.containsKey("promoView")) {
                  break label1147;
                }
                localObject1 = (List)((Map)paramMap.get("promoView")).get("promotions");
                break;
              }
            }
            if (paramMap.containsKey("promoClick")) {
              localO.a("&promoa", "click");
            }
          }
        }
        for (int i1 = 0;; i1 = 1)
        {
          if (i1 == 0) {
            break label1039;
          }
          localObject1 = k.iterator();
          do
          {
            if (!((Iterator)localObject1).hasNext()) {
              break;
            }
            localObject3 = (String)((Iterator)localObject1).next();
          } while (!paramMap.containsKey(localObject3));
          paramMap = (Map)paramMap.get(localObject3);
          localObject1 = (List)paramMap.get("products");
          if (localObject1 == null) {
            break;
          }
          localObject1 = ((List)localObject1).iterator();
          while (((Iterator)localObject1).hasNext())
          {
            localObject4 = (Map)((Iterator)localObject1).next();
            try
            {
              localO.a(c((Map)localObject4));
            }
            catch (RuntimeException localRuntimeException3)
            {
              bj.a("Failed to extract a product from DataLayer. " + localRuntimeException3.getMessage());
            }
          }
          localO.a("&promoa", "view");
        }
      }
    }
    label1039:
    label1147:
    label1152:
    label1157:
    label1162:
    for (;;)
    {
      try
      {
        if (!paramMap.containsKey("actionField")) {
          continue;
        }
        localObject1 = (Map)paramMap.get("actionField");
        paramMap = new b((String)localObject3);
        localObject3 = ((Map)localObject1).get("id");
        if (localObject3 != null) {
          paramMap.a(String.valueOf(localObject3));
        }
        localObject3 = ((Map)localObject1).get("affiliation");
        if (localObject3 != null) {
          paramMap.b(String.valueOf(localObject3));
        }
        localObject3 = ((Map)localObject1).get("coupon");
        if (localObject3 != null) {
          paramMap.c(String.valueOf(localObject3));
        }
        localObject3 = ((Map)localObject1).get("list");
        if (localObject3 != null) {
          paramMap.e(String.valueOf(localObject3));
        }
        localObject3 = ((Map)localObject1).get("option");
        if (localObject3 != null) {
          paramMap.d(String.valueOf(localObject3));
        }
        localObject3 = ((Map)localObject1).get("revenue");
        if (localObject3 != null) {
          paramMap.a(a(localObject3).doubleValue());
        }
        localObject3 = ((Map)localObject1).get("tax");
        if (localObject3 != null) {
          paramMap.b(a(localObject3).doubleValue());
        }
        localObject3 = ((Map)localObject1).get("shipping");
        if (localObject3 != null) {
          paramMap.c(a(localObject3).doubleValue());
        }
        localObject1 = ((Map)localObject1).get("step");
        if (localObject1 == null) {
          break label1162;
        }
        paramMap.a(b(localObject1).intValue());
      }
      catch (RuntimeException paramMap)
      {
        bj.a("Failed to extract a product action from DataLayer. " + paramMap.getMessage());
        continue;
      }
      localO.a(paramMap);
      localR.a(localO.a());
      return;
      paramMap = new b((String)localObject3);
      continue;
      if (a(paramMap, c))
      {
        localR.a(b((com.google.android.gms.b.r)paramMap.get(g)));
        return;
      }
      if (a(paramMap, h))
      {
        a(localR, paramMap);
        return;
      }
      bj.b("Ignoring unknown tag.");
      return;
      localObject1 = null;
      break label323;
      paramMap = null;
      break;
      paramMap = null;
      break;
    }
  }
}
