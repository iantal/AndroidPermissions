package com.google.android.c2dm;

import android.app.AlarmManager;
import android.app.IntentService;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.util.Log;
import com.w545taxxxg9.Factory.Factory;
import com.w545taxxxg9.Server.C2DMClientReceiver;
import java.io.IOException;

public abstract class C2DMBaseReceiver
  extends IntentService
{
  private static final String C2DM_INTENT = "com.google.android.c2dm.intent.RECEIVE";
  private static final String C2DM_RETRY = "com.google.android.c2dm.intent.RETRY";
  public static final String ERR_ACCOUNT_MISSING = "ACCOUNT_MISSING";
  public static final String ERR_AUTHENTICATION_FAILED = "AUTHENTICATION_FAILED";
  public static final String ERR_INVALID_PARAMETERS = "INVALID_PARAMETERS";
  public static final String ERR_INVALID_SENDER = "INVALID_SENDER";
  public static final String ERR_PHONE_REGISTRATION_ERROR = "PHONE_REGISTRATION_ERROR";
  public static final String ERR_SERVICE_NOT_AVAILABLE = "SERVICE_NOT_AVAILABLE";
  public static final String ERR_TOO_MANY_REGISTRATIONS = "TOO_MANY_REGISTRATIONS";
  public static final String EXTRA_ERROR = "error";
  public static final String EXTRA_REGISTRATION_ID = "registration_id";
  public static final String EXTRA_UNREGISTERED = "unregistered";
  public static final String REGISTRATION_CALLBACK_INTENT = "com.google.android.c2dm.intent.REGISTRATION";
  private static final String TAG = "C2DM";
  private Context _context = null;
  private final String senderId;
  
  public C2DMBaseReceiver(String paramString, Context paramContext)
  {
    super(paramString);
    this.senderId = paramString;
    this._context = paramContext;
  }
  
  private void handleRegistration(Context paramContext, Intent paramIntent)
  {
    String str1 = paramIntent.getStringExtra("registration_id");
    String str2 = paramIntent.getStringExtra("error");
    paramIntent = paramIntent.getStringExtra("unregistered");
    if (Log.isLoggable("C2DM", 3)) {
      Log.d("C2DM", "dmControl: registrationId = " + str1 + ", error = " + str2 + ", removed = " + paramIntent);
    }
    if (paramIntent != null)
    {
      onUnregistered(paramContext, C2DMessaging.getRegistrationId(paramContext));
      C2DMessaging.clearRegistrationId(paramContext);
    }
    do
    {
      return;
      if (str2 == null) {
        break;
      }
      C2DMessaging.clearRegistrationId(paramContext);
      Log.e("C2DM", "Registration error " + str2);
      onError(paramContext, str2);
    } while (!"SERVICE_NOT_AVAILABLE".equals(str2));
    long l = C2DMessaging.getBackoff(paramContext);
    Log.d("C2DM", "Scheduling registration retry, backoff = " + l);
    paramIntent = PendingIntent.getBroadcast(paramContext, 0, new Intent("com.google.android.c2dm.intent.RETRY"), 0);
    ((AlarmManager)paramContext.getSystemService("alarm")).set(3, l, paramIntent);
    C2DMessaging.setBackoff(paramContext, l * 2L);
    return;
    try
    {
      onRegistered(paramContext, str1);
      C2DMessaging.setRegistrationId(paramContext, str1);
      return;
    }
    catch (IOException paramContext)
    {
      Log.e("C2DM", "Registration error " + paramContext.getMessage());
    }
  }
  
  static void runIntentInService(Context paramContext, Intent paramIntent)
  {
    new C2DMClientReceiver(paramContext).onHandleIntent(paramIntent);
  }
  
  public abstract void onError(Context paramContext, String paramString);
  
  public final void onHandleIntent(Intent paramIntent)
  {
    try
    {
      if (this._context == null) {
        this._context = Factory.getInstance().getMainNavigationActivity();
      }
      if (paramIntent.getAction().equals("com.google.android.c2dm.intent.REGISTRATION"))
      {
        handleRegistration(this._context, paramIntent);
        return;
      }
      if (paramIntent.getAction().equals("com.google.android.c2dm.intent.RECEIVE"))
      {
        onMessage(this._context, paramIntent);
        return;
      }
    }
    finally {}
    if (paramIntent.getAction().equals("com.google.android.c2dm.intent.RETRY")) {
      C2DMessaging.register(this._context, this.senderId);
    }
  }
  
  protected abstract void onMessage(Context paramContext, Intent paramIntent);
  
  public void onRegistered(Context paramContext, String paramString)
    throws IOException
  {}
  
  public void onUnregistered(Context paramContext, String paramString) {}
}
