package com.umpay.huafubao.c;

import android.content.Context;
import android.os.Build;
import android.os.Build.VERSION;
import com.umpay.huafubao.b.a;
import com.umpay.huafubao.b.p;
import com.umpay.huafubao.b.r;
import java.io.UnsupportedEncodingException;
import org.apache.http.client.methods.HttpEntityEnclosingRequestBase;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.protocol.HttpContext;

public final class d
{
  private static a a = null;
  private static p b = null;
  
  private static p a()
  {
    if (b == null)
    {
      p localP = new p();
      b = localP;
      localP.c();
    }
    return b;
  }
  
  public static void a(Context paramContext)
  {
    a().a(paramContext);
  }
  
  public static void a(Context paramContext, String paramString)
  {
    e localE = new e(paramContext, g.j);
    localE.a("model", Build.MODEL);
    localE.a("mobileos", Build.VERSION.RELEASE);
    localE.a("merId", paramString);
    paramContext = new b(paramContext);
    paramContext.e = true;
    paramContext.f = false;
    a(localE, paramContext, 0);
  }
  
  public static void a(e paramE, r paramR)
  {
    a(paramE, paramR, 0);
  }
  
  public static void a(e paramE, r paramR, int paramInt)
  {
    try
    {
      Object localObject1 = paramE.a;
      a();
      localObject1 = b;
      Context localContext = paramE.a;
      Object localObject2 = paramE.b;
      localObject2 = paramE.b;
      paramE = paramE.a();
      DefaultHttpClient localDefaultHttpClient = (DefaultHttpClient)((p)localObject1).a();
      HttpContext localHttpContext = ((p)localObject1).b();
      localObject2 = new HttpPost((String)localObject2);
      ((HttpEntityEnclosingRequestBase)localObject2).setEntity(paramE);
      ((p)localObject1).a(localDefaultHttpClient, localHttpContext, (HttpUriRequest)localObject2, "application/json", paramR, localContext, paramInt);
      return;
    }
    catch (UnsupportedEncodingException paramE)
    {
      paramE.printStackTrace();
    }
  }
}
