package com.umpay.huafubao.c;

import android.content.Context;
import android.content.DialogInterface.OnCancelListener;
import android.content.DialogInterface.OnClickListener;
import android.text.TextUtils;
import com.umpay.huafubao.b.h;
import com.umpay.huafubao.view.e;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import org.apache.http.Header;
import org.json.JSONArray;
import org.json.JSONObject;

public class b
  extends h
{
  Context b;
  public boolean c = true;
  public boolean d = false;
  public boolean e = false;
  public boolean f = true;
  public DialogInterface.OnClickListener g = null;
  public String h;
  public DialogInterface.OnCancelListener i = new c(this);
  private e j = null;
  private com.umpay.huafubao.view.c k = null;
  private String l = "正在加载中...";
  private String m;
  private DialogInterface.OnClickListener n = com.umpay.huafubao.d.c.a;
  
  public b(Context paramContext)
  {
    this.b = paramContext;
    this.j = new e(paramContext);
    this.k = new com.umpay.huafubao.view.c(paramContext);
  }
  
  private void a(Header[] paramArrayOfHeader, String paramString, Throwable paramThrowable)
  {
    if (paramArrayOfHeader != null)
    {
      int i2 = paramArrayOfHeader.length;
      int i1 = 0;
      while (i1 < i2)
      {
        Header localHeader = paramArrayOfHeader[i1];
        new StringBuilder().append(localHeader.getName()).append("=").append(localHeader.getValue());
        i1 += 1;
      }
    }
    if (paramThrowable != null) {}
    for (;;)
    {
      try
      {
        paramArrayOfHeader = new StringWriter();
        paramThrowable.printStackTrace(new PrintWriter(paramArrayOfHeader));
        paramArrayOfHeader = paramArrayOfHeader.toString();
        System.out.println(paramArrayOfHeader);
        System.out.println("throwable.getLocalizedMessage()=" + paramThrowable.getLocalizedMessage());
        System.out.println("throwable.getMessage()=" + paramThrowable.getMessage());
        System.out.println("throwable.getClass().getName()=" + paramThrowable.getClass().getName());
        new StringBuilder().append(paramThrowable.getClass().getName()).append(paramThrowable.getMessage());
        paramArrayOfHeader = paramString;
        if (TextUtils.isEmpty(paramString)) {
          paramArrayOfHeader = "服务暂时不可用，请稍后重试！";
        }
        if (paramArrayOfHeader.contains("resolve"))
        {
          paramArrayOfHeader = "请保持网络通畅，稍后重试！";
          if (this.d) {
            a(null);
          }
          if (this.e) {
            return;
          }
        }
      }
      catch (Exception paramArrayOfHeader)
      {
        paramArrayOfHeader = "bad getErrorInfoFromException";
        continue;
        if (this.g == null)
        {
          com.umpay.huafubao.d.c.b(this.b, paramArrayOfHeader, this.m, this.n);
          return;
        }
        com.umpay.huafubao.d.c.a(this.b, paramArrayOfHeader, this.m, this.n, this.h, this.g);
        return;
      }
    }
  }
  
  public final void a(int paramInt, Header[] paramArrayOfHeader, String paramString, Throwable paramThrowable)
  {
    super.a(paramInt, paramArrayOfHeader, paramString, paramThrowable);
    a(paramArrayOfHeader, paramString, paramThrowable);
  }
  
  public final void a(int paramInt, Header[] paramArrayOfHeader, Throwable paramThrowable, JSONArray paramJSONArray)
  {
    super.a(paramInt, paramArrayOfHeader, paramThrowable, paramJSONArray);
    if (paramJSONArray == null) {}
    for (paramJSONArray = "";; paramJSONArray = paramJSONArray.toString())
    {
      a(paramArrayOfHeader, paramJSONArray, paramThrowable);
      return;
    }
  }
  
  public final void a(int paramInt, Header[] paramArrayOfHeader, Throwable paramThrowable, JSONObject paramJSONObject)
  {
    super.a(paramInt, paramArrayOfHeader, paramThrowable, paramJSONObject);
    if (paramJSONObject == null) {}
    for (paramJSONObject = "";; paramJSONObject = paramJSONObject.toString())
    {
      a(paramArrayOfHeader, paramJSONObject, paramThrowable);
      return;
    }
  }
  
  public final void a(int paramInt, Header[] paramArrayOfHeader, JSONObject paramJSONObject)
  {
    super.a(paramInt, paramArrayOfHeader, paramJSONObject);
    int i1 = paramArrayOfHeader.length;
    paramInt = 0;
    while (paramInt < i1)
    {
      Header localHeader = paramArrayOfHeader[paramInt];
      new StringBuilder().append(localHeader.getName()).append("=").append(localHeader.getValue());
      paramInt += 1;
    }
    new StringBuilder("onSuccess-->").append(paramJSONObject.toString());
    if ((!a.b(paramJSONObject)) && (!this.d))
    {
      a(null, a.a(paramJSONObject), null);
      return;
    }
    a(paramJSONObject);
  }
  
  public final void a(String paramString)
  {
    if (!TextUtils.isEmpty(paramString)) {
      this.l = paramString;
    }
  }
  
  public final void a(String paramString, DialogInterface.OnClickListener paramOnClickListener)
  {
    this.m = paramString;
    this.n = paramOnClickListener;
  }
  
  public void a(JSONObject paramJSONObject) {}
  
  public final void b()
  {
    super.b();
    if (this.f) {
      this.j.a(this.l, this.c, this.i);
    }
  }
  
  public final void c()
  {
    if ((this.j != null) && (this.j.isShowing())) {
      this.j.dismiss();
    }
    super.c();
  }
}
