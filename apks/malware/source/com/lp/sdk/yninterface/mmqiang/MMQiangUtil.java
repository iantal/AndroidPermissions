package com.lp.sdk.yninterface.mmqiang;

import android.annotation.SuppressLint;
import android.content.Context;
import android.os.Handler;
import android.telephony.SmsManager;
import android.text.TextUtils;
import android.util.Base64;
import com.lepeng.utils.L;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONObject;

public class MMQiangUtil
{
  public static final int MSG_FAIL = 0;
  public static final int MSG_SUCCESS = 1;
  private static final String TAG = "MMQiangUtil";
  
  public MMQiangUtil() {}
  
  private static boolean doZydPreCharge(ZydQlSmsData paramZydQlSmsData, String[] paramArrayOfString, String paramString)
  {
    boolean bool2 = false;
    Object localObject = new ArrayList();
    ((List)localObject).add(new BasicNameValuePair("myorderid", paramZydQlSmsData.getMyorderid()));
    ((List)localObject).add(new BasicNameValuePair("randnum", paramString));
    paramString = HttpUtil.sendPost(paramArrayOfString[2], (List)localObject);
    if (Configs.debug) {
      L.i("zydQlResult3:" + paramString);
    }
    boolean bool1 = bool2;
    if (!TextUtils.isEmpty(paramString))
    {
      paramString = new JSONObject(paramString);
      localObject = new ZydQlRechargeData();
      JsonParser.parseJson2Object(localObject, paramString);
      bool1 = bool2;
      if (((ZydQlRechargeData)localObject).getStatus() == 0)
      {
        String str = sendZydQlPost(paramArrayOfString[3], ((ZydQlRechargeData)localObject).getReq());
        if (Configs.debug) {
          L.i("zydQlResult4:" + str);
        }
        bool1 = bool2;
        if (!TextUtils.isEmpty(str))
        {
          bool1 = bool2;
          if (str.indexOf("<SessionID>") != -1)
          {
            bool1 = bool2;
            if (str.indexOf("<CheckID>") != -1)
            {
              bool1 = bool2;
              if (str.indexOf("<TradeID>") != -1)
              {
                paramString = str.substring(str.indexOf("<SessionID>") + "<SessionID>".length(), str.lastIndexOf("</SessionID>"));
                localObject = str.substring(str.indexOf("<CheckID>") + "<CheckID>".length(), str.lastIndexOf("</CheckID>"));
                str = str.substring(str.indexOf("<TradeID>") + "<TradeID>".length(), str.lastIndexOf("</TradeID>"));
                ArrayList localArrayList = new ArrayList();
                localArrayList.add(new BasicNameValuePair("myorderid", paramZydQlSmsData.getMyorderid()));
                localArrayList.add(new BasicNameValuePair("sessionid", paramString));
                localArrayList.add(new BasicNameValuePair("checkid", (String)localObject));
                localArrayList.add(new BasicNameValuePair("tradeid", str));
                paramZydQlSmsData = HttpUtil.sendPost(paramArrayOfString[4], localArrayList);
                if (Configs.debug) {
                  L.i("zydQlResult5:" + paramZydQlSmsData);
                }
                bool1 = bool2;
                if (!TextUtils.isEmpty(paramZydQlSmsData))
                {
                  paramZydQlSmsData = new JSONObject(paramZydQlSmsData);
                  paramString = new ZydQlRechargeData();
                  JsonParser.parseJson2Object(paramString, paramZydQlSmsData);
                  bool1 = bool2;
                  if (paramString.getStatus() == 0)
                  {
                    paramZydQlSmsData = sendZydQlPost(paramArrayOfString[5], paramString.getReq());
                    if (Configs.debug) {
                      L.i("zydQlResult6:" + paramZydQlSmsData);
                    }
                    bool1 = bool2;
                    if (paramZydQlSmsData != null) {
                      bool1 = true;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return bool1;
  }
  
  public static void doZydQlSms(Context paramContext, String paramString1, int paramInt, String paramString2, Handler paramHandler)
  {
    new MMQiangUtil.1(paramString1, paramInt, paramString2, paramContext, paramHandler).start();
  }
  
  public static String getRandomImei()
  {
    return "86" + randomStr("0123456789", 13);
  }
  
  public static String getRandomImsi(MMQiangUtil.Provider paramProvider)
  {
    if (MMQiangUtil.Provider.CM == paramProvider) {
      return "46000" + randomStr("0123456789", 10);
    }
    if (MMQiangUtil.Provider.CU == paramProvider) {
      return "46001" + randomStr("0123456789", 10);
    }
    if (MMQiangUtil.Provider.CT == paramProvider) {
      return "46003" + randomStr("0123456789", 10);
    }
    return null;
  }
  
  public static String getValueFromUrlByKey(String paramString1, String paramString2)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {}
    for (;;)
    {
      return null;
      try
      {
        String str = "?" + paramString2 + "=";
        paramString2 = "&" + paramString2 + "=";
        int i = Math.max(paramString1.indexOf(str), paramString1.indexOf(paramString2));
        if (i != -1)
        {
          paramString1 = paramString1.substring(str.length() + i);
          i = paramString1.indexOf("&");
          if (i != -1) {
            return paramString1.substring(0, i).trim();
          }
          paramString1 = paramString1.trim();
          return paramString1;
        }
      }
      catch (Exception paramString1)
      {
        paramString1.printStackTrace();
      }
    }
    return null;
  }
  
  public static String randomStr(String paramString, int paramInt)
  {
    String str;
    if ((TextUtils.isEmpty(paramString)) || (paramInt < 0))
    {
      str = "";
      return str;
    }
    char[] arrayOfChar = paramString.toCharArray();
    int j = arrayOfChar.length;
    Random localRandom = new Random();
    paramString = "";
    int i = 0;
    for (;;)
    {
      str = paramString;
      if (i >= paramInt) {
        break;
      }
      paramString = paramString + arrayOfChar[(Math.abs(localRandom.nextInt()) % j)];
      i += 1;
    }
  }
  
  protected static void sendSms(Context paramContext, String paramString1, String paramString2)
  {
    paramContext = SmsManager.getDefault();
    paramContext.sendMultipartTextMessage(paramString1, null, paramContext.divideMessage(paramString2), null, null);
  }
  
  @SuppressLint({"NewApi"})
  private static String sendZydQlPost(String paramString1, String paramString2)
  {
    try
    {
      paramString2 = new String(Base64.decode(paramString2, 0));
      paramString1 = (HttpURLConnection)new URL(paramString1).openConnection();
      paramString1.setDoOutput(true);
      paramString1.setDoInput(true);
      paramString1.setUseCaches(false);
      paramString1.setInstanceFollowRedirects(true);
      paramString1.setRequestMethod("POST");
      paramString1.setRequestProperty("Accept", "text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2");
      paramString1.setRequestProperty("Content-Type", "text/plain; charset=ISO-8859-1");
      paramString1.connect();
      Object localObject = new OutputStreamWriter(paramString1.getOutputStream(), "UTF-8");
      ((OutputStreamWriter)localObject).append(paramString2);
      ((OutputStreamWriter)localObject).flush();
      ((OutputStreamWriter)localObject).close();
      int i = paramString1.getContentLength();
      paramString1 = paramString1.getInputStream();
      if (i != -1)
      {
        paramString2 = new byte[i];
        localObject = new byte['È€'];
        i = 0;
        for (;;)
        {
          int j = paramString1.read((byte[])localObject);
          if (j <= 0) {
            return new String(paramString2, "UTF-8");
          }
          System.arraycopy(localObject, 0, paramString2, i, j);
          i += j;
        }
      }
      return null;
    }
    catch (IOException paramString1)
    {
      paramString1.printStackTrace();
    }
  }
}
