package com.baidu.location;

import android.location.Location;
import java.io.File;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import org.apache.http.message.BasicNameValuePair;

class o
  implements au, l
{
  private static Location b6;
  private static final int b7 = 2048;
  private static final int b8 = 2048;
  private static double b9 = 0.0D;
  private static Location cA;
  private static ArrayList cB;
  private static final int cC = 2048;
  private static final String cD;
  private static final String cE;
  private static int cF = 0;
  private static int cG = 0;
  private static ArrayList cH;
  private static o cI = null;
  private static String cJ;
  private static double ca = 0.0D;
  private static int cb = 0;
  private static int cc = 0;
  private static int cd = 0;
  private static int ce = 0;
  private static File cf;
  private static final int cg = 128;
  private static ArrayList ch;
  private static double ci = 0.0D;
  private static int cj = 0;
  private static int cl = 0;
  private static final int cm = 1040;
  private static Location cn;
  private static final int co = 32;
  private static ao.b cp;
  private static ArrayList cq = new ArrayList();
  private static int cr;
  private static ArrayList cs;
  private static final String ct;
  private static int cu;
  private static ArrayList cw;
  private static double cx;
  private static int cy;
  private static final String cz;
  private int ck = 0;
  private b cv = null;
  
  static
  {
    ch = new ArrayList();
    cw = new ArrayList();
    cH = new ArrayList();
    cs = new ArrayList();
    cB = new ArrayList();
    cJ = f.H + "/yo.dat";
    cE = f.H + "/yoh.dat";
    cD = f.H + "/yom.dat";
    ct = f.H + "/yol.dat";
    cz = f.H + "/yor.dat";
    cf = null;
    cd = 1024;
    cG = 512;
    cc = 8;
    cr = 5;
    cj = 8;
    cb = 16;
    cy = 1024;
    cu = 256;
    ca = 0.0D;
    cx = 0.1D;
    ci = 30.0D;
    b9 = 100.0D;
    cl = 0;
    ce = 64;
    cF = 128;
    cn = null;
    cA = null;
    b6 = null;
    cp = null;
  }
  
  private o() {}
  
  public static void B() {}
  
  public static void jdMethod_byte(String paramString)
  {
    try
    {
      File localFile = new File(paramString);
      if (!localFile.exists())
      {
        paramString = new File(f.H);
        if (!paramString.exists()) {
          paramString.mkdirs();
        }
        paramString = localFile;
        if (!localFile.createNewFile()) {
          paramString = null;
        }
        paramString = new RandomAccessFile(paramString, "rw");
        paramString.seek(0L);
        paramString.writeInt(32);
        paramString.writeInt(2048);
        paramString.writeInt(1040);
        paramString.writeInt(0);
        paramString.writeInt(0);
        paramString.writeInt(0);
        paramString.close();
      }
      return;
    }
    catch (Exception paramString) {}
  }
  
  public static void jdMethod_case(String paramString)
  {
    int i = c.aK;
    ArrayList localArrayList;
    if (i == 1)
    {
      localArrayList = cH;
      if (localArrayList != null) {
        break label42;
      }
    }
    for (;;)
    {
      return;
      if (i == 2)
      {
        localArrayList = cs;
        break;
      }
      if (i == 3)
      {
        localArrayList = cB;
        break;
        label42:
        if (localArrayList.size() <= cb) {
          localArrayList.add(paramString);
        }
        if (localArrayList.size() >= cb) {
          jdMethod_if(i, false);
        }
        while (localArrayList.size() > cb) {
          localArrayList.remove(0);
        }
      }
    }
  }
  
  private static void jdMethod_char(String paramString)
  {
    jdMethod_case(paramString);
  }
  
  public static void jdMethod_do(r.a paramA, ao.b paramB, Location paramLocation, String paramString)
  {
    ao.b localB = null;
    Object localObject = null;
    if (!w.fX) {}
    label12:
    do
    {
      do
      {
        break label12;
        break label12;
        break label12;
        break label12;
        do
        {
          return;
        } while ((c.aj == 3) && (!jdMethod_if(paramLocation, paramB)) && (!jdMethod_if(paramLocation, false)));
        if ((paramA == null) || (!paramA.jdMethod_do())) {
          break;
        }
        localB = paramB;
        if (!jdMethod_if(paramLocation, paramB)) {
          localB = null;
        }
        paramA = c.jdMethod_if(paramA, localB, paramLocation, paramString, 1);
      } while (paramA == null);
      jdMethod_else(Jni.h(paramA));
      cA = paramLocation;
      cn = paramLocation;
    } while (localB == null);
    cp = localB;
    return;
    if ((paramB != null) && (paramB.jdMethod_if()) && (jdMethod_if(paramLocation, paramB)))
    {
      if (jdMethod_if(paramLocation)) {
        break label231;
      }
      paramA = localObject;
    }
    label229:
    label231:
    for (;;)
    {
      paramA = c.jdMethod_if(paramA, paramB, paramLocation, paramString, 2);
      if (paramA == null) {
        break;
      }
      jdMethod_char(Jni.h(paramA));
      b6 = paramLocation;
      cn = paramLocation;
      if (paramB == null) {
        break;
      }
      cp = paramB;
      return;
      if (!jdMethod_if(paramLocation)) {
        paramA = null;
      }
      if (!jdMethod_if(paramLocation, paramB)) {
        paramB = localB;
      }
      for (;;)
      {
        if ((paramA == null) && (paramB == null)) {
          break label229;
        }
        paramA = c.jdMethod_if(paramA, paramB, paramLocation, paramString, 3);
        if (paramA == null) {
          break;
        }
        jdMethod_long(Jni.h(paramA));
        cn = paramLocation;
        if (paramB == null) {
          break;
        }
        cp = paramB;
        return;
      }
      break label12;
    }
  }
  
  private static void jdMethod_else(String paramString)
  {
    jdMethod_case(paramString);
  }
  
  private static int jdMethod_if(List paramList, int paramInt)
  {
    if ((paramList == null) || (paramInt > 256) || (paramInt < 0)) {
      return -1;
    }
    for (;;)
    {
      int j;
      int i;
      try
      {
        if (cf == null)
        {
          cf = new File(cJ);
          if (!cf.exists())
          {
            cf = null;
            return -2;
          }
        }
        RandomAccessFile localRandomAccessFile = new RandomAccessFile(cf, "rw");
        if (localRandomAccessFile.length() < 1L)
        {
          localRandomAccessFile.close();
          return -3;
        }
        localRandomAccessFile.seek(paramInt);
        int k = localRandomAccessFile.readInt();
        j = localRandomAccessFile.readInt();
        int m = localRandomAccessFile.readInt();
        int n = localRandomAccessFile.readInt();
        long l = localRandomAccessFile.readLong();
        if ((!jdMethod_if(k, j, m, n, l)) || (j < 1))
        {
          localRandomAccessFile.close();
          return -4;
        }
        byte[] arrayOfByte = new byte[cy];
        i = cc;
        if ((i > 0) && (j > 0))
        {
          localRandomAccessFile.seek((k + j - 1) % m * n + l);
          int i1 = localRandomAccessFile.readInt();
          if ((i1 > 0) && (i1 < n))
          {
            localRandomAccessFile.read(arrayOfByte, 0, i1);
            if (arrayOfByte[(i1 - 1)] == 0) {
              paramList.add(new String(arrayOfByte, 0, i1 - 1));
            }
          }
        }
        else
        {
          localRandomAccessFile.seek(paramInt);
          localRandomAccessFile.writeInt(k);
          localRandomAccessFile.writeInt(j);
          localRandomAccessFile.writeInt(m);
          localRandomAccessFile.writeInt(n);
          localRandomAccessFile.writeLong(l);
          localRandomAccessFile.close();
          paramInt = cc;
          return paramInt - i;
        }
      }
      catch (Exception paramList)
      {
        paramList.printStackTrace();
        return -5;
      }
      i -= 1;
      j -= 1;
    }
  }
  
  public static String jdMethod_if(int paramInt)
  {
    ArrayList localArrayList;
    if (paramInt == 1)
    {
      str = cE;
      localArrayList = cH;
      if (localArrayList != null) {
        break label67;
      }
    }
    label67:
    do
    {
      do
      {
        return null;
        if (paramInt == 2)
        {
          str = cD;
          localArrayList = cs;
          break;
        }
        if (paramInt == 3)
        {
          str = ct;
          localArrayList = cB;
          break;
        }
      } while (paramInt != 4);
      str = cz;
      localArrayList = cB;
      break;
      if (localArrayList.size() < 1) {
        jdMethod_if(str, localArrayList);
      }
      paramInt = localArrayList.size();
    } while (paramInt <= 0);
    String str = (String)localArrayList.get(paramInt - 1);
    localArrayList.remove(paramInt - 1);
    return str;
  }
  
  public static String jdMethod_if(r.a paramA, ao.b paramB, Location paramLocation, String paramString1, String paramString2)
  {
    if (!w.fX) {
      return null;
    }
    return c.jdMethod_if(paramA, paramB, paramLocation, paramString1) + paramString2;
  }
  
  public static void jdMethod_if(double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4)
  {
    if (paramDouble1 > 0.0D)
    {
      ca = paramDouble1;
      cx = paramDouble2;
      if (paramDouble3 <= 20.0D) {
        break label41;
      }
    }
    for (;;)
    {
      ci = paramDouble3;
      b9 = paramDouble4;
      return;
      paramDouble1 = ca;
      break;
      label41:
      paramDouble3 = ci;
    }
  }
  
  public static void jdMethod_if(int paramInt1, int paramInt2) {}
  
  public static void jdMethod_if(int paramInt1, int paramInt2, boolean paramBoolean) {}
  
  public static void jdMethod_if(int paramInt, boolean paramBoolean)
  {
    Object localObject1;
    ArrayList localArrayList;
    label20:
    Object localObject2;
    if (paramInt == 1)
    {
      localObject1 = cE;
      if (paramBoolean) {
        return;
      }
      localArrayList = cH;
      localObject2 = new File((String)localObject1);
      if (!((File)localObject2).exists()) {
        jdMethod_byte((String)localObject1);
      }
    }
    for (;;)
    {
      try
      {
        localObject1 = new RandomAccessFile((File)localObject2, "rw");
        ((RandomAccessFile)localObject1).seek(4L);
        int i1 = ((RandomAccessFile)localObject1).readInt();
        int i2 = ((RandomAccessFile)localObject1).readInt();
        j = ((RandomAccessFile)localObject1).readInt();
        k = ((RandomAccessFile)localObject1).readInt();
        i = ((RandomAccessFile)localObject1).readInt();
        m = localArrayList.size();
        if (m <= cj) {
          break label483;
        }
        if (!paramBoolean) {
          break label480;
        }
        i += 1;
        if (j < i1)
        {
          ((RandomAccessFile)localObject1).seek(i2 * j + 128);
          localObject2 = ((String)localArrayList.get(0) + '\000').getBytes();
          ((RandomAccessFile)localObject1).writeInt(localObject2.length);
          ((RandomAccessFile)localObject1).write((byte[])localObject2, 0, localObject2.length);
          localArrayList.remove(0);
          n = j + 1;
          j = k;
          k = n;
          n = m - 1;
          m = k;
          k = j;
          j = m;
          m = n;
          continue;
          if (paramInt == 2)
          {
            localObject1 = cD;
            if (paramBoolean)
            {
              localArrayList = cH;
              break label20;
            }
            localArrayList = cs;
            break label20;
          }
          if (paramInt == 3)
          {
            localObject1 = ct;
            if (paramBoolean)
            {
              localArrayList = cs;
              break label20;
            }
            localArrayList = cB;
            break label20;
          }
          if (paramInt != 4) {
            break;
          }
          localObject1 = cz;
          if (!paramBoolean) {
            break;
          }
          localArrayList = cB;
          break label20;
        }
        if (!paramBoolean) {
          break label502;
        }
        long l = k * i2 + 128;
        ((RandomAccessFile)localObject1).seek(l);
        localObject2 = ((String)localArrayList.get(0) + '\000').getBytes();
        ((RandomAccessFile)localObject1).writeInt(localObject2.length);
        ((RandomAccessFile)localObject1).write((byte[])localObject2, 0, localObject2.length);
        localArrayList.remove(0);
        n = k + 1;
        k = n;
        if (n <= j) {
          break label489;
        }
        k = 0;
      }
      catch (Exception localException)
      {
        int i;
        return;
      }
      ((RandomAccessFile)localObject1).seek(12L);
      ((RandomAccessFile)localObject1).writeInt(j);
      ((RandomAccessFile)localObject1).writeInt(k);
      ((RandomAccessFile)localObject1).writeInt(i);
      ((RandomAccessFile)localObject1).close();
      if ((m == 0) || (paramInt >= 4)) {
        break;
      }
      jdMethod_if(paramInt + 1, true);
      return;
      label480:
      continue;
      label483:
      int m = 0;
      continue;
      label489:
      int n = j;
      int j = k;
      int k = n;
      continue;
      label502:
      m = 1;
    }
  }
  
  public static void jdMethod_if(String paramString, int paramInt) {}
  
  public static void jdMethod_if(String paramString, int paramInt, boolean paramBoolean) {}
  
  private static boolean jdMethod_if(int paramInt1, int paramInt2, int paramInt3, int paramInt4, long paramLong)
  {
    if ((paramInt1 < 0) || (paramInt1 >= paramInt3)) {}
    while ((paramInt2 < 0) || (paramInt2 > paramInt3) || (paramInt3 < 0) || (paramInt3 > 1024) || (paramInt4 < 128) || (paramInt4 > 1024)) {
      return false;
    }
    return true;
  }
  
  private static boolean jdMethod_if(Location paramLocation)
  {
    boolean bool = true;
    if (paramLocation == null) {
      bool = false;
    }
    double d1;
    double d2;
    double d3;
    double d4;
    do
    {
      return bool;
      if ((cA == null) || (cn == null))
      {
        cA = paramLocation;
        return true;
      }
      d1 = paramLocation.distanceTo(cA);
      d2 = c.bb;
      d3 = c.a8;
      d4 = c.a6;
    } while (paramLocation.distanceTo(cn) > d1 * d3 + d2 * d1 * d1 + d4);
    return false;
  }
  
  private static boolean jdMethod_if(Location paramLocation, ao.b paramB)
  {
    if ((paramLocation == null) || (paramB == null) || (paramB.jdField_for == null) || (paramB.jdField_for.isEmpty())) {}
    while (paramB.jdMethod_do(cp)) {
      return false;
    }
    if (b6 == null)
    {
      b6 = paramLocation;
      return true;
    }
    return true;
  }
  
  public static boolean jdMethod_if(Location paramLocation, boolean paramBoolean)
  {
    return v.jdMethod_if(cn, paramLocation, paramBoolean);
  }
  
  public static boolean jdMethod_if(String paramString, List paramList)
  {
    paramString = new File(paramString);
    if (!paramString.exists()) {
      return false;
    }
    for (;;)
    {
      int i;
      int j;
      int k;
      boolean bool2;
      try
      {
        paramString = new RandomAccessFile(paramString, "rw");
        paramString.seek(8L);
        int n = paramString.readInt();
        i = paramString.readInt();
        m = paramString.readInt();
        byte[] arrayOfByte = new byte[cy];
        j = cj;
        j += 1;
        bool1 = false;
        long l;
        if ((j > 0) && (i > 0))
        {
          k = m;
          if (i < m) {
            k = 0;
          }
          l = (i - 1) * n + 128;
        }
        try
        {
          paramString.seek(l);
          m = paramString.readInt();
          bool2 = bool1;
          if (m <= 0) {
            break label220;
          }
          bool2 = bool1;
          if (m >= n) {
            break label220;
          }
          paramString.read(arrayOfByte, 0, m);
          bool2 = bool1;
          if (arrayOfByte[(m - 1)] != 0) {
            break label220;
          }
          paramList.add(0, new String(arrayOfByte, 0, m - 1));
          bool2 = true;
        }
        catch (Exception paramString)
        {
          return bool1;
        }
        paramString.seek(12L);
        paramString.writeInt(i);
        paramString.writeInt(m);
        paramString.close();
        return bool1;
      }
      catch (Exception paramString)
      {
        return false;
      }
      label220:
      j -= 1;
      i -= 1;
      boolean bool1 = bool2;
      int m = k;
    }
  }
  
  private static void jdMethod_long(String paramString)
  {
    jdMethod_case(paramString);
  }
  
  public static void t()
  {
    cj = 0;
    jdMethod_if(1, false);
    jdMethod_if(2, false);
    jdMethod_if(3, false);
    cj = 8;
  }
  
  public static o u()
  {
    if (cI == null) {
      cI = new o();
    }
    return cI;
  }
  
  public static String v()
  {
    Object localObject5 = null;
    Object localObject3 = null;
    Object localObject6 = new File(cD);
    Object localObject1 = localObject3;
    if (((File)localObject6).exists()) {
      localObject1 = localObject5;
    }
    try
    {
      localObject6 = new RandomAccessFile((File)localObject6, "rw");
      localObject1 = localObject5;
      ((RandomAccessFile)localObject6).seek(20L);
      localObject1 = localObject5;
      i = ((RandomAccessFile)localObject6).readInt();
      if (i > 128)
      {
        localObject1 = localObject5;
        localObject3 = "&p1=" + i;
        localObject1 = localObject3;
        ((RandomAccessFile)localObject6).seek(20L);
        localObject1 = localObject3;
        ((RandomAccessFile)localObject6).writeInt(0);
        localObject1 = localObject3;
        ((RandomAccessFile)localObject6).close();
        return localObject3;
      }
      localObject1 = localObject5;
      ((RandomAccessFile)localObject6).close();
      localObject1 = localObject3;
    }
    catch (Exception localException3)
    {
      int i;
      Object localObject2;
      Object localObject4;
      for (;;) {}
      return localException3;
    }
    localObject5 = new File(ct);
    localObject3 = localObject1;
    if (((File)localObject5).exists())
    {
      localObject3 = localObject1;
      try
      {
        localObject5 = new RandomAccessFile((File)localObject5, "rw");
        localObject3 = localObject1;
        ((RandomAccessFile)localObject5).seek(20L);
        localObject3 = localObject1;
        i = ((RandomAccessFile)localObject5).readInt();
        if (i > 256)
        {
          localObject3 = localObject1;
          localObject1 = "&p2=" + i;
          localObject3 = localObject1;
          ((RandomAccessFile)localObject5).seek(20L);
          localObject3 = localObject1;
          ((RandomAccessFile)localObject5).writeInt(0);
          localObject3 = localObject1;
          ((RandomAccessFile)localObject5).close();
          return localObject1;
        }
      }
      catch (Exception localException1) {}
    }
    for (;;)
    {
      localObject5 = new File(cz);
      if (!((File)localObject5).exists()) {
        return localObject3;
      }
      localObject2 = localObject3;
      try
      {
        localObject5 = new RandomAccessFile((File)localObject5, "rw");
        localObject2 = localObject3;
        ((RandomAccessFile)localObject5).seek(20L);
        localObject2 = localObject3;
        i = ((RandomAccessFile)localObject5).readInt();
        if (i <= 512) {
          break;
        }
        localObject2 = localObject3;
        localObject3 = "&p3=" + i;
        localObject2 = localObject3;
        ((RandomAccessFile)localObject5).seek(20L);
        localObject2 = localObject3;
        ((RandomAccessFile)localObject5).writeInt(0);
        localObject2 = localObject3;
        ((RandomAccessFile)localObject5).close();
        return localObject3;
      }
      catch (Exception localException2)
      {
        return localObject2;
      }
      localObject4 = localObject2;
      ((RandomAccessFile)localObject5).close();
      localObject4 = localObject2;
    }
    localObject2 = localObject4;
    ((RandomAccessFile)localObject5).close();
    return localObject4;
  }
  
  public static String x()
  {
    return z();
  }
  
  public static void y() {}
  
  public static String z()
  {
    String str1 = null;
    int i = 1;
    String str2;
    if (i < 5)
    {
      str1 = jdMethod_if(i);
      if (str1 != null) {
        str2 = str1;
      }
    }
    do
    {
      do
      {
        do
        {
          return str2;
          i += 1;
          break;
          jdMethod_if(cB, ce);
          if (cB.size() > 0)
          {
            str1 = (String)cB.get(0);
            cB.remove(0);
          }
          str2 = str1;
        } while (str1 != null);
        jdMethod_if(cB, cl);
        if (cB.size() > 0)
        {
          str1 = (String)cB.get(0);
          cB.remove(0);
        }
        str2 = str1;
      } while (str1 != null);
      jdMethod_if(cB, cF);
      str2 = str1;
    } while (cB.size() <= 0);
    str1 = (String)cB.get(0);
    cB.remove(0);
    return str1;
  }
  
  public void A()
  {
    if (!ao.bA()) {
      return;
    }
    this.cv.U();
  }
  
  public void jdMethod_goto(String paramString)
  {
    new a(paramString).T();
  }
  
  public void w()
  {
    if (m.R().Q()) {}
    do
    {
      return;
      this.ck += 1;
    } while (this.ck <= 1);
    this.ck = 0;
    A();
  }
  
  private class a
    extends q
  {
    private String dc;
    
    public a(String paramString)
    {
      this.dc = paramString;
      this.cP = new ArrayList();
    }
    
    void O()
    {
      this.cN = c.jdMethod_for();
      this.cP.add(new BasicNameValuePair("cldc[0]", this.dc));
    }
    
    public void T()
    {
      J();
    }
    
    void jdMethod_do(boolean paramBoolean)
    {
      if ((paramBoolean) && (this.cO != null)) {}
    }
  }
  
  private class b
    extends q
  {
    boolean de = false;
    private ArrayList df = null;
    int dg = 0;
    int dh = 0;
    
    public b()
    {
      this.cP = new ArrayList();
    }
    
    void O()
    {
      this.cN = c.jdMethod_for();
      this.cW = 2;
      if (this.df != null)
      {
        int i = 0;
        if (i < this.df.size())
        {
          if (this.dh == 1) {
            this.cP.add(new BasicNameValuePair("cldc[" + i + "]", (String)this.df.get(i)));
          }
          for (;;)
          {
            i += 1;
            break;
            this.cP.add(new BasicNameValuePair("cltr[" + i + "]", (String)this.df.get(i)));
          }
        }
        String str = String.format(Locale.CHINA, "%d", new Object[] { Long.valueOf(System.currentTimeMillis()) });
        this.cP.add(new BasicNameValuePair("trtm", str));
      }
    }
    
    public void U()
    {
      if (this.de) {
        return;
      }
      if ((cU > 4) && (this.dg < cU))
      {
        this.dg += 1;
        return;
      }
      this.dg = 0;
      this.de = true;
      this.dh = 0;
      int i;
      if ((this.df == null) || (this.df.size() < 1))
      {
        if (this.df == null) {
          this.df = new ArrayList();
        }
        this.dh = 0;
        i = 0;
        if (this.dh >= 2) {
          break label253;
        }
      }
      label146:
      label179:
      Object localObject2;
      label220:
      label248:
      label253:
      for (Object localObject1 = o.x();; localObject2 = null)
      {
        if ((localObject1 == null) && (this.dh != 1))
        {
          this.dh = 2;
          try
          {
            if (c.aT != 0) {
              break label179;
            }
            str = j.p();
            localObject1 = str;
            if (str == null) {
              localObject1 = u.az();
            }
          }
          catch (Exception localException)
          {
            for (;;)
            {
              String str;
              localObject2 = null;
            }
          }
          if (localObject1 != null) {
            break label220;
          }
        }
        for (;;)
        {
          if ((this.df != null) && (this.df.size() >= 1)) {
            break label248;
          }
          this.df = null;
          this.de = false;
          return;
          if (c.aT != 1) {
            break label146;
          }
          str = u.az();
          localObject1 = str;
          if (str != null) {
            break label146;
          }
          localObject1 = j.p();
          break label146;
          this.dh = 1;
          break label146;
          this.df.add(localObject2);
          int j = i + localObject2.length();
          i = j;
          if (j < 5120) {
            break;
          }
        }
        J();
        return;
      }
    }
    
    void jdMethod_do(boolean paramBoolean)
    {
      if ((paramBoolean) && (this.cO != null) && (this.df != null)) {
        this.df.clear();
      }
      if (this.cP != null) {
        this.cP.clear();
      }
      this.de = false;
    }
  }
}
