package com.baidu.location;

import android.telephony.NeighboringCellInfo;
import android.telephony.TelephonyManager;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;

public class cf
{
  public int a = -1;
  public int b = -1;
  public int c = -1;
  public int d = -1;
  public long e = 0L;
  public int f = -1;
  public char g = '\000';
  
  public cf(ce paramCe) {}
  
  public boolean a()
  {
    return System.currentTimeMillis() - this.e < ce.g();
  }
  
  public boolean a(cf paramCf)
  {
    return (this.a == paramCf.a) && (this.b == paramCf.b) && (this.d == paramCf.d);
  }
  
  public boolean b()
  {
    return (this.a > -1) && (this.b > 0);
  }
  
  public String c()
  {
    StringBuffer localStringBuffer = new StringBuffer(128);
    localStringBuffer.append(this.b + 23);
    localStringBuffer.append("H");
    localStringBuffer.append(this.a + 45);
    localStringBuffer.append("K");
    localStringBuffer.append(this.d + 54);
    localStringBuffer.append("Q");
    localStringBuffer.append(this.c + 203);
    return localStringBuffer.toString();
  }
  
  public String d()
  {
    StringBuffer localStringBuffer = new StringBuffer(64);
    localStringBuffer.append(String.format(Locale.CHINA, "cell=%d|%d|%d|%d:%d", new Object[] { Integer.valueOf(this.c), Integer.valueOf(this.d), Integer.valueOf(this.a), Integer.valueOf(this.b), Integer.valueOf(this.f) }));
    return localStringBuffer.toString();
  }
  
  public String e()
  {
    for (;;)
    {
      int i;
      try
      {
        Object localObject = ce.e(this.h).getNeighboringCellInfo();
        if ((localObject == null) || (((List)localObject).isEmpty())) {
          break label297;
        }
        String str = "&nc=";
        localObject = ((List)localObject).iterator();
        i = 0;
        if (((Iterator)localObject).hasNext())
        {
          NeighboringCellInfo localNeighboringCellInfo = (NeighboringCellInfo)((Iterator)localObject).next();
          if (i == 0)
          {
            if (localNeighboringCellInfo.getLac() != this.a) {
              str = str + localNeighboringCellInfo.getLac() + "|" + localNeighboringCellInfo.getCid() + "|" + localNeighboringCellInfo.getRssi();
            } else {
              str = str + "|" + localNeighboringCellInfo.getCid() + "|" + localNeighboringCellInfo.getRssi();
            }
          }
          else if (i < 8) {
            if (localNeighboringCellInfo.getLac() != this.a) {
              str = str + ";" + localNeighboringCellInfo.getLac() + "|" + localNeighboringCellInfo.getCid() + "|" + localNeighboringCellInfo.getRssi();
            } else {
              str = str + ";" + "|" + localNeighboringCellInfo.getCid() + "|" + localNeighboringCellInfo.getRssi();
            }
          }
        }
      }
      catch (Exception localException)
      {
        return null;
      }
      return localException;
      label297:
      return null;
      i += 1;
    }
  }
  
  public String toString()
  {
    StringBuffer localStringBuffer = new StringBuffer(128);
    localStringBuffer.append("&nw=");
    localStringBuffer.append(ce.a(this.h).g);
    localStringBuffer.append(String.format(Locale.CHINA, "&cl=%d|%d|%d|%d&cl_s=%d", new Object[] { Integer.valueOf(this.c), Integer.valueOf(this.d), Integer.valueOf(this.a), Integer.valueOf(this.b), Integer.valueOf(this.f) }));
    localStringBuffer.append("&cl_t=");
    localStringBuffer.append(this.e);
    if ((ce.b(this.h) != null) && (ce.b(this.h).size() > 0))
    {
      j = ce.b(this.h).size();
      localStringBuffer.append("&clt=");
      i = 0;
      if (i < j)
      {
        cf localCf = (cf)ce.b(this.h).get(i);
        if (localCf.c != this.c) {
          localStringBuffer.append(localCf.c);
        }
        localStringBuffer.append("|");
        if (localCf.d != this.d) {
          localStringBuffer.append(localCf.d);
        }
        localStringBuffer.append("|");
        if (localCf.a != this.a) {
          localStringBuffer.append(localCf.a);
        }
        localStringBuffer.append("|");
        if (localCf.b != this.b) {
          localStringBuffer.append(localCf.b);
        }
        localStringBuffer.append("|");
        if (i != j - 1) {
          localStringBuffer.append(localCf.e / 1000L);
        }
        for (;;)
        {
          localStringBuffer.append(";");
          i += 1;
          break;
          localStringBuffer.append((System.currentTimeMillis() - localCf.e) / 1000L);
        }
      }
    }
    if (ce.c(this.h) > 100) {
      ce.a(this.h, 0);
    }
    int i = ce.d(this.h);
    int j = ce.c(this.h);
    localStringBuffer.append("&cs=" + ((i << 8) + j));
    return localStringBuffer.toString();
  }
}
