package com.baidu.location;

import android.content.Context;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Handler;
import java.io.File;
import java.io.RandomAccessFile;

class aa
  implements au, SensorEventListener, b
{
  private static aa j2;
  private boolean j0 = false;
  private Handler j1;
  private boolean j3 = false;
  private int j4 = 0;
  private StringBuffer j5 = null;
  private SensorManager j6;
  private StringBuffer j7 = null;
  private Runnable j8 = null;
  private final int j9 = 1;
  private Runnable jS = null;
  private Sensor jT;
  private final int jU = 2;
  private boolean jV = false;
  private boolean jW = false;
  private int jX = 0;
  private boolean jY = false;
  private Sensor jZ;
  
  private aa()
  {
    try
    {
      this.j6 = ((SensorManager)f.getServiceContext().getSystemService("sensor"));
      this.jT = this.j6.getDefaultSensor(1);
      this.jZ = this.j6.getDefaultSensor(2);
      this.j1 = new Handler();
      return;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  private boolean cB()
  {
    Object localObject = cC();
    if (localObject == null) {
      return false;
    }
    try
    {
      localObject = new File((String)localObject);
      if (!((File)localObject).exists())
      {
        ((File)localObject).createNewFile();
        localObject = new RandomAccessFile((File)localObject, "rw");
        jdMethod_if((RandomAccessFile)localObject, 0);
        ((RandomAccessFile)localObject).close();
        return true;
      }
      localObject = new RandomAccessFile((File)localObject, "rw");
      ((RandomAccessFile)localObject).seek(4L);
      long l = ((RandomAccessFile)localObject).readLong();
      int i = ((RandomAccessFile)localObject).readInt();
      if (((RandomAccessFile)localObject).readInt() == 3321)
      {
        l = System.currentTimeMillis() - l;
        if ((l < 0L) || (l > 86400000L))
        {
          ((RandomAccessFile)localObject).seek(4L);
          ((RandomAccessFile)localObject).writeLong(System.currentTimeMillis());
          ((RandomAccessFile)localObject).writeInt(0);
          ((RandomAccessFile)localObject).close();
          return true;
        }
        if (i > 96000)
        {
          ((RandomAccessFile)localObject).close();
          return false;
        }
        ((RandomAccessFile)localObject).close();
        return true;
      }
      jdMethod_if((RandomAccessFile)localObject, 0);
      ((RandomAccessFile)localObject).close();
      return true;
    }
    catch (Exception localException) {}
    return false;
  }
  
  private String cC()
  {
    String str = jdMethod_void(1);
    if (str == null) {
      return null;
    }
    str = str + File.separator + "lscts.dat";
    Object localObject = new File(str);
    if (!((File)localObject).exists()) {}
    try
    {
      ((File)localObject).createNewFile();
      localObject = new RandomAccessFile((File)localObject, "rw");
      jdMethod_if((RandomAccessFile)localObject, 0);
      ((RandomAccessFile)localObject).close();
      return str;
    }
    catch (Exception localException) {}
    return null;
  }
  
  private void cn()
  {
    if ((this.j6 == null) || (this.jZ == null)) {}
    while (this.jV) {
      return;
    }
    try
    {
      this.j6.registerListener(this, this.jZ, 2, this.j1);
      this.jV = true;
      return;
    }
    catch (Exception localException) {}
  }
  
  private void co()
  {
    if (this.jV) {}
    try
    {
      this.j6.unregisterListener(this, this.jZ);
      this.jV = false;
      return;
    }
    catch (Exception localException) {}
  }
  
  private void cp()
  {
    if ((this.j6 == null) || (this.jT == null)) {}
    while (this.jW) {
      return;
    }
    try
    {
      this.j6.registerListener(this, this.jT, 2, this.j1);
      this.jW = true;
      return;
    }
    catch (Exception localException) {}
  }
  
  private void cq()
  {
    if ((this.jY) || (this.j0)) {
      cp();
    }
    if (this.jY) {
      cn();
    }
  }
  
  private String cs()
  {
    int i = 0;
    String str1 = jdMethod_void(1);
    String[] arrayOfString = new String[2];
    arrayOfString[0] = "lmibaca.dat";
    arrayOfString[1] = "lmibacb.dat";
    int j = arrayOfString.length;
    while (i < j)
    {
      String str2 = arrayOfString[i];
      if (!new File(str1 + File.separator + str2).exists()) {
        return str1 + File.separator + str2;
      }
      i += 1;
    }
    return null;
  }
  
  private void ct()
  {
    if (this.jW) {}
    try
    {
      this.j6.unregisterListener(this, this.jT);
      this.jW = false;
      return;
    }
    catch (Exception localException) {}
  }
  
  private void cu()
  {
    this.jY = true;
    this.j5 = new StringBuffer(8192);
    cq();
    this.j8 = new aa.3(this);
    this.j1.postDelayed(this.j8, 60000L);
  }
  
  private void cw()
  {
    if (this.jY) {
      return;
    }
    if (this.j0)
    {
      co();
      return;
    }
    co();
    ct();
    this.j4 = 0;
    this.jX = 0;
  }
  
  public static aa cx()
  {
    if (j2 == null) {
      j2 = new aa();
    }
    return j2;
  }
  
  private String cy()
  {
    int i = 0;
    String str1 = jdMethod_void(2);
    String[] arrayOfString = new String[4];
    arrayOfString[0] = "lbaca.dat";
    arrayOfString[1] = "lbacb.dat";
    arrayOfString[2] = "lbacc.dat";
    arrayOfString[3] = "lbacd.dat";
    int j = arrayOfString.length;
    while (i < j)
    {
      String str2 = arrayOfString[i];
      if (!new File(str1 + File.separator + str2).exists()) {
        return str1 + File.separator + str2;
      }
      i += 1;
    }
    return null;
  }
  
  private void d(int paramInt)
  {
    Object localObject = cC();
    if (localObject == null) {}
    for (;;)
    {
      return;
      try
      {
        localObject = new File((String)localObject);
        if (!((File)localObject).exists()) {
          continue;
        }
        localObject = new RandomAccessFile((File)localObject, "rw");
        ((RandomAccessFile)localObject).seek(0L);
        int i = ((RandomAccessFile)localObject).readInt();
        ((RandomAccessFile)localObject).readLong();
        int j = ((RandomAccessFile)localObject).readInt();
        if ((((RandomAccessFile)localObject).readInt() == 3321) && (i == 3321))
        {
          ((RandomAccessFile)localObject).seek(12L);
          ((RandomAccessFile)localObject).writeInt(j + paramInt);
        }
        for (;;)
        {
          ((RandomAccessFile)localObject).close();
          return;
          jdMethod_if((RandomAccessFile)localObject, 48000 + paramInt);
        }
        return;
      }
      catch (Exception localException) {}
    }
  }
  
  private void jdMethod_do(StringBuffer paramStringBuffer)
  {
    if ((!this.jY) || (this.j5 == null)) {
      return;
    }
    jdMethod_if(this.j5, paramStringBuffer, e(2));
  }
  
  private String e(int paramInt)
  {
    String str = jdMethod_void(paramInt);
    if (str == null) {}
    do
    {
      return null;
      if (paramInt == 2) {
        return str + File.separator + "lbacz.dat";
      }
    } while (paramInt != 1);
    return str + File.separator + "lmibacz.dat";
  }
  
  private void jdMethod_if(RandomAccessFile paramRandomAccessFile, int paramInt)
  {
    try
    {
      paramRandomAccessFile.seek(0L);
      paramRandomAccessFile.writeInt(3321);
      paramRandomAccessFile.writeLong(System.currentTimeMillis());
      paramRandomAccessFile.writeInt(paramInt);
      paramRandomAccessFile.writeInt(3321);
      return;
    }
    catch (Exception paramRandomAccessFile) {}
  }
  
  private void jdMethod_if(StringBuffer paramStringBuffer)
  {
    if ((!this.j0) || (this.j7 == null)) {
      return;
    }
    jdMethod_if(this.j7, paramStringBuffer, e(1));
  }
  
  /* Error */
  private void jdMethod_if(StringBuffer paramStringBuffer, File paramFile)
  {
    // Byte code:
    //   0: iconst_1
    //   1: istore 4
    //   3: aload_2
    //   4: invokevirtual 120	java/io/File:exists	()Z
    //   7: ifne +4 -> 11
    //   10: return
    //   11: new 269	java/util/zip/GZIPOutputStream
    //   14: dup
    //   15: new 271	java/io/BufferedOutputStream
    //   18: dup
    //   19: new 273	java/io/FileOutputStream
    //   22: dup
    //   23: aload_2
    //   24: iconst_1
    //   25: invokespecial 276	java/io/FileOutputStream:<init>	(Ljava/io/File;Z)V
    //   28: invokespecial 279	java/io/BufferedOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   31: invokespecial 280	java/util/zip/GZIPOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   34: astore_2
    //   35: iconst_0
    //   36: istore_3
    //   37: iload_3
    //   38: iconst_3
    //   39: if_icmpge +19 -> 58
    //   42: aload_2
    //   43: aload_1
    //   44: invokevirtual 281	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   47: invokevirtual 285	java/lang/String:getBytes	()[B
    //   50: invokevirtual 289	java/util/zip/GZIPOutputStream:write	([B)V
    //   53: iload 4
    //   55: ifeq +18 -> 73
    //   58: aload_2
    //   59: invokevirtual 290	java/util/zip/GZIPOutputStream:close	()V
    //   62: return
    //   63: astore_1
    //   64: return
    //   65: astore 5
    //   67: iconst_0
    //   68: istore 4
    //   70: goto -17 -> 53
    //   73: iload_3
    //   74: iconst_1
    //   75: iadd
    //   76: istore_3
    //   77: goto -40 -> 37
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	80	0	this	aa
    //   0	80	1	paramStringBuffer	StringBuffer
    //   0	80	2	paramFile	File
    //   36	41	3	i	int
    //   1	68	4	j	int
    //   65	1	5	localException	Exception
    // Exception table:
    //   from	to	target	type
    //   11	35	63	java/lang/Exception
    //   58	62	63	java/lang/Exception
    //   42	53	65	java/lang/Exception
  }
  
  private void jdMethod_if(StringBuffer paramStringBuffer1, StringBuffer paramStringBuffer2, String paramString)
  {
    if (paramStringBuffer1.length() + paramStringBuffer2.length() < 8190)
    {
      paramStringBuffer1.append(paramStringBuffer2);
      return;
    }
    paramString = new File(paramString);
    d(paramStringBuffer1.length());
    jdMethod_if(paramStringBuffer1, paramString);
    this.j3 = true;
    paramStringBuffer1.delete(0, paramStringBuffer1.length());
    paramStringBuffer1.append(paramStringBuffer2);
  }
  
  private boolean jdMethod_if(File paramFile)
  {
    try
    {
      paramFile.createNewFile();
      StringBuffer localStringBuffer = new StringBuffer(256);
      localStringBuffer.append("C");
      localStringBuffer.append("\t");
      localStringBuffer.append(Jni.h(aw.b6().b4()));
      localStringBuffer.append("\n");
      jdMethod_if(localStringBuffer, paramFile);
      return true;
    }
    catch (Exception paramFile) {}
    return false;
  }
  
  private boolean jdMethod_if(File paramFile, int paramInt)
  {
    String str = null;
    if (paramInt == 2) {
      str = cy();
    }
    while (str == null)
    {
      return false;
      if (paramInt == 1) {
        str = cs();
      }
    }
    return paramFile.renameTo(new File(str));
  }
  
  private boolean jdMethod_long(int paramInt)
  {
    Object localObject = e(paramInt);
    if (localObject == null) {}
    label81:
    label83:
    do
    {
      File localFile;
      do
      {
        do
        {
          do
          {
            do
            {
              return false;
              if (paramInt != 2) {
                break label83;
              }
              localFile = new File((String)localObject);
              if (!localFile.exists()) {
                break;
              }
              if (localFile.length() <= 30720L) {
                break label81;
              }
            } while (!jdMethod_if(localFile, paramInt));
            localObject = new File((String)localObject);
          } while (((File)localObject).exists());
          try
          {
            bool = jdMethod_if((File)localObject);
            return bool;
          }
          catch (Exception localException1)
          {
            boolean bool;
            return false;
          }
          return true;
        } while ((paramInt != 1) || (!cB()));
        localFile = new File((String)localObject);
        if (!localFile.exists()) {
          break;
        }
        if (localFile.length() <= 30720L) {
          break label159;
        }
      } while (!jdMethod_if(localFile, paramInt));
      localObject = new File((String)localObject);
    } while (((File)localObject).exists());
    label159:
    try
    {
      bool = jdMethod_if((File)localObject);
      return bool;
    }
    catch (Exception localException2) {}
    return true;
    return false;
  }
  
  private String jdMethod_void(int paramInt)
  {
    String str1 = c.jdMethod_char();
    String str2;
    if (str1 == null)
    {
      str2 = null;
      return str2;
    }
    if (paramInt == 1) {}
    for (str1 = str1 + File.separator + "llmis1";; str1 = str1 + File.separator + "llmis2")
    {
      File localFile = new File(str1);
      str2 = str1;
      if (localFile.exists()) {
        break;
      }
      try
      {
        boolean bool = localFile.mkdirs();
        str2 = str1;
        if (bool) {
          break;
        }
        return null;
      }
      catch (Exception localException) {}
      if (paramInt != 2) {
        break label117;
      }
    }
    label117:
    return null;
    return null;
  }
  
  public void cA()
  {
    this.jY = false;
    if ((this.j5 != null) && (this.j5.length() > 3800))
    {
      File localFile = new File(e(2));
      jdMethod_if(this.j5, localFile);
    }
    this.j5 = null;
    cw();
  }
  
  public String cr()
  {
    int i = 0;
    String str1 = jdMethod_void(1);
    String[] arrayOfString = new String[3];
    arrayOfString[0] = "lmibaca.dat";
    arrayOfString[1] = "lmibacb.dat";
    arrayOfString[2] = "lmibacz.dat";
    for (;;)
    {
      try
      {
        int j = arrayOfString.length;
        if (i >= j) {
          break;
        }
        String str2 = arrayOfString[i];
        File localFile = new File(str1 + File.separator + str2);
        if (localFile.exists()) {
          if (localFile.length() > 92160L)
          {
            localFile.delete();
          }
          else if (localFile.length() >= 4096L)
          {
            if ((str2.equals("lmibacz.dat")) && (this.j0)) {
              return null;
            }
            str1 = str1 + File.separator + str2;
            return str1;
          }
        }
      }
      catch (Exception localException)
      {
        return null;
      }
      i += 1;
    }
    return null;
  }
  
  public void cv()
  {
    this.j1.post(new aa.2(this));
  }
  
  public void cz()
  {
    this.j0 = false;
    if (((this.j7 != null) && (this.j7.length() > 3800)) || (this.j3))
    {
      File localFile = new File(e(1));
      d(this.j7.length());
      jdMethod_if(this.j7, localFile);
      this.j3 = false;
    }
    this.j7 = null;
    cw();
  }
  
  public void jdMethod_goto(int paramInt)
  {
    if (this.j0) {}
    while (!jdMethod_long(1)) {
      return;
    }
    StringBuffer localStringBuffer = new StringBuffer(128);
    this.j0 = true;
    this.j7 = new StringBuffer(8192);
    localStringBuffer.append("T1");
    localStringBuffer.append("\t");
    localStringBuffer.append(paramInt);
    localStringBuffer.append("\n");
    jdMethod_if(localStringBuffer);
    cq();
    this.jS = new aa.1(this);
    this.j1.postDelayed(this.jS, 8000L);
  }
  
  public void onAccuracyChanged(Sensor paramSensor, int paramInt) {}
  
  public void onSensorChanged(SensorEvent paramSensorEvent)
  {
    int i = paramSensorEvent.sensor.getType();
    StringBuffer localStringBuffer = new StringBuffer(256);
    if (i == 1)
    {
      this.j4 += 1;
      localStringBuffer.append("A");
      localStringBuffer.append("\t");
      localStringBuffer.append(paramSensorEvent.values[0]);
      localStringBuffer.append("\t");
      localStringBuffer.append(paramSensorEvent.values[1]);
      localStringBuffer.append("\t");
      localStringBuffer.append(paramSensorEvent.values[2]);
      if (this.j4 == 1)
      {
        localStringBuffer.append("\t");
        localStringBuffer.append(paramSensorEvent.timestamp);
      }
      if (this.j4 >= 14) {
        this.j4 = 0;
      }
      localStringBuffer.append("\n");
      jdMethod_do(localStringBuffer);
      jdMethod_if(localStringBuffer);
    }
    if (i == 2)
    {
      this.jX += 1;
      localStringBuffer.append("M");
      localStringBuffer.append("\t");
      localStringBuffer.append(paramSensorEvent.values[0]);
      localStringBuffer.append("\t");
      localStringBuffer.append(paramSensorEvent.values[1]);
      localStringBuffer.append("\t");
      localStringBuffer.append(paramSensorEvent.values[2]);
      if (this.jX == 1)
      {
        localStringBuffer.append("\t");
        localStringBuffer.append(paramSensorEvent.timestamp);
      }
      if (this.jX > 13) {
        this.jX = 0;
      }
      localStringBuffer.append("\n");
      jdMethod_do(localStringBuffer);
    }
  }
  
  class a
  {
    StringBuffer jdField_do = null;
    public boolean jdField_if = false;
    
    a() {}
    
    public void a() {}
    
    public void jdMethod_do() {}
    
    public void jdMethod_if() {}
  }
  
  class b
  {
    public b() {}
  }
}
