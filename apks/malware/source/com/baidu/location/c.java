package com.baidu.location;

import android.location.Location;
import android.os.Environment;
import android.text.TextUtils;
import android.util.Log;
import java.io.File;
import java.util.Calendar;
import java.util.Locale;

class c
  implements au, l
{
  public static int V = 0;
  public static int W = 0;
  public static String X;
  public static float Y = 0.0F;
  public static int Z = 0;
  public static float a0 = 0.0F;
  public static boolean a1 = false;
  public static int a2 = 0;
  public static int a3 = 0;
  public static int a4 = 0;
  public static boolean a5 = false;
  public static int a6 = 0;
  public static double a7 = 0.0D;
  public static float a8 = 0.0F;
  public static float a9 = 0.0F;
  public static byte[] aA;
  private static boolean aB = false;
  public static long aC = 0L;
  public static int aD = 70;
  public static final boolean aE = true;
  public static double aF;
  public static int aG;
  public static int aH;
  public static long aI;
  private static String aJ;
  public static int aK;
  private static String aL;
  public static int aM;
  private static Process aN;
  public static long aO;
  public static float aP;
  public static long aQ;
  public static float aR;
  public static float aS;
  public static int aT;
  public static int aU;
  public static int aV;
  private static String aW;
  public static boolean aX;
  public static float aY;
  private static String aZ;
  public static float aa;
  public static double ab;
  public static long ac;
  public static float ad;
  public static float ae;
  public static float af;
  public static boolean ag;
  public static int ah;
  public static int ai;
  public static int aj;
  public static int ak;
  public static boolean al = false;
  public static double am;
  public static long an;
  public static float ao;
  public static int ap;
  public static boolean aq;
  public static int ar;
  public static int as;
  public static int at = 6;
  public static int au;
  public static String av;
  public static int aw;
  public static int ax;
  public static boolean ay;
  private static boolean az;
  public static String ba;
  public static float bb;
  public static float bc;
  
  static
  {
    ag = false;
    ak = 0;
    aL = "http://loc.map.baidu.com/sdk.php";
    X = "http://loc.map.baidu.com/sdk_ep.php";
    aZ = "http://loc.map.baidu.com/user_err.php";
    aW = "http://loc.map.baidu.com/oqur.php";
    az = false;
    aB = false;
    aJ = "[baidu_location_service]";
    aN = null;
    av = "no";
    ba = "gcj02";
    a5 = true;
    aK = 3;
    a7 = 0.0D;
    am = 0.0D;
    aF = 0.0D;
    ab = 0.0D;
    aj = 0;
    aA = null;
    aq = false;
    ah = 0;
    ad = 1.1F;
    aP = 2.2F;
    af = 2.3F;
    aR = 3.8F;
    aG = 3;
    V = 10;
    aH = 2;
    W = 7;
    Z = 20;
    aw = 70;
    a2 = 120;
    bc = 2.0F;
    a9 = 10.0F;
    ao = 50.0F;
    aY = 200.0F;
    aV = 16;
    aa = 0.9F;
    as = 10000;
    aS = 0.5F;
    bb = 0.0F;
    a8 = 0.1F;
    a6 = 30;
    a4 = 100;
    ai = 420000;
    ay = true;
    aX = true;
    au = 20;
    ar = 300;
    ax = 1000;
    aO = 900000L;
    aI = 420000L;
    ac = 180000L;
    an = 180000L;
    aQ = 15L;
    aC = 300000L;
    a3 = 100;
    aT = 0;
    aU = 30000;
    aM = 30000;
    a0 = 10.0F;
    ae = 6.0F;
    Y = 10.0F;
    ap = 60;
  }
  
  c() {}
  
  public static void jdMethod_byte() {}
  
  public static void jdMethod_case()
  {
    try
    {
      if (aN != null)
      {
        aN.destroy();
        aN = null;
      }
      return;
    }
    catch (Exception localException) {}
  }
  
  public static String jdMethod_char()
  {
    String str = jdMethod_try();
    if (str == null) {
      return null;
    }
    return str + "/baidu/tempdata";
  }
  
  static int jdMethod_do(String paramString1, String paramString2, String paramString3)
  {
    if ((paramString1 == null) || (paramString1.equals(""))) {}
    int i;
    do
    {
      int j;
      do
      {
        do
        {
          return Integer.MIN_VALUE;
          i = paramString1.indexOf(paramString2);
        } while (i == -1);
        i += paramString2.length();
        j = paramString1.indexOf(paramString3, i);
      } while (j == -1);
      paramString1 = paramString1.substring(i, j);
    } while ((paramString1 == null) || (paramString1.equals("")));
    try
    {
      i = Integer.parseInt(paramString1);
      return i;
    }
    catch (NumberFormatException paramString1) {}
    return Integer.MIN_VALUE;
  }
  
  public static String jdMethod_do()
  {
    return aW;
  }
  
  public static void jdMethod_do(String paramString)
  {
    if (paramString != null) {
      aL = paramString;
    }
  }
  
  public static void jdMethod_do(String paramString1, String paramString2) {}
  
  static double jdMethod_for(String paramString1, String paramString2, String paramString3)
  {
    if ((paramString1 == null) || (paramString1.equals(""))) {}
    do
    {
      int i;
      int j;
      do
      {
        do
        {
          return Double.MIN_VALUE;
          i = paramString1.indexOf(paramString2);
        } while (i == -1);
        i += paramString2.length();
        j = paramString1.indexOf(paramString3, i);
      } while (j == -1);
      paramString1 = paramString1.substring(i, j);
    } while ((paramString1 == null) || (paramString1.equals("")));
    try
    {
      double d = Double.parseDouble(paramString1);
      return d;
    }
    catch (NumberFormatException paramString1) {}
    return Double.MIN_VALUE;
  }
  
  public static String jdMethod_for()
  {
    return aL;
  }
  
  static float jdMethod_if(String paramString1, String paramString2, String paramString3)
  {
    if ((paramString1 == null) || (paramString1.equals(""))) {}
    do
    {
      int i;
      int j;
      do
      {
        do
        {
          return Float.MIN_VALUE;
          i = paramString1.indexOf(paramString2);
        } while (i == -1);
        i += paramString2.length();
        j = paramString1.indexOf(paramString3, i);
      } while (j == -1);
      paramString1 = paramString1.substring(i, j);
    } while ((paramString1 == null) || (paramString1.equals("")));
    try
    {
      float f = Float.parseFloat(paramString1);
      return f;
    }
    catch (NumberFormatException paramString1) {}
    return Float.MIN_VALUE;
  }
  
  static String jdMethod_if()
  {
    Calendar localCalendar = Calendar.getInstance();
    int i = localCalendar.get(5);
    int j = localCalendar.get(1);
    int k = localCalendar.get(2);
    int m = localCalendar.get(11);
    int n = localCalendar.get(12);
    int i1 = localCalendar.get(13);
    return String.format(Locale.CHINA, "%d_%d_%d_%d_%d_%d", new Object[] { Integer.valueOf(j), Integer.valueOf(k + 1), Integer.valueOf(i), Integer.valueOf(m), Integer.valueOf(n), Integer.valueOf(i1) });
  }
  
  public static String jdMethod_if(r.a paramA, ao.b paramB, Location paramLocation, String paramString)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    if (paramA != null)
    {
      String str = paramA.toString();
      if (str != null) {
        localStringBuffer.append(str);
      }
    }
    if (paramB != null) {}
    try
    {
      paramB = paramB.a(5);
      if (paramB != null) {
        localStringBuffer.append(paramB);
      }
      if (paramLocation != null)
      {
        if (ak == 0) {
          break label157;
        }
        paramB = v.jdMethod_new(paramLocation);
        if (paramB != null) {
          localStringBuffer.append(paramB);
        }
      }
      paramB = aw.b6().jdMethod_char(false);
      if (paramB != null) {
        localStringBuffer.append(paramB);
      }
      if (paramString != null) {
        localStringBuffer.append(paramString);
      }
      if (paramA != null)
      {
        paramA = paramA.jdMethod_int();
        if ((paramA != null) && (paramA.length() + localStringBuffer.length() < 750)) {
          localStringBuffer.append(paramA);
        }
      }
      return localStringBuffer.toString();
    }
    catch (Exception paramB)
    {
      for (;;)
      {
        paramB = null;
        continue;
        label157:
        paramB = v.jdMethod_byte(paramLocation);
      }
    }
  }
  
  public static String jdMethod_if(r.a paramA, ao.b paramB, Location paramLocation, String paramString, int paramInt)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    String str;
    if (paramA != null)
    {
      str = paramA.toString();
      if (str != null) {
        localStringBuffer.append(str);
      }
    }
    if (paramB != null)
    {
      if (paramInt != 0) {
        break label285;
      }
      str = paramB.jdMethod_char();
    }
    for (;;)
    {
      if (str != null) {
        localStringBuffer.append(str);
      }
      if (paramLocation != null)
      {
        if ((ak == 0) || (paramInt == 0)) {
          break label294;
        }
        str = v.jdMethod_new(paramLocation);
        label81:
        if (str != null) {
          localStringBuffer.append(str);
        }
      }
      boolean bool = false;
      if (paramInt == 0) {
        bool = true;
      }
      str = aw.b6().jdMethod_char(bool);
      if (str != null) {
        localStringBuffer.append(str);
      }
      if (paramString != null) {
        localStringBuffer.append(paramString);
      }
      paramString = at.jdMethod_do().a();
      if (!TextUtils.isEmpty(paramString)) {
        localStringBuffer.append("&bc=").append(paramString);
      }
      if (paramA != null)
      {
        paramA = paramA.jdMethod_int();
        if ((paramA != null) && (paramA.length() + localStringBuffer.length() < 750)) {
          localStringBuffer.append(paramA);
        }
      }
      paramA = localStringBuffer.toString();
      if ((paramLocation == null) || (paramB == null)) {
        break label364;
      }
      try
      {
        float f = paramLocation.getSpeed();
        paramInt = ak;
        int i = paramB.jdMethod_do();
        int j = paramB.jdMethod_try();
        bool = paramB.jdMethod_case();
        if ((f < ae) && ((paramInt == 1) || (paramInt == 0)) && ((i < ap) || (bool == true)))
        {
          aK = 1;
          return paramA;
          label285:
          str = paramB.jdMethod_byte();
          continue;
          label294:
          str = v.jdMethod_byte(paramLocation);
          break label81;
        }
        else if ((f < Y) && ((paramInt == 1) || (paramInt == 0) || (paramInt == 3)) && ((i < aD) || (j > at)))
        {
          aK = 2;
          return paramA;
        }
      }
      catch (Exception paramB)
      {
        aK = 3;
        return paramA;
      }
    }
    aK = 3;
    return paramA;
    label364:
    aK = 3;
    return paramA;
  }
  
  static String jdMethod_if(String paramString1, String paramString2, String paramString3, double paramDouble)
  {
    if ((paramString1 == null) || (paramString1.equals(""))) {}
    int i;
    int j;
    do
    {
      do
      {
        return null;
        i = paramString1.indexOf(paramString2);
      } while (i == -1);
      i += paramString2.length();
      j = paramString1.indexOf(paramString3, i);
    } while (j == -1);
    paramString2 = paramString1.substring(0, i);
    paramString1 = paramString1.substring(j);
    paramString3 = String.format(Locale.CHINA, "%.7f", new Object[] { Double.valueOf(paramDouble) });
    return paramString2 + paramString3 + paramString1;
  }
  
  public static void jdMethod_if(String paramString)
  {
    if (aB) {
      Log.d(aJ, paramString);
    }
  }
  
  public static void jdMethod_if(String paramString1, String paramString2)
  {
    if (az) {
      Log.d(paramString1, paramString2);
    }
  }
  
  public static boolean jdMethod_if(BDLocation paramBDLocation)
  {
    int i = paramBDLocation.getLocType();
    return (i > 100) && (i < 200);
  }
  
  static String jdMethod_int()
  {
    Calendar localCalendar = Calendar.getInstance();
    int i = localCalendar.get(5);
    int j = localCalendar.get(1);
    int k = localCalendar.get(2);
    int m = localCalendar.get(11);
    int n = localCalendar.get(12);
    int i1 = localCalendar.get(13);
    return String.format(Locale.CHINA, "%d-%d-%d %d:%d:%d", new Object[] { Integer.valueOf(j), Integer.valueOf(k + 1), Integer.valueOf(i), Integer.valueOf(m), Integer.valueOf(n), Integer.valueOf(i1) });
  }
  
  public static String jdMethod_new()
  {
    return aZ;
  }
  
  public static String jdMethod_try()
  {
    if (Environment.getExternalStorageState().equals("mounted")) {}
    try
    {
      String str = Environment.getExternalStorageDirectory().getPath();
      File localFile = new File(str + "/baidu/tempdata");
      if (!localFile.exists()) {
        localFile.mkdirs();
      }
      return str;
    }
    catch (Exception localException) {}
    return null;
    return null;
  }
}
