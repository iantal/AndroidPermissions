package com.baidu.location;

import java.io.File;
import java.io.RandomAccessFile;
import java.util.Locale;
import org.apache.http.HttpEntity;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

class cq
  implements bb
{
  public static boolean a;
  public static boolean b;
  public static boolean c;
  public static boolean d;
  public static boolean e;
  public static boolean f;
  public static int g = -1;
  public static int h = -1;
  public static int j = 0;
  private static cq k = null;
  private static final String n;
  private cr l = null;
  private long m = 0L;
  
  static
  {
    a = true;
    b = true;
    c = false;
    d = true;
    e = true;
    f = true;
    n = i + "/conlts.dat";
  }
  
  private cq() {}
  
  public static cq a()
  {
    if (k == null) {
      k = new cq();
    }
    return k;
  }
  
  public static void a(int paramInt)
  {
    boolean bool2 = true;
    if ((paramInt & 0x1) == 1)
    {
      bool1 = true;
      a = bool1;
      if ((paramInt & 0x2) != 2) {
        break label92;
      }
      bool1 = true;
      label24:
      b = bool1;
      if ((paramInt & 0x4) != 4) {
        break label97;
      }
      bool1 = true;
      label37:
      c = bool1;
      if ((paramInt & 0x8) != 8) {
        break label102;
      }
      bool1 = true;
      label52:
      d = bool1;
      if ((paramInt & 0x10000) != 65536) {
        break label107;
      }
      bool1 = true;
      label67:
      e = bool1;
      if ((paramInt & 0x20000) != 131072) {
        break label112;
      }
    }
    label92:
    label97:
    label102:
    label107:
    label112:
    for (boolean bool1 = bool2;; bool1 = false)
    {
      f = bool1;
      return;
      bool1 = false;
      break;
      bool1 = false;
      break label24;
      bool1 = false;
      break label37;
      bool1 = false;
      break label52;
      bool1 = false;
      break label67;
    }
  }
  
  private void a(HttpEntity paramHttpEntity)
  {
    int i1 = 0;
    int i = 0;
    for (;;)
    {
      try
      {
        paramHttpEntity = EntityUtils.toByteArray(paramHttpEntity);
        if (paramHttpEntity == null)
        {
          if (i == 0) {
            break;
          }
          d();
          return;
        }
        if (paramHttpEntity.length < 640)
        {
          bh.q = false;
          bh.n = bh.l + 0.025D;
          bh.m = bh.k - 0.025D;
          i = 1;
        }
        else
        {
          bh.q = true;
          bh.m = Double.longBitsToDouble(Long.valueOf((paramHttpEntity[7] & 0xFF) << 56 | (paramHttpEntity[6] & 0xFF) << 48 | (paramHttpEntity[5] & 0xFF) << 40 | (paramHttpEntity[4] & 0xFF) << 32 | (paramHttpEntity[3] & 0xFF) << 24 | (paramHttpEntity[2] & 0xFF) << 16 | (paramHttpEntity[1] & 0xFF) << 8 | paramHttpEntity[0] & 0xFF).longValue());
          bh.n = Double.longBitsToDouble(Long.valueOf((paramHttpEntity[15] & 0xFF) << 56 | (paramHttpEntity[14] & 0xFF) << 48 | (paramHttpEntity[13] & 0xFF) << 40 | (paramHttpEntity[12] & 0xFF) << 32 | (paramHttpEntity[11] & 0xFF) << 24 | (paramHttpEntity[10] & 0xFF) << 16 | (paramHttpEntity[9] & 0xFF) << 8 | paramHttpEntity[8] & 0xFF).longValue());
          bh.p = new byte['É±'];
          i = i1;
          if (i < 625)
          {
            bh.p[i] = paramHttpEntity[(i + 16)];
            i += 1;
          }
          else
          {
            i = 1;
          }
        }
      }
      catch (Exception paramHttpEntity)
      {
        return;
      }
    }
  }
  
  public static void b(int paramInt)
  {
    Object localObject = new File(n);
    if (!((File)localObject).exists()) {
      f();
    }
    try
    {
      localObject = new RandomAccessFile((File)localObject, "rw");
      ((RandomAccessFile)localObject).seek(4L);
      int i = ((RandomAccessFile)localObject).readInt();
      int i1 = ((RandomAccessFile)localObject).readInt();
      ((RandomAccessFile)localObject).seek(i * j + 128);
      byte[] arrayOfByte = (bg.g + '\000').getBytes();
      ((RandomAccessFile)localObject).writeInt(arrayOfByte.length);
      ((RandomAccessFile)localObject).write(arrayOfByte, 0, arrayOfByte.length);
      ((RandomAccessFile)localObject).writeInt(paramInt);
      if (i1 == j)
      {
        ((RandomAccessFile)localObject).seek(8L);
        ((RandomAccessFile)localObject).writeInt(i1 + 1);
      }
      ((RandomAccessFile)localObject).close();
      return;
    }
    catch (Exception localException) {}
  }
  
  /* Error */
  private void b(HttpEntity paramHttpEntity)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_3
    //   2: iconst_m1
    //   3: putstatic 65	com/baidu/location/cq:h	I
    //   6: aload_1
    //   7: ifnull +62 -> 69
    //   10: aload_1
    //   11: ldc -64
    //   13: invokestatic 195	org/apache/http/util/EntityUtils:toString	(Lorg/apache/http/HttpEntity;Ljava/lang/String;)Ljava/lang/String;
    //   16: astore_1
    //   17: aload_1
    //   18: astore 4
    //   20: aload_1
    //   21: astore_3
    //   22: aload_0
    //   23: aload_1
    //   24: invokevirtual 198	com/baidu/location/cq:a	(Ljava/lang/String;)Z
    //   27: ifeq +11 -> 38
    //   30: aload_1
    //   31: astore_3
    //   32: invokestatic 200	com/baidu/location/cq:c	()V
    //   35: aload_1
    //   36: astore 4
    //   38: new 202	org/json/JSONObject
    //   41: dup
    //   42: aload 4
    //   44: invokespecial 203	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   47: astore_1
    //   48: aload_1
    //   49: ldc -51
    //   51: invokevirtual 208	org/json/JSONObject:has	(Ljava/lang/String;)Z
    //   54: ifeq +15 -> 69
    //   57: aload_1
    //   58: ldc -51
    //   60: invokevirtual 212	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   63: invokestatic 218	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   66: putstatic 65	com/baidu/location/cq:h	I
    //   69: invokestatic 220	com/baidu/location/cq:g	()V
    //   72: getstatic 65	com/baidu/location/cq:h	I
    //   75: iconst_m1
    //   76: if_icmpeq +37 -> 113
    //   79: getstatic 65	com/baidu/location/cq:h	I
    //   82: istore_2
    //   83: getstatic 65	com/baidu/location/cq:h	I
    //   86: invokestatic 222	com/baidu/location/cq:b	(I)V
    //   89: iload_2
    //   90: iconst_m1
    //   91: if_icmpeq +7 -> 98
    //   94: iload_2
    //   95: invokestatic 224	com/baidu/location/cq:a	(I)V
    //   98: invokestatic 229	com/baidu/location/bz:a	()Lcom/baidu/location/bz;
    //   101: invokevirtual 232	com/baidu/location/bz:d	()Landroid/os/Handler;
    //   104: bipush 92
    //   106: invokevirtual 238	android/os/Handler:obtainMessage	(I)Landroid/os/Message;
    //   109: invokevirtual 243	android/os/Message:sendToTarget	()V
    //   112: return
    //   113: getstatic 63	com/baidu/location/cq:g	I
    //   116: iconst_m1
    //   117: if_icmpeq +23 -> 140
    //   120: getstatic 63	com/baidu/location/cq:g	I
    //   123: istore_2
    //   124: goto -35 -> 89
    //   127: astore_1
    //   128: return
    //   129: astore_1
    //   130: goto -61 -> 69
    //   133: astore_1
    //   134: aload_3
    //   135: astore 4
    //   137: goto -99 -> 38
    //   140: iconst_m1
    //   141: istore_2
    //   142: goto -53 -> 89
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	145	0	this	cq
    //   0	145	1	paramHttpEntity	HttpEntity
    //   82	60	2	i	int
    //   1	134	3	localHttpEntity1	HttpEntity
    //   18	118	4	localHttpEntity2	HttpEntity
    // Exception table:
    //   from	to	target	type
    //   69	89	127	java/lang/Exception
    //   94	98	127	java/lang/Exception
    //   98	112	127	java/lang/Exception
    //   113	124	127	java/lang/Exception
    //   38	69	129	java/lang/Exception
    //   10	17	133	java/lang/Exception
    //   22	30	133	java/lang/Exception
    //   32	35	133	java/lang/Exception
  }
  
  public static void c()
  {
    Object localObject1 = i + "/config.dat";
    if (bh.Q) {}
    for (int i = 1;; i = 0)
    {
      if (bh.R) {}
      for (int i1 = 1;; i1 = 0)
      {
        byte[] arrayOfByte = String.format(Locale.CHINA, "{\"ver\":\"%d\",\"gps\":\"%.1f|%.1f|%.1f|%.1f|%d|%d|%d|%d|%d|%d|%d\",\"up\":\"%.1f|%.1f|%.1f|%.1f\",\"wf\":\"%d|%.1f|%d|%.1f\",\"ab\":\"%.2f|%.2f|%d|%d\",\"gpc\":\"%d|%d|%d|%d|%d|%d\",\"zxd\":\"%.1f|%.1f|%d|%d|%d\",\"shak\":\"%d|%d|%.1f\",\"dmx\":%d}", new Object[] { Integer.valueOf(bh.r), Float.valueOf(bh.s), Float.valueOf(bh.t), Float.valueOf(bh.u), Float.valueOf(bh.v), Integer.valueOf(bh.w), Integer.valueOf(bh.x), Integer.valueOf(bh.y), Integer.valueOf(bh.z), Integer.valueOf(bh.A), Integer.valueOf(bh.B), Integer.valueOf(bh.C), Float.valueOf(bh.D), Float.valueOf(bh.E), Float.valueOf(bh.F), Float.valueOf(bh.G), Integer.valueOf(bh.H), Float.valueOf(bh.I), Integer.valueOf(bh.J), Float.valueOf(bh.K), Float.valueOf(bh.L), Float.valueOf(bh.M), Integer.valueOf(bh.N), Integer.valueOf(bh.O), Integer.valueOf(i), Integer.valueOf(i1), Integer.valueOf(bh.S), Integer.valueOf(bh.U), Long.valueOf(bh.Z), Integer.valueOf(bh.ac), Float.valueOf(bh.ag), Float.valueOf(bh.ah), Integer.valueOf(bh.ai), Integer.valueOf(bh.aj), Integer.valueOf(bh.ak), Integer.valueOf(bh.ad), Integer.valueOf(bh.ae), Float.valueOf(bh.af), Integer.valueOf(bh.ab) }).getBytes();
        try
        {
          localObject1 = new File((String)localObject1);
          if (!((File)localObject1).exists())
          {
            Object localObject2 = new File(i);
            if (!((File)localObject2).exists()) {
              ((File)localObject2).mkdirs();
            }
            if (((File)localObject1).createNewFile())
            {
              localObject2 = new RandomAccessFile((File)localObject1, "rw");
              ((RandomAccessFile)localObject2).seek(0L);
              ((RandomAccessFile)localObject2).writeBoolean(false);
              ((RandomAccessFile)localObject2).writeBoolean(false);
              ((RandomAccessFile)localObject2).close();
            }
          }
          else
          {
            localObject1 = new RandomAccessFile((File)localObject1, "rw");
            ((RandomAccessFile)localObject1).seek(0L);
            ((RandomAccessFile)localObject1).writeBoolean(true);
            ((RandomAccessFile)localObject1).seek(2L);
            ((RandomAccessFile)localObject1).writeInt(arrayOfByte.length);
            ((RandomAccessFile)localObject1).write(arrayOfByte);
            ((RandomAccessFile)localObject1).close();
          }
          return;
        }
        catch (Exception localException)
        {
          return;
        }
      }
    }
  }
  
  public static void d()
  {
    Object localObject1 = i + "/config.dat";
    try
    {
      localObject1 = new File((String)localObject1);
      if (!((File)localObject1).exists())
      {
        Object localObject2 = new File(i);
        if (!((File)localObject2).exists()) {
          ((File)localObject2).mkdirs();
        }
        if (((File)localObject1).createNewFile())
        {
          localObject2 = new RandomAccessFile((File)localObject1, "rw");
          ((RandomAccessFile)localObject2).seek(0L);
          ((RandomAccessFile)localObject2).writeBoolean(false);
          ((RandomAccessFile)localObject2).writeBoolean(false);
          ((RandomAccessFile)localObject2).close();
        }
      }
      else
      {
        localObject1 = new RandomAccessFile((File)localObject1, "rw");
        ((RandomAccessFile)localObject1).seek(1L);
        ((RandomAccessFile)localObject1).writeBoolean(true);
        ((RandomAccessFile)localObject1).seek(1024L);
        ((RandomAccessFile)localObject1).writeDouble(bh.m);
        ((RandomAccessFile)localObject1).writeDouble(bh.n);
        ((RandomAccessFile)localObject1).writeBoolean(bh.q);
        if ((bh.q) && (bh.p != null)) {
          ((RandomAccessFile)localObject1).write(bh.p);
        }
        ((RandomAccessFile)localObject1).close();
      }
      return;
    }
    catch (Exception localException) {}
  }
  
  public static void f()
  {
    try
    {
      File localFile = new File(n);
      if (!localFile.exists())
      {
        Object localObject = new File(i);
        if (!((File)localObject).exists()) {
          ((File)localObject).mkdirs();
        }
        localObject = localFile;
        if (!localFile.createNewFile()) {
          localObject = null;
        }
        localObject = new RandomAccessFile((File)localObject, "rw");
        ((RandomAccessFile)localObject).seek(0L);
        ((RandomAccessFile)localObject).writeInt(0);
        ((RandomAccessFile)localObject).writeInt(128);
        ((RandomAccessFile)localObject).writeInt(0);
        ((RandomAccessFile)localObject).close();
      }
      return;
    }
    catch (Exception localException) {}
  }
  
  public static void g()
  {
    int i = 0;
    for (;;)
    {
      try
      {
        Object localObject = new File(n);
        if (!((File)localObject).exists()) {
          break;
        }
        localObject = new RandomAccessFile((File)localObject, "rw");
        ((RandomAccessFile)localObject).seek(4L);
        int i1 = ((RandomAccessFile)localObject).readInt();
        if (i1 > 3000)
        {
          ((RandomAccessFile)localObject).close();
          j = 0;
          f();
          return;
        }
        int i2 = ((RandomAccessFile)localObject).readInt();
        ((RandomAccessFile)localObject).seek(128L);
        byte[] arrayOfByte = new byte[i1];
        if (i < i2)
        {
          ((RandomAccessFile)localObject).seek(i1 * i + 128);
          int i3 = ((RandomAccessFile)localObject).readInt();
          if ((i3 > 0) && (i3 < i1))
          {
            ((RandomAccessFile)localObject).read(arrayOfByte, 0, i3);
            if (arrayOfByte[(i3 - 1)] == 0)
            {
              String str = new String(arrayOfByte, 0, i3 - 1);
              bg.a();
              if (str.equals(bg.g))
              {
                g = ((RandomAccessFile)localObject).readInt();
                j = i;
              }
            }
          }
        }
        else
        {
          if (i == i2) {
            j = i2;
          }
          ((RandomAccessFile)localObject).close();
          return;
        }
      }
      catch (Exception localException)
      {
        return;
      }
      i += 1;
    }
  }
  
  private void h()
  {
    String str = "&ver=" + bh.r + "&usr=" + bg.a().d() + "&app=" + bg.g + "&prod=" + bg.h;
    this.l.a(str, false);
  }
  
  public boolean a(String paramString)
  {
    boolean bool2 = true;
    if (paramString != null) {}
    try
    {
      paramString = new JSONObject(paramString);
      int i = Integer.parseInt(paramString.getString("ver"));
      if (i > bh.r)
      {
        bh.r = i;
        String[] arrayOfString;
        if (paramString.has("gps"))
        {
          arrayOfString = paramString.getString("gps").split("\\|");
          if (arrayOfString.length > 10)
          {
            if ((arrayOfString[0] != null) && (!arrayOfString[0].equals(""))) {
              bh.s = Float.parseFloat(arrayOfString[0]);
            }
            if ((arrayOfString[1] != null) && (!arrayOfString[1].equals(""))) {
              bh.t = Float.parseFloat(arrayOfString[1]);
            }
            if ((arrayOfString[2] != null) && (!arrayOfString[2].equals(""))) {
              bh.u = Float.parseFloat(arrayOfString[2]);
            }
            if ((arrayOfString[3] != null) && (!arrayOfString[3].equals(""))) {
              bh.v = Float.parseFloat(arrayOfString[3]);
            }
            if ((arrayOfString[4] != null) && (!arrayOfString[4].equals(""))) {
              bh.w = Integer.parseInt(arrayOfString[4]);
            }
            if ((arrayOfString[5] != null) && (!arrayOfString[5].equals(""))) {
              bh.x = Integer.parseInt(arrayOfString[5]);
            }
            if ((arrayOfString[6] != null) && (!arrayOfString[6].equals(""))) {
              bh.y = Integer.parseInt(arrayOfString[6]);
            }
            if ((arrayOfString[7] != null) && (!arrayOfString[7].equals(""))) {
              bh.z = Integer.parseInt(arrayOfString[7]);
            }
            if ((arrayOfString[8] != null) && (!arrayOfString[8].equals(""))) {
              bh.A = Integer.parseInt(arrayOfString[8]);
            }
            if ((arrayOfString[9] != null) && (!arrayOfString[9].equals(""))) {
              bh.B = Integer.parseInt(arrayOfString[9]);
            }
            if ((arrayOfString[10] != null) && (!arrayOfString[10].equals(""))) {
              bh.C = Integer.parseInt(arrayOfString[10]);
            }
          }
        }
        if (paramString.has("up"))
        {
          arrayOfString = paramString.getString("up").split("\\|");
          if (arrayOfString.length > 3)
          {
            if ((arrayOfString[0] != null) && (!arrayOfString[0].equals(""))) {
              bh.D = Float.parseFloat(arrayOfString[0]);
            }
            if ((arrayOfString[1] != null) && (!arrayOfString[1].equals(""))) {
              bh.E = Float.parseFloat(arrayOfString[1]);
            }
            if ((arrayOfString[2] != null) && (!arrayOfString[2].equals(""))) {
              bh.F = Float.parseFloat(arrayOfString[2]);
            }
            if ((arrayOfString[3] != null) && (!arrayOfString[3].equals(""))) {
              bh.G = Float.parseFloat(arrayOfString[3]);
            }
          }
        }
        if (paramString.has("wf"))
        {
          arrayOfString = paramString.getString("wf").split("\\|");
          if (arrayOfString.length > 3)
          {
            if ((arrayOfString[0] != null) && (!arrayOfString[0].equals(""))) {
              bh.H = Integer.parseInt(arrayOfString[0]);
            }
            if ((arrayOfString[1] != null) && (!arrayOfString[1].equals(""))) {
              bh.I = Float.parseFloat(arrayOfString[1]);
            }
            if ((arrayOfString[2] != null) && (!arrayOfString[2].equals(""))) {
              bh.J = Integer.parseInt(arrayOfString[2]);
            }
            if ((arrayOfString[3] != null) && (!arrayOfString[3].equals(""))) {
              bh.K = Float.parseFloat(arrayOfString[3]);
            }
          }
        }
        if (paramString.has("ab"))
        {
          arrayOfString = paramString.getString("ab").split("\\|");
          if (arrayOfString.length > 3)
          {
            if ((arrayOfString[0] != null) && (!arrayOfString[0].equals(""))) {
              bh.L = Float.parseFloat(arrayOfString[0]);
            }
            if ((arrayOfString[1] != null) && (!arrayOfString[1].equals(""))) {
              bh.M = Float.parseFloat(arrayOfString[1]);
            }
            if ((arrayOfString[2] != null) && (!arrayOfString[2].equals(""))) {
              bh.N = Integer.parseInt(arrayOfString[2]);
            }
            if ((arrayOfString[3] != null) && (!arrayOfString[3].equals(""))) {
              bh.O = Integer.parseInt(arrayOfString[3]);
            }
          }
        }
        if (paramString.has("zxd"))
        {
          arrayOfString = paramString.getString("zxd").split("\\|");
          if (arrayOfString.length > 4)
          {
            if ((arrayOfString[0] != null) && (!arrayOfString[0].equals(""))) {
              bh.ag = Float.parseFloat(arrayOfString[0]);
            }
            if ((arrayOfString[1] != null) && (!arrayOfString[1].equals(""))) {
              bh.ah = Float.parseFloat(arrayOfString[1]);
            }
            if ((arrayOfString[2] != null) && (!arrayOfString[2].equals(""))) {
              bh.ai = Integer.parseInt(arrayOfString[2]);
            }
            if ((arrayOfString[3] != null) && (!arrayOfString[3].equals(""))) {
              bh.aj = Integer.parseInt(arrayOfString[3]);
            }
            if ((arrayOfString[4] != null) && (!arrayOfString[4].equals(""))) {
              bh.ak = Integer.parseInt(arrayOfString[4]);
            }
          }
        }
        if (paramString.has("gpc"))
        {
          arrayOfString = paramString.getString("gpc").split("\\|");
          if (arrayOfString.length > 5)
          {
            if ((arrayOfString[0] != null) && (!arrayOfString[0].equals("")))
            {
              if (Integer.parseInt(arrayOfString[0]) <= 0) {
                break label1454;
              }
              bh.Q = true;
            }
            if ((arrayOfString[1] != null) && (!arrayOfString[1].equals("")))
            {
              if (Integer.parseInt(arrayOfString[1]) <= 0) {
                break label1461;
              }
              bh.R = true;
            }
            label1154:
            if ((arrayOfString[2] != null) && (!arrayOfString[2].equals(""))) {
              bh.S = Integer.parseInt(arrayOfString[2]);
            }
            if ((arrayOfString[3] != null) && (!arrayOfString[3].equals(""))) {
              bh.U = Integer.parseInt(arrayOfString[3]);
            }
            if ((arrayOfString[4] != null) && (!arrayOfString[4].equals("")))
            {
              i = Integer.parseInt(arrayOfString[4]);
              if (i <= 0) {
                break label1468;
              }
              bh.Z = i;
              bh.V = bh.Z * 1000L * 60L;
              bh.aa = bh.V >> 2;
            }
          }
        }
        for (;;)
        {
          if ((arrayOfString[5] != null) && (!arrayOfString[5].equals(""))) {
            bh.ac = Integer.parseInt(arrayOfString[5]);
          }
          if (paramString.has("shak"))
          {
            arrayOfString = paramString.getString("shak").split("\\|");
            if (arrayOfString.length > 2)
            {
              if ((arrayOfString[0] != null) && (!arrayOfString[0].equals(""))) {
                bh.ad = Integer.parseInt(arrayOfString[0]);
              }
              if ((arrayOfString[1] != null) && (!arrayOfString[1].equals(""))) {
                bh.ae = Integer.parseInt(arrayOfString[1]);
              }
              if ((arrayOfString[2] != null) && (!arrayOfString[2].equals(""))) {
                bh.af = Float.parseFloat(arrayOfString[2]);
              }
            }
          }
          bool1 = bool2;
          if (!paramString.has("dmx")) {
            break label1477;
          }
          bh.ab = paramString.getInt("dmx");
          bool1 = bool2;
          break label1477;
          label1454:
          bh.Q = false;
          break;
          label1461:
          bh.R = false;
          break label1154;
          label1468:
          bh.h = false;
        }
      }
      boolean bool1 = false;
      label1477:
      return bool1;
    }
    catch (Exception paramString) {}
    return false;
  }
  
  public void b()
  {
    if (System.currentTimeMillis() - this.m > 72000000L)
    {
      this.m = System.currentTimeMillis();
      h();
    }
  }
  
  public void b(String paramString)
  {
    this.l.a(paramString, true);
  }
  
  public void e()
  {
    Object localObject = i + "/config.dat";
    try
    {
      localObject = new File((String)localObject);
      if (((File)localObject).exists())
      {
        localObject = new RandomAccessFile((File)localObject, "rw");
        if (((RandomAccessFile)localObject).readBoolean())
        {
          ((RandomAccessFile)localObject).seek(2L);
          int i = ((RandomAccessFile)localObject).readInt();
          byte[] arrayOfByte = new byte[i];
          ((RandomAccessFile)localObject).read(arrayOfByte, 0, i);
          a(new String(arrayOfByte));
        }
        ((RandomAccessFile)localObject).seek(1L);
        if (((RandomAccessFile)localObject).readBoolean())
        {
          ((RandomAccessFile)localObject).seek(1024L);
          bh.m = ((RandomAccessFile)localObject).readDouble();
          bh.n = ((RandomAccessFile)localObject).readDouble();
          bh.q = ((RandomAccessFile)localObject).readBoolean();
          if (bh.q)
          {
            bh.p = new byte['É±'];
            ((RandomAccessFile)localObject).read(bh.p, 0, 625);
          }
        }
        ((RandomAccessFile)localObject).close();
      }
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    b(null);
  }
}
