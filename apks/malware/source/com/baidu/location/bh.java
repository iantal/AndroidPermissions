package com.baidu.location;

import android.content.Context;
import android.location.Location;
import android.text.TextUtils;
import android.util.Log;
import java.io.File;
import java.util.Calendar;
import java.util.Locale;

class bh
  implements bb
{
  public static int A = 20;
  public static int B = 70;
  public static int C = 120;
  public static float D = 2.0F;
  public static float E = 10.0F;
  public static float F = 50.0F;
  public static float G = 200.0F;
  public static int H = 16;
  public static float I = 0.9F;
  public static int J = 10000;
  public static float K = 0.5F;
  public static float L = 0.0F;
  public static float M = 0.1F;
  public static int N = 30;
  public static int O = 100;
  public static int P = 420000;
  public static boolean Q = true;
  public static boolean R = true;
  public static int S = 20;
  public static int T = 300;
  public static int U = 1000;
  public static long V = 900000L;
  public static long W = 420000L;
  public static long X = 180000L;
  public static long Y = 180000L;
  public static long Z = 15L;
  public static boolean a = false;
  public static long aa = 300000L;
  public static int ab = 100;
  public static int ac = 0;
  public static int ad = 30000;
  public static int ae = 30000;
  public static float af = 10.0F;
  public static float ag = 6.0F;
  public static float ah = 10.0F;
  public static int ai = 60;
  public static int aj = 70;
  public static int ak = 6;
  private static String al;
  private static String am;
  private static String an;
  private static String ao;
  private static boolean ap;
  private static boolean aq;
  private static String ar;
  private static Process as;
  public static boolean b = false;
  public static boolean c = false;
  public static int d = 0;
  public static String e;
  public static String f;
  public static String g;
  public static boolean h;
  public static int j;
  public static double k;
  public static double l;
  public static double m;
  public static double n;
  public static int o;
  public static byte[] p;
  public static boolean q;
  public static int r;
  public static float s;
  public static float t;
  public static float u;
  public static float v;
  public static int w;
  public static int x;
  public static int y;
  public static int z;
  
  static
  {
    al = "http://loc.map.baidu.com/sdk.php";
    e = "http://loc.map.baidu.com/sdk_ep.php";
    am = "http://loc.map.baidu.com/user_err.php";
    an = "http://loc.map.baidu.com/oqur.php";
    ao = "http://loc.map.baidu.com/tcu.php";
    ap = false;
    aq = false;
    ar = "[baidu_location_service]";
    as = null;
    f = "no";
    g = "gcj02";
    h = true;
    j = 3;
    k = 0.0D;
    l = 0.0D;
    m = 0.0D;
    n = 0.0D;
    o = 0;
    p = null;
    q = false;
    r = 0;
    s = 1.1F;
    t = 2.2F;
    u = 2.3F;
    v = 3.8F;
    w = 3;
    x = 10;
    y = 2;
    z = 7;
  }
  
  static int a(String paramString1, String paramString2, String paramString3)
  {
    if ((paramString1 == null) || (paramString1.equals(""))) {}
    int i;
    do
    {
      int i1;
      do
      {
        do
        {
          return Integer.MIN_VALUE;
          i = paramString1.indexOf(paramString2);
        } while (i == -1);
        i += paramString2.length();
        i1 = paramString1.indexOf(paramString3, i);
      } while (i1 == -1);
      paramString1 = paramString1.substring(i, i1);
    } while ((paramString1 == null) || (paramString1.equals("")));
    try
    {
      i = Integer.parseInt(paramString1);
      return i;
    }
    catch (NumberFormatException paramString1) {}
    return Integer.MIN_VALUE;
  }
  
  static String a()
  {
    Calendar localCalendar = Calendar.getInstance();
    int i = localCalendar.get(5);
    int i1 = localCalendar.get(1);
    int i2 = localCalendar.get(2);
    int i3 = localCalendar.get(11);
    int i4 = localCalendar.get(12);
    int i5 = localCalendar.get(13);
    return String.format(Locale.CHINA, "%d-%d-%d %d:%d:%d", new Object[] { Integer.valueOf(i1), Integer.valueOf(i2 + 1), Integer.valueOf(i), Integer.valueOf(i3), Integer.valueOf(i4), Integer.valueOf(i5) });
  }
  
  public static String a(cf paramCf, ar paramAr, Location paramLocation, String paramString)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    if (paramCf != null)
    {
      String str = paramCf.toString();
      if (str != null) {
        localStringBuffer.append(str);
      }
    }
    if (paramAr != null) {}
    try
    {
      paramAr = paramAr.a(5);
      if (paramAr != null) {
        localStringBuffer.append(paramAr);
      }
      if (paramLocation != null)
      {
        if (d == 0) {
          break label157;
        }
        paramAr = cl.c(paramLocation);
        if (paramAr != null) {
          localStringBuffer.append(paramAr);
        }
      }
      paramAr = bg.a().a(false);
      if (paramAr != null) {
        localStringBuffer.append(paramAr);
      }
      if (paramString != null) {
        localStringBuffer.append(paramString);
      }
      if (paramCf != null)
      {
        paramCf = paramCf.e();
        if ((paramCf != null) && (paramCf.length() + localStringBuffer.length() < 750)) {
          localStringBuffer.append(paramCf);
        }
      }
      return localStringBuffer.toString();
    }
    catch (Exception paramAr)
    {
      for (;;)
      {
        paramAr = null;
        continue;
        label157:
        paramAr = cl.b(paramLocation);
      }
    }
  }
  
  public static String a(cf paramCf, ar paramAr, Location paramLocation, String paramString, int paramInt)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    String str;
    if (paramCf != null)
    {
      str = paramCf.toString();
      if (str != null) {
        localStringBuffer.append(str);
      }
    }
    if (paramAr != null)
    {
      if (paramInt != 0) {
        break label285;
      }
      str = paramAr.c();
    }
    for (;;)
    {
      if (str != null) {
        localStringBuffer.append(str);
      }
      if (paramLocation != null)
      {
        if ((d == 0) || (paramInt == 0)) {
          break label294;
        }
        str = cl.c(paramLocation);
        label81:
        if (str != null) {
          localStringBuffer.append(str);
        }
      }
      boolean bool = false;
      if (paramInt == 0) {
        bool = true;
      }
      str = bg.a().a(bool);
      if (str != null) {
        localStringBuffer.append(str);
      }
      if (paramString != null) {
        localStringBuffer.append(paramString);
      }
      paramString = az.a().d();
      if (!TextUtils.isEmpty(paramString)) {
        localStringBuffer.append("&bc=").append(paramString);
      }
      if (paramCf != null)
      {
        paramCf = paramCf.e();
        if ((paramCf != null) && (paramCf.length() + localStringBuffer.length() < 750)) {
          localStringBuffer.append(paramCf);
        }
      }
      paramCf = localStringBuffer.toString();
      if ((paramLocation == null) || (paramAr == null)) {
        break label364;
      }
      try
      {
        float f1 = paramLocation.getSpeed();
        paramInt = d;
        int i = paramAr.f();
        int i1 = paramAr.b();
        bool = paramAr.g();
        if ((f1 < ag) && ((paramInt == 1) || (paramInt == 0)) && ((i < ai) || (bool == true)))
        {
          j = 1;
          return paramCf;
          label285:
          str = paramAr.d();
          continue;
          label294:
          str = cl.b(paramLocation);
          break label81;
        }
        else if ((f1 < ah) && ((paramInt == 1) || (paramInt == 0) || (paramInt == 3)) && ((i < aj) || (i1 > ak)))
        {
          j = 2;
          return paramCf;
        }
      }
      catch (Exception paramAr)
      {
        j = 3;
        return paramCf;
      }
    }
    j = 3;
    return paramCf;
    label364:
    j = 3;
    return paramCf;
  }
  
  public static void a(String paramString1, String paramString2) {}
  
  public static boolean a(BDLocation paramBDLocation)
  {
    int i = paramBDLocation.e();
    return (i > 100) && (i < 200);
  }
  
  public static void b()
  {
    try
    {
      if (as != null)
      {
        as.destroy();
        as = null;
      }
      return;
    }
    catch (Exception localException) {}
  }
  
  public static void b(String paramString1, String paramString2)
  {
    if (ap) {
      Log.d(paramString1, paramString2);
    }
  }
  
  public static void c() {}
  
  public static String d()
  {
    return al;
  }
  
  public static String e()
  {
    return am;
  }
  
  public static String f()
  {
    return ao;
  }
  
  public static String g()
  {
    try
    {
      Object localObject = new File(f.c().getFilesDir() + File.separator + "lldt");
      if (!((File)localObject).exists()) {
        ((File)localObject).mkdirs();
      }
      localObject = ((File)localObject).getAbsolutePath();
      return localObject;
    }
    catch (Exception localException) {}
    return null;
  }
}
