package com.baidu.location;

import android.content.Context;
import android.location.GpsSatellite;
import android.location.GpsStatus;
import android.location.Location;
import android.location.LocationManager;
import android.os.Bundle;
import android.os.Handler;
import android.text.TextUtils;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map.Entry;
import java.util.Set;

class cl
  implements bb
{
  private static StringBuilder F;
  private static String G;
  private static cl b = null;
  private static int k = 0;
  private static String t = null;
  private static String u = "Temp_in.dat";
  private static File v = new File(i, u);
  private final int A = 4;
  private Location B;
  private Location C;
  private long D;
  private long E;
  private int H;
  private int I;
  private HashMap J;
  private final long a = 1000L;
  private Context c;
  private LocationManager d = null;
  private Location e;
  private co f = null;
  private cp g = null;
  private GpsStatus h;
  private cn j = null;
  private long l = 0L;
  private long m = 0L;
  private boolean n = false;
  private boolean o = false;
  private String p = null;
  private boolean q = false;
  private long r = 0L;
  private long s = 0L;
  private Handler w = null;
  private final int x = 1;
  private final int y = 2;
  private final int z = 3;
  
  private cl() {}
  
  private int a(at paramAt, int paramInt)
  {
    if (k >= bh.x) {}
    do
    {
      double d1;
      do
      {
        do
        {
          return 1;
          if (k <= bh.w) {
            return 4;
          }
          d1 = paramAt.c();
        } while (d1 <= bh.s);
        if (d1 >= bh.t) {
          return 4;
        }
        d1 = paramAt.b();
      } while (d1 <= bh.u);
      if (d1 >= bh.v) {
        return 4;
      }
    } while (paramInt >= bh.z);
    if (paramInt <= bh.y) {
      return 4;
    }
    if (this.J != null) {
      return a(this.J);
    }
    return 3;
  }
  
  private int a(HashMap paramHashMap)
  {
    Object localObject1;
    ArrayList localArrayList;
    int i;
    Object localObject2;
    int i1;
    if (this.H > 4)
    {
      localObject1 = new ArrayList();
      localArrayList = new ArrayList();
      paramHashMap = paramHashMap.entrySet().iterator();
      i = 0;
      if (paramHashMap.hasNext())
      {
        localObject2 = (List)((Map.Entry)paramHashMap.next()).getValue();
        if (localObject2 == null) {
          break label367;
        }
        localObject2 = a((List)localObject2);
        if (localObject2 == null) {
          break label367;
        }
        ((List)localObject1).add(localObject2);
        i1 = i + 1;
        localArrayList.add(Integer.valueOf(i));
        i = i1;
      }
    }
    label367:
    for (;;)
    {
      break;
      if (!((List)localObject1).isEmpty())
      {
        paramHashMap = new double[2];
        i1 = ((List)localObject1).size();
        i = 0;
        while (i < i1)
        {
          localObject2 = (double[])((List)localObject1).get(i);
          int i2 = ((Integer)localArrayList.get(i)).intValue();
          localObject2[0] *= i2;
          localObject2[1] *= i2;
          paramHashMap[0] += localObject2[0];
          paramHashMap[1] += localObject2[1];
          i += 1;
        }
        paramHashMap[0] /= i1;
        paramHashMap[1] /= i1;
        localObject1 = b(paramHashMap[0], paramHashMap[1]);
        G = String.format(Locale.CHINA, "%d,%d,%d,%d", new Object[] { Long.valueOf(Math.round(paramHashMap[0] * 100.0D)), Long.valueOf(Math.round(paramHashMap[1] * 100.0D)), Long.valueOf(Math.round(localObject1[0] * 100.0D)), Long.valueOf(Math.round(localObject1[1] * 100.0D)) });
        if (localObject1[0] <= bh.B) {
          return 1;
        }
        if (localObject1[0] >= bh.C) {
          return 4;
        }
      }
      return 3;
    }
  }
  
  public static cl a()
  {
    if (b == null) {
      b = new cl();
    }
    return b;
  }
  
  private String a(GpsSatellite paramGpsSatellite, HashMap paramHashMap)
  {
    int i2 = (int)Math.floor(paramGpsSatellite.getAzimuth() / 30.0F);
    float f1 = paramGpsSatellite.getElevation();
    int i1 = (int)Math.floor(f1 / 15.0F);
    float f2 = paramGpsSatellite.getSnr();
    int i3 = Math.round(f2 / 5.0F);
    if ((f2 >= 10.0F) && (f1 >= 1.0F))
    {
      List localList = (List)paramHashMap.get(Integer.valueOf(i3));
      Object localObject = localList;
      if (localList == null) {
        localObject = new ArrayList();
      }
      ((List)localObject).add(paramGpsSatellite);
      paramHashMap.put(Integer.valueOf(i3), localObject);
      this.H += 1;
    }
    int i = i2;
    if (i2 >= 12) {
      i = 11;
    }
    if (i1 >= 6) {
      i1 = 5;
    }
    for (;;)
    {
      return String.format(Locale.CHINA, "%02d%d", new Object[] { Integer.valueOf(i1 + i * 6 + 1), Integer.valueOf(i3) });
    }
  }
  
  public static String a(Location paramLocation)
  {
    float f3 = -1.0F;
    if (paramLocation == null) {
      return null;
    }
    float f1 = (float)(paramLocation.getSpeed() * 3.6D);
    if (!paramLocation.hasSpeed()) {
      f1 = -1.0F;
    }
    float f2;
    int i;
    if (paramLocation.hasAccuracy())
    {
      f2 = paramLocation.getAccuracy();
      i = (int)f2;
      if (!paramLocation.hasAltitude()) {
        break label178;
      }
    }
    label178:
    for (double d1 = paramLocation.getAltitude();; d1 = 555.0D)
    {
      f2 = f3;
      if (paramLocation.hasBearing()) {
        f2 = paramLocation.getBearing();
      }
      return String.format(Locale.CHINA, "&ll=%.5f|%.5f&s=%.1f&d=%.1f&ll_r=%d&ll_n=%d&ll_h=%.2f&ll_t=%d", new Object[] { Double.valueOf(paramLocation.getLongitude()), Double.valueOf(paramLocation.getLatitude()), Float.valueOf(f1), Float.valueOf(f2), Integer.valueOf(i), Integer.valueOf(k), Double.valueOf(d1), Long.valueOf(paramLocation.getTime() / 1000L) });
      f2 = -1.0F;
      break;
    }
  }
  
  private void a(double paramDouble1, double paramDouble2, float paramFloat)
  {
    int i1 = 0;
    if (!cq.e) {}
    for (;;)
    {
      return;
      int i = i1;
      if (paramDouble1 >= 73.146973D)
      {
        i = i1;
        if (paramDouble1 <= 135.252686D)
        {
          i = i1;
          if (paramDouble2 <= 54.258807D)
          {
            i = i1;
            if (paramDouble2 >= 14.604847D)
            {
              if (paramFloat <= 18.0F) {
                break label85;
              }
              i = i1;
            }
          }
        }
      }
      while (bh.o != i)
      {
        bh.o = i;
        return;
        label85:
        double d1 = bh.m;
        double d2 = bh.n;
        i = (int)((paramDouble1 - d1) * 1000.0D);
        int i2 = (int)((d2 - paramDouble2) * 1000.0D);
        if ((i > 0) && (i < 50) && (i2 > 0) && (i2 < 50))
        {
          i2 = i + i2 * 50;
          i = i1;
          if (bh.q) {
            i = bh.p[(i2 >> 2)] >> (i2 & 0x3) * 2 & 0x3;
          }
        }
        else
        {
          String str = String.format(Locale.CHINA, "&ll=%.5f|%.5f", new Object[] { Double.valueOf(paramDouble1), Double.valueOf(paramDouble2) });
          str = str + "&im=" + bg.a().d();
          bh.k = paramDouble1;
          bh.l = paramDouble2;
          cq.a().b(str);
          i = i1;
        }
      }
    }
  }
  
  private void a(String paramString, Location paramLocation)
  {
    paramString = paramString + br.a().c();
    bw.a(ce.a().e(), ao.a().i(), paramLocation, paramString);
  }
  
  public static boolean a(Location paramLocation1, Location paramLocation2, boolean paramBoolean)
  {
    boolean bool2 = true;
    boolean bool1;
    if (paramLocation1 == paramLocation2) {
      bool1 = false;
    }
    float f2;
    do
    {
      do
      {
        float f1;
        do
        {
          do
          {
            do
            {
              do
              {
                return bool1;
                bool1 = bool2;
              } while (paramLocation1 == null);
              bool1 = bool2;
            } while (paramLocation2 == null);
            f1 = paramLocation2.getSpeed();
            if ((!paramBoolean) || (bh.o != 3)) {
              break;
            }
            bool1 = bool2;
          } while (f1 < 5.0F);
          f2 = paramLocation2.distanceTo(paramLocation1);
          if (f1 <= bh.E) {
            break;
          }
          bool1 = bool2;
        } while (f2 > bh.G);
        return false;
        if (f1 <= bh.D) {
          break;
        }
        bool1 = bool2;
      } while (f2 > bh.F);
      return false;
      bool1 = bool2;
    } while (f2 > 5.0F);
    return false;
  }
  
  private double[] a(double paramDouble1, double paramDouble2)
  {
    return new double[] { Math.sin(Math.toRadians(paramDouble2)) * paramDouble1, Math.cos(Math.toRadians(paramDouble2)) * paramDouble1 };
  }
  
  private double[] a(List paramList)
  {
    if ((paramList == null) || (paramList.isEmpty())) {
      return null;
    }
    double[] arrayOfDouble = new double[2];
    Iterator localIterator = paramList.iterator();
    while (localIterator.hasNext())
    {
      Object localObject = (GpsSatellite)localIterator.next();
      if (localObject != null)
      {
        localObject = a(90.0F - ((GpsSatellite)localObject).getElevation(), ((GpsSatellite)localObject).getAzimuth());
        arrayOfDouble[0] += localObject[0];
        arrayOfDouble[1] += localObject[1];
      }
    }
    int i = paramList.size();
    arrayOfDouble[0] /= i;
    arrayOfDouble[1] /= i;
    return arrayOfDouble;
  }
  
  public static String b(Location paramLocation)
  {
    String str = a(paramLocation);
    paramLocation = str;
    if (str != null) {
      paramLocation = str + "&g_tp=0";
    }
    return paramLocation;
  }
  
  private void b(boolean paramBoolean)
  {
    this.q = paramBoolean;
    if ((paramBoolean) && (!j())) {}
  }
  
  private double[] b(double paramDouble1, double paramDouble2)
  {
    double d1 = 0.0D;
    if (paramDouble2 == 0.0D) {
      if (paramDouble1 > 0.0D) {
        d1 = 90.0D;
      }
    }
    for (;;)
    {
      return new double[] { Math.sqrt(paramDouble1 * paramDouble1 + paramDouble2 * paramDouble2), d1 };
      if (paramDouble1 < 0.0D)
      {
        d1 = 270.0D;
        continue;
        d1 = Math.toDegrees(Math.atan(paramDouble1 / paramDouble2));
      }
    }
  }
  
  public static String c(Location paramLocation)
  {
    Object localObject = a(paramLocation);
    paramLocation = (Location)localObject;
    if (localObject != null) {
      paramLocation = (String)localObject + t;
    }
    String str = n();
    localObject = paramLocation;
    if (!TextUtils.isEmpty(str)) {
      localObject = paramLocation + str;
    }
    return localObject;
  }
  
  private void d(Location paramLocation)
  {
    paramLocation = this.w.obtainMessage(1, paramLocation);
    this.w.sendMessage(paramLocation);
  }
  
  private void e(Location paramLocation)
  {
    this.e = paramLocation;
    if (this.e == null) {
      this.p = null;
    }
    try
    {
      ck.a().a(this.e);
      if (j())
      {
        br.a().a(g());
        if ((k > 2) && (bw.a(this.e, true)))
        {
          ao.a().d();
          bw.a(ce.a().e(), ao.a().i(), this.e, br.a().c());
        }
      }
      return;
      l1 = System.currentTimeMillis();
      this.e.setTime(l1);
      f1 = (float)(this.e.getSpeed() * 3.6D);
      if (!this.e.hasSpeed()) {
        f1 = -1.0F;
      }
      i1 = k;
      i = i1;
      if (i1 != 0) {}
    }
    catch (Exception paramLocation)
    {
      try
      {
        for (;;)
        {
          long l1;
          float f1;
          i = this.e.getExtras().getInt("satellites");
          this.p = String.format(Locale.CHINA, "&ll=%.5f|%.5f&s=%.1f&d=%.1f&ll_n=%d&ll_t=%d", new Object[] { Double.valueOf(this.e.getLongitude()), Double.valueOf(this.e.getLatitude()), Float.valueOf(f1), Float.valueOf(this.e.getBearing()), Integer.valueOf(i), Long.valueOf(l1) });
          a(this.e.getLongitude(), this.e.getLatitude(), f1);
        }
        paramLocation = paramLocation;
      }
      catch (Exception paramLocation)
      {
        for (;;)
        {
          int i1;
          int i = i1;
        }
      }
    }
  }
  
  private static String n()
  {
    if (F != null)
    {
      if (!TextUtils.isEmpty(F.toString())) {
        F.insert(0, "&snls=");
      }
      if (!TextUtils.isEmpty(G)) {
        F.append("&pogr=").append(G);
      }
      return F.toString();
    }
    return null;
  }
  
  public void a(boolean paramBoolean)
  {
    if (paramBoolean)
    {
      c();
      return;
    }
    d();
  }
  
  /* Error */
  public void b()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: getstatic 589	com/baidu/location/y:c	Z
    //   5: istore_1
    //   6: iload_1
    //   7: ifne +6 -> 13
    //   10: aload_0
    //   11: monitorexit
    //   12: return
    //   13: aload_0
    //   14: invokestatic 594	com/baidu/location/f:c	()Landroid/content/Context;
    //   17: putfield 596	com/baidu/location/cl:c	Landroid/content/Context;
    //   20: aload_0
    //   21: aload_0
    //   22: getfield 596	com/baidu/location/cl:c	Landroid/content/Context;
    //   25: ldc_w 598
    //   28: invokevirtual 604	android/content/Context:getSystemService	(Ljava/lang/String;)Ljava/lang/Object;
    //   31: checkcast 606	android/location/LocationManager
    //   34: putfield 87	com/baidu/location/cl:d	Landroid/location/LocationManager;
    //   37: aload_0
    //   38: new 608	com/baidu/location/cn
    //   41: dup
    //   42: aload_0
    //   43: aconst_null
    //   44: invokespecial 611	com/baidu/location/cn:<init>	(Lcom/baidu/location/cl;Lcom/baidu/location/cm;)V
    //   47: putfield 93	com/baidu/location/cl:j	Lcom/baidu/location/cn;
    //   50: aload_0
    //   51: getfield 87	com/baidu/location/cl:d	Landroid/location/LocationManager;
    //   54: aload_0
    //   55: getfield 93	com/baidu/location/cl:j	Lcom/baidu/location/cn;
    //   58: invokevirtual 615	android/location/LocationManager:addGpsStatusListener	(Landroid/location/GpsStatus$Listener;)Z
    //   61: pop
    //   62: aload_0
    //   63: new 617	com/baidu/location/cp
    //   66: dup
    //   67: aload_0
    //   68: aconst_null
    //   69: invokespecial 618	com/baidu/location/cp:<init>	(Lcom/baidu/location/cl;Lcom/baidu/location/cm;)V
    //   72: putfield 91	com/baidu/location/cl:g	Lcom/baidu/location/cp;
    //   75: aload_0
    //   76: getfield 87	com/baidu/location/cl:d	Landroid/location/LocationManager;
    //   79: ldc_w 620
    //   82: ldc2_w 82
    //   85: fconst_0
    //   86: aload_0
    //   87: getfield 91	com/baidu/location/cl:g	Lcom/baidu/location/cp;
    //   90: invokevirtual 624	android/location/LocationManager:requestLocationUpdates	(Ljava/lang/String;JFLandroid/location/LocationListener;)V
    //   93: aload_0
    //   94: new 626	com/baidu/location/cm
    //   97: dup
    //   98: aload_0
    //   99: invokespecial 629	com/baidu/location/cm:<init>	(Lcom/baidu/location/cl;)V
    //   102: putfield 111	com/baidu/location/cl:w	Landroid/os/Handler;
    //   105: goto -95 -> 10
    //   108: astore_2
    //   109: aload_0
    //   110: monitorexit
    //   111: aload_2
    //   112: athrow
    //   113: astore_2
    //   114: goto -21 -> 93
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	117	0	this	cl
    //   5	2	1	bool	boolean
    //   108	4	2	localObject	Object
    //   113	1	2	localException	Exception
    // Exception table:
    //   from	to	target	type
    //   2	6	108	finally
    //   13	20	108	finally
    //   20	93	108	finally
    //   93	105	108	finally
    //   20	93	113	java/lang/Exception
  }
  
  public void c()
  {
    if (this.o) {
      return;
    }
    try
    {
      this.f = new co(this, null);
      this.d.requestLocationUpdates("gps", 1000L, 0.0F, this.f);
      this.d.addNmeaListener(this.j);
      this.o = true;
      return;
    }
    catch (Exception localException) {}
  }
  
  public void d()
  {
    if (!this.o) {
      return;
    }
    if (this.d != null) {}
    try
    {
      if (this.f != null) {
        this.d.removeUpdates(this.f);
      }
      if (this.j != null) {
        this.d.removeNmeaListener(this.j);
      }
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    bh.d = 0;
    bh.o = 0;
    this.f = null;
    this.o = false;
    b(false);
  }
  
  public void e()
  {
    for (;;)
    {
      try
      {
        d();
        LocationManager localLocationManager = this.d;
        if (localLocationManager == null) {
          return;
        }
      }
      finally {}
      try
      {
        if (this.j != null) {
          this.d.removeGpsStatusListener(this.j);
        }
        this.d.removeUpdates(this.g);
      }
      catch (Exception localException)
      {
        continue;
      }
      this.j = null;
      this.d = null;
    }
  }
  
  public String f()
  {
    if ((j()) && (this.e != null)) {
      return a(this.e);
    }
    return null;
  }
  
  public String g()
  {
    String str = null;
    if (this.e != null)
    {
      str = "{\"result\":{\"time\":\"" + bh.a() + "\",\"error\":\"61\"},\"content\":{\"point\":{\"x\":" + "\"%f\",\"y\":\"%f\"},\"radius\":\"%d\",\"d\":\"%f\"," + "\"s\":\"%f\",\"n\":\"%d\"}}";
      if (!this.e.hasAccuracy()) {
        break label218;
      }
    }
    label218:
    for (float f1 = this.e.getAccuracy();; f1 = 10.0F)
    {
      int i = (int)f1;
      f1 = (float)(this.e.getSpeed() * 3.6D);
      double[] arrayOfDouble = Jni.a(this.e.getLongitude(), this.e.getLatitude(), "gps2gcj");
      if ((arrayOfDouble[0] <= 0.0D) && (arrayOfDouble[1] <= 0.0D))
      {
        arrayOfDouble[0] = this.e.getLongitude();
        arrayOfDouble[1] = this.e.getLatitude();
      }
      str = String.format(Locale.CHINA, str, new Object[] { Double.valueOf(arrayOfDouble[0]), Double.valueOf(arrayOfDouble[1]), Integer.valueOf(i), Float.valueOf(this.e.getBearing()), Float.valueOf(f1), Integer.valueOf(k) });
      return str;
    }
  }
  
  public Location h()
  {
    return this.e;
  }
  
  public boolean i()
  {
    return (this.e != null) && (this.e.getLatitude() != 0.0D) && (this.e.getLongitude() != 0.0D);
  }
  
  public boolean j()
  {
    if (!i()) {}
    while (System.currentTimeMillis() - this.r > 10000L) {
      return false;
    }
    long l1 = System.currentTimeMillis();
    if ((this.n) && (l1 - this.m < 3000L)) {
      return true;
    }
    return this.q;
  }
  
  public void k()
  {
    try
    {
      if ((this.C != null) || (this.B != null))
      {
        String str = String.format(Locale.CHINA, "&dt=%.6f|%.6f|%s|%s|%s", new Object[] { Double.valueOf(this.C.getLongitude() - this.B.getLongitude()), Double.valueOf(this.C.getLatitude() - this.B.getLatitude()), Float.valueOf(this.C.getSpeed()), Float.valueOf(this.C.getBearing()), Long.valueOf(this.E - this.D) });
        str = bw.a(ce.a().e(), ao.a().i(), this.C, br.a().c(), str);
        if (!TextUtils.isEmpty(str))
        {
          str = Jni.a(str);
          bw.a().c(str);
        }
      }
      return;
    }
    catch (Exception localException) {}
  }
  
  public boolean l()
  {
    if (this.d != null) {
      return this.d.isProviderEnabled("gps");
    }
    return false;
  }
}
