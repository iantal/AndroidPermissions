package com.baidu.location;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.IBinder;
import android.os.Looper;
import android.os.Message;
import android.os.Messenger;
import android.os.Process;
import android.util.Log;

public class f
  extends Service
  implements au, l
{
  static a h0 = null;
  private static Context hZ = null;
  public static boolean isServing = false;
  private boolean h1 = false;
  Messenger h2 = null;
  private Looper h3;
  private HandlerThread hY;
  
  public f() {}
  
  private void bU()
  {
    r.aa().af();
    ad.al().ak();
    ab.a5().a7();
    o.t();
    i.m().k();
    if (!this.h1) {
      Process.killProcess(Process.myPid());
    }
  }
  
  private void bV()
  {
    isServing = true;
    r.aa().Z();
    ao.bC().bI();
    v.aR().aH();
    p.D().G();
    ad.al().ap();
    av.bW().b1();
    w.aU().aV();
    at.jdMethod_do().jdMethod_for();
  }
  
  private void d(Message paramMessage)
  {
    if ((paramMessage != null) && (paramMessage.obj != null)) {}
  }
  
  private void e(Message paramMessage)
  {
    i.m().jdMethod_do(paramMessage);
  }
  
  public static Handler getHandler()
  {
    return h0;
  }
  
  public static Context getServiceContext()
  {
    return hZ;
  }
  
  private void h(Message paramMessage)
  {
    i.m().jdMethod_new(paramMessage);
    w.aU().aW();
  }
  
  private void i(Message paramMessage)
  {
    i.m().jdMethod_int(paramMessage);
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    paramIntent = paramIntent.getExtras();
    boolean bool = false;
    if (paramIntent != null)
    {
      aw.iu = paramIntent.getString("key");
      aw.iA = paramIntent.getString("sign");
      bool = paramIntent.getBoolean("cache_exception");
      this.h1 = paramIntent.getBoolean("kill_process");
    }
    if (!bool) {
      Thread.setDefaultUncaughtExceptionHandler(new y(this));
    }
    return this.h2.getBinder();
  }
  
  public void onCreate()
  {
    hZ = this;
    this.hY = al.a();
    this.h3 = this.hY.getLooper();
    h0 = new a(this.h3);
    this.h2 = new Messenger(h0);
    h0.sendEmptyMessage(0);
    Log.d("baidu_location_service", "baidu location service start1 ..." + Process.myPid());
  }
  
  public void onDestroy()
  {
    isServing = false;
    ao.bC().bz();
    e.jdMethod_for().jdMethod_do();
    p.D().C();
    v.aR().aJ();
    at.jdMethod_do().jdMethod_if();
    h0.sendEmptyMessage(1);
    Log.d("baidu_location_service", "baidu location service stop ...");
  }
  
  public int onStartCommand(Intent paramIntent, int paramInt1, int paramInt2)
  {
    return 1;
  }
  
  public class a
    extends Handler
  {
    public a(Looper paramLooper)
    {
      super();
    }
    
    public void handleMessage(Message paramMessage)
    {
      if (f.isServing == true) {
        switch (paramMessage.what)
        {
        }
      }
      for (;;)
      {
        if (paramMessage.what == 0) {
          f.jdMethod_if(f.this);
        }
        if (paramMessage.what == 1) {
          f.jdMethod_do(f.this);
        }
        super.handleMessage(paramMessage);
        return;
        f.jdMethod_for(f.this, paramMessage);
        continue;
        f.jdMethod_do(f.this, paramMessage);
        continue;
        f.jdMethod_if(f.this, paramMessage);
        continue;
        f.jdMethod_int(f.this, paramMessage);
        continue;
        ad.al().jdMethod_case(paramMessage);
        continue;
        av.bW().j(paramMessage);
        continue;
        s.at().jdMethod_long(paramMessage);
        continue;
        ad.al().aj();
        continue;
        ab.a5().a9();
        continue;
        ab.a5().a7();
        continue;
        ah.a().jdMethod_do();
        continue;
        ah.a().jdMethod_if();
        continue;
        ah.a().a(paramMessage);
        continue;
        ax.cf().jdMethod_if(f.getServiceContext(), paramMessage);
        continue;
        ar.jdMethod_int(f.getServiceContext());
      }
    }
  }
}
