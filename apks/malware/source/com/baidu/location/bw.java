package com.baidu.location;

import android.location.Location;
import java.io.File;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;

class bw
  implements bb
{
  private static int A = 0;
  private static int B = 64;
  private static int C = 128;
  private static Location D = null;
  private static Location E = null;
  private static Location F = null;
  private static ar G = null;
  private static bw I = null;
  private static ArrayList b = new ArrayList();
  private static ArrayList c = new ArrayList();
  private static ArrayList d = new ArrayList();
  private static ArrayList e = new ArrayList();
  private static ArrayList f = new ArrayList();
  private static ArrayList g = new ArrayList();
  private static String h = i + "/yo.dat";
  private static final String j = i + "/yoh.dat";
  private static final String k = i + "/yom.dat";
  private static final String l = i + "/yol.dat";
  private static final String m = i + "/yor.dat";
  private static File n = null;
  private static int o = 1024;
  private static int p = 512;
  private static int q = 8;
  private static int r = 5;
  private static int s = 8;
  private static int t = 16;
  private static int u = 1024;
  private static int v = 256;
  private static double w = 0.0D;
  private static double x = 0.1D;
  private static double y = 30.0D;
  private static double z = 100.0D;
  private by H = null;
  private int J = 0;
  long a = 0L;
  
  private bw() {}
  
  private static int a(List paramList, int paramInt)
  {
    if ((paramList == null) || (paramInt > 256) || (paramInt < 0)) {
      return -1;
    }
    for (;;)
    {
      int i1;
      int i;
      try
      {
        if (n == null)
        {
          n = new File(h);
          if (!n.exists())
          {
            n = null;
            return -2;
          }
        }
        RandomAccessFile localRandomAccessFile = new RandomAccessFile(n, "rw");
        if (localRandomAccessFile.length() < 1L)
        {
          localRandomAccessFile.close();
          return -3;
        }
        localRandomAccessFile.seek(paramInt);
        int i2 = localRandomAccessFile.readInt();
        i1 = localRandomAccessFile.readInt();
        int i3 = localRandomAccessFile.readInt();
        int i4 = localRandomAccessFile.readInt();
        long l1 = localRandomAccessFile.readLong();
        if ((!a(i2, i1, i3, i4, l1)) || (i1 < 1))
        {
          localRandomAccessFile.close();
          return -4;
        }
        byte[] arrayOfByte = new byte[u];
        i = q;
        if ((i > 0) && (i1 > 0))
        {
          localRandomAccessFile.seek((i2 + i1 - 1) % i3 * i4 + l1);
          int i5 = localRandomAccessFile.readInt();
          if ((i5 > 0) && (i5 < i4))
          {
            localRandomAccessFile.read(arrayOfByte, 0, i5);
            if (arrayOfByte[(i5 - 1)] == 0) {
              paramList.add(new String(arrayOfByte, 0, i5 - 1));
            }
          }
        }
        else
        {
          localRandomAccessFile.seek(paramInt);
          localRandomAccessFile.writeInt(i2);
          localRandomAccessFile.writeInt(i1);
          localRandomAccessFile.writeInt(i3);
          localRandomAccessFile.writeInt(i4);
          localRandomAccessFile.writeLong(l1);
          localRandomAccessFile.close();
          paramInt = q;
          return paramInt - i;
        }
      }
      catch (Exception paramList)
      {
        paramList.printStackTrace();
        return -5;
      }
      i -= 1;
      i1 -= 1;
    }
  }
  
  public static bw a()
  {
    if (I == null) {
      I = new bw();
    }
    return I;
  }
  
  public static String a(int paramInt)
  {
    Object localObject3 = null;
    Object localObject2;
    ArrayList localArrayList;
    if (paramInt == 1)
    {
      localObject2 = j;
      localArrayList = e;
    }
    while (localArrayList == null)
    {
      do
      {
        return null;
        if (paramInt == 2)
        {
          localObject2 = k;
          localArrayList = f;
          break;
        }
        if (paramInt == 3)
        {
          localObject2 = l;
          localArrayList = g;
          break;
        }
      } while (paramInt != 4);
      localObject2 = m;
      localArrayList = g;
    }
    if (localArrayList.size() < 1) {
      a((String)localObject2, localArrayList);
    }
    try
    {
      paramInt = localArrayList.size();
      localObject2 = localObject3;
      if (paramInt > 0)
      {
        localObject2 = (String)localArrayList.get(paramInt - 1);
        localArrayList.remove(paramInt - 1);
      }
      return localObject2;
    }
    finally {}
  }
  
  public static String a(cf paramCf, ar paramAr, Location paramLocation, String paramString1, String paramString2)
  {
    if (!cq.a) {
      return null;
    }
    return bh.a(paramCf, paramAr, paramLocation, paramString1) + paramString2;
  }
  
  public static void a(int paramInt, boolean paramBoolean)
  {
    Object localObject1;
    ArrayList localArrayList;
    label20:
    Object localObject2;
    if (paramInt == 1)
    {
      localObject1 = j;
      if (paramBoolean) {
        return;
      }
      localArrayList = e;
      localObject2 = new File((String)localObject1);
      if (!((File)localObject2).exists()) {
        a((String)localObject1);
      }
    }
    for (;;)
    {
      try
      {
        localObject1 = new RandomAccessFile((File)localObject2, "rw");
        ((RandomAccessFile)localObject1).seek(4L);
        int i5 = ((RandomAccessFile)localObject1).readInt();
        int i6 = ((RandomAccessFile)localObject1).readInt();
        i1 = ((RandomAccessFile)localObject1).readInt();
        i2 = ((RandomAccessFile)localObject1).readInt();
        i = ((RandomAccessFile)localObject1).readInt();
        i3 = localArrayList.size();
        if (i3 <= s) {
          break label483;
        }
        if (!paramBoolean) {
          break label480;
        }
        i += 1;
        if (i1 < i5)
        {
          ((RandomAccessFile)localObject1).seek(i6 * i1 + 128);
          localObject2 = ((String)localArrayList.get(0) + '\000').getBytes();
          ((RandomAccessFile)localObject1).writeInt(localObject2.length);
          ((RandomAccessFile)localObject1).write((byte[])localObject2, 0, localObject2.length);
          localArrayList.remove(0);
          i4 = i1 + 1;
          i1 = i2;
          i2 = i4;
          i4 = i3 - 1;
          i3 = i2;
          i2 = i1;
          i1 = i3;
          i3 = i4;
          continue;
          if (paramInt == 2)
          {
            localObject1 = k;
            if (paramBoolean)
            {
              localArrayList = e;
              break label20;
            }
            localArrayList = f;
            break label20;
          }
          if (paramInt == 3)
          {
            localObject1 = l;
            if (paramBoolean)
            {
              localArrayList = f;
              break label20;
            }
            localArrayList = g;
            break label20;
          }
          if (paramInt != 4) {
            break;
          }
          localObject1 = m;
          if (!paramBoolean) {
            break;
          }
          localArrayList = g;
          break label20;
        }
        if (!paramBoolean) {
          break label502;
        }
        long l1 = i2 * i6 + 128;
        ((RandomAccessFile)localObject1).seek(l1);
        localObject2 = ((String)localArrayList.get(0) + '\000').getBytes();
        ((RandomAccessFile)localObject1).writeInt(localObject2.length);
        ((RandomAccessFile)localObject1).write((byte[])localObject2, 0, localObject2.length);
        localArrayList.remove(0);
        i4 = i2 + 1;
        i2 = i4;
        if (i4 <= i1) {
          break label489;
        }
        i2 = 0;
      }
      catch (Exception localException)
      {
        int i;
        return;
      }
      ((RandomAccessFile)localObject1).seek(12L);
      ((RandomAccessFile)localObject1).writeInt(i1);
      ((RandomAccessFile)localObject1).writeInt(i2);
      ((RandomAccessFile)localObject1).writeInt(i);
      ((RandomAccessFile)localObject1).close();
      if ((i3 == 0) || (paramInt >= 4)) {
        break;
      }
      a(paramInt + 1, true);
      return;
      label480:
      continue;
      label483:
      int i3 = 0;
      continue;
      label489:
      int i4 = i1;
      int i1 = i2;
      int i2 = i4;
      continue;
      label502:
      i3 = 1;
    }
  }
  
  public static void a(cf paramCf, ar paramAr, Location paramLocation, String paramString)
  {
    ar localAr = null;
    Object localObject = null;
    if (!cq.a) {}
    label12:
    do
    {
      do
      {
        break label12;
        break label12;
        break label12;
        break label12;
        do
        {
          return;
        } while ((bh.o == 3) && (!a(paramLocation, paramAr)) && (!a(paramLocation, false)));
        if ((paramCf == null) || (!paramCf.a())) {
          break;
        }
        localAr = paramAr;
        if (!a(paramLocation, paramAr)) {
          localAr = null;
        }
        paramCf = bh.a(paramCf, localAr, paramLocation, paramString, 1);
      } while (paramCf == null);
      d(Jni.a(paramCf));
      E = paramLocation;
      D = paramLocation;
    } while (localAr == null);
    G = localAr;
    return;
    if ((paramAr != null) && (paramAr.j()) && (a(paramLocation, paramAr)))
    {
      if (a(paramLocation)) {
        break label231;
      }
      paramCf = localObject;
    }
    label229:
    label231:
    for (;;)
    {
      paramCf = bh.a(paramCf, paramAr, paramLocation, paramString, 2);
      if (paramCf == null) {
        break;
      }
      e(Jni.a(paramCf));
      F = paramLocation;
      D = paramLocation;
      if (paramAr == null) {
        break;
      }
      G = paramAr;
      return;
      if (!a(paramLocation)) {
        paramCf = null;
      }
      if (!a(paramLocation, paramAr)) {
        paramAr = localAr;
      }
      for (;;)
      {
        if ((paramCf == null) && (paramAr == null)) {
          break label229;
        }
        paramCf = bh.a(paramCf, paramAr, paramLocation, paramString, 3);
        if (paramCf == null) {
          break;
        }
        f(Jni.a(paramCf));
        D = paramLocation;
        if (paramAr == null) {
          break;
        }
        G = paramAr;
        return;
      }
      break label12;
    }
  }
  
  public static void a(String paramString)
  {
    try
    {
      File localFile = new File(paramString);
      if (!localFile.exists())
      {
        paramString = new File(i);
        if (!paramString.exists()) {
          paramString.mkdirs();
        }
        paramString = localFile;
        if (!localFile.createNewFile()) {
          paramString = null;
        }
        paramString = new RandomAccessFile(paramString, "rw");
        paramString.seek(0L);
        paramString.writeInt(32);
        paramString.writeInt(2048);
        paramString.writeInt(1040);
        paramString.writeInt(0);
        paramString.writeInt(0);
        paramString.writeInt(0);
        paramString.close();
      }
      return;
    }
    catch (Exception paramString) {}
  }
  
  private static boolean a(int paramInt1, int paramInt2, int paramInt3, int paramInt4, long paramLong)
  {
    if ((paramInt1 < 0) || (paramInt1 >= paramInt3)) {}
    while ((paramInt2 < 0) || (paramInt2 > paramInt3) || (paramInt3 < 0) || (paramInt3 > 1024) || (paramInt4 < 128) || (paramInt4 > 1024)) {
      return false;
    }
    return true;
  }
  
  private static boolean a(Location paramLocation)
  {
    boolean bool = true;
    if (paramLocation == null) {
      bool = false;
    }
    double d1;
    double d2;
    double d3;
    double d4;
    do
    {
      return bool;
      if ((E == null) || (D == null))
      {
        E = paramLocation;
        return true;
      }
      d1 = paramLocation.distanceTo(E);
      d2 = bh.L;
      d3 = bh.M;
      d4 = bh.N;
    } while (paramLocation.distanceTo(D) > d1 * d3 + d2 * d1 * d1 + d4);
    return false;
  }
  
  private static boolean a(Location paramLocation, ar paramAr)
  {
    if ((paramLocation == null) || (paramAr == null) || (paramAr.a == null) || (paramAr.a.isEmpty())) {}
    while (paramAr.b(G)) {
      return false;
    }
    if (F == null)
    {
      F = paramLocation;
      return true;
    }
    return true;
  }
  
  public static boolean a(Location paramLocation, boolean paramBoolean)
  {
    return cl.a(D, paramLocation, paramBoolean);
  }
  
  public static boolean a(String paramString, List paramList)
  {
    paramString = new File(paramString);
    if (!paramString.exists()) {
      return false;
    }
    for (;;)
    {
      int i;
      int i1;
      int i2;
      boolean bool2;
      try
      {
        paramString = new RandomAccessFile(paramString, "rw");
        paramString.seek(8L);
        int i4 = paramString.readInt();
        i = paramString.readInt();
        i3 = paramString.readInt();
        byte[] arrayOfByte = new byte[u];
        i1 = s;
        i1 += 1;
        bool1 = false;
        long l1;
        if ((i1 > 0) && (i > 0))
        {
          i2 = i3;
          if (i < i3) {
            i2 = 0;
          }
          l1 = (i - 1) * i4 + 128;
        }
        try
        {
          paramString.seek(l1);
          i3 = paramString.readInt();
          bool2 = bool1;
          if (i3 <= 0) {
            break label220;
          }
          bool2 = bool1;
          if (i3 >= i4) {
            break label220;
          }
          paramString.read(arrayOfByte, 0, i3);
          bool2 = bool1;
          if (arrayOfByte[(i3 - 1)] != 0) {
            break label220;
          }
          paramList.add(0, new String(arrayOfByte, 0, i3 - 1));
          bool2 = true;
        }
        catch (Exception paramString)
        {
          return bool1;
        }
        paramString.seek(12L);
        paramString.writeInt(i);
        paramString.writeInt(i3);
        paramString.close();
        return bool1;
      }
      catch (Exception paramString)
      {
        return false;
      }
      label220:
      i1 -= 1;
      i -= 1;
      boolean bool1 = bool2;
      int i3 = i2;
    }
  }
  
  public static String b()
  {
    return d();
  }
  
  public static void b(String paramString)
  {
    int i = bh.j;
    ArrayList localArrayList;
    if (i == 1)
    {
      localArrayList = e;
      if (localArrayList != null) {
        break label42;
      }
    }
    for (;;)
    {
      return;
      if (i == 2)
      {
        localArrayList = f;
        break;
      }
      if (i == 3)
      {
        localArrayList = g;
        break;
        label42:
        if (localArrayList.size() <= t) {
          localArrayList.add(paramString);
        }
        if (localArrayList.size() >= t) {
          a(i, false);
        }
        while (localArrayList.size() > t) {
          localArrayList.remove(0);
        }
      }
    }
  }
  
  public static String d()
  {
    String str1 = null;
    int i = 1;
    String str2;
    if (i < 5)
    {
      str1 = a(i);
      if (str1 != null) {
        str2 = str1;
      }
    }
    do
    {
      do
      {
        do
        {
          return str2;
          i += 1;
          break;
          a(g, B);
          if (g.size() > 0)
          {
            str1 = (String)g.get(0);
            g.remove(0);
          }
          str2 = str1;
        } while (str1 != null);
        a(g, A);
        if (g.size() > 0)
        {
          str1 = (String)g.get(0);
          g.remove(0);
        }
        str2 = str1;
      } while (str1 != null);
      a(g, C);
      str2 = str1;
    } while (g.size() <= 0);
    str1 = (String)g.get(0);
    g.remove(0);
    return str1;
  }
  
  private static void d(String paramString)
  {
    b(paramString);
  }
  
  public static void e()
  {
    s = 0;
    a(1, false);
    a(2, false);
    a(3, false);
    s = 8;
  }
  
  private static void e(String paramString)
  {
    b(paramString);
  }
  
  public static String f()
  {
    Object localObject5 = null;
    Object localObject3 = null;
    Object localObject6 = new File(k);
    Object localObject1 = localObject3;
    if (((File)localObject6).exists()) {
      localObject1 = localObject5;
    }
    try
    {
      localObject6 = new RandomAccessFile((File)localObject6, "rw");
      localObject1 = localObject5;
      ((RandomAccessFile)localObject6).seek(20L);
      localObject1 = localObject5;
      i = ((RandomAccessFile)localObject6).readInt();
      if (i > 128)
      {
        localObject1 = localObject5;
        localObject3 = "&p1=" + i;
        localObject1 = localObject3;
        ((RandomAccessFile)localObject6).seek(20L);
        localObject1 = localObject3;
        ((RandomAccessFile)localObject6).writeInt(0);
        localObject1 = localObject3;
        ((RandomAccessFile)localObject6).close();
        return localObject3;
      }
      localObject1 = localObject5;
      ((RandomAccessFile)localObject6).close();
      localObject1 = localObject3;
    }
    catch (Exception localException3)
    {
      int i;
      Object localObject2;
      Object localObject4;
      for (;;) {}
      return localException3;
    }
    localObject5 = new File(l);
    localObject3 = localObject1;
    if (((File)localObject5).exists())
    {
      localObject3 = localObject1;
      try
      {
        localObject5 = new RandomAccessFile((File)localObject5, "rw");
        localObject3 = localObject1;
        ((RandomAccessFile)localObject5).seek(20L);
        localObject3 = localObject1;
        i = ((RandomAccessFile)localObject5).readInt();
        if (i > 256)
        {
          localObject3 = localObject1;
          localObject1 = "&p2=" + i;
          localObject3 = localObject1;
          ((RandomAccessFile)localObject5).seek(20L);
          localObject3 = localObject1;
          ((RandomAccessFile)localObject5).writeInt(0);
          localObject3 = localObject1;
          ((RandomAccessFile)localObject5).close();
          return localObject1;
        }
      }
      catch (Exception localException1) {}
    }
    for (;;)
    {
      localObject5 = new File(m);
      if (!((File)localObject5).exists()) {
        return localObject3;
      }
      localObject2 = localObject3;
      try
      {
        localObject5 = new RandomAccessFile((File)localObject5, "rw");
        localObject2 = localObject3;
        ((RandomAccessFile)localObject5).seek(20L);
        localObject2 = localObject3;
        i = ((RandomAccessFile)localObject5).readInt();
        if (i <= 512) {
          break;
        }
        localObject2 = localObject3;
        localObject3 = "&p3=" + i;
        localObject2 = localObject3;
        ((RandomAccessFile)localObject5).seek(20L);
        localObject2 = localObject3;
        ((RandomAccessFile)localObject5).writeInt(0);
        localObject2 = localObject3;
        ((RandomAccessFile)localObject5).close();
        return localObject3;
      }
      catch (Exception localException2)
      {
        return localObject2;
      }
      localObject4 = localObject2;
      ((RandomAccessFile)localObject5).close();
      localObject4 = localObject2;
    }
    localObject2 = localObject4;
    ((RandomAccessFile)localObject5).close();
    return localObject4;
  }
  
  private static void f(String paramString)
  {
    b(paramString);
  }
  
  public void c()
  {
    if (!ao.g()) {
      return;
    }
    this.H.b();
  }
  
  public void c(String paramString)
  {
    new bx(this, paramString).b();
  }
}
