package com.baidu.location;

import android.content.Context;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;

class ac
  implements au, l, SensorEventListener
{
  private static float gM;
  private static ac gQ;
  private boolean gK;
  float[] gL;
  SensorManager gN;
  float[] gO = new float[9];
  float[] gP;
  
  ac() {}
  
  public static ac bc()
  {
    if (gQ == null) {
      gQ = new ac();
    }
    return gQ;
  }
  
  public float ba()
  {
    return gM;
  }
  
  public void bb()
  {
    try
    {
      if (this.gN != null)
      {
        this.gN.unregisterListener(this);
        this.gN = null;
      }
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public void bd()
  {
    try
    {
      if (this.gN == null) {
        this.gN = ((SensorManager)f.getServiceContext().getSystemService("sensor"));
      }
      this.gN.registerListener(this, this.gN.getDefaultSensor(1), 3);
      this.gN.registerListener(this, this.gN.getDefaultSensor(2), 3);
      return;
    }
    finally {}
  }
  
  public boolean be()
  {
    return this.gK;
  }
  
  public void onAccuracyChanged(Sensor paramSensor, int paramInt) {}
  
  public void onSensorChanged(SensorEvent paramSensorEvent)
  {
    switch (paramSensorEvent.sensor.getType())
    {
    default: 
      if ((this.gL != null) && (this.gP != null))
      {
        paramSensorEvent = new float[9];
        if (SensorManager.getRotationMatrix(paramSensorEvent, null, this.gL, this.gP))
        {
          float[] arrayOfFloat = new float[3];
          SensorManager.getOrientation(paramSensorEvent, arrayOfFloat);
          gM = (float)Math.toDegrees(arrayOfFloat[0]);
          if (gM < 0.0F) {
            break label131;
          }
        }
      }
      break;
    }
    label131:
    for (double d = gM;; d = gM + 360.0F)
    {
      gM = (float)Math.floor(d);
      return;
      this.gL = paramSensorEvent.values;
      break;
      this.gP = paramSensorEvent.values;
      break;
    }
  }
  
  public void jdMethod_try(boolean paramBoolean)
  {
    this.gK = paramBoolean;
  }
}
