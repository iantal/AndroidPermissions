package com.baidu.location;

import android.location.Location;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.Locale;

public class ck
  implements bb
{
  private static ck a = null;
  private static String b = "Temp_in.dat";
  private static File c = new File(i, b);
  private static StringBuffer d = null;
  private static boolean e = true;
  private static int f = 0;
  private static int g = 0;
  private static long h = 0L;
  private static long j = 0L;
  private static long k = 0L;
  private static double l = 0.0D;
  private static double m = 0.0D;
  private static int n = 0;
  private static int o = 0;
  private static int p = 0;
  private String q = null;
  private boolean r = true;
  
  private ck(String paramString)
  {
    if (paramString != null)
    {
      str = paramString;
      if (paramString.length() <= 100) {}
    }
    for (String str = paramString.substring(0, 100);; str = "")
    {
      this.q = str;
      return;
    }
  }
  
  public static ck a()
  {
    if (a == null) {
      a = new ck(bg.a().e());
    }
    return a;
  }
  
  private String a(int paramInt)
  {
    if (!c.exists()) {
      return null;
    }
    for (;;)
    {
      try
      {
        localObject = new RandomAccessFile(c, "rw");
        ((RandomAccessFile)localObject).seek(0L);
        i = ((RandomAccessFile)localObject).readInt();
        if (a(i, ((RandomAccessFile)localObject).readInt(), ((RandomAccessFile)localObject).readInt())) {
          break label160;
        }
        ((RandomAccessFile)localObject).close();
        d();
        return null;
      }
      catch (IOException localIOException)
      {
        Object localObject;
        long l1;
        byte[] arrayOfByte;
        return null;
      }
      ((RandomAccessFile)localObject).close();
      return null;
      l1 = 12L + 0L + (paramInt - 1) * 1024;
      ((RandomAccessFile)localObject).seek(l1);
      int i = ((RandomAccessFile)localObject).readInt();
      arrayOfByte = new byte[i];
      ((RandomAccessFile)localObject).seek(l1 + 4L);
      paramInt = 0;
      if (paramInt < i)
      {
        arrayOfByte[paramInt] = ((RandomAccessFile)localObject).readByte();
        paramInt += 1;
      }
      else
      {
        ((RandomAccessFile)localObject).close();
        localObject = new String(arrayOfByte);
        return localObject;
        label160:
        if (paramInt != 0) {
          if (paramInt != i + 1) {}
        }
      }
    }
  }
  
  private static boolean a(int paramInt1, int paramInt2, int paramInt3)
  {
    boolean bool = true;
    if ((paramInt1 < 0) || (paramInt1 > bh.U)) {
      bool = false;
    }
    do
    {
      return bool;
      if ((paramInt2 < 0) || (paramInt2 > paramInt1 + 1)) {
        return false;
      }
    } while ((paramInt3 >= 1) && (paramInt3 <= paramInt1 + 1) && (paramInt3 <= bh.U));
    return false;
  }
  
  private boolean a(Location paramLocation, int paramInt1, int paramInt2)
  {
    if ((paramLocation == null) || (!bh.Q) || (!this.r) || (!cq.b)) {
      return false;
    }
    if (bh.S < 5)
    {
      bh.S = 5;
      if (bh.T >= 5) {
        break label223;
      }
      bh.T = 5;
    }
    double d1;
    double d2;
    long l1;
    for (;;)
    {
      d1 = paramLocation.getLongitude();
      d2 = paramLocation.getLatitude();
      l1 = paramLocation.getTime() / 1000L;
      if (!e) {
        break label241;
      }
      f = 1;
      d = new StringBuffer("");
      d.append(String.format(Locale.CHINA, "&nr=%s&traj=%d,%.5f,%.5f|", new Object[] { this.q, Long.valueOf(l1), Double.valueOf(d1), Double.valueOf(d2) }));
      g = d.length();
      h = l1;
      l = d1;
      m = d2;
      j = Math.floor(d1 * 100000.0D + 0.5D);
      k = Math.floor(d2 * 100000.0D + 0.5D);
      e = false;
      return true;
      if (bh.S <= 1000) {
        break;
      }
      bh.S = 1000;
      break;
      label223:
      if (bh.T > 3600) {
        bh.T = 3600;
      }
    }
    label241:
    paramLocation = new float[1];
    Location.distanceBetween(d2, d1, m, l, paramLocation);
    long l2 = h;
    if ((paramLocation[0] >= bh.S) || (l1 - l2 >= bh.T))
    {
      if (d == null)
      {
        f += 1;
        g = 0;
        d = new StringBuffer("");
        d.append(String.format(Locale.CHINA, "&nr=%s&traj=%d,%.5f,%.5f|", new Object[] { this.q, Long.valueOf(l1), Double.valueOf(d1), Double.valueOf(d2) }));
        g = d.length();
        h = l1;
        l = d1;
        m = d2;
        j = Math.floor(d1 * 100000.0D + 0.5D);
      }
      long l3;
      for (k = Math.floor(d2 * 100000.0D + 0.5D);; k = l3)
      {
        if (g + 15 > 750)
        {
          a(d.toString());
          d = null;
        }
        if (f >= bh.U) {
          this.r = false;
        }
        return true;
        l = d1;
        m = d2;
        l2 = Math.floor(d1 * 100000.0D + 0.5D);
        l3 = Math.floor(d2 * 100000.0D + 0.5D);
        n = (int)(l1 - h);
        o = (int)(l2 - j);
        p = (int)(l3 - k);
        d.append(String.format(Locale.CHINA, "%d,%d,%d|", new Object[] { Integer.valueOf(n), Integer.valueOf(o), Integer.valueOf(p) }));
        g = d.length();
        h = l1;
        j = l2;
      }
    }
    return false;
  }
  
  private boolean a(String paramString)
  {
    if ((paramString == null) || (!paramString.startsWith("&nr"))) {}
    while ((!c.exists()) && (!d())) {
      return false;
    }
    for (;;)
    {
      int i3;
      try
      {
        RandomAccessFile localRandomAccessFile = new RandomAccessFile(c, "rw");
        localRandomAccessFile.seek(0L);
        int i2 = localRandomAccessFile.readInt();
        i1 = localRandomAccessFile.readInt();
        i3 = localRandomAccessFile.readInt();
        if (!a(i2, i1, i3))
        {
          localRandomAccessFile.close();
          d();
          return false;
        }
        if (bh.R) {
          if (i2 != bh.U)
          {
            if ((i3 > 1) && (paramString.equals(a(i3 - 1))))
            {
              localRandomAccessFile.close();
              return false;
            }
          }
          else
          {
            if (i3 != 1) {
              break label493;
            }
            i = bh.U;
            if (paramString.equals(a(i)))
            {
              localRandomAccessFile.close();
              return false;
            }
          }
        }
        localRandomAccessFile.seek((i3 - 1) * 1024 + 12 + 0L);
        if (paramString.length() > 750)
        {
          localRandomAccessFile.close();
          return false;
        }
        paramString = Jni.a(paramString);
        i = paramString.length();
        if (i > 1020)
        {
          localRandomAccessFile.close();
          return false;
        }
        localRandomAccessFile.writeInt(i);
        localRandomAccessFile.writeBytes(paramString);
        if (i2 == 0)
        {
          localRandomAccessFile.seek(0L);
          localRandomAccessFile.writeInt(1);
          localRandomAccessFile.writeInt(1);
          localRandomAccessFile.writeInt(2);
          localRandomAccessFile.close();
          return true;
        }
        if (i2 < bh.U - 1)
        {
          localRandomAccessFile.seek(0L);
          localRandomAccessFile.writeInt(i2 + 1);
          localRandomAccessFile.seek(8L);
          localRandomAccessFile.writeInt(i2 + 2);
          continue;
        }
        if (i2 == bh.U - 1)
        {
          localRandomAccessFile.seek(0L);
          localRandomAccessFile.writeInt(bh.U);
          if ((i1 == 0) || (i1 == 1)) {
            localRandomAccessFile.writeInt(2);
          }
          localRandomAccessFile.seek(8L);
          localRandomAccessFile.writeInt(1);
          continue;
        }
        if (i3 == i1)
        {
          if (i3 != bh.U) {
            break label501;
          }
          i = 1;
          if (i != bh.U) {
            break label509;
          }
          i1 = 1;
          localRandomAccessFile.seek(4L);
          localRandomAccessFile.writeInt(i1);
          localRandomAccessFile.writeInt(i);
          continue;
        }
        if (i3 == bh.U)
        {
          i = 1;
          if (i == i1)
          {
            if (i == bh.U)
            {
              i1 = 1;
              localRandomAccessFile.seek(4L);
              localRandomAccessFile.writeInt(i1);
            }
          }
          else
          {
            localRandomAccessFile.seek(8L);
            localRandomAccessFile.writeInt(i);
          }
        }
        else
        {
          i = i3 + 1;
          continue;
        }
        i1 = i + 1;
        continue;
        i = i3 - 1;
      }
      catch (IOException paramString)
      {
        return false;
      }
      label493:
      continue;
      label501:
      int i = i3 + 1;
      continue;
      label509:
      int i1 = i + 1;
    }
  }
  
  public static String b()
  {
    if (c == null) {
      return null;
    }
    if (!c.exists()) {
      return null;
    }
    for (;;)
    {
      int i1;
      try
      {
        localRandomAccessFile = new RandomAccessFile(c, "rw");
        localRandomAccessFile.seek(0L);
        i2 = localRandomAccessFile.readInt();
        i1 = localRandomAccessFile.readInt();
        i = localRandomAccessFile.readInt();
        if (a(i2, i1, i)) {
          break label220;
        }
        localRandomAccessFile.close();
        d();
        return null;
      }
      catch (IOException localIOException)
      {
        RandomAccessFile localRandomAccessFile;
        int i2;
        long l1;
        int i3;
        Object localObject;
        return null;
      }
      localRandomAccessFile.close();
      return null;
      l1 = 0L + ((i1 - 1) * 1024 + 12);
      localRandomAccessFile.seek(l1);
      i3 = localRandomAccessFile.readInt();
      localObject = new byte[i3];
      localRandomAccessFile.seek(l1 + 4L);
      int i = 0;
      if (i < i3)
      {
        localObject[i] = localRandomAccessFile.readByte();
        i += 1;
      }
      else
      {
        localObject = new String((byte[])localObject);
        if (i2 < bh.U)
        {
          i = i1 + 1;
          localRandomAccessFile.seek(4L);
          localRandomAccessFile.writeInt(i);
          localRandomAccessFile.close();
          return localObject;
        }
        i = bh.U;
        if (i1 == i)
        {
          i = 1;
        }
        else
        {
          i = i1 + 1;
          continue;
          label220:
          if (i1 != 0) {
            if (i1 != i) {}
          }
        }
      }
    }
  }
  
  private static void c()
  {
    e = true;
    d = null;
    f = 0;
    g = 0;
    h = 0L;
    j = 0L;
    k = 0L;
    l = 0.0D;
    m = 0.0D;
    n = 0;
    o = 0;
    p = 0;
  }
  
  private static boolean d()
  {
    if (c.exists()) {
      c.delete();
    }
    if (!c.getParentFile().exists()) {
      c.getParentFile().mkdirs();
    }
    try
    {
      c.createNewFile();
      RandomAccessFile localRandomAccessFile = new RandomAccessFile(c, "rw");
      localRandomAccessFile.seek(0L);
      localRandomAccessFile.writeInt(0);
      localRandomAccessFile.writeInt(0);
      localRandomAccessFile.writeInt(1);
      localRandomAccessFile.close();
      c();
      return c.exists();
    }
    catch (IOException localIOException) {}
    return false;
  }
  
  public boolean a(Location paramLocation)
  {
    return a(paramLocation, bh.S, bh.T);
  }
}
