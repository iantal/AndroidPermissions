package com.baidu.protect;

import android.app.Application;
import android.os.Build.VERSION;
import android.os.Debug;
import android.os.Process;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

public class StubApplication
  extends Application
{
  private boolean mOnCreateFinished = false;
  
  static
  {
    if (!Debug.isDebuggerConnected())
    {
      if (isX86CPU()) {
        loadX86Library();
      }
    }
    else {
      return;
    }
    System.loadLibrary("baiduprotect");
  }
  
  public StubApplication() {}
  
  private static String getDataFolder(String paramString)
  {
    if (Build.VERSION.SDK_INT < 17) {
      return "/data/data/";
    }
    int i = Process.myUid() / 100000;
    if (i == 0) {
      return "/data/data/";
    }
    String str = "/data/user/" + i + "/";
    paramString = str + paramString;
    try
    {
      new File(paramString).listFiles();
      return str;
    }
    catch (Exception paramString) {}
    return "/data/data/";
  }
  
  private static boolean is64BitEnv()
  {
    do
    {
      try
      {
        localBufferedReader = new BufferedReader(new InputStreamReader(new FileInputStream("/proc/self/maps")));
        str = localBufferedReader.readLine();
      }
      catch (IOException localIOException)
      {
        BufferedReader localBufferedReader;
        String str;
        localIOException.printStackTrace();
        break;
      }
      if (str.endsWith("/system/bin/linker64"))
      {
        localBufferedReader.close();
        return true;
      }
      str = localBufferedReader.readLine();
    } while (localIOException != null);
    return false;
  }
  
  private static boolean isX86CPU()
  {
    try
    {
      byte[] arrayOfByte = new byte[20];
      FileInputStream localFileInputStream = new FileInputStream("/system/bin/linker");
      localFileInputStream.read(arrayOfByte, 0, 20);
      if (arrayOfByte[18] == 3)
      {
        localFileInputStream.close();
        return true;
      }
      localFileInputStream.close();
      return false;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return false;
  }
  
  private static void loadX86Library()
  {
    localObject8 = null;
    localObject4 = null;
    localObject9 = null;
    localObject7 = null;
    localObject6 = localObject9;
    localObject5 = localObject8;
    try
    {
      localBufferedReader = new BufferedReader(new InputStreamReader(new FileInputStream("/proc/self/maps")));
      localObject6 = localObject9;
      localObject5 = localObject8;
      localObject1 = localBufferedReader.readLine();
    }
    catch (IOException localIOException1)
    {
      for (;;)
      {
        try
        {
          BufferedReader localBufferedReader;
          localObject5 = "assets/" + (String)localObject5;
          Object localObject1 = new ZipInputStream(new FileInputStream((String)localObject1));
          localObject6 = ((ZipInputStream)localObject1).getNextEntry();
          if (localObject6 == null)
          {
            ((ZipInputStream)localObject1).close();
            System.load((String)localObject4);
            return;
            localObject6 = localObject9;
            localObject5 = localObject8;
            Object localObject10;
            if (((String)localObject1).endsWith(".apk"))
            {
              localObject6 = localObject9;
              localObject5 = localObject8;
              localObject1 = ((String)localObject1).split(" ");
              localObject6 = localObject9;
              localObject5 = localObject8;
              localObject10 = localObject1[(localObject1.length - 1)];
              localObject6 = localObject9;
              localObject5 = localObject8;
              if (!localObject10.startsWith("/mnt/asec/"))
              {
                localObject6 = localObject9;
                localObject5 = localObject8;
                if (!localObject10.startsWith("/data/app/")) {}
              }
              else
              {
                localObject6 = localObject9;
                localObject5 = localObject8;
                localObject1 = localObject10.substring(10);
                localObject6 = localObject9;
                localObject5 = localObject8;
                i = ((String)localObject1).lastIndexOf('-');
                if (i != -1) {
                  continue;
                }
              }
            }
            else
            {
              localObject6 = localObject9;
              localObject5 = localObject8;
              localObject1 = localBufferedReader.readLine();
              break label723;
            }
            localObject6 = localObject9;
            localObject5 = localObject8;
            if (localObject10.startsWith("/app/"))
            {
              localObject6 = localObject9;
              localObject5 = localObject8;
              localObject1 = localObject10.substring(5);
              continue;
            }
            localObject6 = localObject9;
            localObject5 = localObject8;
            if (!localObject10.startsWith("/mnt/asec2/[2]")) {
              continue;
            }
            localObject6 = localObject9;
            localObject5 = localObject8;
            localObject1 = localObject10.substring(14);
            continue;
            localObject6 = localObject9;
            localObject5 = localObject8;
            localObject1 = ((String)localObject1).substring(0, i);
            localObject6 = localObject9;
            localObject5 = localObject8;
            boolean bool = new File("/data/data/" + (String)localObject1 + "/lib/libbaiduprotect.so").exists();
            if (!bool) {
              continue;
            }
            localObject4 = localObject1;
            localObject1 = localObject10;
            continue;
            localIOException1 = localIOException1;
            localIOException1.printStackTrace();
            localObject2 = localObject6;
            localObject4 = localObject5;
            continue;
            localObject5 = "libbaiduprotect_x86.so";
            continue;
          }
          else if (((ZipEntry)localObject6).getName().equals(localObject5))
          {
            l = ((ZipEntry)localObject6).getTime();
            localObject5 = new File((String)localObject4);
          }
        }
        catch (IOException localIOException2)
        {
          try
          {
            Object localObject2;
            long l;
            if (((File)localObject5).exists())
            {
              if (((File)localObject5).lastModified() == l)
              {
                localObject2.closeEntry();
                continue;
              }
              ((File)localObject5).delete();
            }
            localObject5 = new FileOutputStream((String)localObject4);
            localObject6 = new byte['Ð€'];
            i = localObject2.read((byte[])localObject6);
            if (i != -1) {
              continue;
            }
            ((FileOutputStream)localObject5).flush();
            ((FileOutputStream)localObject5).close();
            localObject2.closeEntry();
            localObject5 = new File((String)localObject4);
            if (!((File)localObject5).exists()) {
              continue;
            }
            ((File)localObject5).setLastModified(l);
          }
          catch (IOException localIOException3)
          {
            int i;
            continue;
          }
          localIOException2 = localIOException2;
          localIOException2.printStackTrace();
          continue;
          ((FileOutputStream)localObject5).write((byte[])localObject6, 0, i);
          continue;
          localIOException3.closeEntry();
          continue;
        }
        if (localIOException3 == null) {
          Object localObject3 = localObject7;
        }
      }
    }
    localObject6 = localObject1;
    localObject5 = localObject4;
    localBufferedReader.close();
    if (is64BitEnv())
    {
      localObject5 = "libbaiduprotect_x86_64.so";
      if ((localObject1 != null) && (localObject4 != null))
      {
        localObject6 = getDataFolder((String)localObject4) + (String)localObject4 + "/.x86lib/";
        localObject4 = localObject6 + (String)localObject5;
        localObject6 = new File((String)localObject6);
        if (!((File)localObject6).exists()) {
          ((File)localObject6).mkdir();
        }
      }
    }
  }
  
  public String getPackageName()
  {
    if (this.mOnCreateFinished) {
      return super.getPackageName();
    }
    return "";
  }
  
  public void onCreate()
  {
    super.onCreate();
    A.a();
    this.mOnCreateFinished = true;
  }
}
