package com.xs.mm.wlog;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Build;
import android.text.TextUtils;
import android.util.Log;
import java.security.MessageDigest;
import java.util.Locale;
import java.util.Random;

public final class MobileUtils
{
  public MobileUtils() {}
  
  public static String access_netstate(Context paramContext)
  {
    return CheckInformation.getInsance().netStat.trim();
  }
  
  private static String buildMD5(String paramString)
  {
    int j = 0;
    for (;;)
    {
      int i;
      try
      {
        Object localObject = MessageDigest.getInstance("MD5");
        paramString = paramString.toCharArray();
        byte[] arrayOfByte = new byte[paramString.length];
        i = 0;
        if (i >= paramString.length)
        {
          paramString = ((MessageDigest)localObject).digest(arrayOfByte);
          localObject = new StringBuffer();
          i = j;
          if (i >= paramString.length) {
            return ((StringBuffer)localObject).toString();
          }
          j = paramString[i] & 0xFF;
          if (j < 16) {
            ((StringBuffer)localObject).append("0");
          }
          ((StringBuffer)localObject).append(Integer.toHexString(j));
          i += 1;
          continue;
        }
        arrayOfByte[i] = ((byte)paramString[i]);
      }
      catch (Exception paramString)
      {
        paramString.printStackTrace();
        return "";
      }
      i += 1;
    }
  }
  
  private static boolean checkPermission(Context paramContext, String paramString)
  {
    boolean bool = false;
    try
    {
      int i = paramContext.getPackageManager().checkPermission(paramString, paramContext.getPackageName());
      if (i == 0) {
        bool = true;
      }
      return bool;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return false;
  }
  
  protected static String filterStr900(String paramString)
  {
    if (paramString == null) {
      return "";
    }
    String str = paramString;
    if (paramString.length() > 901) {
      str = paramString.substring(0, 900);
    }
    return str.replace("\\", "").replace("|", "");
  }
  
  public static String get18digiestData(Context paramContext)
  {
    try
    {
      String str = getDeviceId(paramContext);
      if ((str != null) && (str.length() > 6)) {
        return String.valueOf(buildMD5(str).toCharArray(), 7, 18);
      }
      str = readMAC(paramContext);
      if ((str != null) && (str.length() >= 9)) {
        return String.valueOf(buildMD5(str).toCharArray(), 7, 18);
      }
      paramContext = getSubscriberId(paramContext);
      if ((paramContext != null) && (paramContext.length() != 0)) {
        return String.valueOf(buildMD5(paramContext).toCharArray(), 7, 18);
      }
      paramContext = String.valueOf(buildMD5(filterStr900(Build.MODEL)).toCharArray(), 7, 18);
      return paramContext;
    }
    catch (Exception paramContext) {}
    return "";
  }
  
  public static int getApplicationUid(Context paramContext)
  {
    try
    {
      int i = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 1).uid;
      return i;
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      paramContext.printStackTrace();
    }
    return -1;
  }
  
  public static String getBuild_MANUFACTURER()
  {
    return filterStr900(CheckInformation.getInsance().buildMANUFACTURER);
  }
  
  public static String getBuild_MODEL()
  {
    return filterStr900(CheckInformation.getInsance().buildMODEL);
  }
  
  public static String getCountry()
  {
    try
    {
      String str1 = Locale.getDefault().getCountry();
      return isEmpty(str1);
    }
    catch (Exception localException)
    {
      for (;;)
      {
        String str2 = "";
      }
    }
  }
  
  /* Error */
  public static String getCpufreq()
  {
    // Byte code:
    //   0: new 168	java/io/FileReader
    //   3: dup
    //   4: ldc -86
    //   6: invokespecial 173	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   9: astore_1
    //   10: aload_1
    //   11: astore_0
    //   12: new 175	java/io/BufferedReader
    //   15: dup
    //   16: aload_1
    //   17: invokespecial 178	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   20: invokevirtual 181	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   23: invokevirtual 27	java/lang/String:trim	()Ljava/lang/String;
    //   26: astore_2
    //   27: aload_1
    //   28: invokevirtual 184	java/io/FileReader:close	()V
    //   31: aload_2
    //   32: areturn
    //   33: astore_0
    //   34: aload_0
    //   35: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   38: aload_2
    //   39: areturn
    //   40: astore_2
    //   41: aconst_null
    //   42: astore_1
    //   43: aload_1
    //   44: astore_0
    //   45: aload_2
    //   46: invokevirtual 186	java/io/FileNotFoundException:printStackTrace	()V
    //   49: aload_1
    //   50: invokevirtual 184	java/io/FileReader:close	()V
    //   53: ldc 70
    //   55: areturn
    //   56: astore_0
    //   57: aload_0
    //   58: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   61: goto -8 -> 53
    //   64: astore_2
    //   65: aconst_null
    //   66: astore_1
    //   67: aload_1
    //   68: astore_0
    //   69: aload_2
    //   70: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   73: aload_1
    //   74: invokevirtual 184	java/io/FileReader:close	()V
    //   77: goto -24 -> 53
    //   80: astore_0
    //   81: aload_0
    //   82: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   85: goto -32 -> 53
    //   88: astore_1
    //   89: aconst_null
    //   90: astore_0
    //   91: aload_0
    //   92: invokevirtual 184	java/io/FileReader:close	()V
    //   95: aload_1
    //   96: athrow
    //   97: astore_0
    //   98: aload_0
    //   99: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   102: goto -7 -> 95
    //   105: astore_1
    //   106: goto -15 -> 91
    //   109: astore_2
    //   110: goto -43 -> 67
    //   113: astore_2
    //   114: goto -71 -> 43
    // Local variable table:
    //   start	length	slot	name	signature
    //   11	1	0	localFileReader1	java.io.FileReader
    //   33	2	0	localIOException1	java.io.IOException
    //   44	1	0	localFileReader2	java.io.FileReader
    //   56	2	0	localIOException2	java.io.IOException
    //   68	1	0	localFileReader3	java.io.FileReader
    //   80	2	0	localIOException3	java.io.IOException
    //   90	2	0	localObject1	Object
    //   97	2	0	localIOException4	java.io.IOException
    //   9	65	1	localFileReader4	java.io.FileReader
    //   88	8	1	localObject2	Object
    //   105	1	1	localObject3	Object
    //   26	13	2	str	String
    //   40	6	2	localFileNotFoundException1	java.io.FileNotFoundException
    //   64	6	2	localIOException5	java.io.IOException
    //   109	1	2	localIOException6	java.io.IOException
    //   113	1	2	localFileNotFoundException2	java.io.FileNotFoundException
    // Exception table:
    //   from	to	target	type
    //   27	31	33	java/io/IOException
    //   0	10	40	java/io/FileNotFoundException
    //   49	53	56	java/io/IOException
    //   0	10	64	java/io/IOException
    //   73	77	80	java/io/IOException
    //   0	10	88	finally
    //   91	95	97	java/io/IOException
    //   12	27	105	finally
    //   45	49	105	finally
    //   69	73	105	finally
    //   12	27	109	java/io/IOException
    //   12	27	113	java/io/FileNotFoundException
  }
  
  /* Error */
  public static String getCpuinfo_max_freq()
  {
    // Byte code:
    //   0: ldc 70
    //   2: astore_3
    //   3: aconst_null
    //   4: astore_2
    //   5: aconst_null
    //   6: astore_1
    //   7: new 189	java/lang/ProcessBuilder
    //   10: dup
    //   11: iconst_2
    //   12: anewarray 23	java/lang/String
    //   15: dup
    //   16: iconst_0
    //   17: ldc -65
    //   19: aastore
    //   20: dup
    //   21: iconst_1
    //   22: ldc -63
    //   24: aastore
    //   25: invokespecial 196	java/lang/ProcessBuilder:<init>	([Ljava/lang/String;)V
    //   28: invokevirtual 200	java/lang/ProcessBuilder:start	()Ljava/lang/Process;
    //   31: invokevirtual 206	java/lang/Process:getInputStream	()Ljava/io/InputStream;
    //   34: astore 4
    //   36: aload 4
    //   38: astore_1
    //   39: aload 4
    //   41: astore_2
    //   42: bipush 24
    //   44: newarray byte
    //   46: astore 5
    //   48: aload 4
    //   50: astore_1
    //   51: aload 4
    //   53: astore_2
    //   54: aload 4
    //   56: aload 5
    //   58: invokevirtual 212	java/io/InputStream:read	([B)I
    //   61: istore_0
    //   62: iload_0
    //   63: iconst_m1
    //   64: if_icmpne +13 -> 77
    //   67: aload 4
    //   69: invokevirtual 213	java/io/InputStream:close	()V
    //   72: aload_3
    //   73: invokevirtual 27	java/lang/String:trim	()Ljava/lang/String;
    //   76: areturn
    //   77: aload 4
    //   79: astore_1
    //   80: aload 4
    //   82: astore_2
    //   83: new 215	java/lang/StringBuilder
    //   86: dup
    //   87: aload_3
    //   88: invokestatic 218	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   91: invokespecial 219	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   94: new 23	java/lang/String
    //   97: dup
    //   98: aload 5
    //   100: invokespecial 222	java/lang/String:<init>	([B)V
    //   103: invokevirtual 225	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   106: invokevirtual 226	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   109: astore_3
    //   110: goto -62 -> 48
    //   113: astore_3
    //   114: aload_1
    //   115: astore_2
    //   116: aload_3
    //   117: invokevirtual 68	java/lang/Exception:printStackTrace	()V
    //   120: ldc 70
    //   122: astore_3
    //   123: aload_1
    //   124: invokevirtual 213	java/io/InputStream:close	()V
    //   127: goto -55 -> 72
    //   130: astore_1
    //   131: aload_1
    //   132: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   135: goto -63 -> 72
    //   138: astore_1
    //   139: aload_2
    //   140: invokevirtual 213	java/io/InputStream:close	()V
    //   143: aload_1
    //   144: athrow
    //   145: astore_2
    //   146: aload_2
    //   147: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   150: goto -7 -> 143
    //   153: astore_1
    //   154: aload_1
    //   155: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   158: goto -86 -> 72
    // Local variable table:
    //   start	length	slot	name	signature
    //   61	4	0	i	int
    //   6	118	1	localObject1	Object
    //   130	2	1	localIOException1	java.io.IOException
    //   138	6	1	localObject2	Object
    //   153	2	1	localIOException2	java.io.IOException
    //   4	136	2	localObject3	Object
    //   145	2	2	localIOException3	java.io.IOException
    //   2	108	3	str1	String
    //   113	4	3	localException	Exception
    //   122	1	3	str2	String
    //   34	47	4	localInputStream	java.io.InputStream
    //   46	53	5	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   7	36	113	java/lang/Exception
    //   42	48	113	java/lang/Exception
    //   54	62	113	java/lang/Exception
    //   83	110	113	java/lang/Exception
    //   123	127	130	java/io/IOException
    //   7	36	138	finally
    //   42	48	138	finally
    //   54	62	138	finally
    //   83	110	138	finally
    //   116	120	138	finally
    //   139	143	145	java/io/IOException
    //   67	72	153	java/io/IOException
  }
  
  public static String getDeviceId(Context paramContext)
  {
    try
    {
      paramContext = CheckInformation.getInsance().imei;
      return filterStr900(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = "";
      }
    }
  }
  
  public static String getLocaleLanguage()
  {
    try
    {
      String str1 = Locale.getDefault().getLanguage();
      return isEmpty(str1);
    }
    catch (Exception localException)
    {
      for (;;)
      {
        String str2 = "";
      }
    }
  }
  
  public static String getMOBILE_APPKEY(Context paramContext)
  {
    if (TextUtils.isEmpty(CheckInformation.getInsance().appId)) {
      return "00000";
    }
    return CheckInformation.getInsance().appId;
  }
  
  public static String getMOBILE_CHANNEL(Context paramContext)
  {
    return filterStr900(CheckInformation.getInsance().channelId);
  }
  
  /* Error */
  public static String getMemeryInfo()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_1
    //   2: new 168	java/io/FileReader
    //   5: dup
    //   6: ldc -5
    //   8: invokespecial 173	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   11: astore_2
    //   12: new 175	java/io/BufferedReader
    //   15: dup
    //   16: aload_2
    //   17: sipush 8192
    //   20: invokespecial 254	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   23: astore_0
    //   24: aload_0
    //   25: invokevirtual 181	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   28: astore_1
    //   29: aload_1
    //   30: ifnonnull +22 -> 52
    //   33: aload_2
    //   34: invokevirtual 184	java/io/FileReader:close	()V
    //   37: aload_0
    //   38: invokevirtual 255	java/io/BufferedReader:close	()V
    //   41: ldc 70
    //   43: areturn
    //   44: astore_0
    //   45: aload_0
    //   46: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   49: goto -8 -> 41
    //   52: aload_1
    //   53: aload_1
    //   54: ldc_w 257
    //   57: invokevirtual 261	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   60: iconst_2
    //   61: iadd
    //   62: aload_1
    //   63: ldc_w 263
    //   66: invokevirtual 261	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   69: iconst_1
    //   70: isub
    //   71: invokevirtual 95	java/lang/String:substring	(II)Ljava/lang/String;
    //   74: invokevirtual 27	java/lang/String:trim	()Ljava/lang/String;
    //   77: astore_1
    //   78: ldc_w 265
    //   81: aload_1
    //   82: invokestatic 271	com/xs/mm/wlog/LogUtil:printLog	(Ljava/lang/String;Ljava/lang/String;)V
    //   85: aload_1
    //   86: invokestatic 161	com/xs/mm/wlog/MobileUtils:isEmpty	(Ljava/lang/String;)Ljava/lang/String;
    //   89: astore_1
    //   90: aload_2
    //   91: invokevirtual 184	java/io/FileReader:close	()V
    //   94: aload_0
    //   95: invokevirtual 255	java/io/BufferedReader:close	()V
    //   98: aload_1
    //   99: areturn
    //   100: astore_0
    //   101: aload_0
    //   102: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   105: aload_1
    //   106: areturn
    //   107: astore_2
    //   108: aconst_null
    //   109: astore_0
    //   110: aload_2
    //   111: invokevirtual 68	java/lang/Exception:printStackTrace	()V
    //   114: aload_1
    //   115: invokevirtual 184	java/io/FileReader:close	()V
    //   118: aload_0
    //   119: invokevirtual 255	java/io/BufferedReader:close	()V
    //   122: ldc 70
    //   124: areturn
    //   125: astore_0
    //   126: aload_0
    //   127: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   130: goto -8 -> 122
    //   133: astore_1
    //   134: aconst_null
    //   135: astore_0
    //   136: aconst_null
    //   137: astore_2
    //   138: aload_2
    //   139: invokevirtual 184	java/io/FileReader:close	()V
    //   142: aload_0
    //   143: invokevirtual 255	java/io/BufferedReader:close	()V
    //   146: aload_1
    //   147: athrow
    //   148: astore_0
    //   149: aload_0
    //   150: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   153: goto -7 -> 146
    //   156: astore_1
    //   157: aconst_null
    //   158: astore_0
    //   159: goto -21 -> 138
    //   162: astore_1
    //   163: goto -25 -> 138
    //   166: astore_3
    //   167: aload_1
    //   168: astore_2
    //   169: aload_3
    //   170: astore_1
    //   171: goto -33 -> 138
    //   174: astore_3
    //   175: aconst_null
    //   176: astore_0
    //   177: aload_2
    //   178: astore_1
    //   179: aload_3
    //   180: astore_2
    //   181: goto -71 -> 110
    //   184: astore_3
    //   185: aload_2
    //   186: astore_1
    //   187: aload_3
    //   188: astore_2
    //   189: goto -79 -> 110
    // Local variable table:
    //   start	length	slot	name	signature
    //   23	15	0	localBufferedReader	java.io.BufferedReader
    //   44	51	0	localIOException1	java.io.IOException
    //   100	2	0	localIOException2	java.io.IOException
    //   109	10	0	localObject1	Object
    //   125	2	0	localIOException3	java.io.IOException
    //   135	8	0	localObject2	Object
    //   148	2	0	localIOException4	java.io.IOException
    //   158	19	0	localObject3	Object
    //   1	114	1	str	String
    //   133	14	1	localObject4	Object
    //   156	1	1	localObject5	Object
    //   162	6	1	localObject6	Object
    //   170	17	1	localObject7	Object
    //   11	80	2	localFileReader	java.io.FileReader
    //   107	4	2	localException1	Exception
    //   137	52	2	localObject8	Object
    //   166	4	3	localObject9	Object
    //   174	6	3	localException2	Exception
    //   184	4	3	localException3	Exception
    // Exception table:
    //   from	to	target	type
    //   33	41	44	java/io/IOException
    //   90	98	100	java/io/IOException
    //   2	12	107	java/lang/Exception
    //   114	122	125	java/io/IOException
    //   2	12	133	finally
    //   138	146	148	java/io/IOException
    //   12	24	156	finally
    //   24	29	162	finally
    //   52	90	162	finally
    //   110	114	166	finally
    //   12	24	174	java/lang/Exception
    //   24	29	184	java/lang/Exception
    //   52	90	184	java/lang/Exception
  }
  
  public static int getMetrics_density(Context paramContext)
  {
    try
    {
      int i = CheckInformation.getInsance().density;
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  public static int getMetrics_densityDpi(Context paramContext)
  {
    try
    {
      int i = CheckInformation.getInsance().densityDpi;
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  public static int getMetrics_heightPixels(Context paramContext)
  {
    try
    {
      int i = CheckInformation.getInsance().disHeight;
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  public static int getMetrics_widthPixels(Context paramContext)
  {
    try
    {
      int i = CheckInformation.getInsance().disWidth;
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  public static String getNetworkOperatorName(Context paramContext)
  {
    try
    {
      paramContext = CheckInformation.getInsance().networkOperatorName;
      return isEmpty(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
        paramContext = "";
      }
    }
  }
  
  public static String getPackageName(Context paramContext)
  {
    try
    {
      paramContext = CheckInformation.getInsance().packageName;
      return isEmpty(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = "";
      }
    }
  }
  
  public static String getSessionId(Context paramContext, String paramString)
  {
    try
    {
      int i = new Random().nextInt(10);
      paramContext = String.valueOf(buildMD5(System.currentTimeMillis() + paramString + getDeviceId(paramContext) + readMAC(paramContext) + i).toCharArray(), 8, 16);
      return isEmpty(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = "";
      }
    }
  }
  
  public static String getSubscriberId(Context paramContext)
  {
    try
    {
      paramContext = CheckInformation.getInsance().imsi.trim();
      LogUtil.printLog("MobileUtils", paramContext);
      return isEmpty(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = "";
        Log.i("MobileUtils", "can't not read imsi");
      }
    }
  }
  
  /* Error */
  public static long[] getTcp_rcv_AND_Tcp_snd(Context paramContext)
  {
    // Byte code:
    //   0: lconst_0
    //   1: lstore 8
    //   3: aconst_null
    //   4: astore 11
    //   6: aload_0
    //   7: invokestatic 329	com/xs/mm/wlog/MobileUtils:getApplicationUid	(Landroid/content/Context;)I
    //   10: istore_1
    //   11: new 215	java/lang/StringBuilder
    //   14: dup
    //   15: ldc_w 331
    //   18: invokespecial 219	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   21: iload_1
    //   22: invokevirtual 315	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   25: ldc_w 333
    //   28: invokevirtual 225	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31: invokevirtual 226	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   34: astore_0
    //   35: new 215	java/lang/StringBuilder
    //   38: dup
    //   39: ldc_w 331
    //   42: invokespecial 219	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   45: iload_1
    //   46: invokevirtual 315	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   49: ldc_w 335
    //   52: invokevirtual 225	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   55: invokevirtual 226	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   58: astore 12
    //   60: new 168	java/io/FileReader
    //   63: dup
    //   64: aload_0
    //   65: invokespecial 173	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   68: astore_0
    //   69: new 175	java/io/BufferedReader
    //   72: dup
    //   73: aload_0
    //   74: sipush 500
    //   77: invokespecial 254	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   80: astore 10
    //   82: aload 10
    //   84: invokevirtual 181	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   87: invokevirtual 336	java/lang/String:toString	()Ljava/lang/String;
    //   90: invokevirtual 27	java/lang/String:trim	()Ljava/lang/String;
    //   93: invokestatic 342	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   96: lstore_2
    //   97: aload_0
    //   98: invokevirtual 184	java/io/FileReader:close	()V
    //   101: aload 10
    //   103: invokevirtual 255	java/io/BufferedReader:close	()V
    //   106: aconst_null
    //   107: astore 10
    //   109: aload 11
    //   111: astore_0
    //   112: new 168	java/io/FileReader
    //   115: dup
    //   116: aload 12
    //   118: invokespecial 173	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   121: astore 11
    //   123: new 175	java/io/BufferedReader
    //   126: dup
    //   127: aload 11
    //   129: sipush 500
    //   132: invokespecial 254	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   135: astore 10
    //   137: aload 10
    //   139: invokevirtual 181	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   142: invokevirtual 336	java/lang/String:toString	()Ljava/lang/String;
    //   145: invokevirtual 27	java/lang/String:trim	()Ljava/lang/String;
    //   148: invokestatic 342	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   151: lstore 4
    //   153: aload 11
    //   155: invokevirtual 184	java/io/FileReader:close	()V
    //   158: aload 10
    //   160: invokevirtual 255	java/io/BufferedReader:close	()V
    //   163: ldc_w 265
    //   166: new 215	java/lang/StringBuilder
    //   169: dup
    //   170: ldc_w 344
    //   173: invokespecial 219	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   176: lload_2
    //   177: invokevirtual 347	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   180: ldc_w 349
    //   183: invokevirtual 225	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   186: lload 4
    //   188: invokevirtual 347	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   191: invokevirtual 226	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   194: invokestatic 271	com/xs/mm/wlog/LogUtil:printLog	(Ljava/lang/String;Ljava/lang/String;)V
    //   197: lload_2
    //   198: lstore 6
    //   200: lload_2
    //   201: lconst_0
    //   202: lcmp
    //   203: ifge +6 -> 209
    //   206: lconst_0
    //   207: lstore 6
    //   209: lload 4
    //   211: lconst_0
    //   212: lcmp
    //   213: ifge +202 -> 415
    //   216: lload 8
    //   218: lstore_2
    //   219: iconst_2
    //   220: newarray long
    //   222: dup
    //   223: iconst_0
    //   224: lload 6
    //   226: lastore
    //   227: dup
    //   228: iconst_1
    //   229: lload_2
    //   230: lastore
    //   231: areturn
    //   232: astore 11
    //   234: aconst_null
    //   235: astore 10
    //   237: aconst_null
    //   238: astore_0
    //   239: aload_0
    //   240: ifnull +12 -> 252
    //   243: aload_0
    //   244: invokevirtual 184	java/io/FileReader:close	()V
    //   247: aload 10
    //   249: invokevirtual 255	java/io/BufferedReader:close	()V
    //   252: aload 11
    //   254: athrow
    //   255: astore_0
    //   256: aload_0
    //   257: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   260: goto -8 -> 252
    //   263: astore_0
    //   264: aconst_null
    //   265: astore 10
    //   267: aconst_null
    //   268: astore_0
    //   269: aload_0
    //   270: ifnull +218 -> 488
    //   273: aload_0
    //   274: invokevirtual 184	java/io/FileReader:close	()V
    //   277: aload 10
    //   279: invokevirtual 255	java/io/BufferedReader:close	()V
    //   282: lconst_0
    //   283: lstore_2
    //   284: aconst_null
    //   285: astore 10
    //   287: aload 11
    //   289: astore_0
    //   290: goto -178 -> 112
    //   293: astore 11
    //   295: aload 11
    //   297: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   300: aload_0
    //   301: astore 11
    //   303: lconst_0
    //   304: lstore_2
    //   305: aload 10
    //   307: astore_0
    //   308: aload 11
    //   310: astore 10
    //   312: goto -200 -> 112
    //   315: astore 11
    //   317: aload 11
    //   319: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   322: aload_0
    //   323: astore 11
    //   325: aload 10
    //   327: astore_0
    //   328: aload 11
    //   330: astore 10
    //   332: goto -220 -> 112
    //   335: astore 12
    //   337: aload 10
    //   339: astore 11
    //   341: aload_0
    //   342: astore 10
    //   344: aload 12
    //   346: astore_0
    //   347: aload 11
    //   349: ifnull +13 -> 362
    //   352: aload 11
    //   354: invokevirtual 184	java/io/FileReader:close	()V
    //   357: aload 10
    //   359: invokevirtual 255	java/io/BufferedReader:close	()V
    //   362: aload_0
    //   363: athrow
    //   364: astore 10
    //   366: aload 10
    //   368: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   371: goto -9 -> 362
    //   374: astore 11
    //   376: aload 10
    //   378: ifnull +104 -> 482
    //   381: aload 10
    //   383: invokevirtual 184	java/io/FileReader:close	()V
    //   386: aload_0
    //   387: invokevirtual 255	java/io/BufferedReader:close	()V
    //   390: lconst_0
    //   391: lstore 4
    //   393: goto -230 -> 163
    //   396: astore_0
    //   397: aload_0
    //   398: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   401: lconst_0
    //   402: lstore 4
    //   404: goto -241 -> 163
    //   407: astore_0
    //   408: aload_0
    //   409: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   412: goto -249 -> 163
    //   415: lload 4
    //   417: lstore_2
    //   418: goto -199 -> 219
    //   421: astore 12
    //   423: aload_0
    //   424: astore 10
    //   426: aload 12
    //   428: astore_0
    //   429: goto -82 -> 347
    //   432: astore_0
    //   433: goto -86 -> 347
    //   436: astore 10
    //   438: aload 11
    //   440: astore 10
    //   442: goto -66 -> 376
    //   445: astore_0
    //   446: aload 10
    //   448: astore_0
    //   449: aload 11
    //   451: astore 10
    //   453: goto -77 -> 376
    //   456: astore 11
    //   458: aconst_null
    //   459: astore 10
    //   461: goto -222 -> 239
    //   464: astore 11
    //   466: goto -227 -> 239
    //   469: astore 10
    //   471: aconst_null
    //   472: astore 10
    //   474: goto -205 -> 269
    //   477: astore 13
    //   479: goto -210 -> 269
    //   482: lconst_0
    //   483: lstore 4
    //   485: goto -322 -> 163
    //   488: aload_0
    //   489: astore 11
    //   491: lconst_0
    //   492: lstore_2
    //   493: aload 10
    //   495: astore_0
    //   496: aload 11
    //   498: astore 10
    //   500: goto -388 -> 112
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	503	0	paramContext	Context
    //   10	36	1	i	int
    //   96	397	2	l1	long
    //   151	333	4	l2	long
    //   198	27	6	l3	long
    //   1	216	8	l4	long
    //   80	278	10	localObject1	Object
    //   364	18	10	localIOException1	java.io.IOException
    //   424	1	10	localContext1	Context
    //   436	1	10	localException1	Exception
    //   440	20	10	localException2	Exception
    //   469	1	10	localException3	Exception
    //   472	27	10	localContext2	Context
    //   4	150	11	localFileReader	java.io.FileReader
    //   232	56	11	localObject2	Object
    //   293	3	11	localIOException2	java.io.IOException
    //   301	8	11	localContext3	Context
    //   315	3	11	localIOException3	java.io.IOException
    //   323	30	11	localObject3	Object
    //   374	76	11	localException4	Exception
    //   456	1	11	localObject4	Object
    //   464	1	11	localObject5	Object
    //   489	8	11	localContext4	Context
    //   58	59	12	str	String
    //   335	10	12	localObject6	Object
    //   421	6	12	localObject7	Object
    //   477	1	13	localException5	Exception
    // Exception table:
    //   from	to	target	type
    //   60	69	232	finally
    //   243	252	255	java/io/IOException
    //   60	69	263	java/lang/Exception
    //   273	282	293	java/io/IOException
    //   97	106	315	java/io/IOException
    //   112	123	335	finally
    //   352	362	364	java/io/IOException
    //   112	123	374	java/lang/Exception
    //   381	390	396	java/io/IOException
    //   153	163	407	java/io/IOException
    //   123	137	421	finally
    //   137	153	432	finally
    //   123	137	436	java/lang/Exception
    //   137	153	445	java/lang/Exception
    //   69	82	456	finally
    //   82	97	464	finally
    //   69	82	469	java/lang/Exception
    //   82	97	477	java/lang/Exception
  }
  
  public static String getVERSION_RELEASE()
  {
    return filterStr900("android " + CheckInformation.getInsance().VERSIONRELEASE);
  }
  
  public static int getVersionCode(Context paramContext)
  {
    try
    {
      int i = Integer.valueOf(CheckInformation.getInsance().versionCode).intValue();
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return -1;
  }
  
  public static String getVersionName(Context paramContext)
  {
    try
    {
      paramContext = CheckInformation.getInsance().versionName;
      return isEmpty(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
        paramContext = "";
      }
    }
  }
  
  private static String isEmpty(String paramString)
  {
    String str = paramString;
    if (TextUtils.isEmpty(paramString)) {
      str = "";
    }
    return str;
  }
  
  protected static boolean isMoreLength(String paramString, int paramInt)
  {
    return (paramString != null) && (paramString.length() > paramInt);
  }
  
  public static String isWIFIorWap(Context paramContext)
  {
    try
    {
      paramContext = CheckInformation.getInsance().netType;
      return paramContext;
    }
    catch (Exception paramContext) {}
    return "";
  }
  
  public static String readMAC(Context paramContext)
  {
    return isEmpty(CheckInformation.getInsance().mac);
  }
}
