package com.fastfun2.sdk.mmlog318;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.text.TextUtils;
import android.util.Log;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public final class e
{
  private static volatile boolean A = false;
  private static String B = "";
  private static ExecutorService C = Executors.newSingleThreadExecutor();
  private static final String D = "mm.purchasesdk.iapservice.PurchaseService";
  public static final String a = "3.2.1.5";
  public static boolean b = false;
  public static final String c = "start";
  public static final String d = "activate";
  public static final String e = "login";
  public static final String f = "regist";
  public static final String g = "custom";
  private static String h = "lxd";
  private static int i;
  private static boolean j;
  private static boolean k;
  private static boolean l;
  private static int m;
  private static int n;
  private static final String o;
  private static final String p;
  private static final String q;
  private static final String r;
  private static final String s;
  private static String t;
  private static long u;
  private static volatile String v;
  private static Object w;
  private static Object x;
  private static Object y;
  private static boolean z;
  
  static
  {
    b = false;
    i = 1;
    j = true;
    k = false;
    l = true;
    m = 1;
    n = 0;
    o = "act" + h;
    p = "evn" + h;
    q = "esp" + h;
    r = "err" + h;
    s = "sys" + h;
    t = "";
    u = 0L;
    v = "";
    w = new Object();
    x = new Object();
    y = new Object();
    z = false;
  }
  
  public e() {}
  
  /* Error */
  private static int a(Context paramContext, String paramString, JSONObject paramJSONObject)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 10
    //   3: aconst_null
    //   4: astore 12
    //   6: iconst_2
    //   7: istore 5
    //   9: iconst_0
    //   10: istore 6
    //   12: iconst_0
    //   13: istore 8
    //   15: iconst_0
    //   16: istore 4
    //   18: iconst_0
    //   19: istore 9
    //   21: iconst_0
    //   22: istore_3
    //   23: getstatic 65	com/fastfun2/sdk/mmlog318/e:i	I
    //   26: iconst_1
    //   27: if_icmpeq +5 -> 32
    //   30: iconst_2
    //   31: ireturn
    //   32: ldc -107
    //   34: new 77	java/lang/StringBuilder
    //   37: dup
    //   38: ldc -105
    //   40: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   43: aload_1
    //   44: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   47: ldc -103
    //   49: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   52: aload_0
    //   53: invokevirtual 157	java/lang/Object:getClass	()Ljava/lang/Class;
    //   56: invokevirtual 162	java/lang/Class:getName	()Ljava/lang/String;
    //   59: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   62: ldc -92
    //   64: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   67: aload_2
    //   68: invokevirtual 167	org/json/JSONObject:toString	()Ljava/lang/String;
    //   71: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   74: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   77: invokestatic 170	com/fastfun2/sdk/mmlog318/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   80: aload_0
    //   81: invokestatic 175	com/fastfun2/sdk/mmlog318/g:h	(Landroid/content/Context;)Ljava/lang/String;
    //   84: astore 11
    //   86: aload_0
    //   87: invokestatic 177	com/fastfun2/sdk/mmlog318/g:i	(Landroid/content/Context;)Ljava/lang/String;
    //   90: ldc -77
    //   92: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   95: astore 13
    //   97: new 77	java/lang/StringBuilder
    //   100: dup
    //   101: aload_1
    //   102: invokestatic 191	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   105: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   108: ldc -63
    //   110: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   113: aload 11
    //   115: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   118: ldc -61
    //   120: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   123: aload 13
    //   125: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   128: ldc -59
    //   130: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   133: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   136: astore_1
    //   137: ldc -107
    //   139: aload_2
    //   140: invokevirtual 167	org/json/JSONObject:toString	()Ljava/lang/String;
    //   143: invokestatic 170	com/fastfun2/sdk/mmlog318/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   146: ldc -107
    //   148: ldc -57
    //   150: invokestatic 170	com/fastfun2/sdk/mmlog318/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   153: new 201	java/net/URL
    //   156: dup
    //   157: aload_1
    //   158: invokespecial 202	java/net/URL:<init>	(Ljava/lang/String;)V
    //   161: invokevirtual 206	java/net/URL:openConnection	()Ljava/net/URLConnection;
    //   164: checkcast 208	java/net/HttpURLConnection
    //   167: astore_1
    //   168: iload_3
    //   169: istore 4
    //   171: iload 8
    //   173: istore 6
    //   175: iload 9
    //   177: istore 7
    //   179: aload_1
    //   180: sipush 10000
    //   183: invokevirtual 212	java/net/HttpURLConnection:setReadTimeout	(I)V
    //   186: iload_3
    //   187: istore 4
    //   189: iload 8
    //   191: istore 6
    //   193: iload 9
    //   195: istore 7
    //   197: aload_1
    //   198: iconst_1
    //   199: invokevirtual 216	java/net/HttpURLConnection:setDoOutput	(Z)V
    //   202: iload_3
    //   203: istore 4
    //   205: iload 8
    //   207: istore 6
    //   209: iload 9
    //   211: istore 7
    //   213: aload_1
    //   214: iconst_1
    //   215: invokevirtual 219	java/net/HttpURLConnection:setDoInput	(Z)V
    //   218: iload_3
    //   219: istore 4
    //   221: iload 8
    //   223: istore 6
    //   225: iload 9
    //   227: istore 7
    //   229: aload_1
    //   230: iconst_0
    //   231: invokevirtual 222	java/net/HttpURLConnection:setUseCaches	(Z)V
    //   234: iload_3
    //   235: istore 4
    //   237: iload 8
    //   239: istore 6
    //   241: iload 9
    //   243: istore 7
    //   245: aload_1
    //   246: ldc -32
    //   248: invokevirtual 227	java/net/HttpURLConnection:setRequestMethod	(Ljava/lang/String;)V
    //   251: iload_3
    //   252: istore 4
    //   254: iload 8
    //   256: istore 6
    //   258: iload 9
    //   260: istore 7
    //   262: invokestatic 232	com/fastfun2/sdk/mmlog318/a:a	()Lcom/fastfun2/sdk/mmlog318/a;
    //   265: aload_2
    //   266: invokevirtual 167	org/json/JSONObject:toString	()Ljava/lang/String;
    //   269: invokevirtual 235	com/fastfun2/sdk/mmlog318/a:a	(Ljava/lang/String;)[B
    //   272: astore 10
    //   274: iload_3
    //   275: istore 4
    //   277: iload 8
    //   279: istore 6
    //   281: iload 9
    //   283: istore 7
    //   285: aload_1
    //   286: ldc -19
    //   288: new 77	java/lang/StringBuilder
    //   291: dup
    //   292: invokespecial 238	java/lang/StringBuilder:<init>	()V
    //   295: aload 10
    //   297: arraylength
    //   298: invokevirtual 241	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   301: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   304: invokevirtual 244	java/net/HttpURLConnection:setRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   307: iload_3
    //   308: istore 4
    //   310: iload 8
    //   312: istore 6
    //   314: iload 9
    //   316: istore 7
    //   318: aload_1
    //   319: ldc -10
    //   321: ldc -8
    //   323: invokevirtual 244	java/net/HttpURLConnection:setRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   326: iload_3
    //   327: istore 4
    //   329: iload 8
    //   331: istore 6
    //   333: iload 9
    //   335: istore 7
    //   337: aload_1
    //   338: ldc -6
    //   340: ldc -77
    //   342: invokevirtual 244	java/net/HttpURLConnection:setRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   345: iload_3
    //   346: istore 4
    //   348: iload 8
    //   350: istore 6
    //   352: iload 9
    //   354: istore 7
    //   356: aload_1
    //   357: invokevirtual 254	java/net/HttpURLConnection:getOutputStream	()Ljava/io/OutputStream;
    //   360: astore 11
    //   362: iload_3
    //   363: istore 4
    //   365: iload 8
    //   367: istore 6
    //   369: iload 9
    //   371: istore 7
    //   373: aload 11
    //   375: aload 10
    //   377: invokevirtual 260	java/io/OutputStream:write	([B)V
    //   380: iload_3
    //   381: istore 4
    //   383: iload 8
    //   385: istore 6
    //   387: iload 9
    //   389: istore 7
    //   391: aload 11
    //   393: invokevirtual 263	java/io/OutputStream:close	()V
    //   396: iload_3
    //   397: istore 4
    //   399: iload 8
    //   401: istore 6
    //   403: iload 9
    //   405: istore 7
    //   407: aload_1
    //   408: invokevirtual 267	java/net/HttpURLConnection:getResponseCode	()I
    //   411: istore_3
    //   412: iload_3
    //   413: istore 4
    //   415: iload_3
    //   416: istore 6
    //   418: iload_3
    //   419: istore 7
    //   421: ldc -107
    //   423: ldc_w 269
    //   426: invokestatic 170	com/fastfun2/sdk/mmlog318/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   429: iload 5
    //   431: istore 4
    //   433: sipush 200
    //   436: iload_3
    //   437: if_icmpne +21 -> 458
    //   440: iload_3
    //   441: istore 4
    //   443: iload_3
    //   444: istore 6
    //   446: ldc_w 271
    //   449: ldc_w 273
    //   452: invokestatic 170	com/fastfun2/sdk/mmlog318/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   455: iconst_1
    //   456: istore 4
    //   458: iload_3
    //   459: istore 6
    //   461: iload 4
    //   463: istore 5
    //   465: aload_1
    //   466: ifnull +310 -> 776
    //   469: aload_1
    //   470: invokevirtual 276	java/net/HttpURLConnection:disconnect	()V
    //   473: iload 4
    //   475: istore 5
    //   477: iload_3
    //   478: istore 4
    //   480: iload 5
    //   482: istore_3
    //   483: ldc_w 278
    //   486: new 77	java/lang/StringBuilder
    //   489: dup
    //   490: ldc_w 280
    //   493: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   496: iload 4
    //   498: invokevirtual 241	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   501: ldc_w 282
    //   504: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   507: iload_3
    //   508: invokevirtual 241	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   511: ldc_w 284
    //   514: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   517: aload_2
    //   518: ldc_w 286
    //   521: invokevirtual 290	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   524: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   527: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   530: invokestatic 170	com/fastfun2/sdk/mmlog318/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   533: ldc -107
    //   535: new 77	java/lang/StringBuilder
    //   538: dup
    //   539: ldc_w 292
    //   542: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   545: aload_0
    //   546: invokevirtual 157	java/lang/Object:getClass	()Ljava/lang/Class;
    //   549: invokevirtual 162	java/lang/Class:getName	()Ljava/lang/String;
    //   552: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   555: ldc_w 294
    //   558: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   561: iload_3
    //   562: invokevirtual 241	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   565: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   568: invokestatic 170	com/fastfun2/sdk/mmlog318/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   571: iload_3
    //   572: ireturn
    //   573: astore 11
    //   575: aload_1
    //   576: astore 10
    //   578: aload 10
    //   580: astore_1
    //   581: ldc -107
    //   583: aload 11
    //   585: invokevirtual 295	org/apache/http/client/ClientProtocolException:toString	()Ljava/lang/String;
    //   588: invokestatic 170	com/fastfun2/sdk/mmlog318/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   591: aload 10
    //   593: astore_1
    //   594: aload 11
    //   596: invokevirtual 298	org/apache/http/client/ClientProtocolException:printStackTrace	()V
    //   599: iload 4
    //   601: istore 6
    //   603: aload 10
    //   605: ifnull +171 -> 776
    //   608: aload 10
    //   610: invokevirtual 276	java/net/HttpURLConnection:disconnect	()V
    //   613: iconst_2
    //   614: istore_3
    //   615: goto -132 -> 483
    //   618: astore 11
    //   620: iload 6
    //   622: istore_3
    //   623: aload_1
    //   624: astore 10
    //   626: aload 10
    //   628: astore_1
    //   629: ldc -107
    //   631: aload 11
    //   633: invokevirtual 299	java/io/IOException:toString	()Ljava/lang/String;
    //   636: invokestatic 170	com/fastfun2/sdk/mmlog318/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   639: aload 10
    //   641: astore_1
    //   642: aload 11
    //   644: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   647: aload 10
    //   649: ifnull +137 -> 786
    //   652: aload 10
    //   654: invokevirtual 276	java/net/HttpURLConnection:disconnect	()V
    //   657: iload_3
    //   658: istore 4
    //   660: iconst_2
    //   661: istore_3
    //   662: goto -179 -> 483
    //   665: astore 10
    //   667: aconst_null
    //   668: astore_1
    //   669: iload 5
    //   671: istore_3
    //   672: ldc -107
    //   674: aload 10
    //   676: invokevirtual 301	java/lang/Exception:toString	()Ljava/lang/String;
    //   679: invokestatic 170	com/fastfun2/sdk/mmlog318/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   682: aload 10
    //   684: invokevirtual 302	java/lang/Exception:printStackTrace	()V
    //   687: aload_1
    //   688: ifnull +54 -> 742
    //   691: aload_1
    //   692: invokevirtual 276	java/net/HttpURLConnection:disconnect	()V
    //   695: goto -212 -> 483
    //   698: astore_0
    //   699: aload_1
    //   700: ifnull +7 -> 707
    //   703: aload_1
    //   704: invokevirtual 276	java/net/HttpURLConnection:disconnect	()V
    //   707: aload_0
    //   708: athrow
    //   709: astore 10
    //   711: iload 7
    //   713: istore 4
    //   715: iload 5
    //   717: istore_3
    //   718: goto -46 -> 672
    //   721: astore 10
    //   723: iconst_1
    //   724: istore 5
    //   726: iload_3
    //   727: istore 4
    //   729: iload 5
    //   731: istore_3
    //   732: goto -60 -> 672
    //   735: astore 11
    //   737: iconst_0
    //   738: istore_3
    //   739: goto -113 -> 626
    //   742: goto -259 -> 483
    //   745: astore 11
    //   747: iload 6
    //   749: istore 4
    //   751: aload 12
    //   753: astore 10
    //   755: goto -177 -> 578
    //   758: astore_1
    //   759: goto -226 -> 533
    //   762: astore_0
    //   763: goto -64 -> 699
    //   766: astore_0
    //   767: aconst_null
    //   768: astore_1
    //   769: goto -70 -> 699
    //   772: astore_0
    //   773: goto -74 -> 699
    //   776: iload 5
    //   778: istore_3
    //   779: iload 6
    //   781: istore 4
    //   783: goto -300 -> 483
    //   786: iload_3
    //   787: istore 4
    //   789: iconst_2
    //   790: istore_3
    //   791: goto -308 -> 483
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	794	0	paramContext	Context
    //   0	794	1	paramString	String
    //   0	794	2	paramJSONObject	JSONObject
    //   22	769	3	i1	int
    //   16	772	4	i2	int
    //   7	770	5	i3	int
    //   10	770	6	i4	int
    //   177	535	7	i5	int
    //   13	387	8	i6	int
    //   19	385	9	i7	int
    //   1	652	10	localObject1	Object
    //   665	18	10	localException1	Exception
    //   709	1	10	localException2	Exception
    //   721	1	10	localException3	Exception
    //   753	1	10	localObject2	Object
    //   84	308	11	localObject3	Object
    //   573	22	11	localClientProtocolException1	org.apache.http.client.ClientProtocolException
    //   618	25	11	localIOException1	java.io.IOException
    //   735	1	11	localIOException2	java.io.IOException
    //   745	1	11	localClientProtocolException2	org.apache.http.client.ClientProtocolException
    //   4	748	12	localObject4	Object
    //   95	29	13	str	String
    // Exception table:
    //   from	to	target	type
    //   179	186	573	org/apache/http/client/ClientProtocolException
    //   197	202	573	org/apache/http/client/ClientProtocolException
    //   213	218	573	org/apache/http/client/ClientProtocolException
    //   229	234	573	org/apache/http/client/ClientProtocolException
    //   245	251	573	org/apache/http/client/ClientProtocolException
    //   262	274	573	org/apache/http/client/ClientProtocolException
    //   285	307	573	org/apache/http/client/ClientProtocolException
    //   318	326	573	org/apache/http/client/ClientProtocolException
    //   337	345	573	org/apache/http/client/ClientProtocolException
    //   356	362	573	org/apache/http/client/ClientProtocolException
    //   373	380	573	org/apache/http/client/ClientProtocolException
    //   391	396	573	org/apache/http/client/ClientProtocolException
    //   407	412	573	org/apache/http/client/ClientProtocolException
    //   421	429	573	org/apache/http/client/ClientProtocolException
    //   446	455	573	org/apache/http/client/ClientProtocolException
    //   179	186	618	java/io/IOException
    //   197	202	618	java/io/IOException
    //   213	218	618	java/io/IOException
    //   229	234	618	java/io/IOException
    //   245	251	618	java/io/IOException
    //   262	274	618	java/io/IOException
    //   285	307	618	java/io/IOException
    //   318	326	618	java/io/IOException
    //   337	345	618	java/io/IOException
    //   356	362	618	java/io/IOException
    //   373	380	618	java/io/IOException
    //   391	396	618	java/io/IOException
    //   407	412	618	java/io/IOException
    //   421	429	618	java/io/IOException
    //   446	455	618	java/io/IOException
    //   80	168	665	java/lang/Exception
    //   672	687	698	finally
    //   179	186	709	java/lang/Exception
    //   197	202	709	java/lang/Exception
    //   213	218	709	java/lang/Exception
    //   229	234	709	java/lang/Exception
    //   245	251	709	java/lang/Exception
    //   262	274	709	java/lang/Exception
    //   285	307	709	java/lang/Exception
    //   318	326	709	java/lang/Exception
    //   337	345	709	java/lang/Exception
    //   356	362	709	java/lang/Exception
    //   373	380	709	java/lang/Exception
    //   391	396	709	java/lang/Exception
    //   407	412	709	java/lang/Exception
    //   421	429	709	java/lang/Exception
    //   446	455	721	java/lang/Exception
    //   80	168	735	java/io/IOException
    //   80	168	745	org/apache/http/client/ClientProtocolException
    //   483	533	758	java/lang/Exception
    //   179	186	762	finally
    //   197	202	762	finally
    //   213	218	762	finally
    //   229	234	762	finally
    //   245	251	762	finally
    //   262	274	762	finally
    //   285	307	762	finally
    //   318	326	762	finally
    //   337	345	762	finally
    //   356	362	762	finally
    //   373	380	762	finally
    //   391	396	762	finally
    //   407	412	762	finally
    //   421	429	762	finally
    //   446	455	762	finally
    //   80	168	766	finally
    //   581	591	772	finally
    //   594	599	772	finally
    //   629	639	772	finally
    //   642	647	772	finally
  }
  
  private static String a(Context paramContext, String paramString, SharedPreferences paramSharedPreferences)
  {
    long l2 = 0L;
    t = "";
    String str = g.a(paramContext, paramString);
    SharedPreferences.Editor localEditor = paramSharedPreferences.edit();
    localEditor.putString("appKey", paramString);
    localEditor.putString("sessionId", str);
    localEditor.putLong("lastResumeTime", System.currentTimeMillis());
    localEditor.putString("activities", b("onResume", null));
    long l1 = paramSharedPreferences.getLong("readFlowRev", 0L);
    paramContext = g.m(paramContext);
    localEditor.putLong("readFlowRev", paramContext[0]);
    long l3 = paramContext[0] - l1;
    l1 = l3;
    if (l3 < 0L) {
      l1 = 0L;
    }
    localEditor.putLong("consumeFlowRev", l1);
    l1 = paramSharedPreferences.getLong("readFlowSnd", 0L);
    localEditor.putLong("readFlowSnd", paramContext[1]);
    l1 = paramContext[1] - l1;
    if (l1 < 0L) {
      l1 = l2;
    }
    for (;;)
    {
      localEditor.putLong("consumeFlowSnd", l1);
      localEditor.commit();
      v = str;
      return str;
    }
  }
  
  public static void a(Context paramContext)
  {
    if (i == 0)
    {
      Log.i("MobileAgent", "Du have not permission to collect data");
      return;
    }
    Object localObject = "";
    try
    {
      String str = paramContext.getClass().getName();
      localObject = str;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        a("MobileAgentAPI", localException.getMessage());
        continue;
        C.execute(new i(paramContext, 9, null, null));
      }
    }
    a("MobileAgentAPI", "run into onresume " + (String)localObject);
    if (paramContext == null)
    {
      try
      {
        Log.e("MobileAgent", "Exception occurent in onResume ,context cann't be null");
        return;
      }
      catch (Exception paramContext)
      {
        Log.e("MobileAgent", "Exception occurred in MobileAgent.onResume(). ");
        a("MobileAgentRun", paramContext.toString());
      }
      a("MobileAgentAPI", "run out onresume " + (String)localObject);
      return;
    }
  }
  
  private static void a(Context paramContext, String paramString, long paramLong)
  {
    synchronized (w)
    {
      SharedPreferences localSharedPreferences = l(paramContext);
      int i1 = localSharedPreferences.getInt("uploadcount", 0);
      paramString = localSharedPreferences.getString("uploadList", "") + paramString + "|";
      long l1 = paramLong;
      if (paramLong > 10000L) {
        l1 = 1L;
      }
      localSharedPreferences.edit().putString("uploadList", paramString).commit();
      localSharedPreferences.edit().putLong("uploadpopindex", l1).commit();
      if (paramString.split("\\|").length > 30000)
      {
        paramString = t(paramContext);
        paramContext.deleteFile(paramString);
        j(paramContext, paramString);
        return;
      }
      localSharedPreferences.edit().putInt("uploadcount", i1 + 1).commit();
    }
  }
  
  protected static void a(Context paramContext, String paramString1, String paramString2)
  {
    synchronized (x)
    {
      paramString1 = g.a(paramString1);
      paramString2 = g.a(paramString2);
      SharedPreferences localSharedPreferences = j(paramContext);
      StringBuffer localStringBuffer = new StringBuffer();
      localStringBuffer.append(localSharedPreferences.getString("eventlogs", ""));
      try
      {
        localStringBuffer.append(URLEncoder.encode(paramString1, "UTF-8"));
        localStringBuffer.append("|");
        localStringBuffer.append(URLEncoder.encode(paramString2, "UTF-8"));
        localStringBuffer.append("|");
        localStringBuffer.append(1);
        localStringBuffer.append("|");
        localStringBuffer.append(System.currentTimeMillis());
        localStringBuffer.append("\n");
        localSharedPreferences.edit().putString("eventlogs", localStringBuffer.toString()).commit();
        p(paramContext);
        b(paramContext, false);
        return;
      }
      catch (UnsupportedEncodingException paramContext)
      {
        a("MobileAgentRun", "unsupport utf-8,can't onEvent()");
        return;
      }
    }
  }
  
  private static void a(Context paramContext, String paramString1, String paramString2, String paramString3)
  {
    if (!paramString3.equals(g(paramContext, "md5")))
    {
      d(paramContext).edit().putString("md5", paramString3).commit();
      if (!d(paramContext).getString("#apk_security_check ", "").equals("")) {
        break label90;
      }
    }
    label90:
    for (int i1 = 0;; i1 = 1)
    {
      if (i1 == 0) {
        new Thread(new f(paramString1, paramString2, paramContext, paramString3)).start();
      }
      return;
    }
  }
  
  private static void a(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8)
  {
    paramContext = paramContext.getSharedPreferences(h + "MoblieAgent_sys_config", 0);
    paramContext.edit().putString("MOBILE_APPKEY", paramString1).commit();
    paramContext.edit().putString("MOBILE_PROGRAM_ID", paramString3).commit();
    paramContext.edit().putString("MOBILE_VERSION", paramString4).commit();
    paramContext.edit().putString("MOBILE_PACKAGE_NAME", paramString7).commit();
    paramContext.edit().putString("MOBILE_CHANNEL", paramString2).commit();
    paramContext.edit().putString("MOBILE_VERSION_CODE", paramString6).commit();
    paramContext.edit().putString("MOBILE_VERSION_NAME", paramString5).commit();
    paramContext.edit().putString("MOBILE_WW_CHANNEL", paramString8).commit();
  }
  
  public static void a(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8, String paramString9)
  {
    if (A)
    {
      Log.i("MobileAgent", "already init");
      a(paramContext, paramString5, paramString6, paramString8);
      return;
    }
    for (;;)
    {
      try
      {
        if (!paramContext.getSharedPreferences("MoblieAgent_debug", 0).getString("debug", "").equals("")) {
          continue;
        }
        bool = false;
        b = bool;
      }
      catch (Exception localException)
      {
        boolean bool;
        String str;
        continue;
      }
      a("MobileAgentAPI", "run in init[" + paramString1 + "," + paramString2 + "]");
      if (paramContext != null) {
        continue;
      }
      Log.e("MobileAgent", "Exception occurent in joinDu ,context cann't be null");
      return;
      bool = true;
    }
    if ((!TextUtils.isEmpty(paramString1)) && (!g.a(paramString1, 50)))
    {
      if (TextUtils.isEmpty(paramString2)) {
        str = "0";
      }
      for (;;)
      {
        paramString2 = paramContext.getSharedPreferences(h + "MoblieAgent_sys_config", 0);
        paramString2.edit().putString("MOBILE_APPKEY", paramString1).commit();
        paramString2.edit().putString("MOBILE_PROGRAM_ID", paramString3).commit();
        paramString2.edit().putString("MOBILE_VERSION", paramString4).commit();
        paramString2.edit().putString("MOBILE_PACKAGE_NAME", paramString5).commit();
        paramString2.edit().putString("MOBILE_CHANNEL", str).commit();
        paramString2.edit().putString("MOBILE_VERSION_CODE", paramString6).commit();
        paramString2.edit().putString("MOBILE_VERSION_NAME", paramString7).commit();
        paramString2.edit().putString("MOBILE_WW_CHANNEL", paramString9).commit();
        a(paramContext);
        b(paramContext);
        a(paramContext, paramString5, paramString6, paramString8);
        A = true;
        Log.i("MobileAgent", "finish init SUCCESS " + b);
        return;
        str = paramString2;
        if (g.a(paramString2, 100))
        {
          str = paramString2.substring(0, 99);
          Log.e("MobileAgent", "Exception occurent in joinDu ,channelID cann't be null or empty");
        }
      }
    }
    Log.e("MobileAgent", "Exception occurent in joinDu ,appID cann't be null or empty");
  }
  
  protected static void a(Context paramContext, boolean paramBoolean)
  {
    boolean bool = true;
    long l2 = 0L;
    if (paramBoolean)
    {
      a("MobileAgentRun", "run into pageact onresumep");
      a("MobileAgentRun", "run into onresumep :" + paramContext.getClass().getName());
    }
    label789:
    for (;;)
    {
      try
      {
        a("page pro", "do resume start: " + paramContext.getClass().getName());
        a("MobileAgentRun", "run into sessionpolicy");
        localObject1 = g.h(paramContext);
        localSharedPreferences = i(paramContext);
        localObject2 = localSharedPreferences.getString("sessionId", null);
        long l1 = localSharedPreferences.getLong("endTime", -1L);
        if (System.currentTimeMillis() - l1 <= 30000L) {
          continue;
        }
        i1 = 1;
        if (i1 == 0) {
          continue;
        }
        if (localObject2 != null)
        {
          a(paramContext, localSharedPreferences, true);
          localObject2 = localSharedPreferences.edit();
          l1 = localSharedPreferences.getLong("readFlowRev", 0L);
          l3 = localSharedPreferences.getLong("readFlowSnd", 0L);
          ((SharedPreferences.Editor)localObject2).clear();
          ((SharedPreferences.Editor)localObject2).putLong("readFlowRev", Long.valueOf(l1).longValue()).commit();
          ((SharedPreferences.Editor)localObject2).putLong("readFlowSnd", Long.valueOf(l3).longValue()).commit();
        }
        t = "";
        localObject2 = g.a(paramContext, (String)localObject1);
        SharedPreferences.Editor localEditor = localSharedPreferences.edit();
        localEditor.putString("appKey", (String)localObject1);
        localEditor.putString("sessionId", (String)localObject2);
        localEditor.putLong("lastResumeTime", System.currentTimeMillis());
        localEditor.putString("activities", b("onResume", null));
        l1 = localSharedPreferences.getLong("readFlowRev", 0L);
        localObject1 = g.m(paramContext);
        localEditor.putLong("readFlowRev", localObject1[0]);
        long l3 = localObject1[0] - l1;
        l1 = l3;
        if (l3 < 0L) {
          l1 = 0L;
        }
        localEditor.putLong("consumeFlowRev", l1);
        l1 = localSharedPreferences.getLong("readFlowSnd", 0L);
        localEditor.putLong("readFlowSnd", localObject1[1]);
        l1 = localObject1[1] - l1;
        if (l1 >= 0L) {
          break label789;
        }
        l1 = l2;
        localEditor.putLong("consumeFlowSnd", l1);
        localEditor.commit();
        v = (String)localObject2;
        a(paramContext, localSharedPreferences, false);
        paramBoolean = bool;
        if (a(paramContext, 1))
        {
          o(paramContext);
          paramBoolean = bool;
        }
        a("MobileAgentRun", "run out sessionpolicy");
        b(paramContext, paramBoolean);
      }
      catch (Exception localException)
      {
        SharedPreferences localSharedPreferences;
        Object localObject2;
        int i1;
        localException.printStackTrace();
        continue;
      }
      a("MobileAgentRun", "run out onresume :" + paramContext.getClass().getName());
      a("MobileAgentRun", "run out pageact");
      return;
      i1 = 0;
      continue;
      Object localObject1 = localSharedPreferences.getString("activities", null);
      localObject2 = localSharedPreferences.edit();
      ((SharedPreferences.Editor)localObject2).putString("activities", b("onResume", (String)localObject1));
      ((SharedPreferences.Editor)localObject2).putLong("lastResumeTime", System.currentTimeMillis());
      ((SharedPreferences.Editor)localObject2).commit();
      if ((m == 1) || (((String)localObject1).getBytes().length > 10000)) {
        a(paramContext, localSharedPreferences, false);
      }
      paramBoolean = false;
      continue;
      a("MobileAgentRun", "run into pageact onpausep");
      a("MobileAgentRun", "run into onpausep :" + paramContext.getClass().getName());
      localObject1 = i(paramContext);
      String str = ((SharedPreferences)localObject1).getString("activities", null);
      localObject1 = ((SharedPreferences)localObject1).edit();
      ((SharedPreferences.Editor)localObject1).putLong("endTime", System.currentTimeMillis());
      ((SharedPreferences.Editor)localObject1).putString("activities", b("onPause", str));
      ((SharedPreferences.Editor)localObject1).commit();
      a("MobileAgentRun", "run out onpausep :" + paramContext.getClass().getName());
    }
  }
  
  private static void a(Boolean paramBoolean)
  {
    if (i != 0) {
      j = paramBoolean.booleanValue();
    }
  }
  
  public static void a(String paramString1, String paramString2)
  {
    if ((b) && (paramString2 != null)) {
      Log.e(paramString1, paramString2);
    }
  }
  
  public static boolean a()
  {
    return A;
  }
  
  private static boolean a(Context paramContext, int paramInt)
  {
    paramContext = d(paramContext);
    int i1;
    if (paramInt == 3)
    {
      paramInt = paramContext.getInt("actionmonth", 0);
      i1 = paramContext.getInt("actionday", 0);
    }
    for (;;)
    {
      paramContext = new Date();
      String str = new SimpleDateFormat("dd").format(paramContext);
      if ((Integer.valueOf(new SimpleDateFormat("M").format(paramContext)).intValue() != paramInt) || (Integer.valueOf(str).intValue() != i1)) {
        break;
      }
      return false;
      if (paramInt == 2)
      {
        paramInt = paramContext.getInt("eventmonth", 0);
        i1 = paramContext.getInt("eventday", 0);
      }
      else
      {
        paramInt = paramContext.getInt("sysmonth", 0);
        i1 = paramContext.getInt("sysday", 0);
      }
    }
    return true;
  }
  
  private static boolean a(Context paramContext, SharedPreferences paramSharedPreferences, boolean paramBoolean)
  {
    String str1 = paramSharedPreferences.getString("sessionId", "");
    String str2 = paramSharedPreferences.getString("activities", "");
    JSONObject localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("sid", str1);
      localJSONObject.put("logs", str2);
      if (paramBoolean)
      {
        localJSONObject.put("flowConsumpRev", paramSharedPreferences.getLong("consumeFlowRev", 0L));
        localJSONObject.put("flowConsumpSnd", paramSharedPreferences.getLong("consumeFlowSnd", 0L));
      }
      while (a(paramContext, localJSONObject.toString(), 3))
      {
        paramSharedPreferences.edit().putString("activities", "").commit();
        break;
        localJSONObject.put("flowConsumpRev", 0);
        localJSONObject.put("flowConsumpSnd", 0);
      }
      return true;
    }
    catch (JSONException paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  /* Error */
  protected static boolean a(Context paramContext, String paramString)
  {
    // Byte code:
    //   0: aload_0
    //   1: aload_1
    //   2: invokestatic 681	com/fastfun2/sdk/mmlog318/e:h	(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;
    //   5: astore_3
    //   6: aload_3
    //   7: ldc 111
    //   9: invokevirtual 475	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   12: ifne +365 -> 377
    //   15: aload_0
    //   16: invokestatic 684	com/fastfun2/sdk/mmlog318/e:n	(Landroid/content/Context;)Lorg/json/JSONObject;
    //   19: astore 4
    //   21: new 166	org/json/JSONObject
    //   24: dup
    //   25: aload_3
    //   26: invokespecial 685	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   29: astore 5
    //   31: aload 4
    //   33: ldc_w 658
    //   36: aload 5
    //   38: ldc_w 658
    //   41: invokevirtual 689	org/json/JSONObject:get	(Ljava/lang/String;)Ljava/lang/Object;
    //   44: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   47: pop
    //   48: aload 4
    //   50: ldc_w 691
    //   53: aload_0
    //   54: invokestatic 693	com/fastfun2/sdk/mmlog318/g:g	(Landroid/content/Context;)Ljava/lang/String;
    //   57: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   60: pop
    //   61: aload 4
    //   63: ldc_w 695
    //   66: invokestatic 697	com/fastfun2/sdk/mmlog318/g:a	()Ljava/lang/String;
    //   69: ldc -77
    //   71: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   74: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   77: pop
    //   78: aload 4
    //   80: ldc_w 699
    //   83: invokestatic 701	com/fastfun2/sdk/mmlog318/g:b	()Ljava/lang/String;
    //   86: ldc -77
    //   88: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   91: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   94: pop
    //   95: aload 4
    //   97: ldc_w 703
    //   100: invokestatic 705	com/fastfun2/sdk/mmlog318/g:c	()Ljava/lang/String;
    //   103: ldc -77
    //   105: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   108: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   111: pop
    //   112: aload 4
    //   114: ldc_w 707
    //   117: aload_0
    //   118: invokestatic 709	com/fastfun2/sdk/mmlog318/g:l	(Landroid/content/Context;)Ljava/lang/String;
    //   121: ldc -77
    //   123: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   126: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   129: pop
    //   130: aload 4
    //   132: ldc_w 711
    //   135: aload_0
    //   136: invokestatic 713	com/fastfun2/sdk/mmlog318/g:n	(Landroid/content/Context;)Ljava/lang/String;
    //   139: ldc -77
    //   141: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   144: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   147: pop
    //   148: aload 4
    //   150: ldc_w 715
    //   153: aload_0
    //   154: invokestatic 717	com/fastfun2/sdk/mmlog318/g:a	(Landroid/content/Context;)Ljava/lang/String;
    //   157: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   160: pop
    //   161: aload 4
    //   163: ldc_w 719
    //   166: invokestatic 721	com/fastfun2/sdk/mmlog318/g:f	()Ljava/lang/String;
    //   169: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   172: pop
    //   173: aload 4
    //   175: ldc_w 723
    //   178: invokestatic 725	com/fastfun2/sdk/mmlog318/g:g	()Ljava/lang/String;
    //   181: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   184: pop
    //   185: aload 4
    //   187: ldc_w 727
    //   190: invokestatic 729	com/fastfun2/sdk/mmlog318/g:h	()Ljava/lang/String;
    //   193: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   196: pop
    //   197: aload 4
    //   199: ldc_w 286
    //   202: new 731	org/json/JSONArray
    //   205: dup
    //   206: new 77	java/lang/StringBuilder
    //   209: dup
    //   210: ldc_w 733
    //   213: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   216: aload_3
    //   217: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   220: ldc_w 528
    //   223: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   226: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   229: invokespecial 734	org/json/JSONArray:<init>	(Ljava/lang/String;)V
    //   232: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   235: pop
    //   236: aload_0
    //   237: ldc_w 736
    //   240: aload 4
    //   242: invokestatic 738	com/fastfun2/sdk/mmlog318/e:a	(Landroid/content/Context;Ljava/lang/String;Lorg/json/JSONObject;)I
    //   245: istore_2
    //   246: goto +143 -> 389
    //   249: astore 5
    //   251: aload 4
    //   253: ldc_w 658
    //   256: ldc 111
    //   258: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   261: pop
    //   262: goto -214 -> 48
    //   265: astore_3
    //   266: aload_3
    //   267: invokevirtual 678	org/json/JSONException:printStackTrace	()V
    //   270: iconst_3
    //   271: istore_2
    //   272: goto +117 -> 389
    //   275: astore 5
    //   277: aload 4
    //   279: ldc_w 695
    //   282: ldc 111
    //   284: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   287: pop
    //   288: goto -210 -> 78
    //   291: astore 5
    //   293: aload 4
    //   295: ldc_w 699
    //   298: ldc 111
    //   300: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   303: pop
    //   304: goto -209 -> 95
    //   307: astore 5
    //   309: aload 4
    //   311: ldc_w 703
    //   314: ldc 111
    //   316: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   319: pop
    //   320: goto -208 -> 112
    //   323: astore 5
    //   325: aload 4
    //   327: ldc_w 707
    //   330: ldc 111
    //   332: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   335: pop
    //   336: goto -206 -> 130
    //   339: astore 5
    //   341: aload 4
    //   343: ldc_w 711
    //   346: ldc 111
    //   348: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   351: pop
    //   352: goto -204 -> 148
    //   355: aload_0
    //   356: iconst_3
    //   357: invokestatic 741	com/fastfun2/sdk/mmlog318/e:b	(Landroid/content/Context;I)V
    //   360: aload_0
    //   361: aload_1
    //   362: invokestatic 743	com/fastfun2/sdk/mmlog318/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   365: ldc_w 271
    //   368: ldc_w 745
    //   371: invokestatic 367	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   374: pop
    //   375: iconst_1
    //   376: ireturn
    //   377: aload_0
    //   378: iconst_3
    //   379: invokestatic 741	com/fastfun2/sdk/mmlog318/e:b	(Landroid/content/Context;I)V
    //   382: aload_0
    //   383: aload_1
    //   384: invokestatic 743	com/fastfun2/sdk/mmlog318/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   387: iconst_1
    //   388: ireturn
    //   389: iload_2
    //   390: iconst_1
    //   391: if_icmpeq -36 -> 355
    //   394: iload_2
    //   395: iconst_3
    //   396: if_icmpeq -41 -> 355
    //   399: iconst_0
    //   400: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	401	0	paramContext	Context
    //   0	401	1	paramString	String
    //   245	152	2	i1	int
    //   5	212	3	str	String
    //   265	2	3	localJSONException1	JSONException
    //   19	323	4	localJSONObject1	JSONObject
    //   29	8	5	localJSONObject2	JSONObject
    //   249	1	5	localJSONException2	JSONException
    //   275	1	5	localUnsupportedEncodingException1	UnsupportedEncodingException
    //   291	1	5	localUnsupportedEncodingException2	UnsupportedEncodingException
    //   307	1	5	localUnsupportedEncodingException3	UnsupportedEncodingException
    //   323	1	5	localUnsupportedEncodingException4	UnsupportedEncodingException
    //   339	1	5	localUnsupportedEncodingException5	UnsupportedEncodingException
    // Exception table:
    //   from	to	target	type
    //   31	48	249	org/json/JSONException
    //   21	31	265	org/json/JSONException
    //   48	61	265	org/json/JSONException
    //   61	78	265	org/json/JSONException
    //   78	95	265	org/json/JSONException
    //   95	112	265	org/json/JSONException
    //   112	130	265	org/json/JSONException
    //   130	148	265	org/json/JSONException
    //   148	246	265	org/json/JSONException
    //   251	262	265	org/json/JSONException
    //   277	288	265	org/json/JSONException
    //   293	304	265	org/json/JSONException
    //   309	320	265	org/json/JSONException
    //   325	336	265	org/json/JSONException
    //   341	352	265	org/json/JSONException
    //   61	78	275	java/io/UnsupportedEncodingException
    //   78	95	291	java/io/UnsupportedEncodingException
    //   95	112	307	java/io/UnsupportedEncodingException
    //   112	130	323	java/io/UnsupportedEncodingException
    //   130	148	339	java/io/UnsupportedEncodingException
  }
  
  /* Error */
  private static boolean a(Context paramContext, String paramString, int paramInt)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: iload_2
    //   4: iconst_3
    //   5: if_icmpne +264 -> 269
    //   8: getstatic 93	com/fastfun2/sdk/mmlog318/e:o	Ljava/lang/String;
    //   11: astore 8
    //   13: aload_1
    //   14: invokevirtual 750	java/lang/String:trim	()Ljava/lang/String;
    //   17: ldc 111
    //   19: invokevirtual 475	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   22: ifne +442 -> 464
    //   25: aload_0
    //   26: invokestatic 753	com/fastfun2/sdk/mmlog318/e:s	(Landroid/content/Context;)J
    //   29: lstore_3
    //   30: new 77	java/lang/StringBuilder
    //   33: dup
    //   34: aload 8
    //   36: invokestatic 191	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   39: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   42: astore 8
    //   44: lconst_1
    //   45: lload_3
    //   46: ladd
    //   47: lstore 5
    //   49: aload 8
    //   51: lload_3
    //   52: invokevirtual 756	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   55: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   58: astore 11
    //   60: aload_0
    //   61: aload 11
    //   63: iconst_1
    //   64: invokevirtual 760	android/content/Context:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   67: astore 8
    //   69: aload 8
    //   71: astore 9
    //   73: getstatic 121	com/fastfun2/sdk/mmlog318/e:w	Ljava/lang/Object;
    //   76: astore 10
    //   78: aload 8
    //   80: astore 9
    //   82: aload 10
    //   84: monitorenter
    //   85: aload_0
    //   86: invokestatic 397	com/fastfun2/sdk/mmlog318/e:l	(Landroid/content/Context;)Landroid/content/SharedPreferences;
    //   89: astore 9
    //   91: aload 9
    //   93: ldc_w 399
    //   96: iconst_0
    //   97: invokeinterface 403 3 0
    //   102: istore_2
    //   103: new 77	java/lang/StringBuilder
    //   106: dup
    //   107: aload 9
    //   109: ldc_w 405
    //   112: ldc 111
    //   114: invokeinterface 407 3 0
    //   119: invokestatic 191	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   122: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   125: aload 11
    //   127: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   130: ldc_w 409
    //   133: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   136: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   139: astore 11
    //   141: lload 5
    //   143: lstore_3
    //   144: lload 5
    //   146: ldc2_w 410
    //   149: lcmp
    //   150: ifle +5 -> 155
    //   153: lconst_1
    //   154: lstore_3
    //   155: aload 9
    //   157: invokeinterface 312 1 0
    //   162: ldc_w 405
    //   165: aload 11
    //   167: invokeinterface 320 3 0
    //   172: invokeinterface 359 1 0
    //   177: pop
    //   178: aload 9
    //   180: invokeinterface 312 1 0
    //   185: ldc_w 413
    //   188: lload_3
    //   189: invokeinterface 334 4 0
    //   194: invokeinterface 359 1 0
    //   199: pop
    //   200: aload 11
    //   202: ldc_w 415
    //   205: invokevirtual 419	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   208: arraylength
    //   209: sipush 30000
    //   212: if_icmple +104 -> 316
    //   215: aload_0
    //   216: invokestatic 421	com/fastfun2/sdk/mmlog318/e:t	(Landroid/content/Context;)Ljava/lang/String;
    //   219: astore 9
    //   221: aload_0
    //   222: aload 9
    //   224: invokevirtual 427	android/content/Context:deleteFile	(Ljava/lang/String;)Z
    //   227: pop
    //   228: aload_0
    //   229: aload 9
    //   231: invokestatic 430	com/fastfun2/sdk/mmlog318/e:j	(Landroid/content/Context;Ljava/lang/String;)V
    //   234: aload 10
    //   236: monitorexit
    //   237: aload 8
    //   239: astore 9
    //   241: aload 8
    //   243: aload_1
    //   244: invokevirtual 605	java/lang/String:getBytes	()[B
    //   247: invokevirtual 763	java/io/FileOutputStream:write	([B)V
    //   250: aload 8
    //   252: ifnull +8 -> 260
    //   255: aload 8
    //   257: invokevirtual 764	java/io/FileOutputStream:close	()V
    //   260: iconst_1
    //   261: istore 7
    //   263: ldc 2
    //   265: monitorexit
    //   266: iload 7
    //   268: ireturn
    //   269: iload_2
    //   270: iconst_2
    //   271: if_icmpne +11 -> 282
    //   274: getstatic 97	com/fastfun2/sdk/mmlog318/e:p	Ljava/lang/String;
    //   277: astore 8
    //   279: goto -266 -> 13
    //   282: iload_2
    //   283: iconst_4
    //   284: if_icmpne +11 -> 295
    //   287: getstatic 105	com/fastfun2/sdk/mmlog318/e:r	Ljava/lang/String;
    //   290: astore 8
    //   292: goto -279 -> 13
    //   295: iload_2
    //   296: iconst_1
    //   297: if_icmpne +179 -> 476
    //   300: getstatic 109	com/fastfun2/sdk/mmlog318/e:s	Ljava/lang/String;
    //   303: astore 8
    //   305: goto -292 -> 13
    //   308: getstatic 101	com/fastfun2/sdk/mmlog318/e:q	Ljava/lang/String;
    //   311: astore 8
    //   313: goto -300 -> 13
    //   316: aload 9
    //   318: invokeinterface 312 1 0
    //   323: ldc_w 399
    //   326: iload_2
    //   327: iconst_1
    //   328: iadd
    //   329: invokeinterface 434 3 0
    //   334: invokeinterface 359 1 0
    //   339: pop
    //   340: goto -106 -> 234
    //   343: astore_0
    //   344: aload 10
    //   346: monitorexit
    //   347: aload 8
    //   349: astore 9
    //   351: aload_0
    //   352: athrow
    //   353: astore_0
    //   354: aload 8
    //   356: astore_1
    //   357: ldc -107
    //   359: ldc_w 766
    //   362: invokestatic 768	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
    //   365: pop
    //   366: aload_1
    //   367: ifnull +7 -> 374
    //   370: aload_1
    //   371: invokevirtual 764	java/io/FileOutputStream:close	()V
    //   374: iconst_0
    //   375: istore 7
    //   377: goto -114 -> 263
    //   380: astore_0
    //   381: aload_0
    //   382: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   385: goto -125 -> 260
    //   388: astore_0
    //   389: ldc 2
    //   391: monitorexit
    //   392: aload_0
    //   393: athrow
    //   394: astore_0
    //   395: aload_0
    //   396: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   399: goto -25 -> 374
    //   402: astore_0
    //   403: aconst_null
    //   404: astore 8
    //   406: aload 8
    //   408: astore 9
    //   410: ldc -107
    //   412: ldc_w 770
    //   415: invokestatic 768	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
    //   418: pop
    //   419: aload 8
    //   421: ifnull +8 -> 429
    //   424: aload 8
    //   426: invokevirtual 764	java/io/FileOutputStream:close	()V
    //   429: iconst_1
    //   430: istore 7
    //   432: goto -169 -> 263
    //   435: astore_0
    //   436: aload_0
    //   437: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   440: goto -11 -> 429
    //   443: astore_0
    //   444: aconst_null
    //   445: astore_1
    //   446: aload_1
    //   447: ifnull +7 -> 454
    //   450: aload_1
    //   451: invokevirtual 764	java/io/FileOutputStream:close	()V
    //   454: aload_0
    //   455: athrow
    //   456: astore_1
    //   457: aload_1
    //   458: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   461: goto -7 -> 454
    //   464: iconst_0
    //   465: istore 7
    //   467: goto -204 -> 263
    //   470: astore_0
    //   471: aconst_null
    //   472: astore_1
    //   473: goto -116 -> 357
    //   476: iload_2
    //   477: iconst_5
    //   478: if_icmpeq -170 -> 308
    //   481: iconst_0
    //   482: istore 7
    //   484: goto -221 -> 263
    //   487: astore_0
    //   488: aload 9
    //   490: astore_1
    //   491: goto -45 -> 446
    //   494: astore_0
    //   495: goto -49 -> 446
    //   498: astore_0
    //   499: goto -93 -> 406
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	502	0	paramContext	Context
    //   0	502	1	paramString	String
    //   0	502	2	paramInt	int
    //   29	160	3	l1	long
    //   47	98	5	l2	long
    //   261	222	7	bool	boolean
    //   11	414	8	localObject1	Object
    //   71	418	9	localObject2	Object
    //   76	269	10	localObject3	Object
    //   58	143	11	str	String
    // Exception table:
    //   from	to	target	type
    //   85	141	343	finally
    //   155	234	343	finally
    //   316	340	343	finally
    //   73	78	353	java/io/FileNotFoundException
    //   82	85	353	java/io/FileNotFoundException
    //   241	250	353	java/io/FileNotFoundException
    //   351	353	353	java/io/FileNotFoundException
    //   255	260	380	java/io/IOException
    //   8	13	388	finally
    //   13	44	388	finally
    //   49	60	388	finally
    //   255	260	388	finally
    //   274	279	388	finally
    //   287	292	388	finally
    //   300	305	388	finally
    //   308	313	388	finally
    //   370	374	388	finally
    //   381	385	388	finally
    //   395	399	388	finally
    //   424	429	388	finally
    //   436	440	388	finally
    //   450	454	388	finally
    //   454	456	388	finally
    //   457	461	388	finally
    //   370	374	394	java/io/IOException
    //   60	69	402	java/io/IOException
    //   424	429	435	java/io/IOException
    //   60	69	443	finally
    //   450	454	456	java/io/IOException
    //   60	69	470	java/io/FileNotFoundException
    //   73	78	487	finally
    //   82	85	487	finally
    //   241	250	487	finally
    //   351	353	487	finally
    //   410	419	487	finally
    //   357	366	494	finally
    //   73	78	498	java/io/IOException
    //   82	85	498	java/io/IOException
    //   241	250	498	java/io/IOException
    //   351	353	498	java/io/IOException
  }
  
  /* Error */
  protected static boolean a(Context paramContext, String paramString1, String paramString2, long paramLong)
  {
    // Byte code:
    //   0: aload_2
    //   1: ifnonnull +457 -> 458
    //   4: aload_0
    //   5: aload_1
    //   6: invokestatic 681	com/fastfun2/sdk/mmlog318/e:h	(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;
    //   9: astore 6
    //   11: aload 6
    //   13: ldc 111
    //   15: invokevirtual 475	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   18: ifne +422 -> 440
    //   21: new 166	org/json/JSONObject
    //   24: dup
    //   25: aload 6
    //   27: invokespecial 685	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   30: astore 6
    //   32: aload_0
    //   33: invokestatic 773	com/fastfun2/sdk/mmlog318/g:b	(Landroid/content/Context;)Ljava/lang/String;
    //   36: astore 7
    //   38: aload 6
    //   40: ldc_w 775
    //   43: iconst_1
    //   44: invokevirtual 677	org/json/JSONObject:put	(Ljava/lang/String;I)Lorg/json/JSONObject;
    //   47: pop
    //   48: aload 6
    //   50: ldc_w 777
    //   53: ldc_w 779
    //   56: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   59: pop
    //   60: aload 6
    //   62: ldc_w 781
    //   65: ldc 17
    //   67: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   70: pop
    //   71: aload 6
    //   73: ldc_w 783
    //   76: aload 7
    //   78: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   81: pop
    //   82: aload 6
    //   84: ldc_w 314
    //   87: aload_0
    //   88: invokestatic 175	com/fastfun2/sdk/mmlog318/g:h	(Landroid/content/Context;)Ljava/lang/String;
    //   91: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   94: pop
    //   95: aload 6
    //   97: ldc_w 785
    //   100: getstatic 789	com/fastfun2/sdk/mmlog318/TrustInfo:packageName	Ljava/lang/String;
    //   103: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   106: pop
    //   107: aload 6
    //   109: ldc_w 791
    //   112: getstatic 793	com/fastfun2/sdk/mmlog318/TrustInfo:versionCode	Ljava/lang/String;
    //   115: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   118: pop
    //   119: aload 6
    //   121: ldc_w 795
    //   124: getstatic 797	com/fastfun2/sdk/mmlog318/TrustInfo:versionName	Ljava/lang/String;
    //   127: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   130: pop
    //   131: lload_3
    //   132: lconst_0
    //   133: lcmp
    //   134: ifne +166 -> 300
    //   137: invokestatic 330	java/lang/System:currentTimeMillis	()J
    //   140: lstore_3
    //   141: aload 6
    //   143: ldc_w 799
    //   146: lload_3
    //   147: invokevirtual 669	org/json/JSONObject:put	(Ljava/lang/String;J)Lorg/json/JSONObject;
    //   150: pop
    //   151: aload 6
    //   153: ldc_w 691
    //   156: aload_0
    //   157: invokestatic 693	com/fastfun2/sdk/mmlog318/g:g	(Landroid/content/Context;)Ljava/lang/String;
    //   160: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   163: pop
    //   164: aload 6
    //   166: ldc_w 695
    //   169: invokestatic 697	com/fastfun2/sdk/mmlog318/g:a	()Ljava/lang/String;
    //   172: ldc -77
    //   174: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   177: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   180: pop
    //   181: aload 6
    //   183: ldc_w 699
    //   186: invokestatic 701	com/fastfun2/sdk/mmlog318/g:b	()Ljava/lang/String;
    //   189: ldc -77
    //   191: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   194: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   197: pop
    //   198: aload 6
    //   200: ldc_w 703
    //   203: invokestatic 705	com/fastfun2/sdk/mmlog318/g:c	()Ljava/lang/String;
    //   206: ldc -77
    //   208: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   211: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   214: pop
    //   215: aload 6
    //   217: ldc_w 707
    //   220: aload_0
    //   221: invokestatic 709	com/fastfun2/sdk/mmlog318/g:l	(Landroid/content/Context;)Ljava/lang/String;
    //   224: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   227: pop
    //   228: aload 6
    //   230: ldc_w 715
    //   233: aload_0
    //   234: invokestatic 717	com/fastfun2/sdk/mmlog318/g:a	(Landroid/content/Context;)Ljava/lang/String;
    //   237: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   240: pop
    //   241: aload 6
    //   243: ldc_w 801
    //   246: aload_0
    //   247: invokestatic 177	com/fastfun2/sdk/mmlog318/g:i	(Landroid/content/Context;)Ljava/lang/String;
    //   250: ldc -77
    //   252: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   255: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   258: pop
    //   259: aload_0
    //   260: ldc_w 803
    //   263: aload 6
    //   265: invokestatic 738	com/fastfun2/sdk/mmlog318/e:a	(Landroid/content/Context;Ljava/lang/String;Lorg/json/JSONObject;)I
    //   268: istore 5
    //   270: iload 5
    //   272: iconst_1
    //   273: if_icmpeq +127 -> 400
    //   276: iload 5
    //   278: iconst_3
    //   279: if_icmpeq +121 -> 400
    //   282: iload 5
    //   284: iconst_2
    //   285: if_icmpne +179 -> 464
    //   288: ldc_w 271
    //   291: ldc_w 805
    //   294: invokestatic 768	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
    //   297: pop
    //   298: iconst_0
    //   299: ireturn
    //   300: new 807	java/util/Random
    //   303: dup
    //   304: invokestatic 330	java/lang/System:currentTimeMillis	()J
    //   307: invokespecial 810	java/util/Random:<init>	(J)V
    //   310: bipush 10
    //   312: invokevirtual 814	java/util/Random:nextInt	(I)I
    //   315: iconst_2
    //   316: iadd
    //   317: i2l
    //   318: lload_3
    //   319: ladd
    //   320: lstore_3
    //   321: goto -180 -> 141
    //   324: astore 7
    //   326: aload 6
    //   328: ldc_w 695
    //   331: ldc 111
    //   333: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   336: pop
    //   337: goto -156 -> 181
    //   340: astore_2
    //   341: aload_0
    //   342: aload_1
    //   343: invokestatic 743	com/fastfun2/sdk/mmlog318/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   346: aload_2
    //   347: invokevirtual 678	org/json/JSONException:printStackTrace	()V
    //   350: iconst_1
    //   351: ireturn
    //   352: astore 7
    //   354: aload 6
    //   356: ldc_w 699
    //   359: ldc 111
    //   361: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   364: pop
    //   365: goto -167 -> 198
    //   368: astore 7
    //   370: aload 6
    //   372: ldc_w 703
    //   375: ldc 111
    //   377: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   380: pop
    //   381: goto -166 -> 215
    //   384: astore 7
    //   386: aload 6
    //   388: ldc_w 801
    //   391: ldc 111
    //   393: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   396: pop
    //   397: goto -138 -> 259
    //   400: aload_2
    //   401: ifnonnull +26 -> 427
    //   404: aload_0
    //   405: iconst_3
    //   406: invokestatic 741	com/fastfun2/sdk/mmlog318/e:b	(Landroid/content/Context;I)V
    //   409: aload_0
    //   410: aload_1
    //   411: invokestatic 743	com/fastfun2/sdk/mmlog318/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   414: ldc_w 271
    //   417: ldc_w 816
    //   420: invokestatic 367	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   423: pop
    //   424: goto +42 -> 466
    //   427: ldc_w 271
    //   430: ldc_w 818
    //   433: invokestatic 367	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   436: pop
    //   437: goto +29 -> 466
    //   440: aload_2
    //   441: ifnonnull +15 -> 456
    //   444: aload_0
    //   445: iconst_3
    //   446: invokestatic 741	com/fastfun2/sdk/mmlog318/e:b	(Landroid/content/Context;I)V
    //   449: aload_0
    //   450: aload_1
    //   451: invokestatic 743	com/fastfun2/sdk/mmlog318/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   454: iconst_1
    //   455: ireturn
    //   456: iconst_0
    //   457: ireturn
    //   458: aload_2
    //   459: astore 6
    //   461: goto -450 -> 11
    //   464: iconst_0
    //   465: ireturn
    //   466: iconst_1
    //   467: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	468	0	paramContext	Context
    //   0	468	1	paramString1	String
    //   0	468	2	paramString2	String
    //   0	468	3	paramLong	long
    //   268	18	5	i1	int
    //   9	451	6	localObject	Object
    //   36	41	7	str	String
    //   324	1	7	localUnsupportedEncodingException1	UnsupportedEncodingException
    //   352	1	7	localUnsupportedEncodingException2	UnsupportedEncodingException
    //   368	1	7	localUnsupportedEncodingException3	UnsupportedEncodingException
    //   384	1	7	localUnsupportedEncodingException4	UnsupportedEncodingException
    // Exception table:
    //   from	to	target	type
    //   164	181	324	java/io/UnsupportedEncodingException
    //   21	131	340	org/json/JSONException
    //   137	141	340	org/json/JSONException
    //   141	164	340	org/json/JSONException
    //   164	181	340	org/json/JSONException
    //   181	198	340	org/json/JSONException
    //   198	215	340	org/json/JSONException
    //   215	241	340	org/json/JSONException
    //   241	259	340	org/json/JSONException
    //   259	270	340	org/json/JSONException
    //   288	298	340	org/json/JSONException
    //   300	321	340	org/json/JSONException
    //   326	337	340	org/json/JSONException
    //   354	365	340	org/json/JSONException
    //   370	381	340	org/json/JSONException
    //   386	397	340	org/json/JSONException
    //   404	424	340	org/json/JSONException
    //   427	437	340	org/json/JSONException
    //   181	198	352	java/io/UnsupportedEncodingException
    //   198	215	368	java/io/UnsupportedEncodingException
    //   241	259	384	java/io/UnsupportedEncodingException
  }
  
  private static boolean a(SharedPreferences paramSharedPreferences)
  {
    long l1 = paramSharedPreferences.getLong("endTime", -1L);
    return System.currentTimeMillis() - l1 > 30000L;
  }
  
  private static int b(Context paramContext, String paramString, JSONObject paramJSONObject)
  {
    return a(paramContext, paramString, paramJSONObject);
  }
  
  private static String b(String paramString1, String paramString2)
  {
    long l2 = 0L;
    long l4 = System.currentTimeMillis();
    long l1;
    if (paramString1.equals("onResume"))
    {
      u = l4;
      l1 = l2;
    }
    for (;;)
    {
      String str = paramString2;
      if (paramString2 == null) {
        str = "";
      }
      paramString2 = new StringBuffer();
      paramString2.append(str);
      paramString2.append(paramString1);
      paramString2.append("|");
      paramString2.append("mm.purchasesdk.iapservice.PurchaseService");
      paramString2.append("|");
      paramString2.append(l4);
      paramString2.append("|");
      paramString2.append(l1);
      paramString2.append("|");
      paramString2.append(t);
      paramString2.append("\n");
      t = "mm.purchasesdk.iapservice.PurchaseService";
      return paramString2.toString();
      l1 = l2;
      if (paramString1.equals("onPause"))
      {
        long l3 = l4 - u;
        if (l3 > 12000000L)
        {
          l1 = 300000L;
        }
        else
        {
          l1 = l2;
          if (l3 >= 0L) {
            l1 = l3;
          }
        }
      }
    }
  }
  
  public static void b()
  {
    A = false;
  }
  
  public static void b(Context paramContext)
  {
    if (i == 0)
    {
      Log.i("MobileAgent", "Du have not permission to collect data");
      return;
    }
    Object localObject = "";
    try
    {
      String str = paramContext.getClass().getName();
      localObject = str;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        a("MobileAgentAPI", localException.getMessage());
      }
      C.execute(new i(paramContext, 10));
      a("MobileAgentAPI", "run out onpause " + (String)localObject);
    }
    a("MobileAgentAPI", "run into onpause " + (String)localObject);
    if (paramContext == null)
    {
      Log.e("MobileAgent", "Exception occurent in onPause ,context cann't be null");
      return;
    }
  }
  
  private static void b(Context paramContext, int paramInt)
  {
    Date localDate = new Date();
    int i1 = Integer.parseInt(new SimpleDateFormat("dd").format(localDate));
    int i2 = Integer.parseInt(new SimpleDateFormat("M").format(localDate));
    paramContext = d(paramContext).edit();
    if (paramInt == 3)
    {
      paramContext.putInt("actionmonth", i2);
      paramContext.putInt("actionday", i1);
    }
    for (;;)
    {
      paramContext.commit();
      return;
      if (paramInt == 2)
      {
        paramContext.putInt("eventmonth", i2);
        paramContext.putInt("eventday", i1);
      }
      else
      {
        paramContext.putInt("sysmonth", i2);
        paramContext.putInt("sysday", i1);
      }
    }
  }
  
  protected static void b(Context paramContext, String paramString1, String paramString2)
  {
    synchronized (y)
    {
      paramString1 = g.a(paramString1);
      paramString2 = g.a(paramString2);
      SharedPreferences localSharedPreferences = k(paramContext);
      StringBuffer localStringBuffer = new StringBuffer();
      localStringBuffer.append(localSharedPreferences.getString("eventlogs", ""));
      try
      {
        localStringBuffer.append(URLEncoder.encode(paramString1, "UTF-8"));
        localStringBuffer.append("|");
        localStringBuffer.append(URLEncoder.encode(paramString2, "UTF-8"));
        localStringBuffer.append("|");
        localStringBuffer.append(1);
        localStringBuffer.append("|");
        localStringBuffer.append(System.currentTimeMillis());
        localStringBuffer.append("\n");
        localSharedPreferences.edit().putString("eventlogs", localStringBuffer.toString()).commit();
        if ((m == 1) || (localStringBuffer.toString().getBytes().length > 10000)) {
          q(paramContext);
        }
        b(paramContext, false);
        return;
      }
      catch (UnsupportedEncodingException paramContext)
      {
        a("MobileAgent", "unsupport utf-8,can't onEvent()");
        return;
      }
    }
  }
  
  private static void b(Context paramContext, boolean paramBoolean)
  {
    int i1;
    if (i == 1)
    {
      a("MobileAgentRun", "run into strategy");
      Object localObject;
      if (l)
      {
        if (!g(paramContext, "updateonlyonwifi").equals("1")) {
          break label181;
        }
        k = true;
        localObject = g(paramContext, "updatedelay");
        if (!((String)localObject).equals("0")) {
          n = Integer.parseInt((String)localObject) * 1000;
        }
        i1 = Integer.parseInt(g(paramContext, "send_policy"));
        m = i1;
        if (i1 == 0) {
          m = 1;
        }
      }
      if (k)
      {
        if (k)
        {
          localObject = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
          if ((localObject == null) || (((NetworkInfo)localObject).getType() != 1)) {
            break label188;
          }
          i1 = 1;
          label133:
          if (i1 == 0) {}
        }
      }
      else {
        switch (m)
        {
        }
      }
    }
    for (;;)
    {
      l = false;
      a("MobileAgentRun", "run out strategy");
      return;
      label181:
      k = false;
      break;
      label188:
      i1 = 0;
      break label133;
      new i(paramContext, 6).start();
      continue;
      if (paramBoolean)
      {
        new i(paramContext, 6).start();
        l = false;
        continue;
        if (a(paramContext, 3)) {
          new i(paramContext, 6).start();
        }
      }
    }
  }
  
  protected static boolean b(Context paramContext, String paramString)
  {
    String str = h(paramContext, paramString);
    try
    {
      if (a(paramContext, "http://da.mmarket.com/mmsdk/mmsdk?func=mmsdk:postsyslog", new JSONObject(str)) == 1)
      {
        i(paramContext, paramString);
        return true;
      }
    }
    catch (JSONException localJSONException)
    {
      i(paramContext, paramString);
      Log.i("MobileAgent", "SDK del a dirty data");
    }
    return false;
  }
  
  static String c()
  {
    return v;
  }
  
  public static void c(Context paramContext)
  {
    d(paramContext).edit().clear().commit();
    i(paramContext).edit().clear().commit();
    l(paramContext).edit().clear().commit();
    paramContext.getSharedPreferences("lxdMoblieAgent_sys_config", 0).edit().clear().commit();
  }
  
  public static void c(Context paramContext, String paramString1, String paramString2)
  {
    if (i == 0)
    {
      Log.i("MobileAgent", "Du have not permission to collect data");
      return;
    }
    a("MobileAgentAPI", "run in onEventRT [" + paramString1 + "," + paramString2 + "]");
    if (paramContext == null)
    {
      Log.e("MobileAgent", "Exception occurent in onEventRt() ,context cann't be null");
      return;
    }
    if ((TextUtils.isEmpty(paramString1)) || (g.a(paramString1, 100))) {
      Log.e("MobileAgent", "Exception occurent in onEventRt() ,channelID cann't be empty or length more than 100");
    }
    if (g.a(paramString2, 2000)) {
      Log.e("MobileAgent", "Exception occurent in onEventRt() , length more than 2000");
    }
    new Thread(new d(paramContext, paramString2, paramString1, c.a())).start();
  }
  
  protected static boolean c(Context paramContext, String paramString)
  {
    boolean bool = false;
    String str = h(paramContext, paramString);
    try
    {
      JSONObject localJSONObject = new JSONObject(str);
      localJSONObject.put("pid", 1);
      localJSONObject.put("protocolVersion", "3.1.4");
      localJSONObject.put("sdkVersion", "3.2.1.5");
      localJSONObject.put("cid", g.b(paramContext));
      localJSONObject.put("deviceId", g.a(paramContext));
      localJSONObject.put("appKey", g.h(paramContext));
      localJSONObject.put("packageName", TrustInfo.packageName);
      localJSONObject.put("versionCode", TrustInfo.versionCode);
      localJSONObject.put("versionName", TrustInfo.versionName);
      localJSONObject.put("sendTime", System.currentTimeMillis());
      int i1 = a(paramContext, "http://da.mmarket.com/mmsdk/mmsdk?func=mmsdk:posterrlog", localJSONObject);
      if ((i1 == 1) || (i1 == 3))
      {
        b(paramContext, 3);
        i(paramContext, paramString);
        Log.i("MobileAgent", "erLog sd");
        a("MobileAgent", "send errlog success \n" + str);
        bool = true;
      }
      return bool;
    }
    catch (JSONException localJSONException)
    {
      i(paramContext, paramString);
      Log.i("MobileAgent", "SDK del a dirty data");
    }
    return false;
  }
  
  protected static SharedPreferences d(Context paramContext)
  {
    String str = paramContext.getPackageName();
    return paramContext.getSharedPreferences(h + "MoblieAgent_config_" + str, 0);
  }
  
  private static String d()
  {
    return B;
  }
  
  protected static void d(Context paramContext, String paramString)
  {
    if (!paramString.trim().equals("")) {}
    try
    {
      JSONObject localJSONObject1 = new JSONObject();
      JSONArray localJSONArray = new JSONArray();
      JSONObject localJSONObject2 = new JSONObject();
      localJSONObject2.put("occurtime", System.currentTimeMillis());
      localJSONObject2.put("errmsg", URLEncoder.encode(paramString, "UTF-8"));
      localJSONArray.put(localJSONObject2);
      localJSONObject1.put("sid", v);
      localJSONObject1.put("errjsonary", localJSONArray);
      a("MobileAgentRun", "errJso" + localJSONObject1.toString());
      a(paramContext, localJSONObject1.toString(), 4);
      return;
    }
    catch (JSONException paramContext)
    {
      a("MobileAgentRun", "json exception,lost catch Exception");
      return;
    }
    catch (UnsupportedEncodingException paramContext)
    {
      a("MobileAgentRun", "unsupport utf-8,lost catch Exception");
    }
  }
  
  static void e(Context paramContext)
  {
    for (;;)
    {
      try
      {
        a("MobileAgentRun", "run into uploadlist :" + paramContext.getClass().getName());
        int i1 = m;
        if (i1 == 2) {}
        try
        {
          Thread.sleep(n);
          bool = true;
          System.currentTimeMillis();
          String str = t(paramContext);
          if ((str.equals("")) || (!bool))
          {
            a("MobileAgentRun", " finish uploadlist ");
            a("MobileAgentRun", "run out uploadlist :" + paramContext.getClass().getName());
            return;
          }
        }
        catch (InterruptedException localInterruptedException1)
        {
          localInterruptedException1.printStackTrace();
          continue;
        }
        if (!localInterruptedException1.substring(0, 6).equals(o)) {
          break label180;
        }
      }
      finally {}
      boolean bool = a(paramContext, localInterruptedException1);
      label147:
      if (bool) {}
      try
      {
        Thread.sleep(0L);
        a("MobileAgentRun", "finish a task : " + localInterruptedException1);
        continue;
        label180:
        if (localInterruptedException1.substring(0, 6).equals(p))
        {
          bool = a(paramContext, localInterruptedException1, null, 0L);
          break label147;
        }
        if (localInterruptedException1.substring(0, 6).equals(r))
        {
          bool = c(paramContext, localInterruptedException1);
          break label147;
        }
        if (localInterruptedException1.substring(0, 6).equals(s))
        {
          bool = b(paramContext, localInterruptedException1);
          break label147;
        }
        if (!localInterruptedException1.substring(0, 6).equals(q)) {
          break label147;
        }
        bool = f(paramContext, localInterruptedException1);
      }
      catch (InterruptedException localInterruptedException2)
      {
        for (;;)
        {
          localInterruptedException2.printStackTrace();
        }
      }
    }
  }
  
  private static void e(Context paramContext, String paramString)
  {
    if (i == 0)
    {
      Log.i("MobileAgent", "Du have not permission to collect data");
      return;
    }
    if (i == 0)
    {
      Log.i("MobileAgent", "Du have not permission to collect data");
      return;
    }
    if (paramString.contains("#"))
    {
      Log.w("MobileAgent", "the eventId contain illegal char");
      return;
    }
    f(paramContext, paramString, paramString);
  }
  
  private static void e(Context paramContext, String paramString1, String paramString2)
  {
    if (i == 0)
    {
      Log.i("MobileAgent", "Du have not permission to collect data");
      return;
    }
    if (paramString1.contains("#"))
    {
      Log.w("MobileAgent", "the eventId contain illegal char");
      return;
    }
    f(paramContext, paramString1, paramString2);
  }
  
  private static void f(Context paramContext)
  {
    boolean bool2 = true;
    long l2 = 0L;
    a("MobileAgentRun", "run into onresumep :" + paramContext.getClass().getName());
    try
    {
      a("page pro", "do resume start: " + paramContext.getClass().getName());
      a("MobileAgentRun", "run into sessionpolicy");
      localObject1 = g.h(paramContext);
      localSharedPreferences = i(paramContext);
      localObject2 = localSharedPreferences.getString("sessionId", null);
      l1 = localSharedPreferences.getLong("endTime", -1L);
      if (System.currentTimeMillis() - l1 <= 30000L) {
        break label523;
      }
      i1 = 1;
      if (i1 == 0) {
        break label528;
      }
      if (localObject2 != null)
      {
        a(paramContext, localSharedPreferences, true);
        localObject2 = localSharedPreferences.edit();
        l1 = localSharedPreferences.getLong("readFlowRev", 0L);
        l3 = localSharedPreferences.getLong("readFlowSnd", 0L);
        ((SharedPreferences.Editor)localObject2).clear();
        ((SharedPreferences.Editor)localObject2).putLong("readFlowRev", Long.valueOf(l1).longValue()).commit();
        ((SharedPreferences.Editor)localObject2).putLong("readFlowSnd", Long.valueOf(l3).longValue()).commit();
      }
      t = "";
      localObject2 = g.a(paramContext, (String)localObject1);
      localEditor = localSharedPreferences.edit();
      localEditor.putString("appKey", (String)localObject1);
      localEditor.putString("sessionId", (String)localObject2);
      localEditor.putLong("lastResumeTime", System.currentTimeMillis());
      localEditor.putString("activities", b("onResume", null));
      l1 = localSharedPreferences.getLong("readFlowRev", 0L);
      localObject1 = g.m(paramContext);
      localEditor.putLong("readFlowRev", localObject1[0]);
      long l3 = localObject1[0] - l1;
      l1 = l3;
      if (l3 < 0L) {
        l1 = 0L;
      }
      localEditor.putLong("consumeFlowRev", l1);
      l1 = localSharedPreferences.getLong("readFlowSnd", 0L);
      localEditor.putLong("readFlowSnd", localObject1[1]);
      l1 = localObject1[1] - l1;
      if (l1 >= 0L) {
        break label633;
      }
      l1 = l2;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        Object localObject1;
        SharedPreferences localSharedPreferences;
        Object localObject2;
        long l1;
        int i1;
        SharedPreferences.Editor localEditor;
        boolean bool1;
        localException.printStackTrace();
      }
    }
    localEditor.putLong("consumeFlowSnd", l1);
    localEditor.commit();
    v = (String)localObject2;
    a(paramContext, localSharedPreferences, false);
    bool1 = bool2;
    if (a(paramContext, 1)) {
      o(paramContext);
    }
    for (bool1 = bool2;; bool1 = false)
    {
      a("MobileAgentRun", "run out sessionpolicy");
      b(paramContext, bool1);
      a("MobileAgentRun", "run out onresume :" + paramContext.getClass().getName());
      return;
      label523:
      i1 = 0;
      break;
      label528:
      localObject1 = localSharedPreferences.getString("activities", null);
      localObject2 = localSharedPreferences.edit();
      ((SharedPreferences.Editor)localObject2).putString("activities", b("onResume", (String)localObject1));
      ((SharedPreferences.Editor)localObject2).putLong("lastResumeTime", System.currentTimeMillis());
      ((SharedPreferences.Editor)localObject2).commit();
      if ((m == 1) || (((String)localObject1).getBytes().length > 10000)) {
        a(paramContext, localSharedPreferences, false);
      }
    }
  }
  
  private static void f(Context paramContext, String paramString1, String paramString2)
  {
    a("MobileAgentAPI", "run in onEvent [" + paramString1 + "," + paramString2 + "]");
    if (paramContext == null)
    {
      Log.e("MobileAgent", "Exception occurent in onEvent ,context cann't be null");
      return;
    }
    if ((TextUtils.isEmpty(paramString1)) || (g.a(paramString1, 100))) {
      Log.e("MobileAgent", "Exception occurent in onEvent ,channelID cann't be empty or length more than 100");
    }
    if (g.a(paramString2, 900)) {
      Log.e("MobileAgent", "Exception occurent in onEvent ,channelID cann't be empty or length more than 100");
    }
    new i(paramContext, 11, paramString1, paramString2).start();
  }
  
  /* Error */
  private static boolean f(Context paramContext, String paramString)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore_3
    //   2: aload_0
    //   3: aload_1
    //   4: invokestatic 681	com/fastfun2/sdk/mmlog318/e:h	(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;
    //   7: astore 4
    //   9: aload 4
    //   11: ldc 111
    //   13: invokevirtual 475	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   16: ifne +370 -> 386
    //   19: new 166	org/json/JSONObject
    //   22: dup
    //   23: aload 4
    //   25: invokespecial 685	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   28: astore 4
    //   30: aload_0
    //   31: invokestatic 773	com/fastfun2/sdk/mmlog318/g:b	(Landroid/content/Context;)Ljava/lang/String;
    //   34: astore 5
    //   36: aload 4
    //   38: ldc_w 775
    //   41: iconst_1
    //   42: invokevirtual 677	org/json/JSONObject:put	(Ljava/lang/String;I)Lorg/json/JSONObject;
    //   45: pop
    //   46: aload 4
    //   48: ldc_w 777
    //   51: ldc_w 779
    //   54: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   57: pop
    //   58: aload 4
    //   60: ldc_w 781
    //   63: ldc 17
    //   65: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   68: pop
    //   69: aload 4
    //   71: ldc_w 783
    //   74: aload 5
    //   76: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   79: pop
    //   80: aload 4
    //   82: ldc_w 314
    //   85: aload_0
    //   86: invokestatic 175	com/fastfun2/sdk/mmlog318/g:h	(Landroid/content/Context;)Ljava/lang/String;
    //   89: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   92: pop
    //   93: aload 4
    //   95: ldc_w 785
    //   98: getstatic 789	com/fastfun2/sdk/mmlog318/TrustInfo:packageName	Ljava/lang/String;
    //   101: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   104: pop
    //   105: aload 4
    //   107: ldc_w 791
    //   110: getstatic 793	com/fastfun2/sdk/mmlog318/TrustInfo:versionCode	Ljava/lang/String;
    //   113: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   116: pop
    //   117: aload 4
    //   119: ldc_w 795
    //   122: getstatic 797	com/fastfun2/sdk/mmlog318/TrustInfo:versionName	Ljava/lang/String;
    //   125: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   128: pop
    //   129: aload 4
    //   131: ldc_w 799
    //   134: invokestatic 330	java/lang/System:currentTimeMillis	()J
    //   137: invokevirtual 669	org/json/JSONObject:put	(Ljava/lang/String;J)Lorg/json/JSONObject;
    //   140: pop
    //   141: aload 4
    //   143: ldc_w 691
    //   146: aload_0
    //   147: invokestatic 693	com/fastfun2/sdk/mmlog318/g:g	(Landroid/content/Context;)Ljava/lang/String;
    //   150: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   153: pop
    //   154: aload 4
    //   156: ldc_w 695
    //   159: invokestatic 697	com/fastfun2/sdk/mmlog318/g:a	()Ljava/lang/String;
    //   162: ldc -77
    //   164: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   167: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   170: pop
    //   171: aload 4
    //   173: ldc_w 699
    //   176: invokestatic 701	com/fastfun2/sdk/mmlog318/g:b	()Ljava/lang/String;
    //   179: ldc -77
    //   181: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   184: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   187: pop
    //   188: aload 4
    //   190: ldc_w 703
    //   193: invokestatic 705	com/fastfun2/sdk/mmlog318/g:c	()Ljava/lang/String;
    //   196: ldc -77
    //   198: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   201: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   204: pop
    //   205: aload 4
    //   207: ldc_w 707
    //   210: aload_0
    //   211: invokestatic 709	com/fastfun2/sdk/mmlog318/g:l	(Landroid/content/Context;)Ljava/lang/String;
    //   214: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   217: pop
    //   218: aload 4
    //   220: ldc_w 715
    //   223: aload_0
    //   224: invokestatic 717	com/fastfun2/sdk/mmlog318/g:a	(Landroid/content/Context;)Ljava/lang/String;
    //   227: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   230: pop
    //   231: aload 4
    //   233: ldc_w 801
    //   236: aload_0
    //   237: invokestatic 177	com/fastfun2/sdk/mmlog318/g:i	(Landroid/content/Context;)Ljava/lang/String;
    //   240: ldc -77
    //   242: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   245: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   248: pop
    //   249: aload_0
    //   250: ldc_w 959
    //   253: aload 4
    //   255: invokestatic 738	com/fastfun2/sdk/mmlog318/e:a	(Landroid/content/Context;Ljava/lang/String;Lorg/json/JSONObject;)I
    //   258: istore_2
    //   259: iload_2
    //   260: iconst_1
    //   261: if_icmpeq +103 -> 364
    //   264: iload_2
    //   265: iconst_3
    //   266: if_icmpeq +98 -> 364
    //   269: iload_2
    //   270: iconst_2
    //   271: if_icmpne +127 -> 398
    //   274: ldc_w 271
    //   277: ldc_w 805
    //   280: invokestatic 768	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
    //   283: pop
    //   284: iconst_0
    //   285: ireturn
    //   286: astore 5
    //   288: aload 4
    //   290: ldc_w 695
    //   293: ldc 111
    //   295: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   298: pop
    //   299: goto -128 -> 171
    //   302: astore 4
    //   304: aload_0
    //   305: aload_1
    //   306: invokestatic 743	com/fastfun2/sdk/mmlog318/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   309: aload 4
    //   311: invokevirtual 678	org/json/JSONException:printStackTrace	()V
    //   314: iconst_1
    //   315: ireturn
    //   316: astore 5
    //   318: aload 4
    //   320: ldc_w 699
    //   323: ldc 111
    //   325: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   328: pop
    //   329: goto -141 -> 188
    //   332: astore 5
    //   334: aload 4
    //   336: ldc_w 703
    //   339: ldc 111
    //   341: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   344: pop
    //   345: goto -140 -> 205
    //   348: astore 5
    //   350: aload 4
    //   352: ldc_w 801
    //   355: ldc 111
    //   357: invokevirtual 662	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   360: pop
    //   361: goto -112 -> 249
    //   364: aload_0
    //   365: iconst_3
    //   366: invokestatic 741	com/fastfun2/sdk/mmlog318/e:b	(Landroid/content/Context;I)V
    //   369: aload_0
    //   370: aload_1
    //   371: invokestatic 743	com/fastfun2/sdk/mmlog318/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   374: ldc_w 271
    //   377: ldc_w 816
    //   380: invokestatic 367	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   383: pop
    //   384: iconst_1
    //   385: ireturn
    //   386: aload_0
    //   387: iconst_3
    //   388: invokestatic 741	com/fastfun2/sdk/mmlog318/e:b	(Landroid/content/Context;I)V
    //   391: aload_0
    //   392: aload_1
    //   393: invokestatic 743	com/fastfun2/sdk/mmlog318/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   396: iconst_1
    //   397: istore_3
    //   398: iload_3
    //   399: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	400	0	paramContext	Context
    //   0	400	1	paramString	String
    //   258	14	2	i1	int
    //   1	398	3	bool	boolean
    //   7	282	4	localObject	Object
    //   302	49	4	localJSONException	JSONException
    //   34	41	5	str	String
    //   286	1	5	localUnsupportedEncodingException1	UnsupportedEncodingException
    //   316	1	5	localUnsupportedEncodingException2	UnsupportedEncodingException
    //   332	1	5	localUnsupportedEncodingException3	UnsupportedEncodingException
    //   348	1	5	localUnsupportedEncodingException4	UnsupportedEncodingException
    // Exception table:
    //   from	to	target	type
    //   154	171	286	java/io/UnsupportedEncodingException
    //   19	154	302	org/json/JSONException
    //   154	171	302	org/json/JSONException
    //   171	188	302	org/json/JSONException
    //   188	205	302	org/json/JSONException
    //   205	231	302	org/json/JSONException
    //   231	249	302	org/json/JSONException
    //   249	259	302	org/json/JSONException
    //   274	284	302	org/json/JSONException
    //   288	299	302	org/json/JSONException
    //   318	329	302	org/json/JSONException
    //   334	345	302	org/json/JSONException
    //   350	361	302	org/json/JSONException
    //   364	384	302	org/json/JSONException
    //   171	188	316	java/io/UnsupportedEncodingException
    //   188	205	332	java/io/UnsupportedEncodingException
    //   231	249	348	java/io/UnsupportedEncodingException
  }
  
  private static String g(Context paramContext, String paramString)
  {
    return d(paramContext).getString(paramString, "0");
  }
  
  private static void g(Context paramContext)
  {
    a("MobileAgentRun", "run into onpausep :" + paramContext.getClass().getName());
    Object localObject = i(paramContext);
    String str = ((SharedPreferences)localObject).getString("activities", null);
    localObject = ((SharedPreferences)localObject).edit();
    ((SharedPreferences.Editor)localObject).putLong("endTime", System.currentTimeMillis());
    ((SharedPreferences.Editor)localObject).putString("activities", b("onPause", str));
    ((SharedPreferences.Editor)localObject).commit();
    a("MobileAgentRun", "run out onpausep :" + paramContext.getClass().getName());
  }
  
  /* Error */
  private static String h(Context paramContext, String paramString)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: aload_0
    //   4: aload_1
    //   5: invokevirtual 963	android/content/Context:openFileInput	(Ljava/lang/String;)Ljava/io/FileInputStream;
    //   8: astore_1
    //   9: aload_1
    //   10: astore_3
    //   11: sipush 10000
    //   14: newarray byte
    //   16: astore 5
    //   18: ldc 111
    //   20: astore_0
    //   21: aload_1
    //   22: astore_3
    //   23: aload_1
    //   24: aload 5
    //   26: invokevirtual 969	java/io/FileInputStream:read	([B)I
    //   29: istore_2
    //   30: iload_2
    //   31: iconst_m1
    //   32: if_icmpne +20 -> 52
    //   35: aload_0
    //   36: astore_3
    //   37: aload_1
    //   38: ifnull +9 -> 47
    //   41: aload_1
    //   42: invokevirtual 970	java/io/FileInputStream:close	()V
    //   45: aload_0
    //   46: astore_3
    //   47: ldc 2
    //   49: monitorexit
    //   50: aload_3
    //   51: areturn
    //   52: aload_1
    //   53: astore_3
    //   54: new 77	java/lang/StringBuilder
    //   57: dup
    //   58: aload_0
    //   59: invokestatic 191	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   62: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   65: new 187	java/lang/String
    //   68: dup
    //   69: aload 5
    //   71: iconst_0
    //   72: iload_2
    //   73: invokespecial 973	java/lang/String:<init>	([BII)V
    //   76: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   79: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   82: astore 4
    //   84: aload 4
    //   86: astore_0
    //   87: goto -66 -> 21
    //   90: astore 4
    //   92: ldc 111
    //   94: astore_0
    //   95: aconst_null
    //   96: astore_1
    //   97: aload_1
    //   98: astore_3
    //   99: aload 4
    //   101: invokevirtual 974	java/io/FileNotFoundException:printStackTrace	()V
    //   104: aload_0
    //   105: astore_3
    //   106: aload_1
    //   107: ifnull -60 -> 47
    //   110: aload_1
    //   111: invokevirtual 970	java/io/FileInputStream:close	()V
    //   114: aload_0
    //   115: astore_3
    //   116: goto -69 -> 47
    //   119: astore_1
    //   120: aload_1
    //   121: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   124: aload_0
    //   125: astore_3
    //   126: goto -79 -> 47
    //   129: astore_0
    //   130: ldc 2
    //   132: monitorexit
    //   133: aload_0
    //   134: athrow
    //   135: astore 4
    //   137: ldc 111
    //   139: astore_0
    //   140: aconst_null
    //   141: astore_1
    //   142: aload_1
    //   143: astore_3
    //   144: aload 4
    //   146: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   149: aload_0
    //   150: astore_3
    //   151: aload_1
    //   152: ifnull -105 -> 47
    //   155: aload_1
    //   156: invokevirtual 970	java/io/FileInputStream:close	()V
    //   159: aload_0
    //   160: astore_3
    //   161: goto -114 -> 47
    //   164: astore_1
    //   165: aload_1
    //   166: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   169: aload_0
    //   170: astore_3
    //   171: goto -124 -> 47
    //   174: astore_0
    //   175: aconst_null
    //   176: astore_3
    //   177: aload_3
    //   178: ifnull +7 -> 185
    //   181: aload_3
    //   182: invokevirtual 970	java/io/FileInputStream:close	()V
    //   185: aload_0
    //   186: athrow
    //   187: astore_1
    //   188: aload_1
    //   189: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   192: goto -7 -> 185
    //   195: astore_1
    //   196: aload_1
    //   197: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   200: aload_0
    //   201: astore_3
    //   202: goto -155 -> 47
    //   205: astore 4
    //   207: ldc 111
    //   209: astore_0
    //   210: goto -68 -> 142
    //   213: astore 4
    //   215: ldc 111
    //   217: astore_0
    //   218: goto -121 -> 97
    //   221: astore 4
    //   223: goto -81 -> 142
    //   226: astore 4
    //   228: goto -131 -> 97
    //   231: astore_0
    //   232: goto -55 -> 177
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	235	0	paramContext	Context
    //   0	235	1	paramString	String
    //   29	44	2	i1	int
    //   10	192	3	localObject	Object
    //   82	3	4	str	String
    //   90	10	4	localFileNotFoundException1	java.io.FileNotFoundException
    //   135	10	4	localIOException1	java.io.IOException
    //   205	1	4	localIOException2	java.io.IOException
    //   213	1	4	localFileNotFoundException2	java.io.FileNotFoundException
    //   221	1	4	localIOException3	java.io.IOException
    //   226	1	4	localFileNotFoundException3	java.io.FileNotFoundException
    //   16	54	5	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   3	9	90	java/io/FileNotFoundException
    //   110	114	119	java/io/IOException
    //   41	45	129	finally
    //   110	114	129	finally
    //   120	124	129	finally
    //   155	159	129	finally
    //   165	169	129	finally
    //   181	185	129	finally
    //   185	187	129	finally
    //   188	192	129	finally
    //   196	200	129	finally
    //   3	9	135	java/io/IOException
    //   155	159	164	java/io/IOException
    //   3	9	174	finally
    //   181	185	187	java/io/IOException
    //   41	45	195	java/io/IOException
    //   11	18	205	java/io/IOException
    //   11	18	213	java/io/FileNotFoundException
    //   23	30	221	java/io/IOException
    //   54	84	221	java/io/IOException
    //   23	30	226	java/io/FileNotFoundException
    //   54	84	226	java/io/FileNotFoundException
    //   11	18	231	finally
    //   23	30	231	finally
    //   54	84	231	finally
    //   99	104	231	finally
    //   144	149	231	finally
  }
  
  private static boolean h(Context paramContext)
  {
    a("MobileAgentRun", "run into sessionpolicy");
    Object localObject2 = g.h(paramContext);
    Object localObject1 = i(paramContext);
    Object localObject3 = ((SharedPreferences)localObject1).getString("sessionId", null);
    long l1 = ((SharedPreferences)localObject1).getLong("endTime", -1L);
    int i1;
    if (System.currentTimeMillis() - l1 > 30000L)
    {
      i1 = 1;
      if (i1 == 0) {
        break label794;
      }
      if (localObject3 != null)
      {
        a(paramContext, (SharedPreferences)localObject1, true);
        localObject3 = ((SharedPreferences)localObject1).edit();
        l1 = ((SharedPreferences)localObject1).getLong("readFlowRev", 0L);
        l2 = ((SharedPreferences)localObject1).getLong("readFlowSnd", 0L);
        ((SharedPreferences.Editor)localObject3).clear();
        ((SharedPreferences.Editor)localObject3).putLong("readFlowRev", Long.valueOf(l1).longValue()).commit();
        ((SharedPreferences.Editor)localObject3).putLong("readFlowSnd", Long.valueOf(l2).longValue()).commit();
      }
      t = "";
      localObject3 = g.a(paramContext, (String)localObject2);
      SharedPreferences.Editor localEditor = ((SharedPreferences)localObject1).edit();
      localEditor.putString("appKey", (String)localObject2);
      localEditor.putString("sessionId", (String)localObject3);
      localEditor.putLong("lastResumeTime", System.currentTimeMillis());
      localEditor.putString("activities", b("onResume", null));
      l1 = ((SharedPreferences)localObject1).getLong("readFlowRev", 0L);
      localObject2 = g.m(paramContext);
      localEditor.putLong("readFlowRev", localObject2[0]);
      long l2 = localObject2[0] - l1;
      l1 = l2;
      if (l2 < 0L) {
        l1 = 0L;
      }
      localEditor.putLong("consumeFlowRev", l1);
      l1 = ((SharedPreferences)localObject1).getLong("readFlowSnd", 0L);
      localEditor.putLong("readFlowSnd", localObject2[1]);
      l2 = localObject2[1] - l1;
      l1 = l2;
      if (l2 < 0L) {
        l1 = 0L;
      }
      localEditor.putLong("consumeFlowSnd", l1);
      localEditor.commit();
      v = (String)localObject3;
      a(paramContext, (SharedPreferences)localObject1, false);
      if (!a(paramContext, 1)) {
        break label890;
      }
      localObject1 = new JSONObject();
    }
    for (;;)
    {
      try
      {
        ((JSONObject)localObject1).put("pid", 1);
        ((JSONObject)localObject1).put("protocolVersion", "3.1.4");
        ((JSONObject)localObject1).put("sdkVersion", "3.2.1.5");
        ((JSONObject)localObject1).put("cid", g.b(paramContext));
        ((JSONObject)localObject1).put("deviceId", g.a(paramContext));
        ((JSONObject)localObject1).put("appKey", g.h(paramContext));
        ((JSONObject)localObject1).put("packageName", TrustInfo.packageName);
        ((JSONObject)localObject1).put("versionCode", TrustInfo.versionCode);
        ((JSONObject)localObject1).put("versionName", TrustInfo.versionName);
        if (TrustInfo.sysLogTime != 0L) {
          continue;
        }
        l1 = System.currentTimeMillis();
        ((JSONObject)localObject1).put("sendTime", l1);
        ((JSONObject)localObject1).put("imsi", g.c(paramContext));
        ((JSONObject)localObject1).put("mac", g.g(paramContext));
        ((JSONObject)localObject1).put("deviceDetail", URLEncoder.encode(g.a(), "UTF-8"));
        ((JSONObject)localObject1).put("manufacturer", URLEncoder.encode(g.b(), "UTF-8"));
        ((JSONObject)localObject1).put("phoneOS", URLEncoder.encode(g.c(), "UTF-8"));
        ((JSONObject)localObject1).put("screenWidth", g.d(paramContext));
        ((JSONObject)localObject1).put("screenHeight", g.e(paramContext));
        ((JSONObject)localObject1).put("screenDensity", g.f(paramContext));
        ((JSONObject)localObject1).put("carrierName", URLEncoder.encode(g.k(paramContext), "UTF-8"));
        ((JSONObject)localObject1).put("accessPoint", g.l(paramContext));
        ((JSONObject)localObject1).put("countryCode", g.d());
        ((JSONObject)localObject1).put("languageCode", g.e());
        ((JSONObject)localObject1).put("channel", URLEncoder.encode(g.i(paramContext), "UTF-8"));
        if (!a(paramContext, ((JSONObject)localObject1).toString(), 1)) {
          continue;
        }
        b(paramContext, 1);
        bool = true;
      }
      catch (JSONException paramContext)
      {
        paramContext.printStackTrace();
        bool = true;
        continue;
      }
      catch (UnsupportedEncodingException paramContext)
      {
        paramContext.printStackTrace();
        bool = true;
        continue;
      }
      a("MobileAgentRun", "run out sessionpolicy");
      return bool;
      i1 = 0;
      break;
      l1 = TrustInfo.sysLogTime;
      continue;
      label794:
      localObject2 = ((SharedPreferences)localObject1).getString("activities", null);
      localObject3 = ((SharedPreferences)localObject1).edit();
      ((SharedPreferences.Editor)localObject3).putString("activities", b("onResume", (String)localObject2));
      ((SharedPreferences.Editor)localObject3).putLong("lastResumeTime", System.currentTimeMillis());
      ((SharedPreferences.Editor)localObject3).commit();
      if ((m == 1) || (((String)localObject2).getBytes().length > 10000)) {
        a(paramContext, (SharedPreferences)localObject1, false);
      }
      boolean bool = false;
      continue;
      label890:
      bool = true;
    }
  }
  
  private static SharedPreferences i(Context paramContext)
  {
    String str = paramContext.getPackageName();
    return paramContext.getSharedPreferences(h + "MoblieAgent_state_" + str, 0);
  }
  
  private static void i(Context paramContext, String paramString)
  {
    if (paramString != null)
    {
      paramContext.deleteFile(paramString);
      j(paramContext, paramString);
    }
  }
  
  private static SharedPreferences j(Context paramContext)
  {
    String str = paramContext.getPackageName();
    return paramContext.getSharedPreferences(h + "MoblieAgent_event_" + str, 0);
  }
  
  private static void j(Context paramContext, String paramString)
  {
    synchronized (w)
    {
      paramContext = l(paramContext);
      paramString = paramContext.getString("uploadList", "").replace(paramString + "|", "");
      paramContext.edit().putString("uploadList", paramString).commit();
      return;
    }
  }
  
  private static SharedPreferences k(Context paramContext)
  {
    String str = paramContext.getPackageName();
    return paramContext.getSharedPreferences(h + "MoblieAgent_event_sp" + str, 0);
  }
  
  private static void k(Context paramContext, String paramString)
  {
    d(paramContext).edit().putString(paramString, "record").commit();
  }
  
  private static SharedPreferences l(Context paramContext)
  {
    String str = paramContext.getPackageName();
    return paramContext.getSharedPreferences(h + "MoblieAgent_upload_" + str, 0);
  }
  
  private static boolean l(Context paramContext, String paramString)
  {
    return !d(paramContext).getString(paramString, "").equals("");
  }
  
  private static SharedPreferences m(Context paramContext)
  {
    return paramContext.getSharedPreferences("lxdMoblieAgent_sys_config", 0);
  }
  
  private static JSONObject n(Context paramContext)
  {
    localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("pid", 1);
      localJSONObject.put("protocolVersion", "3.1.4");
      localJSONObject.put("sdkVersion", "3.2.1.5");
      localJSONObject.put("cid", g.b(paramContext));
      localJSONObject.put("appKey", g.h(paramContext));
      localJSONObject.put("packageName", TrustInfo.packageName);
      localJSONObject.put("versionCode", TrustInfo.versionCode);
      localJSONObject.put("versionName", TrustInfo.versionName);
      if (TrustInfo.actLogTime == 0L) {}
      for (long l1 = System.currentTimeMillis();; l1 = TrustInfo.actLogTime)
      {
        localJSONObject.put("sendTime", l1);
        localJSONObject.put("deviceId", g.a(paramContext));
        localJSONObject.put("channel", g.i(paramContext));
        return localJSONObject;
      }
      return localJSONObject;
    }
    catch (JSONException paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  private static void o(Context paramContext)
  {
    JSONObject localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("pid", 1);
      localJSONObject.put("protocolVersion", "3.1.4");
      localJSONObject.put("sdkVersion", "3.2.1.5");
      localJSONObject.put("cid", g.b(paramContext));
      localJSONObject.put("deviceId", g.a(paramContext));
      localJSONObject.put("appKey", g.h(paramContext));
      localJSONObject.put("packageName", TrustInfo.packageName);
      localJSONObject.put("versionCode", TrustInfo.versionCode);
      localJSONObject.put("versionName", TrustInfo.versionName);
      if (TrustInfo.sysLogTime == 0L) {}
      for (long l1 = System.currentTimeMillis();; l1 = TrustInfo.sysLogTime)
      {
        localJSONObject.put("sendTime", l1);
        localJSONObject.put("imsi", g.c(paramContext));
        localJSONObject.put("mac", g.g(paramContext));
        localJSONObject.put("deviceDetail", URLEncoder.encode(g.a(), "UTF-8"));
        localJSONObject.put("manufacturer", URLEncoder.encode(g.b(), "UTF-8"));
        localJSONObject.put("phoneOS", URLEncoder.encode(g.c(), "UTF-8"));
        localJSONObject.put("screenWidth", g.d(paramContext));
        localJSONObject.put("screenHeight", g.e(paramContext));
        localJSONObject.put("screenDensity", g.f(paramContext));
        localJSONObject.put("carrierName", URLEncoder.encode(g.k(paramContext), "UTF-8"));
        localJSONObject.put("accessPoint", g.l(paramContext));
        localJSONObject.put("countryCode", g.d());
        localJSONObject.put("languageCode", g.e());
        localJSONObject.put("channel", URLEncoder.encode(g.i(paramContext), "UTF-8"));
        if (!a(paramContext, localJSONObject.toString(), 1)) {
          break;
        }
        b(paramContext, 1);
        return;
      }
      return;
    }
    catch (JSONException paramContext)
    {
      paramContext.printStackTrace();
      return;
    }
    catch (UnsupportedEncodingException paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  private static boolean p(Context paramContext)
  {
    SharedPreferences localSharedPreferences = j(paramContext);
    String str1 = localSharedPreferences.getString("eventlogs", "");
    if (!str1.equals(""))
    {
      String str2 = i(paramContext).getString("sessionId", null);
      JSONObject localJSONObject = new JSONObject();
      try
      {
        localJSONObject.put("sid", str2);
        localJSONObject.put("logJsonAry", str1);
        if (a(paramContext, localJSONObject.toString(), 2)) {
          localSharedPreferences.edit().putString("eventlogs", "").commit();
        }
        return true;
      }
      catch (JSONException paramContext)
      {
        for (;;)
        {
          paramContext.printStackTrace();
        }
      }
    }
    return false;
  }
  
  private static boolean q(Context paramContext)
  {
    SharedPreferences localSharedPreferences = k(paramContext);
    String str1 = localSharedPreferences.getString("eventlogs", "");
    if (!str1.equals(""))
    {
      String str2 = i(paramContext).getString("sessionId", null);
      JSONObject localJSONObject = new JSONObject();
      try
      {
        localJSONObject.put("sid", str2);
        localJSONObject.put("logJsonAry", str1);
        if (a(paramContext, localJSONObject.toString(), 5)) {
          localSharedPreferences.edit().putString("eventlogs", "").commit();
        }
        return true;
      }
      catch (JSONException paramContext)
      {
        for (;;)
        {
          paramContext.printStackTrace();
        }
      }
    }
    return false;
  }
  
  private static void r(Context paramContext)
  {
    if (l) {
      if (!g(paramContext, "updateonlyonwifi").equals("1")) {
        break label79;
      }
    }
    label79:
    for (k = true;; k = false)
    {
      String str = g(paramContext, "updatedelay");
      if (!str.equals("0")) {
        n = Integer.parseInt(str) * 1000;
      }
      int i1 = Integer.parseInt(g(paramContext, "send_policy"));
      m = i1;
      if (i1 == 0) {
        m = 1;
      }
      return;
    }
  }
  
  private static long s(Context paramContext)
  {
    try
    {
      long l1 = l(paramContext).getLong("uploadpopindex", 0L);
      return l1;
    }
    finally
    {
      paramContext = finally;
      throw paramContext;
    }
  }
  
  private static String t(Context paramContext)
  {
    Object localObject = w;
    String str1 = "";
    try
    {
      String str2 = l(paramContext).getString("uploadList", "");
      paramContext = str1;
      if (!str2.equals("")) {
        paramContext = str2.substring(0, str2.indexOf("|"));
      }
      return paramContext;
    }
    finally {}
  }
  
  private static boolean u(Context paramContext)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    return (paramContext != null) && (paramContext.getType() == 1);
  }
}
