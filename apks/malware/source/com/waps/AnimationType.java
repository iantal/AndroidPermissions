package com.waps;

import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.view.animation.AlphaAnimation;
import android.view.animation.Animation;
import android.view.animation.DecelerateInterpolator;
import android.view.animation.ScaleAnimation;
import android.view.animation.TranslateAnimation;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;

public class AnimationType
{
  public static final int ALPHA = 5;
  public static final int MINI_RANDOM = -2;
  public static final int NONE = -1;
  public static final int RANDOM = 0;
  public static final int ROTATE = 4;
  public static final int SCALE_CENTER = 1;
  public static final int TRANSLATE_FROM_LEFT = 7;
  public static final int TRANSLATE_FROM_RIGHT = 6;
  private int[] a;
  private int b;
  
  public AnimationType() {}
  
  public AnimationType(int paramInt)
  {
    this.b = paramInt;
  }
  
  public AnimationType(int[] paramArrayOfInt)
  {
    this.a = paramArrayOfInt;
  }
  
  private static Map getAnimation(View paramView)
  {
    float f1 = paramView.getLayoutParams().width / 2.0F;
    float f2 = paramView.getLayoutParams().height / 2.0F;
    HashMap localHashMap = new HashMap();
    localHashMap.put("1", new ScaleAnimation(0.0F, 1.0F, 0.0F, 1.0F, f1, f2));
    localHashMap.put("4", new f(270.0F, 360.0F, f1, f2, 0.0F, true));
    localHashMap.put("5", new AlphaAnimation(0.0F, 1.0F));
    localHashMap.put("6", new TranslateAnimation(paramView.getLayoutParams().width, 0.0F, 0.0F, 0.0F));
    localHashMap.put("7", new TranslateAnimation(-paramView.getLayoutParams().width, 0.0F, 0.0F, 0.0F));
    return localHashMap;
  }
  
  private List getAnimationList(View paramView)
  {
    int j = 0;
    Map localMap = getAnimation(paramView);
    ArrayList localArrayList = new ArrayList();
    paramView = "";
    int i = 0;
    while (i < this.a.length)
    {
      paramView = paramView + this.a[i];
      i += 1;
    }
    if (paramView.contains("0"))
    {
      localArrayList.add(localMap.get("1"));
      localArrayList.add(localMap.get("4"));
      localArrayList.add(localMap.get("5"));
      localArrayList.add(localMap.get("6"));
      localArrayList.add(localMap.get("7"));
      return localArrayList;
    }
    if (paramView.contains("-2"))
    {
      localArrayList.add(localMap.get("6"));
      localArrayList.add(localMap.get("7"));
      return localArrayList;
    }
    i = j;
    if (paramView.contains("-1")) {
      return localArrayList;
    }
    do
    {
      localArrayList.add(localMap.get(this.a[i] + ""));
      i += 1;
      if (i >= this.a.length) {
        break;
      }
    } while ((this.a[i] < 9) && (this.a.length <= 7));
    localArrayList.add(localMap.get("1"));
    localArrayList.add(localMap.get("4"));
    localArrayList.add(localMap.get("5"));
    localArrayList.add(localMap.get("6"));
    localArrayList.add(localMap.get("7"));
    return localArrayList;
    return localArrayList;
  }
  
  private List getAnimationList2(View paramView)
  {
    paramView = getAnimation(paramView);
    ArrayList localArrayList = new ArrayList();
    switch (this.b)
    {
    case -1: 
    case 2: 
    case 3: 
    default: 
      return localArrayList;
    case -2: 
      localArrayList.add(paramView.get("6"));
      localArrayList.add(paramView.get("7"));
      return localArrayList;
    case 0: 
      localArrayList.add(paramView.get("1"));
      localArrayList.add(paramView.get("4"));
      localArrayList.add(paramView.get("5"));
      localArrayList.add(paramView.get("6"));
      localArrayList.add(paramView.get("7"));
      return localArrayList;
    case 1: 
      localArrayList.add(paramView.get("1"));
      return localArrayList;
    case 4: 
      localArrayList.add(paramView.get("4"));
      return localArrayList;
    case 5: 
      localArrayList.add(paramView.get("5"));
      return localArrayList;
    case 6: 
      localArrayList.add(paramView.get("6"));
      return localArrayList;
    }
    localArrayList.add(paramView.get("7"));
    return localArrayList;
  }
  
  private static void startRotation(float paramFloat1, float paramFloat2, View paramView)
  {
    f localF = new f(paramFloat1, paramFloat2, paramView.getWidth() / 2.0F, paramView.getHeight() / 2.0F, 0.0F, true);
    localF.setDuration(2000L);
    localF.setFillAfter(true);
    localF.setInterpolator(new DecelerateInterpolator());
    paramView.startAnimation(localF);
  }
  
  public void startAnimation(View paramView)
  {
    if (this.a == null) {}
    Random localRandom;
    for (Object localObject = getAnimationList2(paramView);; localObject = getAnimationList(paramView))
    {
      localRandom = new Random();
      if (((List)localObject).size() != 0) {
        break;
      }
      return;
    }
    localObject = (Animation)((List)localObject).get(localRandom.nextInt(((List)localObject).size()));
    ((Animation)localObject).setDuration(2000L);
    ((Animation)localObject).setInterpolator(new DecelerateInterpolator());
    paramView.startAnimation((Animation)localObject);
  }
  
  protected void startMiniAdAnimation(int paramInt, View paramView)
  {
    Object localObject2;
    if (paramInt == -2)
    {
      localObject2 = getAnimation(paramView);
      localObject1 = new ArrayList();
      ((List)localObject1).add(((Map)localObject2).get("4"));
      ((List)localObject1).add(((Map)localObject2).get("6"));
      ((List)localObject1).add(((Map)localObject2).get("7"));
      localObject2 = new Random();
      if (((List)localObject1).size() != 0) {}
    }
    else
    {
      return;
    }
    Object localObject1 = (Animation)((List)localObject1).get(((Random)localObject2).nextInt(((List)localObject1).size()));
    ((Animation)localObject1).setDuration(2000L);
    ((Animation)localObject1).setInterpolator(new DecelerateInterpolator());
    paramView.startAnimation((Animation)localObject1);
  }
}
