package com.qbiki.seattleclouds.asynctasks;

import android.app.Activity;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.util.Log;
import android.view.Window;
import com.qbiki.seattleclouds.App;
import com.qbiki.seattleclouds.AppConfigHandler;
import com.qbiki.util.AsyncTaskListener;
import java.io.File;
import org.apache.commons.io.FileUtils;

public class ParseAppConfigAsyncTask
  extends AsyncTask<String, Integer, String>
{
  private static final String TAG = "ParseAppConfigAsyncTask";
  private final Activity activity;
  private ProgressDialog dialog;
  private AsyncTaskListener listener = null;
  
  public ParseAppConfigAsyncTask(Activity paramActivity)
  {
    this.activity = paramActivity;
  }
  
  protected String doInBackground(String... paramVarArgs)
  {
    if (!App.syncEnabled)
    {
      Log.v("ParseAppConfigAsyncTask", "Cleaning old resources...");
      FileUtils.deleteQuietly(new File(App.getOldAppResourcesPath()));
      FileUtils.deleteQuietly(new File(App.getAppResourcesPath()));
    }
    AppConfigHandler.parseAppConfig(this.activity);
    return "ok";
  }
  
  protected void onCancelled()
  {
    super.onCancelled();
    if (this.dialog != null) {
      this.dialog.dismiss();
    }
  }
  
  protected void onPostExecute(String paramString)
  {
    super.onPostExecute(paramString);
    try
    {
      if ((this.dialog != null) && (this.dialog.isShowing())) {
        this.dialog.dismiss();
      }
      if (this.listener != null) {
        this.listener.asyncTaskFinished(null);
      }
      return;
    }
    catch (IllegalArgumentException paramString)
    {
      for (;;)
      {
        Log.e("ParseAppConfigAsyncTask", "Exception while dismissing dialog", paramString);
      }
    }
  }
  
  protected void onPreExecute()
  {
    if (!this.activity.isFinishing())
    {
      this.dialog = new ProgressDialog(this.activity);
      this.dialog.setMessage(this.activity.getString(2131361961));
      this.dialog.setCancelable(false);
      this.dialog.getWindow().clearFlags(2);
      this.dialog.show();
    }
    super.onPreExecute();
  }
  
  public void setAsyncTaskListener(AsyncTaskListener paramAsyncTaskListener)
  {
    this.listener = paramAsyncTaskListener;
  }
}
