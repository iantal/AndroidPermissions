package com.qbiki.seattleclouds;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import com.qbiki.util.TransitionUtils;
import java.util.ArrayList;
import java.util.List;

public class NavigationFragment
  extends NestedFragmentCompat
{
  public static final String ARG_ROOT_FRAGMENT_INFO = "ARG_ROOT_FRAGMENT_INFO";
  private static final String TAG = "NavigationFragment";
  private ArrayList<Fragment> mFragments = new ArrayList();
  
  public NavigationFragment() {}
  
  private boolean popFragmentInternal()
  {
    int i = this.mFragments.size() - 1;
    if (i > 0)
    {
      this.mFragments.remove(i);
      if (this.mFragments.size() > 0) {}
      for (this.mCurrentNestedFragment = ((Fragment)this.mFragments.get(this.mFragments.size() - 1));; this.mCurrentNestedFragment = null) {
        return true;
      }
    }
    return false;
  }
  
  private void pushFragmentInternal(Fragment paramFragment)
  {
    this.mFragments.add(paramFragment);
    this.mCurrentNestedFragment = paramFragment;
  }
  
  public List<Fragment> getFragments()
  {
    return this.mFragments;
  }
  
  public boolean onBackPressed()
  {
    return popFragmentImmediate();
  }
  
  public View onCreateView(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, Bundle paramBundle)
  {
    int j = 1;
    paramLayoutInflater = paramLayoutInflater.inflate(2130903142, paramViewGroup, false);
    paramBundle = (FragmentInfo)getArguments().getParcelable("ARG_ROOT_FRAGMENT_INFO");
    if (paramBundle != null)
    {
      int i;
      if (paramBundle.getClassName() != null)
      {
        i = 1;
        if (paramBundle.getArguments() == null) {
          break label106;
        }
      }
      for (;;)
      {
        if ((i & j) == 0) {
          break label112;
        }
        paramViewGroup = getChildFragmentManager().beginTransaction();
        paramBundle = Fragment.instantiate(getActivity(), paramBundle.getClassName(), paramBundle.getArguments());
        pushFragmentInternal(paramBundle);
        paramViewGroup.add(2131099943, paramBundle, "rootFragment");
        paramViewGroup.commit();
        return paramLayoutInflater;
        i = 0;
        break;
        label106:
        j = 0;
      }
    }
    label112:
    Log.w("NavigationFragment", "Root fragment info not specified or invalid");
    return paramLayoutInflater;
  }
  
  public boolean popFragment()
  {
    popFragmentInternal();
    FragmentManager localFragmentManager = getChildFragmentManager();
    if (localFragmentManager.getBackStackEntryCount() > 0)
    {
      localFragmentManager.popBackStack();
      return true;
    }
    return false;
  }
  
  public boolean popFragmentImmediate()
  {
    popFragmentInternal();
    return getChildFragmentManager().popBackStackImmediate();
  }
  
  public void pushFragment(FragmentInfo paramFragmentInfo)
  {
    pushFragment(paramFragmentInfo, true);
  }
  
  public void pushFragment(FragmentInfo paramFragmentInfo, boolean paramBoolean)
  {
    FragmentTransaction localFragmentTransaction = getChildFragmentManager().beginTransaction();
    if (paramBoolean) {
      TransitionUtils.setCustomTransitionForFragmentTransaction(paramFragmentInfo.getArguments().getString("PAGE_TRANSITION"), localFragmentTransaction);
    }
    paramFragmentInfo = Fragment.instantiate(getActivity(), paramFragmentInfo.getClassName(), paramFragmentInfo.getArguments());
    Fragment localFragment = this.mCurrentNestedFragment;
    pushFragmentInternal(paramFragmentInfo);
    if (localFragment != null)
    {
      localFragmentTransaction.hide(localFragment);
      localFragmentTransaction.add(2131099943, paramFragmentInfo, null);
    }
    for (;;)
    {
      localFragmentTransaction.addToBackStack(null);
      localFragmentTransaction.commit();
      return;
      localFragmentTransaction.add(2131099943, paramFragmentInfo, "rootFragment");
    }
  }
  
  public void pushFragmentImmediate(FragmentInfo paramFragmentInfo)
  {
    pushFragmentImmediate(paramFragmentInfo, true);
  }
  
  public void pushFragmentImmediate(FragmentInfo paramFragmentInfo, boolean paramBoolean)
  {
    pushFragment(paramFragmentInfo, paramBoolean);
    getChildFragmentManager().executePendingTransactions();
  }
}
