package com.qbiki.modules.pdfreader;

import android.content.Context;
import android.graphics.Bitmap;
import android.widget.FrameLayout.LayoutParams;
import android.widget.ImageView;
import com.googlecode.apdfviewer.PDF.Size;
import pl.polidea.view.ZoomView;

public class PDFZoomView
  extends ZoomView
{
  private static final String TAG = "PDFZoomView";
  private static final boolean mDebug = false;
  private PDFDocumentHelper documentHelper = null;
  private ImageView imageView = null;
  private final float maxScale = 1.5F;
  private int pageIndex = -1;
  private PDF.Size screenSize = new PDF.Size(600, 800);
  
  public PDFZoomView(Context paramContext)
  {
    super(paramContext);
    this.imageView = new ImageView(paramContext);
    this.imageView.setLayoutParams(new FrameLayout.LayoutParams(-1, -1));
    addView(this.imageView);
  }
  
  private void updateZoomView()
  {
    if ((this.documentHelper != null) && (this.pageIndex >= 0)) {
      new Thread(new Runnable()
      {
        public void run()
        {
          Object localObject = PDFZoomView.this.documentHelper.sizeForPage(PDFZoomView.this.pageIndex);
          ((PDF.Size)localObject).width = ((int)(((PDF.Size)localObject).width * 1.5F));
          ((PDF.Size)localObject).height = ((int)(((PDF.Size)localObject).height * 1.5F));
          PDF.Size localSize = new PDF.Size(PDFZoomView.this.screenSize.width, PDFZoomView.this.screenSize.height);
          if (((PDF.Size)localObject).width > ((PDF.Size)localObject).height) {
            localSize.width = ((int)(localSize.height * 1.5F));
          }
          for (localSize.height = ((int)(localSize.width * 1.5F));; localSize.height = ((int)(localSize.height * 1.5F)))
          {
            localSize = PDFDocumentHelper.sizeFrom((PDF.Size)localObject, localSize);
            localObject = PDFZoomView.this.documentHelper.bitmapForPage(PDFZoomView.this.pageIndex, localSize, (PDF.Size)localObject, 0, 0, 1.5F);
            PDFZoomView.this.imageView.post(new Runnable()
            {
              public void run()
              {
                PDFZoomView.this.imageView.setImageBitmap(this.val$bitm);
              }
            });
            return;
            localSize.width = ((int)(localSize.width * 1.5F));
          }
        }
      }).start();
    }
  }
  
  public void clearAll()
  {
    removeView(this.imageView);
    this.imageView.setImageBitmap(null);
    System.gc();
  }
  
  public PDFDocumentHelper getDocumentHelper()
  {
    return this.documentHelper;
  }
  
  public int getPageIndex()
  {
    return this.pageIndex;
  }
  
  public PDF.Size getScreenSize()
  {
    return this.screenSize;
  }
  
  public void setDocumentHelper(PDFDocumentHelper paramPDFDocumentHelper)
  {
    this.documentHelper = paramPDFDocumentHelper;
    updateZoomView();
  }
  
  public void setLowResImage(Bitmap paramBitmap)
  {
    this.imageView.setImageBitmap(paramBitmap);
  }
  
  public void setPageIndex(int paramInt)
  {
    this.pageIndex = paramInt;
    updateZoomView();
  }
  
  public void setScreenSize(PDF.Size paramSize)
  {
    this.screenSize = paramSize;
  }
}
