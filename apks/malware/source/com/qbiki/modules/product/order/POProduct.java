package com.qbiki.modules.product.order;

import com.qbiki.shoppingcart.SCProductSubItem;
import java.util.ArrayList;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class POProduct
  extends SCProductSubItem
{
  private String mCategory;
  private String mDescription;
  private String mImageName;
  private ArrayList<POProductOption> mOptions;
  private ArrayList<POProductSize> mSizes;
  private String mUrlInfo;
  
  public POProduct()
  {
    this.mCategory = "undefined";
    this.mDescription = "undefined";
    this.mImageName = "undefined";
    this.mUrlInfo = "undefined";
    this.mSizes = new ArrayList();
    this.mOptions = new ArrayList();
  }
  
  public POProduct(JSONObject paramJSONObject)
  {
    try
    {
      super.setName(paramJSONObject.getString("name"));
    }
    catch (JSONException localJSONException5)
    {
      try
      {
        super.setPrice(paramJSONObject.getDouble("price"));
      }
      catch (JSONException localJSONException5)
      {
        try
        {
          this.mCategory = paramJSONObject.getString("category");
        }
        catch (JSONException localJSONException5)
        {
          try
          {
            this.mDescription = paramJSONObject.getString("description");
          }
          catch (JSONException localJSONException5)
          {
            try
            {
              this.mImageName = paramJSONObject.getString("imageName");
            }
            catch (JSONException localJSONException5)
            {
              try
              {
                for (;;)
                {
                  this.mUrlInfo = paramJSONObject.getString("urlInfo");
                  try
                  {
                    JSONArray localJSONArray = paramJSONObject.getJSONArray("sizes");
                    this.mSizes = new ArrayList();
                    j = localJSONArray.length();
                    i = 0;
                    while (i < j)
                    {
                      this.mSizes.add(new POProductSize(localJSONArray.getJSONObject(i)));
                      i += 1;
                    }
                    localJSONException1 = localJSONException1;
                    super.setName("undefined");
                  }
                  catch (JSONException localJSONException7)
                  {
                    int j;
                    int i;
                    this.mSizes = new ArrayList();
                    try
                    {
                      paramJSONObject = paramJSONObject.getJSONArray("options");
                      this.mOptions = new ArrayList();
                      j = paramJSONObject.length();
                      i = 0;
                      while (i < j)
                      {
                        this.mOptions.add(new POProductOption(paramJSONObject.getJSONObject(i)));
                        i += 1;
                      }
                      return;
                    }
                    catch (JSONException paramJSONObject)
                    {
                      this.mOptions = new ArrayList();
                    }
                  }
                  localJSONException2 = localJSONException2;
                  super.setPrice(0.0D);
                  continue;
                  localJSONException3 = localJSONException3;
                  this.mCategory = "undefined";
                  continue;
                  localJSONException4 = localJSONException4;
                  this.mDescription = "undefined";
                  continue;
                  localJSONException5 = localJSONException5;
                  this.mImageName = "undefined";
                }
              }
              catch (JSONException localJSONException6)
              {
                for (;;)
                {
                  this.mUrlInfo = "undefined";
                }
              }
            }
          }
        }
      }
    }
  }
  
  public String getCategory()
  {
    return this.mCategory;
  }
  
  public String getDescription()
  {
    return this.mDescription;
  }
  
  public String getImageName()
  {
    return this.mImageName;
  }
  
  public ArrayList<POProductOption> getOptions()
  {
    return this.mOptions;
  }
  
  public ArrayList<POProductSize> getSizes()
  {
    return this.mSizes;
  }
  
  public String getUrlInfo()
  {
    return this.mUrlInfo;
  }
  
  public void setCategory(String paramString)
  {
    this.mCategory = paramString;
  }
  
  public void setDescription(String paramString)
  {
    this.mDescription = paramString;
  }
  
  public void setImageName(String paramString)
  {
    this.mImageName = paramString;
  }
  
  public void setOptions(ArrayList<POProductOption> paramArrayList)
  {
    this.mOptions = paramArrayList;
  }
  
  public void setSizes(ArrayList<POProductSize> paramArrayList)
  {
    this.mSizes = paramArrayList;
  }
  
  public void setUrlInfo(String paramString)
  {
    this.mUrlInfo = paramString;
  }
}
