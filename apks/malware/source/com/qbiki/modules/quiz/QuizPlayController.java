package com.qbiki.modules.quiz;

import android.content.Context;
import java.util.ArrayList;

public class QuizPlayController
{
  private static QuizPlayController instance = null;
  private QuizElement currentElement;
  private QuizPlayListener currentGameScene;
  private int currentPoints;
  private ArrayList<QuizElement> currentQuiz;
  private String currentQuizBgImage;
  private Boolean currentQuizIsRandomize;
  private String currentQuizPageId;
  private int currentQuizPassedQuestions;
  private int currentQuizTotalQuestions;
  private int indexToRemove;
  private ArrayList<QuizElement> mutableQuiz;
  private int totalPoints;
  
  public QuizPlayController(Context paramContext) {}
  
  public static QuizPlayController getInstance(Context paramContext)
  {
    if ((instance == null) && (paramContext != null)) {
      instance = new QuizPlayController(paramContext);
    }
    return instance;
  }
  
  public void addToCurrentPoints(int paramInt)
  {
    this.currentPoints += paramInt;
  }
  
  public int calculateBonusPoints()
  {
    return 0;
  }
  
  public boolean checkAnswer(int paramInt)
  {
    if (this.currentElement != null) {
      return ((QuizChoice)this.currentElement.getChoices().get(paramInt)).getIsCorrect().booleanValue();
    }
    return false;
  }
  
  public void endGame() {}
  
  public void generateNextStep()
  {
    if (this.mutableQuiz.size() > 0) {
      this.mutableQuiz.remove(this.indexToRemove);
    }
    setNextElement();
  }
  
  public QuizElement getCurrentElement()
  {
    return this.currentElement;
  }
  
  public QuizPlayListener getCurrentGameScene()
  {
    return this.currentGameScene;
  }
  
  public int getCurrentPoints()
  {
    return this.currentPoints;
  }
  
  public ArrayList<QuizElement> getCurrentQuiz()
  {
    return this.currentQuiz;
  }
  
  public String getCurrentQuizBgImage()
  {
    return this.currentQuizBgImage;
  }
  
  public Boolean getCurrentQuizIsRandomize()
  {
    return this.currentQuizIsRandomize;
  }
  
  public String getCurrentQuizPageId()
  {
    return this.currentQuizPageId;
  }
  
  public int getCurrentQuizPassedQuestions()
  {
    return this.currentQuizPassedQuestions;
  }
  
  public int getCurrentQuizTotalQuestions()
  {
    return this.currentQuizTotalQuestions;
  }
  
  public int getTotalPoints()
  {
    return this.totalPoints;
  }
  
  public void incrementCurrentQuizPassedQuestions()
  {
    this.currentQuizPassedQuestions += 1;
  }
  
  public void newGame()
  {
    resetGame();
  }
  
  public void resetGame()
  {
    this.currentPoints = 0;
    this.totalPoints = 0;
    this.mutableQuiz = new ArrayList();
  }
  
  public void setCurrentElement(QuizElement paramQuizElement)
  {
    this.currentElement = paramQuizElement;
  }
  
  public void setCurrentGameScene(QuizPlayListener paramQuizPlayListener)
  {
    this.currentGameScene = paramQuizPlayListener;
  }
  
  public void setCurrentPoints(int paramInt)
  {
    this.currentPoints = paramInt;
  }
  
  public void setCurrentQuiz(ArrayList<QuizElement> paramArrayList)
  {
    this.currentQuiz = paramArrayList;
  }
  
  public void setCurrentQuizBgImage(String paramString)
  {
    this.currentQuizBgImage = paramString;
  }
  
  public void setCurrentQuizIsRandomize(Boolean paramBoolean)
  {
    this.currentQuizIsRandomize = paramBoolean;
  }
  
  public void setCurrentQuizPageId(String paramString)
  {
    this.currentQuizPageId = paramString;
  }
  
  public void setCurrentQuizPassedQuestions(int paramInt)
  {
    this.currentQuizPassedQuestions = paramInt;
  }
  
  public void setCurrentQuizTotalQuestions(int paramInt)
  {
    this.currentQuizTotalQuestions = paramInt;
  }
  
  public void setNextElement()
  {
    QuizElement localQuizElement = null;
    int i;
    if (this.mutableQuiz.size() > 0)
    {
      i = this.mutableQuiz.size();
      if (!this.currentQuizIsRandomize.booleanValue()) {
        break label61;
      }
      i = (int)(Math.random() * i);
    }
    for (this.indexToRemove = i;; this.indexToRemove = 0)
    {
      localQuizElement = (QuizElement)this.mutableQuiz.get(i);
      this.currentElement = localQuizElement;
      return;
      label61:
      i = 0;
    }
  }
  
  public void setTotalPoints(int paramInt)
  {
    this.totalPoints = paramInt;
  }
  
  public void startGame()
  {
    this.mutableQuiz = new ArrayList(this.currentQuiz);
    setNextElement();
  }
}
