package com.qbiki.modules.quiz;

import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import com.qbiki.seattleclouds.App;
import com.qbiki.seattleclouds.FragmentInfo;
import com.qbiki.seattleclouds.SCFragment;
import com.qbiki.util.AsyncTaskListener;
import com.qbiki.util.DialogUtil;
import com.qbiki.util.StyleUtil;
import java.util.ArrayList;

public class QuizRootFragment
  extends SCFragment
{
  private ArrayList<QuizElement> currentQuiz;
  private boolean isQuizRandomize;
  private View mView = null;
  private String pageId;
  private String quizBackgroundImage;
  private String quizButtonsBgImage;
  private Button quizHighScoresButton;
  private Button quizStartButton;
  private String quizTitle;
  private TextView quizTitleTW;
  private QuizPlayController sharedQuizGamePlayerController;
  private Bundle style;
  
  public QuizRootFragment() {}
  
  private void parseQuiz()
  {
    QuizPrepareResourcesAsyncTask localQuizPrepareResourcesAsyncTask = new QuizPrepareResourcesAsyncTask(this.pageId + ".json");
    localQuizPrepareResourcesAsyncTask.setAsyncTaskListener(new AsyncTaskListener()
    {
      public void asyncTaskFinished(Object paramAnonymousObject)
      {
        QuizRootFragment.access$502(QuizRootFragment.this, (ArrayList)paramAnonymousObject);
        QuizRootFragment.this.playQuiz();
      }
    });
    localQuizPrepareResourcesAsyncTask.execute(new String[0]);
  }
  
  private void playQuiz()
  {
    if (this.currentQuiz.size() > 0)
    {
      this.sharedQuizGamePlayerController.resetGame();
      this.sharedQuizGamePlayerController.setCurrentQuiz(this.currentQuiz);
      this.sharedQuizGamePlayerController.setCurrentQuizIsRandomize(Boolean.valueOf(this.isQuizRandomize));
      this.sharedQuizGamePlayerController.setCurrentQuizBgImage(this.quizBackgroundImage);
      this.sharedQuizGamePlayerController.setCurrentQuizPageId(this.pageId);
      this.sharedQuizGamePlayerController.setCurrentQuizPassedQuestions(0);
      this.sharedQuizGamePlayerController.setCurrentQuizTotalQuestions(this.currentQuiz.size());
      this.sharedQuizGamePlayerController.startGame();
      Bundle localBundle = new Bundle();
      localBundle.putBundle("PAGE_STYLE", this.style);
      App.showPage(new FragmentInfo(QuizPlayFragment.class.getName(), localBundle), this);
      return;
    }
    DialogUtil.showAlert(getActivity(), "Quiz", "Unable to start quiz. No items found.");
  }
  
  protected void init()
  {
    Bundle localBundle = getArguments();
    if (localBundle != null)
    {
      this.pageId = localBundle.getString("pageId");
      this.quizTitle = localBundle.getString("quizTitle");
      this.quizBackgroundImage = localBundle.getString("quizBgImage");
      this.quizButtonsBgImage = localBundle.getString("quizButtonsBgImage");
      this.isQuizRandomize = localBundle.getBoolean("isQuizRandomize");
      this.style = localBundle.getBundle("PAGE_STYLE");
    }
    this.sharedQuizGamePlayerController = QuizPlayController.getInstance(getActivity());
    this.quizTitleTW.setText(this.quizTitle);
    StyleUtil.setTextColor(this.quizTitleTW, this.style);
    this.quizStartButton.setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        QuizRootFragment.this.parseQuiz();
      }
    });
    this.quizHighScoresButton.setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        QuizRootFragment.this.sharedQuizGamePlayerController.setCurrentQuizPageId(QuizRootFragment.this.pageId);
        paramAnonymousView = new Bundle();
        paramAnonymousView.putString("quizBgImage", QuizRootFragment.this.quizBackgroundImage);
        paramAnonymousView.putBundle("PAGE_STYLE", QuizRootFragment.this.style);
        App.showPage(new FragmentInfo(QuizHighscoresFragement.class.getName(), paramAnonymousView), QuizRootFragment.this);
      }
    });
  }
  
  public View onCreateView(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, Bundle paramBundle)
  {
    this.mView = paramLayoutInflater.inflate(2130903199, paramViewGroup, false);
    this.quizTitleTW = ((TextView)this.mView.findViewById(2131100159));
    this.quizStartButton = ((Button)this.mView.findViewById(2131100160));
    this.quizHighScoresButton = ((Button)this.mView.findViewById(2131100161));
    init();
    StyleUtil.setBackground(this.mView, this.style);
    return this.mView;
  }
  
  public void onPause()
  {
    super.onPause();
  }
  
  public void onResume()
  {
    super.onResume();
  }
  
  public void onViewCreated(View paramView, Bundle paramBundle)
  {
    this.quizTitleTW.setText(this.quizTitle);
    paramView.setBackgroundDrawable(App.getDrawableResource(this.quizBackgroundImage));
    this.quizStartButton.setBackgroundDrawable(App.getDrawableResource(this.quizButtonsBgImage));
    this.quizHighScoresButton.setBackgroundDrawable(App.getDrawableResource(this.quizButtonsBgImage));
    StyleUtil.setBackground(this.mView, this.style);
    super.onViewCreated(paramView, paramBundle);
  }
  
  public void startActivityForResult(Intent paramIntent, int paramInt)
  {
    super.startActivityForResult(paramIntent, paramInt);
  }
}
