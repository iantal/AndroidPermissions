package com.qbiki.modules.videolist;

import android.annotation.SuppressLint;
import android.app.IntentService;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Binder;
import android.os.Build.VERSION;
import android.os.IBinder;
import android.os.ResultReceiver;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.Set;

public class DownloadService
  extends IntentService
{
  public static final String TAG = DownloadService.class.getSimpleName();
  public static final int UPDATE_PROGRESS = 8344;
  static HashMap<String, HashMap<String, DownloadFileAsyncTask>> appTasks;
  private final IBinder mBinder = new DownloadServiceBinder();
  private ResultReceiver receiver;
  
  public DownloadService()
  {
    super("DownloadService");
  }
  
  public void cancelDownload(String paramString, Integer paramInteger)
  {
    if (appTasks != null)
    {
      paramString = (HashMap)appTasks.get(paramString);
      if (paramString != null) {
        break label22;
      }
    }
    label22:
    do
    {
      return;
      paramString = (DownloadFileAsyncTask)paramString.get(paramInteger.toString());
    } while (paramString == null);
    paramString.cancel(true);
  }
  
  public String getInfo()
  {
    return "my info";
  }
  
  public ResultReceiver getReceiver()
  {
    return this.receiver;
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    return this.mBinder;
  }
  
  @SuppressLint({"NewApi"})
  protected void onHandleIntent(Intent paramIntent)
  {
    Object localObject = paramIntent.getStringExtra("url");
    String str2 = paramIntent.getStringExtra("destination");
    String str1 = paramIntent.getStringExtra("resid");
    Integer localInteger = Integer.valueOf(paramIntent.getIntExtra("pos", 1));
    this.receiver = ((ResultReceiver)paramIntent.getParcelableExtra("receiver"));
    DownloadFileAsyncTask localDownloadFileAsyncTask = new DownloadFileAsyncTask();
    localDownloadFileAsyncTask.setReceiver(this.receiver);
    localDownloadFileAsyncTask.setPos(localInteger.intValue());
    if (Build.VERSION.SDK_INT >= 11) {
      localDownloadFileAsyncTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, new String[] { localObject, str2 });
    }
    for (;;)
    {
      if (appTasks == null) {
        appTasks = new HashMap();
      }
      localObject = (HashMap)appTasks.get(str1);
      paramIntent = (Intent)localObject;
      if (localObject == null) {
        paramIntent = new HashMap();
      }
      paramIntent.put(localInteger.toString(), localDownloadFileAsyncTask);
      appTasks.put(str1, paramIntent);
      return;
      localDownloadFileAsyncTask.execute(new String[] { localObject, str2 });
    }
  }
  
  public void setReceiver(ResultReceiver paramResultReceiver, String paramString)
  {
    this.receiver = paramResultReceiver;
    if (appTasks != null)
    {
      paramString = (HashMap)appTasks.get(paramString);
      if (paramString != null) {
        break label27;
      }
    }
    for (;;)
    {
      return;
      label27:
      paramString = paramString.entrySet().iterator();
      while (paramString.hasNext())
      {
        DownloadFileAsyncTask localDownloadFileAsyncTask = (DownloadFileAsyncTask)((Map.Entry)paramString.next()).getValue();
        if (localDownloadFileAsyncTask != null) {
          localDownloadFileAsyncTask.setReceiver(paramResultReceiver);
        }
      }
    }
  }
  
  public class DownloadServiceBinder
    extends Binder
  {
    public DownloadServiceBinder() {}
    
    public DownloadService getService()
    {
      return DownloadService.this;
    }
  }
}
