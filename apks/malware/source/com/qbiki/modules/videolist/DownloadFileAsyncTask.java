package com.qbiki.modules.videolist;

import android.os.AsyncTask;
import android.os.Bundle;
import android.os.ResultReceiver;
import android.util.Log;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.net.URLConnection;

class DownloadFileAsyncTask
  extends AsyncTask<String, Integer, Void>
{
  private static final String TAG = DownloadFileAsyncTask.class.getSimpleName();
  public static final int UPDATE_PROGRESS = 8344;
  private int position;
  private ResultReceiver receiver;
  
  DownloadFileAsyncTask() {}
  
  private void DownloadFile(String paramString1, String paramString2)
  {
    try
    {
      paramString1 = new URL(paramString1);
      Object localObject = paramString1.openConnection();
      ((URLConnection)localObject).connect();
      int i = ((URLConnection)localObject).getContentLength();
      paramString1 = new BufferedInputStream(paramString1.openStream());
      localObject = new FileOutputStream(paramString2);
      byte[] arrayOfByte = new byte['â €'];
      long l = 0L;
      do
      {
        int j = paramString1.read(arrayOfByte);
        if (j == -1) {
          break;
        }
        l += j;
        publishProgress(new Integer[] { Integer.valueOf((int)(100L * l / i)) });
        ((OutputStream)localObject).write(arrayOfByte, 0, j);
      } while (!isCancelled());
      ((OutputStream)localObject).flush();
      ((OutputStream)localObject).close();
      paramString1.close();
      paramString1 = new File(paramString2);
      if (paramString1.exists()) {
        paramString1.delete();
      }
      publishProgress(new Integer[] { Integer.valueOf(-1) });
      return;
      ((OutputStream)localObject).flush();
      ((OutputStream)localObject).close();
      paramString1.close();
      return;
    }
    catch (IOException paramString1)
    {
      paramString2 = new File(paramString2);
      if (paramString2.exists()) {
        paramString2.delete();
      }
      Log.e(TAG, "Download error" + paramString1, paramString1);
      publishProgress(new Integer[] { Integer.valueOf(-1) });
    }
  }
  
  protected Void doInBackground(String... paramVarArgs)
  {
    DownloadFile(paramVarArgs[0], paramVarArgs[1]);
    return null;
  }
  
  protected void onPostExecute()
  {
    Bundle localBundle = new Bundle();
    localBundle.putInt("progress", 100);
    localBundle.putInt("pos", this.position);
    localBundle.putInt("hash", this.receiver.hashCode());
    localBundle.putString("state", "done");
    this.receiver.send(8344, localBundle);
  }
  
  protected void onProgressUpdate(Integer... paramVarArgs)
  {
    Bundle localBundle = new Bundle();
    localBundle.putInt("progress", paramVarArgs[0].intValue());
    localBundle.putInt("pos", this.position);
    localBundle.putString("state", "downloading");
    this.receiver.send(8344, localBundle);
  }
  
  public void setPos(int paramInt)
  {
    this.position = paramInt;
  }
  
  public void setReceiver(ResultReceiver paramResultReceiver)
  {
    this.receiver = paramResultReceiver;
  }
}
