package com.qbiki.modules.sharepoint;

import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import java.util.ArrayList;
import java.util.HashMap;

public class SPList
  implements Parcelable
{
  public static final Parcelable.Creator<SPList> CREATOR = new Parcelable.Creator()
  {
    public SPList createFromParcel(Parcel paramAnonymousParcel)
    {
      return new SPList(paramAnonymousParcel, null);
    }
    
    public SPList[] newArray(int paramAnonymousInt)
    {
      return new SPList[paramAnonymousInt];
    }
  };
  public int baseType = -1;
  private String createDate;
  public String defaultViewUrl;
  public String description;
  public String docTemplateUrl;
  public ArrayList<Object> fieldsOfList;
  public String idList;
  public String imageUrl;
  public boolean isFile;
  public boolean isItem;
  public int itemCount = 0;
  private String lastDeletedDate;
  public ArrayList<String> lookUpFieldsIndexes = new ArrayList();
  private String modifiedDate;
  public String name;
  private int serverTemplate = -1;
  public HashMap<String, String> serverTemplateNumbers;
  public String title;
  public int version = -1;
  public String webFullUrl;
  
  public SPList()
  {
    this.serverTemplateNumbers = new HashMap();
    this.serverTemplateNumbers.put("100", "Generic list");
    this.serverTemplateNumbers.put("101", "Document library");
    this.serverTemplateNumbers.put("102", "Survey");
    this.serverTemplateNumbers.put("103", "Links list");
    this.serverTemplateNumbers.put("104", "Announcements list");
    this.serverTemplateNumbers.put("105", "Contacts list");
    this.serverTemplateNumbers.put("106", "Events list");
    this.serverTemplateNumbers.put("107", "Tasks list");
    this.serverTemplateNumbers.put("108", "Discussion board");
    this.serverTemplateNumbers.put("109", "Picture library");
    this.serverTemplateNumbers.put("110", "Data sources");
    this.serverTemplateNumbers.put("111", "Site template gallery");
    this.serverTemplateNumbers.put("112", "User Information list");
    this.serverTemplateNumbers.put("113", "Web Part gallery");
    this.serverTemplateNumbers.put("114", "List template gallery");
    this.serverTemplateNumbers.put("115", "XML Form library");
    this.serverTemplateNumbers.put("116", "Master pages gallery");
    this.serverTemplateNumbers.put("117", "No-Code Workflows");
    this.serverTemplateNumbers.put("118", "Custom Workflow Process");
    this.serverTemplateNumbers.put("119", "Wiki Page library");
    this.serverTemplateNumbers.put("120", "Custom grid for a list");
    this.serverTemplateNumbers.put("130", "Data Connection library");
    this.serverTemplateNumbers.put("140", "Workflow History");
    this.serverTemplateNumbers.put("150", "Gantt Tasks list");
    this.serverTemplateNumbers.put("200", "Meeting Series list");
    this.serverTemplateNumbers.put("201", "Meeting Agenda list");
    this.serverTemplateNumbers.put("202", "Meeting Attendees list");
    this.serverTemplateNumbers.put("204", "Meeting Decisions list");
    this.serverTemplateNumbers.put("207", "Meeting Objectives list");
    this.serverTemplateNumbers.put("210", "Meeting text box");
    this.serverTemplateNumbers.put("211", "Meeting Things To Bring list");
    this.serverTemplateNumbers.put("212", "Meeting Workspace Pages list");
    this.serverTemplateNumbers.put("300", "Portal Sites list");
    this.serverTemplateNumbers.put("301", "Blog Posts list");
    this.serverTemplateNumbers.put("302", "Blog Comments list");
    this.serverTemplateNumbers.put("303", "Blog Categories list");
    this.serverTemplateNumbers.put("850", "Page Library");
    this.serverTemplateNumbers.put("1100", "Issue tracking");
    this.serverTemplateNumbers.put("1200", "Administrator tasks list");
    this.serverTemplateNumbers.put("2002", "Personal document library");
    this.serverTemplateNumbers.put("2003", "Private document library");
  }
  
  private SPList(Parcel paramParcel)
  {
    this.docTemplateUrl = paramParcel.readString();
    this.defaultViewUrl = paramParcel.readString();
    this.idList = paramParcel.readString();
    this.title = paramParcel.readString();
    this.description = paramParcel.readString();
    this.imageUrl = paramParcel.readString();
    this.name = paramParcel.readString();
    this.baseType = paramParcel.readInt();
    this.createDate = paramParcel.readString();
    this.modifiedDate = paramParcel.readString();
    this.lastDeletedDate = paramParcel.readString();
    this.version = paramParcel.readInt();
    this.itemCount = paramParcel.readInt();
    this.webFullUrl = paramParcel.readString();
    this.serverTemplate = paramParcel.readInt();
    this.serverTemplateNumbers = ((HashMap)paramParcel.readSerializable());
    this.fieldsOfList = paramParcel.readArrayList(SPField.class.getClassLoader());
    paramParcel.readStringList(this.lookUpFieldsIndexes);
    if (paramParcel.readInt() == 1)
    {
      bool1 = true;
      this.isItem = bool1;
      if (paramParcel.readInt() != 1) {
        break label226;
      }
    }
    label226:
    for (boolean bool1 = bool2;; bool1 = false)
    {
      this.isFile = bool1;
      return;
      bool1 = false;
      break;
    }
  }
  
  public SPList(String paramString)
  {
    this();
    this.idList = paramString;
    this.itemCount = 5000;
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public String getCreateDate()
  {
    return this.createDate;
  }
  
  public String getLastDeletedDate()
  {
    return this.lastDeletedDate;
  }
  
  public String getModifiedDate()
  {
    return this.modifiedDate;
  }
  
  public Integer getServerTemplate()
  {
    return Integer.valueOf(this.serverTemplate);
  }
  
  public void setCreateDate(String paramString)
  {
    this.createDate = paramString;
  }
  
  public void setLastDeletedDate(String paramString)
  {
    this.lastDeletedDate = paramString;
  }
  
  public void setModifiedDate(String paramString)
  {
    this.modifiedDate = paramString;
  }
  
  public void setServerTemplate(Integer paramInteger)
  {
    this.serverTemplate = paramInteger.intValue();
    paramInteger = (String)this.serverTemplateNumbers.get(paramInteger.toString());
    if ((paramInteger != null) && ((paramInteger.indexOf("list") != -1) || (paramInteger.indexOf("History") != -1) || (paramInteger.indexOf("tracking") != -1) || (paramInteger.indexOf("board") != -1)))
    {
      this.isItem = true;
      this.isFile = false;
      return;
    }
    this.isItem = false;
    this.isFile = true;
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    int i = 1;
    paramParcel.writeString(this.docTemplateUrl);
    paramParcel.writeString(this.defaultViewUrl);
    paramParcel.writeString(this.idList);
    paramParcel.writeString(this.title);
    paramParcel.writeString(this.description);
    paramParcel.writeString(this.imageUrl);
    paramParcel.writeString(this.name);
    paramParcel.writeInt(this.baseType);
    paramParcel.writeString(this.createDate);
    paramParcel.writeString(this.modifiedDate);
    paramParcel.writeString(this.lastDeletedDate);
    paramParcel.writeInt(this.version);
    paramParcel.writeInt(this.itemCount);
    paramParcel.writeString(this.webFullUrl);
    paramParcel.writeInt(this.serverTemplate);
    paramParcel.writeSerializable(this.serverTemplateNumbers);
    paramParcel.writeList(this.fieldsOfList);
    paramParcel.writeStringList(this.lookUpFieldsIndexes);
    if (this.isItem)
    {
      paramInt = 1;
      paramParcel.writeInt(paramInt);
      if (!this.isFile) {
        break label180;
      }
    }
    label180:
    for (paramInt = i;; paramInt = 0)
    {
      paramParcel.writeInt(paramInt);
      return;
      paramInt = 0;
      break;
    }
  }
}
