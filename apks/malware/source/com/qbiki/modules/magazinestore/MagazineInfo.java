package com.qbiki.modules.magazinestore;

import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import java.text.DateFormat;
import java.util.Date;
import org.xml.sax.Attributes;

public class MagazineInfo
  implements Parcelable
{
  public static final Parcelable.Creator<MagazineInfo> CREATOR = new Parcelable.Creator()
  {
    public MagazineInfo createFromParcel(Parcel paramAnonymousParcel)
    {
      return new MagazineInfo(paramAnonymousParcel);
    }
    
    public MagazineInfo[] newArray(int paramAnonymousInt)
    {
      return new MagazineInfo[paramAnonymousInt];
    }
  };
  private static DateFormat dateFormat = DateFormat.getDateInstance(2);
  public String contentPage;
  public String coverName;
  public String description;
  public String productIdentifier;
  public boolean productOwned = false;
  public String productPrice;
  public Date publishDate;
  public String title;
  
  public MagazineInfo() {}
  
  public MagazineInfo(Parcel paramParcel)
  {
    this.title = paramParcel.readString();
    this.coverName = paramParcel.readString();
    this.description = paramParcel.readString();
    this.publishDate = new Date(paramParcel.readLong());
    this.contentPage = paramParcel.readString();
    this.productIdentifier = paramParcel.readString();
    if (paramParcel.readInt() == 1) {}
    for (;;)
    {
      this.productOwned = bool;
      this.productPrice = paramParcel.readString();
      return;
      bool = false;
    }
  }
  
  public MagazineInfo(Attributes paramAttributes)
  {
    this.title = paramAttributes.getValue("title");
    this.coverName = paramAttributes.getValue("coverName");
    this.contentPage = paramAttributes.getValue("pageToOpen");
    setPublishDateFromTimeStamp(paramAttributes.getValue("publishDate"));
    this.productIdentifier = paramAttributes.getValue("productIdentifier");
    if (this.productIdentifier != null) {
      this.productIdentifier = this.productIdentifier.trim();
    }
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public void setPublishDateFromTimeStamp(String paramString)
  {
    long l1 = 0L;
    try
    {
      long l2 = Long.parseLong(paramString.trim());
      l1 = l2 * 1000L;
    }
    catch (Exception paramString)
    {
      for (;;) {}
    }
    this.publishDate = new Date(l1);
  }
  
  public String toString()
  {
    if (this.description != null) {}
    for (String str1 = this.description.trim();; str1 = "")
    {
      str1.replace("\n", "\\n");
      String str2 = str1;
      if (str1.length() > 21) {
        str2 = str1.substring(0, 20);
      }
      return "MagazineInfo [title=" + this.title + ", coverName=" + this.coverName + ", description=" + str2 + ", publishDate=" + dateFormat.format(this.publishDate) + ", contentPage=" + this.contentPage + ", productIdentifier=" + this.productIdentifier + ", productPrice=" + this.productPrice + ", productOwned=" + this.productOwned + "]";
    }
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    paramParcel.writeString(this.title);
    paramParcel.writeString(this.coverName);
    paramParcel.writeString(this.description);
    paramParcel.writeLong(this.publishDate.getTime());
    paramParcel.writeString(this.contentPage);
    paramParcel.writeString(this.productIdentifier);
    if (this.productOwned) {}
    for (paramInt = 1;; paramInt = 0)
    {
      paramParcel.writeInt(paramInt);
      paramParcel.writeString(this.productPrice);
      return;
    }
  }
}
