package com.qbiki.modules.pdfeditorreader;

import android.content.DialogInterface;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnCompletionListener;
import android.media.MediaPlayer.OnErrorListener;
import android.media.MediaPlayer.OnPreparedListener;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.FragmentActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.TextView;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;

public class PDFVideoFragment
  extends DialogFragment
  implements MediaPlayer.OnPreparedListener, MediaPlayer.OnCompletionListener, MediaPlayer.OnErrorListener
{
  public static final String VIDEO_FILE_PATH = "VIDEO_FILE_PATH";
  public static final String VIDEO_URI_STRING = "VIDEO_URI_STRING";
  private TextView durationdText = null;
  private TextView elapsedText = null;
  private ImageButton ffButton = null;
  private View fview = null;
  boolean isDialog = false;
  private ImageButton playPauseButton = null;
  private ImageButton rewButton = null;
  private SeekBar seekBar = null;
  private Timer timer = null;
  private VideoViewFD vv = null;
  
  public PDFVideoFragment() {}
  
  private void startTimer()
  {
    if (this.timer == null)
    {
      this.timer = new Timer();
      this.timer.schedule(new TimerTask()
      {
        public void run()
        {
          PDFVideoFragment.this.updateAudioProgress();
        }
      }, 500L, 500L);
    }
  }
  
  private void stopTimer()
  {
    if (this.timer != null)
    {
      this.timer.cancel();
      this.timer.purge();
      this.timer = null;
    }
  }
  
  public int getCurrentPosition()
  {
    if (this.vv == null) {
      return 1;
    }
    return this.vv.getCurrentPosition();
  }
  
  public int getDuration()
  {
    return this.vv.getDuration();
  }
  
  public boolean isPlaying()
  {
    return this.vv.isPlaying();
  }
  
  public void onCancel(DialogInterface paramDialogInterface)
  {
    super.onCancel(paramDialogInterface);
    stopTimer();
    this.vv.stopPlayback();
    this.vv = null;
  }
  
  public void onCompletion(MediaPlayer paramMediaPlayer)
  {
    pause();
    this.vv.seekTo(0);
    updateAudioProgress();
  }
  
  public View onCreateView(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, Bundle paramBundle)
  {
    this.fview = paramLayoutInflater.inflate(2130903186, paramViewGroup, false);
    paramBundle = getArguments();
    paramLayoutInflater = null;
    int i = 1;
    int j = 1;
    if (paramBundle != null)
    {
      paramViewGroup = paramBundle.getString("VIDEO_URI_STRING");
      i = j;
      paramLayoutInflater = paramViewGroup;
      if (paramViewGroup == null)
      {
        paramLayoutInflater = paramBundle.getString("VIDEO_FILE_PATH");
        i = 0;
      }
      j = paramBundle.getInt("pwidth", 500);
      int k = paramBundle.getInt("pheight", 400);
      this.fview.setMinimumWidth(j);
      this.fview.setMinimumHeight(k);
      this.isDialog = paramBundle.getBoolean("isDialog");
    }
    this.vv = ((VideoViewFD)this.fview.findViewById(2131100105));
    this.playPauseButton = ((ImageButton)this.fview.findViewById(2131100029));
    this.rewButton = ((ImageButton)this.fview.findViewById(2131100028));
    this.ffButton = ((ImageButton)this.fview.findViewById(2131100030));
    this.elapsedText = ((TextView)this.fview.findViewById(2131100031));
    this.durationdText = ((TextView)this.fview.findViewById(2131100033));
    this.seekBar = ((SeekBar)this.fview.findViewById(2131100032));
    this.playPauseButton.setEnabled(false);
    this.rewButton.setEnabled(false);
    this.ffButton.setEnabled(false);
    this.seekBar.setEnabled(false);
    if (paramLayoutInflater != null)
    {
      if (i == 0) {
        break label291;
      }
      this.vv.setVideoURI(Uri.parse(paramLayoutInflater));
    }
    for (;;)
    {
      this.vv.setOnPreparedListener(this);
      this.vv.requestFocus();
      return this.fview;
      label291:
      paramViewGroup = new File(paramLayoutInflater);
      paramLayoutInflater = null;
      try
      {
        paramViewGroup = new FileInputStream(paramViewGroup);
        try
        {
          this.vv.setVideoFD(paramViewGroup.getFD());
        }
        catch (IOException paramLayoutInflater)
        {
          paramLayoutInflater = paramViewGroup;
        }
      }
      catch (IOException paramViewGroup)
      {
        for (;;) {}
      }
      if (paramLayoutInflater != null) {
        try
        {
          paramLayoutInflater.close();
        }
        catch (IOException paramLayoutInflater) {}
      }
    }
  }
  
  public boolean onError(MediaPlayer paramMediaPlayer, int paramInt1, int paramInt2)
  {
    this.playPauseButton.setEnabled(true);
    this.rewButton.setEnabled(true);
    this.ffButton.setEnabled(true);
    this.seekBar.setEnabled(true);
    return false;
  }
  
  public void onHiddenChanged(boolean paramBoolean)
  {
    if (paramBoolean) {
      this.vv.pause();
    }
    super.onHiddenChanged(paramBoolean);
  }
  
  public void onPrepared(MediaPlayer paramMediaPlayer)
  {
    new Handler().post(new Runnable()
    {
      public void run()
      {
        PDFVideoFragment.this.elapsedText.setText("00:00");
        int i = PDFVideoFragment.this.getDuration() / 1000;
        PDFVideoFragment.this.durationdText.setText(i / 60 + ":" + i % 60);
        PDFVideoFragment.this.seekBar.setMax(i);
        PDFVideoFragment.this.playPauseButton.setEnabled(true);
        PDFVideoFragment.this.rewButton.setEnabled(true);
        PDFVideoFragment.this.ffButton.setEnabled(true);
        PDFVideoFragment.this.seekBar.setEnabled(true);
        PDFVideoFragment.this.playPauseButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymous2View)
          {
            if (PDFVideoFragment.this.isPlaying())
            {
              PDFVideoFragment.this.pause();
              return;
            }
            PDFVideoFragment.this.start();
          }
        });
        PDFVideoFragment.this.ffButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymous2View)
          {
            PDFVideoFragment.this.seekTo(PDFVideoFragment.this.getCurrentPosition() / 1000 + 2);
          }
        });
        PDFVideoFragment.this.rewButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymous2View)
          {
            PDFVideoFragment.this.seekTo(PDFVideoFragment.this.getCurrentPosition() / 1000 - 2);
          }
        });
        PDFVideoFragment.this.seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener()
        {
          public void onProgressChanged(SeekBar paramAnonymous2SeekBar, int paramAnonymous2Int, boolean paramAnonymous2Boolean)
          {
            if (paramAnonymous2Boolean) {
              PDFVideoFragment.this.seekTo(paramAnonymous2Int);
            }
            PDFVideoFragment.this.elapsedText.setText(paramAnonymous2Int / 60 + ":" + paramAnonymous2Int % 60);
          }
          
          public void onStartTrackingTouch(SeekBar paramAnonymous2SeekBar)
          {
            PDFVideoFragment.this.pause();
          }
          
          public void onStopTrackingTouch(SeekBar paramAnonymous2SeekBar)
          {
            PDFVideoFragment.this.start();
          }
        });
        PDFVideoFragment.this.start();
      }
    });
  }
  
  public void onResume()
  {
    super.onResume();
    if (this.vv == null)
    {
      if (this.isDialog) {
        dismiss();
      }
    }
    else {
      return;
    }
    getActivity().finish();
  }
  
  public void onStop()
  {
    super.onStop();
    if (this.vv != null)
    {
      pause();
      this.vv.stopPlayback();
      ((LinearLayout)this.fview).removeView(this.vv);
      this.vv = null;
    }
  }
  
  public void pause()
  {
    this.vv.pause();
    this.playPauseButton.setImageResource(17301540);
    stopTimer();
  }
  
  public void seekTo(int paramInt)
  {
    this.vv.seekTo(paramInt * 1000);
  }
  
  public void start()
  {
    startTimer();
    updateAudioProgress();
    this.playPauseButton.setImageResource(17301539);
    this.vv.start();
  }
  
  protected void updateAudioProgress()
  {
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        int i = PDFVideoFragment.this.getCurrentPosition() / 1000;
        PDFVideoFragment.this.seekBar.setProgress(i);
        PDFVideoFragment.this.elapsedText.setText(i / 60 + ":" + i % 60);
      }
    });
  }
}
