package com.qbiki.modules.messenger;

import android.app.Dialog;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Toast;
import com.facebook.android.DialogError;
import com.facebook.android.Facebook;
import com.facebook.android.Facebook.DialogListener;
import com.facebook.android.FacebookError;
import com.facebook.android.SessionEvents;
import com.google.android.gms.auth.GoogleAuthException;
import com.google.android.gms.auth.GoogleAuthUtil;
import com.google.android.gms.auth.GooglePlayServicesAvailabilityException;
import com.google.android.gms.auth.UserRecoverableAuthException;
import com.google.android.gms.common.AccountPicker;
import com.google.android.gms.common.GooglePlayServicesUtil;
import com.qbiki.scapi.HttpResponseException;
import com.qbiki.scapi.SCApi;
import com.qbiki.scapi.SCApiException;
import com.qbiki.scapi.SCApiRequestAsyncTask;
import com.qbiki.seattleclouds.App;
import com.qbiki.seattleclouds.AppConfig;
import com.qbiki.seattleclouds.SCFragment;
import com.qbiki.util.DataUtil;
import com.qbiki.util.DialogUtil;
import com.qbiki.util.ViewUtil;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import org.json.JSONException;
import org.json.JSONObject;

public class AppSignInFragment
  extends SCFragment
{
  private static final boolean DEBUG = false;
  private static final String OAUTH_SCOPE = "oauth2:https://www.googleapis.com/auth/userinfo.profile";
  private static final int REQUEST_CODE_CHOOSE_ACCOUNT = 1002;
  private static final int REQUEST_CODE_RECOVER_FROM_AUTH_ERROR = 1003;
  private static final int REQUEST_CODE_RECOVER_FROM_PLAY_SERVICES_ERROR = 1001;
  private static final String TAG = "AppSignInFragment";
  private Facebook facebook;
  private View mContentView;
  private View mLoadingView;
  private String mSelectedGoogleAccount = null;
  private int mShortAnimationDuration;
  private Button mSignInWithFacebookButton;
  private Button mSignInWithGoogleButton;
  
  public AppSignInFragment() {}
  
  private boolean checkGooglePlayServicesAvailable(boolean paramBoolean)
  {
    int i = GooglePlayServicesUtil.isGooglePlayServicesAvailable(getActivity());
    if (GooglePlayServicesUtil.isUserRecoverableError(i))
    {
      if (paramBoolean) {
        GooglePlayServicesUtil.getErrorDialog(i, getActivity(), 1001).show();
      }
      return false;
    }
    return true;
  }
  
  private void chooseAccount()
  {
    startActivityForResult(AccountPicker.newChooseAccountIntent(null, null, new String[] { "com.google" }, false, null, null, null, null), 1002);
  }
  
  private void executeAuthWithFacebookTask()
  {
    new FacebookSignInAsyncTask(null).execute(new String[0]);
  }
  
  private void executeAuthWithGoogleAsyncTask()
  {
    new GoogleSignInAsyncTask(this.mSelectedGoogleAccount, "oauth2:https://www.googleapis.com/auth/userinfo.profile", 1003).execute(new Void[0]);
  }
  
  private Facebook getFacebook()
  {
    if (this.facebook == null) {
      this.facebook = new Facebook(App.appConfig.getFacebookAppID());
    }
    return this.facebook;
  }
  
  private void setLoadingInProgress(boolean paramBoolean1, boolean paramBoolean2)
  {
    View localView1;
    if (paramBoolean1)
    {
      localView1 = this.mLoadingView;
      if (!paramBoolean1) {
        break label42;
      }
    }
    label42:
    for (View localView2 = this.mContentView;; localView2 = this.mLoadingView)
    {
      if (!paramBoolean2) {
        break label51;
      }
      ViewUtil.crossFadeViews(localView1, localView2, this.mShortAnimationDuration);
      return;
      localView1 = this.mContentView;
      break;
    }
    label51:
    localView1.setVisibility(0);
    localView2.setVisibility(8);
  }
  
  private void showError(final String paramString)
  {
    if (getActivity() == null) {
      return;
    }
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        AppSignInFragment.this.setLoadingInProgress(false, true);
        DialogUtil.showAlert(AppSignInFragment.this.getActivity(), 2131361915, paramString);
      }
    });
  }
  
  private void showPlayServicesErrorDialog(final int paramInt)
  {
    if (getActivity() == null) {
      return;
    }
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        GooglePlayServicesUtil.getErrorDialog(paramInt, AppSignInFragment.this.getActivity(), 1001).show();
      }
    });
  }
  
  private void startSignInWithFacebookProcess()
  {
    Facebook localFacebook = getFacebook();
    FragmentActivity localFragmentActivity = getActivity();
    Facebook.DialogListener local4 = new Facebook.DialogListener()
    {
      public void onCancel()
      {
        SessionEvents.onLoginError("Action Canceled");
      }
      
      public void onComplete(Bundle paramAnonymousBundle)
      {
        SessionEvents.onLoginSuccess();
        AppSignInFragment.this.executeAuthWithFacebookTask();
      }
      
      public void onError(DialogError paramAnonymousDialogError)
      {
        SessionEvents.onLoginError(paramAnonymousDialogError.getMessage());
        Toast.makeText(AppSignInFragment.this.getActivity(), paramAnonymousDialogError.getMessage(), 1).show();
      }
      
      public void onFacebookError(FacebookError paramAnonymousFacebookError)
      {
        SessionEvents.onLoginError(paramAnonymousFacebookError.getMessage());
        Toast.makeText(AppSignInFragment.this.getActivity(), paramAnonymousFacebookError.getMessage(), 1).show();
      }
    };
    localFacebook.authorize(localFragmentActivity, new String[] { "user_about_me", "email" }, -1, local4);
  }
  
  private void startSignInWithGoogleProcess()
  {
    if (this.mSelectedGoogleAccount == null)
    {
      chooseAccount();
      return;
    }
    executeAuthWithGoogleAsyncTask();
  }
  
  public void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    super.onActivityResult(paramInt1, paramInt2, paramIntent);
    switch (paramInt1)
    {
    default: 
    case 1001: 
    case 1002: 
      do
      {
        return;
        if (paramInt2 == -1)
        {
          startSignInWithGoogleProcess();
          return;
        }
        checkGooglePlayServicesAvailable(true);
        return;
      } while ((paramInt2 != -1) || (paramIntent == null) || (paramIntent.getExtras() == null));
      paramIntent = paramIntent.getStringExtra("authAccount");
      if (paramIntent != null) {
        this.mSelectedGoogleAccount = paramIntent;
      }
      executeAuthWithGoogleAsyncTask();
      return;
    }
    if (paramInt2 == -1)
    {
      executeAuthWithGoogleAsyncTask();
      return;
    }
    setLoadingInProgress(false, true);
  }
  
  public View onCreateView(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, Bundle paramBundle)
  {
    paramLayoutInflater = paramLayoutInflater.inflate(2130903128, paramViewGroup, false);
    this.mContentView = paramLayoutInflater.findViewById(2131099901);
    this.mLoadingView = paramLayoutInflater.findViewById(2131099905);
    this.mShortAnimationDuration = getResources().getInteger(17694720);
    this.mSignInWithGoogleButton = ((Button)paramLayoutInflater.findViewById(2131099903));
    this.mSignInWithFacebookButton = ((Button)paramLayoutInflater.findViewById(2131099904));
    this.mSignInWithGoogleButton.setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        if (AppSignInFragment.this.checkGooglePlayServicesAvailable(true)) {
          AppSignInFragment.this.startSignInWithGoogleProcess();
        }
      }
    });
    this.mSignInWithFacebookButton.setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        AppSignInFragment.this.startSignInWithFacebookProcess();
      }
    });
    return paramLayoutInflater;
  }
  
  private class FacebookSignInAsyncTask
    extends AsyncTask<String, Void, String>
  {
    private FacebookSignInAsyncTask() {}
    
    /* Error */
    protected String doInBackground(String... paramVarArgs)
    {
      // Byte code:
      //   0: aload_0
      //   1: getfield 14	com/qbiki/modules/messenger/AppSignInFragment$FacebookSignInAsyncTask:this$0	Lcom/qbiki/modules/messenger/AppSignInFragment;
      //   4: invokestatic 38	com/qbiki/modules/messenger/AppSignInFragment:access$800	(Lcom/qbiki/modules/messenger/AppSignInFragment;)Lcom/facebook/android/Facebook;
      //   7: astore_3
      //   8: aload_3
      //   9: ifnull +208 -> 217
      //   12: aload_3
      //   13: invokevirtual 44	com/facebook/android/Facebook:isSessionValid	()Z
      //   16: ifeq +201 -> 217
      //   19: new 46	org/json/JSONObject
      //   22: dup
      //   23: aload_3
      //   24: ldc 48
      //   26: invokevirtual 52	com/facebook/android/Facebook:request	(Ljava/lang/String;)Ljava/lang/String;
      //   29: invokespecial 55	org/json/JSONObject:<init>	(Ljava/lang/String;)V
      //   32: astore 6
      //   34: aload_3
      //   35: invokevirtual 59	com/facebook/android/Facebook:getAccessToken	()Ljava/lang/String;
      //   38: astore 4
      //   40: aload 6
      //   42: ldc 61
      //   44: invokevirtual 64	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
      //   47: astore 5
      //   49: ldc 66
      //   51: astore_2
      //   52: aload 6
      //   54: ldc 68
      //   56: invokevirtual 72	org/json/JSONObject:has	(Ljava/lang/String;)Z
      //   59: ifeq +29 -> 88
      //   62: new 74	java/lang/StringBuilder
      //   65: dup
      //   66: invokespecial 75	java/lang/StringBuilder:<init>	()V
      //   69: ldc 66
      //   71: invokevirtual 79	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   74: aload 6
      //   76: ldc 68
      //   78: invokevirtual 64	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
      //   81: invokevirtual 79	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   84: invokevirtual 82	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   87: astore_2
      //   88: aload_2
      //   89: astore_1
      //   90: aload_2
      //   91: invokevirtual 88	java/lang/String:length	()I
      //   94: ifne +40 -> 134
      //   97: aload_2
      //   98: astore_1
      //   99: aload 6
      //   101: ldc 90
      //   103: invokevirtual 72	org/json/JSONObject:has	(Ljava/lang/String;)Z
      //   106: ifeq +28 -> 134
      //   109: new 74	java/lang/StringBuilder
      //   112: dup
      //   113: invokespecial 75	java/lang/StringBuilder:<init>	()V
      //   116: aload_2
      //   117: invokevirtual 79	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   120: aload 6
      //   122: ldc 90
      //   124: invokevirtual 64	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
      //   127: invokevirtual 79	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   130: invokevirtual 82	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   133: astore_1
      //   134: aload_1
      //   135: astore_2
      //   136: aload_1
      //   137: invokevirtual 88	java/lang/String:length	()I
      //   140: ifne +23 -> 163
      //   143: new 74	java/lang/StringBuilder
      //   146: dup
      //   147: invokespecial 75	java/lang/StringBuilder:<init>	()V
      //   150: aload_1
      //   151: invokevirtual 79	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   154: aload 5
      //   156: invokevirtual 79	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   159: invokevirtual 82	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   162: astore_2
      //   163: new 92	com/qbiki/modules/messenger/AppSignInFragment$SignInViaScApiAsyncTask
      //   166: dup
      //   167: aload_0
      //   168: getfield 14	com/qbiki/modules/messenger/AppSignInFragment$FacebookSignInAsyncTask:this$0	Lcom/qbiki/modules/messenger/AppSignInFragment;
      //   171: aload_0
      //   172: getfield 14	com/qbiki/modules/messenger/AppSignInFragment$FacebookSignInAsyncTask:this$0	Lcom/qbiki/modules/messenger/AppSignInFragment;
      //   175: invokespecial 95	com/qbiki/modules/messenger/AppSignInFragment$SignInViaScApiAsyncTask:<init>	(Lcom/qbiki/modules/messenger/AppSignInFragment;Landroid/support/v4/app/Fragment;)V
      //   178: iconst_4
      //   179: anewarray 84	java/lang/String
      //   182: dup
      //   183: iconst_0
      //   184: aload 4
      //   186: aastore
      //   187: dup
      //   188: iconst_1
      //   189: ldc 97
      //   191: aastore
      //   192: dup
      //   193: iconst_2
      //   194: aload 5
      //   196: aastore
      //   197: dup
      //   198: iconst_3
      //   199: aload_2
      //   200: aastore
      //   201: invokevirtual 101	com/qbiki/modules/messenger/AppSignInFragment$SignInViaScApiAsyncTask:execute	([Ljava/lang/Object;)Landroid/os/AsyncTask;
      //   204: pop
      //   205: aload_3
      //   206: aload_0
      //   207: getfield 14	com/qbiki/modules/messenger/AppSignInFragment$FacebookSignInAsyncTask:this$0	Lcom/qbiki/modules/messenger/AppSignInFragment;
      //   210: invokevirtual 105	com/qbiki/modules/messenger/AppSignInFragment:getActivity	()Landroid/support/v4/app/FragmentActivity;
      //   213: invokevirtual 109	com/facebook/android/Facebook:logout	(Landroid/content/Context;)Ljava/lang/String;
      //   216: pop
      //   217: aconst_null
      //   218: areturn
      //   219: astore_1
      //   220: ldc 111
      //   222: new 74	java/lang/StringBuilder
      //   225: dup
      //   226: invokespecial 75	java/lang/StringBuilder:<init>	()V
      //   229: ldc 113
      //   231: invokevirtual 79	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   234: aload_1
      //   235: invokevirtual 114	java/net/MalformedURLException:toString	()Ljava/lang/String;
      //   238: invokevirtual 79	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   241: invokevirtual 82	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   244: invokestatic 120	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;)I
      //   247: pop
      //   248: aload_0
      //   249: getfield 14	com/qbiki/modules/messenger/AppSignInFragment$FacebookSignInAsyncTask:this$0	Lcom/qbiki/modules/messenger/AppSignInFragment;
      //   252: aload_1
      //   253: invokevirtual 123	java/net/MalformedURLException:getMessage	()Ljava/lang/String;
      //   256: invokestatic 127	com/qbiki/modules/messenger/AppSignInFragment:access$600	(Lcom/qbiki/modules/messenger/AppSignInFragment;Ljava/lang/String;)V
      //   259: aload_3
      //   260: aload_0
      //   261: getfield 14	com/qbiki/modules/messenger/AppSignInFragment$FacebookSignInAsyncTask:this$0	Lcom/qbiki/modules/messenger/AppSignInFragment;
      //   264: invokevirtual 105	com/qbiki/modules/messenger/AppSignInFragment:getActivity	()Landroid/support/v4/app/FragmentActivity;
      //   267: invokevirtual 109	com/facebook/android/Facebook:logout	(Landroid/content/Context;)Ljava/lang/String;
      //   270: pop
      //   271: aconst_null
      //   272: areturn
      //   273: astore_1
      //   274: aconst_null
      //   275: areturn
      //   276: astore_1
      //   277: ldc 111
      //   279: new 74	java/lang/StringBuilder
      //   282: dup
      //   283: invokespecial 75	java/lang/StringBuilder:<init>	()V
      //   286: ldc -127
      //   288: invokevirtual 79	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   291: aload_1
      //   292: invokevirtual 130	java/io/IOException:toString	()Ljava/lang/String;
      //   295: invokevirtual 79	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   298: invokevirtual 82	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   301: invokestatic 120	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;)I
      //   304: pop
      //   305: aload_0
      //   306: getfield 14	com/qbiki/modules/messenger/AppSignInFragment$FacebookSignInAsyncTask:this$0	Lcom/qbiki/modules/messenger/AppSignInFragment;
      //   309: ldc -124
      //   311: invokestatic 127	com/qbiki/modules/messenger/AppSignInFragment:access$600	(Lcom/qbiki/modules/messenger/AppSignInFragment;Ljava/lang/String;)V
      //   314: aload_3
      //   315: aload_0
      //   316: getfield 14	com/qbiki/modules/messenger/AppSignInFragment$FacebookSignInAsyncTask:this$0	Lcom/qbiki/modules/messenger/AppSignInFragment;
      //   319: invokevirtual 105	com/qbiki/modules/messenger/AppSignInFragment:getActivity	()Landroid/support/v4/app/FragmentActivity;
      //   322: invokevirtual 109	com/facebook/android/Facebook:logout	(Landroid/content/Context;)Ljava/lang/String;
      //   325: pop
      //   326: aconst_null
      //   327: areturn
      //   328: astore_1
      //   329: aconst_null
      //   330: areturn
      //   331: astore_1
      //   332: ldc 111
      //   334: new 74	java/lang/StringBuilder
      //   337: dup
      //   338: invokespecial 75	java/lang/StringBuilder:<init>	()V
      //   341: ldc -122
      //   343: invokevirtual 79	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   346: aload_1
      //   347: invokevirtual 135	org/json/JSONException:toString	()Ljava/lang/String;
      //   350: invokevirtual 79	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   353: invokevirtual 82	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   356: invokestatic 120	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;)I
      //   359: pop
      //   360: aload_0
      //   361: getfield 14	com/qbiki/modules/messenger/AppSignInFragment$FacebookSignInAsyncTask:this$0	Lcom/qbiki/modules/messenger/AppSignInFragment;
      //   364: ldc -119
      //   366: invokestatic 127	com/qbiki/modules/messenger/AppSignInFragment:access$600	(Lcom/qbiki/modules/messenger/AppSignInFragment;Ljava/lang/String;)V
      //   369: aload_3
      //   370: aload_0
      //   371: getfield 14	com/qbiki/modules/messenger/AppSignInFragment$FacebookSignInAsyncTask:this$0	Lcom/qbiki/modules/messenger/AppSignInFragment;
      //   374: invokevirtual 105	com/qbiki/modules/messenger/AppSignInFragment:getActivity	()Landroid/support/v4/app/FragmentActivity;
      //   377: invokevirtual 109	com/facebook/android/Facebook:logout	(Landroid/content/Context;)Ljava/lang/String;
      //   380: pop
      //   381: aconst_null
      //   382: areturn
      //   383: astore_1
      //   384: aconst_null
      //   385: areturn
      //   386: astore_1
      //   387: aload_3
      //   388: aload_0
      //   389: getfield 14	com/qbiki/modules/messenger/AppSignInFragment$FacebookSignInAsyncTask:this$0	Lcom/qbiki/modules/messenger/AppSignInFragment;
      //   392: invokevirtual 105	com/qbiki/modules/messenger/AppSignInFragment:getActivity	()Landroid/support/v4/app/FragmentActivity;
      //   395: invokevirtual 109	com/facebook/android/Facebook:logout	(Landroid/content/Context;)Ljava/lang/String;
      //   398: pop
      //   399: aload_1
      //   400: athrow
      //   401: astore_2
      //   402: goto -3 -> 399
      //   405: astore_2
      //   406: goto -7 -> 399
      //   409: astore_1
      //   410: aconst_null
      //   411: areturn
      //   412: astore_1
      //   413: aconst_null
      //   414: areturn
      //   415: astore_1
      //   416: aconst_null
      //   417: areturn
      //   418: astore_1
      //   419: aconst_null
      //   420: areturn
      //   421: astore_1
      //   422: aconst_null
      //   423: areturn
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	424	0	this	FacebookSignInAsyncTask
      //   0	424	1	paramVarArgs	String[]
      //   51	149	2	localObject	Object
      //   401	1	2	localIOException	IOException
      //   405	1	2	localMalformedURLException	java.net.MalformedURLException
      //   7	381	3	localFacebook	Facebook
      //   38	147	4	str1	String
      //   47	148	5	str2	String
      //   32	89	6	localJSONObject	JSONObject
      // Exception table:
      //   from	to	target	type
      //   19	49	219	java/net/MalformedURLException
      //   52	88	219	java/net/MalformedURLException
      //   90	97	219	java/net/MalformedURLException
      //   99	134	219	java/net/MalformedURLException
      //   136	163	219	java/net/MalformedURLException
      //   163	205	219	java/net/MalformedURLException
      //   259	271	273	java/net/MalformedURLException
      //   19	49	276	java/io/IOException
      //   52	88	276	java/io/IOException
      //   90	97	276	java/io/IOException
      //   99	134	276	java/io/IOException
      //   136	163	276	java/io/IOException
      //   163	205	276	java/io/IOException
      //   314	326	328	java/net/MalformedURLException
      //   19	49	331	org/json/JSONException
      //   52	88	331	org/json/JSONException
      //   90	97	331	org/json/JSONException
      //   99	134	331	org/json/JSONException
      //   136	163	331	org/json/JSONException
      //   163	205	331	org/json/JSONException
      //   369	381	383	java/net/MalformedURLException
      //   19	49	386	finally
      //   52	88	386	finally
      //   90	97	386	finally
      //   99	134	386	finally
      //   136	163	386	finally
      //   163	205	386	finally
      //   220	259	386	finally
      //   277	314	386	finally
      //   332	369	386	finally
      //   387	399	401	java/io/IOException
      //   387	399	405	java/net/MalformedURLException
      //   369	381	409	java/io/IOException
      //   314	326	412	java/io/IOException
      //   259	271	415	java/io/IOException
      //   205	217	418	java/io/IOException
      //   205	217	421	java/net/MalformedURLException
    }
    
    protected void onPreExecute()
    {
      AppSignInFragment.this.setLoadingInProgress(true, false);
      super.onPreExecute();
    }
  }
  
  private class GoogleSignInAsyncTask
    extends AsyncTask<Void, Void, Void>
  {
    protected String mEmail;
    private JSONObject mProfile = null;
    protected int mRequestCode;
    protected String mScope;
    private String mToken = null;
    
    public GoogleSignInAsyncTask(String paramString1, String paramString2, int paramInt)
    {
      this.mScope = paramString2;
      this.mEmail = paramString1;
      this.mRequestCode = paramInt;
    }
    
    private JSONObject fetchProfileFromGoogleServer(String paramString)
      throws IOException, JSONException
    {
      HttpURLConnection localHttpURLConnection = (HttpURLConnection)new URL("https://www.googleapis.com/oauth2/v1/userinfo?access_token=" + paramString).openConnection();
      int i = localHttpURLConnection.getResponseCode();
      if (i == 200) {
        return new JSONObject(DataUtil.readString(localHttpURLConnection.getInputStream()));
      }
      if (i == 401)
      {
        GoogleAuthUtil.invalidateToken(AppSignInFragment.this.getActivity(), paramString);
        onError("Server auth error, please try again.", null);
        Log.i("AppSignInFragment", "Server auth error: " + DataUtil.readString(localHttpURLConnection.getErrorStream()));
        return null;
      }
      onError("Server returned the following error code: " + i, null);
      return null;
    }
    
    private String fetchToken()
      throws IOException
    {
      Object localObject = AppSignInFragment.this.getActivity();
      try
      {
        localObject = GoogleAuthUtil.getToken((Context)localObject, this.mEmail, this.mScope);
        return localObject;
      }
      catch (GooglePlayServicesAvailabilityException localGooglePlayServicesAvailabilityException)
      {
        AppSignInFragment.this.showPlayServicesErrorDialog(localGooglePlayServicesAvailabilityException.getConnectionStatusCode());
        return null;
      }
      catch (UserRecoverableAuthException localUserRecoverableAuthException)
      {
        for (;;)
        {
          AppSignInFragment.this.startActivityForResult(localUserRecoverableAuthException.getIntent(), this.mRequestCode);
        }
      }
      catch (GoogleAuthException localGoogleAuthException)
      {
        for (;;)
        {
          onError("Unrecoverable error " + localGoogleAuthException.getMessage(), localGoogleAuthException);
        }
      }
    }
    
    protected Void doInBackground(Void... paramVarArgs)
    {
      if (AppSignInFragment.this.getActivity() == null) {}
      for (;;)
      {
        return null;
        try
        {
          this.mToken = fetchToken();
          if (this.mToken != null)
          {
            this.mProfile = fetchProfileFromGoogleServer(this.mToken);
            if (this.mProfile != null)
            {
              String str = this.mProfile.getString("id");
              paramVarArgs = this.mEmail;
              if (this.mProfile.has("name")) {
                paramVarArgs = this.mProfile.getString("name");
              }
              new AppSignInFragment.SignInViaScApiAsyncTask(AppSignInFragment.this, AppSignInFragment.this).execute(new String[] { this.mToken, "google", str, paramVarArgs });
              return null;
            }
          }
        }
        catch (IOException paramVarArgs)
        {
          onError("Following Error occured, please try again. " + paramVarArgs.getMessage(), paramVarArgs);
          return null;
        }
        catch (JSONException paramVarArgs)
        {
          onError("Bad response: " + paramVarArgs.getMessage(), paramVarArgs);
        }
      }
      return null;
    }
    
    protected void onError(String paramString, Exception paramException)
    {
      if (paramException != null) {
        Log.e("AppSignInFragment", "Exception: ", paramException);
      }
      AppSignInFragment.this.showError(paramString);
    }
    
    protected void onPreExecute()
    {
      AppSignInFragment.this.setLoadingInProgress(true, false);
      super.onPreExecute();
    }
  }
  
  private class SignInViaScApiAsyncTask
    extends SCApiRequestAsyncTask<String, Void, String>
  {
    private String mDisplayName;
    private boolean mIsNewAccount;
    private String mUserId;
    
    public SignInViaScApiAsyncTask(Fragment paramFragment)
    {
      super();
    }
    
    protected void onPostExecute(String paramString)
    {
      if (paramString != null)
      {
        paramString = new Intent();
        paramString.putExtra("userId", this.mUserId);
        paramString.putExtra("isNewAccount", this.mIsNewAccount);
        paramString.putExtra("displayName", this.mDisplayName);
        AppSignInFragment.this.getActivity().setResult(-1, paramString);
        AppSignInFragment.this.getActivity().finish();
      }
      AppSignInFragment.this.setLoadingInProgress(false, true);
    }
    
    protected void onPreExecute()
    {
      AppSignInFragment.this.setLoadingInProgress(true, false);
      super.onPreExecute();
    }
    
    protected String performRequest(String... paramVarArgs)
      throws IOException, JSONException, HttpResponseException, SCApiException
    {
      String str1 = paramVarArgs[0];
      String str2 = paramVarArgs[1];
      String str3 = paramVarArgs[2];
      this.mDisplayName = paramVarArgs[3];
      paramVarArgs = SCApi.getInstance().appUserSignIn(str2, str3, str1, this.mDisplayName);
      this.mUserId = paramVarArgs.getString("userId");
      this.mIsNewAccount = paramVarArgs.getBoolean("isNewAccount");
      return "ok";
    }
  }
}
