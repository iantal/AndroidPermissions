package com.qbiki.modules.dynamicpage;

import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.view.View;
import android.webkit.WebView;
import android.widget.ProgressBar;
import com.qbiki.mbfx.DynamicHTML;
import com.qbiki.mbfx.DynamicHTML.ProgressObserver;
import com.qbiki.seattleclouds.App;
import com.qbiki.seattleclouds.AppConfig;
import com.qbiki.seattleclouds.WebViewFragment;
import com.qbiki.util.DialogUtil;
import org.json.JSONException;
import org.json.JSONObject;

public class DynamicPageFragment
  extends WebViewFragment
  implements DynamicHTML.ProgressObserver
{
  public DynamicPageFragment() {}
  
  protected void init()
  {
    this.mWebView.setBackgroundColor(-1);
    super.init();
    loadHTMLString("");
  }
  
  public void onProgressComplete(String paramString)
  {
    if (getActivity() == null) {
      return;
    }
    processComplete(paramString);
  }
  
  public void onProgressError(int paramInt)
  {
    if (getActivity() == null) {
      return;
    }
    switch (paramInt)
    {
    default: 
      getActivity().runOnUiThread(new Runnable()
      {
        public void run()
        {
          DynamicPageFragment.this.mProgressBar.setVisibility(8);
        }
      });
    }
    for (;;)
    {
      getActivity().runOnUiThread(new Runnable()
      {
        public void run()
        {
          DynamicPageFragment.this.mProgressBar.setVisibility(8);
        }
      });
      return;
      getActivity().runOnUiThread(new Runnable()
      {
        public void run()
        {
          DialogUtil.showAlert(DynamicPageFragment.this.getActivity(), "Incorrect URL.", "Please make sure your URL is correct.");
        }
      });
      continue;
      getActivity().runOnUiThread(new Runnable()
      {
        public void run()
        {
          DialogUtil.showAlert(DynamicPageFragment.this.getActivity(), "Incorrect JSON.", "Please make sure your JSON is correct.");
        }
      });
      continue;
      getActivity().runOnUiThread(new Runnable()
      {
        public void run()
        {
          DialogUtil.showAlert(DynamicPageFragment.this.getActivity(), "Unable to access data.", "Please make sure you have connection to Internet.");
        }
      });
      continue;
      getActivity().runOnUiThread(new Runnable()
      {
        public void run()
        {
          DialogUtil.showAlert(DynamicPageFragment.this.getActivity(), "Request timeout.", "Please make sure you have connection to Internet.");
        }
      });
    }
  }
  
  public void onProgressFinished()
  {
    if (getActivity() == null) {
      return;
    }
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        DynamicPageFragment.this.mProgressBar.setVisibility(8);
      }
    });
  }
  
  public void onProgressStart()
  {
    if (getActivity() == null) {
      return;
    }
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        DynamicPageFragment.this.mProgressBar.setVisibility(0);
      }
    });
  }
  
  public void onViewCreated(View paramView, Bundle paramBundle)
  {
    Object localObject2 = getArguments();
    if (localObject2 == null) {
      throw new IllegalArgumentException("Arguments should not be null");
    }
    String str1 = ((Bundle)localObject2).getString("ARG_URL");
    if (str1 == null)
    {
      App.closePageDelayed(this);
      return;
    }
    String str2 = ((Bundle)localObject2).getString("jsonString");
    Object localObject1 = null;
    if (str2 != null) {}
    for (;;)
    {
      try
      {
        localObject2 = new JSONObject(str2);
        localObject1 = localObject2;
      }
      catch (JSONException localJSONException)
      {
        continue;
      }
      processDynamicData(str1, (JSONObject)localObject1);
      super.onViewCreated(paramView, paramBundle);
      return;
      localObject2 = ((Bundle)localObject2).getString("parentPageUrl");
      if (localObject2 != null) {
        localObject1 = App.appConfig.getRssJsonForPage((String)localObject2);
      }
    }
  }
  
  protected void processComplete(final String paramString)
  {
    Bundle localBundle = getArguments();
    if (localBundle == null) {
      throw new IllegalArgumentException("Arguments should not be null");
    }
    localBundle.putString("ARG_HTML_STRING", paramString);
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        DynamicPageFragment.this.loadHTMLString(paramString);
      }
    });
  }
  
  protected void processDynamicData(final String paramString, final JSONObject paramJSONObject)
  {
    new Thread(new Runnable()
    {
      public void run()
      {
        DynamicHTML.processDynamicData(paramString, paramJSONObject, DynamicPageFragment.this.getActivity(), DynamicPageFragment.this);
      }
    }).start();
  }
}
