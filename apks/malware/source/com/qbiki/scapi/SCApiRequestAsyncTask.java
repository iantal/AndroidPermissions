package com.qbiki.scapi;

import android.app.Activity;
import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.AsyncTask;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.util.Log;
import android.widget.Toast;
import java.io.IOException;
import org.json.JSONException;
import org.json.JSONObject;

public abstract class SCApiRequestAsyncTask<Params, Progress, Result>
  extends AsyncTask<Params, Progress, Result>
{
  private static final String TAG = "SCApiRequestAsyncTask";
  private Fragment mFragment;
  
  public SCApiRequestAsyncTask(Fragment paramFragment)
  {
    this.mFragment = paramFragment;
  }
  
  private void showError(int paramInt)
  {
    FragmentActivity localFragmentActivity = this.mFragment.getActivity();
    if (localFragmentActivity == null) {
      return;
    }
    showError(localFragmentActivity.getString(paramInt));
  }
  
  protected Result doInBackground(Params... paramVarArgs)
  {
    FragmentActivity localFragmentActivity = this.mFragment.getActivity();
    if (localFragmentActivity == null) {
      return null;
    }
    try
    {
      paramVarArgs = performRequest(paramVarArgs);
      return paramVarArgs;
    }
    catch (IOException paramVarArgs)
    {
      Log.e("SCApiRequestAsyncTask", "IOException: ", paramVarArgs);
      paramVarArgs = (ConnectivityManager)localFragmentActivity.getSystemService("connectivity");
      if ((paramVarArgs.getActiveNetworkInfo() == null) || (!paramVarArgs.getActiveNetworkInfo().isConnected()))
      {
        showError(2131361931);
        return null;
      }
      showError(2131361932);
      return null;
    }
    catch (JSONException paramVarArgs)
    {
      Log.e("SCApiRequestAsyncTask", "JSON parsing exception: " + paramVarArgs.toString());
      showError(2131361933);
      return null;
    }
    catch (HttpResponseException paramVarArgs)
    {
      Log.e("SCApiRequestAsyncTask", "HTTP Response exception: " + paramVarArgs.getStatusCode() + " - " + paramVarArgs.getMessage());
      showError(2131361933);
      return null;
    }
    catch (SCApiException paramVarArgs)
    {
      Log.e("SCApiRequestAsyncTask", "SCApi exception: " + paramVarArgs.toString());
      paramVarArgs.getMessage();
    }
    try
    {
      paramVarArgs = paramVarArgs.getDetails();
      int i = paramVarArgs.getInt("code");
      paramVarArgs = paramVarArgs.getString("message");
      paramVarArgs = i + " - " + paramVarArgs;
      showError(paramVarArgs);
      return null;
    }
    catch (JSONException paramVarArgs)
    {
      for (;;)
      {
        Log.e("SCApiRequestAsyncTask", "JSON parsing exception: " + paramVarArgs.toString());
        paramVarArgs = this.mFragment.getString(2131361933);
      }
    }
  }
  
  protected abstract Result performRequest(Params... paramVarArgs)
    throws IOException, JSONException, HttpResponseException, SCApiException;
  
  protected void showError(final String paramString)
  {
    if (this.mFragment.getActivity() == null) {
      return;
    }
    this.mFragment.getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        if (SCApiRequestAsyncTask.this.mFragment.getActivity() == null) {
          return;
        }
        Toast.makeText(SCApiRequestAsyncTask.this.mFragment.getActivity(), paramString, 1).show();
      }
    });
  }
}
