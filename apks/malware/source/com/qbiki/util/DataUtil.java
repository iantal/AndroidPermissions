package com.qbiki.util;

import android.content.Context;
import android.util.Log;
import com.qbiki.seattleclouds.App;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public class DataUtil
{
  public DataUtil() {}
  
  private static void copy(File paramFile1, File paramFile2)
    throws IOException
  {
    paramFile1 = new FileInputStream(paramFile1);
    paramFile2 = new FileOutputStream(paramFile2);
    byte[] arrayOfByte = new byte['Ѐ'];
    for (;;)
    {
      int i = paramFile1.read(arrayOfByte);
      if (i <= 0) {
        break;
      }
      paramFile2.write(arrayOfByte, 0, i);
    }
    paramFile1.close();
    paramFile2.close();
  }
  
  public static String copyToPath(String paramString1, String paramString2, String paramString3, Context paramContext)
  {
    if (!App.isExternalStorageWritable())
    {
      DialogUtil.showAlert(paramContext, 2131361917, 2131362111);
      return null;
    }
    new File(paramString2).mkdirs();
    paramString1 = new File(paramString1);
    paramString1.getName();
    paramString2 = new File(paramString2 + "/" + paramString3);
    try
    {
      copy(paramString1, paramString2);
      return paramString2.getAbsolutePath();
    }
    catch (IOException paramString1)
    {
      Log.d("DataUtil", "Exception - copyToSDCard ", paramString1);
    }
    return null;
  }
  
  public static String copyToSDCard(String paramString1, String paramString2, Context paramContext)
  {
    if (!App.isExternalStorageWritable())
    {
      DialogUtil.showAlert(paramContext, 2131361917, 2131362111);
      return null;
    }
    paramContext = App.getAppExternalStoragePath();
    paramString2 = paramContext + "/" + paramString2;
    new File(paramString2).mkdirs();
    paramString1 = new File(paramString1);
    paramString1.getName();
    paramString2 = new File(paramString2 + "/" + paramString1.getName());
    try
    {
      copy(paramString1, paramString2);
      return paramString2.getAbsolutePath();
    }
    catch (IOException paramString1)
    {
      Log.d("DataUtil", "Exception - copyToSDCard ", paramString1);
    }
    return null;
  }
  
  public static byte[] readBytes(InputStream paramInputStream)
    throws IOException
  {
    ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
    byte[] arrayOfByte = new byte['Ѐ'];
    for (;;)
    {
      int i = paramInputStream.read(arrayOfByte);
      if (i == -1) {
        break;
      }
      localByteArrayOutputStream.write(arrayOfByte, 0, i);
    }
    return localByteArrayOutputStream.toByteArray();
  }
  
  public static String readString(InputStream paramInputStream)
    throws IOException, IllegalArgumentException
  {
    return readString(paramInputStream, 8192);
  }
  
  /* Error */
  public static String readString(InputStream paramInputStream, int paramInt)
    throws IOException, IllegalArgumentException
  {
    // Byte code:
    //   0: aload_0
    //   1: ifnonnull +13 -> 14
    //   4: new 112	java/lang/IllegalArgumentException
    //   7: dup
    //   8: ldc 119
    //   10: invokespecial 120	java/lang/IllegalArgumentException:<init>	(Ljava/lang/String;)V
    //   13: athrow
    //   14: new 68	java/lang/StringBuilder
    //   17: dup
    //   18: invokespecial 69	java/lang/StringBuilder:<init>	()V
    //   21: astore_3
    //   22: new 122	java/io/BufferedReader
    //   25: dup
    //   26: new 124	java/io/InputStreamReader
    //   29: dup
    //   30: aload_0
    //   31: ldc 126
    //   33: invokespecial 129	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;Ljava/lang/String;)V
    //   36: iload_1
    //   37: invokespecial 132	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   40: astore 4
    //   42: sipush 8192
    //   45: newarray char
    //   47: astore 5
    //   49: iconst_0
    //   50: istore_1
    //   51: aload 4
    //   53: aload 5
    //   55: iconst_0
    //   56: aload 5
    //   58: arraylength
    //   59: invokevirtual 137	java/io/Reader:read	([CII)I
    //   62: istore_2
    //   63: iload_2
    //   64: ifle +53 -> 117
    //   67: iload_1
    //   68: ifne +26 -> 94
    //   71: aload 5
    //   73: iconst_0
    //   74: caload
    //   75: ldc -118
    //   77: if_icmpne +17 -> 94
    //   80: aload_3
    //   81: aload 5
    //   83: iconst_1
    //   84: iload_2
    //   85: iconst_1
    //   86: isub
    //   87: invokevirtual 141	java/lang/StringBuilder:append	([CII)Ljava/lang/StringBuilder;
    //   90: pop
    //   91: goto +58 -> 149
    //   94: aload_3
    //   95: aload 5
    //   97: iconst_0
    //   98: iload_2
    //   99: invokevirtual 141	java/lang/StringBuilder:append	([CII)Ljava/lang/StringBuilder;
    //   102: pop
    //   103: goto +46 -> 149
    //   106: astore 4
    //   108: aload_0
    //   109: invokevirtual 36	java/io/InputStream:close	()V
    //   112: aload_3
    //   113: invokevirtual 78	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   116: areturn
    //   117: aload_3
    //   118: invokevirtual 78	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   121: astore 4
    //   123: aload_0
    //   124: invokevirtual 36	java/io/InputStream:close	()V
    //   127: aload 4
    //   129: areturn
    //   130: astore_0
    //   131: aload 4
    //   133: areturn
    //   134: astore_3
    //   135: aload_0
    //   136: invokevirtual 36	java/io/InputStream:close	()V
    //   139: aload_3
    //   140: athrow
    //   141: astore_0
    //   142: goto -30 -> 112
    //   145: astore_0
    //   146: goto -7 -> 139
    //   149: iconst_1
    //   150: istore_1
    //   151: goto -100 -> 51
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	154	0	paramInputStream	InputStream
    //   0	154	1	paramInt	int
    //   62	37	2	i	int
    //   21	97	3	localStringBuilder	StringBuilder
    //   134	6	3	localObject	Object
    //   40	12	4	localBufferedReader	java.io.BufferedReader
    //   106	1	4	localUnsupportedEncodingException	java.io.UnsupportedEncodingException
    //   121	11	4	str	String
    //   47	49	5	arrayOfChar	char[]
    // Exception table:
    //   from	to	target	type
    //   22	49	106	java/io/UnsupportedEncodingException
    //   51	63	106	java/io/UnsupportedEncodingException
    //   80	91	106	java/io/UnsupportedEncodingException
    //   94	103	106	java/io/UnsupportedEncodingException
    //   117	123	106	java/io/UnsupportedEncodingException
    //   123	127	130	java/io/IOException
    //   22	49	134	finally
    //   51	63	134	finally
    //   80	91	134	finally
    //   94	103	134	finally
    //   117	123	134	finally
    //   108	112	141	java/io/IOException
    //   135	139	145	java/io/IOException
  }
}
