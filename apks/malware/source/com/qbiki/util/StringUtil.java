package com.qbiki.util;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class StringUtil
{
  public StringUtil() {}
  
  public static String getFirstNonEmptyLine(String paramString, int paramInt)
  {
    String str1 = "";
    String str2 = paramString;
    if (paramString.trim().length() == 0) {
      return "";
    }
    while ((str1.length() == 0) && (str2.length() != 0))
    {
      int i = str2.indexOf("\n");
      if (i != -1)
      {
        str1 = str2.substring(0, i).trim();
        str2 = str2.substring(i + 1);
      }
      else
      {
        str1 = str2.trim();
      }
    }
    paramString = str1;
    if (str1.length() > paramInt)
    {
      paramString = str1;
      if (paramInt > 3) {
        paramString = str1.substring(0, paramInt - 2) + "...";
      }
    }
    return paramString;
  }
  
  public static String getLastPathComponentFromUrl(String paramString)
  {
    int i = paramString.lastIndexOf("/");
    if (i != -1) {
      paramString = paramString.substring(i + 1);
    }
    for (;;)
    {
      i = paramString.indexOf("?");
      String str = paramString;
      if (i != -1) {
        str = paramString.substring(0, i);
      }
      return str;
    }
  }
  
  public static boolean isEmpty(String paramString)
  {
    return (paramString == null) || (paramString.length() <= 0);
  }
  
  public static boolean isEqual(String paramString1, String paramString2)
  {
    return (!isEmpty(paramString1)) && (paramString1.equals(paramString2));
  }
  
  public static String md5(String paramString)
  {
    try
    {
      Object localObject = MessageDigest.getInstance("MD5");
      ((MessageDigest)localObject).reset();
      ((MessageDigest)localObject).update(paramString.getBytes());
      localObject = ((MessageDigest)localObject).digest();
      int j = localObject.length;
      StringBuilder localStringBuilder = new StringBuilder(j << 1);
      int i = 0;
      while (i < j)
      {
        localStringBuilder.append(Character.forDigit((localObject[i] & 0xF0) >> 4, 16));
        localStringBuilder.append(Character.forDigit(localObject[i] & 0xF, 16));
        i += 1;
      }
      localObject = localStringBuilder.toString();
      return localObject;
    }
    catch (NoSuchAlgorithmException localNoSuchAlgorithmException)
    {
      localNoSuchAlgorithmException.printStackTrace();
    }
    return paramString;
  }
}
