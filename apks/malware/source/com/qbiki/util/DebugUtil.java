package com.qbiki.util;

import android.os.Debug;
import android.util.Log;
import java.text.DecimalFormat;

public class DebugUtil
{
  private static final int CLIENT_CODE_STACK_INDEX;
  
  static
  {
    int i = 0;
    StackTraceElement[] arrayOfStackTraceElement = Thread.currentThread().getStackTrace();
    int m = arrayOfStackTraceElement.length;
    int j = 0;
    for (;;)
    {
      int k = i;
      if (j < m)
      {
        StackTraceElement localStackTraceElement = arrayOfStackTraceElement[j];
        i += 1;
        if (localStackTraceElement.getClassName().equals(DebugUtil.class.getName())) {
          k = i;
        }
      }
      else
      {
        CLIENT_CODE_STACK_INDEX = k;
        return;
      }
      j += 1;
    }
  }
  
  public DebugUtil() {}
  
  public static void logHeap(Class<?> paramClass)
  {
    double d1 = new Double(Debug.getNativeHeapAllocatedSize()).doubleValue() / new Double(1048576.0D).doubleValue();
    double d2 = new Double(Debug.getNativeHeapSize()).doubleValue() / 1048576.0D;
    double d3 = new Double(Debug.getNativeHeapFreeSize()).doubleValue() / 1048576.0D;
    DecimalFormat localDecimalFormat = new DecimalFormat();
    localDecimalFormat.setMaximumFractionDigits(2);
    localDecimalFormat.setMinimumFractionDigits(2);
    Log.d("MEM_DBG", "debug. =================================");
    Log.d("MEM_DBG", "debug.heap native: allocated " + localDecimalFormat.format(Double.valueOf(d1)) + "MB of " + localDecimalFormat.format(Double.valueOf(d2)) + "MB (" + localDecimalFormat.format(Double.valueOf(d3)) + "MB free) in [" + paramClass.getName().replaceAll("com.myapp.android.", "") + "]");
    Log.d("MEM_DBG", "debug.memory: allocated: " + localDecimalFormat.format(new Double(Runtime.getRuntime().totalMemory() / 1048576L)) + "MB of " + localDecimalFormat.format(new Double(Runtime.getRuntime().maxMemory() / 1048576L)) + "MB (" + localDecimalFormat.format(new Double(Runtime.getRuntime().freeMemory() / 1048576L)) + "MB free)");
    Log.d("MEM_DBG", "debug. =================================");
    System.gc();
    System.gc();
  }
  
  public static String methodName()
  {
    return Thread.currentThread().getStackTrace()[CLIENT_CODE_STACK_INDEX].getMethodName();
  }
}
