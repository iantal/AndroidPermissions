package com.qbiki.util;

import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.content.Context;
import android.os.Build.VERSION;
import android.view.Display;
import android.view.WindowManager;
import android.webkit.GeolocationPermissions.Callback;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebSettings.RenderPriority;
import android.webkit.WebView;
import com.qbiki.seattleclouds.App;
import com.qbiki.seattleclouds.AppConfig;

public class WebViewUtil
{
  public WebViewUtil() {}
  
  private static int getBaseResolutionScale(Context paramContext)
  {
    return Double.valueOf(Double.valueOf(Double.valueOf(((WindowManager)paramContext.getSystemService("window")).getDefaultDisplay().getWidth()).doubleValue() / Double.valueOf(320.0D).doubleValue()).doubleValue() * 100.0D).intValue();
  }
  
  @SuppressLint({"SetJavaScriptEnabled"})
  @TargetApi(11)
  public static void setDefaultSettings(WebView paramWebView)
  {
    WebSettings localWebSettings = paramWebView.getSettings();
    localWebSettings.setJavaScriptEnabled(true);
    localWebSettings.setDomStorageEnabled(true);
    localWebSettings.setDatabaseEnabled(true);
    localWebSettings.setDatabasePath("/data/data/" + paramWebView.getContext().getPackageName() + "/databases/");
    localWebSettings.setGeolocationEnabled(true);
    localWebSettings.setRenderPriority(WebSettings.RenderPriority.HIGH);
    paramWebView.setWebChromeClient(new WebChromeClient()
    {
      public void onGeolocationPermissionsShowPrompt(String paramAnonymousString, GeolocationPermissions.Callback paramAnonymousCallback)
      {
        paramAnonymousCallback.invoke(paramAnonymousString, true, false);
      }
    });
    localWebSettings.setCacheMode(2);
    paramWebView.clearCache(true);
    localWebSettings.setSupportZoom(false);
    localWebSettings.setBuiltInZoomControls(false);
    if (Build.VERSION.SDK_INT >= 11) {
      localWebSettings.setDisplayZoomControls(false);
    }
    localWebSettings.setUseWideViewPort(true);
    localWebSettings.setLoadWithOverviewMode(true);
    if (App.appConfig.getScaleWebPagesToBaseResolution())
    {
      paramWebView.setInitialScale(getBaseResolutionScale(paramWebView.getContext()));
      localWebSettings.setUseWideViewPort(false);
    }
    paramWebView.setVerticalScrollbarOverlay(true);
  }
}
