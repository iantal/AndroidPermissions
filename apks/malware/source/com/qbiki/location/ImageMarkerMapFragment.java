package com.qbiki.location;

import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;
import com.google.android.bitmapfun.ImageCache.ImageCacheParams;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.GoogleMap.InfoWindowAdapter;
import com.google.android.gms.maps.model.Marker;
import com.qbiki.feedback.LocationModel;
import com.qbiki.util.ImageResourceFetcher;
import com.qbiki.util.ImageResourceFetcher.ImageResourceFtecherListener;
import java.util.HashMap;

public class ImageMarkerMapFragment
  extends MarkerMapFragment
{
  public static final String ARG_DISTANCE_IN_MILES = "resultDistanceInMiles";
  private Marker mCurrentMarker = null;
  private ImageResourceFetcher mImageFetcher;
  private boolean resultDistanceInMiles = true;
  
  public ImageMarkerMapFragment() {}
  
  protected void setUpMap()
  {
    super.setUpMap();
    Object localObject = getArguments();
    if (localObject != null) {
      this.resultDistanceInMiles = ((Bundle)localObject).getBoolean("resultDistanceInMiles", true);
    }
    localObject = new ImageCache.ImageCacheParams(getActivity(), "locationListImageCache");
    ((ImageCache.ImageCacheParams)localObject).setMemCacheSizePercent(0.25F);
    this.mImageFetcher = new ImageResourceFetcher(getActivity(), 100);
    this.mImageFetcher.addImageCache(getActivity().getSupportFragmentManager(), (ImageCache.ImageCacheParams)localObject);
    this.mImageFetcher.setListener(new ImageResourceFetcher.ImageResourceFtecherListener()
    {
      public void taskFinished(ImageView paramAnonymousImageView)
      {
        paramAnonymousImageView = (Marker)paramAnonymousImageView.getTag();
        if ((paramAnonymousImageView != null) && (ImageMarkerMapFragment.this.mCurrentMarker == paramAnonymousImageView) && (paramAnonymousImageView.isInfoWindowShown())) {
          paramAnonymousImageView.showInfoWindow();
        }
      }
    });
    this.mMap.setInfoWindowAdapter(new GoogleMap.InfoWindowAdapter()
    {
      public View getInfoContents(Marker paramAnonymousMarker)
      {
        Object localObject = null;
        LocationModel localLocationModel = (LocationModel)ImageMarkerMapFragment.this.mMarkerLocations.get(paramAnonymousMarker);
        View localView;
        TextView localTextView1;
        TextView localTextView2;
        ImageView localImageView;
        double d;
        if (localLocationModel != null)
        {
          ImageMarkerMapFragment.access$002(ImageMarkerMapFragment.this, paramAnonymousMarker);
          localView = ImageMarkerMapFragment.this.getActivity().getLayoutInflater().inflate(2130903153, null);
          localObject = (TextView)localView.findViewById(2131099839);
          localTextView1 = (TextView)localView.findViewById(2131099840);
          localTextView2 = (TextView)localView.findViewById(2131099990);
          localImageView = (ImageView)localView.findViewById(2131099989);
          ((TextView)localObject).setText(localLocationModel.locationName);
          d = localLocationModel.distance;
          if (!ImageMarkerMapFragment.this.resultDistanceInMiles) {
            break label214;
          }
        }
        label214:
        for (localObject = "mi";; localObject = "km")
        {
          localTextView1.setText(String.format("%.1f %s", new Object[] { Double.valueOf(d), localObject }));
          localTextView2.setText(localLocationModel.locationType);
          localImageView.setTag(paramAnonymousMarker);
          if ((localLocationModel.locationImage == null) || (localLocationModel.locationImage.length() <= 0)) {
            break;
          }
          ImageMarkerMapFragment.this.mImageFetcher.loadImage(localLocationModel.locationImage, localImageView);
          localObject = localView;
          return localObject;
        }
        localImageView.setImageResource(2130837719);
        return localView;
      }
      
      public View getInfoWindow(Marker paramAnonymousMarker)
      {
        return null;
      }
    });
  }
}
