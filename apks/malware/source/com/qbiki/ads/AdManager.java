package com.qbiki.ads;

import android.app.Activity;
import android.content.Intent;
import android.net.Uri;
import android.os.BadParcelableException;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import com.google.ads.Ad;
import com.google.ads.AdListener;
import com.google.ads.AdRequest;
import com.google.ads.AdRequest.ErrorCode;
import com.google.ads.AdSize;
import com.google.ads.AdView;
import com.google.ads.doubleclick.DfpAdView;
import com.pollfish.constants.Position;
import com.pollfish.main.PollFish;
import com.qbiki.modules.search.SearchActivity;
import com.qbiki.seattleclouds.App;
import com.qbiki.seattleclouds.AppConfig;
import com.qbiki.seattleclouds.BaseAppActivity;
import com.qbiki.seattleclouds.FragmentInfo;
import com.qbiki.seattleclouds.Page;
import com.qbiki.seattleclouds.SCPageFragmentActivity;
import com.revmob.RevMob;
import com.revmob.RevMobTestingMode;
import java.util.HashMap;
import java.util.Map;

public class AdManager
{
  public static final int AD_POSITION_BOTTOM = 1;
  public static final int AD_POSITION_TOP = 0;
  private static final boolean DEBUG = false;
  private static final String TAG = "AdManager";
  private static AdListener mAdMobAdListener;
  private static AdListener mDFPAdListener;
  private static final HashMap<String, Position> mPollfishPositions = new HashMap()
  {
    private static final long serialVersionUID = 1L;
  };
  public static boolean mShowTestAds = true;
  private static RevMob revMob = null;
  private AdView mAdMobAdViewBottom;
  private AdView mAdMobAdViewTop;
  private DfpAdView mDfpAdViewBottom;
  private DfpAdView mDfpAdViewTop;
  private SCAdView mSCAdViewBottom;
  private SCAdView mSCAdViewTop;
  
  public AdManager() {}
  
  private AdListener getAdMobAdListener()
  {
    if (mAdMobAdListener == null) {
      mAdMobAdListener = new AdMobAdListener(null);
    }
    return mAdMobAdListener;
  }
  
  private AdRequest getAdmobAdRequest()
  {
    AdRequest localAdRequest = new AdRequest();
    localAdRequest.addTestDevice(AdRequest.TEST_EMULATOR);
    if (mShowTestAds)
    {
      localAdRequest.addTestDevice("4DF6000CA6A8A405B70555BBB0032A88");
      localAdRequest.addTestDevice("C84B32E3A4A8D6098B7D37C519089508");
      localAdRequest.addTestDevice("A2CCFFF78A9C5204F6FA492283DBAE86");
    }
    return localAdRequest;
  }
  
  private AdListener getDFPAdListener()
  {
    if (mDFPAdListener == null) {
      mDFPAdListener = new DFPAdListener(null);
    }
    return mDFPAdListener;
  }
  
  private AdRequest getDFPAdRequest()
  {
    AdRequest localAdRequest = new AdRequest();
    localAdRequest.addTestDevice(AdRequest.TEST_EMULATOR);
    if (mShowTestAds) {
      localAdRequest.addTestDevice("1E3B8E0DA1FDF62DCBA6340C61457847");
    }
    return localAdRequest;
  }
  
  public static void refreshPollfish(Fragment paramFragment, final Page paramPage, int paramInt)
  {
    
    if ((paramFragment.getActivity() == null) || (paramPage == null) || (App.appConfig.getPollfishApiKey() == null)) {
      return;
    }
    if (paramInt > 0)
    {
      new Handler().postDelayed(new Runnable()
      {
        public void run()
        {
          if (this.val$fragment.getActivity() != null) {
            AdManager.showPollfish(this.val$fragment.getActivity(), paramPage);
          }
        }
      }, paramInt);
      return;
    }
    showPollfish(paramFragment.getActivity(), paramPage);
  }
  
  public static void showPollfish(Activity paramActivity)
  {
    if ((paramActivity == null) || (App.appConfig.getPollfishApiKey() == null)) {}
    Position localPosition;
    do
    {
      return;
      localPosition = (Position)mPollfishPositions.get(App.appConfig.getPollfishPosition());
    } while (localPosition == null);
    PollFish.init(paramActivity, App.appConfig.getPollfishApiKey(), localPosition, App.appConfig.getPollfishPadding(), App.isPreviewer);
  }
  
  private static void showPollfish(Activity paramActivity, Page paramPage)
  {
    Position localPosition = (Position)mPollfishPositions.get(paramPage.getPollfishPosition());
    if (localPosition == null) {
      return;
    }
    PollFish.init(paramActivity, App.appConfig.getPollfishApiKey(), localPosition, paramPage.getPollfishPadding(), App.isPreviewer);
    PollFish.show();
  }
  
  public static void showPollfishIfActivitySupports(Activity paramActivity)
  {
    if (((paramActivity instanceof BaseAppActivity)) || ((paramActivity instanceof SCPageFragmentActivity)) || ((paramActivity instanceof SearchActivity))) {
      showPollfish(paramActivity);
    }
  }
  
  public static void showRevMob(Activity paramActivity, Bundle paramBundle, String paramString)
  {
    if ((paramString == null) || (paramString.length() == 0)) {}
    for (;;)
    {
      return;
      if (paramBundle != null)
      {
        Object localObject = null;
        try
        {
          paramBundle.setClassLoader(paramActivity.getClassLoader());
          paramBundle = paramBundle.getString("PAGE_ID");
          if (paramBundle != null)
          {
            paramBundle = (Page)App.appConfig.getPages().get(paramBundle);
            if (paramBundle != null)
            {
              int i = paramBundle.getRevMobPageEnterType();
              if (revMob == null)
              {
                revMob = RevMob.start(paramActivity, paramString);
                if (App.isPreviewer) {
                  revMob.setTestingMode(RevMobTestingMode.WITH_ADS);
                }
              }
              switch (i)
              {
              default: 
                
              case 201: 
                revMob.showPopup(paramActivity);
                return;
              }
            }
          }
        }
        catch (BadParcelableException paramBundle)
        {
          for (;;)
          {
            Log.d("RevMob", "getString(Page.PAGE_ID)", paramBundle);
            paramBundle = localObject;
          }
          revMob.showFullscreen(paramActivity);
        }
      }
    }
  }
  
  public static void showRevMob(Activity paramActivity, String paramString)
  {
    if (paramActivity == null) {
      return;
    }
    if ((paramActivity instanceof SCPageFragmentActivity)) {}
    for (Bundle localBundle = ((FragmentInfo)paramActivity.getIntent().getExtras().getParcelable("ARG_PAGE_FRAGMENT_INFO")).getArguments();; localBundle = paramActivity.getIntent().getExtras())
    {
      showRevMob(paramActivity, localBundle, paramString);
      return;
    }
  }
  
  public AdView addAdMobAdView(Activity paramActivity, LinearLayout paramLinearLayout, String paramString, int paramInt)
  {
    paramActivity = new AdView(paramActivity, AdSize.BANNER, paramString);
    if (paramInt == 0)
    {
      Log.v("AdManager", "Showing AdMob ad at the top");
      paramLinearLayout.addView(paramActivity, 0);
    }
    for (;;)
    {
      paramLinearLayout = (LinearLayout.LayoutParams)paramActivity.getLayoutParams();
      paramLinearLayout.gravity = 17;
      paramActivity.setLayoutParams(paramLinearLayout);
      paramActivity.setAdListener(getAdMobAdListener());
      paramActivity.loadAd(getAdmobAdRequest());
      return paramActivity;
      Log.v("AdManager", "Showing AdMob ad at the bottom");
      paramLinearLayout.addView(paramActivity);
    }
  }
  
  public DfpAdView addDFPAdView(Activity paramActivity, LinearLayout paramLinearLayout, String paramString, int paramInt)
  {
    paramActivity = new DfpAdView(paramActivity, AdSize.BANNER, paramString);
    if (paramInt == 0)
    {
      Log.v("AdManager", "Showing AdMob ad at the top");
      paramLinearLayout.addView(paramActivity, 0);
    }
    for (;;)
    {
      paramLinearLayout = (LinearLayout.LayoutParams)paramActivity.getLayoutParams();
      paramLinearLayout.gravity = 17;
      paramActivity.setLayoutParams(paramLinearLayout);
      paramActivity.setAdListener(getDFPAdListener());
      paramActivity.loadAd(getDFPAdRequest());
      return paramActivity;
      Log.v("AdManager", "Showing AdMob ad at the bottom");
      paramLinearLayout.addView(paramActivity);
    }
  }
  
  public SCAdView addSCAdView(Activity paramActivity, LinearLayout paramLinearLayout, int paramInt)
  {
    paramActivity = new SCAdView(paramActivity);
    if (paramInt == 0)
    {
      Log.v("AdManager", "Showing SCAd ad at the top");
      paramLinearLayout.addView(paramActivity, 0);
    }
    for (;;)
    {
      paramActivity.loadAd();
      return paramActivity;
      Log.v("AdManager", "Showing SCAd ad at the bottom");
      paramLinearLayout.addView(paramActivity);
    }
  }
  
  public void destroy()
  {
    if (this.mAdMobAdViewTop != null) {
      this.mAdMobAdViewTop.destroy();
    }
    if (this.mAdMobAdViewBottom != null) {
      this.mAdMobAdViewBottom.destroy();
    }
    if (this.mSCAdViewTop != null) {
      this.mSCAdViewTop.destroy();
    }
    if (this.mSCAdViewBottom != null) {
      this.mSCAdViewBottom.destroy();
    }
    if (this.mDfpAdViewTop != null) {
      this.mDfpAdViewTop.destroy();
    }
    if (this.mDfpAdViewBottom != null) {
      this.mDfpAdViewBottom.destroy();
    }
  }
  
  public AdManager showAds(Activity paramActivity, LinearLayout paramLinearLayout, int paramInt1, int paramInt2)
  {
    String str2 = App.appConfig.getAdMobPublisherId();
    String str3 = App.appConfig.getDfpAdUnitId();
    StringBuilder localStringBuilder = new StringBuilder().append("Using AdMob Publisher ID: ").append(str2);
    String str1;
    int i;
    if ("a14bf035fb16b4d".equals(str2))
    {
      str1 = " (default) ";
      Log.i("AdManager", str1);
      i = paramInt1;
      if (paramInt1 == 100) {
        i = App.appConfig.getGlobalTopAdType();
      }
      paramInt1 = paramInt2;
      if (paramInt2 == 100) {
        paramInt1 = App.appConfig.getGlobalBottomAdType();
      }
      if ((i != 1) || (str2 == null)) {
        break label159;
      }
      this.mAdMobAdViewTop = addAdMobAdView(paramActivity, paramLinearLayout, str2, 0);
      label126:
      if ((paramInt1 != 1) || (str2 == null)) {
        break label206;
      }
      this.mAdMobAdViewBottom = addAdMobAdView(paramActivity, paramLinearLayout, str2, 1);
    }
    label159:
    label206:
    do
    {
      return this;
      str1 = "";
      break;
      if (i == 2)
      {
        this.mSCAdViewTop = addSCAdView(paramActivity, paramLinearLayout, 0);
        break label126;
      }
      if ((i != 4) || (str3 == null)) {
        break label126;
      }
      this.mDfpAdViewTop = addDFPAdView(paramActivity, paramLinearLayout, str3, 0);
      break label126;
      if (paramInt1 == 2)
      {
        this.mSCAdViewBottom = addSCAdView(paramActivity, paramLinearLayout, 1);
        return this;
      }
    } while ((paramInt1 != 4) || (str3 == null));
    this.mDfpAdViewBottom = addDFPAdView(paramActivity, paramLinearLayout, str3, 1);
    return this;
  }
  
  public AdManager showAds(Activity paramActivity, LinearLayout paramLinearLayout, Page paramPage)
  {
    if (paramPage == null) {
      return this;
    }
    return showAds(paramActivity, paramLinearLayout, paramPage.getTopAdType(), paramPage.getBottomAdType());
  }
  
  public AdManager showAds(Activity paramActivity, LinearLayout paramLinearLayout, String paramString)
  {
    if (!App.appConfig.isInitialized()) {
      return this;
    }
    if (paramString != null)
    {
      paramString = Uri.parse(paramString).getLastPathSegment();
      paramString = (Page)App.appConfig.getPages().get(paramString);
      if (paramString != null) {
        return showAds(paramActivity, paramLinearLayout, paramString);
      }
    }
    return showAds(paramActivity, paramLinearLayout, App.appConfig.getGlobalTopAdType(), App.appConfig.getGlobalBottomAdType());
  }
  
  private final class AdMobAdListener
    implements AdListener
  {
    private AdMobAdListener() {}
    
    public void onDismissScreen(Ad paramAd) {}
    
    public void onFailedToReceiveAd(Ad paramAd, AdRequest.ErrorCode paramErrorCode)
    {
      if (paramErrorCode == AdRequest.ErrorCode.INVALID_REQUEST)
      {
        Log.i("AdManager", "Resetting Publisher ID to default: a14bf035fb16b4d");
        App.appConfig.setAdMobPublisherId("a14bf035fb16b4d");
      }
    }
    
    public void onLeaveApplication(Ad paramAd) {}
    
    public void onPresentScreen(Ad paramAd) {}
    
    public void onReceiveAd(Ad paramAd) {}
  }
  
  private final class DFPAdListener
    implements AdListener
  {
    private DFPAdListener() {}
    
    public void onDismissScreen(Ad paramAd) {}
    
    public void onFailedToReceiveAd(Ad paramAd, AdRequest.ErrorCode paramErrorCode) {}
    
    public void onLeaveApplication(Ad paramAd) {}
    
    public void onPresentScreen(Ad paramAd) {}
    
    public void onReceiveAd(Ad paramAd) {}
  }
}
