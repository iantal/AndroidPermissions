package com.zhangzhifu.sdk.util;

import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

public class c
{
  private static String a = "@i*jl($)%^xlu!2@";
  
  public static String a(String paramString1, String paramString2)
  {
    return new String(a(b.a(paramString1.toCharArray())), paramString2);
  }
  
  private static byte[] a()
  {
    SecureRandom localSecureRandom = new SecureRandom();
    Object localObject = null;
    try
    {
      KeyGenerator localKeyGenerator = KeyGenerator.getInstance("DES");
      localObject = localKeyGenerator;
    }
    catch (NoSuchAlgorithmException localNoSuchAlgorithmException)
    {
      for (;;)
      {
        localNoSuchAlgorithmException.printStackTrace();
      }
    }
    localObject.init(localSecureRandom);
    return localObject.generateKey().getEncoded();
  }
  
  /* Error */
  private static byte[] a(byte[] paramArrayOfByte)
  {
    // Byte code:
    //   0: new 37	java/security/SecureRandom
    //   3: dup
    //   4: invokespecial 39	java/security/SecureRandom:<init>	()V
    //   7: astore_3
    //   8: invokestatic 77	com/zhangzhifu/sdk/util/c:a	()[B
    //   11: pop
    //   12: new 79	javax/crypto/spec/DESKeySpec
    //   15: dup
    //   16: getstatic 12	com/zhangzhifu/sdk/util/c:a	Ljava/lang/String;
    //   19: invokevirtual 82	java/lang/String:getBytes	()[B
    //   22: invokespecial 85	javax/crypto/spec/DESKeySpec:<init>	([B)V
    //   25: astore_1
    //   26: ldc 41
    //   28: invokestatic 90	javax/crypto/SecretKeyFactory:getInstance	(Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;
    //   31: astore_2
    //   32: aload_2
    //   33: aload_1
    //   34: invokevirtual 94	javax/crypto/SecretKeyFactory:generateSecret	(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;
    //   37: astore_2
    //   38: ldc 41
    //   40: invokestatic 99	javax/crypto/Cipher:getInstance	(Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   43: astore_1
    //   44: aload_1
    //   45: iconst_2
    //   46: aload_2
    //   47: aload_3
    //   48: invokevirtual 102	javax/crypto/Cipher:init	(ILjava/security/Key;Ljava/security/SecureRandom;)V
    //   51: aload_1
    //   52: aload_0
    //   53: invokevirtual 105	javax/crypto/Cipher:doFinal	([B)[B
    //   56: astore_0
    //   57: aload_0
    //   58: areturn
    //   59: astore_1
    //   60: aload_1
    //   61: invokevirtual 106	java/security/InvalidKeyException:printStackTrace	()V
    //   64: aconst_null
    //   65: astore_1
    //   66: goto -40 -> 26
    //   69: astore_2
    //   70: aload_2
    //   71: invokevirtual 63	java/security/NoSuchAlgorithmException:printStackTrace	()V
    //   74: aconst_null
    //   75: astore_2
    //   76: goto -44 -> 32
    //   79: astore_1
    //   80: aload_1
    //   81: invokevirtual 107	java/security/spec/InvalidKeySpecException:printStackTrace	()V
    //   84: aconst_null
    //   85: astore_2
    //   86: goto -48 -> 38
    //   89: astore_1
    //   90: aload_1
    //   91: invokevirtual 63	java/security/NoSuchAlgorithmException:printStackTrace	()V
    //   94: aconst_null
    //   95: astore_1
    //   96: goto -52 -> 44
    //   99: astore_1
    //   100: aload_1
    //   101: invokevirtual 108	javax/crypto/NoSuchPaddingException:printStackTrace	()V
    //   104: aconst_null
    //   105: astore_1
    //   106: goto -62 -> 44
    //   109: astore_2
    //   110: aload_2
    //   111: invokevirtual 106	java/security/InvalidKeyException:printStackTrace	()V
    //   114: goto -63 -> 51
    //   117: astore_0
    //   118: aload_0
    //   119: invokevirtual 109	java/lang/IllegalStateException:printStackTrace	()V
    //   122: aconst_null
    //   123: areturn
    //   124: astore_0
    //   125: aload_0
    //   126: invokevirtual 110	javax/crypto/IllegalBlockSizeException:printStackTrace	()V
    //   129: aconst_null
    //   130: areturn
    //   131: astore_0
    //   132: aload_0
    //   133: invokevirtual 111	javax/crypto/BadPaddingException:printStackTrace	()V
    //   136: aconst_null
    //   137: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	138	0	paramArrayOfByte	byte[]
    //   25	27	1	localObject1	Object
    //   59	2	1	localInvalidKeyException1	java.security.InvalidKeyException
    //   65	1	1	localObject2	Object
    //   79	2	1	localInvalidKeySpecException	java.security.spec.InvalidKeySpecException
    //   89	2	1	localNoSuchAlgorithmException1	NoSuchAlgorithmException
    //   95	1	1	localObject3	Object
    //   99	2	1	localNoSuchPaddingException	javax.crypto.NoSuchPaddingException
    //   105	1	1	localObject4	Object
    //   31	16	2	localObject5	Object
    //   69	2	2	localNoSuchAlgorithmException2	NoSuchAlgorithmException
    //   75	11	2	localObject6	Object
    //   109	2	2	localInvalidKeyException2	java.security.InvalidKeyException
    //   7	41	3	localSecureRandom	SecureRandom
    // Exception table:
    //   from	to	target	type
    //   12	26	59	java/security/InvalidKeyException
    //   26	32	69	java/security/NoSuchAlgorithmException
    //   32	38	79	java/security/spec/InvalidKeySpecException
    //   38	44	89	java/security/NoSuchAlgorithmException
    //   38	44	99	javax/crypto/NoSuchPaddingException
    //   44	51	109	java/security/InvalidKeyException
    //   51	57	117	java/lang/IllegalStateException
    //   51	57	124	javax/crypto/IllegalBlockSizeException
    //   51	57	131	javax/crypto/BadPaddingException
  }
}
