package com.zhangzhifu.sdk.util;

public class b
{
  private static char[] a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".toCharArray();
  private static byte[] b = new byte['Ā'];
  
  static
  {
    int i = 0;
    if (i >= 256)
    {
      i = 65;
      label28:
      if (i <= 90) {
        break label82;
      }
      i = 97;
      label37:
      if (i <= 122) {
        break label99;
      }
      i = 48;
    }
    for (;;)
    {
      if (i > 57)
      {
        b[43] = 62;
        b[47] = 63;
        return;
        b[i] = -1;
        i += 1;
        break;
        label82:
        b[i] = ((byte)(i - 65));
        i += 1;
        break label28;
        label99:
        b[i] = ((byte)(i + 26 - 97));
        i += 1;
        break label37;
      }
      b[i] = ((byte)(i + 52 - 48));
      i += 1;
    }
  }
  
  public static byte[] a(char[] paramArrayOfChar)
  {
    int m = 0;
    int j = paramArrayOfChar.length;
    int i = 0;
    int k;
    byte[] arrayOfByte;
    int n;
    int i1;
    for (;;)
    {
      if (i >= paramArrayOfChar.length)
      {
        k = j / 4 * 3;
        i = k;
        if (j % 4 == 3) {
          i = k + 2;
        }
        k = i;
        if (j % 4 == 2) {
          k = i + 1;
        }
        arrayOfByte = new byte[k];
        i = 0;
        n = 0;
        i1 = 0;
        k = m;
        m = i;
        if (k < paramArrayOfChar.length) {
          break;
        }
        if (m == arrayOfByte.length) {
          break label255;
        }
        throw new Error("Miscalculated data length (wrote " + m + " instead of " + arrayOfByte.length + ")");
      }
      if (paramArrayOfChar[i] <= 'ÿ')
      {
        k = j;
        if (b[paramArrayOfChar[i]] >= 0) {}
      }
      else
      {
        k = j - 1;
      }
      i += 1;
      j = k;
    }
    int i3;
    if (paramArrayOfChar[k] > 'ÿ')
    {
      i3 = -1;
      label166:
      i2 = m;
      i = n;
      j = i1;
      if (i3 >= 0)
      {
        j = i1 + 6;
        i = n << 6 | i3;
        if (j < 8) {
          break label258;
        }
        j -= 8;
        arrayOfByte[m] = ((byte)(i >> j & 0xFF));
      }
    }
    label255:
    label258:
    for (int i2 = m + 1;; i2 = m)
    {
      k += 1;
      m = i2;
      n = i;
      i1 = j;
      break;
      i3 = b[paramArrayOfChar[k]];
      break label166;
      return arrayOfByte;
    }
  }
}
