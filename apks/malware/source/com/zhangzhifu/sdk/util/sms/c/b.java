package com.zhangzhifu.sdk.util.sms.c;

import android.content.Context;
import com.zhangzhifu.sdk.util.sms.a.a;
import java.io.PrintStream;
import java.util.regex.Pattern;

public class b
{
  private static b b;
  private a a = null;
  private String c;
  private long d = 0L;
  
  public b() {}
  
  public static b a()
  {
    try
    {
      if (b == null) {
        b = new b();
      }
      b localB = b;
      return localB;
    }
    finally {}
  }
  
  public void a(Context paramContext)
  {
    if (this.a == null) {
      this.a = new a(paramContext);
    }
  }
  
  public void a(Context paramContext, int paramInt1, int paramInt2, String paramString)
  {
    a(paramContext);
    int i = paramInt1;
    switch (paramInt1)
    {
    default: 
      i = paramInt1;
    }
    for (;;)
    {
      if ((i == 6) || (i == 3) || (i == 8)) {}
      try
      {
        Pattern.compile(this.c);
        if (this.c.length() > 0)
        {
          if (paramInt2 == 0) {
            if (this.a.a(this.c.toLowerCase(), i) == -2L) {
              System.out.println("已存在相同规则");
            }
          }
          while (paramInt2 != 1)
          {
            return;
            this.c = paramString.toString().replaceAll("[^\\d?*]", "");
            i = paramInt1;
            break;
            this.c = paramString.toString().replaceAll("[^\\d?*]", "");
            i = paramInt1;
            break;
            this.c = paramString.toString().replaceAll("[\\p{P}\\p{S}\\s]", "");
            i = paramInt1;
            if (!this.c.matches("^[A-Za-z0-9]+$")) {
              break;
            }
            paramContext = new StringBuilder(this.c);
            if (!this.c.startsWith(".*")) {
              paramContext.insert(0, ".*");
            }
            if (!this.c.endsWith(".*")) {
              paramContext.insert(paramContext.length(), ".*");
            }
            this.c = paramContext.toString();
            i = 6;
            break;
            this.c = paramString.toString().replaceAll("[\\p{P}\\p{S}\\s]", "");
            if ((this.c.indexOf("*") != 0) && (this.c.length() > 0)) {
              this.c = ("*" + this.c);
            }
            i = paramInt1;
            if (this.c.lastIndexOf("*") == this.c.length() - 1) {
              break;
            }
            i = paramInt1;
            if (this.c.length() <= 1) {
              break;
            }
            this.c += "*";
            i = paramInt1;
            break;
            this.c = paramString.toString().replaceAll("\\D", "");
            i = paramInt1;
            if (!this.c.equals("11")) {
              break;
            }
            return;
            this.c = paramString.toString().replaceAll("\\s", "");
            paramContext = new StringBuilder(this.c);
            if (!this.c.startsWith(".*")) {
              paramContext.insert(0, ".*");
            }
            if (!this.c.endsWith(".*")) {
              paramContext.insert(paramContext.length(), ".*");
            }
            i = paramInt1;
            if (paramContext.length() <= 4) {
              break;
            }
            this.c = paramContext.toString();
            i = paramInt1;
            break;
            this.c = paramString.toString().replaceAll("[^\\d?*]", "");
            i = paramInt1;
            break;
            this.c = paramString.toString().replaceAll("[\\p{P}\\p{S}\\s]", "");
            i = paramInt1;
            if (!this.c.matches("^[A-Za-z0-9]+$")) {
              break;
            }
            paramContext = new StringBuilder(this.c);
            if (!this.c.startsWith(".*")) {
              paramContext.insert(0, ".*");
            }
            if (!this.c.endsWith(".*")) {
              paramContext.insert(paramContext.length(), ".*");
            }
            this.c = paramContext.toString();
            i = 6;
            break;
            paramContext = this.c.replaceAll("\\?", ".").replaceAll("\\*", ".*");
            try
            {
              Pattern.compile(paramContext);
            }
            catch (RuntimeException paramContext)
            {
              return;
            }
            System.out.println("成功添加规则");
            return;
          }
          this.a.a(this.d, this.c.toLowerCase(), i);
          return;
        }
        this.a.a("rules", this.d);
        return;
      }
      catch (RuntimeException paramContext) {}
    }
  }
}
