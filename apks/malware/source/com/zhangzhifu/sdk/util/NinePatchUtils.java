package com.zhangzhifu.sdk.util;

import android.content.Context;
import android.content.res.AssetManager;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.NinePatch;
import android.graphics.Rect;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.NinePatchDrawable;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.lang.reflect.Field;

public class NinePatchUtils
{
  private NinePatchUtils() {}
  
  private static int a(byte[] paramArrayOfByte, int paramInt)
  {
    return paramArrayOfByte[(paramInt + 0)] | paramArrayOfByte[(paramInt + 1)] << 8 | paramArrayOfByte[(paramInt + 2)] << 16 | paramArrayOfByte[(paramInt + 3)] << 24;
  }
  
  private static void a(Bitmap paramBitmap, byte[] paramArrayOfByte)
  {
    int j = 0;
    int[] arrayOfInt = new int[paramBitmap.getWidth() - 2];
    paramBitmap.getPixels(arrayOfInt, 0, arrayOfInt.length, 1, paramBitmap.getHeight() - 1, arrayOfInt.length, 1);
    int i = 0;
    if (i >= arrayOfInt.length)
    {
      label42:
      i = arrayOfInt.length - 1;
      label48:
      if (i >= 0) {
        break label127;
      }
      label52:
      arrayOfInt = new int[paramBitmap.getHeight() - 2];
      paramBitmap.getPixels(arrayOfInt, 0, 1, paramBitmap.getWidth() - 1, 0, 1, arrayOfInt.length);
      i = j;
      label83:
      if (i < arrayOfInt.length) {
        break label159;
      }
      label90:
      i = arrayOfInt.length - 1;
    }
    for (;;)
    {
      if (i < 0)
      {
        return;
        if (-16777216 == arrayOfInt[i])
        {
          a(paramArrayOfByte, 12, i);
          break label42;
        }
        i += 1;
        break;
        label127:
        if (-16777216 == arrayOfInt[i])
        {
          a(paramArrayOfByte, 16, arrayOfInt.length - i - 2);
          break label52;
        }
        i -= 1;
        break label48;
        label159:
        if (-16777216 == arrayOfInt[i])
        {
          a(paramArrayOfByte, 20, i);
          break label90;
        }
        i += 1;
        break label83;
      }
      if (-16777216 == arrayOfInt[i])
      {
        a(paramArrayOfByte, 24, arrayOfInt.length - i - 2);
        return;
      }
      i -= 1;
    }
  }
  
  private static void a(OutputStream paramOutputStream, int paramInt)
  {
    paramOutputStream.write(paramInt >> 0 & 0xFF);
    paramOutputStream.write(paramInt >> 8 & 0xFF);
    paramOutputStream.write(paramInt >> 16 & 0xFF);
    paramOutputStream.write(paramInt >> 24 & 0xFF);
  }
  
  private static void a(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
  {
    paramArrayOfByte[(paramInt1 + 0)] = ((byte)(paramInt2 >> 0));
    paramArrayOfByte[(paramInt1 + 1)] = ((byte)(paramInt2 >> 8));
    paramArrayOfByte[(paramInt1 + 2)] = ((byte)(paramInt2 >> 16));
    paramArrayOfByte[(paramInt1 + 3)] = ((byte)(paramInt2 >> 24));
  }
  
  public static Drawable decodeDrawableFromAsset(Context paramContext, String paramString)
  {
    try
    {
      paramString = readFromAsset(paramContext, paramString);
      if (paramString.getNinePatchChunk() == null) {
        return new BitmapDrawable(paramString);
      }
      Rect localRect = new Rect();
      readPaddingFromChunk(paramString.getNinePatchChunk(), localRect);
      paramContext = new NinePatchDrawable(paramContext.getResources(), paramString, paramString.getNinePatchChunk(), localRect, null);
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static Bitmap decodeFromFile(String paramString)
  {
    paramString = new FileInputStream(paramString);
    Bitmap localBitmap = decodeFromStream(paramString);
    paramString.close();
    return localBitmap;
  }
  
  public static Bitmap decodeFromStream(InputStream paramInputStream)
  {
    Object localObject = BitmapFactory.decodeStream(paramInputStream);
    paramInputStream = readChunk((Bitmap)localObject);
    if (NinePatch.isNinePatchChunk(paramInputStream))
    {
      Bitmap localBitmap = Bitmap.createBitmap((Bitmap)localObject, 1, 1, ((Bitmap)localObject).getWidth() - 2, ((Bitmap)localObject).getHeight() - 2);
      ((Bitmap)localObject).recycle();
      localObject = localBitmap.getClass().getDeclaredField("mNinePatchChunk");
      ((Field)localObject).setAccessible(true);
      ((Field)localObject).set(localBitmap, paramInputStream);
      return localBitmap;
    }
    return localObject;
  }
  
  public static void printChunkInfo(Bitmap paramBitmap)
  {
    int j = 0;
    byte[] arrayOfByte = paramBitmap.getNinePatchChunk();
    if (arrayOfByte == null)
    {
      System.out.println("can't find chunk info from this bitmap(" + paramBitmap + ")");
      return;
    }
    int k = arrayOfByte[1];
    int m = arrayOfByte[2];
    int n = arrayOfByte[3];
    paramBitmap = new StringBuilder();
    int i = a(arrayOfByte, 12);
    int i1 = a(arrayOfByte, 16);
    int i2 = a(arrayOfByte, 20);
    int i3 = a(arrayOfByte, 24);
    paramBitmap.append("peddingLeft=" + i);
    paramBitmap.append("\r\n");
    paramBitmap.append("paddingRight=" + i1);
    paramBitmap.append("\r\n");
    paramBitmap.append("paddingTop=" + i2);
    paramBitmap.append("\r\n");
    paramBitmap.append("paddingBottom=" + i3);
    paramBitmap.append("\r\n");
    paramBitmap.append("x info=");
    i = 0;
    if (i >= k)
    {
      paramBitmap.append("\r\n");
      paramBitmap.append("y info=");
      i = 0;
      label246:
      if (i < m) {
        break label337;
      }
      paramBitmap.append("\r\n");
      paramBitmap.append("color info=");
      i = j;
    }
    for (;;)
    {
      if (i >= n)
      {
        System.err.println(paramBitmap);
        return;
        i1 = a(arrayOfByte, i * 4 + 32);
        paramBitmap.append("," + i1);
        i += 1;
        break;
        label337:
        i1 = a(arrayOfByte, k * 4 + 32 + i * 4);
        paramBitmap.append("," + i1);
        i += 1;
        break label246;
      }
      j = a(arrayOfByte, k * 4 + m * 4 + 32 + i * 4);
      paramBitmap.append("," + j);
      i += 1;
    }
  }
  
  public static byte[] readChunk(Bitmap paramBitmap)
  {
    int j = paramBitmap.getWidth();
    int i3 = paramBitmap.getHeight();
    Object localObject = new ByteArrayOutputStream();
    int i = 0;
    int[] arrayOfInt;
    int m;
    label61:
    int k;
    label76:
    int i4;
    int i1;
    if (i >= 32)
    {
      arrayOfInt = new int[j - 2];
      paramBitmap.getPixels(arrayOfInt, 0, j, 1, 0, j - 2, 1);
      if (arrayOfInt[0] != -16777216) {
        break label318;
      }
      m = 1;
      if (arrayOfInt[(arrayOfInt.length - 1)] != -16777216) {
        break label324;
      }
      k = 1;
      i4 = arrayOfInt.length;
      j = 0;
      i1 = 0;
      i = 0;
      label88:
      if (j < i4) {
        break label329;
      }
      j = i;
      if (k != 0)
      {
        j = i + 1;
        a((OutputStream)localObject, arrayOfInt.length);
      }
      i = j + 1;
      if (m == 0) {
        break label461;
      }
      i -= 1;
    }
    label168:
    label184:
    label197:
    label318:
    label324:
    label329:
    label382:
    label388:
    label453:
    label461:
    for (;;)
    {
      if (k != 0) {}
      for (k = i - 1;; k = i)
      {
        arrayOfInt = new int[i3 - 2];
        paramBitmap.getPixels(arrayOfInt, 0, 1, 0, 1, 1, i3 - 2);
        int n;
        if (arrayOfInt[0] == -16777216)
        {
          n = 1;
          if (arrayOfInt[(arrayOfInt.length - 1)] != -16777216) {
            break label382;
          }
          m = 1;
          int i5 = arrayOfInt.length;
          i1 = 0;
          i3 = 0;
          i = 0;
          if (i1 < i5) {
            break label388;
          }
          i1 = i;
          if (m != 0)
          {
            i1 = i + 1;
            a((OutputStream)localObject, arrayOfInt.length);
          }
          i = i1 + 1;
          if (n == 0) {
            break label453;
          }
          i -= 1;
        }
        for (;;)
        {
          n = i;
          if (m != 0) {
            n = i - 1;
          }
          i = 0;
          for (;;)
          {
            if (i >= k * n)
            {
              localObject = ((ByteArrayOutputStream)localObject).toByteArray();
              localObject[0] = 1;
              localObject[1] = ((byte)j);
              localObject[2] = ((byte)i1);
              localObject[3] = ((byte)(n * k));
              a(paramBitmap, (byte[])localObject);
              return localObject;
              ((ByteArrayOutputStream)localObject).write(0);
              i += 1;
              break;
              m = 0;
              break label61;
              k = 0;
              break label76;
              int i2 = i1;
              n = i;
              if (i1 != arrayOfInt[j])
              {
                n = i + 1;
                a((OutputStream)localObject, j);
                i2 = arrayOfInt[j];
              }
              j += 1;
              i1 = i2;
              i = n;
              break label88;
              n = 0;
              break label168;
              m = 0;
              break label184;
              i4 = i3;
              i2 = i;
              if (i3 != arrayOfInt[i1])
              {
                i2 = i + 1;
                a((OutputStream)localObject, i1);
                i4 = arrayOfInt[i1];
              }
              i1 += 1;
              i3 = i4;
              i = i2;
              break label197;
            }
            a((OutputStream)localObject, 1);
            i += 1;
          }
        }
      }
    }
  }
  
  public static Bitmap readFromAsset(Context paramContext, String paramString)
  {
    paramContext = paramContext.getAssets().open(paramString);
    paramString = decodeFromStream(paramContext);
    paramContext.close();
    return paramString;
  }
  
  public static void readPaddingFromChunk(byte[] paramArrayOfByte, Rect paramRect)
  {
    paramRect.left = a(paramArrayOfByte, 12);
    paramRect.right = a(paramArrayOfByte, 16);
    paramRect.top = a(paramArrayOfByte, 20);
    paramRect.bottom = a(paramArrayOfByte, 24);
  }
}
