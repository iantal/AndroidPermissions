package com.pay.http;

import android.os.Handler;
import android.os.Message;
import android.util.Log;
import java.util.HashMap;

public class APHttpHandle
  extends Handler
{
  private static APHttpHandle a;
  private static Object b = new Object();
  private HashMap c = new HashMap();
  
  private APHttpHandle() {}
  
  private void a(Message paramMessage)
  {
    int i = paramMessage.what;
    paramMessage = (APBaseHttpAns)paramMessage.obj;
    String str = paramMessage.getHttpReqKey();
    IAPHttpAnsObserver localIAPHttpAnsObserver = (IAPHttpAnsObserver)this.c.get(str);
    if (localIAPHttpAnsObserver == null)
    {
      Log.i("HttpHandler", "observer is null");
      return;
    }
    unregister(str);
    switch (i)
    {
    default: 
      return;
    case 3: 
      localIAPHttpAnsObserver.onFinish(paramMessage);
      return;
    case 4: 
      localIAPHttpAnsObserver.onError(paramMessage);
      return;
    }
    localIAPHttpAnsObserver.onStop(paramMessage);
  }
  
  public static APHttpHandle getIntanceHandel()
  {
    synchronized (b)
    {
      if (a == null) {
        a = new APHttpHandle();
      }
      return a;
    }
  }
  
  public void handleMessage(Message paramMessage)
  {
    a(paramMessage);
  }
  
  public void register(String paramString, IAPHttpAnsObserver paramIAPHttpAnsObserver)
  {
    this.c.put(paramString, paramIAPHttpAnsObserver);
  }
  
  public void release()
  {
    a = null;
  }
  
  public void unregister(String paramString)
  {
    this.c.remove(paramString);
  }
}
