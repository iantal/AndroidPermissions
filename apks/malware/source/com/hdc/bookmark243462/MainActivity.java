package com.hdc.bookmark243462;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.app.ProgressDialog;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.pm.ApplicationInfo;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.View;
import android.view.Window;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import com.google.android.gms.analytics.l;
import com.google.android.gms.analytics.r;
import com.hdc.f.c;
import com.shortcut.f;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

public class MainActivity
  extends Activity
{
  public static com.hdc.d.a n;
  boolean a = false;
  com.hdc.a.a b;
  String c;
  com.hdc.c.b d;
  ProgressDialog e;
  String f;
  public String g = "checktime.txt";
  String h = "";
  boolean i = false;
  TextView j;
  ListView k;
  TextView l;
  int m;
  public String o;
  public String p;
  public String q = "";
  public String r = "";
  public String s;
  public String t = "0";
  AlertDialog u = null;
  AlertDialog v = null;
  private Calendar w = null;
  private String x = "bookmak";
  private String y = "extend_time";
  private boolean z = false;
  
  public MainActivity() {}
  
  private void a(String paramString, int paramInt1, int paramInt2)
  {
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(this);
    View localView = LayoutInflater.from(this).inflate(2130903043, null);
    this.l = ((TextView)localView.findViewById(2131230753));
    this.l.setText(paramString);
    this.l.setTextColor(-1);
    if (paramInt2 == 1) {
      localBuilder.setTitle("Điều khoản sử dụng");
    }
    paramString = new Date();
    localBuilder.setView(localView);
    localBuilder.setCancelable(false);
    localBuilder.setPositiveButton("Ok", new j(this, paramString, paramInt2, paramInt1));
    localBuilder.setNegativeButton("Cancel", new k(this, paramInt2, paramString, paramInt1));
    localBuilder.show();
  }
  
  private void c()
  {
    ConnectivityManager localConnectivityManager = (ConnectivityManager)getSystemService("connectivity");
    if ((localConnectivityManager.getActiveNetworkInfo() != null) && (localConnectivityManager.getActiveNetworkInfo().isAvailable()) && (localConnectivityManager.getActiveNetworkInfo().isConnected()))
    {
      this.a = true;
      return;
    }
    this.a = false;
  }
  
  private boolean d()
  {
    boolean bool = false;
    new ArrayList();
    ArrayList localArrayList = c.a(this);
    Log.i("Size Load IMG", localArrayList.size());
    int i1;
    if (localArrayList.size() > 0) {
      i1 = 0;
    }
    for (;;)
    {
      if (i1 >= localArrayList.size())
      {
        bool = true;
        return bool;
      }
      try
      {
        ((com.hdc.d.a)com.hdc.e.a.a.b.get(i1)).a((Bitmap)localArrayList.get(i1));
        i1 += 1;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          localException.printStackTrace();
        }
      }
    }
  }
  
  /* Error */
  private void e()
  {
    // Byte code:
    //   0: new 273	android/content/ContextWrapper
    //   3: dup
    //   4: aload_0
    //   5: invokevirtual 277	com/hdc/bookmark243462/MainActivity:getApplicationContext	()Landroid/content/Context;
    //   8: invokespecial 278	android/content/ContextWrapper:<init>	(Landroid/content/Context;)V
    //   11: invokevirtual 282	android/content/ContextWrapper:getAssets	()Landroid/content/res/AssetManager;
    //   14: astore 5
    //   16: iconst_0
    //   17: istore_1
    //   18: iload_1
    //   19: getstatic 254	com/hdc/e/a:a	Lcom/hdc/e/a;
    //   22: getfield 257	com/hdc/e/a:b	Ljava/util/ArrayList;
    //   25: invokevirtual 231	java/util/ArrayList:size	()I
    //   28: if_icmplt +4 -> 32
    //   31: return
    //   32: getstatic 254	com/hdc/e/a:a	Lcom/hdc/e/a;
    //   35: getfield 257	com/hdc/e/a:b	Ljava/util/ArrayList;
    //   38: iload_1
    //   39: invokevirtual 261	java/util/ArrayList:get	(I)Ljava/lang/Object;
    //   42: checkcast 263	com/hdc/d/a
    //   45: astore 6
    //   47: aconst_null
    //   48: astore_3
    //   49: aconst_null
    //   50: astore_2
    //   51: aload 5
    //   53: aload 6
    //   55: invokevirtual 284	com/hdc/d/a:f	()Ljava/lang/String;
    //   58: invokevirtual 290	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   61: astore 4
    //   63: aload 4
    //   65: astore_2
    //   66: aload 4
    //   68: astore_3
    //   69: aload 6
    //   71: aload 4
    //   73: invokestatic 296	android/graphics/BitmapFactory:decodeStream	(Ljava/io/InputStream;)Landroid/graphics/Bitmap;
    //   76: invokevirtual 268	com/hdc/d/a:a	(Landroid/graphics/Bitmap;)V
    //   79: aload 4
    //   81: ifnull +8 -> 89
    //   84: aload 4
    //   86: invokevirtual 301	java/io/InputStream:close	()V
    //   89: iload_1
    //   90: iconst_1
    //   91: iadd
    //   92: istore_1
    //   93: goto -75 -> 18
    //   96: astore 4
    //   98: aload_2
    //   99: astore_3
    //   100: aload 4
    //   102: invokevirtual 271	java/lang/Exception:printStackTrace	()V
    //   105: aload_2
    //   106: ifnull -17 -> 89
    //   109: aload_2
    //   110: invokevirtual 301	java/io/InputStream:close	()V
    //   113: goto -24 -> 89
    //   116: astore_2
    //   117: aload_2
    //   118: invokevirtual 271	java/lang/Exception:printStackTrace	()V
    //   121: goto -32 -> 89
    //   124: astore_2
    //   125: aload_2
    //   126: invokevirtual 271	java/lang/Exception:printStackTrace	()V
    //   129: return
    //   130: astore_2
    //   131: aload_3
    //   132: ifnull +7 -> 139
    //   135: aload_3
    //   136: invokevirtual 301	java/io/InputStream:close	()V
    //   139: aload_2
    //   140: athrow
    //   141: astore_3
    //   142: aload_3
    //   143: invokevirtual 271	java/lang/Exception:printStackTrace	()V
    //   146: goto -7 -> 139
    //   149: astore_2
    //   150: aload_2
    //   151: invokevirtual 271	java/lang/Exception:printStackTrace	()V
    //   154: goto -65 -> 89
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	157	0	this	MainActivity
    //   17	76	1	i1	int
    //   50	60	2	localObject1	Object
    //   116	2	2	localException1	Exception
    //   124	2	2	localException2	Exception
    //   130	10	2	localObject2	Object
    //   149	2	2	localException3	Exception
    //   48	88	3	localObject3	Object
    //   141	2	3	localException4	Exception
    //   61	24	4	localInputStream	java.io.InputStream
    //   96	5	4	localException5	Exception
    //   14	38	5	localAssetManager	android.content.res.AssetManager
    //   45	25	6	localA	com.hdc.d.a
    // Exception table:
    //   from	to	target	type
    //   51	63	96	java/lang/Exception
    //   69	79	96	java/lang/Exception
    //   109	113	116	java/lang/Exception
    //   0	16	124	java/lang/Exception
    //   18	31	124	java/lang/Exception
    //   32	47	124	java/lang/Exception
    //   117	121	124	java/lang/Exception
    //   139	141	124	java/lang/Exception
    //   142	146	124	java/lang/Exception
    //   150	154	124	java/lang/Exception
    //   51	63	130	finally
    //   69	79	130	finally
    //   100	105	130	finally
    //   135	139	141	java/lang/Exception
    //   84	89	149	java/lang/Exception
  }
  
  private void f()
  {
    c(com.hdc.e.a.d);
    if (com.hdc.e.a.n == 1) {
      if (this.h == "") {
        a(com.hdc.e.a.a.u, com.hdc.e.a.n, 1);
      }
    }
    for (;;)
    {
      return;
      try
      {
        i1 = Integer.valueOf(this.h).intValue();
        Log.i("SEND_SMS", i1);
        i2 = com.hdc.e.a.n;
        while (i2 > 0)
        {
          if (i2 > i1)
          {
            if (i2 != com.hdc.e.a.n) {
              break label117;
            }
            a(com.hdc.e.a.a.v, com.hdc.e.a.n, i2);
          }
          i2 -= 1;
        }
      }
      catch (Exception localException)
      {
        for (;;)
        {
          int i2;
          int i1 = 0;
          continue;
          label117:
          a(com.hdc.e.a.a.u, com.hdc.e.a.n, i2);
        }
      }
    }
  }
  
  private void g()
  {
    if (this.v == null)
    {
      AlertDialog.Builder localBuilder = new AlertDialog.Builder(this);
      localBuilder.setMessage(com.hdc.e.a.a.x);
      localBuilder.setCancelable(false);
      localBuilder.setPositiveButton("OK", new h(this));
      localBuilder.setNegativeButton("CANCEL", new i(this));
      this.v = localBuilder.create();
    }
    if (!this.v.isShowing()) {
      this.v.show();
    }
  }
  
  private Calendar h()
  {
    Object localObject2 = null;
    Calendar localCalendar = null;
    Object localObject1 = localObject2;
    try
    {
      Long localLong = Long.valueOf(getSharedPreferences(this.x, 0).getLong(this.y, 0L));
      localObject1 = localObject2;
      if (localLong.longValue() != 0L)
      {
        localObject1 = localObject2;
        localCalendar = Calendar.getInstance();
        localObject1 = localCalendar;
        localCalendar.setTime(new Date(localLong.longValue()));
      }
      return localCalendar;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return localObject1;
  }
  
  public final void a(String paramString)
  {
    SharedPreferences.Editor localEditor = getSharedPreferences(this.x, 0).edit();
    localEditor.putInt(paramString, 1);
    localEditor.commit();
  }
  
  public final void a(Date paramDate)
  {
    SharedPreferences.Editor localEditor = getSharedPreferences(this.x, 0).edit();
    localEditor.putLong(this.y, paramDate.getTime());
    localEditor.commit();
  }
  
  public final boolean a()
  {
    if (this.h.equals("")) {}
    Calendar localCalendar;
    do
    {
      do
      {
        return false;
      } while ((this.w == null) && ((this.h.equals("")) || (Integer.valueOf(this.h).intValue() != com.hdc.e.a.n)));
      Date localDate = new Date();
      localCalendar = Calendar.getInstance();
      localCalendar.setTime(localDate);
    } while ((this.w.get(1) == localCalendar.get(1)) && (this.w.get(2) == localCalendar.get(2)) && (this.w.get(5) == localCalendar.get(5)));
    return true;
  }
  
  public final int b(String paramString)
  {
    try
    {
      int i1 = getSharedPreferences(this.x, 0).getInt(paramString, 0);
      return i1;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
    return 0;
  }
  
  public final void b()
  {
    this.e = new ProgressDialog(this);
    this.e.setMessage("Đang tải file...");
    this.e.setIndeterminate(false);
    this.e.setMax(100);
    this.e.setProgressStyle(1);
    this.e.setCancelable(true);
    this.e.setCanceledOnTouchOutside(false);
    this.e.show();
  }
  
  public final void c(String paramString)
  {
    switch (Integer.parseInt(Character.toString(paramString.charAt(1))))
    {
    default: 
      paramString = "15000";
      this.m = 7;
    }
    for (;;)
    {
      this.s = String.format(com.hdc.e.a.a.w, new Object[] { paramString });
      return;
      paramString = "500";
      this.m = 0;
      continue;
      paramString = "1000";
      this.m = 1;
      continue;
      paramString = "2000";
      this.m = 2;
      continue;
      paramString = "3000";
      this.m = 3;
      continue;
      paramString = "4000";
      this.m = 4;
      continue;
      paramString = "5000";
      this.m = 5;
      continue;
      paramString = "10000";
      this.m = 6;
      continue;
      paramString = "15000";
      this.m = 7;
    }
  }
  
  public void onBackPressed()
  {
    super.onBackPressed();
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    requestWindowFeature(1);
    getWindow().setFlags(1024, 1024);
    setContentView(2130903040);
    boolean bool;
    for (;;)
    {
      try
      {
        c();
        paramBundle = com.hdc.e.a.a;
        this.d = new com.hdc.c.b(this);
        this.d.show();
        localObject = (TelephonyManager)getSystemService("phone");
        str = ((TelephonyManager)localObject).getNetworkOperator();
        if (str == null) {
          break label726;
        }
        if (str.equals(""))
        {
          break label726;
          paramBundle.g = bool;
          new ArrayList();
          paramBundle = c.a(this);
        }
      }
      catch (Exception paramBundle)
      {
        Object localObject;
        String str;
        label163:
        paramBundle.printStackTrace();
        return;
      }
      try
      {
        this.f = new String(com.hdc.f.a.a(((String)paramBundle.get(0)).toString()));
        com.hdc.e.a.a.a(this.f);
        if (!this.z) {
          break label711;
        }
        this.i = d();
        paramBundle = c.a(this, this.g).split(" ");
        this.h = paramBundle[0];
        if (paramBundle.length == 2)
        {
          this.w = Calendar.getInstance();
          this.w.setTime(new Date(Long.valueOf(paramBundle[1]).longValue()));
        }
      }
      catch (Exception paramBundle)
      {
        paramBundle.printStackTrace();
      }
    }
    if ((com.hdc.e.a.a.b.size() == 1) && (com.hdc.e.a.r.equals(com.hdc.e.a.t))) {
      setRequestedOrientation(0);
    }
    paramBundle = h();
    if (paramBundle != null) {
      this.w = paramBundle;
    }
    if ((this.a) && (!this.i) && (this.z)) {
      new m(this).execute(new Void[0]);
    }
    if (!this.a) {
      Toast.makeText(this, "Bạn vui lòng kiểm tra kết nối Internet", 10).show();
    }
    f();
    this.j = ((TextView)findViewById(2131230747));
    this.k = ((ListView)findViewById(2131230748));
    this.b = new com.hdc.a.a(this, com.hdc.e.a.a.b, com.hdc.e.a.k, Integer.valueOf(com.hdc.e.a.m));
    this.k = ((ListView)findViewById(2131230748));
    this.j.setBackgroundColor(Color.parseColor(com.hdc.e.a.h));
    this.j.setTextColor(Color.parseColor(com.hdc.e.a.j));
    this.j.setText(com.hdc.e.a.l);
    if (com.hdc.e.a.a.b.size() > 1)
    {
      this.k.setAdapter(this.b);
      this.j.setVisibility(0);
    }
    if (com.hdc.e.a.a.b.size() > 1) {
      this.k.setOnItemClickListener(new e(this));
    }
    if (com.hdc.e.a.a.b.size() == 1) {
      findViewById(2131230748).setOnTouchListener(new b(this));
    }
    paramBundle = new f();
    localObject = com.hdc.e.a.a.y;
    paramBundle.a(this, com.hdc.e.a.a.z);
    return;
    int i1 = Integer.parseInt(str.substring(3));
    switch (Integer.valueOf(((TelephonyManager)localObject).getSimState()).intValue())
    {
    }
    for (;;)
    {
      this.c = "OTHER";
      for (;;)
      {
        this.d.dismiss();
        break;
        bool = false;
        break label733;
        bool = false;
        break label733;
        bool = false;
        break label733;
        bool = false;
        break label733;
        bool = true;
        break label733;
        bool = false;
        break label733;
        this.c = "VMS";
        continue;
        this.c = "VNP";
        continue;
        this.c = "VTT";
        continue;
        this.c = "VIETNAM_MOBILE";
        continue;
        this.c = "BEELINE";
      }
      label711:
      e();
      break label163;
      label726:
      bool = false;
      break;
      bool = true;
      label733:
      switch (i1)
      {
      }
    }
  }
  
  public boolean onCreateOptionsMenu(Menu paramMenu)
  {
    getMenuInflater().inflate(2131492865, paramMenu);
    return true;
  }
  
  public void onResume()
  {
    super.onResume();
    if (a()) {
      g();
    }
  }
  
  public void onStart()
  {
    super.onStart();
    r localR = ((GAApplicationController)getApplication()).a(a.a);
    localR.a(true);
    localR.a(getApplicationInfo().packageName);
    localR.a(new l().a());
  }
}
