package com.revmob.ads.fullscreen.client;

import android.graphics.Bitmap;
import com.revmob.RevMobAdsListener;
import com.revmob.ads.internal.Ad;
import com.revmob.ads.internal.AdRevMobClientListener;
import com.revmob.ads.internal.AnimationConfiguration;
import com.revmob.ads.internal.CloseAnimationConfiguration;
import com.revmob.ads.internal.ShowAnimationConfiguration;
import com.revmob.internal.HTTPHelper;
import com.revmob.internal.RMLog;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class FullscreenClientListener
  extends AdRevMobClientListener
{
  public FullscreenClientListener(Ad paramAd, RevMobAdsListener paramRevMobAdsListener)
  {
    super(paramAd, paramRevMobAdsListener);
  }
  
  public static FullscreenData createData(String paramString, RevMobAdsListener paramRevMobAdsListener)
    throws JSONException
  {
    Object localObject2 = new JSONObject(paramString).getJSONObject("fullscreen");
    String str2 = getAppOrSite((JSONObject)localObject2);
    boolean bool1 = getOpenInside((JSONObject)localObject2);
    paramString = ((JSONObject)localObject2).getJSONArray("links");
    String str3 = getClickUrl(paramString);
    boolean bool2 = getFollowRedirect((JSONObject)localObject2);
    String str4 = getImpressionUrl(paramString);
    String str5 = getLinkByRel(paramString, "html");
    String str6 = getLinkByRel(paramString, "dsp_url");
    String str7 = getLinkByRel(paramString, "dsp_html");
    String str9 = getLinkByRel(paramString, "image_portrait");
    String str8 = getLinkByRel(paramString, "image_landscape");
    String str10 = getLinkByRel(paramString, "image");
    j = 0;
    ShowAnimationConfiguration localShowAnimationConfiguration = new ShowAnimationConfiguration();
    CloseAnimationConfiguration localCloseAnimationConfiguration = new CloseAnimationConfiguration();
    try
    {
      paramString = ((JSONObject)localObject2).getJSONObject("animation");
      long l = paramString.getLong("duration");
      localShowAnimationConfiguration.setTime(l);
      localCloseAnimationConfiguration.setTime(l);
      localObject1 = paramString.getJSONArray("show");
      i = 0;
      while (i < ((JSONArray)localObject1).length())
      {
        localShowAnimationConfiguration.addAnimation(((JSONArray)localObject1).getString(i));
        i += 1;
      }
      localObject1 = paramString.getJSONArray("close");
      i = 0;
      while (i < ((JSONArray)localObject1).length())
      {
        localCloseAnimationConfiguration.addAnimation(((JSONArray)localObject1).getString(i));
        i += 1;
      }
      i = paramString.getInt("parallax_delta");
    }
    catch (JSONException paramString)
    {
      for (;;)
      {
        Object localObject1;
        String str1;
        int i = j;
      }
    }
    str1 = new String();
    localObject1 = new String();
    paramString = str1;
    try
    {
      localObject2 = ((JSONObject)localObject2).getJSONObject("sound");
      paramString = str1;
      str1 = ((JSONObject)localObject2).getString("on_show");
      paramString = str1;
      localObject2 = ((JSONObject)localObject2).getString("on_click");
      localObject1 = localObject2;
      paramString = str1;
    }
    catch (JSONException localJSONException)
    {
      Bitmap localBitmap2;
      Bitmap localBitmap1;
      HTTPHelper localHTTPHelper;
      for (;;) {}
    }
    localObject2 = null;
    localBitmap2 = null;
    localBitmap1 = null;
    localHTTPHelper = new HTTPHelper();
    str1 = null;
    if ((str6 != null) || (str7 != null)) {
      RMLog.d("Fullscreen DSP");
    }
    for (;;)
    {
      RMLog.i("Fullscreen loaded");
      return new FullscreenData(str4, str3, bool2, paramRevMobAdsListener, str5, str1, str6, str7, (Bitmap)localObject2, localBitmap1, localBitmap2, localShowAnimationConfiguration, localCloseAnimationConfiguration, str2, bool1, paramString, (String)localObject1, i);
      if (str5 == null)
      {
        if ((str9 != null) && (str8 != null))
        {
          RMLog.d("Fullscreen static for orientations");
          localBitmap2 = localHTTPHelper.downloadBitmap(str9);
          localBitmap1 = localHTTPHelper.downloadBitmap(str8);
        }
        else
        {
          RMLog.d("Fullscreen static");
          localObject2 = localHTTPHelper.downloadBitmap(str10);
        }
      }
      else
      {
        RMLog.d("Fullscreen Web");
        str1 = localHTTPHelper.downloadHtml(str5);
      }
    }
  }
  
  public void handleResponse(String paramString)
    throws JSONException
  {
    this.ad.updateWithData(createData(paramString, this.publisherListener));
  }
}
