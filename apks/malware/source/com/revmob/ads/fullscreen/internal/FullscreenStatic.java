package com.revmob.ads.fullscreen.internal;

import android.app.Activity;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.graphics.Canvas;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.WindowManager;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import com.revmob.ads.fullscreen.client.FullscreenData;
import com.revmob.ads.internal.StaticAssets;
import com.revmob.internal.AndroidHelper;

public class FullscreenStatic
  extends RelativeLayout
  implements FullscreenView
{
  private int amplitudeMax = 28;
  private FullscreenData data;
  private ImageView fullscreenImageView;
  private int height;
  private int initialAngleX = 64537;
  private int initialAngleY = 64537;
  private int initialX;
  private int initialY;
  private int parallaxDelta = 0;
  private boolean parallaxEnabled = false;
  private int width;
  private int x = 0;
  private int y = 0;
  
  public FullscreenStatic(Activity paramActivity, FullscreenData paramFullscreenData, FullscreenClickListener paramFullscreenClickListener, boolean paramBoolean, int paramInt)
  {
    super(paramActivity);
    this.data = paramFullscreenData;
    this.parallaxEnabled = paramBoolean;
    if (paramInt <= this.amplitudeMax)
    {
      this.parallaxDelta = paramInt;
      if (!paramBoolean) {
        break label258;
      }
      paramFullscreenData = new DisplayMetrics();
      paramActivity.getWindowManager().getDefaultDisplay().getMetrics(paramFullscreenData);
      this.width = paramFullscreenData.widthPixels;
      this.height = paramFullscreenData.heightPixels;
      this.initialX = 0;
      this.initialY = 0;
      this.x = this.initialX;
      this.y = this.initialY;
      setWillNotDraw(false);
      paramFullscreenData = new RelativeLayout.LayoutParams(this.width, this.height);
      setGravity(48);
      paramFullscreenData.leftMargin = 0;
      paramFullscreenData.topMargin = 0;
      addView(createImageAdView(paramFullscreenClickListener), paramFullscreenData);
    }
    for (;;)
    {
      paramInt = AndroidHelper.dipToPixels(paramActivity, 40);
      paramFullscreenData = new RelativeLayout.LayoutParams(paramInt, paramInt);
      paramInt = AndroidHelper.dipToPixels(paramActivity, 20);
      paramFullscreenData.rightMargin = paramInt;
      paramFullscreenData.topMargin = paramInt;
      paramFullscreenData.addRule(11);
      paramFullscreenData.addRule(6);
      addView(createCloseButton(paramFullscreenClickListener), paramFullscreenData);
      return;
      paramInt = this.amplitudeMax;
      break;
      label258:
      paramFullscreenData = new RelativeLayout.LayoutParams(-1, -1);
      addView(createImageAdView(paramFullscreenClickListener), paramFullscreenData);
    }
  }
  
  private View createCloseButton(final FullscreenClickListener paramFullscreenClickListener)
  {
    ImageView localImageView = new ImageView(getContext());
    localImageView.setImageDrawable(StaticAssets.getCloseButton());
    localImageView.setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        paramFullscreenClickListener.onClose();
      }
    });
    return localImageView;
  }
  
  private View createImageAdView(final FullscreenClickListener paramFullscreenClickListener)
  {
    this.fullscreenImageView = new ImageView(getContext());
    update();
    this.fullscreenImageView.setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        paramFullscreenClickListener.onClick();
      }
    });
    return this.fullscreenImageView;
  }
  
  protected void onDraw(Canvas paramCanvas)
  {
    if (this.parallaxEnabled) {
      paramCanvas.translate(this.x, this.y);
    }
    super.onDraw(paramCanvas);
  }
  
  public void update()
  {
    if (this.fullscreenImageView != null)
    {
      int i = getResources().getConfiguration().orientation;
      this.fullscreenImageView.setImageBitmap(this.data.getAdImage(i));
      if (this.data.isStaticMultiOrientationFullscreen()) {
        this.fullscreenImageView.setScaleType(ImageView.ScaleType.FIT_XY);
      }
    }
    else
    {
      return;
    }
    this.fullscreenImageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
  }
  
  public void updateAccordingToDevicePosition(int paramInt1, int paramInt2)
  {
    if (this.parallaxEnabled)
    {
      if (this.initialAngleX == 64537) {
        this.initialAngleX = paramInt1;
      }
      if (this.initialAngleY == 64537) {
        this.initialAngleY = paramInt2;
      }
      paramInt1 -= this.initialAngleX;
      if (paramInt1 < 0) {
        break label124;
      }
      paramInt1 = Math.abs(paramInt1);
      this.x = Math.max(this.initialX - this.parallaxDelta, this.initialX - paramInt1);
      paramInt1 = paramInt2 - this.initialAngleY;
      if (paramInt1 < 0) {
        break label154;
      }
      paramInt1 = Math.abs(paramInt1);
    }
    for (this.y = Math.max(this.initialY - this.parallaxDelta, this.initialY - paramInt1);; this.y = Math.min(this.initialY + this.parallaxDelta, this.initialY + paramInt1))
    {
      if (!AndroidHelper.isUIThread()) {
        break label184;
      }
      invalidate();
      return;
      label124:
      paramInt1 = Math.abs(paramInt1);
      this.x = Math.min(this.initialX + this.parallaxDelta, this.initialX + paramInt1);
      break;
      label154:
      paramInt1 = Math.abs(paramInt1);
    }
    label184:
    postInvalidate();
  }
}
