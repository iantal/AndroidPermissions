package com.revmob.ads.link;

import android.app.Activity;
import com.revmob.RevMobAdsListener;
import com.revmob.ads.internal.Ad;
import com.revmob.ads.internal.AdState;
import com.revmob.ads.link.client.LinkClientListener;
import com.revmob.android.RevMobContext;
import com.revmob.client.AdData;
import com.revmob.client.RevMobClient;
import com.revmob.internal.MarketAsyncManager;
import com.revmob.internal.RMLog;

public class RevMobLink
  implements Ad
{
  private Activity activity;
  public boolean autoopen = false;
  private AdData data;
  private RevMobAdsListener publisherListener;
  private AdState state;
  
  public RevMobLink(Activity paramActivity, RevMobAdsListener paramRevMobAdsListener)
  {
    this.activity = paramActivity;
    this.publisherListener = paramRevMobAdsListener;
    this.state = AdState.CREATED;
  }
  
  private boolean isLoaded()
  {
    return this.data != null;
  }
  
  public void cancel()
  {
    this.autoopen = false;
  }
  
  public void load()
  {
    load(null);
  }
  
  public void load(String paramString)
  {
    if ((this.state == AdState.CREATED) || (this.state == AdState.CLOSED)) {
      if (paramString == null) {
        break label75;
      }
    }
    label75:
    for (String str = "Loading Link " + paramString;; str = "Loading Link")
    {
      RMLog.i(str);
      RevMobClient.getInstance().fetchAdLink(paramString, RevMobContext.toPayload(this.activity), new LinkClientListener(this, this.publisherListener));
      return;
    }
  }
  
  public void open()
  {
    this.autoopen = true;
    if ((isLoaded()) && (this.state != AdState.DISPLAYED))
    {
      this.state = AdState.DISPLAYED;
      if (this.publisherListener != null) {
        this.publisherListener.onRevMobAdDisplayed();
      }
      RevMobClient.getInstance().reportImpression(this.data.getImpressionUrl(), RevMobContext.toPayload(this.activity));
      this.activity.runOnUiThread(new Runnable()
      {
        public void run()
        {
          new MarketAsyncManager(RevMobLink.this.activity, RevMobLink.this.data, RevMobLink.this.publisherListener).execute(new Void[0]);
        }
      });
    }
    while ((this.state == AdState.CREATED) || (this.state == AdState.CLOSED)) {
      return;
    }
    RMLog.i("The ad is not completely loaded yet. As soon as it is loaded, it is going to be displayed automatically.");
  }
  
  public void updateWithData(AdData paramAdData)
  {
    this.state = AdState.LOADED;
    this.data = paramAdData;
    if (this.publisherListener != null) {
      this.publisherListener.onRevMobAdReceived();
    }
    if (this.autoopen) {
      open();
    }
  }
}
