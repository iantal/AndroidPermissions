package com.revmob.ads.internal;

import android.view.animation.Animation;
import android.view.animation.AnimationSet;
import android.view.animation.DecelerateInterpolator;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public abstract class AnimationConfiguration
{
  private List<String> animations = new ArrayList();
  private long time = 500L;
  
  public AnimationConfiguration() {}
  
  public void addAnimation(String paramString)
  {
    this.animations.add(paramString);
  }
  
  public abstract Animation createClockwise();
  
  public abstract Animation createCounterClockwise();
  
  public abstract Animation createFadeIn();
  
  public abstract Animation createFadeOut();
  
  public abstract Animation createSlideDown();
  
  public abstract Animation createSlideLeft();
  
  public abstract Animation createSlideRight();
  
  public abstract Animation createSlideUp();
  
  public abstract Animation createZoomIn();
  
  public abstract Animation createZoomOut();
  
  public Animation getAnimation()
  {
    AnimationSet localAnimationSet = new AnimationSet(true);
    Iterator localIterator = this.animations.iterator();
    while (localIterator.hasNext())
    {
      String str = (String)localIterator.next();
      if (str.equals("fade_in")) {
        localAnimationSet.addAnimation(createFadeIn());
      } else if (str.equals("fade_out")) {
        localAnimationSet.addAnimation(createFadeOut());
      } else if (str.equals("zoom_in")) {
        localAnimationSet.addAnimation(createZoomIn());
      } else if (str.equals("zoom_out")) {
        localAnimationSet.addAnimation(createZoomOut());
      } else if (str.equals("slide_up")) {
        localAnimationSet.addAnimation(createSlideUp());
      } else if (str.equals("slide_down")) {
        localAnimationSet.addAnimation(createSlideDown());
      } else if (str.equals("slide_right")) {
        localAnimationSet.addAnimation(createSlideRight());
      } else if (str.equals("slide_left")) {
        localAnimationSet.addAnimation(createSlideLeft());
      } else if (str.equals("rotate_clockwise")) {
        localAnimationSet.addAnimation(createClockwise());
      } else if (str.equals("rotate_counterclockwise")) {
        localAnimationSet.addAnimation(createCounterClockwise());
      }
    }
    localAnimationSet.setInterpolator(new DecelerateInterpolator());
    localAnimationSet.setDuration(this.time);
    return localAnimationSet;
  }
  
  public void setTime(long paramLong)
  {
    this.time = paramLong;
  }
}
