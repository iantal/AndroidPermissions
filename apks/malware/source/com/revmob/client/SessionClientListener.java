package com.revmob.client;

import android.app.Activity;
import com.revmob.ads.internal.AdRevMobClientListener;
import com.revmob.android.RevMobContext;
import com.revmob.internal.HTTPHelper;
import com.revmob.internal.RMLog;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class SessionClientListener
  implements RevMobClientListener
{
  private Activity activity;
  private boolean needToRegisterInstall;
  
  public SessionClientListener(Activity paramActivity, boolean paramBoolean)
  {
    this.activity = paramActivity;
    this.needToRegisterInstall = paramBoolean;
  }
  
  public void handleError(String paramString)
  {
    RMLog.d(paramString);
  }
  
  public void handleResponse(String paramString)
    throws JSONException
  {
    Object localObject = new JSONObject(paramString);
    paramString = ((JSONObject)localObject).getJSONArray("links");
    HTTPHelper.setUserAgent(AdRevMobClientListener.getCustomUserAgent((JSONObject)localObject), null);
    int i = 0;
    for (;;)
    {
      if (i < paramString.length()) {}
      try
      {
        localObject = paramString.getJSONObject(i).getString("rel");
        String str = paramString.getJSONObject(i).getString("href");
        RevMobClient.getInstance().addServerEndPoint((String)localObject, str);
        i += 1;
        continue;
        if (this.needToRegisterInstall) {
          RevMobClient.getInstance().registerInstall(RevMobContext.toPayload(this.activity), new InstallClientListener(this.activity));
        }
        return;
      }
      catch (JSONException localJSONException)
      {
        for (;;) {}
      }
    }
  }
}
