package com.a.a.b.d;

import android.content.ContentResolver;
import android.content.Context;
import android.content.res.AssetManager;
import android.content.res.Resources;
import android.net.Uri;
import android.provider.ContactsContract.Contacts;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;

public class a
  implements c
{
  protected final Context a;
  protected final int b;
  protected final int c;
  
  public a(Context paramContext)
  {
    this.a = paramContext.getApplicationContext();
    this.b = 5000;
    this.c = 20000;
  }
  
  public InputStream a(String paramString, Object paramObject)
  {
    switch (b.a[d.a(paramString).ordinal()])
    {
    default: 
      return h(paramString, paramObject);
    case 1: 
    case 2: 
      return b(paramString, paramObject);
    case 3: 
      return d(paramString, paramObject);
    case 4: 
      return e(paramString, paramObject);
    case 5: 
      return f(paramString, paramObject);
    }
    return g(paramString, paramObject);
  }
  
  protected InputStream b(String paramString, Object paramObject)
  {
    paramString = c(paramString, paramObject);
    int i = 0;
    while ((paramString.getResponseCode() / 100 == 3) && (i < 5))
    {
      paramString = c(paramString.getHeaderField("Location"), paramObject);
      i += 1;
    }
    try
    {
      paramObject = paramString.getInputStream();
      return new com.a.a.b.a.a(new BufferedInputStream(paramObject, 32768), paramString.getContentLength());
    }
    catch (IOException paramObject)
    {
      com.a.a.c.c.a(paramString.getErrorStream());
      throw paramObject;
    }
  }
  
  protected HttpURLConnection c(String paramString, Object paramObject)
  {
    paramString = (HttpURLConnection)new URL(Uri.encode(paramString, "@#&=*+-_.,:!?()/~'%")).openConnection();
    paramString.setConnectTimeout(this.b);
    paramString.setReadTimeout(this.c);
    return paramString;
  }
  
  protected InputStream d(String paramString, Object paramObject)
  {
    paramString = d.c.c(paramString);
    return new com.a.a.b.a.a(new BufferedInputStream(new FileInputStream(paramString), 32768), (int)new File(paramString).length());
  }
  
  protected InputStream e(String paramString, Object paramObject)
  {
    paramObject = this.a.getContentResolver();
    Uri localUri = Uri.parse(paramString);
    if (paramString.startsWith("content://com.android.contacts/")) {
      return ContactsContract.Contacts.openContactPhotoInputStream(paramObject, localUri);
    }
    return paramObject.openInputStream(localUri);
  }
  
  protected InputStream f(String paramString, Object paramObject)
  {
    paramString = d.e.c(paramString);
    return this.a.getAssets().open(paramString);
  }
  
  protected InputStream g(String paramString, Object paramObject)
  {
    int i = Integer.parseInt(d.f.c(paramString));
    return this.a.getResources().openRawResource(i);
  }
  
  protected InputStream h(String paramString, Object paramObject)
  {
    throw new UnsupportedOperationException(String.format("UIL doesn't support scheme(protocol) by default [%s]. You should implement this support yourself (BaseImageDownloader.getStreamFromOtherSource(...))", new Object[] { paramString }));
  }
}
