package com.a.a;

import android.content.Context;
import android.os.Environment;
import android.provider.Settings.Secure;
import android.provider.Settings.System;
import android.text.TextUtils;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;
import java.util.UUID;

public final class ac
{
  public static String a(Context paramContext)
  {
    a(paramContext, "android.permission.WRITE_SETTINGS");
    a(paramContext, "android.permission.READ_PHONE_STATE");
    a(paramContext, "android.permission.WRITE_EXTERNAL_STORAGE");
    Object localObject1 = ad.a(paramContext);
    String str2 = ((ad)localObject1).a;
    if (!((ad)localObject1).b) {}
    String str3;
    for (int i = 1;; i = 0)
    {
      str3 = c(paramContext);
      if (i == 0) {
        break;
      }
      localObject1 = aa.a(("com.baidu" + str3).getBytes(), true);
      return localObject1;
    }
    Object localObject2 = null;
    String str1 = Settings.System.getString(paramContext.getContentResolver(), "com.baidu.deviceid");
    Object localObject3;
    if (!TextUtils.isEmpty(str1))
    {
      localObject3 = localObject2;
      localObject1 = str1;
      if (!a())
      {
        a(str2, str1);
        localObject1 = str1;
        localObject3 = localObject2;
      }
    }
    for (;;)
    {
      localObject2 = localObject1;
      if (TextUtils.isEmpty((CharSequence)localObject1))
      {
        localObject1 = a(str2);
        localObject2 = localObject1;
        if (!TextUtils.isEmpty((CharSequence)localObject1))
        {
          Settings.System.putString(paramContext.getContentResolver(), localObject3, (String)localObject1);
          Settings.System.putString(paramContext.getContentResolver(), "com.baidu.deviceid", (String)localObject1);
          localObject2 = localObject1;
        }
      }
      localObject1 = localObject2;
      if (!TextUtils.isEmpty((CharSequence)localObject2)) {
        break;
      }
      localObject1 = UUID.randomUUID().toString();
      localObject1 = aa.a((str2 + str3 + (String)localObject1).getBytes(), true);
      Settings.System.putString(paramContext.getContentResolver(), localObject3, (String)localObject1);
      Settings.System.putString(paramContext.getContentResolver(), "com.baidu.deviceid", (String)localObject1);
      a(str2, (String)localObject1);
      return localObject1;
      localObject2 = aa.a(("com.baidu" + str2 + str3).getBytes(), true);
      str1 = Settings.System.getString(paramContext.getContentResolver(), (String)localObject2);
      localObject3 = localObject2;
      localObject1 = str1;
      if (!TextUtils.isEmpty(str1))
      {
        Settings.System.putString(paramContext.getContentResolver(), "com.baidu.deviceid", str1);
        a(str2, str1);
        localObject3 = localObject2;
        localObject1 = str1;
      }
    }
  }
  
  private static String a(String paramString)
  {
    int i = 0;
    Object localObject2;
    if (TextUtils.isEmpty(paramString)) {
      localObject2 = "";
    }
    label37:
    Object localObject5;
    for (;;)
    {
      return localObject2;
      localObject2 = "";
      Object localObject1 = new File(Environment.getExternalStorageDirectory(), "baidu/.cuid");
      Object localObject3;
      Object localObject4;
      if (((File)localObject1).exists())
      {
        localObject3 = localObject2;
        localObject4 = localObject2;
        localObject5 = localObject2;
      }
      try
      {
        localObject1 = new BufferedReader(new FileReader((File)localObject1));
        localObject3 = localObject2;
        localObject4 = localObject2;
        localObject5 = localObject2;
        localObject6 = new StringBuilder();
        for (;;)
        {
          localObject3 = localObject2;
          localObject4 = localObject2;
          localObject5 = localObject2;
          String str = ((BufferedReader)localObject1).readLine();
          if (str == null) {
            break;
          }
          localObject3 = localObject2;
          localObject4 = localObject2;
          localObject5 = localObject2;
          ((StringBuilder)localObject6).append(str);
          localObject3 = localObject2;
          localObject4 = localObject2;
          localObject5 = localObject2;
          ((StringBuilder)localObject6).append("\r\n");
        }
      }
      catch (FileNotFoundException paramString)
      {
        return localObject3;
        localObject1 = new File(Environment.getExternalStorageDirectory(), "backups/.SystemConfig/.cuid");
        i = 1;
        break label37;
        localObject3 = localObject2;
        localObject4 = localObject2;
        localObject5 = localObject2;
        ((BufferedReader)localObject1).close();
        localObject3 = localObject2;
        localObject4 = localObject2;
        localObject5 = localObject2;
        Object localObject6 = new String(g.b("30212102dicudiab", "30212102dicudiab", z.a(((StringBuilder)localObject6).toString().getBytes()))).split("=");
        localObject1 = localObject2;
        if (localObject6 != null)
        {
          localObject3 = localObject2;
          localObject1 = localObject2;
          localObject4 = localObject2;
          localObject5 = localObject2;
          if (localObject6.length == 2)
          {
            localObject3 = localObject2;
            localObject1 = localObject2;
            localObject4 = localObject2;
            localObject5 = localObject2;
            if (paramString.equals(localObject6[0])) {
              localObject1 = localObject6[1];
            }
          }
        }
        localObject2 = localObject1;
        if (i == 0)
        {
          localObject3 = localObject1;
          localObject4 = localObject1;
          localObject5 = localObject1;
          a(paramString, (String)localObject1);
          return localObject1;
        }
      }
      catch (IOException paramString)
      {
        return localObject4;
      }
      catch (Exception paramString) {}
    }
    return localObject5;
  }
  
  private static void a(Context paramContext, String paramString)
  {
    if (paramContext.checkCallingOrSelfPermission(paramString) == 0) {}
    for (int i = 1; i == 0; i = 0) {
      throw new SecurityException("Permission Denial: requires permission " + paramString);
    }
  }
  
  private static void a(String paramString1, String paramString2)
  {
    if (TextUtils.isEmpty(paramString1)) {
      return;
    }
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(paramString1);
    localStringBuilder.append("=");
    localStringBuilder.append(paramString2);
    paramString1 = new File(Environment.getExternalStorageDirectory(), "backups/.SystemConfig");
    paramString2 = new File(paramString1, ".cuid");
    try
    {
      if ((paramString1.exists()) && (!paramString1.isDirectory()))
      {
        Random localRandom = new Random();
        File localFile1 = paramString1.getParentFile();
        String str = paramString1.getName();
        File localFile2;
        do
        {
          localFile2 = new File(localFile1, str + localRandom.nextInt() + ".tmp");
        } while (localFile2.exists());
        paramString1.renameTo(localFile2);
        localFile2.delete();
      }
      paramString1.mkdirs();
      paramString1 = new FileWriter(paramString2, false);
      paramString1.write(z.a(g.a("30212102dicudiab", "30212102dicudiab", localStringBuilder.toString().getBytes()), "utf-8"));
      paramString1.flush();
      paramString1.close();
      return;
    }
    catch (IOException paramString1) {}catch (Exception paramString1) {}
  }
  
  private static boolean a()
  {
    return new File(Environment.getExternalStorageDirectory(), "backups/.SystemConfig/.cuid").exists();
  }
  
  public static String b(Context paramContext)
  {
    return ad.a(paramContext).a;
  }
  
  public static String c(Context paramContext)
  {
    String str = Settings.Secure.getString(paramContext.getContentResolver(), "android_id");
    paramContext = str;
    if (TextUtils.isEmpty(str)) {
      paramContext = "";
    }
    return paramContext;
  }
}
