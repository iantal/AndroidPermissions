package com.a.a.a.e.l;

import java.lang.reflect.Array;
import java.math.BigInteger;

class g
{
  private static int a;
  private static int b;
  private static int c;
  private static int d;
  private static int[][] e;
  private static int f;
  private static int g;
  private static int h;
  private static int i;
  private static int j;
  private static int k;
  private static int l;
  private static int m;
  private static int[][] n;
  private static int[][] o;
  private static int p;
  private static String q;
  private static int r;
  
  static
  {
    int i4 = 0;
    int i1 = 0;
    a = 42;
    b = 8;
    c = 4;
    d = 5;
    Object localObject1 = { 3, 8, 2, 1, 1 };
    Object localObject2 = { 2, 7, 4, 1, 1 };
    int[] arrayOfInt1 = { 1, 5, 7, 1, 1 };
    int[] arrayOfInt2 = { 1, 3, 9, 1, 1 };
    e = new int[][] { localObject1, { 3, 5, 5, 1, 1 }, { 3, 3, 7, 1, 1 }, { 3, 1, 9, 1, 1 }, localObject2, { 2, 5, 6, 1, 1 }, { 2, 3, 8, 1, 1 }, arrayOfInt1, arrayOfInt2 };
    f = 0;
    g = 1;
    h = 2;
    i = 3;
    j = 4;
    k = 5;
    l = 6;
    m = 7;
    n = new int[][] { { 0, 160, 12, 4, 8, 1, 161, 1 }, { 161, 960, 10, 6, 6, 3, 80, 10 }, { 961, 2014, 8, 8, 4, 5, 31, 34 }, { 2015, 2714, 6, 10, 3, 6, 10, 70 }, { 2715, 2840, 4, 12, 1, 8, 1, 126 } };
    localObject1 = new int[] { 336, 1035, 7, 8, 4, 5, 20, 35 };
    localObject2 = new int[] { 1516, 1596, 11, 4, 8, 1, 81, 1 };
    o = new int[][] { { 0, 335, 5, 10, 2, 7, 4, 84 }, localObject1, { 1036, 1515, 9, 6, 6, 3, 48, 10 }, localObject2 };
    p = 4;
    localObject1 = "}BKpj~@".toCharArray();
    int i2 = localObject1.length;
    localObject2 = localObject1;
    int i3 = i2;
    label814:
    int i5;
    if (i2 <= 1)
    {
      i4 = i1;
      i3 = i1;
      localObject2 = localObject1;
      i5 = localObject2[i3];
      switch (i4 % 5)
      {
      default: 
        i1 = 90;
      }
    }
    for (;;)
    {
      localObject2[i3] = ((char)(i1 ^ i5));
      i4 += 1;
      if (i2 == 0)
      {
        i3 = i2;
        break label814;
      }
      i3 = i2;
      localObject2 = localObject1;
      localObject1 = localObject2;
      i2 = i3;
      i1 = i4;
      if (i3 > i4) {
        break;
      }
      q = new String((char[])localObject2).intern();
      r = 1597;
      return;
      i1 = 73;
      continue;
      i1 = 119;
      continue;
      i1 = 120;
      continue;
      i1 = 71;
    }
  }
  
  g() {}
  
  private static int a(long paramLong, int paramInt)
  {
    int i2 = 0;
    boolean bool = a.I;
    int i1 = i2;
    if (a(paramInt))
    {
      paramInt = 0;
      do
      {
        if (paramInt >= n.length) {
          break;
        }
        if (paramLong <= n[paramInt][g]) {
          return paramInt;
        }
        paramInt += 1;
      } while (!bool);
      if (bool) {
        i1 = i2;
      }
    }
    else
    {
      do
      {
        if (i1 >= o.length) {
          break;
        }
        if (paramLong <= o[i1][g]) {
          return i1;
        }
        i1 += 1;
      } while (!bool);
    }
    return -1;
  }
  
  private static int a(int[][] paramArrayOfInt)
  {
    boolean bool = a.I;
    int i2 = 1;
    int i1 = 0;
    int i4 = 0;
    int i3;
    do
    {
      i3 = i1;
      if (i4 >= p) {
        break;
      }
      int i5 = 0;
      int i6;
      do
      {
        i6 = i2;
        i3 = i6;
        i2 = i1;
        if (i5 >= b) {
          break;
        }
        i2 = paramArrayOfInt[i4][i5];
        i3 = i6 * 3 % 79;
        i6 = (i1 + i2 * i6) % 79;
        i5 += 1;
        i2 = i3;
        i1 = i6;
      } while (!bool);
      i2 = i6;
      i1 = i3;
      i3 = i2;
      i4 += 1;
      i2 = i1;
      i1 = i3;
    } while (!bool);
    i1 = i3;
    if (i3 >= 8) {
      i1 = i3 + 1;
    }
    i2 = i1;
    if (i1 >= 72) {
      i2 = i1 + 1;
    }
    return i2;
  }
  
  private static boolean a(int paramInt)
  {
    return (paramInt == 0) || (paramInt == 2);
  }
  
  public static int[] a(int[] paramArrayOfInt)
  {
    paramArrayOfInt = a(b(paramArrayOfInt));
    return a(paramArrayOfInt, a(paramArrayOfInt));
  }
  
  private static int[] a(int[][] paramArrayOfInt, int paramInt)
  {
    int i4 = 0;
    boolean bool = a.I;
    int[] arrayOfInt = new int[a];
    int i2 = 0;
    int i1 = 0;
    int i3;
    if (i2 < b)
    {
      i3 = i1 + 1;
      arrayOfInt[i1] = paramArrayOfInt[0][i2];
      i2 += 1;
      if (bool) {
        i1 = i3;
      }
    }
    for (;;)
    {
      i2 = 0;
      if (i2 < d)
      {
        i3 = i1 + 1;
        arrayOfInt[i1] = e[(paramInt / 9)][i2];
        i2 += 1;
        if (bool) {
          i1 = i3;
        }
      }
      for (;;)
      {
        i2 = 0;
        if (i2 < b)
        {
          i3 = i1 + 1;
          arrayOfInt[i1] = paramArrayOfInt[1][(b - i2 - 1)];
          i2 += 1;
          if (bool) {
            i1 = i3;
          }
        }
        for (;;)
        {
          i2 = 0;
          if (i2 < b)
          {
            i3 = i1 + 1;
            arrayOfInt[i1] = paramArrayOfInt[3][i2];
            i2 += 1;
            if (bool) {
              i1 = i3;
            }
          }
          for (;;)
          {
            i2 = 0;
            if (i2 < d)
            {
              i3 = i1 + 1;
              arrayOfInt[i1] = e[(paramInt % 9)][(d - i2 - 1)];
              i2 += 1;
              if (bool)
              {
                paramInt = i3;
                i1 = i4;
              }
            }
            for (;;)
            {
              if (i1 < b)
              {
                arrayOfInt[paramInt] = paramArrayOfInt[2][(b - i1 - 1)];
                i1 += 1;
                if (!bool) {}
              }
              else
              {
                return arrayOfInt;
              }
              paramInt += 1;
              continue;
              i1 = i3;
              break;
              paramInt = i1;
              i1 = i4;
            }
            i1 = i3;
            break;
          }
          i1 = i3;
          break;
        }
        i1 = i3;
        break;
      }
      i1 = i3;
      break;
    }
  }
  
  private static int[][] a(long[] paramArrayOfLong)
  {
    boolean bool = a.I;
    int i1 = p;
    int i2 = b;
    int[][] arrayOfInt = (int[][])Array.newInstance(Integer.TYPE, new int[] { i1, i2 });
    i1 = 0;
    do
    {
      if (i1 >= p) {
        break;
      }
      int i3;
      long l1;
      long l2;
      long l3;
      long l4;
      int[] arrayOfInt2;
      int[] arrayOfInt1;
      if (a(i1))
      {
        i2 = a(paramArrayOfLong[i1], i1);
        i3 = n[i2][f];
        l1 = (paramArrayOfLong[i1] - i3) / n[i2][m];
        l2 = paramArrayOfLong[i1];
        l3 = i3;
        l4 = n[i2][m];
        arrayOfInt2 = l.a((int)l1, n[i2][h], c, n[i2][j], true);
        arrayOfInt1 = l.a((int)((l2 - l3) % l4), n[i2][i], c, n[i2][k], false);
        if (!bool) {}
      }
      else
      {
        i2 = a(paramArrayOfLong[i1], i1);
        i3 = o[i2][f];
        l1 = paramArrayOfLong[i1];
        l2 = i3;
        l3 = o[i2][l];
        l4 = (paramArrayOfLong[i1] - i3) / o[i2][l];
        arrayOfInt2 = l.a((int)((l1 - l2) % l3), o[i2][h], c, o[i2][j], false);
        arrayOfInt1 = l.a((int)l4, o[i2][i], c, o[i2][k], true);
      }
      i2 = 0;
      do
      {
        if (i2 >= c) {
          break;
        }
        arrayOfInt[i1][(i2 * 2)] = arrayOfInt2[i2];
        arrayOfInt[i1][(i2 * 2 + 1)] = arrayOfInt1[i2];
        i2 += 1;
      } while (!bool);
      i1 += 1;
    } while (!bool);
    return arrayOfInt;
  }
  
  private static long[] b(int[] paramArrayOfInt)
  {
    boolean bool = a.I;
    Object localObject1 = "";
    int i1 = 0;
    Object localObject2;
    do
    {
      localObject2 = localObject1;
      if (i1 >= paramArrayOfInt.length) {
        break;
      }
      localObject2 = (String)localObject1 + (char)paramArrayOfInt[i1];
      i1 += 1;
      localObject1 = localObject2;
    } while (!bool);
    localObject1 = new BigInteger((String)localObject2);
    paramArrayOfInt = ((BigInteger)localObject1).divide(new BigInteger(q));
    localObject1 = ((BigInteger)localObject1).mod(new BigInteger(q));
    long l1 = paramArrayOfInt.longValue();
    long l2 = ((BigInteger)localObject1).longValue();
    paramArrayOfInt = new long[p];
    paramArrayOfInt[0] = (l1 / r);
    paramArrayOfInt[1] = (l1 % r);
    paramArrayOfInt[2] = (l2 / r);
    paramArrayOfInt[3] = (l2 % r);
    return paramArrayOfInt;
  }
}
