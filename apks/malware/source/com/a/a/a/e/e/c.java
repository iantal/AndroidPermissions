package com.a.a.a.e.e;

import com.a.a.a.b.i;
import com.a.a.a.d.d;
import com.a.a.a.e.n.b;
import com.a.a.a.e.p;

public class c
  extends p
{
  private static int D = 0;
  private static int E = 0;
  private static int F = 0;
  private static int G = 0;
  private static int H = 0;
  private static int I = 0;
  private static int J = 0;
  private static int K = 0;
  private static int L = 0;
  private static char[] M;
  private static final int N = 257;
  private static final int O = 258;
  private static final int P = 259;
  private static final int Q = 260;
  private static char[] R;
  private static String[] S;
  private static int[] T;
  private static int[] U;
  private static int[][] V;
  private static int[][] W;
  
  public c()
  {
    this.e = 5;
    this.m = false;
    this.u = d;
    this.v = c;
    this.w = c;
    this.x = c;
    this.y = 2;
    this.z = 0;
  }
  
  private int a(int paramInt)
  {
    int j = a.M;
    if (paramInt <= 255)
    {
      int i = 0;
      do
      {
        if (i >= M.length) {
          break;
        }
        if (paramInt == M[i]) {
          return i;
        }
        i += 1;
      } while (j == 0);
      if (j == 0) {
        break label76;
      }
    }
    switch (paramInt)
    {
    default: 
      return -1;
    case 257: 
      return 43;
    case 258: 
      return 44;
    case 259: 
      label76:
      return 45;
    }
    return 46;
  }
  
  private int a(com.a.a.a.b.a[] paramArrayOfA, int paramInt, int[] paramArrayOfInt, boolean paramBoolean)
  {
    int k = a.M;
    int i = 0;
    int j;
    do
    {
      j = paramInt;
      if (i >= paramArrayOfInt.length) {
        break;
      }
      if (i % 2 == 0)
      {
        paramArrayOfA[paramInt].a(0);
        if (k == 0) {}
      }
      else
      {
        paramArrayOfA[paramInt].a(1);
      }
      paramArrayOfA[paramInt].d(paramArrayOfInt[i]);
      paramArrayOfA[paramInt].a(false);
      j = paramInt + 1;
      i += 1;
      paramInt = j;
    } while (k == 0);
    return j;
  }
  
  private int[] a(int[] paramArrayOfInt, char paramChar)
  {
    int n = a.M;
    int[] arrayOfInt = c(paramArrayOfInt);
    int j = 0;
    int m = 1;
    int i = 0;
    int k;
    do
    {
      k = i;
      if (j >= arrayOfInt.length) {
        break;
      }
      k = i + arrayOfInt[(arrayOfInt.length - 1 - j)] * m;
      m += 1;
      if ((paramChar != 'C') || (m <= 20))
      {
        i = m;
        if (paramChar == 'K')
        {
          i = m;
          if (m <= 15) {}
        }
      }
      else
      {
        i = 1;
      }
      j += 1;
      m = i;
      i = k;
    } while (n == 0);
    paramChar = k % 47;
    arrayOfInt = new int[paramArrayOfInt.length + 1];
    System.arraycopy(paramArrayOfInt, 0, arrayOfInt, 0, paramArrayOfInt.length);
    if (paramChar < '+')
    {
      arrayOfInt[paramArrayOfInt.length] = M[paramChar];
      if (n == 0) {
        break label184;
      }
    }
    switch (paramChar)
    {
    default: 
    case '+': 
    case ',': 
    case '-': 
      label184:
      do
      {
        do
        {
          do
          {
            return arrayOfInt;
            arrayOfInt[paramArrayOfInt.length] = 257;
          } while (n == 0);
          arrayOfInt[paramArrayOfInt.length] = 258;
        } while (n == 0);
        arrayOfInt[paramArrayOfInt.length] = 259;
      } while (n == 0);
    }
    arrayOfInt[paramArrayOfInt.length] = 260;
    return arrayOfInt;
  }
  
  private int[] c(int[] paramArrayOfInt)
  {
    int j = a.M;
    int[] arrayOfInt = new int[paramArrayOfInt.length];
    int i = 0;
    do
    {
      if (i >= paramArrayOfInt.length) {
        break;
      }
      arrayOfInt[i] = a(paramArrayOfInt[i]);
      i += 1;
    } while (j == 0);
    return arrayOfInt;
  }
  
  private int d(int[] paramArrayOfInt)
  {
    int k = 0;
    int m = a.M;
    int i = 0;
    int j;
    do
    {
      j = i;
      if (k >= paramArrayOfInt.length) {
        break;
      }
      j = i;
      if (paramArrayOfInt[k] != 126) {
        j = i + 1;
      }
      k += 1;
      i = j;
    } while (m == 0);
    return T.length + U.length + j * L;
  }
  
  private int[] e(int[] paramArrayOfInt)
  {
    int n = a.M;
    int[] arrayOfInt = new int[paramArrayOfInt.length];
    int k = 0;
    int i = 0;
    int j;
    label550:
    do
    {
      j = i;
      if (k >= paramArrayOfInt.length) {
        break;
      }
      int m = k;
      j = i;
      if (paramArrayOfInt[k] > 255)
      {
        j = i;
        if (paramArrayOfInt[k] == 257)
        {
          j = i + 1;
          arrayOfInt[i] += paramArrayOfInt[(k + 1)] + 65 + 1;
          i = j;
          if (n == 0) {}
        }
        else
        {
          i = j;
          if (paramArrayOfInt[k] == 259)
          {
            m = j + 1;
            arrayOfInt[j] += paramArrayOfInt[(k + 1)] - 65 + 33;
            i = m;
            if (n != 0) {
              i = m;
            }
          }
          else
          {
            j = i;
            if (paramArrayOfInt[k] == 260)
            {
              j = i + 1;
              arrayOfInt[i] += paramArrayOfInt[(k + 1)] - 65 + 97;
              i = j;
              if (n == 0) {}
            }
            else
            {
              i = j;
              if (paramArrayOfInt[(k + 1)] >= 65)
              {
                i = j;
                if (paramArrayOfInt[(k + 1)] <= 69)
                {
                  m = j + 1;
                  arrayOfInt[j] += paramArrayOfInt[(k + 1)] - 65 + 27;
                  i = m;
                  if (n == 0) {
                    break label550;
                  }
                  i = m;
                }
              }
              j = i;
              if (paramArrayOfInt[(k + 1)] >= 70)
              {
                j = i;
                if (paramArrayOfInt[(k + 1)] <= 74)
                {
                  j = i + 1;
                  arrayOfInt[i] += paramArrayOfInt[(k + 1)] - 70 + 59;
                  i = j;
                  if (n == 0) {
                    break label550;
                  }
                }
              }
              i = j;
              if (paramArrayOfInt[(k + 1)] >= 75)
              {
                i = j;
                if (paramArrayOfInt[(k + 1)] <= 79)
                {
                  m = j + 1;
                  arrayOfInt[j] += paramArrayOfInt[(k + 1)] - 75 + 91;
                  i = m;
                  if (n == 0) {
                    break label550;
                  }
                  i = m;
                }
              }
              j = i;
              if (paramArrayOfInt[(k + 1)] >= 80)
              {
                j = i;
                if (paramArrayOfInt[(k + 1)] <= 84)
                {
                  j = i + 1;
                  arrayOfInt[i] += paramArrayOfInt[(k + 1)] - 80 + 123;
                  i = j;
                  if (n == 0) {
                    break label550;
                  }
                }
              }
              i = j;
              if (paramArrayOfInt[(k + 1)] == 85)
              {
                m = j + 1;
                arrayOfInt[j] += 0;
                i = m;
                if (n != 0) {
                  i = m;
                }
              }
              else
              {
                j = i;
                if (paramArrayOfInt[(k + 1)] == 86)
                {
                  j = i + 1;
                  arrayOfInt[i] += 64;
                  i = j;
                  if (n == 0) {}
                }
                else
                {
                  i = j;
                  if (paramArrayOfInt[(k + 1)] == 87)
                  {
                    m = j + 1;
                    arrayOfInt[j] += 96;
                    i = m;
                    if (n != 0) {
                      i = m;
                    }
                  }
                  else
                  {
                    j = i + 1;
                    arrayOfInt[i] += 127;
                    i = j;
                  }
                }
              }
            }
          }
        }
        m = k + 1;
        k = m;
        j = i;
        if (n != 0) {
          j = i;
        }
      }
      else
      {
        arrayOfInt[j] += paramArrayOfInt[m];
        j += 1;
        k = m;
      }
      k += 1;
      i = j;
    } while (n == 0);
    paramArrayOfInt = new int[j];
    System.arraycopy(arrayOfInt, 0, paramArrayOfInt, 0, j);
    return paramArrayOfInt;
  }
  
  protected boolean a(int paramInt)
  {
    return (paramInt >= 0) && (paramInt <= 127);
  }
  
  public int[] a(int[] paramArrayOfInt)
  {
    int i1 = a.M;
    int[] arrayOfInt = d.a(paramArrayOfInt);
    paramArrayOfInt = new int[arrayOfInt.length * 2];
    int k = 0;
    int j = 0;
    int i = j;
    int m;
    int n;
    if (k < arrayOfInt.length)
    {
      String str = S[arrayOfInt[k]];
      i = j;
      if (str.length() == 1)
      {
        i = j + 1;
        paramArrayOfInt[j] = str.charAt(0);
        if (i1 == 0) {
          break label250;
        }
      }
      j = i;
      m = i;
      n = i;
      switch (str.charAt(1))
      {
      default: 
        label132:
        j = i + 1;
        paramArrayOfInt[i] = str.charAt(2);
        i = j;
      }
    }
    label250:
    for (;;)
    {
      k += 1;
      j = i;
      if (i1 == 0) {
        break;
      }
      arrayOfInt = new int[i];
      System.arraycopy(paramArrayOfInt, 0, arrayOfInt, 0, i);
      return arrayOfInt;
      j = i + 1;
      paramArrayOfInt[i] = 257;
      i = j;
      if (i1 == 0) {
        break label132;
      }
      m = j + 1;
      paramArrayOfInt[j] = 258;
      i = m;
      if (i1 == 0) {
        break label132;
      }
      j = m + 1;
      paramArrayOfInt[m] = 259;
      i = j;
      if (i1 == 0) {
        break label132;
      }
      n = j;
      i = n + 1;
      paramArrayOfInt[n] = 260;
      break label132;
    }
  }
  
  public i[] a(int[] paramArrayOfInt, boolean paramBoolean)
  {
    i[] arrayOfI = new i[1];
    arrayOfI[0] = new i();
    paramArrayOfInt = e(paramArrayOfInt);
    arrayOfI[0].q = b.a(paramArrayOfInt);
    arrayOfI[0].w = this.s;
    return arrayOfI;
  }
  
  public final int[] b(int[] paramArrayOfInt)
  {
    return a(a(paramArrayOfInt, 'C'), 'K');
  }
  
  public int[] c(d paramD)
  {
    return paramD.a(true);
  }
  
  public com.a.a.a.b.a[] c(int[] paramArrayOfInt)
  {
    int m = a.M;
    int[] arrayOfInt = c(paramArrayOfInt);
    com.a.a.a.b.a[] arrayOfA = new com.a.a.a.b.a[d(arrayOfInt)];
    int i = 0;
    while (i < arrayOfA.length)
    {
      arrayOfA[i] = new com.a.a.a.b.a();
      i += 1;
      if (m != 0) {
        p.C += 1;
      }
    }
    i = a(arrayOfA, 0, T, false);
    int k = 0;
    int j;
    do
    {
      j = i;
      if (k >= paramArrayOfInt.length) {
        break;
      }
      int n = a(paramArrayOfInt[k]);
      j = i;
      if (n >= 0)
      {
        j = i;
        if (n <= 46) {
          j = a(arrayOfA, i, V[arrayOfInt[k]], false);
        }
      }
      k += 1;
      i = j;
    } while (m == 0);
    a(arrayOfA, j, U, true);
    return arrayOfA;
  }
}
