package com.a.a.a.e.j;

import com.a.a.a.b.i;
import com.a.a.a.d.d;
import com.a.a.a.e.n.b;
import com.a.a.a.e.p;

public class a
  extends p
{
  private static int D = 1;
  private static int E = 1;
  private static int F = 2;
  private static int G = 2;
  private static int H = 8;
  private static char[] I = { 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 };
  private static int[] J = { F, E };
  private static int[] K = { D, G, D };
  private static int[][] L;
  public static boolean M;
  
  static
  {
    int i = D;
    int j = G;
    int k = D;
    int m = G;
    int n = D;
    int i1 = G;
    int i2 = D;
    int i3 = G;
    int i4 = D;
    int i5 = G;
    int i6 = D;
    int i7 = G;
    int i8 = D;
    int i9 = G;
    int i10 = F;
    int i11 = E;
    int i12 = D;
    int i13 = G;
    int i14 = D;
    int i15 = G;
    int i16 = F;
    int i17 = E;
    int i18 = D;
    int i19 = G;
    int i20 = D;
    int i21 = G;
    int i22 = D;
    int i23 = G;
    int i24 = F;
    int i25 = E;
    int i26 = F;
    int i27 = E;
    int i28 = D;
    int i29 = G;
    int i30 = F;
    int i31 = E;
    int i32 = D;
    int i33 = G;
    int i34 = D;
    int i35 = G;
    int i36 = D;
    int i37 = G;
    int i38 = F;
    int i39 = E;
    int i40 = D;
    int i41 = G;
    int i42 = F;
    int i43 = E;
    int i44 = D;
    int i45 = G;
    int i46 = F;
    int i47 = E;
    int i48 = F;
    int i49 = E;
    int i50 = D;
    int i51 = G;
    int i52 = D;
    int i53 = G;
    int i54 = F;
    int i55 = E;
    int i56 = F;
    int i57 = E;
    int i58 = F;
    int i59 = E;
    int i60 = F;
    int i61 = E;
    int i62 = D;
    int i63 = G;
    int i64 = D;
    int i65 = G;
    int i66 = D;
    int i67 = G;
    int i68 = F;
    int i69 = E;
    int i70 = D;
    int i71 = G;
    int i72 = D;
    int i73 = G;
    int i74 = F;
    int i75 = E;
    L = new int[][] { { i, j, k, m, n, i1, i2, i3 }, { i4, i5, i6, i7, i8, i9, i10, i11 }, { i12, i13, i14, i15, i16, i17, i18, i19 }, { i20, i21, i22, i23, i24, i25, i26, i27 }, { i28, i29, i30, i31, i32, i33, i34, i35 }, { i36, i37, i38, i39, i40, i41, i42, i43 }, { i44, i45, i46, i47, i48, i49, i50, i51 }, { i52, i53, i54, i55, i56, i57, i58, i59 }, { i60, i61, i62, i63, i64, i65, i66, i67 }, { i68, i69, i70, i71, i72, i73, i74, i75 } };
  }
  
  public a()
  {
    this.e = 31;
    this.g = 3.0F;
    this.u = c;
    this.v = c;
    this.w = c;
    this.x = c;
    this.y = 2;
    this.z = 0;
  }
  
  private int a(com.a.a.a.b.a[] paramArrayOfA, int paramInt, int[] paramArrayOfInt, boolean paramBoolean)
  {
    paramBoolean = M;
    int i = 0;
    int j;
    do
    {
      j = paramInt;
      if (i >= paramArrayOfInt.length) {
        break;
      }
      if (i % 2 == 0)
      {
        paramArrayOfA[paramInt].a(0);
        if (!paramBoolean) {}
      }
      else
      {
        paramArrayOfA[paramInt].a(1);
      }
      paramArrayOfA[paramInt].d(paramArrayOfInt[i]);
      paramArrayOfA[paramInt].a(false);
      j = paramInt + 1;
      i += 1;
      paramInt = j;
    } while (!paramBoolean);
    return j;
  }
  
  private int e(int[] paramArrayOfInt)
  {
    return J.length + K.length + paramArrayOfInt.length * H;
  }
  
  protected boolean a(int paramInt)
  {
    return (paramInt >= 48) && (paramInt <= 57);
  }
  
  public final int[] a(int[] paramArrayOfInt)
  {
    return d.a(paramArrayOfInt);
  }
  
  public i[] a(int[] paramArrayOfInt, boolean paramBoolean)
  {
    int[] arrayOfInt = paramArrayOfInt;
    if (paramBoolean) {
      arrayOfInt = b(paramArrayOfInt);
    }
    paramArrayOfInt = new i[1];
    paramArrayOfInt[0] = new i();
    paramArrayOfInt[0].q = b.a(arrayOfInt);
    paramArrayOfInt[0].w = this.s;
    return paramArrayOfInt;
  }
  
  public int[] b(int[] paramArrayOfInt)
  {
    return c(paramArrayOfInt);
  }
  
  public int[] c(d paramD)
  {
    return paramD.a(true);
  }
  
  protected int[] c(int[] paramArrayOfInt)
  {
    boolean bool = M;
    int n = paramArrayOfInt.length;
    int j = 0;
    int i = 0;
    int k;
    if (j < n)
    {
      int m = paramArrayOfInt[(n - 1 - j)];
      if (j % 2 == 0)
      {
        k = 2;
        if ((m < 48) || (m > 57)) {
          break label169;
        }
        m = k * (m - 48);
        k = m;
        if (m > 9) {
          k = m % 10 + 1;
        }
        i += k;
        label87:
        if (!bool) {
          break label162;
        }
      }
    }
    for (;;)
    {
      int[] arrayOfInt = new int[paramArrayOfInt.length + 1];
      arrayOfInt[paramArrayOfInt.length] = ((10 - i % 10) % 10 + 48);
      System.arraycopy(paramArrayOfInt, 0, arrayOfInt, 0, paramArrayOfInt.length);
      if (p.C != 0) {
        if (!bool) {
          break label156;
        }
      }
      label156:
      for (bool = false;; bool = true)
      {
        M = bool;
        return arrayOfInt;
        k = 1;
        break;
      }
      label162:
      j += 1;
      break;
      label169:
      break label87;
    }
  }
  
  public final com.a.a.a.b.a[] c(int[] paramArrayOfInt)
  {
    boolean bool = M;
    com.a.a.a.b.a[] arrayOfA = new com.a.a.a.b.a[e(paramArrayOfInt)];
    int i = 0;
    do
    {
      if (i >= arrayOfA.length) {
        break;
      }
      arrayOfA[i] = new com.a.a.a.b.a();
      i += 1;
    } while (!bool);
    i = a(arrayOfA, 0, J, false);
    int k = 0;
    int j = i;
    int i1;
    int m;
    if (k < paramArrayOfInt.length)
    {
      i1 = paramArrayOfInt[k] - 48;
      if (i1 < 0) {
        break label148;
      }
      m = 1;
      label85:
      if (i1 > 9) {
        break label154;
      }
    }
    label148:
    label154:
    for (int n = 1;; n = 0)
    {
      j = i;
      if ((n | m) != 0) {
        j = a(arrayOfA, i, L[i1], false);
      }
      k += 1;
      i = j;
      if (!bool) {
        break;
      }
      a(arrayOfA, j, K, true);
      return arrayOfA;
      m = 0;
      break label85;
    }
  }
  
  protected int[] d(int[] paramArrayOfInt)
  {
    boolean bool = M;
    int n = paramArrayOfInt.length;
    int m = 0;
    int k = 2;
    int j = 0;
    int i;
    do
    {
      i = j;
      if (m >= n) {
        break;
      }
      int i1 = paramArrayOfInt[(n - 1 - m)];
      i = j;
      if (i1 >= 48)
      {
        i = j;
        if (i1 <= 57) {
          i = j + (i1 - 48) * k;
        }
      }
      j = k + 1;
      k = j;
      if (j > 7) {
        k = 2;
      }
      m += 1;
      j = i;
    } while (!bool);
    p.C += 1;
    int[] arrayOfInt = new int[paramArrayOfInt.length + 1];
    arrayOfInt[paramArrayOfInt.length] = ((11 - i % 11) % 11 + 48);
    System.arraycopy(paramArrayOfInt, 0, arrayOfInt, 0, paramArrayOfInt.length);
    return arrayOfInt;
  }
}
