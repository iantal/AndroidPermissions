package com.a.a.a.e.h;

import com.a.a.a.b.a;
import com.a.a.a.b.i;
import com.a.a.a.e.p;

public class b
  extends p
{
  private static int D = 1;
  private static int E = 2;
  private static int F = 1;
  private static int G = 5;
  private static char[] H = { 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 };
  private static int[] I = { E };
  private static int[] J = { E };
  private static int[][] K;
  
  static
  {
    int i = D;
    int j = D;
    int k = E;
    int m = E;
    int n = E;
    int i1 = E;
    int i2 = E;
    int i3 = E;
    int i4 = D;
    int i5 = D;
    int i6 = E;
    int i7 = E;
    int i8 = D;
    int i9 = E;
    int i10 = D;
    int i11 = E;
    int i12 = E;
    int i13 = D;
    int i14 = D;
    int i15 = E;
    int i16 = E;
    int i17 = D;
    int i18 = E;
    int i19 = E;
    int i20 = D;
    int i21 = E;
    int i22 = D;
    int i23 = E;
    int i24 = D;
    int i25 = E;
    int i26 = E;
    int i27 = D;
    int i28 = D;
    int i29 = E;
    int i30 = E;
    int i31 = D;
    int i32 = E;
    int i33 = E;
    int i34 = E;
    int i35 = D;
    int i36 = D;
    int i37 = E;
    int i38 = E;
    int i39 = D;
    int i40 = E;
    int i41 = D;
    int i42 = E;
    int i43 = D;
    int i44 = E;
    int i45 = E;
    K = new int[][] { { i, j, k, m, n }, { i1, i2, i3, i4, i5 }, { i6, i7, i8, i9, i10 }, { i11, i12, i13, i14, i15 }, { i16, i17, i18, i19, i20 }, { i21, i22, i23, i24, i25 }, { i26, i27, i28, i29, i30 }, { i31, i32, i33, i34, i35 }, { i36, i37, i38, i39, i40 }, { i41, i42, i43, i44, i45 } };
  }
  
  public b()
  {
    this.e = 37;
    this.h = 1.24F;
    this.j = 0.4F;
    this.u = d;
    this.v = c;
    this.w = c;
    this.x = c;
    this.y = 2;
    this.z = 0;
  }
  
  private int a(int[] paramArrayOfInt)
  {
    return paramArrayOfInt.length * G + I.length + J.length;
  }
  
  private int a(a[] paramArrayOfA, int paramInt, int[] paramArrayOfInt, boolean paramBoolean)
  {
    boolean bool2 = d.N;
    int i = 0;
    int j = paramInt;
    a localA;
    if (i < paramArrayOfInt.length)
    {
      paramArrayOfA[paramInt].a(0);
      if (paramArrayOfInt[i] == E)
      {
        paramArrayOfA[paramInt].b(1);
        if (!bool2) {}
      }
      else
      {
        paramArrayOfA[paramInt].b(this.j);
      }
      paramArrayOfA[paramInt].d(F);
      localA = paramArrayOfA[paramInt];
      if ((i >= paramArrayOfInt.length - 1) && (paramBoolean)) {
        break label118;
      }
    }
    label118:
    for (boolean bool1 = true;; bool1 = false)
    {
      localA.a(bool1);
      j = paramInt + 1;
      i += 1;
      paramInt = j;
      if (!bool2) {
        break;
      }
      return j;
    }
  }
  
  protected boolean a(int paramInt)
  {
    return (paramInt >= 48) && (paramInt <= 57);
  }
  
  public final int[] a(int[] paramArrayOfInt)
  {
    int[] arrayOfInt = com.a.a.a.d.d.a(paramArrayOfInt);
    paramArrayOfInt = null;
    if ((arrayOfInt.length == 11) || (arrayOfInt.length == 13))
    {
      paramArrayOfInt = new int[arrayOfInt.length];
      System.arraycopy(arrayOfInt, 0, paramArrayOfInt, 0, arrayOfInt.length);
    }
    return paramArrayOfInt;
  }
  
  public i[] a(int[] paramArrayOfInt, boolean paramBoolean)
  {
    paramArrayOfInt = b(paramArrayOfInt);
    i[] arrayOfI = new i[1];
    arrayOfI[0] = new i();
    arrayOfI[0].q = com.a.a.a.e.n.b.a(paramArrayOfInt);
    arrayOfI[0].w = this.s;
    return arrayOfI;
  }
  
  public final int[] b(int[] paramArrayOfInt)
  {
    boolean bool = d.N;
    int m = paramArrayOfInt.length;
    int j = 0;
    int i = 0;
    int k;
    do
    {
      k = i;
      if (j >= m) {
        break;
      }
      k = i + (paramArrayOfInt[j] - 48);
      j += 1;
      i = k;
    } while (!bool);
    int[] arrayOfInt = new int[paramArrayOfInt.length + 1];
    System.arraycopy(paramArrayOfInt, 0, arrayOfInt, 0, paramArrayOfInt.length);
    arrayOfInt[paramArrayOfInt.length] = ((10 - k % 10) % 10 + 48);
    return arrayOfInt;
  }
  
  public int[] c(com.a.a.a.d.d paramD)
  {
    return paramD.a(true);
  }
  
  public a[] c(int[] paramArrayOfInt)
  {
    boolean bool = d.N;
    a[] arrayOfA = new a[a(paramArrayOfInt)];
    int i = 0;
    do
    {
      if (i >= arrayOfA.length) {
        break;
      }
      arrayOfA[i] = new a();
      i += 1;
    } while (!bool);
    i = a(arrayOfA, 0, I, false);
    int k = 0;
    int j = i;
    int i1;
    int m;
    if (k < paramArrayOfInt.length)
    {
      i1 = paramArrayOfInt[k] - 48;
      if (i1 < 0) {
        break label148;
      }
      m = 1;
      label85:
      if (i1 > 9) {
        break label154;
      }
    }
    label148:
    label154:
    for (int n = 1;; n = 0)
    {
      j = i;
      if ((n | m) != 0) {
        j = a(arrayOfA, i, K[i1], false);
      }
      k += 1;
      i = j;
      if (!bool) {
        break;
      }
      a(arrayOfA, j, J, true);
      return arrayOfA;
      m = 0;
      break label85;
    }
  }
}
