package com.a.a.a.e.l;

import com.a.a.a.e.p;
import java.io.PrintStream;

class l
{
  private static final String[] z;
  
  static
  {
    int i1 = 0;
    int n = 0;
    Object localObject1 = "z\f".toCharArray();
    int j = localObject1.length;
    int i;
    int m;
    int k;
    Object localObject2;
    int i2;
    if (j <= 1)
    {
      i = 0;
      m = i;
      for (k = i;; k = j)
      {
        localObject2 = localObject1;
        i2 = localObject2[k];
        switch (m % 5)
        {
        default: 
          i = 86;
          localObject2[k] = ((char)(i ^ i2));
          m += 1;
          if (j != 0) {
            break label97;
          }
        }
      }
      label97:
      k = j;
      localObject2 = localObject1;
    }
    for (;;)
    {
      localObject1 = localObject2;
      j = k;
      i = m;
      if (k > m) {
        break;
      }
      String str1 = new String(localObject2).intern();
      localObject1 = "\001E\025:>%\026Q".toCharArray();
      j = localObject1.length;
      if (j <= 1)
      {
        i = 0;
        label148:
        m = i;
        for (k = i;; k = j)
        {
          localObject2 = localObject1;
          i2 = localObject2[k];
          switch (m % 5)
          {
          default: 
            i = 86;
            label199:
            localObject2[k] = ((char)(i ^ i2));
            m += 1;
            if (j != 0) {
              break label221;
            }
          }
        }
        label221:
        k = j;
        localObject2 = localObject1;
      }
      for (;;)
      {
        localObject1 = localObject2;
        j = k;
        i = m;
        if (k > m) {
          break label148;
        }
        String str2 = new String(localObject2).intern();
        localObject1 = "\030CQ\0007$^\0369lv".toCharArray();
        j = localObject1.length;
        if (j <= 1)
        {
          i = 0;
          label272:
          m = i;
          for (k = i;; k = j)
          {
            localObject2 = localObject1;
            i2 = localObject2[k];
            switch (m % 5)
            {
            default: 
              i = 86;
              label323:
              localObject2[k] = ((char)(i ^ i2));
              m += 1;
              if (j != 0) {
                break label345;
              }
            }
          }
          label345:
          k = j;
          localObject2 = localObject1;
        }
        for (;;)
        {
          localObject1 = localObject2;
          j = k;
          i = m;
          if (k > m) {
            break label272;
          }
          String str3 = new String(localObject2).intern();
          localObject1 = "\023@\024#38X\002n?8\f\002+\"l\f".toCharArray();
          j = localObject1.length;
          if (j <= 1)
          {
            i = 0;
            label396:
            m = i;
            for (k = i;; k = j)
            {
              localObject2 = localObject1;
              i2 = localObject2[k];
              switch (m % 5)
              {
              default: 
                i = 86;
                label447:
                localObject2[k] = ((char)(i ^ i2));
                m += 1;
                if (j != 0) {
                  break label469;
                }
              }
            }
            label469:
            k = j;
            localObject2 = localObject1;
          }
          for (;;)
          {
            localObject1 = localObject2;
            j = k;
            i = m;
            if (k > m) {
              break label396;
            }
            String str4 = new String(localObject2).intern();
            localObject1 = "\004\"n\0007@\004+lv".toCharArray();
            j = localObject1.length;
            if (j <= 1)
            {
              i = 0;
              label520:
              m = i;
              for (k = i;; k = j)
              {
                localObject2 = localObject1;
                i2 = localObject2[k];
                switch (m % 5)
                {
                default: 
                  i = 86;
                  label571:
                  localObject2[k] = ((char)(i ^ i2));
                  m += 1;
                  if (j != 0) {
                    break label593;
                  }
                }
              }
              label593:
              k = j;
              localObject2 = localObject1;
            }
            for (;;)
            {
              localObject1 = localObject2;
              j = k;
              i = m;
              if (k > m) {
                break label520;
              }
              String str5 = new String(localObject2).intern();
              localObject1 = "\033M\tn\001?H\005&lv".toCharArray();
              j = localObject1.length;
              if (j <= 1)
              {
                i = 0;
                label644:
                m = i;
                for (k = i;; k = j)
                {
                  localObject2 = localObject1;
                  i2 = localObject2[k];
                  switch (m % 5)
                  {
                  default: 
                    i = 86;
                    label695:
                    localObject2[k] = ((char)(i ^ i2));
                    m += 1;
                    if (j != 0) {
                      break label717;
                    }
                  }
                }
                label717:
                k = j;
                localObject2 = localObject1;
              }
              for (;;)
              {
                localObject1 = localObject2;
                j = k;
                i = m;
                if (k > m) {
                  break label644;
                }
                String str6 = new String(localObject2).intern();
                localObject1 = "\030Y\034,3$\f\036(v\033C\025;:3_Kn".toCharArray();
                j = localObject1.length;
                localObject2 = localObject1;
                k = j;
                m = i1;
                if (j <= 1)
                {
                  i = n;
                  label778:
                  m = i;
                  k = i;
                  label782:
                  localObject2 = localObject1;
                  n = localObject2[k];
                  switch (m % 5)
                  {
                  default: 
                    i = 86;
                  }
                }
                for (;;)
                {
                  localObject2[k] = ((char)(i ^ n));
                  m += 1;
                  if (j == 0)
                  {
                    k = j;
                    break label782;
                  }
                  k = j;
                  localObject2 = localObject1;
                  localObject1 = localObject2;
                  j = k;
                  i = m;
                  if (k > m) {
                    break label778;
                  }
                  z = new String[] { str1, str2, str3, str4, str5, str6, new String(localObject2).intern() };
                  return;
                  i = 86;
                  break;
                  i = 44;
                  break;
                  i = 113;
                  break;
                  i = 78;
                  break;
                  i = 86;
                  break label199;
                  i = 44;
                  break label199;
                  i = 113;
                  break label199;
                  i = 78;
                  break label199;
                  i = 86;
                  break label323;
                  i = 44;
                  break label323;
                  i = 113;
                  break label323;
                  i = 78;
                  break label323;
                  i = 86;
                  break label447;
                  i = 44;
                  break label447;
                  i = 113;
                  break label447;
                  i = 78;
                  break label447;
                  i = 86;
                  break label571;
                  i = 44;
                  break label571;
                  i = 113;
                  break label571;
                  i = 78;
                  break label571;
                  i = 86;
                  break label695;
                  i = 44;
                  break label695;
                  i = 113;
                  break label695;
                  i = 78;
                  break label695;
                  i = 86;
                  continue;
                  i = 44;
                  continue;
                  i = 113;
                  continue;
                  i = 78;
                }
                m = 0;
                localObject2 = localObject1;
                k = j;
              }
              m = 0;
              localObject2 = localObject1;
              k = j;
            }
            m = 0;
            localObject2 = localObject1;
            k = j;
          }
          m = 0;
          localObject2 = localObject1;
          k = j;
        }
        m = 0;
        localObject2 = localObject1;
        k = j;
      }
      m = 0;
      localObject2 = localObject1;
      k = j;
    }
  }
  
  l() {}
  
  private static int a(int paramInt1, int paramInt2)
  {
    int i = 1;
    boolean bool = a.I;
    int m;
    int k;
    if (paramInt1 - paramInt2 > paramInt2)
    {
      m = paramInt1 - paramInt2;
      k = paramInt2;
      if (!bool) {}
    }
    else
    {
      m = paramInt2;
      k = paramInt1 - paramInt2;
    }
    paramInt2 = 1;
    int n = paramInt1;
    int j;
    do
    {
      paramInt1 = i;
      j = paramInt2;
      if (n <= m) {
        break;
      }
      i *= n;
      paramInt1 = i;
      j = paramInt2;
      if (paramInt2 <= k)
      {
        paramInt1 = i / paramInt2;
        j = paramInt2 + 1;
      }
      n -= 1;
      i = paramInt1;
      paramInt2 = j;
    } while (!bool);
    paramInt2 = j;
    do
    {
      i = paramInt1;
      if (paramInt2 > k) {
        break;
      }
      i = paramInt1 / paramInt2;
      paramInt2 += 1;
      paramInt1 = i;
    } while (!bool);
    return i;
  }
  
  static int a(int[] paramArrayOfInt, int paramInt1, int paramInt2, boolean paramBoolean)
  {
    boolean bool = a.I;
    int i = 0;
    int k = 0;
    int j;
    do
    {
      j = i;
      if (k >= paramInt1) {
        break;
      }
      j = i + paramArrayOfInt[k];
      k += 1;
      i = j;
    } while (!bool);
    int i2 = 0;
    int n = 0;
    i = 0;
    int i1 = j;
    for (;;)
    {
      j = i;
      int i3;
      if (i2 < paramInt1 - 1)
      {
        k = 1;
        int m = n | 1 << i2;
        j = i;
        do
        {
          n = m;
          i3 = k;
          i = j;
          if (k >= paramArrayOfInt[i2]) {
            break;
          }
          n = a(i1 - k - 1, paramInt1 - i2 - 2);
          i = n;
          if (!paramBoolean)
          {
            i = n;
            if (m == 0)
            {
              i = n;
              if (i1 - k - (paramInt1 - i2 - 1) >= paramInt1 - i2 - 1) {
                i = n - a(i1 - k - (paramInt1 - i2), paramInt1 - i2 - 2);
              }
            }
          }
          n = i;
          if (paramInt1 - i2 - 1 > 1)
          {
            n = 0;
            i3 = i1 - k - (paramInt1 - i2 - 2);
            int i4;
            do
            {
              i4 = n;
              if (i3 <= paramInt2) {
                break;
              }
              i4 = n + a(i1 - k - i3 - 1, paramInt1 - i2 - 3);
              i3 -= 1;
              n = i4;
            } while (!bool);
            n = i - i4 * (paramInt1 - 1 - i2);
            i = n;
            if (!bool) {}
          }
          else
          {
            i = n;
            if (i1 - k > paramInt2) {
              i = n - 1;
            }
          }
          i = j + i;
          i3 = k + 1;
          n = m & (1 << i2 ^ 0xFFFFFFFF);
          m = n;
          k = i3;
          j = i;
        } while (!bool);
        if (bool) {
          j = i;
        }
      }
      else
      {
        return j;
      }
      i2 += 1;
      i1 -= i3;
    }
  }
  
  public static void a(String[] paramArrayOfString)
    throws Exception
  {
    boolean bool = a.I;
    paramArrayOfString = a(15, 8, 6, 3, true);
    System.out.println(z[4] + 15);
    System.out.println(z[6] + 8);
    System.out.println(z[3] + 6);
    System.out.println(z[5] + 3);
    System.out.println(z[2] + true);
    System.out.print(z[1]);
    int i = 0;
    while (i < paramArrayOfString.length)
    {
      System.out.print(paramArrayOfString[i] + z[0]);
      i += 1;
      if (bool) {
        p.C += 1;
      }
    }
    System.out.println("");
  }
  
  public static int[] a(int paramInt1, int paramInt2, int paramInt3, int paramInt4, boolean paramBoolean)
  {
    boolean bool = a.I;
    int[] arrayOfInt = new int[paramInt3];
    int j = 0;
    int k = 0;
    int i = paramInt1;
    paramInt1 = k;
    int m;
    int n;
    label52:
    int i1;
    int i2;
    if (paramInt1 < paramInt3 - 1)
    {
      k = 1;
      m = j | 1 << paramInt1;
      n = i;
      j = k;
      i = m;
      m = a(paramInt2 - j - 1, paramInt3 - paramInt1 - 2);
      k = m;
      if (!paramBoolean)
      {
        k = m;
        if (i == 0)
        {
          k = m;
          if (paramInt2 - j - (paramInt3 - paramInt1 - 1) >= paramInt3 - paramInt1 - 1) {
            k = m - a(paramInt2 - j - (paramInt3 - paramInt1), paramInt3 - paramInt1 - 2);
          }
        }
      }
      m = k;
      if (paramInt3 - paramInt1 - 1 > 1)
      {
        m = 0;
        i1 = paramInt2 - j - (paramInt3 - paramInt1 - 2);
        do
        {
          i2 = m;
          if (i1 <= paramInt4) {
            break;
          }
          i2 = m + a(paramInt2 - j - i1 - 1, paramInt3 - paramInt1 - 3);
          i1 -= 1;
          m = i2;
        } while (!bool);
        m = k - i2 * (paramInt3 - 1 - paramInt1);
        k = m;
        if (!bool) {}
      }
      else
      {
        k = m;
        if (paramInt2 - j > paramInt4) {
          k = m - 1;
        }
      }
      i2 = n - k;
      if (i2 < 0)
      {
        label256:
        paramInt2 -= j;
        arrayOfInt[paramInt1] = j;
        paramInt1 += 1;
        if (!bool) {
          break label328;
        }
      }
    }
    for (;;)
    {
      arrayOfInt[paramInt1] = paramInt2;
      return arrayOfInt;
      m = j + 1;
      i1 = i & (1 << paramInt1 ^ 0xFFFFFFFF);
      i = i1;
      j = m;
      n = i2;
      if (!bool) {
        break label52;
      }
      i = i1;
      j = m;
      break label256;
      label328:
      k = i2 + k;
      j = i;
      i = k;
      break;
    }
  }
}
