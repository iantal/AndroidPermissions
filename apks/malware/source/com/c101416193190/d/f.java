package com.c101416193190.d;

import android.graphics.Bitmap;
import java.util.Collections;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public final class f
{
  private Map a = Collections.synchronizedMap(new LinkedHashMap(10, 1.5F, true));
  private long b = 0L;
  private long c = 1000000L;
  
  public f() {}
  
  private static long a(Bitmap paramBitmap)
  {
    if (paramBitmap == null) {
      return 0L;
    }
    return paramBitmap.getRowBytes() * paramBitmap.getHeight();
  }
  
  public final Bitmap a(String paramString)
  {
    try
    {
      if (!this.a.containsKey(paramString)) {
        return null;
      }
      paramString = (Bitmap)this.a.get(paramString);
      return paramString;
    }
    catch (NullPointerException paramString) {}
    return null;
  }
  
  public final void a(String paramString, Bitmap paramBitmap)
  {
    try
    {
      if (this.a.containsKey(paramString)) {
        this.b -= a((Bitmap)this.a.get(paramString));
      }
      this.a.put(paramString, paramBitmap);
      this.b += a(paramBitmap);
      if (this.b > this.c)
      {
        paramString = this.a.entrySet().iterator();
        long l1;
        long l2;
        do
        {
          if (!paramString.hasNext()) {
            return;
          }
          paramBitmap = (Map.Entry)paramString.next();
          this.b -= a((Bitmap)paramBitmap.getValue());
          paramString.remove();
          l1 = this.b;
          l2 = this.c;
        } while (l1 > l2);
      }
      return;
    }
    catch (Throwable paramString)
    {
      paramString.printStackTrace();
    }
  }
}
