package com.prime31;

import android.app.Activity;
import android.util.Log;
import android.view.View;
import com.chartboost.sdk.ChartBoost;
import com.chartboost.sdk.ChartBoostDelegate;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class ChartBoostPlugin
  extends ChartBoostDelegate
{
  private static ChartBoostPlugin _instance;
  public Activity _activity;
  private Field _unityPlayerActivityField;
  private Class<?> _unityPlayerClass;
  private Method _unitySendMessageMethod;
  
  public ChartBoostPlugin()
  {
    try
    {
      this._unityPlayerClass = Class.forName("com.unity3d.player.UnityPlayer");
      this._unityPlayerActivityField = this._unityPlayerClass.getField("currentActivity");
      this._unitySendMessageMethod = this._unityPlayerClass.getMethod("UnitySendMessage", new Class[] { String.class, String.class, String.class });
      return;
    }
    catch (ClassNotFoundException localClassNotFoundException)
    {
      Log.i("Prime31", "could not find UnityPlayer class: " + localClassNotFoundException.getMessage());
      return;
    }
    catch (NoSuchFieldException localNoSuchFieldException)
    {
      Log.i("Prime31", "could not find currentActivity field: " + localNoSuchFieldException.getMessage());
      return;
    }
    catch (Exception localException)
    {
      Log.i("Prime31", "unkown exception occurred locating UnityPlayer.currentActivity: " + localException.getMessage());
    }
  }
  
  private void UnitySendMessage(String paramString1, String paramString2, String paramString3)
  {
    if (this._unitySendMessageMethod != null) {
      try
      {
        this._unitySendMessageMethod.invoke(null, new Object[] { paramString1, paramString2, paramString3 });
        return;
      }
      catch (IllegalArgumentException paramString1)
      {
        Log.i("Prime31", "could not find UnitySendMessage method: " + paramString1.getMessage());
        return;
      }
      catch (IllegalAccessException paramString1)
      {
        Log.i("Prime31", "could not find UnitySendMessage method: " + paramString1.getMessage());
        return;
      }
      catch (InvocationTargetException paramString1)
      {
        Log.i("Prime31", "could not find UnitySendMessage method: " + paramString1.getMessage());
        return;
      }
    }
    Log.i("Prime31", "UnitySendMessage: " + paramString1 + ", " + paramString2 + ", " + paramString3);
  }
  
  private Activity getActivity()
  {
    if (this._unityPlayerActivityField != null) {
      try
      {
        Activity localActivity = (Activity)this._unityPlayerActivityField.get(this._unityPlayerClass);
        return localActivity;
      }
      catch (Exception localException)
      {
        Log.i("Prime31", "error getting currentActivity: " + localException.getMessage());
      }
    }
    Log.i("Prime31", "returning _activity directly");
    return this._activity;
  }
  
  public static ChartBoostPlugin instance()
  {
    if (_instance == null) {
      _instance = new ChartBoostPlugin();
    }
    return _instance;
  }
  
  private ChartBoost sharedChartBoost()
  {
    return ChartBoost.getSharedChartBoost(getActivity());
  }
  
  public void cacheInterstitial(final String paramString)
  {
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        if ((paramString != null) && (paramString.length() > 0))
        {
          ChartBoostPlugin.this.sharedChartBoost().cacheInterstitial(paramString);
          return;
        }
        ChartBoostPlugin.this.sharedChartBoost().cacheInterstitial();
      }
    });
  }
  
  public void cacheMoreApps()
  {
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        ChartBoostPlugin.this.sharedChartBoost().cacheMoreApps();
      }
    });
  }
  
  public void didClickInterstitial(View paramView)
  {
    UnitySendMessage("ChartBoostAndroidManager", "didFinishInterstitial", "click");
  }
  
  public void didClickMoreApps(View paramView)
  {
    UnitySendMessage("ChartBoostAndroidManager", "didFinishMoreApps", "click");
  }
  
  public void didCloseInterstitial(View paramView)
  {
    UnitySendMessage("ChartBoostAndroidManager", "didFinishInterstitial", "close");
  }
  
  public void didCloseMoreApps(View paramView)
  {
    UnitySendMessage("ChartBoostAndroidManager", "didFinishMoreApps", "close");
  }
  
  public void didDismissInterstitial(View paramView)
  {
    UnitySendMessage("ChartBoostAndroidManager", "didFinishInterstitial", "dismiss");
  }
  
  public void didDismissMoreApps(View paramView)
  {
    UnitySendMessage("ChartBoostAndroidManager", "didFinishMoreApps", "dismiss");
  }
  
  public void didFailToLoadInterstitial()
  {
    UnitySendMessage("ChartBoostAndroidManager", "didFailToLoadInterstitial", "");
  }
  
  public void didFailToLoadMoreApps()
  {
    UnitySendMessage("ChartBoostAndroidManager", "didFailToLoadMoreApps", "");
  }
  
  public boolean hasCachedInterstitial(String paramString)
  {
    if ((paramString != null) && (paramString.length() > 0)) {
      return sharedChartBoost().hasCachedInterstitial(paramString);
    }
    return sharedChartBoost().hasCachedInterstitial();
  }
  
  public boolean hasCachedMoreApps()
  {
    return sharedChartBoost().hasCachedMoreApps();
  }
  
  public void init(final String paramString1, final String paramString2)
  {
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        ChartBoostPlugin.this.sharedChartBoost().setAppId(paramString1);
        ChartBoostPlugin.this.sharedChartBoost().setAppSignature(paramString2);
        ChartBoostPlugin.this.sharedChartBoost().setDelegate(ChartBoostPlugin._instance);
        ChartBoostPlugin.this.sharedChartBoost().install();
      }
    });
  }
  
  public boolean shouldDisplayInterstitial(View paramView)
  {
    return true;
  }
  
  public boolean shouldDisplayMoreApps(View paramView)
  {
    return true;
  }
  
  public boolean shouldRequestInterstitial()
  {
    return true;
  }
  
  public void showInterstitial(final String paramString)
  {
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        if ((paramString != null) && (paramString.length() > 0))
        {
          ChartBoostPlugin.this.sharedChartBoost().showInterstitial(paramString);
          return;
        }
        ChartBoostPlugin.this.sharedChartBoost().showInterstitial();
      }
    });
  }
  
  public void showMoreApps()
  {
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        ChartBoostPlugin.this.sharedChartBoost().showMoreApps();
      }
    });
  }
}
