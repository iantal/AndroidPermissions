package com.prime31;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import com.facebook.android.AsyncFacebookRunner;
import com.facebook.android.AsyncFacebookRunner.RequestListener;
import com.facebook.android.BaseRequestListener;
import com.facebook.android.DialogError;
import com.facebook.android.Facebook;
import com.facebook.android.Facebook.DialogListener;
import com.facebook.android.Facebook.ServiceListener;
import com.facebook.android.FacebookError;
import com.facebook.android.SessionEvents;
import com.facebook.android.SessionEvents.AuthListener;
import com.facebook.android.SessionEvents.LogoutListener;
import com.facebook.android.SessionStore;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.net.MalformedURLException;
import java.util.Iterator;
import java.util.Set;

public class FacebookPlugin
{
  private static FacebookPlugin _instance;
  public Activity _activity;
  private AsyncFacebookRunner _asyncRunner;
  public Facebook _facebook;
  private Handler _handler;
  private Field _unityPlayerActivityField;
  private Class<?> _unityPlayerClass;
  private Method _unitySendMessageMethod;
  
  public FacebookPlugin()
  {
    Log.i("Prime31", "FacebookPlugin constructor running.  Creating Handler.  Current thread: " + Thread.currentThread().getName());
    try
    {
      this._unityPlayerClass = Class.forName("com.unity3d.player.UnityPlayer");
      this._unityPlayerActivityField = this._unityPlayerClass.getField("currentActivity");
      this._unitySendMessageMethod = this._unityPlayerClass.getMethod("UnitySendMessage", new Class[] { String.class, String.class, String.class });
      getActivity().runOnUiThread(new Runnable()
      {
        public void run()
        {
          FacebookPlugin.this._handler = new Handler();
        }
      });
      return;
    }
    catch (ClassNotFoundException localClassNotFoundException)
    {
      for (;;)
      {
        Log.i("Prime31", "could not find UnityPlayer class: " + localClassNotFoundException.getMessage());
      }
    }
    catch (NoSuchFieldException localNoSuchFieldException)
    {
      for (;;)
      {
        Log.i("Prime31", "could not find currentActivity field: " + localNoSuchFieldException.getMessage());
      }
    }
    catch (Exception localException)
    {
      for (;;)
      {
        Log.i("Prime31", "unkown exception occurred locating getActivity(): " + localException.getMessage());
      }
    }
  }
  
  private void UnitySendMessage(String paramString1, String paramString2, String paramString3)
  {
    if (this._unitySendMessageMethod != null) {
      try
      {
        this._unitySendMessageMethod.invoke(null, new Object[] { paramString1, paramString2, paramString3 });
        return;
      }
      catch (IllegalArgumentException paramString1)
      {
        Log.i("Prime31", "could not find UnitySendMessage method: " + paramString1.getMessage());
        return;
      }
      catch (IllegalAccessException paramString1)
      {
        Log.i("Prime31", "could not find UnitySendMessage method: " + paramString1.getMessage());
        return;
      }
      catch (InvocationTargetException paramString1)
      {
        Log.i("Prime31", "could not find UnitySendMessage method: " + paramString1.getMessage());
        return;
      }
    }
    Log.i("Prime31", "UnitySendMessage: " + paramString1 + ", " + paramString2 + ", " + paramString3);
  }
  
  private Activity getActivity()
  {
    if (this._unityPlayerActivityField != null) {
      try
      {
        Activity localActivity = (Activity)this._unityPlayerActivityField.get(this._unityPlayerClass);
        return localActivity;
      }
      catch (Exception localException)
      {
        Log.i("Prime31", "error getting currentActivity: " + localException.getMessage());
      }
    }
    return this._activity;
  }
  
  public static FacebookPlugin instance()
  {
    if (_instance == null) {
      _instance = new FacebookPlugin();
    }
    return _instance;
  }
  
  public void extendAccessToken()
  {
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        if (FacebookPlugin.this._facebook == null) {
          return;
        }
        Log.i("Prime31", "extending access token");
        FacebookPlugin.this._facebook.extendAccessToken(FacebookPlugin.this.getActivity(), new FacebookPlugin.Prime31ServiceListener(FacebookPlugin.this));
      }
    });
  }
  
  public String getSessionToken()
  {
    if (this._facebook == null) {
      return "";
    }
    return this._facebook.getAccessToken();
  }
  
  public void graphRequest(String paramString1, String paramString2, Bundle paramBundle)
  {
    if (paramBundle == null)
    {
      this._asyncRunner.request(paramString1, new Prime31RequestListener());
      return;
    }
    this._asyncRunner.request(paramString1, paramBundle, paramString2, new Prime31RequestListener(), null);
  }
  
  public void init(String paramString)
  {
    Log.i("Prime31", "initializing Facebook object with appId: " + paramString);
    this._facebook = new Facebook(paramString);
    this._asyncRunner = new AsyncFacebookRunner(this._facebook);
    SessionStore.restore(this._facebook, getActivity());
    SessionEvents.addAuthListener(new AuthorizationListener());
    SessionEvents.addLogoutListener(new LogoutEventListener());
  }
  
  public boolean isSessionValid()
  {
    if (this._facebook == null) {
      return false;
    }
    return this._facebook.isSessionValid();
  }
  
  public void logout()
  {
    if (this._facebook.isSessionValid())
    {
      SessionEvents.onLogoutBegin();
      this._asyncRunner.logout(getActivity(), new LogoutRequestListener(null));
    }
  }
  
  void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    this._facebook.authorizeCallback(paramInt1, paramInt2, paramIntent);
  }
  
  public void restRequest(String paramString, Bundle paramBundle)
  {
    this._asyncRunner.request(null, paramBundle, paramString, new Prime31RequestListener(), null);
  }
  
  public void showDialog(final String paramString, final Bundle paramBundle)
  {
    Log.i("Prime31", "In showDialog with bundle: " + paramBundle);
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        if (FacebookPlugin.this._facebook == null) {
          return;
        }
        FacebookPlugin.this._facebook.dialog(FacebookPlugin.this.getActivity(), paramString, paramBundle, new FacebookPlugin.Prime31DialogListener(FacebookPlugin.this));
      }
    });
  }
  
  public void showLoginDialog(final String[] paramArrayOfString)
  {
    Log.i("Prime31", "login permissions count: " + paramArrayOfString.length);
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        if (FacebookPlugin.this._facebook == null) {
          return;
        }
        FacebookPlugin.this._facebook.authorize(FacebookPlugin.this.getActivity(), paramArrayOfString, new FacebookPlugin.LoginDialogListener(FacebookPlugin.this, null));
      }
    });
  }
  
  public class AuthorizationListener
    implements SessionEvents.AuthListener
  {
    public AuthorizationListener() {}
    
    public void onAuthFail(String paramString)
    {
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookLoginDidFail", paramString);
    }
    
    public void onAuthSucceed()
    {
      SessionStore.save(FacebookPlugin.this._facebook, FacebookPlugin.this.getActivity());
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookLoginSucceeded", "");
    }
  }
  
  private final class LoginDialogListener
    implements Facebook.DialogListener
  {
    private LoginDialogListener() {}
    
    public void onCancel()
    {
      SessionEvents.onLoginError("Cancelled");
    }
    
    public void onComplete(Bundle paramBundle) {}
    
    public void onError(DialogError paramDialogError)
    {
      SessionEvents.onLoginError(paramDialogError.getMessage());
    }
    
    public void onFacebookError(FacebookError paramFacebookError)
    {
      SessionEvents.onLoginError(paramFacebookError.getMessage());
    }
  }
  
  public class LogoutEventListener
    implements SessionEvents.LogoutListener
  {
    public LogoutEventListener() {}
    
    public void onLogoutBegin()
    {
      Log.i("Prime31", "onLogoutBegin");
    }
    
    public void onLogoutFinish()
    {
      Log.i("Prime31", "onLogoutFinish");
      SessionStore.clear(FacebookPlugin.this.getActivity());
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookDidLogout", "");
    }
  }
  
  private class LogoutRequestListener
    extends BaseRequestListener
  {
    private LogoutRequestListener() {}
    
    public void onComplete(String paramString, Object paramObject)
    {
      FacebookPlugin.this._handler.post(new Runnable()
      {
        public void run() {}
      });
    }
  }
  
  public class Prime31DialogListener
    implements Facebook.DialogListener
  {
    public Prime31DialogListener() {}
    
    public void onCancel()
    {
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookDialogDidNotComplete", "");
    }
    
    public void onComplete(Bundle paramBundle)
    {
      StringBuilder localStringBuilder = new StringBuilder();
      Iterator localIterator = paramBundle.keySet().iterator();
      for (;;)
      {
        if (!localIterator.hasNext())
        {
          paramBundle = localStringBuilder.toString();
          Log.d("Prime31", "Dialog Succeeded! with query params: " + paramBundle);
          FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookDialogDidCompleteWithUrl", paramBundle);
          FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookDialogDidComplete", "");
          return;
        }
        String str1 = (String)localIterator.next();
        String str2 = paramBundle.getString(str1);
        localStringBuilder.append(str1);
        localStringBuilder.append("=");
        localStringBuilder.append(str2);
        if (localIterator.hasNext()) {
          localStringBuilder.append("&");
        }
      }
    }
    
    public void onError(DialogError paramDialogError)
    {
      paramDialogError.printStackTrace();
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookDialogDidFailWithError", paramDialogError.getMessage());
    }
    
    public void onFacebookError(FacebookError paramFacebookError)
    {
      paramFacebookError.printStackTrace();
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookDialogDidFailWithError", paramFacebookError.getMessage());
    }
  }
  
  public class Prime31RequestListener
    implements AsyncFacebookRunner.RequestListener
  {
    public Prime31RequestListener() {}
    
    public void onComplete(final String paramString, Object paramObject)
    {
      FacebookPlugin.this.getActivity().runOnUiThread(new Runnable()
      {
        public void run()
        {
          FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookDidReceiveCustomRequest", paramString.toString());
        }
      });
    }
    
    public void onFacebookError(FacebookError paramFacebookError, Object paramObject)
    {
      Log.e("Prime31", paramFacebookError.getMessage());
      paramFacebookError.printStackTrace();
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookCustomRequestDidFail", paramFacebookError.getMessage());
    }
    
    public void onFileNotFoundException(FileNotFoundException paramFileNotFoundException, Object paramObject)
    {
      Log.e("Prime31", paramFileNotFoundException.getMessage());
      paramFileNotFoundException.printStackTrace();
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookCustomRequestDidFail", paramFileNotFoundException.getMessage());
    }
    
    public void onIOException(IOException paramIOException, Object paramObject)
    {
      Log.e("Prime31", paramIOException.getMessage());
      paramIOException.printStackTrace();
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookCustomRequestDidFail", paramIOException.getMessage());
    }
    
    public void onMalformedURLException(MalformedURLException paramMalformedURLException, Object paramObject)
    {
      Log.e("Prime31", paramMalformedURLException.getMessage());
      paramMalformedURLException.printStackTrace();
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookCustomRequestDidFail", paramMalformedURLException.getMessage());
    }
  }
  
  public class Prime31ServiceListener
    implements Facebook.ServiceListener
  {
    public Prime31ServiceListener() {}
    
    public void onComplete(Bundle paramBundle)
    {
      Log.i("Prime31", "callback");
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookDidExtendToken", String.valueOf(FacebookPlugin.this._facebook.getAccessExpires()));
    }
    
    public void onError(Error paramError)
    {
      Log.i("Prime31", "callback");
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookFailedToExtendToken", paramError.getMessage());
    }
    
    public void onFacebookError(FacebookError paramFacebookError)
    {
      Log.i("Prime31", "callback");
      FacebookPlugin.this.UnitySendMessage("FacebookManager", "facebookFailedToExtendToken", paramFacebookError.getMessage());
    }
  }
}
