package com.ironsource.mobilcore;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.graphics.Canvas;
import android.os.Build.VERSION;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.VelocityTracker;
import android.view.View.BaseSavedState;
import android.view.ViewConfiguration;
import android.view.animation.AccelerateInterpolator;
import android.view.animation.Interpolator;

@SuppressLint({"NewApi"})
abstract class ae
  extends ai
{
  private static final Interpolator I = new ak();
  private static final Interpolator J = new aq();
  protected static final Interpolator a = new AccelerateInterpolator();
  private final Runnable K = new Runnable()
  {
    public final void run()
    {
      ae.b(ae.this);
    }
  };
  private Runnable L;
  private ao M;
  private boolean N;
  protected int b;
  protected final Runnable c = new Runnable()
  {
    public final void run()
    {
      ae.a(ae.this);
    }
  };
  protected float d;
  protected boolean e;
  protected float f;
  protected float g;
  protected float h = -1.0F;
  protected float i = -1.0F;
  protected long j;
  protected ao k;
  protected VelocityTracker l;
  protected int m;
  protected boolean n = true;
  protected int o;
  
  ae(Activity paramActivity, int paramInt)
  {
    super(paramActivity, paramInt);
  }
  
  private void k()
  {
    if (this.N)
    {
      this.N = false;
      this.z.setLayerType(0, null);
      this.y.setLayerType(0, null);
    }
  }
  
  private void l()
  {
    if (this.M.d())
    {
      i1 = (int)this.d;
      int i2 = this.M.b();
      if (i2 != i1) {
        c(i2);
      }
      if (i2 != this.M.c())
      {
        postOnAnimation(this.K);
        return;
      }
    }
    this.M.e();
    int i1 = this.M.c();
    c(i1);
    if (i1 == 0) {}
    for (i1 = 0;; i1 = 8)
    {
      e(i1);
      k();
      return;
    }
  }
  
  private void m()
  {
    if (this.k.d())
    {
      int i1 = (int)this.d;
      int i2 = this.k.b();
      if (i2 != i1) {
        c(i2);
      }
      if (!this.k.a())
      {
        postOnAnimation(this.c);
        return;
      }
      if (this.j > 0L)
      {
        this.L = new Runnable()
        {
          public final void run()
          {
            ae.this.h();
          }
        };
        postDelayed(this.L, this.j);
      }
    }
    this.k.e();
    c(0.0F);
    e(0);
    k();
  }
  
  protected abstract void a();
  
  protected final void a(int paramInt1, int paramInt2, boolean paramBoolean)
  {
    int i1 = 0;
    this.e = false;
    if (this.l != null)
    {
      this.l.recycle();
      this.l = null;
    }
    i();
    int i2 = (int)this.d;
    int i3 = paramInt1 - i2;
    if ((i3 == 0) || (!paramBoolean))
    {
      c(paramInt1);
      if (paramInt1 == 0) {}
      for (paramInt1 = i1;; paramInt1 = 8)
      {
        e(paramInt1);
        k();
        return;
      }
    }
    paramInt1 = Math.abs(paramInt2);
    if (paramInt1 > 0)
    {
      paramInt1 = Math.round(Math.abs(i3 / paramInt1) * 1000.0F) * 4;
      paramInt1 = Math.min(paramInt1, 600);
      if (i3 <= 0) {
        break label170;
      }
      e(4);
      this.M.a(i2, 0, i3, 0, paramInt1);
    }
    for (;;)
    {
      e();
      l();
      return;
      paramInt1 = (int)(600.0F * Math.abs(i3 / this.A));
      break;
      label170:
      e(1);
      this.M.a(i2, 0, i3, 0, paramInt1);
    }
  }
  
  protected final void a(Context paramContext, AttributeSet paramAttributeSet)
  {
    super.a(paramContext, paramAttributeSet);
    paramAttributeSet = ViewConfiguration.get(paramContext);
    this.b = paramAttributeSet.getScaledTouchSlop();
    this.m = paramAttributeSet.getScaledMaximumFlingVelocity();
    this.M = new ao(paramContext, J);
    this.k = new ao(paramContext, I);
    this.o = d(3);
  }
  
  protected abstract void a(Canvas paramCanvas, int paramInt);
  
  protected abstract boolean a(float paramFloat);
  
  protected abstract boolean a(MotionEvent paramMotionEvent);
  
  protected abstract void b(float paramFloat);
  
  protected abstract void b(int paramInt);
  
  protected abstract void b(Canvas paramCanvas, int paramInt);
  
  protected abstract void b(MotionEvent paramMotionEvent);
  
  protected abstract boolean b();
  
  protected final void c(float paramFloat)
  {
    int i1 = (int)this.d;
    int i2 = (int)paramFloat;
    this.d = paramFloat;
    if (i2 != i1)
    {
      b(i2);
      if (i2 == 0) {
        break label38;
      }
    }
    label38:
    for (boolean bool = true;; bool = false)
    {
      this.C = bool;
      return;
    }
  }
  
  public final void c(int paramInt)
  {
    this.A = paramInt;
    this.B = true;
    if ((this.D == 8) || (this.D == 4)) {
      c(this.A);
    }
    requestLayout();
    invalidate();
  }
  
  protected abstract void c(Canvas paramCanvas, int paramInt);
  
  public final void c(boolean paramBoolean)
  {
    if ((this.D == 8) || (this.D == 4)) {
      b(paramBoolean);
    }
    while ((this.D != 0) && (this.D != 1)) {
      return;
    }
    a(paramBoolean);
  }
  
  public final boolean c()
  {
    return this.C;
  }
  
  public final void d()
  {
    if (5000L < 0L) {
      throw new IllegalArgumentException("startDelay must be zero or larger.");
    }
    if (10000L < 0L) {
      throw new IllegalArgumentException("delay must be zero or larger");
    }
    removeCallbacks(this.c);
    removeCallbacks(this.L);
    this.M.a(0, 0, this.A / 3, 0, 500);
    e();
    l();
    this.j = 0L;
    this.L = new Runnable()
    {
      public final void run()
      {
        ae.this.h();
      }
    };
    postDelayed(this.L, 500L);
  }
  
  protected void dispatchDraw(Canvas paramCanvas)
  {
    super.dispatchDraw(paramCanvas);
    int i1 = (int)this.d;
    if (i1 != 0) {
      b(paramCanvas, i1);
    }
    if (this.r) {
      a(paramCanvas, i1);
    }
    if (this.u != null) {
      c(paramCanvas, i1);
    }
  }
  
  protected final void e()
  {
    if ((p) && (this.H) && (!this.N)) {
      this.N = true;
    }
  }
  
  protected final void f()
  {
    if (this.G == 1)
    {
      this.F = this.E;
      return;
    }
    if (this.G == 2)
    {
      this.F = getMeasuredWidth();
      return;
    }
    this.F = 0;
  }
  
  protected final void g()
  {
    removeCallbacks(this.K);
    this.M.e();
    k();
  }
  
  protected final void h()
  {
    a();
    e();
    m();
  }
  
  protected final void i()
  {
    removeCallbacks(this.L);
    removeCallbacks(this.c);
    k();
  }
  
  protected final boolean j()
  {
    return Math.abs(this.d) <= this.o;
  }
  
  protected void onRestoreInstanceState(Parcelable paramParcelable)
  {
    paramParcelable = (a)paramParcelable;
    super.onRestoreInstanceState(paramParcelable.getSuperState());
    float f1;
    if (paramParcelable.a)
    {
      f1 = this.A;
      c(f1);
      if (!paramParcelable.a) {
        break label52;
      }
    }
    label52:
    for (int i1 = 8;; i1 = 0)
    {
      this.D = i1;
      return;
      f1 = 0.0F;
      break;
    }
  }
  
  protected Parcelable onSaveInstanceState()
  {
    a localA = new a(super.onSaveInstanceState());
    if ((this.D == 8) || (this.D == 4)) {}
    for (boolean bool = true;; bool = false)
    {
      localA.a = bool;
      return localA;
    }
  }
  
  public void postOnAnimation(Runnable paramRunnable)
  {
    if (Build.VERSION.SDK_INT >= 16)
    {
      super.postOnAnimation(paramRunnable);
      return;
    }
    postDelayed(paramRunnable, 16L);
  }
  
  static final class a
    extends View.BaseSavedState
  {
    public static final Parcelable.Creator<a> b = new Parcelable.Creator() {};
    boolean a;
    
    public a(Parcel paramParcel)
    {
      super();
      if (paramParcel.readInt() == 1) {}
      for (;;)
      {
        this.a = bool;
        return;
        bool = false;
      }
    }
    
    public a(Parcelable paramParcelable)
    {
      super();
    }
    
    public final void writeToParcel(Parcel paramParcel, int paramInt)
    {
      super.writeToParcel(paramParcel, paramInt);
      if (this.a) {}
      for (paramInt = 1;; paramInt = 0)
      {
        paramParcel.writeInt(paramInt);
        return;
      }
    }
  }
}
