package com.ironsource.mobilcore;

import android.annotation.SuppressLint;
import android.app.AlarmManager;
import android.app.DownloadManager;
import android.app.DownloadManager.Query;
import android.app.DownloadManager.Request;
import android.app.Notification;
import android.app.Notification.Builder;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Environment;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;

final class s
{
  private final String a = "Downloading";
  private final String b = "Download In Progress...";
  private final String c = "Download";
  private final String d = "Download Complete.";
  private final String e = "Download Error.";
  private NotificationManager f = null;
  private final int g = Build.VERSION.SDK_INT;
  private final int h = 495307123;
  private Notification.Builder i;
  private Notification j;
  private Context k;
  private int l;
  private DownloadManager m;
  private String n;
  private String o;
  
  @SuppressLint({"NewApi"})
  public s(Context paramContext, Intent paramIntent)
  {
    A.a("dmService called", 55);
    if (this.k == null)
    {
      this.k = paramContext;
      this.f = ((NotificationManager)paramContext.getSystemService("notification"));
    }
    String str1;
    String str2;
    String str3;
    String str4;
    Object localObject;
    boolean bool;
    if (paramIntent.getStringExtra("extra_service_type").equals("download"))
    {
      A.a("got download intent", 55);
      str1 = paramIntent.getStringExtra("com.ironsource.mobilcore.extra_download_url");
      str2 = paramIntent.getStringExtra("com.ironsource.mobilcore.extra_download_filename");
      str3 = paramIntent.getStringExtra("com.ironsource.mobilcore.extra_download_appname");
      str4 = paramIntent.getStringExtra("com.ironsource.mobilcore.extra_download_app_img_name");
      localObject = paramIntent.getStringExtra("com.ironsource.mobilcore.MobileCoreReport_extra_offer");
      this.n = paramIntent.getStringExtra("com.ironsource.mobilcore.MobileCoreReport_extra_flow_type");
      this.o = paramIntent.getStringExtra("com.ironsource.mobilecore.MobileCoreReport_extra_flow");
      bool = paramIntent.getBooleanExtra("com.ironsource.mobilcore.extra_is_apk_download", false);
      if (this.g >= 14)
      {
        paramContext = this.n;
        paramContext = this.o;
        a(str1, str2, str4, str3, (String)localObject, bool);
      }
    }
    int i1;
    label1259:
    label1294:
    do
    {
      do
      {
        long l1;
        do
        {
          return;
          if (this.g < 9) {
            break label1294;
          }
          if (!aE.a(this.k, "android.permission.WRITE_EXTERNAL_STORAGE")) {
            break label1259;
          }
          A.a("WRITE_EXTERNAL_STORAGE permission available. Using DownloadManager", 55);
          A.a("got api: " + this.g, 55);
          l1 = paramIntent.getLongExtra("com.ironsource.mobilcore.extra_download_queue_id", -1L);
          A.a("got queue_id: " + l1, 55);
          paramIntent = Environment.getExternalStorageDirectory() + "/mc_data";
          if (l1 == -1L)
          {
            A.a("no_queue_id", 55);
            this.m = ((DownloadManager)paramContext.getSystemService("download"));
            paramContext = new DownloadManager.Request(Uri.parse(str1));
            paramIntent = new File(paramIntent);
            if (!paramIntent.exists()) {
              paramIntent.mkdirs();
            }
            paramIntent = paramIntent + File.separator + str2;
            A.a("deleting file " + paramIntent, 55);
            bool = new File(paramIntent).delete();
            A.a("file deletion was " + bool, 55);
            paramContext.setDestinationInExternalPublicDir("/mc_data", str2);
            paramContext.setAllowedNetworkTypes(3);
            paramContext.setAllowedOverRoaming(false);
            paramContext.setVisibleInDownloadsUi(true);
            try
            {
              paramContext.setShowRunningNotification(true);
              paramContext.setTitle("Downloading " + str3);
              paramContext.setDescription("Download In Progress...");
              l1 = this.m.enqueue(paramContext);
              A.a("queue_id from Download Manager is: " + l1, 55);
              paramContext = this.n;
              a(str1, str3, str4, (String)localObject, str2, l1, this.o);
              return;
            }
            catch (Exception paramIntent)
            {
              for (;;)
              {
                A.a("downloadManager error: " + paramIntent.getMessage(), 55);
              }
            }
          }
          A.a("queue_id != Consts.NO_QUEUE_ID trying installation", 55);
          if (this.m == null) {
            this.m = ((DownloadManager)this.k.getSystemService("download"));
          }
          paramContext = new DownloadManager.Query();
          paramContext.setFilterById(new long[] { l1 });
          paramContext = this.m.query(paramContext);
          int i2 = -3;
          i1 = i2;
          if (paramContext != null)
          {
            i1 = i2;
            if (paramContext.moveToFirst()) {
              i1 = paramContext.getColumnIndex("status");
            }
          }
          long l2 = paramContext.getInt(i1);
          A.a("Download Status = " + l2, 55);
          if (l2 == 16L)
          {
            A.a("DownloadManagerService | status fail: removing file if exists and reporting fail.", 55);
            a.a(this.k, str3, 2);
            paramContext = aE.d(str1);
            A.a("Deleting file: " + paramContext, 55);
            this.k.deleteFile(paramContext);
            a((String)localObject, "S-");
            return;
          }
          if (l2 != 8L) {
            break;
          }
          A.a("DownloadManagerService | removing " + str3, 55);
          a.a(this.k, str3, 1);
          paramContext = aE.d(str1);
          paramContext = aE.a(this.k, paramIntent, paramContext);
          aE.a(this.k, this.n, paramContext, (String)localObject, 0, this.o, -1);
          a((String)localObject, "S");
          A.a("installQueuedFile start", 55);
          if (this.m == null) {
            this.m = ((DownloadManager)this.k.getSystemService("download"));
          }
          paramContext = new DownloadManager.Query();
          paramContext.setFilterById(new long[] { l1 });
          paramContext = this.m.query(paramContext);
        } while ((paramContext == null) || (!paramContext.moveToFirst()));
        i1 = paramContext.getInt(paramContext.getColumnIndex("_id"));
        if (i1 == l1) {
          A.a("download succesfull " + i1, 55);
        }
        try
        {
          i1 = paramContext.getColumnIndex("local_uri");
          A.a("urlcollon " + i1, 55);
          localObject = paramContext.getString(i1);
          paramIntent = a((String)localObject);
          A.a("installQueuedFile | attempting removeFilePrefix(" + (String)localObject + ")", 55);
          localObject = new Intent("android.intent.action.VIEW");
          A.a("fileUri: " + paramIntent, 55);
          ((Intent)localObject).setDataAndType(Uri.fromFile(new File(paramIntent)), "application/vnd.android.package-archive");
          ((Intent)localObject).addFlags(268435456);
          this.k.startActivity((Intent)localObject);
          return;
        }
        catch (Exception paramIntent)
        {
          if (paramContext.getInt(paramContext.getColumnIndex("reason")) == 1007)
          {
            aE.b(this.k, getClass().getName(), "Couldn't download: No SD card mounted.");
            return;
          }
          aE.a(this.k, getClass().getName(), paramIntent);
          return;
        }
        A.a("Download still in progress not installing yet. trying again in 1", 55);
        paramContext = this.n;
        a(str1, str3, str4, (String)localObject, str2, l1, this.o);
        return;
        A.a("WRITE_EXTERNAL_STORAGE permission unavailable. Using custom DownloadManager", 55);
        paramContext = this.n;
        paramContext = this.o;
        a(str1, str2, str4, str3, (String)localObject, bool);
        return;
        A.a("downloading for api < GingerBread", 55);
        paramContext = this.n;
        paramContext = this.o;
        a(str1, str2, str4, str3, (String)localObject, bool);
        return;
      } while (!paramIntent.getStringExtra("extra_service_type").equals("com.ironsource.mobilcore.extra_service_close_notification"));
      A.a("got service type close notification", 55);
      i1 = paramIntent.getIntExtra("com.ironsource.mobilcore.extra_close_notification_num", -1);
    } while (i1 < 0);
    this.f.cancel(i1);
  }
  
  private static String a(String paramString)
  {
    A.a("removing prefix from: " + paramString, 55);
    if (paramString.startsWith("file://")) {
      return paramString.substring(8);
    }
    A.a("Prefix cutting failed: no file:/// prefix found." + paramString, 55);
    return paramString;
  }
  
  private void a(String paramString1, String paramString2)
  {
    aE.a(this.k, this.o, this.n, paramString2, paramString1);
  }
  
  @SuppressLint({"NewApi"})
  private void a(String paramString1, String paramString2, Bitmap paramBitmap)
  {
    if (this.g >= 16)
    {
      this.i = new Notification.Builder(this.k).setContentTitle(paramString1).setContentText(paramString2).setSmallIcon(17301634);
      if (paramBitmap != null) {
        this.i.setLargeIcon(paramBitmap);
      }
      this.i.setAutoCancel(true);
      this.i.setOngoing(false);
      this.i.setContentIntent(PendingIntent.getActivity(this.k, 0, new Intent(), 0));
      this.j = this.i.build();
      this.f.notify(495307123, this.j);
      return;
    }
    A.a("< 2.3 notification.", 55);
    paramBitmap = PendingIntent.getActivity(this.k, 0, new Intent(), 0);
    if (this.f == null) {
      this.f = ((NotificationManager)this.k.getSystemService("notification"));
    }
    Notification localNotification = new Notification(17301634, paramString1, System.currentTimeMillis());
    if ("Download Complete.".equals(paramString2)) {
      localNotification.flags &= 0x2;
    }
    for (localNotification.flags |= 0x10;; localNotification.flags |= 0x2)
    {
      localNotification.setLatestEventInfo(this.k, paramString1, paramString2, paramBitmap);
      this.f.notify(495307123, localNotification);
      return;
      localNotification.flags &= 0x10;
    }
  }
  
  private void a(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, long paramLong, String paramString6)
  {
    A.a("recallDownloadService started", 55);
    AlarmManager localAlarmManager = (AlarmManager)this.k.getSystemService("alarm");
    Intent localIntent = aE.m(this.k);
    localIntent.putExtra("extra_service_type", "download");
    localIntent.putExtra("com.ironsource.mobilcore.extra_download_url", paramString1);
    localIntent.putExtra("com.ironsource.mobilcore.extra_download_appname", paramString2);
    localIntent.putExtra("com.ironsource.mobilcore.extra_download_app_img_name", paramString3);
    localIntent.putExtra("com.ironsource.mobilcore.MobileCoreReport_extra_offer", paramString4);
    localIntent.putExtra("com.ironsource.mobilecore.MobileCoreReport_extra_flow", paramString6);
    localIntent.putExtra("com.ironsource.mobilcore.MobileCoreReport_extra_flow_type", this.n);
    localIntent.putExtra("com.ironsource.mobilcore.extra_download_queue_id", paramLong);
    localIntent.setAction("assisst_download_manager");
    localIntent.putExtra("com.ironsource.mobilcore.extra_download_filename", paramString5);
    localIntent.putExtra("com.ironsource.mobilcore.extra_is_apk_download", true);
    paramString1 = PendingIntent.getService(this.k, (int)System.currentTimeMillis(), localIntent, 1073741824);
    localAlarmManager.set(0, System.currentTimeMillis() + 60000L, paramString1);
  }
  
  private void a(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, boolean paramBoolean)
  {
    A.a("started download", 55);
    paramString3 = a(paramString3);
    Object localObject1 = aE.c(paramString3);
    A.a("using appImage = " + paramString3, 55);
    Bitmap localBitmap = BitmapFactory.decodeFile(new File(paramString3.substring(0, paramString3.length() - ((String)localObject1).length()), (String)localObject1).getAbsolutePath());
    a(paramString4, "Download In Progress...", localBitmap);
    File localFile = new File(this.k.getFilesDir() + "/" + paramString2);
    Object localObject5 = null;
    FileOutputStream localFileOutputStream1 = null;
    byte[] arrayOfByte = null;
    InputStream localInputStream2 = null;
    long l1 = 0L;
    this.l = 0;
    InputStream localInputStream1 = localInputStream2;
    localObject1 = localFileOutputStream1;
    Object localObject4 = arrayOfByte;
    paramString3 = localObject5;
    boolean bool = paramBoolean;
    try
    {
      HttpURLConnection localHttpURLConnection = (HttpURLConnection)new URL(paramString1).openConnection();
      localInputStream1 = localInputStream2;
      localObject1 = localFileOutputStream1;
      localObject4 = arrayOfByte;
      paramString3 = localObject5;
      bool = paramBoolean;
      localHttpURLConnection.setRequestProperty("Range", "bytes=" + 0L + "-");
      localInputStream1 = localInputStream2;
      localObject1 = localFileOutputStream1;
      localObject4 = arrayOfByte;
      paramString3 = localObject5;
      bool = paramBoolean;
      localHttpURLConnection.connect();
      localInputStream1 = localInputStream2;
      localObject1 = localFileOutputStream1;
      localObject4 = arrayOfByte;
      paramString3 = localObject5;
      bool = paramBoolean;
      l2 = localHttpURLConnection.getContentLength();
      localInputStream1 = localInputStream2;
      localObject1 = localFileOutputStream1;
      localObject4 = arrayOfByte;
      paramString3 = localObject5;
      bool = paramBoolean;
      localInputStream2 = localHttpURLConnection.getInputStream();
      localInputStream1 = localInputStream2;
      localObject1 = localFileOutputStream1;
      localObject4 = localInputStream2;
      paramString3 = localObject5;
      bool = paramBoolean;
      arrayOfByte = new byte['Ѐ'];
      if (0L == 0L) {
        break label985;
      }
      localInputStream1 = localInputStream2;
      localObject1 = localFileOutputStream1;
      localObject4 = localInputStream2;
      paramString3 = localObject5;
      bool = paramBoolean;
      localFileOutputStream1 = new FileOutputStream(localFile, true);
    }
    catch (Exception localException)
    {
      for (;;)
      {
        long l2;
        localObject4 = localInputStream1;
        paramString3 = (String)localObject1;
        bool = paramBoolean;
        A.a("exception: download failed.", 2);
        localObject4 = localInputStream1;
        paramString3 = (String)localObject1;
        bool = paramBoolean;
        a(paramString4, "Download Error.", localBitmap);
        bool = false;
        localObject4 = localInputStream1;
        paramString3 = (String)localObject1;
        aE.a(this.k, getClass().getName(), localException);
        if (localObject1 != null) {}
        try
        {
          ((FileOutputStream)localObject1).flush();
          ((FileOutputStream)localObject1).close();
          if (localInputStream1 != null) {
            localInputStream1.close();
          }
        }
        catch (Exception paramString1)
        {
          for (;;)
          {
            aE.a(this.k, getClass().getName(), paramString1);
            continue;
            a(paramString5, "S-");
          }
        }
        a(paramString5, "S-");
        paramString1 = this.k;
        a.a(paramString1, paramString4, 1);
        return;
        localInputStream1 = localInputStream2;
        localObject1 = localException;
        localObject4 = localInputStream2;
        paramString3 = localObject5;
        bool = paramBoolean;
        localFileOutputStream2 = new FileOutputStream(localFile);
        continue;
        if (i2 == 100)
        {
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream2;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream2;
          bool = paramBoolean;
          this.i.setSmallIcon(17301634);
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream2;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream2;
          bool = paramBoolean;
          this.i.setContentTitle(paramString4 + " Download").setContentText("Download Complete.");
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream2;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream2;
          bool = paramBoolean;
          this.i.setAutoCancel(true);
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream2;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream2;
          bool = paramBoolean;
          this.i.setOngoing(false);
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream2;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream2;
          bool = paramBoolean;
          this.i.setContentIntent(PendingIntent.getActivity(this.k, 0, new Intent(), 0));
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream2;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream2;
          bool = paramBoolean;
          this.j = this.i.build();
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream2;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream2;
          bool = paramBoolean;
          this.f.notify(495307123, this.j);
        }
      }
    }
    finally
    {
      if (paramString3 == null) {
        break label1286;
      }
    }
    localInputStream1 = localInputStream2;
    localObject1 = localFileOutputStream1;
    localObject4 = localInputStream2;
    paramString3 = localFileOutputStream1;
    bool = paramBoolean;
    localFileOutputStream1.close();
    localInputStream1 = localInputStream2;
    localObject1 = localFileOutputStream1;
    localObject4 = localInputStream2;
    paramString3 = localFileOutputStream1;
    bool = paramBoolean;
    localFileOutputStream1 = this.k.openFileOutput(paramString2, 1);
    int i2;
    for (;;)
    {
      localInputStream1 = localInputStream2;
      localObject1 = localFileOutputStream1;
      localObject4 = localInputStream2;
      paramString3 = localFileOutputStream1;
      bool = paramBoolean;
      int i1 = localInputStream2.read(arrayOfByte);
      if (i1 == -1) {
        break label1612;
      }
      l1 += i1;
      if (l2 > 0L)
      {
        localInputStream1 = localInputStream2;
        localObject1 = localFileOutputStream1;
        localObject4 = localInputStream2;
        paramString3 = localFileOutputStream1;
        bool = paramBoolean;
        i2 = (int)(100L * l1 / l2);
        localInputStream1 = localInputStream2;
        localObject1 = localFileOutputStream1;
        localObject4 = localInputStream2;
        paramString3 = localFileOutputStream1;
        bool = paramBoolean;
        if (this.l != i2)
        {
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream1;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream1;
          bool = paramBoolean;
          this.l = i2;
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream1;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream1;
          bool = paramBoolean;
          i2 = this.l;
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream1;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream1;
          bool = paramBoolean;
          if (this.g < 16) {
            break label1486;
          }
          if (i2 >= 100) {
            break;
          }
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream1;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream1;
          bool = paramBoolean;
          this.i.setSmallIcon(17301633);
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream1;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream1;
          bool = paramBoolean;
          this.i.setProgress(100, this.l, false);
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream1;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream1;
          bool = paramBoolean;
          this.i.setAutoCancel(false);
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream1;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream1;
          bool = paramBoolean;
          this.i.setOngoing(true);
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream1;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream1;
          bool = paramBoolean;
          this.i.setContentIntent(PendingIntent.getActivity(this.k, 0, new Intent(), 0));
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream1;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream1;
          bool = paramBoolean;
          this.j = this.i.build();
          localInputStream1 = localInputStream2;
          localObject1 = localFileOutputStream1;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream1;
          bool = paramBoolean;
          this.f.notify(495307123, this.j);
        }
      }
      localInputStream1 = localInputStream2;
      localObject1 = localFileOutputStream1;
      localObject4 = localInputStream2;
      paramString3 = localFileOutputStream1;
      bool = paramBoolean;
      localFileOutputStream1.write(arrayOfByte, 0, i1);
    }
    try
    {
      label977:
      label985:
      paramString3.flush();
      paramString3.close();
      label1286:
      if (localObject4 != null) {
        ((InputStream)localObject4).close();
      }
    }
    catch (Exception paramString3)
    {
      for (;;)
      {
        FileOutputStream localFileOutputStream2;
        label1486:
        label1612:
        aE.a(this.k, getClass().getName(), paramString3);
        continue;
        a(paramString5, "AI");
      }
    }
    if (bool)
    {
      paramString1 = aE.d(paramString1);
      paramString3 = this.k.getFilesDir().getPath();
      paramString1 = aE.a(this.k, paramString3, paramString1);
      if (!aE.b(this.k, paramString1))
      {
        A.a("attempting installation of " + paramString2, 55);
        paramString3 = new Intent("android.intent.action.VIEW");
        paramString3.setDataAndType(Uri.fromFile(new File(this.k.getFilesDir() + "/" + paramString2)), "application/vnd.android.package-archive");
        paramString3.addFlags(268435456);
        this.k.startActivity(paramString3);
        aE.a(this.k, this.n, paramString1, paramString5, 0, this.o, -1);
        a(paramString5, "S");
        this.f.cancel(495307123);
      }
    }
    else
    {
      for (;;)
      {
        a.a(this.k, paramString4, 1);
        throw localObject2;
        localInputStream1 = localInputStream2;
        Object localObject3 = localFileOutputStream2;
        localObject4 = localInputStream2;
        paramString3 = localFileOutputStream2;
        bool = paramBoolean;
        if (this.g < 9) {
          break;
        }
        if (i2 < 100)
        {
          localInputStream1 = localInputStream2;
          localObject3 = localFileOutputStream2;
          localObject4 = localInputStream2;
          paramString3 = localFileOutputStream2;
          bool = paramBoolean;
          a(paramString4, "Download In Progress... - " + i2 + "%", null);
          break;
        }
        if (i2 != 100) {
          break;
        }
        localInputStream1 = localInputStream2;
        localObject3 = localFileOutputStream2;
        localObject4 = localInputStream2;
        paramString3 = localFileOutputStream2;
        bool = paramBoolean;
        a(paramString4, "Download Complete.", null);
        break;
        localInputStream1 = localInputStream2;
        localObject3 = localFileOutputStream2;
        localObject4 = localInputStream2;
        paramString3 = localFileOutputStream2;
        bool = paramBoolean;
        localFileOutputStream2.close();
        localInputStream1 = localInputStream2;
        localObject3 = localFileOutputStream2;
        localObject4 = localInputStream2;
        paramString3 = localFileOutputStream2;
        bool = paramBoolean;
        A.a("download finished", 55);
        localInputStream1 = localInputStream2;
        localObject3 = localFileOutputStream2;
        localObject4 = localInputStream2;
        paramString3 = localFileOutputStream2;
        bool = paramBoolean;
        a(paramString4, "Download Complete.", localBitmap);
        localInputStream1 = localInputStream2;
        localObject3 = localFileOutputStream2;
        localObject4 = localInputStream2;
        paramString3 = localFileOutputStream2;
        bool = paramBoolean;
        A.a("DownloadManagerService | removing " + paramString4, 55);
        if (localFileOutputStream2 != null) {}
        try
        {
          localFileOutputStream2.flush();
          localFileOutputStream2.close();
          if (localInputStream2 != null) {
            localInputStream2.close();
          }
        }
        catch (Exception paramString3)
        {
          for (;;)
          {
            aE.a(this.k, getClass().getName(), paramString3);
            continue;
            a(paramString5, "AI");
          }
        }
        if (!paramBoolean) {
          break label2006;
        }
        paramString1 = aE.d(paramString1);
        paramString3 = this.k.getFilesDir().getPath();
        paramString1 = aE.a(this.k, paramString3, paramString1);
        if (aE.b(this.k, paramString1)) {
          break label2037;
        }
        A.a("attempting installation of " + paramString2, 55);
        paramString3 = new Intent("android.intent.action.VIEW");
        paramString3.setDataAndType(Uri.fromFile(new File(this.k.getFilesDir() + "/" + paramString2)), "application/vnd.android.package-archive");
        paramString3.addFlags(268435456);
        this.k.startActivity(paramString3);
        aE.a(this.k, this.n, paramString1, paramString5, 0, this.o, -1);
        a(paramString5, "S");
        this.f.cancel(495307123);
        paramString1 = this.k;
        break label977;
        a(paramString5, "S-");
      }
    }
  }
}
