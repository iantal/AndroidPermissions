package com.ironsource.mobilcore;

import android.annotation.SuppressLint;
import android.content.Context;
import android.webkit.WebView;
import android.webkit.WebViewClient;

@SuppressLint({"SetJavaScriptEnabled"})
final class i
{
  private Context a = MobileCore.c();
  private aW b;
  private aW c;
  private String d;
  
  public i(String paramString, aW.c paramC1, aW.c paramC2)
  {
    this.d = paramString;
    this.b = new aW(this.a);
    this.c = new aW(this.a);
    paramC1.setWebViewWithLoadState(this.b);
    this.b.a(paramC1);
    paramC2.setWebViewWithLoadState(this.c);
    this.c.a(paramC2);
    paramC1 = new WebViewClient()
    {
      public final void onReceivedError(WebView paramAnonymousWebView, int paramAnonymousInt, String paramAnonymousString1, String paramAnonymousString2)
      {
        ((aW)paramAnonymousWebView).d();
        A.a("AlwaysLoadedWebViewHolder: webview " + ((aW)paramAnonymousWebView).getId() + " onReceivedError errorCode:" + paramAnonymousInt + " , description:" + paramAnonymousString1 + " , failingUrl:" + paramAnonymousString2, 55);
      }
    };
    this.b.setWebViewClient(paramC1);
    this.c.setWebViewClient(paramC1);
    this.c.a(paramString);
    A.a("AlwaysLoadedWebViewHolder: loading in mLoadedWebView:" + this.c.getId() + " , url: " + paramString, 55);
  }
  
  public final aW a()
  {
    A.a("AlwaysLoadedWebViewHolder: getReadyWebView. new mLoadWebView:" + this.b.getId() + " , isReady: " + this.b.a(), 55);
    if (this.b.a())
    {
      localAW = this.b;
      this.b = this.c;
      this.c = localAW;
      A.a("AlwaysLoadedWebViewHolder: swapping webviews. new mLoadWebView:" + this.b.getId() + " , new mLoadedWebView:" + this.c.getId(), 55);
    }
    while (!this.c.b())
    {
      aW localAW;
      return this.c;
    }
    this.c.loadUrl(this.d);
    return null;
  }
  
  public final void a(String paramString)
  {
    A.a("AlwaysLoadedWebViewHolder: reset. loading in mLoadedWebView:" + this.c.getId() + " , url: " + paramString, 55);
    this.b.clearCache(true);
    this.b.c();
    this.c.c();
    this.c.a(paramString);
  }
  
  public final boolean b(String paramString)
  {
    A.a("AlwaysLoadedWebViewHolder: loadUrl. new mLoadWebView:" + this.b.getId() + " , url: " + paramString, 55);
    return this.b.a(paramString);
  }
}
