package com.ironsource.mobilcore;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.BitmapFactory;
import android.graphics.BitmapFactory.Options;
import android.graphics.drawable.AnimationDrawable;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.os.Build.VERSION;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.view.WindowManager.LayoutParams;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;

class j
{
  private static AnimationDrawable a;
  private static Dialog b;
  
  j() {}
  
  public static int a(AnimationDrawable paramAnimationDrawable)
  {
    int j = 0;
    if (paramAnimationDrawable != null)
    {
      int i = 0;
      for (;;)
      {
        k = i;
        if (j >= paramAnimationDrawable.getNumberOfFrames()) {
          break;
        }
        i += paramAnimationDrawable.getDuration(j);
        j += 1;
      }
    }
    int k = 0;
    return k;
  }
  
  @SuppressLint({"NewApi"})
  public static AnimationDrawable a(String paramString, int paramInt)
    throws Exception
  {
    Object localObject1 = null;
    Object localObject2 = a(new File(paramString));
    if (localObject2 == null) {
      throw new Exception("No Files");
    }
    AnimationDrawable localAnimationDrawable = new AnimationDrawable();
    if (Build.VERSION.SDK_INT >= 11)
    {
      localObject1 = new BitmapFactory.Options();
      ((BitmapFactory.Options)localObject1).inJustDecodeBounds = true;
      BitmapFactory.decodeFile(((File)((List)localObject2).get(0)).getAbsolutePath(), (BitmapFactory.Options)localObject1);
      paramString = Bitmap.createBitmap(((BitmapFactory.Options)localObject1).outWidth, ((BitmapFactory.Options)localObject1).outHeight, Bitmap.Config.ARGB_8888);
      ((BitmapFactory.Options)localObject1).inJustDecodeBounds = false;
      ((BitmapFactory.Options)localObject1).inBitmap = paramString;
      ((BitmapFactory.Options)localObject1).inSampleSize = 1;
    }
    for (;;)
    {
      Iterator localIterator = ((List)localObject2).iterator();
      if (localIterator.hasNext())
      {
        localObject2 = (File)localIterator.next();
        if (Build.VERSION.SDK_INT >= 11) {
          BitmapFactory.decodeFile(((File)localObject2).getPath(), (BitmapFactory.Options)localObject1);
        }
        for (;;)
        {
          localObject2 = B.a(MobileCore.c(), paramString);
          localAnimationDrawable.addFrame(new BitmapDrawable(MobileCore.c().getResources(), (Bitmap)localObject2), 1000 / paramInt);
          break;
          paramString = BitmapFactory.decodeFile(((File)localObject2).getPath());
        }
      }
      return localAnimationDrawable;
      localIterator = null;
      paramString = (String)localObject1;
      localObject1 = localIterator;
    }
  }
  
  private static List<File> a(File paramFile)
  {
    ArrayList localArrayList = new ArrayList();
    File[] arrayOfFile = paramFile.listFiles();
    if ((arrayOfFile == null) || (arrayOfFile.length <= 0))
    {
      b("preloader.zip");
      paramFile = null;
    }
    int j;
    int i;
    do
    {
      return paramFile;
      Arrays.sort(arrayOfFile, new Comparator() {});
      j = arrayOfFile.length;
      i = 0;
      paramFile = localArrayList;
    } while (i >= j);
    paramFile = arrayOfFile[i];
    if (paramFile.isDirectory()) {
      localArrayList.addAll(a(paramFile));
    }
    for (;;)
    {
      i += 1;
      break;
      localArrayList.add(paramFile);
    }
  }
  
  public static void a()
  {
    new Thread(new Runnable()
    {
      public final void run()
      {
        if ((j.a("preloader.zip")) || (j.c())) {}
        try
        {
          j.d();
          return;
        }
        catch (Exception localException)
        {
          aE.a(MobileCore.c(), getClass().getName(), localException);
        }
      }
    }).start();
  }
  
  public static void a(Activity paramActivity)
  {
    Object localObject1;
    Object localObject3;
    if (b == null)
    {
      localObject1 = new RelativeLayout(paramActivity);
      Object localObject2 = new ImageView(paramActivity);
      localObject3 = new RelativeLayout.LayoutParams(-2, -2);
      ((RelativeLayout.LayoutParams)localObject3).addRule(13);
      ((ImageView)localObject2).setLayoutParams((ViewGroup.LayoutParams)localObject3);
      localObject3 = a;
      if (localObject3 != null)
      {
        B.a((View)localObject2, (Drawable)localObject3);
        ((ImageView)localObject2).post(new Runnable()
        {
          public final void run()
          {
            j.a(true);
          }
        });
      }
      ((RelativeLayout)localObject1).setLayoutParams(new ViewGroup.LayoutParams(-1, -1));
      ((RelativeLayout)localObject1).setBackgroundColor(805306368);
      ((RelativeLayout)localObject1).setFocusable(true);
      ((RelativeLayout)localObject1).setClickable(true);
      ((RelativeLayout)localObject1).addView((View)localObject2);
      ((ImageView)localObject2).bringToFront();
      localObject2 = new Dialog(paramActivity, 16973835);
      b = (Dialog)localObject2;
      ((Dialog)localObject2).getWindow().requestFeature(1);
      b.getWindow().setBackgroundDrawableResource(17170445);
      b.setContentView((View)localObject1);
      localObject3 = b;
      localObject1 = paramActivity.getWindow();
      localObject2 = ((Window)localObject1).getAttributes();
      localObject3 = ((Dialog)localObject3).getWindow().getAttributes();
      if (Build.VERSION.SDK_INT < 11) {
        break label283;
      }
      ((WindowManager.LayoutParams)localObject3).systemUiVisibility = ((WindowManager.LayoutParams)localObject2).systemUiVisibility;
      if (((Window)localObject1).hasFeature(1))
      {
        int i = Build.VERSION.SDK_INT;
        ((WindowManager.LayoutParams)localObject3).systemUiVisibility = 1;
      }
      if ((paramActivity.getWindow().getAttributes().flags & 0x400) == 1024) {
        ((WindowManager.LayoutParams)localObject3).flags |= 0x400;
      }
    }
    for (;;)
    {
      ((WindowManager.LayoutParams)localObject3).width = -1;
      ((WindowManager.LayoutParams)localObject3).height = -1;
      b.getWindow().setAttributes((WindowManager.LayoutParams)localObject3);
      label283:
      try
      {
        b.show();
        return;
      }
      catch (Exception paramActivity) {}
      if ((((Window)localObject1).getAttributes().flags & 0x400) == 1024) {
        ((WindowManager.LayoutParams)localObject3).flags |= 0x400;
      }
    }
  }
  
  public static void a(boolean paramBoolean)
  {
    if (a != null)
    {
      if (paramBoolean) {
        a.start();
      }
    }
    else {
      return;
    }
    a.stop();
  }
  
  public static void b()
  {
    try
    {
      if ((b != null) && (b.isShowing()))
      {
        b.dismiss();
        a(false);
        b = null;
      }
      return;
    }
    catch (Exception localException) {}
  }
  
  public static void b(AnimationDrawable paramAnimationDrawable)
  {
    if ((paramAnimationDrawable == null) || (Build.VERSION.SDK_INT >= 11)) {}
    for (;;)
    {
      return;
      int i = 0;
      while (i < paramAnimationDrawable.getNumberOfFrames())
      {
        Drawable localDrawable = paramAnimationDrawable.getFrame(i);
        if ((localDrawable instanceof BitmapDrawable)) {
          ((BitmapDrawable)localDrawable).getBitmap().recycle();
        }
        i += 1;
      }
    }
  }
  
  private static boolean b(String paramString)
  {
    Object localObject = "fallback/" + paramString;
    FileOutputStream localFileOutputStream;
    try
    {
      localObject = MobileCore.class.getResourceAsStream((String)localObject);
      paramString = new File(MobileCore.c().getFilesDir().getPath() + "/", paramString);
      localFileOutputStream = new FileOutputStream(paramString);
      byte[] arrayOfByte = new byte['Ð€'];
      for (;;)
      {
        int i = ((InputStream)localObject).read(arrayOfByte);
        if (i == -1) {
          break;
        }
        localFileOutputStream.write(arrayOfByte, 0, i);
      }
      localFileOutputStream.flush();
    }
    catch (Exception paramString)
    {
      aE.a(MobileCore.c(), j.class.getName(), paramString);
      return false;
    }
    localFileOutputStream.close();
    ((InputStream)localObject).close();
    boolean bool = aX.a(MobileCore.c().getFilesDir().getPath() + "/", paramString);
    return bool;
  }
}
