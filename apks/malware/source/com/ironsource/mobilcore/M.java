package com.ironsource.mobilcore;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.graphics.Bitmap;
import android.graphics.drawable.Drawable;
import android.text.TextUtils.TruncateAt;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.view.inputmethod.InputMethodManager;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.TextView;

@SuppressLint({"SetJavaScriptEnabled", "ViewConstructor"})
final class M
  extends WebView
{
  protected Activity a;
  private final String b = "iVBORw0KGgoAAAANSUhEUgAAAAsAAAAYCAYAAAAs7gcTAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB90FHAwJN9A+JSQAAAGaSURBVDjLdZO9ihVBFIS/6tRIV4QVwUBW8RXMNJBFRFADM8N75gEM/AmERbngE0zPEwjCFUREIxNzExEDwUB2YTHYDY26DLZ7mTs7nmTgTHV1VZ3TYlLDMABs2f5q+y+AJAPfxEz1ff9a0gPp6LdtgDtr4Jwztjcl7TUgYGB/sVhsaob1fUrplm0kqX7vAW81YT2fUtqtgKrAvyPiIkBq4IhA0kvbHmmVpJ2G0ZhV0u5YaynloOu6jdZII9alJFzrKDF1OedjPynnzDAMp4CHNdMm9iAi3ozNp4jAdq5m3ORJetJuPdbc9/1ZSX8qgnrgMCLOTGNNkp41YCOw/Xhusgk4PW1KOvwf+PkEaODVHFh10z7Y3q5SVH3eB1ZrBodhoJRyTtL+aHIG9iLiwgnmOsUVcBdwTUXAtu1PXdetyaCUclXS9/G4bf+KiEsnmOuhd8Dt1m/aI2K1tnXL5RLbj0YGWzI7s8x1+b+klK6NBgRwA/g8lUEp5YqkH5NkfkbE5dkHm3P+CNwcbSDA9VSf/tqjBZ5OJBp48Q8fl9kHP5yZfQAAAABJRU5ErkJggg==";
  private final int c = 5;
  private final int d = 2;
  private final int e = 48;
  private final int f = 9;
  private final int g = 12;
  private final int h = 1;
  private final int i = 2;
  private RelativeLayout j;
  private View k;
  private a l;
  
  public M(Context paramContext, Activity paramActivity)
  {
    super(paramContext);
    this.a = paramActivity;
    getSettings().setJavaScriptEnabled(true);
    setWebViewClient(new b((byte)0));
  }
  
  @SuppressLint({"NewApi"})
  private View c()
  {
    PackageManager localPackageManager = this.a.getPackageManager();
    Object localObject1 = new LinearLayout.LayoutParams(-1, -1);
    LinearLayout localLinearLayout = new LinearLayout(this.a);
    localLinearLayout.setLayoutParams((ViewGroup.LayoutParams)localObject1);
    localLinearLayout.setOrientation(1);
    localObject1 = new RelativeLayout.LayoutParams(-2, -2);
    ((RelativeLayout.LayoutParams)localObject1).rightMargin = B.a(this.a, 5.0F);
    this.j = new RelativeLayout(this.a);
    this.j.setId(2);
    this.j.setLayoutParams((ViewGroup.LayoutParams)localObject1);
    this.j.setPadding(12, 9, 0, 9);
    localObject1 = new RelativeLayout.LayoutParams(-2, -2);
    ((RelativeLayout.LayoutParams)localObject1).addRule(15);
    Object localObject2 = B.a("iVBORw0KGgoAAAANSUhEUgAAAAsAAAAYCAYAAAAs7gcTAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB90FHAwJN9A+JSQAAAGaSURBVDjLdZO9ihVBFIS/6tRIV4QVwUBW8RXMNJBFRFADM8N75gEM/AmERbngE0zPEwjCFUREIxNzExEDwUB2YTHYDY26DLZ7mTs7nmTgTHV1VZ3TYlLDMABs2f5q+y+AJAPfxEz1ff9a0gPp6LdtgDtr4Jwztjcl7TUgYGB/sVhsaob1fUrplm0kqX7vAW81YT2fUtqtgKrAvyPiIkBq4IhA0kvbHmmVpJ2G0ZhV0u5YaynloOu6jdZII9alJFzrKDF1OedjPynnzDAMp4CHNdMm9iAi3ozNp4jAdq5m3ORJetJuPdbc9/1ZSX8qgnrgMCLOTGNNkp41YCOw/Xhusgk4PW1KOvwf+PkEaODVHFh10z7Y3q5SVH3eB1ZrBodhoJRyTtL+aHIG9iLiwgnmOsUVcBdwTUXAtu1PXdetyaCUclXS9/G4bf+KiEsnmOuhd8Dt1m/aI2K1tnXL5RLbj0YGWzI7s8x1+b+klK6NBgRwA/g8lUEp5YqkH5NkfkbE5dkHm3P+CNwcbSDA9VSf/tqjBZ5OJBp48Q8fl9kHP5yZfQAAAABJRU5ErkJggg==");
    localObject2 = B.a(this.a, (Bitmap)localObject2);
    ImageView localImageView1 = new ImageView(this.a);
    localImageView1.setImageBitmap((Bitmap)localObject2);
    localImageView1.setLayoutParams((ViewGroup.LayoutParams)localObject1);
    localImageView1.setId(1);
    localObject2 = this.a.getApplicationContext().getPackageName();
    localObject1 = null;
    try
    {
      localObject2 = localPackageManager.getApplicationIcon((String)localObject2);
      localObject1 = localObject2;
    }
    catch (PackageManager.NameNotFoundException localNameNotFoundException1)
    {
      for (;;)
      {
        ImageView localImageView2;
        TextView localTextView;
        localNameNotFoundException1.printStackTrace();
      }
    }
    localObject2 = new RelativeLayout.LayoutParams(B.a(this.a, 48.0F), B.a(this.a, 48.0F));
    ((RelativeLayout.LayoutParams)localObject2).addRule(15);
    ((RelativeLayout.LayoutParams)localObject2).addRule(1, 1);
    ((RelativeLayout.LayoutParams)localObject2).leftMargin = B.a(this.a, 2.0F);
    localImageView2 = new ImageView(this.a);
    localImageView2.setLayoutParams((ViewGroup.LayoutParams)localObject2);
    localImageView2.setImageDrawable((Drawable)localObject1);
    localImageView2.setOnTouchListener(new View.OnTouchListener()
    {
      public final boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
      {
        switch (paramAnonymousMotionEvent.getAction())
        {
        case 2: 
        default: 
          return false;
        case 0: 
          M.b(M.this).setBackgroundColor(-3355444);
          return false;
        }
        M.b(M.this).setBackgroundColor(0);
        return false;
      }
    });
    localImageView2.setOnClickListener(new View.OnClickListener()
    {
      public final void onClick(View paramAnonymousView)
      {
        M.this.b();
      }
    });
    localTextView = new TextView(this.a);
    localObject1 = new RelativeLayout.LayoutParams(-2, -2);
    ((RelativeLayout.LayoutParams)localObject1).addRule(15);
    ((RelativeLayout.LayoutParams)localObject1).addRule(1, 2);
    localTextView.setLayoutParams((ViewGroup.LayoutParams)localObject1);
    localTextView.setSingleLine();
    localTextView.setEllipsize(TextUtils.TruncateAt.END);
    localTextView.setTypeface(null, 1);
    localTextView.setBackgroundColor(0);
    localTextView.setTextSize(2, 18.0F);
    localTextView.setBackgroundColor(0);
    localObject1 = null;
    try
    {
      localObject2 = localPackageManager.getApplicationInfo(this.a.getPackageName(), 0);
      localObject1 = localObject2;
    }
    catch (PackageManager.NameNotFoundException localNameNotFoundException2)
    {
      for (;;)
      {
        localNameNotFoundException2.printStackTrace();
      }
    }
    localTextView.setText(((String)localPackageManager.getApplicationLabel((ApplicationInfo)localObject1)).toUpperCase().toUpperCase());
    localObject1 = new RelativeLayout.LayoutParams(-2, -2);
    localObject2 = new RelativeLayout(this.a);
    ((RelativeLayout)localObject2).setLayoutParams((ViewGroup.LayoutParams)localObject1);
    ((RelativeLayout)localObject2).setPadding(0, 0, 12, 0);
    this.j.addView(localImageView1);
    this.j.addView(localImageView2);
    ((RelativeLayout)localObject2).addView(this.j);
    ((RelativeLayout)localObject2).addView(localTextView);
    localLinearLayout.addView((View)localObject2);
    localLinearLayout.addView(this);
    return localLinearLayout;
  }
  
  public final void a()
  {
    if (this.a == null) {
      return;
    }
    final ViewGroup localViewGroup = (ViewGroup)this.a.getWindow().getDecorView();
    this.k = ((ViewGroup)localViewGroup.getChildAt(0));
    ((InputMethodManager)getContext().getSystemService("input_method")).hideSoftInputFromWindow(this.k.getWindowToken(), 0);
    this.k.postDelayed(new Runnable()
    {
      public final void run()
      {
        ViewGroup.LayoutParams localLayoutParams = new ViewGroup.LayoutParams(-1, -1);
        localViewGroup.removeAllViews();
        localViewGroup.setPadding(0, M.a(M.this, localViewGroup), 0, 0);
        localViewGroup.addView(M.a(M.this), localLayoutParams);
        localLayoutParams = M.this.getLayoutParams();
        localLayoutParams.height = -1;
        localLayoutParams.width = -1;
        M.this.setLayoutParams(localLayoutParams);
      }
    }, 500L);
    requestFocus();
  }
  
  public final void a(a paramA)
  {
    this.l = paramA;
  }
  
  protected final void b()
  {
    Object localObject = (ViewGroup)this.a.getWindow().getDecorView();
    ((ViewGroup)localObject).removeAllViews();
    ((ViewGroup)localObject).setPadding(0, 0, 0, 0);
    ((ViewGroup)localObject).addView(this.k, -1, -1);
    if (this.l != null) {
      localObject = this.l;
    }
  }
  
  public final boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if (paramInt == 4)
    {
      if (canGoBack())
      {
        goBack();
        return true;
      }
      b();
      return true;
    }
    return super.onKeyDown(paramInt, paramKeyEvent);
  }
  
  public static abstract interface a {}
  
  private final class b
    extends WebViewClient
  {
    private b() {}
    
    public final boolean shouldOverrideUrlLoading(WebView paramWebView, String paramString)
    {
      return false;
    }
  }
}
