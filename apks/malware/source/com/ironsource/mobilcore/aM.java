package com.ironsource.mobilcore;

import android.content.Context;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.widget.HorizontalScrollView;
import android.widget.LinearLayout;

public final class aM
  extends HorizontalScrollView
  implements View.OnTouchListener
{
  private int a;
  private float b = -1.0F;
  private boolean c;
  private int d;
  private a e;
  
  public aM(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, null);
    this.d = paramInt;
    setOnTouchListener(this);
  }
  
  private int b()
  {
    return ((LinearLayout)getChildAt(0)).getChildCount();
  }
  
  private void c()
  {
    int i = b();
    if (i == 0) {
      return;
    }
    i = Math.max(0, Math.min(i - 1, this.a));
    this.a = i;
    View localView = ((LinearLayout)getChildAt(0)).getChildAt(i);
    i = localView.getLeft();
    int j = localView.getRight();
    super.smoothScrollTo(i - (getWidth() - getPaddingLeft() - getPaddingRight() - (j - i)) / 2, 0);
  }
  
  public final int a()
  {
    return this.a;
  }
  
  public final void a(int paramInt)
  {
    this.a = paramInt;
    c();
  }
  
  public final void a(a paramA)
  {
    this.e = paramA;
  }
  
  public final boolean onTouch(View paramView, MotionEvent paramMotionEvent)
  {
    int i = (int)paramMotionEvent.getRawX();
    if (this.b == -1.0F) {
      this.c = true;
    }
    switch (paramMotionEvent.getAction())
    {
    default: 
    case 2: 
      do
      {
        return false;
      } while (!this.c);
      this.b = i;
      this.c = false;
      return false;
    }
    this.c = true;
    int j = this.d / 10;
    if (this.b - i > j) {
      if (this.a < b() - 1)
      {
        this.a += 1;
        if (this.e != null) {
          this.e.a(this.a);
        }
      }
    }
    for (;;)
    {
      c();
      return true;
      if ((i - this.b > j) && (this.a > 0))
      {
        this.a -= 1;
        if (this.e != null) {
          this.e.a(this.a);
        }
      }
    }
  }
  
  public static abstract interface a
  {
    public abstract void a(int paramInt);
  }
}
