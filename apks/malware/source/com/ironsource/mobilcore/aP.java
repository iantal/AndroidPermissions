package com.ironsource.mobilcore;

import android.app.Activity;
import android.graphics.Rect;
import android.os.AsyncTask;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.webkit.DownloadListener;
import android.webkit.WebBackForwardList;
import android.webkit.WebHistoryItem;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.LinearLayout;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public final class aP
{
  private Activity a;
  private aW b;
  private JSONObject c;
  private String d;
  private String e;
  private CallbackResponse f;
  private a g;
  private LinearLayout h;
  private boolean i;
  
  public aP(Activity paramActivity, aW paramAW, String paramString1, String paramString2, CallbackResponse paramCallbackResponse, a paramA)
  {
    c("ShowOfferwallSession constructor", "called");
    this.a = paramActivity;
    this.b = paramAW;
    this.d = paramString1;
    this.e = paramString2;
    this.f = paramCallbackResponse;
    this.g = paramA;
    paramActivity = new WebViewClient()
    {
      public final void onLoadResource(WebView paramAnonymousWebView, String paramAnonymousString)
      {
        super.onLoadResource(paramAnonymousWebView, paramAnonymousString);
        aP.a(aP.this, "onLoadResource", "url:" + paramAnonymousString);
      }
      
      public final void onPageFinished(WebView paramAnonymousWebView, String paramAnonymousString)
      {
        aP.a(aP.this, "ShowOfferwallSession , onPageFinished", "url:" + paramAnonymousString + " reloaded? " + aP.a(aP.this));
        if (aP.a(aP.this))
        {
          aP.b(aP.this).loadUrl("javascript:commons.resetOpacity();");
          aP.a(aP.this, false);
        }
        super.onPageFinished(paramAnonymousWebView, paramAnonymousString);
      }
      
      public final void onReceivedError(WebView paramAnonymousWebView, int paramAnonymousInt, String paramAnonymousString1, String paramAnonymousString2)
      {
        aP.a(aP.this, "ShowOfferwallSession , onReceivedError", "errorCode:" + paramAnonymousInt + " , description:" + paramAnonymousString1 + " , failingUrl:" + paramAnonymousString2);
        aP.this.a(CallbackResponse.TYPE.OFFERWALL_SHOW_ERROR);
      }
      
      public final boolean shouldOverrideUrlLoading(WebView paramAnonymousWebView, String paramAnonymousString)
      {
        aP.a(aP.this, "ShowOfferwallSession , shouldOverrideUrlLoading", "url:" + paramAnonymousString);
        boolean bool = aP.this.a(paramAnonymousString);
        paramAnonymousWebView = paramAnonymousWebView.copyBackForwardList();
        aP.a(aP.this, "ShouldOverrideUrl", "back list size is " + paramAnonymousWebView.getSize());
        if ((paramAnonymousWebView.getCurrentIndex() != 0) && (paramAnonymousWebView.getSize() > 1) && (bool))
        {
          paramAnonymousWebView = paramAnonymousWebView.getItemAtIndex(0);
          aP.a(aP.this, "ShouldOverrideUrl", "Url at 0: " + paramAnonymousWebView.getUrl());
          aP.b(aP.this).loadUrl(paramAnonymousWebView.getUrl());
          aP.a(aP.this, true);
        }
        return bool;
      }
    };
    this.i = false;
    this.b.setWebViewClient(paramActivity);
    this.b.setDownloadListener(new DownloadListener()
    {
      public final void onDownloadStart(String paramAnonymousString1, String paramAnonymousString2, String paramAnonymousString3, String paramAnonymousString4, long paramAnonymousLong)
      {
        n.a localA = aP.c(aP.this);
        aP.a(aP.this, "ShowOfferwallSession , onDownloadStart", "url:" + paramAnonymousString1 + " , userAgent:" + paramAnonymousString2 + " , contentDisposition:" + paramAnonymousString3 + " , mimetype:" + paramAnonymousString4 + " , contentLength:" + paramAnonymousLong);
        aP.a(aP.this, "ShowOfferwallSession , onDownloadStart", "offerType:" + localA);
        j.b();
        if (localA == n.a.b) {
          aN.b(paramAnonymousString1, aP.d(aP.this), aP.e(aP.this), aP.f(aP.this));
        }
      }
    });
    this.h = new LinearLayout(this.a);
  }
  
  private ViewGroup c()
  {
    return (ViewGroup)this.a.getWindow().getDecorView();
  }
  
  private void c(String paramString1, String paramString2)
  {
    A.a(getClass().getSimpleName() + " , " + paramString1 + " | " + paramString2, 55);
  }
  
  private n.a d()
  {
    try
    {
      n.a localA = n.a.a(this.c.optString("type"));
      return localA;
    }
    catch (Exception localException) {}
    return null;
  }
  
  public final void a()
  {
    c("ShowOfferwallSession , clearSession", "called");
    aE.a(this.b);
    this.a = null;
    this.b.setDownloadListener(null);
    this.h = null;
    this.g = null;
  }
  
  public final void a(CallbackResponse.TYPE paramTYPE)
  {
    c("ShowOfferwallSession , hide", "called");
    if (paramTYPE == CallbackResponse.TYPE.OFFERWALL_SHOW_ERROR)
    {
      j.b();
      this.b.d();
    }
    for (;;)
    {
      this.g.j();
      this.b.a(null);
      this.h.removeView(this.b);
      c().removeView(this.h);
      if (this.f != null) {
        this.f.onConfirmation(paramTYPE);
      }
      return;
      this.b.c();
    }
  }
  
  public final void a(aJ.a paramA, String paramString)
  {
    try
    {
      paramString = new JSONArray(paramString);
      aE.a(MobileCore.c(), this.e, this.d, paramA, null, aN.a(paramString));
      return;
    }
    catch (JSONException paramA)
    {
      paramA.printStackTrace();
    }
  }
  
  public final void a(String paramString1, String paramString2)
  {
    try
    {
      JSONObject localJSONObject = new JSONObject();
      localJSONObject.put("Feed", paramString2);
      localJSONObject.put("TransID", paramString1);
      aE.a(MobileCore.c(), this.e, this.d, aJ.a.a, localJSONObject.toString(), null);
      return;
    }
    catch (JSONException paramString1)
    {
      paramString1.printStackTrace();
    }
  }
  
  public final void a(JSONObject paramJSONObject)
  {
    c("ShowOfferwallSession , loadOffer", "offerJson:" + paramJSONObject);
    this.c = paramJSONObject;
    if ((paramJSONObject == null) || (d() == null))
    {
      a(CallbackResponse.TYPE.OFFERWALL_SHOW_ERROR);
      return;
    }
    aN.a(this.a, this.b, paramJSONObject, this.d, this.e);
  }
  
  public final boolean a(String paramString)
  {
    n.a localA = d();
    c("ShowOfferwallSession , processUrl", "offerType:" + localA + " , url:" + paramString);
    if (localA == null) {}
    do
    {
      return false;
      switch (5.a[localA.ordinal()])
      {
      default: 
        return false;
      case 1: 
        paramString = aE.f(paramString);
      }
    } while (!aN.a(paramString));
    aN.a(paramString, this.d, this.e, this.c);
    j.b();
    return true;
    j.b();
    aE.a(this.a, paramString, true);
    return true;
  }
  
  public final void b()
  {
    c("ShowOfferwallSession , show", "called");
    this.g.i();
    ViewGroup localViewGroup = c();
    ViewGroup.LayoutParams localLayoutParams1 = new ViewGroup.LayoutParams(-1, -1);
    ViewGroup.LayoutParams localLayoutParams2 = new ViewGroup.LayoutParams(-1, -1);
    LinearLayout localLinearLayout = this.h;
    Rect localRect = new Rect();
    localViewGroup.getWindowVisibleDisplayFrame(localRect);
    localLinearLayout.setPadding(0, localRect.top, 0, 0);
    this.h.addView(this.b, localLayoutParams2);
    localViewGroup.addView(this.h, localLayoutParams1);
    this.b.requestFocus();
    this.b.a(new aW.b()
    {
      public final boolean a()
      {
        if (aP.b(aP.this).canGoBack())
        {
          aP.a(aP.this, "setOnBackListener", "canGoBack");
          aP.b(aP.this).goBack();
          aP.a(aP.this, true);
          return true;
        }
        aP.a(aP.this, "setOnBackListener", "hide");
        aP.b(aP.this).loadUrl("javascript:commons.onBack();");
        aP.this.a(CallbackResponse.TYPE.OFFERWALL_BACK);
        return true;
      }
      
      public final void b()
      {
        aP.a(aP.this, "onDetach");
        aP.this.a(CallbackResponse.TYPE.OFFERWALL_QUIT);
      }
    });
    this.b.loadUrl("javascript:commons.onShow();");
  }
  
  public final void b(String paramString1, String paramString2)
  {
    aE.a(MobileCore.c(), this.e, this.d, paramString1, paramString2);
  }
  
  public static abstract interface a
  {
    public abstract void i();
    
    public abstract void j();
  }
}
