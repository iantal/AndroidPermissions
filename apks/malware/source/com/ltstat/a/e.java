package com.ltstat.a;

import android.util.Base64;
import java.security.Key;
import java.security.SecureRandom;
import java.security.spec.KeySpec;
import javax.crypto.Cipher;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;

public final class e
{
  private static final byte[] a = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, 62, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, 63, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 };
  
  public static String a(String paramString1, String paramString2)
  {
    if (paramString2 == null) {
      return null;
    }
    paramString2 = Base64.decode(paramString2.getBytes(), 0);
    Object localObject = paramString1.getBytes();
    paramString1 = new SecureRandom();
    localObject = new DESKeySpec((byte[])localObject);
    localObject = SecretKeyFactory.getInstance("DES").generateSecret((KeySpec)localObject);
    Cipher localCipher = Cipher.getInstance("DES");
    localCipher.init(2, (Key)localObject, paramString1);
    return new String(localCipher.doFinal(paramString2));
  }
  
  public static boolean a(byte[] paramArrayOfByte)
  {
    int i = 0;
    while (i < paramArrayOfByte.length)
    {
      if ((paramArrayOfByte[i] != 61) && ((paramArrayOfByte[i] < 0) || (paramArrayOfByte[i] >= a.length) || (a[paramArrayOfByte[i]] == -1)) && (paramArrayOfByte[i] != 32) && (paramArrayOfByte[i] != 10) && (paramArrayOfByte[i] != 13) && (paramArrayOfByte[i] != 9)) {
        return false;
      }
      i += 1;
    }
    return true;
  }
}
