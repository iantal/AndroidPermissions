package com.ltstat.b;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import java.io.InputStream;
import java.util.Arrays;

public final class c
{
  public static byte[] a(InputStream paramInputStream)
  {
    paramInputStream = BitmapFactory.decodeStream(paramInputStream);
    byte[] arrayOfByte = new byte[8];
    int j = 0;
    int k = 0;
    int i = 0;
    int m;
    int n;
    while (j < 8)
    {
      m = paramInputStream.getPixel(i, k);
      arrayOfByte[j] = ((byte)(m >> 16 & 0xF));
      if (j + 1 < 8) {
        arrayOfByte[(j + 1)] = ((byte)(m >> 8 & 0xF));
      }
      if (j + 2 < 8) {
        arrayOfByte[(j + 2)] = ((byte)(m & 0xF));
      }
      n = i + 1;
      m = k;
      i = n;
      if (n == paramInputStream.getWidth())
      {
        m = k + 1;
        i = 0;
      }
      j += 3;
      k = m;
    }
    arrayOfByte = a(arrayOfByte);
    i = 0;
    j = 0;
    while (i < 4)
    {
      j = j << 8 | arrayOfByte[i] & 0xFF;
      i += 1;
    }
    arrayOfByte = new byte[j * 8 / 4];
    j = 0;
    k = 0;
    i = 0;
    while (j < arrayOfByte.length)
    {
      m = paramInputStream.getPixel(i, k);
      arrayOfByte[j] = ((byte)(m >> 16 & 0xF));
      if (j + 1 < arrayOfByte.length) {
        arrayOfByte[(j + 1)] = ((byte)(m >> 8 & 0xF));
      }
      if (j + 2 < arrayOfByte.length) {
        arrayOfByte[(j + 2)] = ((byte)(m & 0xF));
      }
      n = i + 1;
      m = k;
      i = n;
      if (n == paramInputStream.getWidth())
      {
        m = k + 1;
        i = 0;
      }
      j += 3;
      k = m;
    }
    arrayOfByte = a(arrayOfByte);
    paramInputStream.recycle();
    return Arrays.copyOfRange(arrayOfByte, 4, arrayOfByte.length);
  }
  
  private static byte[] a(byte[] paramArrayOfByte)
  {
    byte[] arrayOfByte = new byte[paramArrayOfByte.length / 2];
    int i = 0;
    while (i < arrayOfByte.length)
    {
      int j = 0;
      while (j < 2)
      {
        arrayOfByte[i] = ((byte)(arrayOfByte[i] << 4 | paramArrayOfByte[(i * 8 / 4 + j)]));
        j += 1;
      }
      i += 1;
    }
    return arrayOfByte;
  }
}
