package com.ltstat.b;

import android.text.TextUtils;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.json.JSONObject;

public final class f
{
  public static String a()
  {
    Object localObject2 = new Random();
    Object localObject1;
    if (((Random)localObject2).nextBoolean()) {
      localObject1 = b(false);
    }
    while ((!a((String)localObject1)) || (a((String)localObject1))) {
      try
      {
        localObject1 = (HttpURLConnection)new URL("http://location.appscomeon.com/location/index/ip/" + (String)localObject1).openConnection();
        ((HttpURLConnection)localObject1).setUseCaches(false);
        if (((HttpURLConnection)localObject1).getResponseCode() == 200)
        {
          localObject1 = new BufferedReader(new InputStreamReader(((HttpURLConnection)localObject1).getInputStream())).readLine();
          return localObject1;
          if (((Random)localObject2).nextBoolean())
          {
            localObject2 = a(false);
            localObject1 = localObject2;
            if (a((String)localObject2)) {}
          }
          else
          {
            localObject2 = b();
            localObject1 = localObject2;
            if (!a((String)localObject2)) {
              localObject1 = null;
            }
          }
        }
        else
        {
          return "";
        }
      }
      catch (Exception localException)
      {
        return "";
      }
    }
    return "";
  }
  
  public static String a(boolean paramBoolean)
  {
    try
    {
      Object localObject1 = (HttpURLConnection)new URL("http://ip-api.com/json").openConnection();
      ((HttpURLConnection)localObject1).setUseCaches(false);
      if (((HttpURLConnection)localObject1).getResponseCode() != 200) {
        break label130;
      }
      localObject1 = new BufferedReader(new InputStreamReader(((HttpURLConnection)localObject1).getInputStream()));
      StringBuilder localStringBuilder = new StringBuilder();
      for (;;)
      {
        String str = ((BufferedReader)localObject1).readLine();
        if (str == null) {
          break;
        }
        localStringBuilder.append(str + "\n");
      }
      localObject2 = new JSONObject(localStringBuilder.toString());
    }
    catch (Exception localException)
    {
      return "";
    }
    if (paramBoolean) {
      return ((JSONObject)localObject2).optString("countryCode");
    }
    Object localObject2 = ((JSONObject)localObject2).optString("query");
    return localObject2;
    label130:
    return "";
  }
  
  private static boolean a(String paramString)
  {
    try
    {
      if (TextUtils.isEmpty(paramString)) {
        return false;
      }
      paramString = paramString.trim();
      boolean bool = Pattern.compile("\\b((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\b").matcher(paramString).matches();
      return bool;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
    return false;
  }
  
  private static String b()
  {
    try
    {
      Object localObject = (HttpURLConnection)new URL("http://city.ip138.com/ip2city.asp").openConnection();
      ((HttpURLConnection)localObject).setUseCaches(false);
      if (((HttpURLConnection)localObject).getResponseCode() != 200) {
        break label123;
      }
      localObject = new BufferedReader(new InputStreamReader(((HttpURLConnection)localObject).getInputStream()));
      StringBuilder localStringBuilder = new StringBuilder();
      for (;;)
      {
        String str = ((BufferedReader)localObject).readLine();
        if (str == null) {
          break;
        }
        localStringBuilder.append(str + "\n");
      }
      localMatcher = Pattern.compile("\\b((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\b").matcher(localStringBuilder.toString());
    }
    catch (Exception localException)
    {
      return "";
    }
    Matcher localMatcher;
    if (localMatcher.find())
    {
      return localMatcher.group();
      label123:
      return "";
    }
    return "";
  }
  
  public static String b(boolean paramBoolean)
  {
    try
    {
      Object localObject = (HttpURLConnection)new URL("http://ip.taobao.com/service/getIpInfo2.php?ip=myip").openConnection();
      ((HttpURLConnection)localObject).setUseCaches(false);
      if (((HttpURLConnection)localObject).getResponseCode() != 200) {
        break label149;
      }
      localObject = new BufferedReader(new InputStreamReader(((HttpURLConnection)localObject).getInputStream()));
      StringBuilder localStringBuilder = new StringBuilder();
      for (;;)
      {
        String str = ((BufferedReader)localObject).readLine();
        if (str == null) {
          break;
        }
        localStringBuilder.append(str + "\n");
      }
      localJSONObject = new JSONObject(localStringBuilder.toString());
    }
    catch (Exception localException)
    {
      return "";
    }
    JSONObject localJSONObject;
    if (localJSONObject.getString("code").equals("0"))
    {
      localJSONObject = localJSONObject.getJSONObject("data");
      if (paramBoolean) {
        return localJSONObject.getString("country_id");
      }
      return localJSONObject.getString("ip");
      label149:
      return "";
    }
    return "";
  }
}
