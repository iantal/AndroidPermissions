package com.ltad.util;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.res.AssetManager;
import android.util.Log;
import com.ltad.a.i;
import java.io.InputStream;
import java.lang.ref.SoftReference;
import java.util.HashMap;
import java.util.Properties;

public class PropertyUtil
{
  private static HashMap mPropertyMap;
  
  public PropertyUtil() {}
  
  private static String getProperty(Context paramContext, String paramString1, String paramString2, String paramString3)
  {
    for (;;)
    {
      try
      {
        if (mPropertyMap == null) {
          mPropertyMap = new HashMap();
        }
        SoftReference localSoftReference = (SoftReference)mPropertyMap.get(paramString3);
        Object localObject;
        if (localSoftReference != null)
        {
          localObject = localSoftReference.get();
          if (localObject != null) {}
        }
        else
        {
          try
          {
            localObject = new Properties();
            paramContext = paramContext.getAssets().open(paramString3);
            ((Properties)localObject).load(paramContext);
            paramContext.close();
            paramContext = new SoftReference(localObject);
            Log.e("Joy_PropertiesUtil", "Exception:" + paramString3.getMessage());
          }
          catch (Exception paramString3)
          {
            try
            {
              mPropertyMap.put(paramString3, paramContext);
              paramContext = ((Properties)paramContext.get()).getProperty(paramString1, paramString2).trim();
              return paramContext;
            }
            catch (Exception paramString3)
            {
              continue;
            }
            paramString3 = paramString3;
            paramContext = localSoftReference;
          }
          continue;
        }
        paramContext = localSoftReference;
      }
      finally {}
    }
  }
  
  public static String getPropertyDefault(Context paramContext, String paramString1, String paramString2)
  {
    String str = paramContext.getSharedPreferences(ConstUtil.PREFE_NAME, 0).getString(paramString1, "");
    if (!"".equals(str)) {
      return str;
    }
    return getProperty(paramContext, paramString1, paramString2, i.a(paramContext, i.a(65537)));
  }
  
  public static String getPropertyFromAssets(Context paramContext, String paramString1, String paramString2, String paramString3)
  {
    for (;;)
    {
      try
      {
        if (mPropertyMap == null) {
          mPropertyMap = new HashMap();
        }
        SoftReference localSoftReference = (SoftReference)mPropertyMap.get(paramString3);
        Object localObject;
        if (localSoftReference != null)
        {
          localObject = localSoftReference.get();
          if (localObject != null) {}
        }
        else
        {
          try
          {
            localObject = new Properties();
            paramContext = paramContext.getAssets().open(paramString3);
            ((Properties)localObject).load(paramContext);
            paramContext.close();
            paramContext = new SoftReference(localObject);
            Log.e("Joy_PropertiesUtil", "Exception:" + paramString3.getMessage());
          }
          catch (Exception paramString3)
          {
            try
            {
              mPropertyMap.put(paramString3, paramContext);
              paramContext = ((Properties)paramContext.get()).getProperty(paramString1, paramString2).trim();
              return paramContext;
            }
            catch (Exception paramString3)
            {
              continue;
            }
            paramString3 = paramString3;
            paramContext = localSoftReference;
          }
          continue;
        }
        paramContext = localSoftReference;
      }
      finally {}
    }
  }
}
