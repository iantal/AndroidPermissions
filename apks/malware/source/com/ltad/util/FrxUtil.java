package com.ltad.util;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.res.Resources;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.NetworkInfo.State;
import android.os.Build.VERSION;
import android.telephony.TelephonyManager;
import android.util.DisplayMetrics;
import com.ltad.a.i;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Locale;

public class FrxUtil
{
  public FrxUtil() {}
  
  public static String getSystemInfo(Context paramContext)
  {
    Object localObject1 = new StringBuffer();
    Object localObject2 = (TelephonyManager)paramContext.getSystemService("phone");
    Object localObject3 = ((TelephonyManager)localObject2).getDeviceId();
    if ((localObject3 != null) && (!"".equals(localObject3))) {
      ((StringBuffer)localObject1).append(i.a(720918) + i.a(720921) + i.a(720920)).append((String)localObject3);
    }
    localObject3 = ((TelephonyManager)localObject2).getSubscriberId();
    if ((localObject3 != null) && (!"".equals(localObject3))) {
      ((StringBuffer)localObject1).append(i.a(720918) + i.a(720922) + i.a(720920)).append((String)localObject3);
    }
    localObject3 = UUIDRetriever.get(paramContext);
    if ((localObject3 != null) && (!"".equals(localObject3))) {
      ((StringBuffer)localObject1).append(i.a(720918) + i.a(720923) + i.a(720920)).append((String)localObject3);
    }
    if ((localObject2 != null) && (((TelephonyManager)localObject2).getSimState() == 5)) {
      ((StringBuffer)localObject1).append(i.a(720918) + i.a(720924) + i.a(720920)).append(((TelephonyManager)localObject2).getSimOperatorName());
    }
    localObject2 = Locale.getDefault().getCountry();
    localObject3 = Locale.getDefault().getLanguage();
    if ((localObject2 != null) && (!"".equals(localObject2))) {
      ((StringBuffer)localObject1).append(i.a(720918) + i.a(720925) + i.a(720920)).append((String)localObject2);
    }
    if ((localObject3 != null) && (!"".equals(localObject3))) {
      ((StringBuffer)localObject1).append(i.a(720918) + i.a(720926) + i.a(720920)).append((String)localObject3);
    }
    localObject2 = paramContext.getPackageName();
    if ((localObject2 != null) && (!"".equals(localObject2))) {
      ((StringBuffer)localObject1).append(i.a(720918) + i.a(720927) + i.a(720920)).append((String)localObject2);
    }
    localObject3 = paramContext.getPackageManager();
    try
    {
      localObject2 = ((PackageManager)localObject3).getPackageInfo((String)localObject2, 0);
      i = ((PackageInfo)localObject2).versionCode;
      localObject2 = ((PackageInfo)localObject2).versionName;
      if ((localObject2 != null) && (!"".equals(localObject2))) {
        ((StringBuffer)localObject1).append(i.a(720918) + i.a(720928) + i.a(720920)).append((String)localObject2);
      }
      if (i != -1) {
        ((StringBuffer)localObject1).append(i.a(720918) + i.a(720929) + i.a(720920)).append(i);
      }
    }
    catch (Exception localException)
    {
      int i;
      for (;;) {}
    }
    i = Build.VERSION.SDK_INT;
    ((StringBuffer)localObject1).append(i.a(720918) + i.a(720930) + i.a(720920)).append(i);
    paramContext = paramContext.getResources().getDisplayMetrics();
    paramContext = paramContext.widthPixels + i.a(720919) + paramContext.heightPixels;
    if ((paramContext != null) && (!"".equals(paramContext))) {
      ((StringBuffer)localObject1).append(i.a(720918) + i.a(720931) + i.a(720920)).append(paramContext);
    }
    localObject1 = ((StringBuffer)localObject1).toString();
    paramContext = (Context)localObject1;
    if (((String)localObject1).startsWith(i.a(720918))) {
      paramContext = ((String)localObject1).substring(1);
    }
    return paramContext;
  }
  
  public static boolean isNetworkAvaliable(Context paramContext)
  {
    paramContext = (ConnectivityManager)paramContext.getSystemService("connectivity");
    if (paramContext != null)
    {
      paramContext = paramContext.getActiveNetworkInfo();
      if ((paramContext != null) && (paramContext.isConnected()) && (NetworkInfo.State.CONNECTED == paramContext.getState())) {
        return true;
      }
    }
    return false;
  }
  
  public static String sendGet(String paramString1, String paramString2, String paramString3)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    Object localObject = paramString1;
    if (paramString2 != null)
    {
      localObject = paramString1;
      if (!"".equals(paramString2)) {
        localObject = paramString1 + i.a(720915) + paramString2;
      }
    }
    for (;;)
    {
      try
      {
        paramString1 = (HttpURLConnection)new URL((String)localObject).openConnection();
        paramString1.setRequestMethod(i.a(720916));
        paramString1.setConnectTimeout(3000);
        paramString1.setReadTimeout(30000);
        paramString1.connect();
        if (paramString1.getResponseCode() == 200)
        {
          paramString2 = paramString1.getInputStream();
          paramString3 = new InputStreamReader(paramString2, paramString3);
          localObject = new BufferedReader(paramString3);
          str = ((BufferedReader)localObject).readLine();
          if (str != null) {
            continue;
          }
          ((BufferedReader)localObject).close();
          paramString3.close();
          paramString2.close();
          paramString1.disconnect();
        }
      }
      catch (Exception paramString1)
      {
        String str;
        paramString1.printStackTrace();
        continue;
      }
      return localStringBuffer.toString().trim();
      localStringBuffer.append(str).append(System.getProperty("line.separator"));
    }
  }
  
  public static String sendPost(String paramString1, String paramString2, String paramString3)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    for (;;)
    {
      try
      {
        paramString1 = (HttpURLConnection)new URL(paramString1).openConnection();
        paramString1.setRequestMethod(i.a(720917));
        paramString1.setDoOutput(true);
        paramString1.setDoInput(true);
        paramString1.setConnectTimeout(3000);
        paramString1.setReadTimeout(30000);
        paramString1.connect();
        Object localObject;
        if ((paramString2 != null) && (!"".equals(paramString2)))
        {
          localObject = new OutputStreamWriter(new BufferedOutputStream(paramString1.getOutputStream()));
          ((OutputStreamWriter)localObject).write(paramString2);
          ((OutputStreamWriter)localObject).flush();
          ((OutputStreamWriter)localObject).close();
        }
        if (paramString1.getResponseCode() == 200)
        {
          paramString2 = paramString1.getInputStream();
          paramString3 = new InputStreamReader(paramString2, paramString3);
          localObject = new BufferedReader(paramString3);
          str = ((BufferedReader)localObject).readLine();
          if (str != null) {
            continue;
          }
          ((BufferedReader)localObject).close();
          paramString3.close();
          paramString2.close();
          paramString1.disconnect();
        }
      }
      catch (Exception paramString1)
      {
        String str;
        paramString1.printStackTrace();
        continue;
      }
      return localStringBuffer.toString().trim();
      localStringBuffer.append(str).append(System.getProperty("line.separator"));
    }
  }
}
