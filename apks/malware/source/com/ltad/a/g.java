package com.ltad.a;

import android.os.Environment;
import android.text.TextUtils;
import java.io.File;
import java.util.HashMap;
import java.util.Properties;

public class g
{
  private static String a = "default";
  
  public static String a()
  {
    Object localObject = new StringBuilder();
    int i = Integer.parseInt(a("b_show", "0"));
    if (i > 0) {
      ((StringBuilder)localObject).append("b_show=" + i).append("&");
    }
    i = Integer.parseInt(a("b_opened", "0"));
    if (i > 0) {
      ((StringBuilder)localObject).append("b_opened=" + i).append("&");
    }
    i = Integer.parseInt(a("b_clicked", "0"));
    if (i > 0) {
      ((StringBuilder)localObject).append("b_clicked=" + i).append("&");
    }
    String str = a("i_show", "");
    if (!TextUtils.isEmpty(str)) {
      ((StringBuilder)localObject).append("i_show=" + str).append("&");
    }
    str = a("i_opened", "");
    if (!TextUtils.isEmpty(str)) {
      ((StringBuilder)localObject).append("i_opened=" + str).append("&");
    }
    str = a("i_clicked", "");
    if (!TextUtils.isEmpty(str)) {
      ((StringBuilder)localObject).append("i_clicked=" + str).append("&");
    }
    str = a("i_completed", "");
    if (!TextUtils.isEmpty(str)) {
      ((StringBuilder)localObject).append("i_completed=" + str).append("&");
    }
    str = a("i_skipped", "");
    if (!TextUtils.isEmpty(str)) {
      ((StringBuilder)localObject).append("i_skipped=" + str).append("&");
    }
    str = b("a_b", "_a_b");
    if (!TextUtils.isEmpty(str)) {
      ((StringBuilder)localObject).append("a_b=" + str).append("&");
    }
    str = b("a_i", "_a_i");
    if (!TextUtils.isEmpty(str)) {
      ((StringBuilder)localObject).append("a_i=" + str).append("&");
    }
    str = b("c_i", "_c_i");
    if (!TextUtils.isEmpty(str)) {
      ((StringBuilder)localObject).append("c_i=" + str).append("&");
    }
    str = b("c_s", "_c_s");
    if (!TextUtils.isEmpty(str)) {
      ((StringBuilder)localObject).append("c_s=" + str).append("&");
    }
    str = b("i_b", "_i_b");
    if (!TextUtils.isEmpty(str)) {
      ((StringBuilder)localObject).append("i_b=" + str).append("&");
    }
    str = b("i_i", "_i_i");
    if (!TextUtils.isEmpty(str)) {
      ((StringBuilder)localObject).append("i_i=" + str).append("&");
    }
    str = ((StringBuilder)localObject).toString();
    localObject = str;
    if (!TextUtils.isEmpty(str)) {
      localObject = str.substring(0, str.lastIndexOf("&"));
    }
    return localObject;
  }
  
  public static String a(String paramString1, String paramString2)
  {
    try
    {
      Properties localProperties = f();
      String str = paramString2;
      if (localProperties != null)
      {
        str = paramString2;
        if (!localProperties.isEmpty()) {
          str = localProperties.getProperty(paramString1, paramString2).trim();
        }
      }
      return str;
    }
    finally {}
  }
  
  private static String a(String paramString1, String paramString2, String paramString3)
  {
    try
    {
      String str = a(paramString1, "");
      paramString1 = paramString3;
      if (!TextUtils.isEmpty(str))
      {
        paramString1 = paramString3;
        if (!str.trim().equals(paramString3))
        {
          a(paramString2, paramString3);
          paramString1 = str;
        }
      }
      return paramString1;
    }
    finally {}
  }
  
  public static void a(String paramString)
  {
    a = paramString;
  }
  
  public static boolean a(Object paramObject1, Object paramObject2)
  {
    try
    {
      Properties localProperties2 = f();
      Properties localProperties1 = localProperties2;
      if (localProperties2 == null) {
        localProperties1 = new Properties();
      }
      localProperties1.put(paramObject1, paramObject2);
      boolean bool = a(localProperties1);
      return bool;
    }
    finally {}
  }
  
  public static boolean a(HashMap paramHashMap)
  {
    try
    {
      Properties localProperties2 = f();
      Properties localProperties1 = localProperties2;
      if (localProperties2 == null) {
        localProperties1 = new Properties();
      }
      if ((paramHashMap != null) && (!paramHashMap.isEmpty())) {
        localProperties1.putAll(paramHashMap);
      }
      boolean bool = a(localProperties1);
      return bool;
    }
    finally {}
  }
  
  /* Error */
  private static boolean a(Properties paramProperties)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore_1
    //   2: ldc 2
    //   4: monitorenter
    //   5: invokestatic 180	com/ltad/a/g:g	()Ljava/io/File;
    //   8: astore_2
    //   9: aload_2
    //   10: ifnonnull +8 -> 18
    //   13: ldc 2
    //   15: monitorexit
    //   16: iload_1
    //   17: ireturn
    //   18: new 182	java/io/FileOutputStream
    //   21: dup
    //   22: aload_2
    //   23: invokevirtual 187	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   26: invokespecial 188	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   29: astore_2
    //   30: aload_0
    //   31: aload_2
    //   32: ldc 61
    //   34: invokevirtual 192	java/util/Properties:store	(Ljava/io/OutputStream;Ljava/lang/String;)V
    //   37: aload_2
    //   38: invokevirtual 197	java/io/OutputStream:close	()V
    //   41: iconst_1
    //   42: istore_1
    //   43: goto -30 -> 13
    //   46: astore_0
    //   47: aload_0
    //   48: invokevirtual 200	java/io/FileNotFoundException:printStackTrace	()V
    //   51: goto -38 -> 13
    //   54: astore_0
    //   55: ldc 2
    //   57: monitorexit
    //   58: aload_0
    //   59: athrow
    //   60: astore_0
    //   61: aload_0
    //   62: invokevirtual 201	java/io/IOException:printStackTrace	()V
    //   65: goto -52 -> 13
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	68	0	paramProperties	Properties
    //   1	42	1	bool	boolean
    //   8	30	2	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   18	41	46	java/io/FileNotFoundException
    //   5	9	54	finally
    //   18	41	54	finally
    //   47	51	54	finally
    //   61	65	54	finally
    //   18	41	60	java/io/IOException
  }
  
  private static String b(String paramString1, String paramString2)
  {
    paramString1 = a(paramString1, "");
    paramString2 = a(paramString2, "");
    if (!TextUtils.isEmpty(paramString2)) {
      return paramString2;
    }
    if (!TextUtils.isEmpty(paramString1)) {
      return paramString1;
    }
    return "";
  }
  
  public static boolean b()
  {
    return m("b_show");
  }
  
  public static boolean b(String paramString)
  {
    return c("i_show", paramString);
  }
  
  public static boolean c()
  {
    return m("b_opened");
  }
  
  public static boolean c(String paramString)
  {
    return c("i_opened", paramString);
  }
  
  private static boolean c(String paramString1, String paramString2)
  {
    boolean bool2 = false;
    String str2 = a(paramString1, "");
    boolean bool1;
    if (str2.trim().equals("")) {
      bool1 = a(paramString1, "" + paramString2 + ":" + 1);
    }
    String[] arrayOfString;
    do
    {
      do
      {
        return bool1;
        arrayOfString = str2.split(",");
        bool1 = bool2;
      } while (arrayOfString == null);
      bool1 = bool2;
    } while (arrayOfString.length <= 0);
    int i = 0;
    for (;;)
    {
      String str1;
      if (i >= arrayOfString.length)
      {
        i = 0;
        str1 = "";
      }
      for (;;)
      {
        if (!str1.trim().equals("")) {
          break label283;
        }
        paramString2 = str1 + paramString2 + ":" + (i + 1);
        return a(paramString1, str2 + "," + paramString2);
        if (!arrayOfString[i].substring(0, arrayOfString[i].lastIndexOf(":")).trim().equals(paramString2)) {
          break;
        }
        int j = Integer.parseInt(arrayOfString[i].substring(arrayOfString[i].lastIndexOf(":") + 1, arrayOfString[i].length()));
        str1 = "" + paramString2 + ":" + (j + 1);
        arrayOfString[i] = str1;
        i = j;
      }
      i += 1;
    }
    label283:
    paramString2 = "";
    i = 0;
    for (;;)
    {
      if (i >= arrayOfString.length) {
        return a(paramString1, paramString2.substring(0, paramString2.lastIndexOf(",")));
      }
      paramString2 = paramString2 + arrayOfString[i] + ",";
      i += 1;
    }
  }
  
  public static boolean d()
  {
    return m("b_clicked");
  }
  
  public static boolean d(String paramString)
  {
    return c("i_clicked", paramString);
  }
  
  public static boolean e()
  {
    try
    {
      Properties localProperties = f();
      if ((localProperties != null) && (!localProperties.isEmpty())) {
        localProperties.clear();
      }
      boolean bool = a(localProperties);
      return bool;
    }
    finally {}
  }
  
  public static boolean e(String paramString)
  {
    return c("i_completed", paramString);
  }
  
  /* Error */
  private static Properties f()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_0
    //   2: ldc 2
    //   4: monitorenter
    //   5: invokestatic 180	com/ltad/a/g:g	()Ljava/io/File;
    //   8: astore_2
    //   9: aload_2
    //   10: ifnonnull +8 -> 18
    //   13: ldc 2
    //   15: monitorexit
    //   16: aload_0
    //   17: areturn
    //   18: new 139	java/util/Properties
    //   21: dup
    //   22: invokespecial 157	java/util/Properties:<init>	()V
    //   25: astore_1
    //   26: new 232	java/io/FileInputStream
    //   29: dup
    //   30: aload_2
    //   31: invokevirtual 187	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   34: invokespecial 233	java/io/FileInputStream:<init>	(Ljava/lang/String;)V
    //   37: astore_2
    //   38: aload_1
    //   39: aload_2
    //   40: invokevirtual 237	java/util/Properties:load	(Ljava/io/InputStream;)V
    //   43: aload_2
    //   44: invokevirtual 240	java/io/InputStream:close	()V
    //   47: aload_1
    //   48: astore_0
    //   49: goto -36 -> 13
    //   52: astore_1
    //   53: aload_1
    //   54: invokevirtual 200	java/io/FileNotFoundException:printStackTrace	()V
    //   57: goto -44 -> 13
    //   60: astore_0
    //   61: ldc 2
    //   63: monitorexit
    //   64: aload_0
    //   65: athrow
    //   66: astore_1
    //   67: aload_1
    //   68: invokevirtual 201	java/io/IOException:printStackTrace	()V
    //   71: goto -58 -> 13
    // Local variable table:
    //   start	length	slot	name	signature
    //   1	48	0	localObject1	Object
    //   60	5	0	localObject2	Object
    //   25	23	1	localProperties	Properties
    //   52	2	1	localFileNotFoundException	java.io.FileNotFoundException
    //   66	2	1	localIOException	java.io.IOException
    //   8	36	2	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   26	47	52	java/io/FileNotFoundException
    //   5	9	60	finally
    //   18	26	60	finally
    //   26	47	60	finally
    //   53	57	60	finally
    //   67	71	60	finally
    //   26	47	66	java/io/IOException
  }
  
  public static boolean f(String paramString)
  {
    return c("i_skipped", paramString);
  }
  
  private static File g()
  {
    try
    {
      Object localObject4 = h() + "/" + "joys";
      Object localObject1 = new File((String)localObject4);
      localObject4 = new File(localObject4 + "/" + a);
      try
      {
        if (!((File)localObject1).exists()) {
          ((File)localObject1).mkdirs();
        }
        localObject1 = localObject4;
        if (!((File)localObject4).exists())
        {
          ((File)localObject4).createNewFile();
          localObject1 = localObject4;
        }
      }
      catch (Exception localException)
      {
        for (;;)
        {
          Object localObject2 = null;
        }
      }
      return localObject1;
    }
    finally {}
  }
  
  public static String g(String paramString)
  {
    return a("a_b", "_a_b", paramString);
  }
  
  private static String h()
  {
    File localFile = null;
    if (Environment.getExternalStorageState().equals("mounted")) {
      localFile = Environment.getExternalStorageDirectory();
    }
    if (localFile != null) {
      return localFile.toString();
    }
    return "";
  }
  
  public static String h(String paramString)
  {
    return a("a_i", "_a_i", paramString);
  }
  
  public static String i(String paramString)
  {
    return a("c_i", "_c_i", paramString);
  }
  
  public static String j(String paramString)
  {
    return a("c_s", "_c_s", paramString);
  }
  
  public static String k(String paramString)
  {
    return a("i_b", "_i_b", paramString);
  }
  
  public static String l(String paramString)
  {
    return a("i_i", "_i_i", paramString);
  }
  
  private static boolean m(String paramString)
  {
    return a(paramString, String.valueOf(Integer.parseInt(a(paramString, "0")) + 1));
  }
}
