package com.ltad.interstitial;

import android.app.Activity;
import android.content.Context;
import android.util.Log;
import com.ltad.a.i;
import com.ltad.util.InterstitialUtil;
import com.ltad.util.PropertyUtil;
import com.unity3d.ads.android.UnityAds;

public class InterstitialUnity
  extends InterstitialAdapter
{
  private static final String TAG = "Joy_InterstitialUnity";
  private boolean isAdClosed = true;
  private boolean isDebug = false;
  private boolean isLoaded = false;
  private boolean isShow = false;
  private Context mAppContext;
  private String mGameId;
  
  public InterstitialUnity() {}
  
  public void destroy()
  {
    this.isAdClosed = true;
  }
  
  public String getTag()
  {
    return "Joy_InterstitialUnity";
  }
  
  public void init(Context paramContext)
  {
    this.mAppContext = paramContext.getApplicationContext();
    this.mGameId = PropertyUtil.getPropertyDefault(this.mAppContext, i.a(458773), "");
    if ("".equals(this.mGameId))
    {
      Log.e("Joy_InterstitialUnity", "GameId is not exist");
      return;
    }
    Log.i("Joy_InterstitialUnity", "unity gameId: " + this.mGameId);
    try
    {
      Class.forName(i.a(458774));
      InterstitialUtil.getInstance(this.mAppContext).addSupportInterstitial(i.a(458772), this);
      Log.i("Joy_InterstitialUnity", "Init Complete");
      return;
    }
    catch (ClassNotFoundException paramContext)
    {
      Log.e("Joy_InterstitialUnity", "Exception:" + paramContext.getMessage());
    }
  }
  
  public void preload(Activity paramActivity)
  {
    UnityAds.setDebugMode(this.isDebug);
    UnityAds.setTestMode(this.isDebug);
    UnityAds.changeActivity(paramActivity);
    UnityAds.init(paramActivity, this.mGameId, new InterstitialUnity.1(this, paramActivity));
  }
  
  public boolean preloadResult()
  {
    return false;
  }
  
  public void setAdClosed(boolean paramBoolean)
  {
    this.isAdClosed = paramBoolean;
  }
  
  public void show(Activity paramActivity)
  {
    UnityAds.changeActivity(paramActivity);
    this.isAdClosed = false;
    this.isShow = true;
    if (this.isLoaded)
    {
      if ((this.isShow) && (!this.isAdClosed) && (UnityAds.canShow())) {
        UnityAds.show();
      }
      return;
    }
    preload(paramActivity);
  }
}
