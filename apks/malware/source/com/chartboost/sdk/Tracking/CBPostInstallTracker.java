package com.chartboost.sdk.Tracking;

import android.text.TextUtils;
import android.util.Base64;
import com.chartboost.sdk.Chartboost;
import com.chartboost.sdk.Libraries.CBLogging;
import com.chartboost.sdk.Libraries.a;
import com.chartboost.sdk.Libraries.e;
import com.chartboost.sdk.Libraries.e.a;
import com.chartboost.sdk.Libraries.e.b;
import com.chartboost.sdk.Libraries.f;
import com.chartboost.sdk.Libraries.f.k;
import com.chartboost.sdk.impl.av;
import java.util.EnumMap;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class CBPostInstallTracker
{
  private static CBPostInstallTracker a = null;
  private Chartboost b = Chartboost.sharedChartboost();
  
  private CBPostInstallTracker() {}
  
  private void a(e.a paramA, String paramString)
  {
    try
    {
      av localAv = new av(String.format(Locale.US, "%s%s", new Object[] { "/post-install-event/", paramString }), "https://live.chartboost.com", "postInstallTracker");
      localAv.a(paramString, paramA);
      localAv.a(f.a(new f.k[] { f.a("status", a.a) }));
      localAv.a(paramString);
      localAv.a(true);
      localAv.j();
      return;
    }
    finally
    {
      paramA = finally;
      throw paramA;
    }
  }
  
  public static CBPostInstallTracker sharedPostInstallTracker()
  {
    if (!Chartboost.isSessionStarted()) {
      return null;
    }
    if (a == null) {}
    try
    {
      if (a == null) {
        a = new CBPostInstallTracker();
      }
      return a;
    }
    finally {}
  }
  
  public void trackInAppPurchaseEvent(EnumMap paramEnumMap, CBPostInstallTracker.CBIAPType paramCBIAPType)
  {
    if ((paramEnumMap != null) && (paramCBIAPType != null)) {}
    float f;
    try
    {
      if ((TextUtils.isEmpty((CharSequence)paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.PRODUCT_ID))) || (TextUtils.isEmpty((CharSequence)paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.PRODUCT_TITLE))) || (TextUtils.isEmpty((CharSequence)paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.PRODUCT_DESCRIPTION))) || (TextUtils.isEmpty((CharSequence)paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.PRODUCT_PRICE))) || (TextUtils.isEmpty((CharSequence)paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.PRODUCT_CURRENCY_CODE)))) {
        throw new IllegalArgumentException("Null object is passed. Please pass a valid value object");
      }
    }
    finally
    {
      throw paramEnumMap;
      try
      {
        localObject = Pattern.compile("(\\d+\\.\\d+)|(\\d+)").matcher((CharSequence)paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.PRODUCT_PRICE));
        ((Matcher)localObject).find();
        localObject = ((Matcher)localObject).group();
        if (TextUtils.isEmpty((CharSequence)localObject)) {
          throw new IllegalArgumentException("Invalid price object");
        }
      }
      catch (IllegalStateException paramEnumMap)
      {
        throw new IllegalStateException("Invalid price object");
      }
      f = Float.parseFloat((String)localObject);
      Object localObject = null;
      if (paramCBIAPType == CBPostInstallTracker.CBIAPType.GOOGLE_PLAY)
      {
        if ((TextUtils.isEmpty((CharSequence)paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.GOOGLE_PURCHASE_DATA))) || (TextUtils.isEmpty((CharSequence)paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.GOOGLE_PURCHASE_SIGNATURE)))) {
          throw new IllegalArgumentException("Null object is passed for for purchase data or purchase signature");
        }
        localObject = e.a(new e.b[] { e.a("purchaseData", paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.GOOGLE_PURCHASE_DATA)), e.a("purchaseSignature", paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.GOOGLE_PURCHASE_SIGNATURE)), e.a("type", Integer.valueOf(CBPostInstallTracker.CBIAPType.GOOGLE_PLAY.ordinal())) });
      }
      while (localObject == null)
      {
        CBLogging.b("CBPostInstallTracker", "Error while parsing the receipt to a JSON Object, ");
        return;
        if (paramCBIAPType == CBPostInstallTracker.CBIAPType.AMAZON)
        {
          if ((TextUtils.isEmpty((CharSequence)paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.AMAZON_USER_ID))) || (TextUtils.isEmpty((CharSequence)paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.AMAZON_PURCHASE_TOKEN)))) {
            throw new IllegalArgumentException("Null object is passed for for amazon user id or amazon purchase token");
          }
          localObject = e.a(new e.b[] { e.a("userID", paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.AMAZON_USER_ID)), e.a("purchaseToken", paramEnumMap.get(CBPostInstallTracker.CBIAPPurchaseInfo.AMAZON_PURCHASE_TOKEN)), e.a("type", Integer.valueOf(CBPostInstallTracker.CBIAPType.AMAZON.ordinal())) });
        }
      }
      paramCBIAPType = Base64.encodeToString(((e.a)localObject).toString().getBytes(), 2);
    }
  }
}
