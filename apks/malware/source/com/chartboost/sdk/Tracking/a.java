package com.chartboost.sdk.Tracking;

import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.text.TextUtils;
import com.chartboost.sdk.CBPreferences;
import com.chartboost.sdk.Chartboost;
import com.chartboost.sdk.Libraries.CBLogging;
import com.chartboost.sdk.Libraries.CBUtility;
import com.chartboost.sdk.Libraries.b;
import com.chartboost.sdk.Libraries.c;
import com.chartboost.sdk.Libraries.e.a;
import com.chartboost.sdk.Libraries.f;
import com.chartboost.sdk.Libraries.f.k;
import com.chartboost.sdk.Libraries.g;
import com.chartboost.sdk.Model.CBError.CBImpressionError;
import com.chartboost.sdk.impl.av;
import com.chartboost.sdk.impl.az;
import com.chartboost.sdk.impl.k.a;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class a
{
  private static final String a = a.class.getSimpleName();
  private static a i;
  private static boolean j = false;
  private String b;
  private String c = p();
  private JSONArray d = new JSONArray();
  private long e;
  private long f;
  private long g = System.currentTimeMillis();
  private g h = new g("CBSessionDirectory", false);
  
  private a() {}
  
  public static a a()
  {
    if (i == null) {}
    try
    {
      if (i == null) {
        i = new a();
      }
      return i;
    }
    finally {}
  }
  
  private static Object a(Object paramObject)
  {
    if (paramObject != null) {
      return paramObject;
    }
    return "";
  }
  
  public static String a(int paramInt)
  {
    return new Integer(paramInt).toString();
  }
  
  public static void a(String paramString)
  {
    if (i == null) {
      return;
    }
    i.a("session", paramString, null, null, null, null, "session");
  }
  
  public static void a(String paramString1, String paramString2)
  {
    if (i == null) {
      return;
    }
    i.a("start", paramString1, paramString2, null, null, null, "system");
  }
  
  public static void a(String paramString1, String paramString2, int paramInt)
  {
    if (i == null) {
      return;
    }
    i.a("playback-start", paramString1, paramString2, a(paramInt), null, null, "system");
  }
  
  public static void a(String paramString1, String paramString2, CBError.CBImpressionError paramCBImpressionError)
  {
    if (i == null) {
      return;
    }
    a localA = i;
    if (paramCBImpressionError != null) {}
    for (paramCBImpressionError = paramCBImpressionError.toString();; paramCBImpressionError = "")
    {
      localA.a("ad-error", paramString1, paramString2, paramCBImpressionError, null, null, "system");
      return;
    }
  }
  
  public static void a(String paramString1, String paramString2, String paramString3)
  {
    if (i == null) {
      return;
    }
    i.a("ad-show", paramString1, paramString2, paramString3, null, null, "system");
  }
  
  public static void a(String paramString1, String paramString2, String paramString3, int paramInt)
  {
    if (i == null) {
      return;
    }
    i.a("ad-click", paramString1, paramString2, paramString3, a(paramInt), null, "system");
  }
  
  public static void a(String paramString1, String paramString2, String paramString3, int paramInt1, int paramInt2)
  {
    if (i == null) {
      return;
    }
    i.a("install-click", paramString1, paramString3, paramString2, a(paramInt1), a(paramInt2), "system");
  }
  
  public static void a(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    if (i == null) {
      return;
    }
    i.a("failure", paramString1, paramString2, paramString3, paramString4, null, "system");
  }
  
  public static void a(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, JSONObject paramJSONObject)
  {
    if (i == null) {
      return;
    }
    i.a(paramString1, paramString2, paramString3, paramString4, paramString5, paramString6, paramJSONObject, "system");
  }
  
  public static void a(String paramString1, String paramString2, boolean paramBoolean)
  {
    if (i == null) {
      return;
    }
    i.a("ad-get", paramString1, paramString2, b(paramBoolean), "single", null, "system");
  }
  
  public static String b(boolean paramBoolean)
  {
    if (paramBoolean) {
      return "1";
    }
    return "0";
  }
  
  public static void b()
  {
    a("start");
    a("did-become-active");
  }
  
  public static void b(String paramString1, String paramString2)
  {
    if (i == null) {
      return;
    }
    i.a("confirmation-show", paramString1, paramString2, null, null, null, "system");
  }
  
  public static void b(String paramString1, String paramString2, int paramInt)
  {
    if (i == null) {
      return;
    }
    i.a("close-show", paramString1, paramString2, a(paramInt), null, null, "system");
  }
  
  public static void b(String paramString1, String paramString2, String paramString3)
  {
    if (i == null) {
      return;
    }
    i.a("ad-click", paramString1, paramString2, paramString3, null, null, "system");
  }
  
  public static void b(String paramString1, String paramString2, boolean paramBoolean)
  {
    if (i == null) {
      return;
    }
    i.a("ad-loaded", paramString1, paramString2, b(paramBoolean), null, null, "system");
  }
  
  public static void c(String paramString1, String paramString2)
  {
    if (i == null) {
      return;
    }
    i.a("replay", paramString1, paramString2, null, null, null, "system");
  }
  
  public static void c(String paramString1, String paramString2, String paramString3)
  {
    if (i == null) {
      return;
    }
    i.a("ad-close", paramString1, paramString2, paramString3, null, null, "system");
  }
  
  public static void c(String paramString1, String paramString2, boolean paramBoolean)
  {
    if (i == null) {
      return;
    }
    i.a("confirmation-dismiss", paramString1, paramString2, b(paramBoolean), null, null, "system");
  }
  
  public static void d()
  {
    if (i == null) {
      return;
    }
    i.a("video-prefetcher", "begin", null, null, null, null, "system");
  }
  
  public static void d(String paramString1, String paramString2)
  {
    if (i == null) {
      return;
    }
    i.a("playback-stop", paramString1, paramString2, null, null, null, "system");
  }
  
  public static void d(String paramString1, String paramString2, String paramString3)
  {
    if (i == null) {
      return;
    }
    i.a("success", paramString1, paramString2, paramString3, null, null, "system");
  }
  
  public static void d(String paramString1, String paramString2, boolean paramBoolean)
  {
    if (i == null) {
      return;
    }
    i.a("controls-toggle", paramString1, paramString2, b(paramBoolean), null, null, "system");
  }
  
  public static void e()
  {
    if (i == null) {
      return;
    }
    i.a("video-prefetcher", null, null, null, null, null, "system");
  }
  
  public static void e(String paramString1, String paramString2, String paramString3)
  {
    if (i == null) {
      return;
    }
    i.a(paramString1, paramString2, paramString3, null, null, null, "system");
  }
  
  public static boolean i()
  {
    return j;
  }
  
  public av a(e.a paramA)
  {
    av localAv = new av("/api/track", "https://live.chartboost.com", a.class.getSimpleName());
    localAv.a("track", paramA);
    localAv.a(f.a(new f.k[] { f.a("status", com.chartboost.sdk.Libraries.a.a) }));
    localAv.a(k.a.a);
    return localAv;
  }
  
  public void a(long paramLong1, long paramLong2)
  {
    e.a localA = e.a.a();
    localA.a("start_timestamp", Long.valueOf(paramLong1));
    localA.a("timestamp", Long.valueOf(paramLong2));
    localA.a("session_id", this.b);
    this.h.a("cb_previous_session_info", localA);
  }
  
  public void a(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7)
  {
    if (i == null) {
      return;
    }
    i.a(paramString1, paramString2, paramString3, paramString4, paramString5, paramString6, new JSONObject(), paramString7);
  }
  
  public void a(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, JSONObject paramJSONObject, String paramString7)
  {
    JSONObject localJSONObject2 = CBPreferences.getInstance().getTrackingLevels();
    JSONObject localJSONObject1 = new JSONObject();
    long l1;
    long l2;
    long l3;
    if ((localJSONObject2 != null) && (localJSONObject2.optBoolean(paramString7)))
    {
      l1 = System.currentTimeMillis();
      l2 = this.e;
      l3 = this.g;
    }
    try
    {
      localJSONObject1.put("event", a(paramString1));
      localJSONObject1.put("kingdom", a(paramString2));
      localJSONObject1.put("phylum", a(paramString3));
      localJSONObject1.put("class", a(paramString4));
      localJSONObject1.put("family", a(paramString5));
      localJSONObject1.put("genus", a(paramString6));
      localJSONObject1.put("meta", a(paramJSONObject));
      localJSONObject1.put("clientTimestamp", System.currentTimeMillis() / 1000L);
      localJSONObject1.put("session_id", l());
      localJSONObject1.put("totalSessionTime", (l1 - l2) / 1000L);
      localJSONObject1.put("currentSessionTime", (l1 - l3) / 1000L);
    }
    catch (JSONException paramString2)
    {
      for (;;)
      {
        try
        {
          this.d.put(localJSONObject1);
          paramString2 = e.a.a();
          paramString2.a("events", this.d);
          CBLogging.a(a, "###Writing" + a(paramString1) + "to tracking cache dir");
          this.h.a(this.c, e.a.a(paramString2));
          k();
          if (f())
          {
            CBLogging.a(a, "### Got enough track events sending to server...");
            this.c = p();
            this.d = new JSONArray();
            az.a(Chartboost.sharedChartboost().getContext()).d();
          }
          return;
        }
        finally {}
        paramString2 = paramString2;
        CBLogging.b(a, "error creating json", paramString2);
      }
    }
  }
  
  public void a(boolean paramBoolean)
  {
    if (i == null) {
      return;
    }
    e.a localA = e.a.a();
    try
    {
      localA.a("complete", Boolean.valueOf(paramBoolean));
      i.a("session", "end", null, null, null, null, localA.e(), "session");
      a("did-become-active");
      return;
    }
    catch (Exception localException)
    {
      CBLogging.b(a, "error creating json", localException);
    }
  }
  
  public boolean b(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return true;
    }
    return paramString.equals("cb_previous_session_info");
  }
  
  public void c()
  {
    a(false);
  }
  
  public boolean f()
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (this.d != null)
    {
      bool1 = bool2;
      if (this.d.length() >= 50) {
        bool1 = true;
      }
    }
    return bool1;
  }
  
  public String g()
  {
    Object localObject = new JSONObject();
    try
    {
      ((JSONObject)localObject).put("startTime", System.currentTimeMillis());
      ((JSONObject)localObject).put("deviceID", c.e());
      localObject = b.b(((JSONObject)localObject).toString().getBytes());
      return localObject;
    }
    catch (JSONException localJSONException)
    {
      String str = new Long(System.currentTimeMillis()).toString();
      CBLogging.b(a, "error json", localJSONException);
      return str;
    }
  }
  
  public void h()
  {
    e.a localA = this.h.a("cb_previous_session_info");
    if (localA != null)
    {
      this.f = localA.h("timestamp");
      this.e = localA.h("start_timestamp");
      this.b = localA.e("session_id");
      if (System.currentTimeMillis() - this.f <= 180000L)
      {
        if (!TextUtils.isEmpty(this.b))
        {
          k();
          j = false;
        }
      }
      else {
        a(true);
      }
    }
    j();
    j = true;
  }
  
  public void j()
  {
    long l = System.currentTimeMillis();
    this.e = l;
    this.f = l;
    this.b = g();
    a(l, l);
    Object localObject = CBUtility.a();
    int k = ((SharedPreferences)localObject).getInt("cbPrefSessionCount", 0);
    localObject = ((SharedPreferences)localObject).edit();
    ((SharedPreferences.Editor)localObject).putInt("cbPrefSessionCount", k + 1);
    ((SharedPreferences.Editor)localObject).commit();
  }
  
  public void k()
  {
    long l = System.currentTimeMillis();
    a(this.e, l);
  }
  
  public String l()
  {
    return this.b;
  }
  
  public g m()
  {
    return this.h;
  }
  
  public JSONArray n()
  {
    return this.d;
  }
  
  public long o()
  {
    return this.e;
  }
  
  public String p()
  {
    return new Long(System.currentTimeMillis()).toString();
  }
  
  public String toString()
  {
    return "Session [ startTime: " + o() + " sessionEvents: " + n() + " ]";
  }
}
