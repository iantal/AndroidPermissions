package com.chartboost.sdk.impl;

import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import com.chartboost.sdk.Libraries.CBLogging;
import java.util.Observable;

public class ax
  extends Observable
{
  private static ax c = null;
  private static ax.b d = ax.b.d;
  private boolean a = true;
  private boolean b = false;
  private ax.a e = null;
  
  private ax() {}
  
  public static ax a()
  {
    if (c == null) {
      c = new ax();
    }
    return c;
  }
  
  public void a(Context paramContext)
  {
    try
    {
      paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
      if ((paramContext != null) && (paramContext.isConnectedOrConnecting()))
      {
        a(true);
        if (paramContext.getType() == 1)
        {
          d = ax.b.a;
          CBLogging.a("CBReachability", "######### TYPE_WIFI");
          return;
        }
        if (paramContext.getType() != 0) {
          return;
        }
        d = ax.b.a;
        CBLogging.a("CBReachability", "######### TYPE_MOBILE");
        return;
      }
    }
    catch (SecurityException paramContext)
    {
      throw new SecurityException("Chartboost SDK requires 'android.permission.ACCESS_NETWORK_STATE' permission set in your AndroidManifest.xml");
    }
    a(false);
    d = ax.b.c;
    CBLogging.a("CBReachability", "######### NO Network");
  }
  
  public void a(boolean paramBoolean)
  {
    this.a = paramBoolean;
  }
  
  public Intent b(Context paramContext)
  {
    if ((paramContext != null) && (!this.b))
    {
      b(true);
      CBLogging.a("CBReachability", "######### Network broadcast successfully registered");
      return paramContext.registerReceiver(this.e, new IntentFilter("android.net.conn.CONNECTIVITY_CHANGE"));
    }
    return null;
  }
  
  public ax.b b()
  {
    return d;
  }
  
  public void b(boolean paramBoolean)
  {
    this.b = paramBoolean;
  }
  
  public void c(Context paramContext)
  {
    if ((paramContext != null) && (this.b))
    {
      paramContext.unregisterReceiver(this.e);
      b(false);
      CBLogging.a("CBReachability", "######### Network broadcast successfully unregistered");
    }
  }
  
  public boolean c()
  {
    return this.a;
  }
  
  public void notifyObservers()
  {
    if (this.a)
    {
      setChanged();
      super.notifyObservers(this);
    }
  }
}
