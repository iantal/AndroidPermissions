package com.chartboost.sdk.impl;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import com.chartboost.sdk.Chartboost;
import com.chartboost.sdk.Libraries.CBLogging;
import com.chartboost.sdk.Model.CBError.CBClickError;
import com.chartboost.sdk.Model.a;
import com.chartboost.sdk.Model.a.b;
import com.chartboost.sdk.Model.a.c;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.concurrent.ExecutorService;

public final class ba
{
  private static ba c;
  private ba.a a;
  private a b;
  
  private ba(ba.a paramA)
  {
    this.a = paramA;
  }
  
  public static ba a(ba.a paramA)
  {
    if (c == null) {
      c = new ba(paramA);
    }
    return c;
  }
  
  private void a(String paramString, Context paramContext)
  {
    if (this.b.d != a.c.c) {
      this.b.c = a.b.g;
    }
    Context localContext = paramContext;
    if (paramContext == null) {
      localContext = Chartboost.sharedChartboost().getContext();
    }
    if (localContext == null) {
      if (this.a != null) {
        this.a.a(this.b, false, paramString, CBError.CBClickError.NO_HOST_ACTIVITY);
      }
    }
    for (;;)
    {
      return;
      try
      {
        paramContext = new Intent("android.intent.action.VIEW");
        if (!(localContext instanceof Activity)) {
          paramContext.addFlags(268435456);
        }
        paramContext.setData(Uri.parse(paramString));
        localContext.startActivity(paramContext);
        paramContext = paramString;
        if (this.a == null) {
          continue;
        }
        this.a.a(this.b, true, paramContext, null);
        return;
      }
      catch (Exception paramContext)
      {
        for (;;)
        {
          if (paramString.startsWith("market://"))
          {
            paramContext = paramString;
            try
            {
              paramString = "http://market.android.com/" + paramString.substring(9);
              paramContext = paramString;
              Intent localIntent = new Intent("android.intent.action.VIEW");
              paramContext = paramString;
              if (!(localContext instanceof Activity))
              {
                paramContext = paramString;
                localIntent.addFlags(268435456);
              }
              paramContext = paramString;
              localIntent.setData(Uri.parse(paramString));
              paramContext = paramString;
              localContext.startActivity(localIntent);
              paramContext = paramString;
            }
            catch (Exception paramString)
            {
              CBLogging.b("CBURLOpener", "Exception raised openeing an inavld playstore URL", paramString);
            }
            if (this.a == null) {
              break;
            }
            this.a.a(this.b, false, paramContext, CBError.CBClickError.URI_UNRECOGNIZED);
            return;
          }
          paramContext = paramString;
          if (this.a != null)
          {
            this.a.a(this.b, false, paramString, CBError.CBClickError.URI_UNRECOGNIZED);
            paramContext = paramString;
          }
        }
      }
    }
  }
  
  public void a(a paramA, String paramString, Activity paramActivity)
  {
    this.b = paramA;
    Object localObject;
    try
    {
      localObject = new URI(paramString);
      localObject = ((URI)localObject).getScheme();
      if (localObject == null)
      {
        if (this.a != null) {
          this.a.a(paramA, false, paramString, CBError.CBClickError.URI_INVALID);
        }
        return;
      }
    }
    catch (URISyntaxException paramActivity)
    {
      while (this.a == null) {}
      this.a.a(paramA, false, paramString, CBError.CBClickError.URI_INVALID);
      return;
    }
    if ((!((String)localObject).equals("http")) && (!((String)localObject).equals("https")))
    {
      a(paramString, paramActivity);
      return;
    }
    paramA = new ba.1(this, paramString, paramActivity);
    aw.a().execute(paramA);
  }
}
