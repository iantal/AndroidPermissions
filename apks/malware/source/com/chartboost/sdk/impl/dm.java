package com.chartboost.sdk.impl;

import java.net.CacheRequest;
import java.net.ProtocolException;
import java.net.URL;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Set;

public final class dm
  implements do
{
  private final da a;
  private final eu b;
  private ev c;
  
  public dm(da paramDa, eu paramEu)
  {
    this.a = paramDa;
    this.b = paramEu;
  }
  
  public static di.b a(List paramList, cj paramCj)
  {
    Object localObject1 = null;
    Object localObject2 = "HTTP/1.1";
    cw.a localA = new cw.a();
    localA.b(df.e, paramCj.d.a());
    int i = 0;
    while (i < paramList.size())
    {
      ds localDs = ((ej)paramList.get(i)).h;
      String str2 = ((ej)paramList.get(i)).i.a();
      int j = 0;
      if (j < str2.length())
      {
        int m = str2.indexOf(0, j);
        int k = m;
        if (m == -1) {
          k = str2.length();
        }
        String str1 = str2.substring(j, k);
        if (localDs.equals(ej.a)) {
          localObject1 = str1;
        }
        for (;;)
        {
          j = k + 1;
          break;
          if (localDs.equals(ej.g)) {
            localObject2 = str1;
          } else if (!a(paramCj, localDs)) {
            localA.a(localDs.a(), str1);
          }
        }
      }
      i += 1;
    }
    if (localObject1 == null) {
      throw new ProtocolException("Expected ':status' header not present");
    }
    if (localObject2 == null) {
      throw new ProtocolException("Expected ':version' header not present");
    }
    return new di.b().a(new dn((String)localObject2 + " " + localObject1)).a(localA.a());
  }
  
  private static String a(String paramString1, String paramString2)
  {
    return paramString1 + '\000' + paramString2;
  }
  
  public static List a(dg paramDg, cj paramCj, String paramString)
  {
    cw localCw = paramDg.d();
    ArrayList localArrayList = new ArrayList(localCw.a() + 10);
    localArrayList.add(new ej(ej.b, paramDg.c()));
    localArrayList.add(new ej(ej.c, dh.a(paramDg.a())));
    String str = da.a(paramDg.a());
    int i;
    if (cj.b == paramCj)
    {
      localArrayList.add(new ej(ej.g, paramString));
      localArrayList.add(new ej(ej.f, str));
      localArrayList.add(new ej(ej.d, paramDg.a().getProtocol()));
      paramDg = new LinkedHashSet();
      i = 0;
      label160:
      if (i >= localCw.a()) {
        break label427;
      }
      paramString = ds.a(localCw.a(i).toLowerCase(Locale.US));
      str = localCw.b(i);
      if (!a(paramCj, paramString)) {
        break label246;
      }
    }
    label246:
    label425:
    for (;;)
    {
      i += 1;
      break label160;
      if (cj.a == paramCj)
      {
        localArrayList.add(new ej(ej.e, str));
        break;
      }
      throw new AssertionError();
      if ((!paramString.equals(ej.b)) && (!paramString.equals(ej.c)) && (!paramString.equals(ej.d)) && (!paramString.equals(ej.e)) && (!paramString.equals(ej.f)) && (!paramString.equals(ej.g))) {
        if (paramDg.add(paramString))
        {
          localArrayList.add(new ej(paramString, str));
        }
        else
        {
          int j = 0;
          for (;;)
          {
            if (j >= localArrayList.size()) {
              break label425;
            }
            if (((ej)localArrayList.get(j)).h.equals(paramString))
            {
              localArrayList.set(j, new ej(paramString, a(((ej)localArrayList.get(j)).i.a(), str)));
              break;
            }
            j += 1;
          }
        }
      }
    }
    label427:
    return localArrayList;
  }
  
  private static boolean a(cj paramCj, ds paramDs)
  {
    boolean bool = false;
    if (paramCj == cj.b) {
      if ((paramDs.b("connection")) || (paramDs.b("host")) || (paramDs.b("keep-alive")) || (paramDs.b("proxy-connection")) || (paramDs.b("transfer-encoding"))) {
        bool = true;
      }
    }
    do
    {
      return bool;
      if (paramCj != cj.a) {
        break;
      }
    } while ((!paramDs.b("connection")) && (!paramDs.b("host")) && (!paramDs.b("keep-alive")) && (!paramDs.b("proxy-connection")) && (!paramDs.b("te")) && (!paramDs.b("transfer-encoding")) && (!paramDs.b("encoding")) && (!paramDs.b("upgrade")));
    return true;
    throw new AssertionError(paramCj);
  }
  
  public ed a(dg paramDg)
  {
    b(paramDg);
    return this.c.f();
  }
  
  public ee a(CacheRequest paramCacheRequest)
  {
    return new dm.a(this.c, paramCacheRequest);
  }
  
  public void a()
  {
    this.c.f().close();
  }
  
  public void a(dk paramDk)
  {
    throw new UnsupportedOperationException();
  }
  
  public di.b b()
  {
    return a(this.c.c(), this.b.a());
  }
  
  public void b(dg paramDg)
  {
    if (this.c != null) {
      return;
    }
    this.a.b();
    boolean bool = this.a.c();
    String str = dh.a(this.a.k().k());
    this.c = this.b.a(a(paramDg, this.b.a(), str), bool, true);
    this.c.a(this.a.a.b());
  }
  
  public void c() {}
  
  public boolean d()
  {
    return true;
  }
  
  public void e() {}
}
