package com.chartboost.sdk.impl;

import java.io.IOException;
import java.util.zip.CRC32;
import java.util.zip.Inflater;

public final class dv
  implements ee
{
  private int a = 0;
  private final dr b;
  private final Inflater c = new Inflater(true);
  private final dw d;
  private final CRC32 e = new CRC32();
  
  public dv(ee paramEe)
  {
    this.b = dy.a(paramEe);
    this.d = new dw(this.b, this.c);
  }
  
  private void a()
  {
    this.b.a(10L);
    int j = this.b.b().d(3L);
    if ((j >> 1 & 0x1) == 1) {}
    for (int i = 1;; i = 0)
    {
      if (i != 0) {
        a(this.b.b(), 0L, 10L);
      }
      a("ID1ID2", 8075, this.b.g());
      this.b.b(8L);
      if ((j >> 2 & 0x1) == 1)
      {
        this.b.a(2L);
        if (i != 0) {
          a(this.b.b(), 0L, 2L);
        }
        int k = this.b.b().h() & 0xFFFF;
        this.b.a(k);
        if (i != 0) {
          a(this.b.b(), 0L, k);
        }
        this.b.b(k);
      }
      long l;
      if ((j >> 3 & 0x1) == 1)
      {
        l = this.b.a((byte)0);
        if (i != 0) {
          a(this.b.b(), 0L, l + 1L);
        }
        this.b.b(l + 1L);
      }
      if ((j >> 4 & 0x1) == 1)
      {
        l = this.b.a((byte)0);
        if (i != 0) {
          a(this.b.b(), 0L, l + 1L);
        }
        this.b.b(l + 1L);
      }
      if (i != 0)
      {
        a("FHCRC", this.b.h(), (short)(int)this.e.getValue());
        this.e.reset();
      }
      return;
    }
  }
  
  private void a(dx paramDx, long paramLong1, long paramLong2)
  {
    paramDx = paramDx.a;
    while (paramLong2 > 0L)
    {
      int i = paramDx.c - paramDx.b;
      long l = paramLong2;
      if (paramLong1 < i)
      {
        int j = (int)Math.min(paramLong2, i - paramLong1);
        this.e.update(paramDx.a, (int)(paramDx.b + paramLong1), j);
        l = paramLong2 - j;
      }
      paramLong1 -= i;
      paramDx = paramDx.d;
      paramLong2 = l;
    }
  }
  
  private void a(String paramString, int paramInt1, int paramInt2)
  {
    if (paramInt2 != paramInt1) {
      throw new IOException(String.format("%s: actual 0x%08x != expected 0x%08x", new Object[] { paramString, Integer.valueOf(paramInt2), Integer.valueOf(paramInt1) }));
    }
  }
  
  private void b()
  {
    a("CRC", this.b.j(), (int)this.e.getValue());
    a("ISIZE", this.b.j(), this.c.getTotalOut());
  }
  
  public long b(dx paramDx, long paramLong)
  {
    if (paramLong < 0L) {
      throw new IllegalArgumentException("byteCount < 0: " + paramLong);
    }
    if (paramLong == 0L) {
      return 0L;
    }
    if (this.a == 0)
    {
      a();
      this.a = 1;
    }
    if (this.a == 1)
    {
      long l = paramDx.b;
      paramLong = this.d.b(paramDx, paramLong);
      if (paramLong != -1L)
      {
        a(paramDx, l, paramLong);
        return paramLong;
      }
      this.a = 2;
    }
    if (this.a == 2)
    {
      b();
      this.a = 3;
      if (!this.b.e()) {
        throw new IOException("gzip finished without exhausting source");
      }
    }
    return -1L;
  }
  
  public void close()
  {
    this.d.close();
  }
}
