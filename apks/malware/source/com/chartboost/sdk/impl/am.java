package com.chartboost.sdk.impl;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Point;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnCompletionListener;
import android.media.MediaPlayer.OnErrorListener;
import android.media.MediaPlayer.OnPreparedListener;
import android.net.Uri;
import android.os.Handler;
import android.util.DisplayMetrics;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.view.animation.AlphaAnimation;
import android.view.animation.Animation;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.TextView;
import com.chartboost.sdk.CBPreferences;
import com.chartboost.sdk.Libraries.CBLogging;
import com.chartboost.sdk.Libraries.CBOrientation;
import com.chartboost.sdk.Libraries.i;
import com.chartboost.sdk.Tracking.a;

public final class am
  extends RelativeLayout
  implements MediaPlayer.OnCompletionListener, MediaPlayer.OnErrorListener, MediaPlayer.OnPreparedListener, bn.a
{
  private static Handler k = new Handler();
  private RelativeLayout a;
  private ak b;
  private ak c;
  private bh d;
  private TextView e;
  private ah f;
  private al g;
  private ae h;
  private boolean i = false;
  private boolean j = false;
  private Runnable l = new am.2(this);
  private Runnable m = new am.3(this);
  private Runnable n = new am.4(this);
  
  public am(Context paramContext, ae paramAe)
  {
    super(paramContext);
    this.h = paramAe;
    a(paramContext);
  }
  
  private void a(Context paramContext)
  {
    paramContext = getContext();
    float f1 = getContext().getResources().getDisplayMetrics().density;
    int i1 = Math.round(f1 * 10.0F);
    this.g = new al(paramContext);
    this.h.o().a(this.g);
    Object localObject1 = new RelativeLayout.LayoutParams(-1, -2);
    ((RelativeLayout.LayoutParams)localObject1).addRule(13);
    addView(this.g, (ViewGroup.LayoutParams)localObject1);
    this.a = new RelativeLayout(paramContext);
    this.b = new ak(paramContext);
    this.b.setVisibility(8);
    this.b.setGravity(21);
    localObject1 = this.h.t;
    Point localPoint = this.h.b("video-click-button");
    Object localObject2 = new RelativeLayout.LayoutParams(-1, Math.round(((i)localObject1).c() / ((i)localObject1).g() + 6.0F * f1));
    ((RelativeLayout.LayoutParams)localObject2).addRule(10);
    this.a.addView(this.b, (ViewGroup.LayoutParams)localObject2);
    this.d = new am.1(this, paramContext);
    localObject2 = new LinearLayout.LayoutParams(-2, -2);
    ((LinearLayout.LayoutParams)localObject2).leftMargin = Math.round(localPoint.x / ((i)localObject1).g());
    ((LinearLayout.LayoutParams)localObject2).topMargin = Math.round(localPoint.y / ((i)localObject1).g());
    this.h.a((ViewGroup.LayoutParams)localObject2, (i)localObject1, 1.0F);
    this.b.addView(this.d, (ViewGroup.LayoutParams)localObject2);
    this.d.a((i)localObject1);
    this.c = new ak(paramContext);
    this.c.setVisibility(8);
    localObject1 = new RelativeLayout.LayoutParams(-1, Math.round(32.5F * f1));
    ((RelativeLayout.LayoutParams)localObject1).addRule(12);
    this.a.addView(this.c, (ViewGroup.LayoutParams)localObject1);
    this.c.setGravity(16);
    this.c.setPadding(i1, i1, i1, i1);
    this.e = new TextView(paramContext);
    this.e.setTextColor(-1);
    this.e.setTextSize(2, 11.0F);
    this.e.setText("00:00");
    this.e.setGravity(17);
    this.e.setPadding(0, 0, 16, 0);
    this.e.setSingleLine();
    localObject1 = new LinearLayout.LayoutParams(Math.round(48.0F * f1), -1);
    this.c.addView(this.e, (ViewGroup.LayoutParams)localObject1);
    this.f = new ah(paramContext);
    this.f.setVisibility(8);
    paramContext = new LinearLayout.LayoutParams(-1, Math.round(f1 * 10.0F));
    paramContext.setMargins(i1, i1, i1, i1);
    this.c.addView(this.f, paramContext);
    paramContext = new RelativeLayout.LayoutParams(-1, -1);
    paramContext.addRule(6, this.g.getId());
    paramContext.addRule(8, this.g.getId());
    paramContext.addRule(5, this.g.getId());
    paramContext.addRule(7, this.g.getId());
    addView(this.a, paramContext);
    a();
  }
  
  private void d(boolean paramBoolean)
  {
    if (!this.i) {}
    for (boolean bool = true;; bool = false)
    {
      a(bool, paramBoolean);
      return;
    }
  }
  
  public void a()
  {
    b(CBPreferences.getInstance().getOrientation().isPortrait());
    requestLayout();
  }
  
  public void a(int paramInt)
  {
    this.b.setBackgroundColor(paramInt);
    this.c.setBackgroundColor(paramInt);
  }
  
  public void a(MediaPlayer paramMediaPlayer)
  {
    this.g.a(paramMediaPlayer);
  }
  
  public void a(String paramString)
  {
    this.g.setOnCompletionListener(this);
    this.g.setOnErrorListener(this);
    this.g.setOnPreparedListener(this);
    this.g.setVideoURI(Uri.parse(paramString));
  }
  
  public void a(boolean paramBoolean)
  {
    k.removeCallbacks(this.l);
    k.removeCallbacks(this.m);
    if (paramBoolean)
    {
      if (!this.j) {
        this.b.setVisibility(0);
      }
      this.f.setVisibility(0);
      this.c.setVisibility(0);
      this.d.setEnabled(true);
    }
    for (;;)
    {
      this.i = paramBoolean;
      return;
      this.b.clearAnimation();
      this.c.clearAnimation();
      this.b.setVisibility(8);
      this.f.setVisibility(8);
      this.c.setVisibility(8);
      this.d.setEnabled(false);
    }
  }
  
  protected void a(boolean paramBoolean1, boolean paramBoolean2)
  {
    k.removeCallbacks(this.l);
    k.removeCallbacks(this.m);
    if ((!this.h.l) || (!this.h.n())) {}
    while (paramBoolean1 == this.i) {
      return;
    }
    this.i = paramBoolean1;
    AlphaAnimation localAlphaAnimation;
    if (this.i)
    {
      localAlphaAnimation = new AlphaAnimation(0.0F, 1.0F);
      if (!paramBoolean2) {
        break label188;
      }
    }
    label188:
    for (int i1 = 1;; i1 = 2)
    {
      localAlphaAnimation.setDuration(100L * i1);
      localAlphaAnimation.setFillAfter(true);
      if (!this.j)
      {
        this.b.setVisibility(0);
        this.b.startAnimation(localAlphaAnimation);
        this.d.setEnabled(true);
      }
      this.f.setVisibility(0);
      this.c.setVisibility(0);
      this.c.startAnimation(localAlphaAnimation);
      if (!this.i) {
        break label193;
      }
      k.postDelayed(this.l, 3000L);
      return;
      localAlphaAnimation = new AlphaAnimation(1.0F, 0.0F);
      break;
    }
    label193:
    k.postDelayed(this.m, localAlphaAnimation.getDuration());
  }
  
  public View b()
  {
    return this;
  }
  
  public void b(boolean paramBoolean)
  {
    if (paramBoolean) {}
    for (int i1 = -16777216;; i1 = 0)
    {
      setBackgroundColor(i1);
      RelativeLayout.LayoutParams localLayoutParams = new RelativeLayout.LayoutParams(-1, -1);
      if (!paramBoolean)
      {
        localLayoutParams.addRule(6, this.g.getId());
        localLayoutParams.addRule(8, this.g.getId());
        localLayoutParams.addRule(5, this.g.getId());
        localLayoutParams.addRule(7, this.g.getId());
      }
      this.a.setLayoutParams(localLayoutParams);
      return;
    }
  }
  
  public al c()
  {
    return this.g;
  }
  
  public void c(boolean paramBoolean)
  {
    TextView localTextView = this.e;
    if (paramBoolean) {}
    for (int i1 = 0;; i1 = 8)
    {
      localTextView.setVisibility(i1);
      return;
    }
  }
  
  public ah d()
  {
    return this.f;
  }
  
  public void e()
  {
    this.b.setVisibility(8);
    this.j = true;
    this.d.setEnabled(false);
  }
  
  public void f()
  {
    CBLogging.e(this, String.format("starting video ad playback, 0s / %d", new Object[] { Integer.valueOf(this.g.getDuration()) }));
    this.g.start();
    k.removeCallbacks(this.n);
    k.postDelayed(this.n, 16L);
  }
  
  public void g()
  {
    CBLogging.e(this, String.format("stopping video ad playback, %d / %d", new Object[] { Integer.valueOf(this.g.getCurrentPosition()), Integer.valueOf(this.g.getDuration()) }));
    if (this.g.isPlaying())
    {
      this.h.x = this.g.getCurrentPosition();
      this.g.pause();
    }
    this.h.o().c.postInvalidate();
    k.removeCallbacks(this.n);
  }
  
  public void h()
  {
    if (this.g.isPlaying()) {
      this.h.x = this.g.getCurrentPosition();
    }
    this.g.pause();
    k.removeCallbacks(this.n);
  }
  
  public void i()
  {
    this.g.setVisibility(8);
    invalidate();
  }
  
  public boolean j()
  {
    return this.g.isPlaying();
  }
  
  public void onCompletion(MediaPlayer paramMediaPlayer)
  {
    this.h.x = this.g.getDuration();
    if (this.h.o() != null) {
      this.h.o().e();
    }
  }
  
  public void onDetachedFromWindow()
  {
    super.onDetachedFromWindow();
    k.removeCallbacks(this.n);
  }
  
  public boolean onError(MediaPlayer paramMediaPlayer, int paramInt1, int paramInt2)
  {
    CBLogging.b("VideoError", String.format("Video onError what extra: %d %d", new Object[] { Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) }));
    this.h.o().j();
    return false;
  }
  
  public void onPrepared(MediaPlayer paramMediaPlayer)
  {
    a(paramMediaPlayer);
    this.h.o().a();
  }
  
  public boolean onTouchEvent(MotionEvent paramMotionEvent)
  {
    if ((this.g.isPlaying()) && (paramMotionEvent.getActionMasked() == 0))
    {
      if (this.h != null) {
        a.d(this.h.A, this.h.C, this.i);
      }
      d(true);
      return true;
    }
    return false;
  }
  
  public void setEnabled(boolean paramBoolean)
  {
    super.setEnabled(paramBoolean);
    this.d.setEnabled(paramBoolean);
    if (paramBoolean) {
      a(false);
    }
  }
}
