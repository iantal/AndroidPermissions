package com.chartboost.sdk;

import android.content.Context;
import android.content.SharedPreferences;
import android.os.Handler;
import com.chartboost.sdk.Libraries.CBLogging;
import com.chartboost.sdk.Libraries.CBOrientation;
import com.chartboost.sdk.Libraries.CBUtility;
import com.chartboost.sdk.Libraries.e.a;
import com.chartboost.sdk.Model.CBError;
import com.chartboost.sdk.Model.CBError.CBImpressionError;
import com.chartboost.sdk.Model.a.b;
import com.chartboost.sdk.Model.a.c;
import com.chartboost.sdk.impl.av;
import com.chartboost.sdk.impl.ax;
import com.chartboost.sdk.impl.bd;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;

public abstract class b
{
  protected static Handler c = new Handler();
  public Chartboost a;
  public CBPreferences b;
  private ArrayList d;
  private Map e;
  private b.a f = null;
  
  public b(Chartboost paramChartboost)
  {
    this.a = paramChartboost;
    this.b = CBPreferences.getInstance();
    this.e = new HashMap();
    this.d = new ArrayList();
  }
  
  private final boolean p(com.chartboost.sdk.Model.a paramA)
  {
    boolean bool = true;
    for (;;)
    {
      try
      {
        com.chartboost.sdk.Model.a localA = l(paramA);
        if (localA != null)
        {
          if ((!paramA.f) && (localA.f))
          {
            localA.f = false;
            return bool;
          }
          a(paramA, CBError.CBImpressionError.TOO_MANY_CONNECTIONS);
          continue;
        }
        n(paramA);
      }
      finally {}
      bool = false;
    }
  }
  
  protected abstract com.chartboost.sdk.Model.a a(String paramString, boolean paramBoolean);
  
  public void a()
  {
    this.e.clear();
  }
  
  protected final void a(e.a paramA, com.chartboost.sdk.Model.a paramA1)
  {
    if (paramA.f("status") == 404)
    {
      CBLogging.b(paramA1.d, "Inavliad status code" + paramA.a("status"));
      a(paramA1, CBError.CBImpressionError.NO_AD_FOUND);
      return;
    }
    if (paramA.f("status") != 200)
    {
      CBLogging.b(paramA1.d, "Inavliad status code" + paramA.a("status"));
      a(paramA1, CBError.CBImpressionError.INTERNAL);
      return;
    }
    if (paramA1.d == a.c.a) {
      com.chartboost.sdk.Tracking.a.b("interstitial", paramA1.m(), paramA1.f);
    }
    for (;;)
    {
      paramA1.a(paramA, a.a().a);
      return;
      if (paramA1.d == a.c.b) {
        com.chartboost.sdk.Tracking.a.b("more-apps", paramA1.m(), paramA1.f);
      } else if (paramA1.d == a.c.c) {
        com.chartboost.sdk.Tracking.a.b("rewarded-video", paramA1.m(), paramA1.f);
      }
    }
  }
  
  protected void a(com.chartboost.sdk.Model.a paramA)
  {
    o(paramA);
    b().d(paramA);
    paramA.c = a.b.d;
  }
  
  protected void a(com.chartboost.sdk.Model.a paramA, CBError.CBImpressionError paramCBImpressionError)
  {
    m(paramA);
    c localC = this.a.a();
    if ((localC != null) && (localC.a()))
    {
      localC.a(true);
      if (paramA.d != a.c.a) {
        break label81;
      }
      com.chartboost.sdk.Tracking.a.a("interstitial", paramA.e, paramCBImpressionError);
    }
    for (;;)
    {
      b().a(paramA, paramCBImpressionError);
      return;
      if ((localC == null) || (!localC.b())) {
        break;
      }
      localC.a(paramA, true);
      break;
      label81:
      if (paramA.d == a.c.b) {
        com.chartboost.sdk.Tracking.a.a("more-apps", paramA.e, paramCBImpressionError);
      } else if (paramA.d == a.c.c) {
        com.chartboost.sdk.Tracking.a.a("rewarded-video", paramA.e, paramCBImpressionError);
      }
    }
  }
  
  protected final void a(com.chartboost.sdk.Model.a paramA, CBError paramCBError)
  {
    a(paramA, paramCBError.c());
  }
  
  protected final void a(av paramAv, com.chartboost.sdk.Model.a paramA)
  {
    paramAv.a("location", paramA.e);
    if (paramA.f) {
      paramAv.a("cache", "1");
    }
    paramAv.b(this.a.getValidContext());
    paramAv.a(new b.2(this, paramA));
  }
  
  public void a(String paramString)
  {
    com.chartboost.sdk.Model.a localA = a(paramString, false);
    if (b(localA)) {
      return;
    }
    c.post(new b.1(this, paramString, localA));
  }
  
  public final b.a b()
  {
    if (this.f == null) {
      this.f = c();
    }
    return this.f;
  }
  
  public void b(String paramString)
  {
    paramString = a(paramString, true);
    if (b(paramString)) {
      return;
    }
    c(paramString);
  }
  
  protected boolean b(e.a paramA, com.chartboost.sdk.Model.a paramA1)
  {
    if ((paramA == null) || (paramA1 == null))
    {
      a(paramA1, CBError.CBImpressionError.INTERNAL);
      return false;
    }
    paramA = paramA.a("assets");
    if (paramA == null)
    {
      a(paramA1, CBError.CBImpressionError.INTERNAL);
      return false;
    }
    if (CBPreferences.getInstance().getOrientation().isPortrait()) {}
    for (paramA = paramA.a("video-landscape");; paramA = paramA.a("video-portrait"))
    {
      paramA = paramA.e("id");
      if (bd.a().a(paramA) != null) {
        break;
      }
      a(paramA1, CBError.CBImpressionError.INTERNAL);
      return false;
    }
    return true;
  }
  
  protected final boolean b(com.chartboost.sdk.Model.a paramA)
  {
    if (b().i(paramA)) {}
    while (CBUtility.a().getInt("cbPrefSessionCount", 0) != 1) {
      return false;
    }
    a(paramA, CBError.CBImpressionError.FIRST_SESSION_INTERSTITIALS_DISABLED);
    return true;
  }
  
  protected abstract b.a c();
  
  protected void c(com.chartboost.sdk.Model.a paramA)
  {
    if (!e(paramA)) {}
    do
    {
      do
      {
        return;
      } while ((!b().h(paramA)) || (p(paramA)));
      if ((!paramA.f) && (b().g(paramA)))
      {
        paramA.j = true;
        this.a.a(paramA);
      }
      a(d(paramA), paramA);
      if (paramA.d == a.c.a)
      {
        com.chartboost.sdk.Tracking.a.a("interstitial", paramA.e, paramA.f);
        return;
      }
      if (paramA.d == a.c.b)
      {
        com.chartboost.sdk.Tracking.a.a("more-apps", paramA.e, paramA.f);
        return;
      }
    } while (paramA.d != a.c.c);
    com.chartboost.sdk.Tracking.a.a("rewarded-video", paramA.e, paramA.f);
  }
  
  public boolean c(String paramString)
  {
    return d(paramString) != null;
  }
  
  protected Context d()
  {
    try
    {
      Object localObject = Chartboost.class.getDeclaredMethod("getValidContext", new Class[0]);
      ((Method)localObject).setAccessible(true);
      localObject = (Context)((Method)localObject).invoke(this.a, new Object[0]);
      return localObject;
    }
    catch (Exception localException)
    {
      CBLogging.b(this, "Error encountered getting valid context", localException);
      CBUtility.throwProguardError(localException);
    }
    return Chartboost.sharedChartboost().getContext();
  }
  
  public com.chartboost.sdk.Model.a d(String paramString)
  {
    paramString = (com.chartboost.sdk.Model.a)this.e.get(paramString);
    if ((paramString != null) && (!k(paramString))) {
      return paramString;
    }
    return null;
  }
  
  protected abstract av d(com.chartboost.sdk.Model.a paramA);
  
  public void e(String paramString)
  {
    this.e.remove(paramString);
  }
  
  protected final boolean e(com.chartboost.sdk.Model.a paramA)
  {
    if (!Chartboost.isSessionStarted())
    {
      a(paramA, CBError.CBImpressionError.SESSION_NOT_STARTED);
      return false;
    }
    c localC = this.a.a();
    if ((!paramA.f) && (localC != null) && (localC.b()))
    {
      a(paramA, CBError.CBImpressionError.IMPRESSION_ALREADY_VISIBLE);
      return false;
    }
    if (!ax.a().c())
    {
      a(paramA, CBError.CBImpressionError.INTERNET_UNAVAILABLE);
      return false;
    }
    return true;
  }
  
  protected void f(com.chartboost.sdk.Model.a paramA)
  {
    m(paramA);
    if ((paramA.c != a.b.c) && (!b().f(paramA))) {
      return;
    }
    int i;
    if (paramA.c == a.b.d)
    {
      i = 1;
      h(paramA);
      c localC = this.a.a();
      if (localC != null)
      {
        if (!localC.a()) {
          break label81;
        }
        localC.a(false);
      }
    }
    label81:
    while ((!paramA.j) || (i != 0) || (paramA.c == a.b.c))
    {
      g(paramA);
      return;
      i = 0;
      break;
    }
  }
  
  protected void g(com.chartboost.sdk.Model.a paramA)
  {
    this.a.a(paramA);
  }
  
  protected void h(com.chartboost.sdk.Model.a paramA)
  {
    i(paramA);
  }
  
  public final void i(com.chartboost.sdk.Model.a paramA)
  {
    int i = 1;
    if (paramA.h) {}
    for (;;)
    {
      return;
      paramA.h = true;
      if (paramA.c == a.b.d) {}
      while (d(paramA.e) == paramA)
      {
        if ((i != 0) || (paramA.g)) {
          j(paramA);
        }
        e(paramA.e);
        paramA.f = false;
        return;
        i = 0;
      }
    }
  }
  
  protected abstract void j(com.chartboost.sdk.Model.a paramA);
  
  protected final boolean k(com.chartboost.sdk.Model.a paramA)
  {
    return TimeUnit.MILLISECONDS.toSeconds(new Date().getTime() - paramA.b.getTime()) >= 86400L;
  }
  
  public com.chartboost.sdk.Model.a l(com.chartboost.sdk.Model.a paramA)
  {
    if (paramA != null) {}
    label119:
    for (;;)
    {
      try
      {
        if (paramA.e == null)
        {
          paramA = "Default";
          break label119;
          if (i >= this.d.size()) {
            continue;
          }
          if (((com.chartboost.sdk.Model.a)this.d.get(i)).e == null)
          {
            str = "Default";
            if (!paramA.equals(str)) {
              continue;
            }
            paramA = (com.chartboost.sdk.Model.a)this.d.get(i);
            return paramA;
          }
        }
        else
        {
          paramA = paramA.e;
          break label119;
        }
        String str = ((com.chartboost.sdk.Model.a)this.d.get(i)).e;
        continue;
        i += 1;
        continue;
        paramA = null;
        continue;
        int i = 0;
      }
      finally {}
    }
  }
  
  public void m(com.chartboost.sdk.Model.a paramA)
  {
    try
    {
      paramA = l(paramA);
      if (paramA != null) {
        this.d.remove(paramA);
      }
      return;
    }
    finally {}
  }
  
  public void n(com.chartboost.sdk.Model.a paramA)
  {
    try
    {
      this.d.add(paramA);
      return;
    }
    finally
    {
      paramA = finally;
      throw paramA;
    }
  }
  
  public void o(com.chartboost.sdk.Model.a paramA)
  {
    this.e.put(paramA.e, paramA);
  }
}
