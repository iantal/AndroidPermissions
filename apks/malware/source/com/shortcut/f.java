package com.shortcut;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.util.Log;
import com.hdc.f.c;
import com.shortcut.receiver.AlarmReceiver;
import java.util.ArrayList;
import java.util.UUID;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public final class f
{
  a a;
  String b = "shortcut";
  boolean c = false;
  Context d = null;
  boolean e = false;
  
  public f() {}
  
  public static a a(Context paramContext)
  {
    localA = new a();
    localA.a = new ArrayList();
    localA.c = true;
    new ArrayList();
    paramContext = c.a(paramContext);
    try
    {
      paramContext = new String(com.shortcut.b.a.a(((String)paramContext.get(0)).toString()));
      try
      {
        paramContext = new JSONObject(paramContext);
        localA.b = paramContext.getString("refcode");
        localA.d = paramContext.getInt("shortcut_delay");
        localA.e = "";
        return localA;
      }
      catch (JSONException paramContext)
      {
        paramContext.printStackTrace();
        return localA;
      }
      return localA;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public static void a(Context paramContext, com.shortcut.a.b paramB)
  {
    new d(paramContext).execute(new com.shortcut.a.b[] { paramB });
  }
  
  public static void a(Context paramContext, a paramA)
  {
    int i = 0;
    for (;;)
    {
      int j;
      try
      {
        SharedPreferences localSharedPreferences = paramContext.getSharedPreferences("shortcut_status", 0);
        long l2 = localSharedPreferences.getLong("APP_OPEN_TIME", 0L);
        long l1 = l2;
        if (l2 == 0L)
        {
          l1 = System.currentTimeMillis();
          paramContext = paramContext.getSharedPreferences("shortcut_status", 0).edit();
          paramContext.putLong("APP_OPEN_TIME", l1);
          paramContext.commit();
        }
        paramA.g = l1;
        localObject = localSharedPreferences.getString("CREATED_SHORTCUT", "");
        Log.i("shortcut", "Created:  " + (String)localObject);
        paramContext = new ArrayList();
        localObject = ((String)localObject).split(" ");
        if (localObject != null)
        {
          j = localObject.length;
          break label211;
        }
        paramA.f = paramContext;
        paramA.h = localSharedPreferences.getBoolean("OPEN_URL", false);
        paramA.i = localSharedPreferences.getBoolean("INSTALL_EMBED_CPI", false);
        paramA.j = localSharedPreferences.getLong("PERIODIC_UPDATE_TIME", 0L);
        return;
      }
      catch (Exception paramContext)
      {
        Object localObject;
        paramContext.printStackTrace();
        return;
      }
      paramContext.add(localObject[i]);
      i += 1;
      label211:
      if (i < j) {}
    }
  }
  
  public static ArrayList<com.shortcut.a.b> b(Context paramContext)
  {
    int i = 0;
    paramContext = paramContext.getSharedPreferences("shortcut_status", 0).getString("SHORTCUT_TO_CREATE", "");
    localArrayList = new ArrayList();
    if (paramContext.equals("")) {
      paramContext = null;
    }
    for (;;)
    {
      return paramContext;
      try
      {
        JSONArray localJSONArray = new JSONObject(paramContext).getJSONArray("data");
        for (;;)
        {
          paramContext = localArrayList;
          if (i >= localJSONArray.length()) {
            break;
          }
          paramContext = localJSONArray.getJSONObject(i);
          com.shortcut.a.b localB = new com.shortcut.a.b();
          localB.a(paramContext.getString("icon_url"));
          localB.d(paramContext.getString("packageName"));
          localB.c(paramContext.getString("name"));
          localB.b(paramContext.getString("url"));
          localArrayList.add(localB);
          i += 1;
        }
        return localArrayList;
      }
      catch (JSONException paramContext)
      {
        paramContext.printStackTrace();
      }
    }
  }
  
  public static boolean c(Context paramContext)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    return (paramContext != null) && (paramContext.isConnectedOrConnecting());
  }
  
  public final void a(Context paramContext, int paramInt)
  {
    this.d = paramContext;
    this.a = new a();
    this.a.a = new ArrayList();
    this.a.c = true;
    this.a.d = paramInt;
    this.a.e = "";
    a(paramContext, this.a);
    if (this.a.c)
    {
      localObject1 = (AlarmManager)this.d.getSystemService("alarm");
      Object localObject2 = new Intent(this.d, AlarmReceiver.class);
      localObject2 = PendingIntent.getBroadcast(this.d, 0, (Intent)localObject2, 0);
      Log.i(this.b, "Schedule creating shortcut in " + this.a.d + " minutes");
      ((AlarmManager)localObject1).set(1, System.currentTimeMillis() + this.a.d * 60 * 1000, (PendingIntent)localObject2);
    }
    Object localObject1 = UUID.randomUUID().toString();
    com.hdc.b.b.a(paramContext, this.a.b, (String)localObject1, new g(this));
  }
}
