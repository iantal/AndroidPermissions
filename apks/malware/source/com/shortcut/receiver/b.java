package com.shortcut.receiver;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.pm.ApplicationInfo;
import android.os.AsyncTask;
import com.shortcut.f;
import java.util.ArrayList;
import java.util.Iterator;

final class b
  extends AsyncTask<String, String, String>
{
  Context a;
  
  public b(ConnectivityChangeReceiver paramConnectivityChangeReceiver, Context paramContext)
  {
    this.a = paramContext;
  }
  
  private String a()
  {
    com.shortcut.a localA = f.a(this.a);
    f.a(this.a, localA);
    long l1 = localA.e();
    long l2 = System.currentTimeMillis();
    Object localObject2;
    Object localObject1;
    if (((l2 > localA.d() + localA.c() * 60 * 1000) && (l1 == 0L)) || (l2 - l1 > 86400000L))
    {
      localObject2 = localA.a().iterator();
      localObject1 = "";
      if (((Iterator)localObject2).hasNext()) {
        break label227;
      }
      new com.shortcut.b();
      localObject1 = com.shortcut.b.a(this.a, localA.b(), (String)localObject1, this.a.getApplicationInfo().packageName);
      if (localObject1 != null) {
        localObject1 = ((ArrayList)localObject1).iterator();
      }
    }
    for (;;)
    {
      if (!((Iterator)localObject1).hasNext())
      {
        f.a(this.a, localA);
        if (l2 - l1 > 86400000L)
        {
          new com.shortcut.b.b().a(this.a, localA.b());
          localObject1 = this.a.getSharedPreferences("shortcut_status", 0).edit();
          ((SharedPreferences.Editor)localObject1).putLong("PERIODIC_UPDATE_TIME", System.currentTimeMillis());
          ((SharedPreferences.Editor)localObject1).commit();
        }
        return "";
        label227:
        com.shortcut.a.a localA1 = (com.shortcut.a.a)((Iterator)localObject2).next();
        localObject1 = localObject1 + localA1.a() + ",";
        break;
      }
      localObject2 = (com.shortcut.a.b)((Iterator)localObject1).next();
      if (!localA.a(((com.shortcut.a.b)localObject2).d()))
      {
        f.a(this.a, (com.shortcut.a.b)localObject2);
        try
        {
          Thread.sleep(2000L);
        }
        catch (InterruptedException localInterruptedException)
        {
          localInterruptedException.printStackTrace();
        }
      }
    }
  }
}
