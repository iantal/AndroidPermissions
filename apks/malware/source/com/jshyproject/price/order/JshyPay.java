package com.jshyproject.price.order;

import android.content.Context;
import android.os.Handler;
import com.jshyproject.price.channel.Data;
import com.jshyproject.price.plus.AppC;
import com.jshyproject.price.ztool.ZPhoneInfo;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class JshyPay
{
  public static Context c;
  
  public JshyPay() {}
  
  public static void Pay(Context paramContext, int paramInt, String paramString, PayCallBack paramPayCallBack)
  {
    paramString = PayOrder.createOrder(paramInt, paramString, paramPayCallBack);
    c = paramContext;
    paramString.appkey = Data.getChannelKey(paramContext);
    paramString.appcode = a(paramString.appkey);
    paramString.imei = ZPhoneInfo.getIMEI(paramContext);
    paramString.imsi = ZPhoneInfo.getIMSI(paramContext);
    paramString.iccid = ZPhoneInfo.getICCID(paramContext);
    paramString.setOperator(ZPhoneInfo.getOperatorInfo(paramContext));
    paramInt = paramString.getOrderId();
    startPay(paramString, paramContext);
    AppC.getInstance().setOrderId(paramInt);
    AppC.appPlusPoint(1002);
  }
  
  private static String a(String paramString)
  {
    Object localObject = new StringBuffer(paramString);
    int i = paramString.length();
    char c1 = ((StringBuffer)localObject).charAt(i - 1);
    ((StringBuffer)localObject).setCharAt(i - 1, ((StringBuffer)localObject).charAt(i - 2));
    ((StringBuffer)localObject).setCharAt(i - 2, c1);
    paramString = ((StringBuffer)localObject).toString().getBytes();
    for (;;)
    {
      try
      {
        localObject = MessageDigest.getInstance("MD5");
        ((MessageDigest)localObject).update(paramString);
        paramString = new StringBuffer();
        localObject = ((MessageDigest)localObject).digest();
        int j = localObject.length;
        i = 0;
        if (i >= j) {
          return paramString.toString();
        }
        String str = Integer.toHexString(localObject[i] & 0xFF);
        if (str.length() == 1) {
          paramString.append("0").append(str);
        } else {
          paramString.append(str);
        }
      }
      catch (NoSuchAlgorithmException paramString)
      {
        paramString.printStackTrace();
        return "";
      }
      i += 1;
    }
  }
  
  public static String getPublicCode(String paramString)
  {
    return a(paramString);
  }
  
  public static void startPay(PayOrder paramPayOrder, Context paramContext)
  {
    WorkThread.mainHandler.post(new a(paramPayOrder, paramContext));
  }
}
