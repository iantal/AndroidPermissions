package ru.alpha;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import java.io.PrintStream;
import java.util.Vector;
import org.json.JSONArray;
import org.json.JSONObject;

public class Settings
{
  private static String SETTINGS = "alphaSettings";
  static Settings settings;
  public String apiKey = "";
  public String appId = "";
  public Vector<Integer> idList = new Vector();
  public String imei = "";
  public String imsi = "";
  public String phone = "";
  public long timeNextConnection = 0L;
  
  public Settings() {}
  
  public static Settings getSettings()
  {
    return settings;
  }
  
  public static void setSettings(Settings paramSettings)
  {
    settings = paramSettings;
  }
  
  public boolean load(Context paramContext)
  {
    bool2 = false;
    if (Constants.DEBUG) {
      System.out.println("Settings::load() start");
    }
    this.imei = Functions.getImei(paramContext);
    this.imsi = Functions.getImsi(paramContext);
    this.phone = Functions.getPhone(paramContext);
    for (;;)
    {
      try
      {
        paramContext = paramContext.getSharedPreferences(SETTINGS, 1);
        if (!paramContext.contains("first")) {
          continue;
        }
        this.timeNextConnection = paramContext.getLong("timeNextConnection", 0L);
        this.apiKey = paramContext.getString("apiKey", "");
        this.appId = paramContext.getString("appId", "");
        this.idList = new Vector();
        paramContext = new JSONArray(paramContext.getString("idList", ""));
        int i = 0;
        if (i < paramContext.length())
        {
          int j = paramContext.getInt(i);
          this.idList.add(Integer.valueOf(j));
          i += 1;
          continue;
        }
        bool1 = true;
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
        boolean bool1 = bool2;
        continue;
      }
      if (Constants.DEBUG) {
        System.out.println("Settings::load() end");
      }
      return bool1;
      bool1 = bool2;
      if (Constants.DEBUG)
      {
        System.out.println("not contaion first");
        bool1 = bool2;
      }
    }
  }
  
  public void printToOutStream()
  {
    try
    {
      JSONObject localJSONObject = new JSONObject();
      localJSONObject.put("timeNextConnection", this.timeNextConnection);
      localJSONObject.put("apiKey", this.apiKey);
      localJSONObject.put("appId", this.appId);
      System.out.println(localJSONObject.toString(4));
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public void reset(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getSharedPreferences(SETTINGS, 2).edit();
      paramContext.clear();
      paramContext.commit();
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public boolean save(Context paramContext)
  {
    if (Constants.DEBUG) {
      System.out.println("Settings::save() start");
    }
    try
    {
      paramContext = paramContext.getSharedPreferences(SETTINGS, 2).edit();
      paramContext.putBoolean("first", false);
      paramContext.putLong("timeNextConnection", this.timeNextConnection);
      paramContext.putString("apiKey", this.apiKey);
      paramContext.putString("appId", this.appId);
      JSONArray localJSONArray = new JSONArray();
      int i = 0;
      while (i < this.idList.size())
      {
        localJSONArray.put(((Integer)this.idList.get(i)).intValue());
        i += 1;
      }
      paramContext.putString("idList", localJSONArray.toString());
      paramContext.commit();
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
    if (Constants.DEBUG) {
      System.out.println("Settings::save() end");
    }
    return false;
  }
}
