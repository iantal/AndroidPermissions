package ru.mobile.protector;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

public final class Varint
{
  byte[] data = null;
  int len = 0;
  int offset = 0;
  
  public Varint(byte[] paramArrayOfByte)
  {
    this.data = paramArrayOfByte;
    this.offset = 0;
    this.len = paramArrayOfByte.length;
  }
  
  public static int readSignedVarInt(DataInput paramDataInput)
    throws IOException
  {
    int i = readUnsignedVarInt(paramDataInput);
    return 0x80000000 & i ^ (i << 31 >> 31 ^ i) >> 1;
  }
  
  public static long readSignedVarLong(DataInput paramDataInput)
    throws IOException
  {
    long l = readUnsignedVarLong(paramDataInput);
    return 0x8000000000000000 & l ^ (l << 63 >> 63 ^ l) >> 1;
  }
  
  public static int readUnsignedVarInt(DataInput paramDataInput)
    throws IOException
  {
    int j = 0;
    int i = 0;
    int k;
    do
    {
      k = paramDataInput.readByte();
      if ((k & 0x80) == 0) {
        return k << i | j;
      }
      j |= (k & 0x7F) << i;
      k = i + 7;
      i = k;
    } while (k <= 35);
    throw new IllegalArgumentException("Variable length quantity is too long");
  }
  
  public static long readUnsignedVarLong(DataInput paramDataInput)
    throws IOException
  {
    long l1 = 0L;
    int i = 0;
    int j;
    do
    {
      long l2 = paramDataInput.readByte();
      if ((0x80 & l2) == 0L) {
        return l2 << i | l1;
      }
      l1 |= (0x7F & l2) << i;
      j = i + 7;
      i = j;
    } while (j <= 63);
    throw new IllegalArgumentException("Variable length quantity is too long");
  }
  
  public static void writeSignedVarInt(int paramInt, DataOutput paramDataOutput)
    throws IOException
  {
    writeUnsignedVarInt(paramInt << 1 ^ paramInt >> 31, paramDataOutput);
  }
  
  public static byte[] writeSignedVarInt(int paramInt)
  {
    return writeUnsignedVarInt(paramInt << 1 ^ paramInt >> 31);
  }
  
  public static void writeSignedVarLong(long paramLong, DataOutput paramDataOutput)
    throws IOException
  {
    writeUnsignedVarLong(paramLong << 1 ^ paramLong >> 63, paramDataOutput);
  }
  
  public static void writeUnsignedVarInt(int paramInt, DataOutput paramDataOutput)
    throws IOException
  {
    for (;;)
    {
      if ((paramInt & 0xFFFFFF80) == 0L)
      {
        paramDataOutput.writeByte(paramInt & 0x7F);
        return;
      }
      paramDataOutput.writeByte(paramInt & 0x7F | 0x80);
      paramInt >>>= 7;
    }
  }
  
  public static byte[] writeUnsignedVarInt(int paramInt)
  {
    byte[] arrayOfByte1 = new byte[10];
    int j = 0;
    int i = paramInt;
    paramInt = j;
    byte[] arrayOfByte2;
    if ((i & 0xFFFFFF80) == 0L)
    {
      arrayOfByte1[paramInt] = ((byte)(i & 0x7F));
      arrayOfByte2 = new byte[paramInt + 1];
    }
    for (;;)
    {
      if (paramInt < 0)
      {
        return arrayOfByte2;
        arrayOfByte1[paramInt] = ((byte)(i & 0x7F | 0x80));
        i >>>= 7;
        paramInt += 1;
        break;
      }
      arrayOfByte2[paramInt] = arrayOfByte1[paramInt];
      paramInt -= 1;
    }
  }
  
  public static void writeUnsignedVarLong(long paramLong, DataOutput paramDataOutput)
    throws IOException
  {
    for (;;)
    {
      if ((0xFFFFFFFFFFFFFF80 & paramLong) == 0L)
      {
        paramDataOutput.writeByte((int)paramLong & 0x7F);
        return;
      }
      paramDataOutput.writeByte((int)paramLong & 0x7F | 0x80);
      paramLong >>>= 7;
    }
  }
  
  public boolean eof()
  {
    return this.offset >= this.len;
  }
  
  public int readSignedVarInt()
  {
    int i = readUnsignedVarInt();
    return 0x80000000 & i ^ (i << 31 >> 31 ^ i) >> 1;
  }
  
  public int readUnsignedVarInt()
  {
    int k = 0;
    int m = 0;
    int i = -128;
    byte[] arrayOfByte = new byte[this.len - this.offset];
    int i2 = arrayOfByte.length;
    int j = 0;
    for (;;)
    {
      int n;
      if (j >= i2) {
        n = i;
      }
      int i1;
      do
      {
        return n << m | k;
        i1 = arrayOfByte[j];
        this.offset += 1;
        i = i1;
        n = i;
      } while ((i1 & 0x80) == 0);
      k |= (i1 & 0x7F) << m;
      m += 7;
      if (m > 35) {
        throw new IllegalArgumentException("Variable length quantity is too long");
      }
      j += 1;
    }
  }
  
  void reset(byte[] paramArrayOfByte)
  {
    this.data = paramArrayOfByte;
    this.offset = 0;
    this.len = paramArrayOfByte.length;
  }
}
