package pdftron.PDF.OCG;

import pdftron.Common.PDFNetException;
import pdftron.PDF.PDFDoc;
import pdftron.SDF.Obj;

public class OCMD
{
  public static final int e_AllOff = 3;
  public static final int e_AllOn = 0;
  public static final int e_AnyOff = 2;
  public static final int e_AnyOn = 1;
  private long a;
  private Object b;
  
  private OCMD(long paramLong, Object paramObject)
  {
    this.a = paramLong;
    this.b = paramObject;
  }
  
  public OCMD(Obj paramObj)
  {
    this.a = paramObj.__GetHandle();
    this.b = paramObj.__GetRefHandle();
  }
  
  private static native long Create(long paramLong1, long paramLong2, int paramInt);
  
  private static native long GetOCGs(long paramLong);
  
  private static native long GetVisibilityExpression(long paramLong);
  
  private static native int GetVisibilityPolicy(long paramLong);
  
  private static native boolean IsValid(long paramLong);
  
  private static native void SetVisibilityPolicy(long paramLong, int paramInt);
  
  public static OCMD __Create(long paramLong, Object paramObject)
  {
    return new OCMD(paramLong, paramObject);
  }
  
  public static OCMD create(PDFDoc paramPDFDoc, Obj paramObj, int paramInt)
    throws PDFNetException
  {
    return new OCMD(Create(paramPDFDoc.__GetHandle(), paramObj.__GetHandle(), paramInt), paramPDFDoc);
  }
  
  public Obj getOCGs()
    throws PDFNetException
  {
    return Obj.__Create(GetOCGs(this.a), this.b);
  }
  
  public Obj getSDFObj()
    throws PDFNetException
  {
    return Obj.__Create(this.a, this.b);
  }
  
  public Obj getVisibilityExpression()
    throws PDFNetException
  {
    return Obj.__Create(GetVisibilityExpression(this.a), this.b);
  }
  
  public int getVisibilityPolicy()
    throws PDFNetException
  {
    return GetVisibilityPolicy(this.a);
  }
  
  public boolean isValid()
    throws PDFNetException
  {
    return IsValid(this.a);
  }
  
  public void setVisibilityPolicy(int paramInt)
    throws PDFNetException
  {
    SetVisibilityPolicy(this.a, paramInt);
  }
}
