package pdftron.PDF;

import pdftron.Common.PDFNetException;
import pdftron.SDF.Obj;

public class Destination
{
  public static final int e_Fit = 1;
  public static final int e_FitB = 5;
  public static final int e_FitBH = 6;
  public static final int e_FitBV = 7;
  public static final int e_FitH = 2;
  public static final int e_FitR = 4;
  public static final int e_FitV = 3;
  public static final int e_XYZ = 0;
  long a;
  Object b;
  
  Destination(long paramLong, Object paramObject)
  {
    this.a = paramLong;
    this.b = paramObject;
  }
  
  public Destination(Obj paramObj)
  {
    this.a = Create(paramObj.__GetHandle());
    this.b = paramObj.__GetRefHandle();
  }
  
  private static native long Create(long paramLong);
  
  private static native long CreateFit(long paramLong);
  
  private static native long CreateFitB(long paramLong);
  
  private static native long CreateFitBH(long paramLong, double paramDouble);
  
  private static native long CreateFitBV(long paramLong, double paramDouble);
  
  private static native long CreateFitH(long paramLong, double paramDouble);
  
  private static native long CreateFitR(long paramLong, double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4);
  
  private static native long CreateFitV(long paramLong, double paramDouble);
  
  private static native long CreateXYZ(long paramLong, double paramDouble1, double paramDouble2, double paramDouble3);
  
  private static native long GetExplicitDestObj(long paramLong);
  
  private static native int GetFitType(long paramLong);
  
  private static native long GetPage(long paramLong);
  
  private static native boolean IsValid(long paramLong);
  
  private static native void SetPage(long paramLong1, long paramLong2);
  
  public static Destination createFit(Page paramPage)
    throws PDFNetException
  {
    return new Destination(CreateFit(paramPage.a), paramPage.b);
  }
  
  public static Destination createFitB(Page paramPage)
    throws PDFNetException
  {
    return new Destination(CreateFitB(paramPage.a), paramPage.b);
  }
  
  public static Destination createFitBH(Page paramPage, double paramDouble)
    throws PDFNetException
  {
    return new Destination(CreateFitBH(paramPage.a, paramDouble), paramPage.b);
  }
  
  public static Destination createFitBV(Page paramPage, double paramDouble)
    throws PDFNetException
  {
    return new Destination(CreateFitBV(paramPage.a, paramDouble), paramPage.b);
  }
  
  public static Destination createFitH(Page paramPage, double paramDouble)
    throws PDFNetException
  {
    return new Destination(CreateFitH(paramPage.a, paramDouble), paramPage.b);
  }
  
  public static Destination createFitR(Page paramPage, double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4)
    throws PDFNetException
  {
    return new Destination(CreateFitR(paramPage.a, paramDouble1, paramDouble2, paramDouble3, paramDouble4), paramPage.b);
  }
  
  public static Destination createFitV(Page paramPage, double paramDouble)
    throws PDFNetException
  {
    return new Destination(CreateFitV(paramPage.a, paramDouble), paramPage.b);
  }
  
  public static Destination createXYZ(Page paramPage, double paramDouble1, double paramDouble2, double paramDouble3)
    throws PDFNetException
  {
    return new Destination(CreateXYZ(paramPage.a, paramDouble1, paramDouble2, paramDouble3), paramPage.b);
  }
  
  public Obj getExplicitDestObj()
    throws PDFNetException
  {
    return Obj.__Create(GetExplicitDestObj(this.a), this.b);
  }
  
  public int getFitType()
    throws PDFNetException
  {
    return GetFitType(this.a);
  }
  
  public Page getPage()
    throws PDFNetException
  {
    return new Page(GetPage(this.a), this.b);
  }
  
  public Obj getSDFObj()
  {
    return Obj.__Create(this.a, this.b);
  }
  
  public boolean isValid()
    throws PDFNetException
  {
    return IsValid(this.a);
  }
  
  public void setPage(Page paramPage)
    throws PDFNetException
  {
    SetPage(this.a, paramPage.a);
  }
}
