package pdftron.PDF.Tools;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.os.SystemClock;
import android.text.InputFilter.LengthFilter;
import android.text.method.PasswordTransformationMethod;
import android.widget.EditText;
import pdftron.PDF.Annot;
import pdftron.PDF.Annots.Widget;
import pdftron.PDF.Field;
import pdftron.PDF.PDFViewCtrl;

final class h
  extends AlertDialog
{
  private PDFViewCtrl a;
  private Annot b;
  private int c;
  private Field d;
  private EditText e;
  
  public h(PDFViewCtrl paramPDFViewCtrl, Annot paramAnnot, int paramInt)
  {
    super(paramPDFViewCtrl.getContext());
    this.a = paramPDFViewCtrl;
    this.b = paramAnnot;
    this.c = paramInt;
    this.d = null;
    try
    {
      this.d = new Widget(this.b).getField();
      if ((paramPDFViewCtrl == null) || (paramAnnot == null) || (!this.d.isValid()))
      {
        dismiss();
        return;
      }
    }
    catch (Exception paramPDFViewCtrl)
    {
      dismiss();
      return;
    }
    setTitle("Text Field Content");
    this.e = new EditText(this.a.getContext());
    setView(this.e);
    for (;;)
    {
      try
      {
        boolean bool2 = this.d.getFlag(7);
        paramPDFViewCtrl = this.e;
        if (!bool2) {
          bool1 = true;
        }
        paramPDFViewCtrl.setSingleLine(bool1);
        paramInt = this.d.getJustification();
        if (paramInt == 0)
        {
          this.e.setGravity(19);
          if (this.d.getFlag(8)) {
            this.e.setTransformationMethod(new PasswordTransformationMethod());
          }
          paramPDFViewCtrl = this.d.getValueAsString();
          this.e.setText(paramPDFViewCtrl);
          paramInt = this.d.getMaxLen();
          if (paramInt >= 0)
          {
            paramPDFViewCtrl = new InputFilter.LengthFilter(paramInt);
            this.e.setFilters(new InputFilter.LengthFilter[] { paramPDFViewCtrl });
          }
          setButton("OK", new DialogInterface.OnClickListener()
          {
            public final void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
            {
              paramAnonymousDialogInterface = h.a(h.this).getText().toString();
              try
              {
                h.b(h.this).lockDoc(true);
                h.c(h.this).setValue(paramAnonymousDialogInterface);
                h.c(h.this).eraseAppearance();
                h.c(h.this).refreshAppearance();
                h.b(h.this).update(h.d(h.this), h.e(h.this));
                h.b(h.this).unlockDoc();
              }
              catch (Exception paramAnonymousDialogInterface)
              {
                for (;;)
                {
                  long l;
                  paramAnonymousDialogInterface = paramAnonymousDialogInterface;
                  h.b(h.this).unlockDoc();
                }
              }
              finally
              {
                paramAnonymousDialogInterface = finally;
                h.b(h.this).unlockDoc();
                throw paramAnonymousDialogInterface;
              }
              l = SystemClock.uptimeMillis();
              while ((!h.b(h.this).isFinishedRendering()) && (SystemClock.uptimeMillis() - l < 1500L)) {}
            }
          });
          setButton2("Cancel", new DialogInterface.OnClickListener()
          {
            public final void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt) {}
          });
          return;
        }
        if (paramInt == 1)
        {
          this.e.setGravity(17);
          continue;
        }
        if (paramInt != 2) {
          continue;
        }
      }
      catch (Exception paramPDFViewCtrl)
      {
        dismiss();
        return;
      }
      this.e.setGravity(21);
    }
  }
}
