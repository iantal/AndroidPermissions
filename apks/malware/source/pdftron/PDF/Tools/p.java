package pdftron.PDF.Tools;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.LinearGradient;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.graphics.Path;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.Shader;
import android.graphics.Shader.TileMode;
import android.graphics.drawable.BitmapDrawable;
import android.os.Build.VERSION;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.view.WindowManager;
import android.widget.PopupWindow;
import android.widget.PopupWindow.OnDismissListener;
import java.util.ArrayList;
import java.util.List;

final class p
  extends PopupWindow
{
  private View a;
  private int b;
  private int c;
  private int d;
  private int e;
  private a f;
  private WindowManager g;
  private ArrayList<String> h;
  private int i = -1;
  private boolean j;
  
  public p(View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4, List<String> paramList, PopupWindow.OnDismissListener paramOnDismissListener, boolean paramBoolean)
  {
    super(paramView.getContext());
    this.a = paramView;
    this.b = paramInt2;
    this.c = paramInt1;
    this.d = paramInt4;
    this.e = paramInt3;
    this.h = new ArrayList(paramList);
    this.j = false;
    if ((Build.VERSION.SDK_INT < 14) && (paramBoolean)) {
      this.j = true;
    }
    setBackgroundDrawable(new BitmapDrawable());
    setWidth(-2);
    setHeight(-2);
    setTouchable(true);
    setOutsideTouchable(true);
    setAnimationStyle(16973826);
    setOnDismissListener(paramOnDismissListener);
    this.g = ((WindowManager)paramView.getContext().getSystemService("window"));
    this.f = new a(paramView.getContext(), this.h);
    setContentView(this.f);
    this.f.setLayoutParams(new ViewGroup.LayoutParams(-2, -2));
    this.f.measure(-2, -2);
  }
  
  public final void a()
  {
    Object localObject = new int[2];
    localObject[0] = this.b;
    localObject[1] = this.c;
    localObject = new Rect(localObject[0], localObject[1], localObject[0] + (this.d - this.b), localObject[1] + (this.e - this.c));
    int i3 = this.g.getDefaultDisplay().getWidth();
    int i4 = this.g.getDefaultDisplay().getHeight();
    int i7 = this.f.getMeasuredWidth();
    int i6 = this.f.getMeasuredHeight();
    int n;
    int i1;
    label137:
    int i2;
    label148:
    int m;
    label161:
    int i5;
    int i8;
    int k;
    if (((Rect)localObject).left < 0)
    {
      n = 0;
      if (((Rect)localObject).right <= i3) {
        break label306;
      }
      i1 = i3;
      if (((Rect)localObject).top >= 0) {
        break label316;
      }
      i2 = 0;
      if (((Rect)localObject).bottom <= i4) {
        break label326;
      }
      m = i4;
      if (i3 <= i7) {
        break label378;
      }
      i5 = (i1 - n) / 2 + n - i7 / 2;
      i8 = i5 + i7;
      if (i5 >= 0)
      {
        k = i5;
        if (i8 <= i3) {}
      }
      else
      {
        if (i5 >= 0) {
          break label335;
        }
        k = 0;
      }
    }
    for (;;)
    {
      label214:
      boolean bool;
      if (i4 > i6)
      {
        i2 -= i6;
        if (i2 < 0)
        {
          i2 = m;
          i3 = m + i6;
          bool = false;
          m = i2;
          label248:
          if (i3 > i4)
          {
            m = i4 / 2;
            bool = true;
          }
        }
      }
      for (;;)
      {
        float f1 = (n + i1) / 2 - k;
        this.f.a(f1, bool);
        showAtLocation(this.a, 0, k, m);
        return;
        n = ((Rect)localObject).left;
        break;
        label306:
        i1 = ((Rect)localObject).right;
        break label137;
        label316:
        i2 = ((Rect)localObject).top;
        break label148;
        label326:
        m = ((Rect)localObject).bottom;
        break label161;
        label335:
        k = i5;
        if (i8 <= i3) {
          break label214;
        }
        k = i3 - i7;
        break label214;
        i3 = i2 + i6;
        bool = true;
        m = i2;
        break label248;
        bool = true;
        m = 0;
      }
      label378:
      k = 0;
    }
  }
  
  public final int b()
  {
    return this.f.a();
  }
  
  public final String c()
  {
    if (this.h != null)
    {
      int k = this.f.a();
      return (String)this.h.get(k);
    }
    return null;
  }
  
  final class a
    extends View
  {
    private Context a;
    private boolean b;
    private float c;
    private a[] d;
    private float e;
    private float f;
    private float g;
    private float h;
    private float i;
    private float j;
    private float k;
    private float l;
    private float m;
    private Paint n;
    private RectF o;
    private float p;
    private int q;
    private int r;
    
    public a(ArrayList<String> paramArrayList)
    {
      super();
      this.a = paramArrayList;
      this.q = 0;
      this.r = 0;
      float f1 = 1.0F;
      this$1 = this.a.getResources().getDisplayMetrics();
      if (Math.min(p.this.widthPixels, p.this.heightPixels) <= 500) {
        f1 = 0.75F;
      }
      this$1 = this.a;
      this.p = a(15.0F * f1);
      this$1 = this.a;
      this.j = a(10.0F * f1);
      this$1 = this.a;
      this.e = a(16.0F * f1);
      this$1 = this.a;
      this.f = a(22.0F * f1);
      this$1 = this.a;
      this.i = a(12.0F * f1);
      this$1 = this.a;
      this.g = a(12.0F * f1);
      this$1 = this.a;
      this.h = a(4.0F * f1);
      this$1 = this.a;
      this.m = a(f1 * 5.0F);
      this$1 = this.a;
      this.k = a(1.0F);
      this$1 = this.a;
      this.l = a(1.0F);
      this.n = new Paint();
      this.n.setAntiAlias(true);
      this.n.setTextSize(this.p);
      Object localObject;
      int i2 = localObject.size();
      if (i2 > 0)
      {
        this.d = new a[i2];
        float f2 = this.e;
        float f5 = this.f;
        float f6 = f5 + 3.0F * this.p;
        this.o = new RectF(f2, f5, f2, f6);
        int i1 = 0;
        f1 = 0.0F;
        while (i1 < i2)
        {
          this$1 = new a();
          p.this.a((String)localObject.get(i1));
          float f7 = this.n.measureText((String)localObject.get(i1));
          float f4 = this.g * 2.0F + f7;
          float f3 = f4;
          if (f4 < 6.0F * this.j) {
            f3 = 6.0F * this.j;
          }
          f3 = f2 + f3;
          paramArrayList = new RectF(f2, f5, f3, f6);
          p.this.a(paramArrayList);
          p.this.a(f7);
          boolean bool2 = false;
          boolean bool4 = false;
          boolean bool3 = false;
          boolean bool1 = false;
          if (i1 == 0)
          {
            bool2 = true;
            bool1 = true;
          }
          if (i1 == i2 - 1)
          {
            bool4 = true;
            bool3 = true;
          }
          p.this.a(bool2, bool4, bool3, bool1);
          this.d[i1] = p.this;
          f2 = paramArrayList.width();
          this.o.right = f3;
          i1 += 1;
          f1 += f2;
          f2 = f3;
        }
        this.q = ((int)(2.0F * this.e + f1 + 0.5F));
        this.r = ((int)(2.0F * this.f + this.d[0].c().height() + 0.5F));
      }
    }
    
    private float a(float paramFloat)
    {
      return this.a.getResources().getDisplayMetrics().density * paramFloat;
    }
    
    private static Path a(RectF paramRectF, float paramFloat1, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4, boolean paramBoolean5, boolean paramBoolean6, float paramFloat2, float paramFloat3)
    {
      float f1 = paramRectF.top;
      float f2 = paramRectF.left;
      float f3 = paramRectF.width();
      float f4 = paramRectF.height();
      paramRectF = new Path();
      paramRectF.moveTo(f2 + paramFloat1, f1);
      if ((paramBoolean5) && (!paramBoolean6))
      {
        paramRectF.rLineTo(paramFloat2 - f2 - paramFloat1 - paramFloat3, 0.0F);
        paramRectF.rLineTo(paramFloat3, -paramFloat3);
        paramRectF.rLineTo(paramFloat3, paramFloat3);
        paramRectF.rLineTo(f2 + f3 - paramFloat1 - paramFloat2 - paramFloat3, 0.0F);
        if (!paramBoolean2) {
          break label263;
        }
        paramRectF.rQuadTo(paramFloat1, 0.0F, paramFloat1, paramFloat1);
        label114:
        paramRectF.rLineTo(0.0F, f4 - 2.0F * paramFloat1);
        if (!paramBoolean3) {
          break label278;
        }
        paramRectF.rQuadTo(0.0F, paramFloat1, -paramFloat1, paramFloat1);
        label139:
        if ((!paramBoolean5) || (!paramBoolean6)) {
          break label294;
        }
        paramRectF.rLineTo(paramFloat2 - (f2 + f3) + paramFloat1 + paramFloat3, 0.0F);
        paramRectF.rLineTo(-paramFloat3, paramFloat3);
        paramRectF.rLineTo(-paramFloat3, -paramFloat3);
        paramRectF.rLineTo(f2 + paramFloat1 - paramFloat2 + paramFloat3, 0.0F);
        label201:
        if (!paramBoolean4) {
          break label309;
        }
        paramRectF.rQuadTo(-paramFloat1, 0.0F, -paramFloat1, -paramFloat1);
        label217:
        paramRectF.rLineTo(0.0F, -(f4 - 2.0F * paramFloat1));
        if (!paramBoolean1) {
          break label326;
        }
        paramRectF.rQuadTo(0.0F, -paramFloat1, paramFloat1, -paramFloat1);
      }
      for (;;)
      {
        paramRectF.close();
        return paramRectF;
        paramRectF.rLineTo(f3 - 2.0F * paramFloat1, 0.0F);
        break;
        label263:
        paramRectF.rLineTo(paramFloat1, 0.0F);
        paramRectF.rLineTo(0.0F, paramFloat1);
        break label114;
        label278:
        paramRectF.rLineTo(0.0F, paramFloat1);
        paramRectF.rLineTo(-paramFloat1, 0.0F);
        break label139;
        label294:
        paramRectF.rLineTo(-(f3 - 2.0F * paramFloat1), 0.0F);
        break label201;
        label309:
        paramRectF.rLineTo(-paramFloat1, 0.0F);
        paramRectF.rLineTo(0.0F, -paramFloat1);
        break label217;
        label326:
        paramRectF.rLineTo(0.0F, -paramFloat1);
        paramRectF.rLineTo(paramFloat1, 0.0F);
      }
    }
    
    public final int a()
    {
      int i2 = this.d.length;
      int i1 = 0;
      while (i1 < i2)
      {
        if (this.d[i1].a()) {
          return i1;
        }
        i1 += 1;
      }
      return -1;
    }
    
    public final void a(float paramFloat, boolean paramBoolean)
    {
      float f1 = paramFloat;
      if (paramFloat < this.j * 4.0F) {
        f1 = 4.0F * this.j;
      }
      paramFloat = f1;
      if (f1 > this.q - this.j * 4.0F) {
        paramFloat = this.q - this.j * 4.0F;
      }
      this.c = paramFloat;
      this.b = paramBoolean;
    }
    
    protected final void onDraw(Canvas paramCanvas)
    {
      Object localObject1 = a(this.o, this.j, true, true, true, true, true, this.b, this.c, this.i);
      Object localObject2 = new LinearGradient(0.0F, this.o.top, 0.0F, this.o.bottom, -8355712, -16777216, Shader.TileMode.CLAMP);
      this.n.setStyle(Paint.Style.FILL);
      this.n.setShader((Shader)localObject2);
      if (!p.b(p.this)) {
        this.n.setShadowLayer(this.m - 1.0F, 0.0F, this.m / 2.0F, -16777216);
      }
      paramCanvas.drawPath((Path)localObject1, this.n);
      this.n.setShader(null);
      this.n.clearShadowLayer();
      this.n.setFakeBoldText(true);
      this.n.setStyle(Paint.Style.STROKE);
      this.n.setStrokeWidth(0.5F);
      this.n.setColor(-16777216);
      int i2;
      float f1;
      float f2;
      int i1;
      label249:
      RectF localRectF;
      if (p.b(p.this))
      {
        localObject2 = new Path();
        ((Path)localObject2).addPath((Path)localObject1);
        paramCanvas.drawPath((Path)localObject2, this.n);
        this.n.setStrokeWidth(this.l);
        i2 = this.d.length;
        f1 = this.r / 2;
        f2 = this.n.descent();
        i1 = 0;
        if (i1 >= i2) {
          return;
        }
        localObject1 = this.d[i1];
        localObject2 = ((a)localObject1).c();
        this.n.setStyle(Paint.Style.FILL);
        if (((a)localObject1).a())
        {
          localRectF = new RectF(((RectF)localObject2).left + this.k, ((RectF)localObject2).top + this.k, ((RectF)localObject2).right - this.k, ((RectF)localObject2).bottom - this.k);
          this.n.setColor(Color.rgb(255, 175, 0));
          boolean bool1 = ((a)localObject1).e();
          boolean bool2 = ((a)localObject1).f();
          boolean bool3 = ((a)localObject1).g();
          boolean bool4 = ((a)localObject1).h();
          if ((!bool1) && (!bool2) && (!bool3) && (!bool4)) {
            break label668;
          }
          paramCanvas.drawPath(a(localRectF, this.j, bool1, bool2, bool3, bool4, false, false, 0.0F, 0.0F), this.n);
        }
      }
      for (;;)
      {
        this.n.setColor(-1);
        float f3 = ((RectF)localObject2).left;
        float f4 = (((RectF)localObject2).width() - ((a)localObject1).d()) / 2.0F;
        paramCanvas.drawText(((a)localObject1).b(), f3 + f4, f1 + f2, this.n);
        if (i1 != i2 - 1)
        {
          this.n.setStyle(Paint.Style.STROKE);
          f3 = ((RectF)localObject2).right;
          this.n.setColor(-16777216);
          f4 = this.k / 2.0F;
          float f5 = ((RectF)localObject2).top;
          paramCanvas.drawLine(f3 - f4, this.h + f5, f3 - this.k / 2.0F, ((RectF)localObject2).bottom - this.h, this.n);
          this.n.setColor(Color.rgb(200, 200, 200));
          f4 = this.k / 2.0F;
          f5 = ((RectF)localObject2).top;
          paramCanvas.drawLine(f3 + f4, this.h + f5, f3 + this.k / 2.0F, ((RectF)localObject2).bottom - this.h, this.n);
        }
        i1 += 1;
        break label249;
        paramCanvas.drawPath((Path)localObject1, this.n);
        break;
        label668:
        paramCanvas.drawRect(localRectF, this.n);
      }
    }
    
    protected final void onMeasure(int paramInt1, int paramInt2)
    {
      setMeasuredDimension(this.q, this.r);
    }
    
    public final boolean onTouchEvent(MotionEvent paramMotionEvent)
    {
      float f1 = paramMotionEvent.getX();
      float f2 = paramMotionEvent.getY();
      int i2 = this.d.length;
      int i1 = 0;
      if (i1 < i2) {
        if (!this.d[i1].a(f1, f2)) {}
      }
      for (;;)
      {
        switch (paramMotionEvent.getAction())
        {
        default: 
          if ((p.a(p.this) >= 0) && (i1 == p.a(p.this))) {
            this.d[i1].a(true);
          }
          break;
        }
        for (;;)
        {
          invalidate();
          return true;
          i1 += 1;
          break;
          if (i1 >= 0)
          {
            p.a(p.this, i1);
            this.d[p.a(p.this)].a(true);
          }
          invalidate();
          return true;
          if ((p.a(p.this) >= 0) && (i1 == p.a(p.this)))
          {
            p.this.dismiss();
            return true;
          }
          invalidate();
          return true;
          if (p.a(p.this) >= 0) {
            this.d[p.a(p.this)].a(false);
          }
        }
        i1 = -1;
      }
    }
    
    final class a
    {
      private RectF a;
      private String b;
      private boolean c = false;
      private float d;
      private boolean e;
      private boolean f;
      private boolean g;
      private boolean h;
      
      public a() {}
      
      public final void a(float paramFloat)
      {
        this.d = paramFloat;
      }
      
      public final void a(RectF paramRectF)
      {
        this.a = paramRectF;
      }
      
      public final void a(String paramString)
      {
        this.b = paramString;
      }
      
      public final void a(boolean paramBoolean)
      {
        this.c = paramBoolean;
      }
      
      public final void a(boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
      {
        this.e = paramBoolean1;
        this.f = paramBoolean2;
        this.g = paramBoolean3;
        this.h = paramBoolean4;
      }
      
      public final boolean a()
      {
        return this.c;
      }
      
      public final boolean a(float paramFloat1, float paramFloat2)
      {
        return this.a.contains(paramFloat1, paramFloat2);
      }
      
      public final String b()
      {
        return this.b;
      }
      
      public final RectF c()
      {
        return this.a;
      }
      
      public final float d()
      {
        return this.d;
      }
      
      public final boolean e()
      {
        return this.e;
      }
      
      public final boolean f()
      {
        return this.f;
      }
      
      public final boolean g()
      {
        return this.g;
      }
      
      public final boolean h()
      {
        return this.h;
      }
    }
  }
}
