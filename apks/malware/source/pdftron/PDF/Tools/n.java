package pdftron.PDF.Tools;

import android.content.Context;
import android.content.Intent;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.net.Uri;
import android.view.MotionEvent;
import pdftron.PDF.Action;
import pdftron.PDF.Annots.Link;
import pdftron.PDF.PDFViewCtrl;
import pdftron.PDF.Point;
import pdftron.PDF.QuadPoint;
import pdftron.SDF.Obj;

final class n
  extends u
{
  private Link a;
  private Paint b = new Paint();
  
  public n(PDFViewCtrl paramPDFViewCtrl)
  {
    super(paramPDFViewCtrl);
    this.b.setAntiAlias(true);
    this.b.setColor(Color.rgb(227, 112, 20));
  }
  
  public final int getMode()
  {
    return 9;
  }
  
  public final void onDraw(Canvas paramCanvas, Matrix paramMatrix)
  {
    try
    {
      int j = this.a.getQuadPointCount();
      float f1 = this.i.getScrollX();
      float f2 = this.i.getScrollY();
      int i = 0;
      while (i < j)
      {
        paramMatrix = this.a.getQuadPoint(i);
        float f3 = (float)Math.min(Math.min(Math.min(paramMatrix.p1.x, paramMatrix.p2.x), paramMatrix.p3.x), paramMatrix.p4.x);
        float f5 = (float)Math.min(Math.min(Math.min(paramMatrix.p1.y, paramMatrix.p2.y), paramMatrix.p3.y), paramMatrix.p4.y);
        float f6 = (float)Math.max(Math.max(Math.max(paramMatrix.p1.x, paramMatrix.p2.x), paramMatrix.p3.x), paramMatrix.p4.x);
        float f4 = (float)Math.max(Math.max(Math.max(paramMatrix.p1.y, paramMatrix.p2.y), paramMatrix.p3.y), paramMatrix.p4.y);
        paramMatrix = this.i.convPagePtToClientPt(f3, f4, this.l);
        f3 = (float)paramMatrix[0] + f1;
        f4 = (float)paramMatrix[1] + f2;
        paramMatrix = this.i.convPagePtToClientPt(f6, f5, this.l);
        f5 = (float)paramMatrix[0] + f1;
        f6 = (float)paramMatrix[1] + f2;
        this.b.setStyle(Paint.Style.FILL);
        this.b.setAlpha(128);
        paramCanvas.drawRect(f3, f4, f5, f6, this.b);
        float f7 = Math.min(f5 - f3, f6 - f4);
        this.b.setStyle(Paint.Style.STROKE);
        this.b.setStrokeWidth(Math.max(f7 / 15.0F, 2.0F));
        this.b.setAlpha(255);
        paramCanvas.drawRect(f3, f4, f5, f6, this.b);
        i += 1;
      }
      return;
    }
    catch (Exception paramCanvas) {}
  }
  
  public final boolean onLongPress(MotionEvent paramMotionEvent)
  {
    if (this.k != null) {}
    for (this.j = 9;; this.j = 1)
    {
      try
      {
        this.i.lockDoc(true);
        this.a = new Link(this.k);
        this.i.invalidate();
        this.i.unlockDoc();
      }
      catch (Exception paramMotionEvent)
      {
        for (;;)
        {
          paramMotionEvent = paramMotionEvent;
          this.i.unlockDoc();
        }
      }
      finally
      {
        paramMotionEvent = finally;
        this.i.unlockDoc();
        throw paramMotionEvent;
      }
      return false;
    }
  }
  
  /* Error */
  public final void onPostSingleTapConfirmed()
  {
    // Byte code:
    //   0: aload_0
    //   1: iconst_1
    //   2: putfield 145	pdftron/PDF/Tools/n:j	I
    //   5: aload_0
    //   6: getfield 42	pdftron/PDF/Tools/n:a	Lpdftron/PDF/Annots/Link;
    //   9: ifnull +89 -> 98
    //   12: aload_0
    //   13: getfield 51	pdftron/PDF/Tools/n:i	Lpdftron/PDF/PDFViewCtrl;
    //   16: iconst_1
    //   17: invokevirtual 148	pdftron/PDF/PDFViewCtrl:lockDoc	(Z)V
    //   20: aload_0
    //   21: getfield 42	pdftron/PDF/Tools/n:a	Lpdftron/PDF/Annots/Link;
    //   24: invokevirtual 162	pdftron/PDF/Annots/Link:getAction	()Lpdftron/PDF/Action;
    //   27: astore_2
    //   28: aload_2
    //   29: ifnull +62 -> 91
    //   32: aload_2
    //   33: invokevirtual 167	pdftron/PDF/Action:getType	()I
    //   36: istore_1
    //   37: iload_1
    //   38: iconst_5
    //   39: if_icmpne +60 -> 99
    //   42: aload_2
    //   43: invokevirtual 171	pdftron/PDF/Action:getSDFObj	()Lpdftron/SDF/Obj;
    //   46: ldc -83
    //   48: invokevirtual 179	pdftron/SDF/Obj:findObj	(Ljava/lang/String;)Lpdftron/SDF/Obj;
    //   51: astore_2
    //   52: aload_2
    //   53: ifnull +31 -> 84
    //   56: new 181	android/content/Intent
    //   59: dup
    //   60: ldc -73
    //   62: aload_2
    //   63: invokevirtual 187	pdftron/SDF/Obj:getAsPDFText	()Ljava/lang/String;
    //   66: invokestatic 193	android/net/Uri:parse	(Ljava/lang/String;)Landroid/net/Uri;
    //   69: invokespecial 196	android/content/Intent:<init>	(Ljava/lang/String;Landroid/net/Uri;)V
    //   72: astore_2
    //   73: aload_0
    //   74: getfield 51	pdftron/PDF/Tools/n:i	Lpdftron/PDF/PDFViewCtrl;
    //   77: invokevirtual 200	pdftron/PDF/PDFViewCtrl:getContext	()Landroid/content/Context;
    //   80: aload_2
    //   81: invokevirtual 206	android/content/Context:startActivity	(Landroid/content/Intent;)V
    //   84: aload_0
    //   85: getfield 51	pdftron/PDF/Tools/n:i	Lpdftron/PDF/PDFViewCtrl;
    //   88: invokevirtual 154	pdftron/PDF/PDFViewCtrl:invalidate	()V
    //   91: aload_0
    //   92: getfield 51	pdftron/PDF/Tools/n:i	Lpdftron/PDF/PDFViewCtrl;
    //   95: invokevirtual 157	pdftron/PDF/PDFViewCtrl:unlockDoc	()V
    //   98: return
    //   99: iload_1
    //   100: ifne -16 -> 84
    //   103: aload_0
    //   104: getfield 51	pdftron/PDF/Tools/n:i	Lpdftron/PDF/PDFViewCtrl;
    //   107: aload_2
    //   108: invokevirtual 210	pdftron/PDF/PDFViewCtrl:executeAction	(Lpdftron/PDF/Action;)V
    //   111: goto -27 -> 84
    //   114: astore_2
    //   115: aload_0
    //   116: getfield 51	pdftron/PDF/Tools/n:i	Lpdftron/PDF/PDFViewCtrl;
    //   119: invokevirtual 157	pdftron/PDF/PDFViewCtrl:unlockDoc	()V
    //   122: return
    //   123: astore_2
    //   124: aload_0
    //   125: getfield 51	pdftron/PDF/Tools/n:i	Lpdftron/PDF/PDFViewCtrl;
    //   128: invokevirtual 157	pdftron/PDF/PDFViewCtrl:unlockDoc	()V
    //   131: aload_2
    //   132: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	133	0	this	n
    //   36	64	1	i	int
    //   27	81	2	localObject1	Object
    //   114	1	2	localException	Exception
    //   123	9	2	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   12	28	114	java/lang/Exception
    //   32	37	114	java/lang/Exception
    //   42	52	114	java/lang/Exception
    //   56	84	114	java/lang/Exception
    //   84	91	114	java/lang/Exception
    //   103	111	114	java/lang/Exception
    //   12	28	123	finally
    //   32	37	123	finally
    //   42	52	123	finally
    //   56	84	123	finally
    //   84	91	123	finally
    //   103	111	123	finally
  }
  
  public final boolean onSingleTapConfirmed(MotionEvent paramMotionEvent)
  {
    if (this.k != null) {}
    for (this.j = 9;; this.j = 1)
    {
      try
      {
        this.i.lockDoc(true);
        this.a = new Link(this.k);
        this.i.invalidate();
        this.i.unlockDoc();
      }
      catch (Exception paramMotionEvent)
      {
        for (;;)
        {
          paramMotionEvent = paramMotionEvent;
          this.i.unlockDoc();
        }
      }
      finally
      {
        paramMotionEvent = finally;
        this.i.unlockDoc();
        throw paramMotionEvent;
      }
      return false;
    }
  }
  
  public final boolean onUp(MotionEvent paramMotionEvent, int paramInt)
  {
    this.j = 1;
    if (this.a != null) {}
    for (;;)
    {
      try
      {
        this.i.lockDoc(true);
        paramInt = (int)(paramMotionEvent.getX() + 0.5D);
        int i = (int)(paramMotionEvent.getY() + 0.5D);
        if (a(paramInt, i))
        {
          paramMotionEvent = this.a.getAction();
          paramInt = paramMotionEvent.getType();
          if (paramInt != 5) {
            continue;
          }
          paramMotionEvent = paramMotionEvent.getSDFObj().findObj("URI");
          if (paramMotionEvent != null)
          {
            paramMotionEvent = new Intent("android.intent.action.VIEW", Uri.parse(paramMotionEvent.getAsPDFText()));
            this.i.getContext().startActivity(paramMotionEvent);
          }
        }
        this.i.invalidate();
      }
      catch (Exception paramMotionEvent)
      {
        this.i.unlockDoc();
        continue;
      }
      finally
      {
        this.i.unlockDoc();
      }
      return false;
      if (paramInt == 0) {
        this.i.executeAction(paramMotionEvent);
      }
    }
  }
}
