package pdftron.PDF.Tools;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.graphics.RectF;
import android.os.Handler;
import android.util.DisplayMetrics;
import android.view.MotionEvent;
import android.view.View;
import android.widget.PopupWindow.OnDismissListener;
import java.util.LinkedList;
import java.util.List;
import pdftron.PDF.Annot;
import pdftron.PDF.PDFDoc;
import pdftron.PDF.PDFViewCtrl;
import pdftron.PDF.PDFViewCtrl.Tool;

abstract class u
  implements PDFViewCtrl.Tool
{
  private Paint a;
  private RectF b;
  private float c;
  private Matrix d;
  private Matrix e;
  private Handler f = new v(this);
  protected PDFViewCtrl i;
  protected int j;
  protected Annot k;
  protected int l;
  protected RectF m;
  protected p n;
  protected LinkedList<String> o;
  protected boolean p;
  protected boolean q;
  protected boolean r;
  protected float s;
  protected final float t;
  
  public u(PDFViewCtrl paramPDFViewCtrl)
  {
    this.i = paramPDFViewCtrl;
    this.j = 1;
    this.k = null;
    this.m = new RectF();
    this.p = false;
    this.q = false;
    this.s = 0.0F;
    this.r = false;
    this.b = new RectF();
    this.c = a(15.0F);
    this.t = a(50.0F);
    this.a = new Paint();
    this.a.setAntiAlias(true);
    this.a.setTextSize(this.c);
    this.a.setStyle(Paint.Style.FILL);
    this.d = new Matrix();
    this.e = new Matrix();
    this.i.setBuiltInPageSlidingEnabled(false);
  }
  
  protected final float a(float paramFloat)
  {
    return this.i.getContext().getResources().getDisplayMetrics().density * paramFloat;
  }
  
  /* Error */
  protected final RectF a(int paramInt)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 16
    //   3: aconst_null
    //   4: astore 17
    //   6: aconst_null
    //   7: astore 18
    //   9: iload_1
    //   10: ifle +337 -> 347
    //   13: aload 17
    //   15: astore 16
    //   17: aload_0
    //   18: getfield 52	pdftron/PDF/Tools/u:i	Lpdftron/PDF/PDFViewCtrl;
    //   21: iconst_1
    //   22: invokevirtual 143	pdftron/PDF/PDFViewCtrl:lockDoc	(Z)V
    //   25: aload 17
    //   27: astore 16
    //   29: aload_0
    //   30: getfield 52	pdftron/PDF/Tools/u:i	Lpdftron/PDF/PDFViewCtrl;
    //   33: invokevirtual 147	pdftron/PDF/PDFViewCtrl:getDoc	()Lpdftron/PDF/PDFDoc;
    //   36: iload_1
    //   37: invokevirtual 153	pdftron/PDF/PDFDoc:getPage	(I)Lpdftron/PDF/Page;
    //   40: astore 19
    //   42: aload 18
    //   44: astore 16
    //   46: aload 19
    //   48: ifnull +292 -> 340
    //   51: aload 17
    //   53: astore 16
    //   55: new 58	android/graphics/RectF
    //   58: dup
    //   59: invokespecial 59	android/graphics/RectF:<init>	()V
    //   62: astore 18
    //   64: aload 19
    //   66: invokevirtual 159	pdftron/PDF/Page:getCropBox	()Lpdftron/PDF/Rect;
    //   69: astore 16
    //   71: aload 16
    //   73: invokevirtual 165	pdftron/PDF/Rect:getX1	()D
    //   76: dstore_2
    //   77: aload 16
    //   79: invokevirtual 168	pdftron/PDF/Rect:getY1	()D
    //   82: dstore 4
    //   84: aload 16
    //   86: invokevirtual 171	pdftron/PDF/Rect:getX2	()D
    //   89: dstore 6
    //   91: aload 16
    //   93: invokevirtual 174	pdftron/PDF/Rect:getY2	()D
    //   96: dstore 8
    //   98: aload_0
    //   99: getfield 52	pdftron/PDF/Tools/u:i	Lpdftron/PDF/PDFViewCtrl;
    //   102: dload_2
    //   103: dload 4
    //   105: iload_1
    //   106: invokevirtual 178	pdftron/PDF/PDFViewCtrl:convPagePtToClientPt	(DDI)[D
    //   109: astore 16
    //   111: aload_0
    //   112: getfield 52	pdftron/PDF/Tools/u:i	Lpdftron/PDF/PDFViewCtrl;
    //   115: dload 6
    //   117: dload 4
    //   119: iload_1
    //   120: invokevirtual 178	pdftron/PDF/PDFViewCtrl:convPagePtToClientPt	(DDI)[D
    //   123: astore 17
    //   125: aload_0
    //   126: getfield 52	pdftron/PDF/Tools/u:i	Lpdftron/PDF/PDFViewCtrl;
    //   129: dload 6
    //   131: dload 8
    //   133: iload_1
    //   134: invokevirtual 178	pdftron/PDF/PDFViewCtrl:convPagePtToClientPt	(DDI)[D
    //   137: astore 19
    //   139: aload_0
    //   140: getfield 52	pdftron/PDF/Tools/u:i	Lpdftron/PDF/PDFViewCtrl;
    //   143: dload_2
    //   144: dload 8
    //   146: iload_1
    //   147: invokevirtual 178	pdftron/PDF/PDFViewCtrl:convPagePtToClientPt	(DDI)[D
    //   150: astore 20
    //   152: aload 16
    //   154: iconst_0
    //   155: daload
    //   156: aload 17
    //   158: iconst_0
    //   159: daload
    //   160: invokestatic 184	java/lang/Math:min	(DD)D
    //   163: aload 19
    //   165: iconst_0
    //   166: daload
    //   167: invokestatic 184	java/lang/Math:min	(DD)D
    //   170: aload 20
    //   172: iconst_0
    //   173: daload
    //   174: invokestatic 184	java/lang/Math:min	(DD)D
    //   177: dstore_2
    //   178: aload 16
    //   180: iconst_0
    //   181: daload
    //   182: aload 17
    //   184: iconst_0
    //   185: daload
    //   186: invokestatic 187	java/lang/Math:max	(DD)D
    //   189: aload 19
    //   191: iconst_0
    //   192: daload
    //   193: invokestatic 187	java/lang/Math:max	(DD)D
    //   196: aload 20
    //   198: iconst_0
    //   199: daload
    //   200: invokestatic 187	java/lang/Math:max	(DD)D
    //   203: dstore 4
    //   205: aload 16
    //   207: iconst_1
    //   208: daload
    //   209: aload 17
    //   211: iconst_1
    //   212: daload
    //   213: invokestatic 184	java/lang/Math:min	(DD)D
    //   216: aload 19
    //   218: iconst_1
    //   219: daload
    //   220: invokestatic 184	java/lang/Math:min	(DD)D
    //   223: aload 20
    //   225: iconst_1
    //   226: daload
    //   227: invokestatic 184	java/lang/Math:min	(DD)D
    //   230: dstore 6
    //   232: aload 16
    //   234: iconst_1
    //   235: daload
    //   236: aload 17
    //   238: iconst_1
    //   239: daload
    //   240: invokestatic 187	java/lang/Math:max	(DD)D
    //   243: aload 19
    //   245: iconst_1
    //   246: daload
    //   247: invokestatic 187	java/lang/Math:max	(DD)D
    //   250: aload 20
    //   252: iconst_1
    //   253: daload
    //   254: invokestatic 187	java/lang/Math:max	(DD)D
    //   257: dstore 8
    //   259: aload_0
    //   260: getfield 52	pdftron/PDF/Tools/u:i	Lpdftron/PDF/PDFViewCtrl;
    //   263: invokevirtual 191	pdftron/PDF/PDFViewCtrl:getScrollX	()I
    //   266: i2f
    //   267: fstore 10
    //   269: aload_0
    //   270: getfield 52	pdftron/PDF/Tools/u:i	Lpdftron/PDF/PDFViewCtrl;
    //   273: invokevirtual 194	pdftron/PDF/PDFViewCtrl:getScrollY	()I
    //   276: i2f
    //   277: fstore 11
    //   279: new 58	android/graphics/RectF
    //   282: dup
    //   283: invokespecial 59	android/graphics/RectF:<init>	()V
    //   286: astore 17
    //   288: dload_2
    //   289: d2f
    //   290: fstore 12
    //   292: dload 6
    //   294: d2f
    //   295: fstore 13
    //   297: dload 4
    //   299: d2f
    //   300: fstore 14
    //   302: dload 8
    //   304: d2f
    //   305: fstore 15
    //   307: aload 17
    //   309: astore 16
    //   311: aload 17
    //   313: fload 12
    //   315: fload 10
    //   317: fadd
    //   318: fload 13
    //   320: fload 11
    //   322: fadd
    //   323: fload 14
    //   325: fload 10
    //   327: fadd
    //   328: fload 15
    //   330: fload 11
    //   332: fadd
    //   333: invokevirtual 198	android/graphics/RectF:set	(FFFF)V
    //   336: aload 17
    //   338: astore 16
    //   340: aload_0
    //   341: getfield 52	pdftron/PDF/Tools/u:i	Lpdftron/PDF/PDFViewCtrl;
    //   344: invokevirtual 201	pdftron/PDF/PDFViewCtrl:unlockDoc	()V
    //   347: aload 16
    //   349: areturn
    //   350: astore 17
    //   352: aload_0
    //   353: getfield 52	pdftron/PDF/Tools/u:i	Lpdftron/PDF/PDFViewCtrl;
    //   356: invokevirtual 201	pdftron/PDF/PDFViewCtrl:unlockDoc	()V
    //   359: aload 16
    //   361: areturn
    //   362: astore 16
    //   364: aload_0
    //   365: getfield 52	pdftron/PDF/Tools/u:i	Lpdftron/PDF/PDFViewCtrl;
    //   368: invokevirtual 201	pdftron/PDF/PDFViewCtrl:unlockDoc	()V
    //   371: aload 16
    //   373: athrow
    //   374: astore 16
    //   376: aload 18
    //   378: astore 16
    //   380: goto -28 -> 352
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	383	0	this	u
    //   0	383	1	paramInt	int
    //   76	213	2	d1	double
    //   82	216	4	d2	double
    //   89	204	6	d3	double
    //   96	207	8	d4	double
    //   267	59	10	f1	float
    //   277	54	11	f2	float
    //   290	24	12	f3	float
    //   295	24	13	f4	float
    //   300	24	14	f5	float
    //   305	24	15	f6	float
    //   1	359	16	localObject1	Object
    //   362	10	16	localObject2	Object
    //   374	1	16	localException1	Exception
    //   378	1	16	localObject3	Object
    //   4	333	17	localObject4	Object
    //   350	1	17	localException2	Exception
    //   7	370	18	localRectF	RectF
    //   40	204	19	localObject5	Object
    //   150	101	20	arrayOfDouble	double[]
    // Exception table:
    //   from	to	target	type
    //   17	25	350	java/lang/Exception
    //   29	42	350	java/lang/Exception
    //   55	64	350	java/lang/Exception
    //   311	336	350	java/lang/Exception
    //   17	25	362	finally
    //   29	42	362	finally
    //   55	64	362	finally
    //   64	288	362	finally
    //   311	336	362	finally
    //   64	288	374	java/lang/Exception
  }
  
  public void a()
  {
    if (this.r) {
      f();
    }
  }
  
  protected void a(int paramInt, String paramString) {}
  
  protected final boolean a(float paramFloat1, float paramFloat2)
  {
    if (this.k != null)
    {
      double[] arrayOfDouble = this.i.convClientPtToPagePt(paramFloat1, paramFloat2, this.l);
      if (this.m.contains((float)arrayOfDouble[0], (float)arrayOfDouble[1])) {
        return true;
      }
    }
    return false;
  }
  
  public final boolean a(List<String> paramList, RectF paramRectF)
  {
    if ((paramList.size() > 0) && (paramRectF != null))
    {
      if (this.n != null)
      {
        d();
        this.n = null;
      }
      if (new RectF(0.0F, 0.0F, this.i.getWidth(), this.i.getHeight()).intersect(paramRectF)) {}
    }
    else
    {
      return false;
    }
    int[] arrayOfInt = new int[2];
    this.i.getLocationOnScreen(arrayOfInt);
    View localView = new View(this.i.getContext());
    localView.setVisibility(4);
    int i1 = (int)paramRectF.top + arrayOfInt[1];
    int i2 = (int)paramRectF.left + arrayOfInt[0];
    int i3 = (int)paramRectF.right + arrayOfInt[0];
    int i4 = (int)paramRectF.bottom;
    i4 = arrayOfInt[1] + i4;
    localView.layout(i2, i1, i3, i4);
    this.n = new p(localView, i1, i2, i4, i3, paramList, new PopupWindow.OnDismissListener()
    {
      public final void onDismiss()
      {
        u.this.q = false;
        if (u.this.n != null)
        {
          int i = u.this.n.b();
          if (i >= 0) {
            u.this.a(i, u.this.n.c());
          }
        }
      }
    }, this.i.isHardwareAccelerated());
    this.n.a();
    this.q = true;
    return true;
  }
  
  public final void c()
  {
    this.p = true;
  }
  
  public final void d()
  {
    if (this.n != null)
    {
      this.q = false;
      this.n.dismiss();
    }
  }
  
  protected final boolean e()
  {
    return this.q;
  }
  
  protected final void f()
  {
    this.f.removeMessages(1);
    this.r = true;
    this.f.sendEmptyMessageDelayed(1, 3000L);
    this.i.invalidate();
  }
  
  protected final void g()
  {
    if (this.k != null) {
      this.m.set(0.0F, 0.0F, 0.0F, 0.0F);
    }
    try
    {
      pdftron.PDF.Rect localRect = this.k.getRect();
      this.m.set((float)localRect.getX1(), (float)localRect.getY1(), (float)localRect.getX2(), (float)localRect.getY2());
      return;
    }
    catch (Exception localException) {}
  }
  
  public abstract int getMode();
  
  public final int getNextToolMode()
  {
    return this.j;
  }
  
  protected final RectF h()
  {
    if (this.k != null)
    {
      double[] arrayOfDouble1 = this.i.convPagePtToClientPt(this.m.left, this.m.bottom, this.l);
      double[] arrayOfDouble2 = this.i.convPagePtToClientPt(this.m.right, this.m.top, this.l);
      return new RectF((float)arrayOfDouble1[0], (float)arrayOfDouble1[1], (float)arrayOfDouble2[0], (float)arrayOfDouble2[1]);
    }
    return null;
  }
  
  public void onClose()
  {
    d();
  }
  
  public void onCustom(Object paramObject) {}
  
  public void onDocumentDownloadEvent(int paramInt1, int paramInt2, int paramInt3, int paramInt4) {}
  
  public boolean onDoubleTap(MotionEvent paramMotionEvent)
  {
    f();
    return false;
  }
  
  public void onDoubleTapEnd(MotionEvent paramMotionEvent) {}
  
  public boolean onDown(MotionEvent paramMotionEvent)
  {
    return false;
  }
  
  public void onDraw(Canvas paramCanvas, Matrix paramMatrix)
  {
    int i4 = 0;
    int i5 = 0;
    int i1 = 0;
    int i6;
    int i7;
    int i8;
    int i2;
    int i3;
    if (this.r)
    {
      i6 = this.i.getWidth();
      i7 = this.i.getHeight();
      i8 = this.i.getCurrentPage();
      i2 = i4;
      i3 = i5;
    }
    try
    {
      if (!paramMatrix.isIdentity())
      {
        i2 = i4;
        i3 = i5;
        paramCanvas.save();
        i4 = 1;
        i5 = 1;
        i1 = 1;
        i2 = i4;
        i3 = i5;
        paramMatrix.invert(this.d);
        i2 = i4;
        i3 = i5;
        paramCanvas.getMatrix(this.e);
        i2 = i4;
        i3 = i5;
        this.e.postConcat(this.d);
        i2 = i4;
        i3 = i5;
        paramCanvas.setMatrix(this.e);
      }
      i2 = i1;
      i3 = i1;
      paramMatrix = new String();
      i2 = i1;
      i3 = i1;
      i4 = this.i.getDoc().getPageCount();
      i2 = i1;
      i3 = i1;
      paramMatrix = paramMatrix + i8 + " of " + i4;
      i2 = i1;
      i3 = i1;
      android.graphics.Rect localRect = new android.graphics.Rect();
      i2 = i1;
      i3 = i1;
      this.a.getTextBounds(paramMatrix, 0, paramMatrix.length(), localRect);
      i2 = i1;
      i3 = i1;
      float f1 = localRect.width();
      i2 = i1;
      i3 = i1;
      float f2 = localRect.height();
      i2 = i1;
      i3 = i1;
      float f3 = f2 / 1.5F;
      i2 = i1;
      i3 = i1;
      float f4 = i6 - f1 * 1.5F - f3 + this.i.getScrollX();
      i2 = i1;
      i3 = i1;
      float f5 = i7 + this.i.getScrollY() - this.s - 3.0F * f2;
      i2 = i1;
      i3 = i1;
      this.b.set(f4, f5, f1 + f4 + f3 * 2.0F, f5 + f2 + f3 * 2.0F);
      i2 = i1;
      i3 = i1;
      this.a.setColor(Color.rgb(75, 75, 75));
      i2 = i1;
      i3 = i1;
      this.a.setAlpha(200);
      i2 = i1;
      i3 = i1;
      paramCanvas.drawRoundRect(this.b, f3, f3, this.a);
      i2 = i1;
      i3 = i1;
      this.a.setAlpha(255);
      i2 = i1;
      i3 = i1;
      this.a.setColor(-1);
      i2 = i1;
      i3 = i1;
      paramCanvas.drawText(paramMatrix, f4 + f3, f5 + (f2 / 2.0F + f3 + this.a.descent()), this.a);
      return;
    }
    catch (Exception paramMatrix) {}finally
    {
      if (i3 != 0) {
        paramCanvas.restore();
      }
    }
  }
  
  public boolean onFlingStop()
  {
    return false;
  }
  
  public void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {}
  
  public boolean onLongPress(MotionEvent paramMotionEvent)
  {
    return false;
  }
  
  public boolean onMove(MotionEvent paramMotionEvent1, MotionEvent paramMotionEvent2, float paramFloat1, float paramFloat2)
  {
    f();
    return false;
  }
  
  public void onPageTurning(int paramInt1, int paramInt2) {}
  
  public void onPostSingleTapConfirmed() {}
  
  public boolean onScale(float paramFloat1, float paramFloat2)
  {
    return false;
  }
  
  public boolean onScaleBegin(float paramFloat1, float paramFloat2)
  {
    return false;
  }
  
  public boolean onScaleEnd(float paramFloat1, float paramFloat2)
  {
    f();
    return false;
  }
  
  public void onSetDoc() {}
  
  public boolean onShowPress(MotionEvent paramMotionEvent)
  {
    return false;
  }
  
  public boolean onSingleTapConfirmed(MotionEvent paramMotionEvent)
  {
    return false;
  }
  
  public boolean onSingleTapUp(MotionEvent paramMotionEvent)
  {
    return false;
  }
  
  public boolean onUp(MotionEvent paramMotionEvent, int paramInt)
  {
    this.f.sendEmptyMessageDelayed(1, 3000L);
    return false;
  }
}
