package pdftron.PDF;

import pdftron.Common.PDFNetException;
import pdftron.SDF.Obj;

public class Bookmark
{
  long a;
  private Object b;
  
  public Bookmark()
  {
    this.a = 0L;
    this.b = null;
  }
  
  Bookmark(long paramLong, Object paramObject)
  {
    this.a = paramLong;
    this.b = paramObject;
  }
  
  public Bookmark(Obj paramObj)
  {
    this.a = paramObj.__GetHandle();
    this.b = paramObj.__GetRefHandle();
  }
  
  private static native long AddChild(long paramLong, String paramString);
  
  private static native void AddChild(long paramLong1, long paramLong2);
  
  private static native long AddNext(long paramLong, String paramString);
  
  private static native void AddNext(long paramLong1, long paramLong2);
  
  private static native long AddPrev(long paramLong, String paramString);
  
  private static native void AddPrev(long paramLong1, long paramLong2);
  
  private static native long Create(long paramLong, String paramString);
  
  private static native void Delete(long paramLong);
  
  private static native long Find(long paramLong, String paramString);
  
  private static native long GetAction(long paramLong);
  
  private static native double[] GetColor(long paramLong);
  
  private static native long GetFirstChild(long paramLong);
  
  private static native int GetFlags(long paramLong);
  
  private static native int GetIndent(long paramLong);
  
  private static native long GetLastChild(long paramLong);
  
  private static native long GetNext(long paramLong);
  
  private static native int GetOpenCount(long paramLong);
  
  private static native long GetParent(long paramLong);
  
  private static native long GetPrev(long paramLong);
  
  private static native String GetTitle(long paramLong);
  
  private static native long GetTitleObj(long paramLong);
  
  private static native boolean HasChildren(long paramLong);
  
  private static native boolean IsOpen(long paramLong);
  
  private static native boolean IsValid(long paramLong);
  
  private static native void RemoveAction(long paramLong);
  
  private static native void SetAction(long paramLong1, long paramLong2);
  
  private static native void SetColor(long paramLong, double paramDouble1, double paramDouble2, double paramDouble3);
  
  private static native void SetFlags(long paramLong, int paramInt);
  
  private static native void SetOpen(long paramLong, boolean paramBoolean);
  
  private static native void SetTitle(long paramLong, String paramString);
  
  private static native void Unlink(long paramLong);
  
  public static Bookmark create(PDFDoc paramPDFDoc, String paramString)
    throws PDFNetException
  {
    return new Bookmark(Create(paramPDFDoc.__GetHandle(), paramString), paramPDFDoc);
  }
  
  public Bookmark addChild(String paramString)
    throws PDFNetException
  {
    return new Bookmark(AddChild(this.a, paramString), this.b);
  }
  
  public void addChild(Bookmark paramBookmark)
    throws PDFNetException
  {
    AddChild(this.a, paramBookmark.a);
  }
  
  public Bookmark addNext(String paramString)
    throws PDFNetException
  {
    return new Bookmark(AddNext(this.a, paramString), this.b);
  }
  
  public void addNext(Bookmark paramBookmark)
    throws PDFNetException
  {
    AddNext(this.a, paramBookmark.a);
  }
  
  public Bookmark addPrev(String paramString)
    throws PDFNetException
  {
    return new Bookmark(AddPrev(this.a, paramString), this.b);
  }
  
  public void addPrev(Bookmark paramBookmark)
    throws PDFNetException
  {
    AddPrev(this.a, paramBookmark.a);
  }
  
  public void delete()
    throws PDFNetException
  {
    Delete(this.a);
  }
  
  public boolean equals(Object paramObject)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (paramObject != null)
    {
      bool1 = bool2;
      if (paramObject.getClass().equals(getClass()))
      {
        bool1 = bool2;
        if (((Bookmark)paramObject).a == this.a) {
          bool1 = true;
        }
      }
    }
    return bool1;
  }
  
  public Bookmark find(String paramString)
    throws PDFNetException
  {
    return new Bookmark(Find(this.a, paramString), this.b);
  }
  
  public Action getAction()
    throws PDFNetException
  {
    return new Action(GetAction(this.a), this.b);
  }
  
  public double[] getColor()
    throws PDFNetException
  {
    return GetColor(this.a);
  }
  
  public Bookmark getFirstChild()
    throws PDFNetException
  {
    return new Bookmark(GetFirstChild(this.a), this.b);
  }
  
  public int getFlags()
    throws PDFNetException
  {
    return GetFlags(this.a);
  }
  
  public int getIndent()
    throws PDFNetException
  {
    return GetIndent(this.a);
  }
  
  public Bookmark getLastChild()
    throws PDFNetException
  {
    return new Bookmark(GetLastChild(this.a), this.b);
  }
  
  public Bookmark getNext()
    throws PDFNetException
  {
    return new Bookmark(GetNext(this.a), this.b);
  }
  
  public int getOpenCount()
    throws PDFNetException
  {
    return GetOpenCount(this.a);
  }
  
  public Bookmark getParent()
    throws PDFNetException
  {
    return new Bookmark(GetParent(this.a), this.b);
  }
  
  public Bookmark getPrev()
    throws PDFNetException
  {
    return new Bookmark(GetPrev(this.a), this.b);
  }
  
  public Obj getSDFObj()
  {
    return Obj.__Create(this.a, this.b);
  }
  
  public String getTitle()
    throws PDFNetException
  {
    return GetTitle(this.a);
  }
  
  public Obj getTitleObj()
    throws PDFNetException
  {
    return Obj.__Create(GetTitleObj(this.a), this.b);
  }
  
  public boolean hasChildren()
    throws PDFNetException
  {
    return HasChildren(this.a);
  }
  
  public int hashCode()
  {
    return (int)this.a;
  }
  
  public boolean isOpen()
    throws PDFNetException
  {
    return IsOpen(this.a);
  }
  
  public boolean isValid()
    throws PDFNetException
  {
    return IsValid(this.a);
  }
  
  public void removeAction()
    throws PDFNetException
  {
    RemoveAction(this.a);
  }
  
  public void setAction(Action paramAction)
    throws PDFNetException
  {
    SetAction(this.a, paramAction.a);
  }
  
  public void setColor()
    throws PDFNetException
  {
    SetColor(this.a, 0.0D, 0.0D, 0.0D);
  }
  
  public void setColor(double paramDouble1, double paramDouble2, double paramDouble3)
    throws PDFNetException
  {
    SetColor(this.a, paramDouble1, paramDouble2, paramDouble3);
  }
  
  public void setFlags(int paramInt)
    throws PDFNetException
  {
    SetFlags(this.a, paramInt);
  }
  
  public void setOpen(boolean paramBoolean)
    throws PDFNetException
  {
    SetOpen(this.a, paramBoolean);
  }
  
  public void setTitle(String paramString)
    throws PDFNetException
  {
    SetTitle(this.a, paramString);
  }
  
  public void unlink()
    throws PDFNetException
  {
    Unlink(this.a);
  }
}
