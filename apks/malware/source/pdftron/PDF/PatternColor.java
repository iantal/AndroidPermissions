package pdftron.PDF;

import pdftron.Common.Matrix2D;
import pdftron.Common.PDFNetException;
import pdftron.SDF.Obj;

public class PatternColor
{
  public static final int e_colored_tiling_pattern = 1;
  public static final int e_constant_spacing = 0;
  public static final int e_constant_spacing_fast_fill = 2;
  public static final int e_no_distortion = 1;
  public static final int e_null = 3;
  public static final int e_shading = 2;
  public static final int e_uncolored_tiling_pattern = 0;
  long a;
  private Object b;
  
  private PatternColor(long paramLong, Object paramObject)
  {
    this.a = paramLong;
    this.b = paramObject;
  }
  
  public PatternColor(Obj paramObj)
  {
    this.a = paramObj.__GetHandle();
    this.b = paramObj.__GetRefHandle();
  }
  
  private static native long GetBBox(long paramLong);
  
  private static native long GetMatrix(long paramLong);
  
  private static native long GetShading(long paramLong);
  
  private static native int GetTilingType(long paramLong);
  
  private static native int GetType(long paramLong);
  
  private static native int GetTypeObj(long paramLong);
  
  private static native double GetXStep(long paramLong);
  
  private static native double GetYStep(long paramLong);
  
  static PatternColor a(long paramLong, Object paramObject)
  {
    if (paramLong != 0L) {
      return new PatternColor(paramLong, paramObject);
    }
    return null;
  }
  
  public static int getType(Obj paramObj)
    throws PDFNetException
  {
    return GetTypeObj(paramObj.__GetHandle());
  }
  
  public Rect getBBox()
    throws PDFNetException
  {
    return new Rect(GetBBox(this.a));
  }
  
  public Matrix2D getMatrix()
    throws PDFNetException
  {
    return Matrix2D.__Create(GetMatrix(this.a));
  }
  
  public Obj getSDFObj()
    throws PDFNetException
  {
    return Obj.__Create(this.a, this.b);
  }
  
  public Shading getShading()
    throws PDFNetException
  {
    return Shading.a(GetShading(this.a), this.b);
  }
  
  public int getTilingType()
    throws PDFNetException
  {
    return GetTilingType(this.a);
  }
  
  public int getType()
    throws PDFNetException
  {
    return GetType(this.a);
  }
  
  public double getXStep()
    throws PDFNetException
  {
    return GetXStep(this.a);
  }
  
  public double getYStep()
    throws PDFNetException
  {
    return GetYStep(this.a);
  }
}
