package pdftron.PDF;

public class Optimizer
{
  private Optimizer() {}
  
  private static native void Optimize(long paramLong1, int paramInt1, int paramInt2, long paramLong2, double paramDouble1, double paramDouble2, boolean paramBoolean1, boolean paramBoolean2, int paramInt3, int paramInt4, long paramLong3, double paramDouble3, double paramDouble4, boolean paramBoolean3, boolean paramBoolean4, int paramInt5, int paramInt6, double paramDouble5, double paramDouble6, boolean paramBoolean5, boolean paramBoolean6, boolean paramBoolean7, boolean paramBoolean8);
  
  private static void a(PDFDoc paramPDFDoc, ImageSettings paramImageSettings1, ImageSettings paramImageSettings2, MonoImageSettings paramMonoImageSettings, TextSettings paramTextSettings)
  {
    Optimize(paramPDFDoc.__GetHandle(), ImageSettings.a(paramImageSettings1), ImageSettings.b(paramImageSettings1), ImageSettings.c(paramImageSettings1), ImageSettings.d(paramImageSettings1), ImageSettings.e(paramImageSettings1), ImageSettings.f(paramImageSettings1), ImageSettings.g(paramImageSettings1), ImageSettings.a(paramImageSettings2), ImageSettings.b(paramImageSettings2), ImageSettings.c(paramImageSettings2), ImageSettings.d(paramImageSettings2), ImageSettings.e(paramImageSettings2), ImageSettings.f(paramImageSettings2), ImageSettings.g(paramImageSettings2), MonoImageSettings.a(paramMonoImageSettings), MonoImageSettings.b(paramMonoImageSettings), MonoImageSettings.c(paramMonoImageSettings), MonoImageSettings.d(paramMonoImageSettings), MonoImageSettings.e(paramMonoImageSettings), MonoImageSettings.f(paramMonoImageSettings), TextSettings.a(paramTextSettings), TextSettings.b(paramTextSettings));
  }
  
  public static void optimize(PDFDoc paramPDFDoc)
  {
    a(paramPDFDoc, new ImageSettings(), new ImageSettings(), new MonoImageSettings(), new TextSettings());
  }
  
  public static void optimize(PDFDoc paramPDFDoc, OptimizerSettings paramOptimizerSettings)
  {
    ImageSettings localImageSettings1;
    ImageSettings localImageSettings2;
    label30:
    MonoImageSettings localMonoImageSettings;
    if (OptimizerSettings.a(paramOptimizerSettings) == null)
    {
      localImageSettings1 = new ImageSettings();
      if (OptimizerSettings.b(paramOptimizerSettings) != null) {
        break label79;
      }
      localImageSettings2 = new ImageSettings();
      if (OptimizerSettings.c(paramOptimizerSettings) != null) {
        break label87;
      }
      localMonoImageSettings = new MonoImageSettings();
      label46:
      if (OptimizerSettings.d(paramOptimizerSettings) != null) {
        break label96;
      }
    }
    label79:
    label87:
    label96:
    for (paramOptimizerSettings = new TextSettings();; paramOptimizerSettings = OptimizerSettings.d(paramOptimizerSettings))
    {
      a(paramPDFDoc, localImageSettings1, localImageSettings2, localMonoImageSettings, paramOptimizerSettings);
      return;
      localImageSettings1 = OptimizerSettings.a(paramOptimizerSettings);
      break;
      localImageSettings2 = OptimizerSettings.b(paramOptimizerSettings);
      break label30;
      localMonoImageSettings = OptimizerSettings.c(paramOptimizerSettings);
      break label46;
    }
  }
  
  public static class ImageSettings
  {
    public static final int e_default = 1;
    public static final int e_flate = 1;
    public static final int e_jpeg = 2;
    public static final int e_jpeg2000 = 3;
    public static final int e_none = 4;
    public static final int e_off = 0;
    public static final int e_retain = 0;
    private int a = 0;
    private int b = 1;
    private long c = 5L;
    private double d = 225.0D;
    private double e = 150.0D;
    private boolean f = false;
    private boolean g = false;
    
    public ImageSettings() {}
    
    public void forceChanges(boolean paramBoolean)
    {
      this.g = paramBoolean;
    }
    
    public void forceRecompression(boolean paramBoolean)
    {
      this.f = paramBoolean;
    }
    
    public void setCompressionMode(int paramInt)
    {
      this.a = paramInt;
    }
    
    public void setDownsampleMode(int paramInt)
    {
      this.b = paramInt;
    }
    
    public void setImageDPI(double paramDouble1, double paramDouble2)
    {
      this.d = paramDouble1;
      this.e = paramDouble2;
    }
    
    public void setQuality(long paramLong)
    {
      this.c = paramLong;
    }
  }
  
  public static class MonoImageSettings
  {
    public static final int e_default = 1;
    public static final int e_flate = 1;
    public static final int e_jbig2 = 0;
    public static final int e_none = 2;
    public static final int e_off = 0;
    private int a = 0;
    private int b = 1;
    private double c = 450.0D;
    private double d = 300.0D;
    private boolean e = false;
    private boolean f = false;
    
    public MonoImageSettings() {}
    
    public void forceChanges(boolean paramBoolean)
    {
      this.f = paramBoolean;
    }
    
    public void forceRecompression(boolean paramBoolean)
    {
      this.e = paramBoolean;
    }
    
    public void setCompressionMode(int paramInt)
    {
      this.a = paramInt;
    }
    
    public void setDownsampleMode(int paramInt)
    {
      this.b = paramInt;
    }
    
    public void setImageDPI(double paramDouble1, double paramDouble2)
    {
      this.c = paramDouble1;
      this.d = paramDouble2;
    }
  }
  
  public static class OptimizerSettings
  {
    private Optimizer.ImageSettings a;
    private Optimizer.ImageSettings b;
    private Optimizer.MonoImageSettings c;
    private Optimizer.TextSettings d;
    
    public OptimizerSettings() {}
    
    public void setColorImageSettings(Optimizer.ImageSettings paramImageSettings)
    {
      this.a = paramImageSettings;
    }
    
    public void setGrayscaleImageSettings(Optimizer.ImageSettings paramImageSettings)
    {
      this.b = paramImageSettings;
    }
    
    public void setMonoImageSettings(Optimizer.MonoImageSettings paramMonoImageSettings)
    {
      this.c = paramMonoImageSettings;
    }
    
    public void setTextSettings(Optimizer.TextSettings paramTextSettings)
    {
      this.d = paramTextSettings;
    }
  }
  
  public static class TextSettings
  {
    private boolean a = false;
    private boolean b = false;
    
    public TextSettings() {}
    
    public void embedFonts(boolean paramBoolean)
    {
      this.b = paramBoolean;
    }
    
    public void subsetFonts(boolean paramBoolean)
    {
      this.a = paramBoolean;
    }
  }
}
