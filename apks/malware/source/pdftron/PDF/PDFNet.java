package pdftron.PDF;

import android.content.Context;
import android.os.Build;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import pdftron.Common.PDFNetException;
import pdftron.SDF.Obj;

public class PDFNet
{
  public static final int e_CNS1 = 4;
  public static final int e_GB1 = 3;
  public static final int e_Identity = 0;
  public static final int e_Japan1 = 1;
  public static final int e_Japan2 = 2;
  public static final int e_Korea1 = 5;
  public static final int e_icm = 1;
  public static final int e_lcms = 0;
  public static final int e_no_cms = 2;
  
  static
  {
    Object localObject = new StringBuffer();
    ((StringBuffer)localObject).append("abi: ").append(Build.CPU_ABI).append("\n");
    if (new File("/proc/cpuinfo").exists()) {
      try
      {
        BufferedReader localBufferedReader = new BufferedReader(new FileReader(new File("/proc/cpuinfo")));
        for (;;)
        {
          String str2 = localBufferedReader.readLine();
          if (str2 == null) {
            break;
          }
          ((StringBuffer)localObject).append(str2 + "\n");
        }
        localObject = ((StringBuffer)localObject).toString().toLowerCase();
      }
      catch (IOException localIOException)
      {
        localIOException.printStackTrace();
      }
    }
    int j;
    for (;;)
    {
      String str1 = a((String)localObject, "cpu architecture");
      if (str1 == null) {
        break label233;
      }
      try
      {
        i = Integer.parseInt(str1);
        if (i < 7) {
          break;
        }
        i = 1;
      }
      catch (Exception localException)
      {
        int i;
        for (;;)
        {
          i = 0;
        }
        j = i;
      }
      j = i;
      if (i == 0) {
        break label216;
      }
      localObject = a((String)localObject, "processor");
      j = i;
      if (localObject == null) {
        break label216;
      }
      localObject = ((String)localObject).split("\\s+");
      j = i;
      if (localObject == null) {
        break label216;
      }
      j = 0;
      while (j < localObject.length)
      {
        if (localObject[j].compareToIgnoreCase("(v6l)") == 0) {
          i = 0;
        }
        j += 1;
      }
      str1.close();
    }
    for (;;)
    {
      label216:
      if (j != 0) {
        try
        {
          System.loadLibrary("PDFNetC-v7a");
          return;
        }
        catch (UnsatisfiedLinkError localUnsatisfiedLinkError) {}
      }
      System.loadLibrary("PDFNetC");
      return;
      label233:
      j = 0;
    }
  }
  
  public PDFNet() {}
  
  public static native boolean IsARMv7();
  
  private static String a(String paramString1, String paramString2)
  {
    int i = paramString1.indexOf(paramString2, 0);
    if (i == -1) {
      return null;
    }
    i += paramString2.length();
    while ((paramString1.charAt(i) != ':') && (i < paramString1.length() - 1)) {
      i += 1;
    }
    if ((i + 2 >= paramString1.length()) || (paramString1.charAt(i + 1) != ' ')) {
      return null;
    }
    int j = i + 2;
    i = j;
    while ((paramString1.charAt(i) != '\n') && (i < paramString1.length() - 1)) {
      i += 1;
    }
    return paramString1.substring(j, i);
  }
  
  public static native boolean addFontSubst(int paramInt, String paramString)
    throws PDFNetException;
  
  public static native boolean addFontSubst(String paramString1, String paramString2)
    throws PDFNetException;
  
  public static native String getResourcesPath()
    throws PDFNetException;
  
  public static native double getVersion()
    throws PDFNetException;
  
  public static void initialize(Context paramContext)
  {
    initialize(paramContext, null);
  }
  
  public static void initialize(Context paramContext, String paramString)
  {
    initialize(paramString);
    if (paramContext != null) {}
    try
    {
      setTempPath(paramContext.getCacheDir().getPath());
      try
      {
        new Rect();
        Obj.__Create(0L, Integer.valueOf(0));
        return;
      }
      catch (Exception paramContext) {}
    }
    catch (Exception paramContext)
    {
      for (;;) {}
    }
  }
  
  private static native void initialize(String paramString);
  
  public static native void setColorManagement(int paramInt)
    throws PDFNetException;
  
  public static native void setDefaultDeviceCMYKProfile(String paramString)
    throws PDFNetException;
  
  public static native void setDefaultDeviceRGBProfile(String paramString)
    throws PDFNetException;
  
  public static native void setDefaultDiskCachingEnabled(boolean paramBoolean)
    throws PDFNetException;
  
  public static native boolean setResourcesPath(String paramString);
  
  public static native boolean setTempPath(String paramString)
    throws PDFNetException;
  
  public static native void terminate();
}
