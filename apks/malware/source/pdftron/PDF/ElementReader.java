package pdftron.PDF;

import pdftron.Common.PDFNetException;
import pdftron.PDF.OCG.Context;
import pdftron.SDF.Obj;

public class ElementReader
  extends s
{
  private Object a = null;
  
  public ElementReader()
    throws PDFNetException
  {
    this.c = ElementReaderCreate();
    clearList();
  }
  
  private static native void Begin1(long paramLong1, long paramLong2);
  
  private static native void Begin2(long paramLong1, long paramLong2, long paramLong3);
  
  private static native void BeginStm1(long paramLong1, long paramLong2);
  
  private static native void BeginStm2(long paramLong1, long paramLong2, long paramLong3);
  
  private static native void BeginStm3(long paramLong1, long paramLong2, long paramLong3, long paramLong4);
  
  private static native void ClearChangeList(long paramLong);
  
  private static native long Current(long paramLong);
  
  private static native void Destroy(long paramLong);
  
  private static native long ElementReaderCreate();
  
  private static native boolean End(long paramLong);
  
  private static native void FormBegin(long paramLong);
  
  private static native long GetChangesIterator(long paramLong);
  
  private static native long GetColorSpace(long paramLong, String paramString);
  
  private static native long GetExtGState(long paramLong, String paramString);
  
  private static native long GetFont(long paramLong, String paramString);
  
  private static native long GetPattern(long paramLong, String paramString);
  
  private static native long GetShading(long paramLong, String paramString);
  
  private static native long GetXObject(long paramLong, String paramString);
  
  private static native boolean IsChanged(long paramLong, int paramInt);
  
  private static native long Next(long paramLong);
  
  private static native void PatternBegin(long paramLong, boolean paramBoolean1, boolean paramBoolean2);
  
  private static native void Type3FontBegin(long paramLong1, long paramLong2, long paramLong3);
  
  public void begin(Page paramPage)
    throws PDFNetException
  {
    Begin1(this.c, paramPage.a);
    this.a = paramPage.b;
  }
  
  public void begin(Page paramPage, Context paramContext)
    throws PDFNetException
  {
    Begin2(this.c, paramPage.a, paramContext.__GetHandle());
    this.a = paramPage.b;
  }
  
  public void begin(Obj paramObj)
    throws PDFNetException
  {
    BeginStm1(this.c, paramObj.__GetHandle());
    this.a = paramObj.__GetRefHandle();
  }
  
  public void begin(Obj paramObj1, Obj paramObj2)
    throws PDFNetException
  {
    BeginStm2(this.c, paramObj1.__GetHandle(), paramObj2.__GetHandle());
    this.a = paramObj1.__GetRefHandle();
  }
  
  public void begin(Obj paramObj1, Obj paramObj2, Context paramContext)
    throws PDFNetException
  {
    BeginStm3(this.c, paramObj1.__GetHandle(), paramObj2.__GetHandle(), paramContext.__GetHandle());
    this.a = paramObj1.__GetRefHandle();
  }
  
  public void clearChangeList()
    throws PDFNetException
  {
    ClearChangeList(this.c);
  }
  
  public Element current()
    throws PDFNetException
  {
    long l = Current(this.c);
    if (l != 0L) {
      return new Element(l, this, this.a);
    }
    return null;
  }
  
  public void destroy()
    throws PDFNetException
  {
    if (this.c != 0L)
    {
      Destroy(this.c);
      this.c = 0L;
    }
  }
  
  public boolean end()
    throws PDFNetException
  {
    return End(this.c);
  }
  
  public void formBegin()
    throws PDFNetException
  {
    FormBegin(this.c);
  }
  
  public GSChangesIterator getChangesIterator()
    throws PDFNetException
  {
    return new GSChangesIterator(GetChangesIterator(this.c), this.a);
  }
  
  public Obj getColorSpace(String paramString)
  {
    return Obj.__Create(GetColorSpace(this.c, paramString), this.a);
  }
  
  public Obj getExtGState(String paramString)
  {
    return Obj.__Create(GetExtGState(this.c, paramString), this.a);
  }
  
  public Obj getFont(String paramString)
    throws PDFNetException
  {
    return Obj.__Create(GetFont(this.c, paramString), this.a);
  }
  
  public Obj getPattern(String paramString)
  {
    return Obj.__Create(GetPattern(this.c, paramString), this.a);
  }
  
  public Obj getShading(String paramString)
  {
    return Obj.__Create(GetShading(this.c, paramString), this.a);
  }
  
  public Obj getXObject(String paramString)
  {
    return Obj.__Create(GetXObject(this.c, paramString), this.a);
  }
  
  public boolean isChanged(int paramInt)
    throws PDFNetException
  {
    return IsChanged(this.c, paramInt);
  }
  
  public Element next()
    throws PDFNetException
  {
    long l = Next(this.c);
    if (l != 0L) {
      return new Element(l, this, this.a);
    }
    return null;
  }
  
  public void patternBegin(boolean paramBoolean)
    throws PDFNetException
  {
    PatternBegin(this.c, paramBoolean, false);
  }
  
  public void patternBegin(boolean paramBoolean1, boolean paramBoolean2)
    throws PDFNetException
  {
    PatternBegin(this.c, paramBoolean1, paramBoolean2);
  }
  
  public void type3FontBegin(CharData paramCharData)
    throws PDFNetException
  {
    Type3FontBegin(this.c, paramCharData.a, 0L);
  }
  
  public void type3FontBegin(CharData paramCharData, Obj paramObj)
    throws PDFNetException
  {
    if (paramObj != null)
    {
      Type3FontBegin(this.c, paramCharData.a, paramObj.__GetHandle());
      return;
    }
    Type3FontBegin(this.c, paramCharData.a, 0L);
  }
}
