package pdftron.SDF;

import pdftron.Common.PDFNetException;

public class DictIterator
{
  long a;
  private Object b;
  
  DictIterator(long paramLong, Object paramObject)
  {
    this.a = paramLong;
    this.b = paramObject;
  }
  
  private static native void Destroy(long paramLong);
  
  private static native boolean HasNext(long paramLong);
  
  private static native long Key(long paramLong);
  
  private static native void Next(long paramLong);
  
  private static native long Value(long paramLong);
  
  public long __GetHandle()
  {
    return this.a;
  }
  
  public void destroy()
    throws PDFNetException
  {
    if (this.a != 0L)
    {
      Destroy(this.a);
      this.a = 0L;
    }
  }
  
  protected void finalize()
    throws Throwable
  {
    destroy();
  }
  
  public boolean hasNext()
    throws PDFNetException
  {
    return HasNext(this.a);
  }
  
  public Obj key()
    throws PDFNetException
  {
    return Obj.__Create(Key(this.a), this.b);
  }
  
  public void next()
    throws PDFNetException
  {
    Next(this.a);
  }
  
  public Obj value()
    throws PDFNetException
  {
    return Obj.__Create(Value(this.a), this.b);
  }
}
