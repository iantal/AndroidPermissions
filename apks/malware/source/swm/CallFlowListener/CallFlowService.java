package swm.CallFlowListener;

import android.app.Notification;
import android.app.PendingIntent;
import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.net.TrafficStats;
import android.os.Binder;
import android.os.Handler;
import android.os.IBinder;
import android.os.Vibrator;
import android.telephony.PhoneStateListener;
import android.telephony.TelephonyManager;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Calendar;

public class CallFlowService
  extends Service
{
  public static final String FLOW_DATA = "swm.CallFlowListener.action.FLOW_DATA";
  private static final int ONGOING_NOTIFICATION = 1;
  private boolean close = false;
  private long day;
  private Thread dialThread;
  private SharedPreferences.Editor editor;
  private long hour;
  private long initMonthRxCount;
  private long initMonthTxCount;
  private long initRxCount;
  private long initTotalRxCount;
  private long initTotalTxCount;
  private long initTxCount;
  private Intent intent;
  private boolean isVibrate = false;
  private Vibrator mVibrator;
  private long minute;
  private long month;
  private long monthAnswerTime = 0L;
  private long monthDialTime = 0L;
  private long monthRxCount;
  private long monthTxCount;
  private Calendar myCalendar;
  private Handler myHandler = new Handler();
  private Runnable myRunnable = new Runnable()
  {
    public void run()
    {
      CallFlowService.this.myCalendar = Calendar.getInstance();
      CallFlowService.this.year = CallFlowService.this.myCalendar.get(1);
      CallFlowService.this.month = (CallFlowService.this.myCalendar.get(2) + 1);
      CallFlowService.this.day = CallFlowService.this.myCalendar.get(5);
      CallFlowService.this.hour = CallFlowService.this.myCalendar.get(11);
      CallFlowService.this.minute = CallFlowService.this.myCalendar.get(12);
      CallFlowService.this.second = CallFlowService.this.myCalendar.get(13);
      int i;
      int j;
      label157:
      int k;
      if (CallFlowService.this.hour == 0L)
      {
        i = 1;
        if (CallFlowService.this.minute != 0L) {
          break label870;
        }
        j = 1;
        if (CallFlowService.this.second != 0L) {
          break label875;
        }
        k = 1;
        label171:
        if ((k & j & i) != 0)
        {
          CallFlowService.this.initRxCount = TrafficStats.getMobileRxBytes();
          CallFlowService.this.initTxCount = TrafficStats.getMobileTxBytes();
          CallFlowService.this.todayRxCount = 0L;
          CallFlowService.this.todayTxCount = 0L;
          CallFlowService.this.todayDialTime = 0L;
          CallFlowService.this.todayAnswerTime = 0L;
          if (CallFlowService.this.day == 1L)
          {
            CallFlowService.this.initMonthRxCount = TrafficStats.getMobileRxBytes();
            CallFlowService.this.initMonthTxCount = TrafficStats.getMobileTxBytes();
            CallFlowService.this.initTotalRxCount = TrafficStats.getTotalRxBytes();
            CallFlowService.this.initTotalTxCount = TrafficStats.getTotalTxBytes();
            CallFlowService.this.monthDialTime = 0L;
            CallFlowService.this.monthAnswerTime = 0L;
          }
        }
        CallFlowService.this.todayRxCount = (TrafficStats.getMobileRxBytes() - CallFlowService.this.initRxCount);
        CallFlowService.this.todayTxCount = (TrafficStats.getMobileTxBytes() - CallFlowService.this.initTxCount);
        CallFlowService.this.monthRxCount = (TrafficStats.getMobileRxBytes() - CallFlowService.this.initMonthRxCount);
        CallFlowService.this.monthTxCount = (TrafficStats.getMobileTxBytes() - CallFlowService.this.initMonthTxCount);
        CallFlowService.this.totalRxCount = (TrafficStats.getTotalRxBytes() - CallFlowService.this.initTotalRxCount);
        CallFlowService.this.totalTxCount = (TrafficStats.getTotalTxBytes() - CallFlowService.this.initTotalTxCount);
        CallFlowService.this.totalWifi = (CallFlowService.this.totalRxCount + CallFlowService.this.totalTxCount - (CallFlowService.this.monthRxCount + CallFlowService.this.monthTxCount));
        CallFlowService.this.intent.putExtra("todayRxCount", CallFlowService.this.todayRxCount);
        CallFlowService.this.intent.putExtra("todayTxCount", CallFlowService.this.todayTxCount);
        CallFlowService.this.intent.putExtra("monthRxCount", CallFlowService.this.monthRxCount);
        CallFlowService.this.intent.putExtra("monthTxCount", CallFlowService.this.monthTxCount);
        CallFlowService.this.intent.putExtra("totalWifi", CallFlowService.this.totalWifi);
        CallFlowService.this.intent.putExtra("todayAnswerTime", CallFlowService.this.todayAnswerTime);
        CallFlowService.this.intent.putExtra("todayDialTime", CallFlowService.this.todayDialTime);
        CallFlowService.this.intent.putExtra("monthAnswerTime", CallFlowService.this.monthAnswerTime);
        CallFlowService.this.intent.putExtra("monthDialTime", CallFlowService.this.monthDialTime);
        CallFlowService.this.intent.putExtra("close", CallFlowService.this.close);
        CallFlowService.this.intent.putExtra("isVibrate", CallFlowService.this.isVibrate);
        CallFlowService.this.sendBroadcast(CallFlowService.this.intent);
        if (CallFlowService.this.close) {
          break label880;
        }
        Notification localNotification = new Notification(2130837511, CallFlowService.this.getText(2131034112), CallFlowService.this.myCalendar.getTimeInMillis());
        Object localObject = new Intent(CallFlowService.this, MainActivity.class);
        localObject = PendingIntent.getActivity(CallFlowService.this, 0, (Intent)localObject, 0);
        localNotification.setLatestEventInfo(CallFlowService.this, CallFlowService.this.getText(2131034112), "今日已拨：" + CallFlowService.this.todayDialTime + "分钟   " + "流量：" + CallFlowService.this.changeFormat(CallFlowService.this.todayRxCount + CallFlowService.this.todayTxCount) + "MB", (PendingIntent)localObject);
        CallFlowService.this.startForeground(1, localNotification);
      }
      for (;;)
      {
        CallFlowService.this.myHandler.postDelayed(CallFlowService.this.myRunnable, 1000L);
        return;
        i = 0;
        break;
        label870:
        j = 0;
        break label157;
        label875:
        k = 0;
        break label171;
        label880:
        CallFlowService.this.startForeground(0, null);
      }
    }
  };
  NotificationReceiver nReceiver;
  private boolean resetToZero = false;
  private long second;
  private SharedPreferences sp;
  private TelephonyManager telManager;
  private long todayAnswerTime = 0L;
  private long todayDialTime = 0L;
  private long todayRxCount;
  private long todayTxCount;
  private long totalRxCount;
  private long totalTxCount;
  private long totalWifi;
  private long year;
  
  public CallFlowService() {}
  
  private String changeFormat(long paramLong)
  {
    return String.format("%.2f", new Object[] { Double.valueOf(paramLong / 1048576.0D) });
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    return null;
  }
  
  public void onCreate()
  {
    this.intent = new Intent();
    this.intent.setAction("swm.CallFlowListener.action.FLOW_DATA");
    this.sp = getSharedPreferences("CallFlow", 0);
    this.editor = this.sp.edit();
    this.myCalendar = Calendar.getInstance();
    this.year = this.myCalendar.get(1);
    this.month = (this.myCalendar.get(2) + 1);
    this.day = this.myCalendar.get(5);
    if (this.sp.getString("date", "").equals(this.year + this.month + this.day))
    {
      this.initRxCount = this.sp.getLong("RxCount", 0L);
      this.initTxCount = this.sp.getLong("TxCount", 0L);
      this.todayAnswerTime = this.sp.getLong("todayAnswerTime", 0L);
      this.todayDialTime = this.sp.getLong("todayDialTime", 0L);
      if (!this.sp.getString("monthOfYear", "").equals(this.year + this.month)) {
        break label508;
      }
      this.initMonthRxCount = this.sp.getLong("monthRxCount", 0L);
      this.initMonthTxCount = this.sp.getLong("monthTxCount", 0L);
      this.initTotalRxCount = this.sp.getLong("totalRxCount", 0L);
      this.initTotalTxCount = this.sp.getLong("totalTxCount", 0L);
      this.monthAnswerTime = this.sp.getLong("monthAnswerTime", 0L);
    }
    for (this.monthDialTime = this.sp.getLong("monthDialTime", 0L);; this.monthDialTime = 0L)
    {
      this.close = this.sp.getBoolean("close", false);
      this.isVibrate = this.sp.getBoolean("isVibrate", false);
      this.myHandler.postDelayed(this.myRunnable, 0L);
      this.telManager = ((TelephonyManager)getSystemService("phone"));
      this.telManager.listen(new TelListener(), 32);
      this.nReceiver = new NotificationReceiver();
      IntentFilter localIntentFilter = new IntentFilter();
      localIntentFilter.addAction("swm.CallFlowListener.action.NOTIFICATION");
      registerReceiver(this.nReceiver, localIntentFilter);
      super.onCreate();
      return;
      this.initRxCount = TrafficStats.getMobileRxBytes();
      this.initTxCount = TrafficStats.getMobileTxBytes();
      this.todayAnswerTime = 0L;
      this.todayDialTime = 0L;
      break;
      label508:
      this.initMonthRxCount = TrafficStats.getMobileRxBytes();
      this.initMonthTxCount = TrafficStats.getMobileTxBytes();
      this.initTotalRxCount = TrafficStats.getTotalRxBytes();
      this.initTotalTxCount = TrafficStats.getTotalTxBytes();
      this.monthAnswerTime = 0L;
    }
  }
  
  public void onDestroy()
  {
    this.editor.putLong("RxCount", this.initRxCount);
    this.editor.putLong("TxCount", this.initTxCount);
    this.editor.putLong("monthRxCount", this.initMonthRxCount);
    this.editor.putLong("monthTxCount", this.initMonthTxCount);
    this.editor.putLong("totalRxCount", this.initTotalRxCount);
    this.editor.putLong("totalTxCount", this.initTotalTxCount);
    this.editor.putLong("todayAnswerTime", this.todayAnswerTime);
    this.editor.putLong("todayDialTime", this.todayDialTime);
    this.editor.putLong("monthAnswerTime", this.monthAnswerTime);
    this.editor.putLong("monthDialTime", this.monthDialTime);
    this.editor.putBoolean("close", this.close);
    this.editor.putBoolean("isVibrate", this.isVibrate);
    this.editor.putString("monthOfYear", this.year + this.month);
    this.editor.putString("date", this.year + this.month + this.day);
    this.editor.commit();
    this.myHandler.removeCallbacks(this.myRunnable);
    unregisterReceiver(this.nReceiver);
    super.onDestroy();
  }
  
  public int onStartCommand(Intent paramIntent, int paramInt1, int paramInt2)
  {
    if (this.sp.getString("date", "").equals(this.year + this.month + this.day))
    {
      this.initRxCount = this.sp.getLong("RxCount", 0L);
      this.initTxCount = this.sp.getLong("TxCount", 0L);
      this.todayAnswerTime = this.sp.getLong("todayAnswerTime", 0L);
      this.todayDialTime = this.sp.getLong("todayDialTime", 0L);
      if (!this.sp.getString("monthOfYear", "").equals(this.year + this.month)) {
        break label296;
      }
      this.initMonthRxCount = this.sp.getLong("monthRxCount", 0L);
      this.initMonthTxCount = this.sp.getLong("monthTxCount", 0L);
      this.initTotalRxCount = this.sp.getLong("totalRxCount", 0L);
      this.initTotalTxCount = this.sp.getLong("totalTxCount", 0L);
      this.monthAnswerTime = this.sp.getLong("monthAnswerTime", 0L);
    }
    for (this.monthDialTime = this.sp.getLong("monthDialTime", 0L);; this.monthDialTime = 0L)
    {
      return 3;
      this.initRxCount = TrafficStats.getMobileRxBytes();
      this.initTxCount = TrafficStats.getMobileTxBytes();
      this.todayAnswerTime = 0L;
      this.todayDialTime = 0L;
      break;
      label296:
      this.initMonthRxCount = TrafficStats.getMobileRxBytes();
      this.initMonthTxCount = TrafficStats.getMobileTxBytes();
      this.initTotalRxCount = TrafficStats.getTotalRxBytes();
      this.initTotalTxCount = TrafficStats.getTotalTxBytes();
      this.monthAnswerTime = 0L;
    }
  }
  
  class NotificationReceiver
    extends BroadcastReceiver
  {
    NotificationReceiver() {}
    
    public void onReceive(Context paramContext, Intent paramIntent)
    {
      CallFlowService.this.close = paramIntent.getBooleanExtra("close", false);
      CallFlowService.this.isVibrate = paramIntent.getBooleanExtra("isVibrate", false);
      CallFlowService.this.resetToZero = paramIntent.getBooleanExtra("resetToZero", false);
      if (CallFlowService.this.resetToZero)
      {
        CallFlowService.this.todayDialTime = 0L;
        CallFlowService.this.todayAnswerTime = 0L;
        CallFlowService.this.monthDialTime = 0L;
        CallFlowService.this.monthAnswerTime = 0L;
        CallFlowService.this.todayRxCount = 0L;
        CallFlowService.this.todayTxCount = 0L;
        CallFlowService.this.monthRxCount = 0L;
        CallFlowService.this.monthTxCount = 0L;
        CallFlowService.this.totalWifi = 0L;
        CallFlowService.this.initRxCount = TrafficStats.getMobileRxBytes();
        CallFlowService.this.initTxCount = TrafficStats.getMobileTxBytes();
        CallFlowService.this.initMonthRxCount = CallFlowService.this.initRxCount;
        CallFlowService.this.initMonthTxCount = CallFlowService.this.initTxCount;
        CallFlowService.this.initTotalRxCount = TrafficStats.getTotalRxBytes();
        CallFlowService.this.initTotalTxCount = TrafficStats.getTotalTxBytes();
        CallFlowService.this.sp = CallFlowService.this.getSharedPreferences("CallFlow", 0);
        CallFlowService.this.editor = CallFlowService.this.sp.edit();
        CallFlowService.this.editor.putLong("RxCount", CallFlowService.this.initRxCount);
        CallFlowService.this.editor.putLong("TxCount", CallFlowService.this.initTxCount);
        CallFlowService.this.editor.putLong("monthRxCount", CallFlowService.this.initMonthRxCount);
        CallFlowService.this.editor.putLong("monthTxCount", CallFlowService.this.initMonthTxCount);
        CallFlowService.this.editor.putLong("totalRxCount", CallFlowService.this.initTotalRxCount);
        CallFlowService.this.editor.putLong("totalTxCount", CallFlowService.this.initTotalTxCount);
        CallFlowService.this.editor.putLong("todayAnswerTime", CallFlowService.this.todayAnswerTime);
        CallFlowService.this.editor.putLong("todayDialTime", CallFlowService.this.todayDialTime);
        CallFlowService.this.editor.putLong("monthAnswerTime", CallFlowService.this.monthAnswerTime);
        CallFlowService.this.editor.putLong("monthDialTime", CallFlowService.this.monthDialTime);
        CallFlowService.this.editor.putBoolean("close", CallFlowService.this.close);
        CallFlowService.this.editor.putBoolean("isVibrate", CallFlowService.this.isVibrate);
        CallFlowService.this.editor.putString("monthOfYear", CallFlowService.this.year + CallFlowService.this.month);
        CallFlowService.this.editor.putString("date", CallFlowService.this.year + CallFlowService.this.month + CallFlowService.this.day);
        CallFlowService.this.editor.commit();
        CallFlowService.this.resetToZero = false;
      }
    }
  }
  
  class TelListener
    extends PhoneStateListener
  {
    private long callTime;
    private long endTime;
    private boolean isActive = false;
    private boolean isIdle = true;
    private boolean isOffhook = false;
    private boolean isRinging = false;
    private long startDay;
    private long startMonth;
    private long startTime;
    private long startYear;
    
    TelListener() {}
    
    public void onCallStateChanged(int paramInt, String paramString)
    {
      super.onCallStateChanged(paramInt, paramString);
      switch (paramInt)
      {
      }
      for (;;)
      {
        CallFlowService.this.intent.putExtra("todayAnswerTime", CallFlowService.this.todayAnswerTime);
        CallFlowService.this.intent.putExtra("todayDialTime", CallFlowService.this.todayDialTime);
        CallFlowService.this.intent.putExtra("monthAnswerTime", CallFlowService.this.monthAnswerTime);
        CallFlowService.this.intent.putExtra("monthDialTime", CallFlowService.this.monthDialTime);
        CallFlowService.this.sendBroadcast(CallFlowService.this.intent);
        CallFlowService.this.editor.putLong("todayAnswerTime", CallFlowService.this.todayAnswerTime);
        CallFlowService.this.editor.putLong("todayDialTime", CallFlowService.this.todayDialTime);
        CallFlowService.this.editor.putLong("monthAnswerTime", CallFlowService.this.monthAnswerTime);
        CallFlowService.this.editor.putLong("monthDialTime", CallFlowService.this.monthDialTime);
        CallFlowService.this.editor.commit();
        return;
        this.endTime = System.currentTimeMillis();
        this.isIdle = true;
        CallFlowService.this.myCalendar = Calendar.getInstance();
        CallFlowService.this.year = CallFlowService.this.myCalendar.get(1);
        CallFlowService.this.month = (CallFlowService.this.myCalendar.get(2) + 1);
        CallFlowService.this.day = CallFlowService.this.myCalendar.get(5);
        CallFlowService.this.hour = CallFlowService.this.myCalendar.get(11);
        CallFlowService.this.minute = CallFlowService.this.myCalendar.get(12);
        CallFlowService.this.second = CallFlowService.this.myCalendar.get(13);
        if ((this.isRinging & this.isOffhook)) {
          if ((this.startYear == CallFlowService.this.year) && (this.startMonth == CallFlowService.this.month) && (this.startDay == CallFlowService.this.day))
          {
            this.callTime = (this.endTime - this.startTime);
            if (this.callTime / 1000.0D % 60.0D != 0.0D)
            {
              this.callTime = ((this.callTime / 1000.0D / 60.0D) + 1L);
              label477:
              paramString = CallFlowService.this;
              paramString.todayAnswerTime += this.callTime;
              paramString = CallFlowService.this;
              paramString.monthAnswerTime += this.callTime;
              label513:
              this.isRinging = false;
              this.isOffhook = false;
              this.isActive = false;
              label528:
              if (!(this.isIdle & this.isOffhook & this.isActive)) {
                continue;
              }
              if (CallFlowService.this.dialThread.isAlive()) {
                CallFlowService.this.dialThread.destroy();
              }
              if ((this.startYear != CallFlowService.this.year) || (this.startMonth != CallFlowService.this.month) || (this.startDay != CallFlowService.this.day)) {
                break label1125;
              }
              this.callTime = (this.endTime - this.startTime);
              if (this.callTime / 1000.0D % 60.0D == 0.0D) {
                break label1104;
              }
              this.callTime = ((this.callTime / 1000.0D / 60.0D) + 1L);
              label664:
              paramString = CallFlowService.this;
              paramString.todayDialTime += this.callTime;
              paramString = CallFlowService.this;
              paramString.monthDialTime += this.callTime;
            }
          }
        }
        label824:
        label933:
        label1104:
        label1125:
        label1210:
        label1319:
        do
        {
          do
          {
            this.isRinging = false;
            this.isOffhook = false;
            this.isActive = false;
            break;
            this.callTime = ((this.callTime / 1000.0D / 60.0D));
            break label477;
            if (this.startDay == CallFlowService.this.day) {
              break label513;
            }
            if ((this.startYear == CallFlowService.this.year) && (this.startMonth == CallFlowService.this.month))
            {
              if (CallFlowService.this.second != 0L)
              {
                CallFlowService.this.todayAnswerTime = (60L * CallFlowService.this.hour + CallFlowService.this.minute + 1L);
                CallFlowService.this.todayDialTime = 0L;
                this.callTime = (this.endTime - this.startTime);
                if (this.callTime / 1000.0D % 60.0D == 0.0D) {
                  break label933;
                }
              }
              for (this.callTime = ((this.callTime / 1000.0D / 60.0D) + 1L);; this.callTime = ((this.callTime / 1000.0D / 60.0D)))
              {
                paramString = CallFlowService.this;
                paramString.monthAnswerTime += this.callTime;
                break;
                CallFlowService.this.todayAnswerTime = (60L * CallFlowService.this.hour + CallFlowService.this.minute);
                break label824;
              }
            }
            if (this.startMonth == CallFlowService.this.month) {
              break label513;
            }
            if (CallFlowService.this.second != 0L) {}
            for (CallFlowService.this.todayAnswerTime = (60L * CallFlowService.this.hour + CallFlowService.this.minute + 1L);; CallFlowService.this.todayAnswerTime = (60L * CallFlowService.this.hour + CallFlowService.this.minute))
            {
              CallFlowService.this.todayDialTime = 0L;
              CallFlowService.this.monthAnswerTime = ((CallFlowService.this.day - 1L) * 24L * 60L + CallFlowService.this.todayAnswerTime);
              CallFlowService.this.monthDialTime = 0L;
              break;
            }
            if (!this.isRinging) {
              break label528;
            }
            this.isRinging = false;
            break label528;
            this.callTime = ((this.callTime / 1000.0D / 60.0D));
            break label664;
          } while (this.startDay == CallFlowService.this.day);
          if ((this.startYear == CallFlowService.this.year) && (this.startMonth == CallFlowService.this.month))
          {
            if (CallFlowService.this.second != 0L)
            {
              CallFlowService.this.todayDialTime = (60L * CallFlowService.this.hour + CallFlowService.this.minute + 1L);
              CallFlowService.this.todayAnswerTime = 0L;
              this.callTime = (this.endTime - this.startTime);
              if (this.callTime / 1000.0D % 60.0D == 0.0D) {
                break label1319;
              }
            }
            for (this.callTime = ((this.callTime / 1000.0D / 60.0D) + 1L);; this.callTime = ((this.callTime / 1000.0D / 60.0D)))
            {
              paramString = CallFlowService.this;
              paramString.monthDialTime += this.callTime;
              break;
              CallFlowService.this.todayDialTime = (60L * CallFlowService.this.hour + CallFlowService.this.minute);
              break label1210;
            }
          }
        } while (this.startMonth == CallFlowService.this.month);
        if (CallFlowService.this.second != 0L) {}
        for (CallFlowService.this.todayDialTime = (60L * CallFlowService.this.hour + CallFlowService.this.minute + 1L);; CallFlowService.this.todayDialTime = (60L * CallFlowService.this.hour + CallFlowService.this.minute))
        {
          CallFlowService.this.todayAnswerTime = 0L;
          CallFlowService.this.monthDialTime = ((CallFlowService.this.day - 1L) * 24L * 60L + CallFlowService.this.todayDialTime);
          CallFlowService.this.monthAnswerTime = 0L;
          break;
        }
        this.isRinging = true;
        continue;
        this.isOffhook = true;
        CallFlowService.this.mVibrator = ((Vibrator)CallFlowService.this.getSystemService("vibrator"));
        CallFlowService.this.telManager = ((TelephonyManager)CallFlowService.this.getSystemService("phone"));
        CallFlowService.this.dialThread = new Thread(new Runnable()
        {
          public void run()
          {
            try
            {
              BufferedReader localBufferedReader = new BufferedReader(new InputStreamReader(Runtime.getRuntime().exec("logcat -v time -b radio").getInputStream()));
              String str;
              do
              {
                str = localBufferedReader.readLine();
                if (str == null) {
                  return;
                }
                if (CallFlowService.this.telManager.getCallState() == 0) {
                  break;
                }
              } while ((!str.contains("GET_CURRENT_CALLS")) || (!str.contains("ACTIVE")));
              CallFlowService.TelListener.this.startTime = System.currentTimeMillis();
              CallFlowService.TelListener.this.startYear = CallFlowService.this.myCalendar.get(1);
              CallFlowService.TelListener.this.startMonth = (CallFlowService.this.myCalendar.get(2) + 1);
              CallFlowService.TelListener.this.startDay = CallFlowService.this.myCalendar.get(5);
              CallFlowService.TelListener.this.isActive = true;
              if (CallFlowService.this.isVibrate)
              {
                CallFlowService.this.mVibrator.vibrate(200L);
                return;
              }
            }
            catch (Exception localException) {}
          }
        });
        CallFlowService.this.dialThread.run();
      }
    }
  }
  
  public class myBinder
    extends Binder
  {
    public myBinder() {}
    
    public CallFlowService getService()
    {
      return CallFlowService.this;
    }
  }
}
