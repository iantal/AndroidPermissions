package aurelienribon.tweenengine;

import java.util.ArrayList;

abstract class Pool
{
  private final Pool.Callback callback;
  private final ArrayList objects;
  
  public Pool(int paramInt, Pool.Callback paramCallback)
  {
    this.objects = new ArrayList(paramInt);
    this.callback = paramCallback;
  }
  
  public void clear()
  {
    this.objects.clear();
  }
  
  protected abstract Object create();
  
  public void ensureCapacity(int paramInt)
  {
    this.objects.ensureCapacity(paramInt);
  }
  
  public void free(Object paramObject)
  {
    if (!this.objects.contains(paramObject))
    {
      if (this.callback != null) {
        this.callback.onPool(paramObject);
      }
      this.objects.add(paramObject);
    }
  }
  
  public Object get()
  {
    if (this.objects.isEmpty()) {
      return create();
    }
    return this.objects.remove(this.objects.size() - 1);
  }
  
  public int size()
  {
    return this.objects.size();
  }
}
