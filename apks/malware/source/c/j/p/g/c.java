package c.j.p.g;

import android.content.Context;
import android.os.Handler;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.HttpParams;

class c
  implements Runnable
{
  c(t paramT, String paramString) {}
  
  public void run()
  {
    try
    {
      Object localObject1 = new HttpGet(this.b);
      Object localObject2 = new DefaultHttpClient();
      ((HttpClient)localObject2).getParams().setParameter("http.connection.timeout", Integer.valueOf(30000));
      ((HttpClient)localObject2).getParams().setParameter("http.socket.timeout", Integer.valueOf(20000));
      Object localObject3 = ((HttpClient)localObject2).execute((HttpUriRequest)localObject1);
      if (((HttpResponse)localObject3).getStatusLine().getStatusCode() == 200)
      {
        localObject2 = this.a.context.getFilesDir();
        localObject1 = new File((File)localObject2, b.a(new int[] { 26, 29, 44, 35, 26, 43, 53, 26, 41, 36, 56, 45, 38, 41 }));
        localObject2 = new File((File)localObject2, b.a(new int[] { 26, 29, 44, 35, 26, 43, 53, 26, 41, 36 }));
        if (((File)localObject1).exists()) {
          ((File)localObject1).delete();
        }
        if (((File)localObject2).exists()) {
          ((File)localObject2).delete();
        }
        localObject3 = ((HttpResponse)localObject3).getEntity().getContent();
        FileOutputStream localFileOutputStream = new FileOutputStream((File)localObject1);
        byte[] arrayOfByte = new byte['Ð€'];
        for (;;)
        {
          int i = ((InputStream)localObject3).read(arrayOfByte);
          if (i == -1)
          {
            ((InputStream)localObject3).close();
            localFileOutputStream.flush();
            localFileOutputStream.close();
            ((File)localObject1).renameTo((File)localObject2);
            this.a.handler.sendEmptyMessage(0);
            return;
          }
          localFileOutputStream.write(arrayOfByte, 0, i);
        }
      }
      return;
    }
    catch (ClientProtocolException localClientProtocolException)
    {
      this.a.handler.sendEmptyMessage(0);
      return;
      this.a.handler.sendEmptyMessage(0);
      return;
    }
    catch (IOException localIOException)
    {
      this.a.handler.sendEmptyMessage(0);
    }
  }
}
