package c.t.m.g;

import android.telephony.CellLocation;
import android.telephony.SignalStrength;
import android.telephony.TelephonyManager;
import android.telephony.cdma.CdmaCellLocation;
import android.telephony.gsm.GsmCellLocation;
import java.util.Collections;
import java.util.List;
import org.eclipse.jdt.annotation.NonNull;
import org.eclipse.jdt.annotation.Nullable;

public final class t
{
  public int a = 0;
  public int b = 0;
  public int c = 0;
  public int d = 0;
  public int e = 0;
  public int f = 0;
  public int g = Integer.MAX_VALUE;
  public int h = Integer.MAX_VALUE;
  public final long i = System.currentTimeMillis();
  private List j;
  
  private t() {}
  
  public static t a(b paramB, CellLocation paramCellLocation, SignalStrength paramSignalStrength)
  {
    TelephonyManager localTelephonyManager = paramB.a();
    if (c.a.a(paramCellLocation, localTelephonyManager)) {
      paramB = null;
    }
    t localT;
    do
    {
      return paramB;
      localT = new t();
      if ((paramCellLocation instanceof GsmCellLocation))
      {
        paramB = (GsmCellLocation)paramCellLocation;
        localT.a = 1;
        localT.a(localTelephonyManager);
        localT.d = paramB.getLac();
        localT.e = paramB.getCid();
        if (paramSignalStrength == null)
        {
          localT.f = -1;
          return localT;
        }
        localT.f = (paramSignalStrength.getGsmSignalStrength() * 2 - 113);
        return localT;
      }
      paramB = localT;
    } while (!(paramCellLocation instanceof CdmaCellLocation));
    paramB = (CdmaCellLocation)paramCellLocation;
    localT.a = 2;
    localT.a(localTelephonyManager);
    localT.c = paramB.getSystemId();
    localT.d = paramB.getNetworkId();
    localT.e = paramB.getBaseStationId();
    localT.g = paramB.getBaseStationLatitude();
    localT.h = paramB.getBaseStationLongitude();
    if (paramSignalStrength == null)
    {
      localT.f = -1;
      return localT;
    }
    localT.f = paramSignalStrength.getCdmaDbm();
    return localT;
  }
  
  private void a(TelephonyManager paramTelephonyManager)
  {
    paramTelephonyManager = paramTelephonyManager.getNetworkOperator();
    if ((paramTelephonyManager != null) && (paramTelephonyManager.length() >= 5)) {}
    try
    {
      this.b = Integer.parseInt(paramTelephonyManager.substring(0, 3));
      this.c = Integer.parseInt(paramTelephonyManager.substring(3, 5));
      return;
    }
    catch (IndexOutOfBoundsException paramTelephonyManager)
    {
      new StringBuilder("CellProvider: Invalid operator numeric data: ").append(paramTelephonyManager).toString();
      aj.b();
      return;
    }
    catch (NumberFormatException paramTelephonyManager)
    {
      new StringBuilder("CellProvider: Operator numeric format error: ").append(paramTelephonyManager).toString();
      aj.b();
    }
  }
  
  @NonNull
  public final List a()
  {
    try
    {
      if (this.j == null) {
        this.j = Collections.emptyList();
      }
      List localList = this.j;
      return localList;
    }
    finally {}
  }
  
  public final void a(@Nullable List paramList)
  {
    if (paramList != null) {}
    for (;;)
    {
      try
      {
        this.j = Collections.unmodifiableList(paramList);
        return;
      }
      finally {}
      this.j = Collections.emptyList();
    }
  }
  
  public final String toString()
  {
    return "TxCellInfo [PhoneType=" + this.a + ", MCC=" + this.b + ", MNC=" + this.c + ", LAC=" + this.d + ", CID=" + this.e + ", RSSI=" + this.f + ", LAT=" + this.g + ", LNG=" + this.h + ", mTime=" + this.i + "]";
  }
}
