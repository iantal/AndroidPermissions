package c.t.m.g;

import android.annotation.SuppressLint;
import android.app.AlarmManager;
import android.app.PendingIntent;
import android.app.PendingIntent.CanceledException;
import android.app.PendingIntent.OnFinished;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.location.Location;
import android.os.Build;
import android.os.Bundle;
import android.os.Looper;
import android.os.PowerManager;
import android.os.PowerManager.WakeLock;
import android.os.SystemClock;
import android.text.TextUtils;
import android.text.format.DateFormat;
import com.tencent.map.geolocation.TencentGeofence;
import com.tencent.map.geolocation.TencentLocation;
import com.tencent.map.geolocation.TencentLocationListener;
import com.tencent.map.geolocation.TencentLocationRequest;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;

public final class c
  extends BroadcastReceiver
  implements PendingIntent.OnFinished, TencentLocationListener
{
  private final Context a;
  private final o b;
  private final PowerManager.WakeLock c;
  private final PowerManager.WakeLock d;
  private final c.b e;
  private final h f;
  private c.c g = new c.c();
  private boolean h = false;
  private boolean i = false;
  private PendingIntent j;
  private final TencentLocationRequest k = TencentLocationRequest.create().setRequestLevel(0).setInterval(0L).setAllowCache(false);
  private boolean l;
  private double m = 1.0D;
  
  public c(Context paramContext)
  {
    this(paramContext, Looper.myLooper());
  }
  
  private c(Context paramContext, Looper paramLooper)
  {
    this.a = paramContext;
    paramContext = b.a(paramContext);
    this.b = new o(paramContext, paramContext.d().c());
    paramContext = (PowerManager)this.a.getSystemService("power");
    this.c = paramContext.newWakeLock(1, "GeofenceManager");
    this.d = paramContext.newWakeLock(1, "tencent_location");
    this.d.setReferenceCounted(false);
    this.e = new c.b(this, paramLooper);
    this.f = new h((byte)0);
    paramContext = new IntentFilter();
    paramContext.addAction("android.intent.action.SCREEN_ON");
    paramContext.addAction("com.tencent.map.geolocation.wakeup");
    paramContext.addAction("android.intent.action.ACTION_POWER_DISCONNECTED");
    paramContext.addAction("android.net.conn.CONNECTIVITY_CHANGE");
    this.a.registerReceiver(this, paramContext, null, this.e);
  }
  
  private PendingIntent a(long paramLong)
  {
    AlarmManager localAlarmManager = (AlarmManager)this.a.getSystemService("alarm");
    if (localAlarmManager == null) {
      return null;
    }
    Object localObject = Build.MANUFACTURER;
    if (localObject != null) {}
    for (boolean bool = ((String)localObject).toLowerCase(Locale.US).contains("xiaomi");; bool = false)
    {
      if (this.j != null)
      {
        localAlarmManager.cancel(this.j);
        this.j = null;
        if (bool) {
          this.e.removeMessages(2);
        }
      }
      if (paramLong <= 0L) {
        break;
      }
      localObject = PendingIntent.getBroadcast(this.a, 0, l(), 134217728);
      this.j = ((PendingIntent)localObject);
      localAlarmManager.setRepeating(2, SystemClock.elapsedRealtime() + paramLong, paramLong, (PendingIntent)localObject);
      if (bool) {
        this.e.sendEmptyMessageDelayed(2, 10000L + paramLong);
      }
      new StringBuilder("setLocationAlarm: will triggered after ").append(paramLong).append(" ms, isXiaomi=").append(bool).toString();
      aj.a();
      return localObject;
    }
  }
  
  @SuppressLint({"Wakelock"})
  private void a(PendingIntent paramPendingIntent, Intent arg2)
  {
    this.c.acquire();
    try
    {
      paramPendingIntent.send(this.a, 0, ???, this, null);
      return;
    }
    catch (PendingIntent.CanceledException ???)
    {
      new StringBuilder("removeFence: fence=").append(null).append(", intent=").append(paramPendingIntent).toString();
      aj.a();
      synchronized (this.g)
      {
        Iterator localIterator = this.g.a.iterator();
        while (localIterator.hasNext()) {
          if (((g)localIterator.next()).d.equals(paramPendingIntent)) {
            localIterator.remove();
          }
        }
      }
      j();
      this.c.release();
    }
  }
  
  private void b(String paramString)
  {
    if (!c.a.b(this.a))
    {
      new StringBuilder("no data conn. skip [").append(paramString).append("]").toString();
      aj.a();
    }
    while (this.g.e) {
      return;
    }
    aj.a();
    this.g.e = true;
    this.e.sendEmptyMessage(1);
  }
  
  private void c(boolean paramBoolean)
  {
    LinkedList localLinkedList = new LinkedList();
    Object localObject3 = new LinkedList();
    Object localObject5;
    Object localObject6;
    Object localObject4;
    boolean bool;
    double d1;
    g localG;
    double d3;
    long l1;
    long l2;
    int n;
    for (;;)
    {
      int i1;
      synchronized (this.g)
      {
        this.g.e = false;
        i();
        localObject5 = k();
        new StringBuilder("updateFences: fresh_location=").append(localObject5).toString();
        aj.a();
        localObject6 = new ArrayList();
        localObject4 = this.g.a;
        if (!((List)localObject4).isEmpty())
        {
          bool = true;
          if (localObject5 == null) {
            break label1404;
          }
          if (((Location)localObject5).getAccuracy() > 500.0F) {
            ((Location)localObject5).setAccuracy(500.0F);
          }
          Iterator localIterator2 = ((List)localObject4).iterator();
          d1 = Double.MAX_VALUE;
          if (!localIterator2.hasNext()) {
            break label550;
          }
          localG = (g)localIterator2.next();
          if (localObject5 == localG.g) {
            break label1452;
          }
          localG.g = localObject5;
          d2 = localG.f;
          d3 = c.a.a(((Location)localObject5).getLatitude(), ((Location)localObject5).getLongitude(), localG.b.getLatitude(), localG.b.getLongitude());
          l1 = localG.b.getTime();
          l2 = ((Location)localObject5).getTime();
          if (l1 == 0L) {
            break label1438;
          }
          if (d3 < d2) {
            break label459;
          }
          d2 = 0.0D;
          f1 = (float)d2;
          localG.b.setTime(l2);
          localG.b.setSpeed(f1);
          localG.f = d3;
          i1 = localG.e;
          if (localG.f > localG.a.getRadius()) {
            break label1446;
          }
          n = 1;
          label308:
          if (n == 0) {
            break label509;
          }
          localG.e = 1;
          if (i1 == 1) {
            break label1452;
          }
          n = 1;
          label328:
          if ((n & 0x1) != 0) {
            localLinkedList.add(localG.d);
          }
          if ((n & 0x2) != 0) {
            ((List)localObject3).add(localG.d);
          }
          if (Double.compare(localG.f, Double.MAX_VALUE) != 0) {
            break;
          }
          d2 = Double.MAX_VALUE;
          break label1412;
          label390:
          if ((localG.e == 1) || (localG.b.getSpeed() < 0.0F)) {
            break label1458;
          }
          n = 1;
          label415:
          d1 = d3;
          if (n == 0) {
            continue;
          }
          ((List)localObject6).add(Float.valueOf(localG.a()));
          d1 = d3;
        }
      }
      bool = false;
      continue;
      label459:
      if (d3 >= d2) {
        break label1438;
      }
      l1 = Math.abs(l2 - l1) / 1000L;
      d2 = Math.abs(d2 - d3);
      if (l1 == 0L) {
        break label1429;
      }
      label498:
      d2 /= l1;
      continue;
      label509:
      localG.e = 2;
      if (i1 != 1) {
        break label1452;
      }
      n = 2;
    }
    double d2 = Math.abs(localG.a.getRadius() - localG.f);
    break label1412;
    label550:
    float f1 = 25.0F;
    if (((List)localObject6).size() > 0)
    {
      Collections.sort((List)localObject6);
      Collections.reverse((List)localObject6);
      f1 = ((Float)((List)localObject6).get(0)).floatValue();
    }
    label660:
    float f2;
    if (this.g.f[0] > 0.0F)
    {
      localObject6 = this.g.f;
      localObject6[0] = (f1 + localObject6[0]);
      localObject6 = this.g.f;
      localObject6[0] = ((float)(localObject6[0] * 0.5D));
      localObject6 = this.g.f;
      d2 = d1;
      if (!bool) {
        break label1190;
      }
      localObject6 = this.a;
      f1 = 25.0F;
      if (!b.a(this.a).f()) {
        break label1467;
      }
      f1 = 15.0F;
      f2 = 1.0F;
      label697:
      float f3 = this.g.f[0];
      if (f3 < f2) {
        break label1108;
      }
      d1 = Math.min(Math.max(f2, f3), 10.0F + f1);
      d1 = (f1 + f2) * 0.1D + d1 * 0.8D;
      if (d1 >= f2) {
        break label1475;
      }
      d1 = f2;
      label763:
      if ((localObject5 == null) || (Double.compare(d2, Double.MAX_VALUE) == 0)) {
        break label1485;
      }
      l2 = Math.min(900000.0D, Math.max(60000.0D, 1000.0D * d2 / d1));
      l1 = l2;
      if (d2 < 1000.0D)
      {
        l1 = l2;
        if (l2 > 305000L) {
          l1 = 305000L;
        }
      }
      label833:
      if ((d1 >= 5.0D) || (d2 <= 800.0D)) {
        break label1129;
      }
      this.m *= 1.02D;
      l2 = (2.0D * this.m * 60000.0D);
      l1 = l2;
      if (l2 <= 305000L) {
        break label1464;
      }
      l1 = 305000L;
      break label1464;
      label898:
      this.g.c = l1;
      if ((!paramBoolean) || (localObject5 != null)) {
        break label1493;
      }
    }
    label1108:
    label1129:
    label1190:
    label1404:
    label1412:
    label1429:
    label1438:
    label1446:
    label1452:
    label1458:
    label1464:
    label1467:
    label1475:
    label1478:
    label1485:
    label1493:
    for (paramBoolean = true;; paramBoolean = false)
    {
      String.format(Locale.getDefault(), "updateFences: needUpdates=%s, interval=%d, minDist=%5g, speed=%.2f, reschedule=%s, rate=%.2f", new Object[] { Boolean.valueOf(bool), Long.valueOf(l1), Double.valueOf(d2), Double.valueOf(d1), Boolean.valueOf(paramBoolean), Double.valueOf(this.m) });
      aj.a();
      if (!this.g.b)
      {
        this.g.b = true;
        this.d.acquire(12000L);
        this.b.a(this.k, this, this.e.getLooper());
      }
      for (;;)
      {
        localObject5 = new HashMap();
        localObject4 = ((List)localObject4).iterator();
        while (((Iterator)localObject4).hasNext())
        {
          localObject6 = (g)((Iterator)localObject4).next();
          ((HashMap)localObject5).put(((g)localObject6).a.getTag(), ((g)localObject6).toString());
        }
        this.g.f[0] = f1;
        break;
        if (!c.a.a(this.a)) {
          break label1478;
        }
        d1 = f1 * 0.3D;
        break label763;
        this.m = 1.0D;
        break label898;
        if (paramBoolean)
        {
          a(-1L);
          this.g.b = true;
          this.d.acquire(12000L);
          this.b.a(this.k, this, this.e.getLooper());
          continue;
          if (this.g.b)
          {
            this.g.b = false;
            h();
            g();
          }
        }
      }
      this.f.a.add(localObject5);
      ??? = ((List)localObject3).iterator();
      while (((Iterator)???).hasNext())
      {
        localObject3 = (PendingIntent)((Iterator)???).next();
        new StringBuilder("sendIntentExit: pendingIntent=").append(localObject3).toString();
        aj.a();
        localObject4 = new Intent();
        ((Intent)localObject4).putExtra("entering", false);
        a((PendingIntent)localObject3, (Intent)localObject4);
      }
      Iterator localIterator1 = localObject1.iterator();
      while (localIterator1.hasNext())
      {
        ??? = (PendingIntent)localIterator1.next();
        new StringBuilder("sendIntentEnter: pendingIntent=").append(???).toString();
        aj.a();
        localObject3 = new Intent();
        ((Intent)localObject3).putExtra("entering", true);
        a((PendingIntent)???, (Intent)localObject3);
      }
      return;
      d2 = Double.MAX_VALUE;
      break label660;
      d3 = d1;
      if (d2 >= d1) {
        break label390;
      }
      d3 = d2;
      break label390;
      l1 += 1L;
      break label498;
      d2 = -0.0010000000474974513D;
      break;
      n = 0;
      break label308;
      n = 0;
      break label328;
      n = 0;
      break label415;
      break label898;
      f2 = 3.0F;
      break label697;
      break label763;
      d1 = f1;
      break label763;
      l1 = 60000L;
      break label833;
    }
  }
  
  private void f()
  {
    if (this.h) {
      throw new IllegalStateException("this object has been destroyed!");
    }
  }
  
  private void g()
  {
    a(-1L);
    this.e.removeMessages(2);
    this.b.b();
  }
  
  private void h()
  {
    Object localObject = this.g;
    ((c.c)localObject).a.clear();
    ((c.c)localObject).b = false;
    ((c.c)localObject).c = 60000L;
    ((c.c)localObject).d = null;
    ((c.c)localObject).e = false;
    localObject = this.f;
  }
  
  private void i()
  {
    long l1 = SystemClock.elapsedRealtime();
    Iterator localIterator = this.g.a.iterator();
    while (localIterator.hasNext()) {
      if (((g)localIterator.next()).c < l1) {
        localIterator.remove();
      }
    }
  }
  
  private void j()
  {
    if (!this.g.e)
    {
      aj.a();
      this.g.e = true;
      this.e.sendEmptyMessage(1);
    }
  }
  
  private Location k()
  {
    Location localLocation2 = this.g.d;
    List localList = this.g.a;
    Location localLocation1 = localLocation2;
    if (localLocation2 == null)
    {
      localLocation1 = localLocation2;
      if (!localList.isEmpty()) {
        localLocation1 = c.a.a(this.b.a(), this.i);
      }
    }
    if (localLocation1 == null) {}
    while (System.currentTimeMillis() - localLocation1.getTime() >= 60000L) {
      return null;
    }
    return localLocation1;
  }
  
  private static Intent l()
  {
    Intent localIntent = new Intent("com.tencent.map.geolocation.wakeup");
    localIntent.putExtra("com.tencent.map.geolocation.from_alarm", true);
    return localIntent;
  }
  
  public final void a()
  {
    if (!this.h)
    {
      g();
      Arrays.fill(this.g.f, -1.0F);
      this.a.unregisterReceiver(this);
    }
    synchronized (this.g)
    {
      h();
      this.i = false;
      this.h = true;
      return;
    }
  }
  
  public final void a(TencentGeofence paramTencentGeofence)
  {
    f();
    if (paramTencentGeofence == null) {
      return;
    }
    new StringBuilder("removeFence: fence=").append(paramTencentGeofence).toString();
    aj.a();
    synchronized (this.g)
    {
      Iterator localIterator = this.g.a.iterator();
      while (localIterator.hasNext()) {
        if (paramTencentGeofence.equals(((g)localIterator.next()).a)) {
          localIterator.remove();
        }
      }
    }
    j();
  }
  
  public final void a(TencentGeofence paramTencentGeofence, PendingIntent paramPendingIntent)
  {
    f();
    if ((paramTencentGeofence == null) || (paramPendingIntent == null)) {
      throw new NullPointerException();
    }
    new StringBuilder("addFence: , geofence=").append(paramTencentGeofence).append(", intent=").append(paramPendingIntent).toString();
    aj.a();
    g localG1 = new g(paramTencentGeofence, paramTencentGeofence.getExpireAt(), paramPendingIntent);
    List localList = this.g.a;
    synchronized (this.g)
    {
      int n = localList.size() - 1;
      if (n >= 0)
      {
        g localG2 = (g)localList.get(n);
        if ((paramTencentGeofence.equals(localG2.a)) && (paramPendingIntent.equals(localG2.d))) {
          localList.remove(n);
        }
      }
      else
      {
        localList.add(localG1);
        j();
        return;
      }
      n -= 1;
    }
  }
  
  public final void a(String paramString)
  {
    f();
    new StringBuilder("removeFence: tag=").append(paramString).toString();
    aj.a();
    synchronized (this.g)
    {
      Iterator localIterator = this.g.a.iterator();
      while (localIterator.hasNext())
      {
        TencentGeofence localTencentGeofence = ((g)localIterator.next()).a;
        if ((localTencentGeofence == null) || (TextUtils.equals(localTencentGeofence.getTag(), paramString))) {
          localIterator.remove();
        }
      }
    }
    new StringBuilder("removeFence: ").append(paramString).append(" removed --> schedule update fence").toString();
    j();
  }
  
  public final void a(boolean paramBoolean)
  {
    this.i = paramBoolean;
    if (paramBoolean)
    {
      this.b.a(0);
      return;
    }
    this.b.a(1);
  }
  
  public final void b()
  {
    f();
    synchronized (this.g)
    {
      this.b.b();
      h();
      return;
    }
  }
  
  public final void b(boolean paramBoolean)
  {
    this.l = paramBoolean;
    if (paramBoolean) {
      this.k.getExtras().putBoolean("use_network", false);
    }
  }
  
  public final h c()
  {
    f();
    return this.f;
  }
  
  public final void onLocationChanged(TencentLocation arg1, int paramInt, String paramString)
  {
    paramString = c.a.a(???, this.i);
    if (??? == null) {}
    for (long l1 = System.currentTimeMillis();; l1 = ???.getTime())
    {
      CharSequence localCharSequence = DateFormat.format("yyyy-MM-dd kk:mm:ss", l1);
      new StringBuilder().append(localCharSequence).append(" error=").append(paramInt).append(???).append("\n").toString();
      aj.a();
      if ((!this.i) || (paramInt == 0) || ("gps".equals(???.getProvider()))) {
        break;
      }
      return;
    }
    if (!this.l) {
      this.b.b();
    }
    if (paramInt == 0) {
      this.f.a(paramInt, ???);
    }
    for (;;)
    {
      synchronized (this.g)
      {
        if (this.g.b) {
          this.g.d = paramString;
        }
        if (this.g.e)
        {
          this.e.removeMessages(1);
          aj.a();
          c(false);
          if (this.g.b)
          {
            new StringBuilder("onLocationChanged: set a new repeat alarm, interval=").append(this.g.c).toString();
            aj.a();
            a(this.g.c);
          }
          if (!this.d.isHeld()) {
            break;
          }
          this.d.release();
          return;
        }
        this.g.e = true;
      }
      this.g.c = 60000L;
      this.f.a(paramInt, ???);
    }
  }
  
  public final void onReceive(Context arg1, Intent paramIntent)
  {
    int n = 1;
    paramIntent = paramIntent.getAction();
    for (;;)
    {
      synchronized (this.g)
      {
        if (k() != null) {
          break label229;
        }
        if ("android.intent.action.SCREEN_ON".equals(paramIntent))
        {
          if (n != 0) {
            b("onReceive: screen_on and no_fresh_location --> schedule update fence");
          }
          return;
        }
        if ("com.tencent.map.geolocation.wakeup".equals(paramIntent))
        {
          paramIntent = this.a;
          if ((i.a != null) && (i.a.isHeld())) {
            i.a.release();
          }
          paramIntent = ((PowerManager)paramIntent.getSystemService("power")).newWakeLock(1, "WakeLocker");
          i.a = paramIntent;
          paramIntent.acquire(5000L);
          this.e.removeMessages(2);
          j();
          if ((i.a != null) && (i.a.isHeld())) {
            i.a.release();
          }
          i.a = null;
        }
      }
      if ("android.intent.action.ACTION_POWER_DISCONNECTED".equals(paramIntent))
      {
        if (n != 0) {
          b("onReceive: power_disconnected --> schedule update fence");
        }
      }
      else if ("android.net.conn.CONNECTIVITY_CHANGE".equals(paramIntent))
      {
        if (!c.a.b(this.a))
        {
          aj.a();
          this.g.b = false;
          this.g.c = 60000L;
          g();
        }
        b("onReceive: connected and no_fresh_location --> schedule update fence");
        continue;
        label229:
        n = 0;
      }
    }
  }
  
  public final void onSendFinished(PendingIntent paramPendingIntent, Intent paramIntent, int paramInt, String paramString, Bundle paramBundle)
  {
    this.c.release();
  }
  
  public final void onStatusUpdate(String paramString1, int paramInt, String paramString2) {}
}
