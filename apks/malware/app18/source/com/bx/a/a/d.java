package com.bx.a.a;

public final class d
{
  private static char a;
  private static byte[] b;
  private static char[] c;
  
  static
  {
    int k = 0;
    a = '=';
    b = new byte[''];
    c = new char[64];
    int i = 0;
    label34:
    label43:
    label52:
    label76:
    int j;
    if (i >= 128)
    {
      i = 90;
      if (i >= 65) {
        break label134;
      }
      i = 122;
      if (i >= 97) {
        break label151;
      }
      i = 57;
      if (i >= 48) {
        break label171;
      }
      b[43] = 62;
      b[47] = 63;
      i = 0;
      if (i <= 25) {
        break label191;
      }
      j = 26;
      i = 0;
      label87:
      if (j <= 51) {
        break label208;
      }
      j = 52;
      i = k;
    }
    for (;;)
    {
      if (j > 61)
      {
        c[62] = '+';
        c[63] = '/';
        return;
        b[i] = -1;
        i += 1;
        break;
        label134:
        b[i] = ((byte)(i - 65));
        i -= 1;
        break label34;
        label151:
        b[i] = ((byte)(i - 97 + 26));
        i -= 1;
        break label43;
        label171:
        b[i] = ((byte)(i - 48 + 52));
        i -= 1;
        break label52;
        label191:
        c[i] = ((char)(i + 65));
        i += 1;
        break label76;
        label208:
        c[j] = ((char)(i + 97));
        j += 1;
        i += 1;
        break label87;
      }
      c[j] = ((char)(i + 48));
      j += 1;
      i += 1;
    }
  }
  
  public static String a(byte[] paramArrayOfByte)
  {
    int k = 0;
    if (paramArrayOfByte == null) {
      return null;
    }
    int i = paramArrayOfByte.length * 8;
    if (i == 0) {
      return "";
    }
    int i2 = i % 24;
    int i1 = i / 24;
    char[] arrayOfChar;
    if (i2 != 0)
    {
      i = i1 + 1;
      arrayOfChar = new char[i * 4];
      i = 0;
      j = 0;
      if (j < i1) {
        break label151;
      }
      if (i2 != 8) {
        break label371;
      }
      j = paramArrayOfByte[k];
      k = (byte)(j & 0x3);
      if ((j & 0xFFFFFF80) != 0) {
        break label359;
      }
      j = (byte)(j >> 2);
      m = i + 1;
      arrayOfChar[i] = c[j];
      i = m + 1;
      arrayOfChar[m] = c[(k << 4)];
      arrayOfChar[i] = a;
      arrayOfChar[(i + 1)] = a;
    }
    label151:
    label204:
    label219:
    label330:
    label344:
    label359:
    label371:
    while (i2 != 16) {
      for (;;)
      {
        return new String(arrayOfChar);
        i = i1;
        break;
        m = k + 1;
        k = paramArrayOfByte[k];
        int i3 = m + 1;
        m = paramArrayOfByte[m];
        int i4 = paramArrayOfByte[i3];
        int i5 = (byte)(m & 0xF);
        int i6 = (byte)(k & 0x3);
        if ((k & 0xFFFFFF80) == 0)
        {
          k = (byte)(k >> 2);
          if ((m & 0xFFFFFF80) != 0) {
            break label330;
          }
          m = (byte)(m >> 4);
          if ((i4 & 0xFFFFFF80) != 0) {
            break label344;
          }
        }
        for (n = (byte)(i4 >> 6);; n = (byte)(i4 >> 6 ^ 0xFC))
        {
          int i7 = i + 1;
          arrayOfChar[i] = c[k];
          i = i7 + 1;
          arrayOfChar[i7] = c[(m | i6 << 4)];
          k = i + 1;
          arrayOfChar[i] = c[(n | i5 << 2)];
          arrayOfChar[k] = c[(i4 & 0x3F)];
          i = k + 1;
          j += 1;
          k = i3 + 1;
          break;
          k = (byte)(k >> 2 ^ 0xC0);
          break label204;
          m = (byte)(m >> 4 ^ 0xF0);
          break label219;
        }
        j = (byte)(j >> 2 ^ 0xC0);
      }
    }
    int j = paramArrayOfByte[k];
    k = paramArrayOfByte[(k + 1)];
    int m = (byte)(k & 0xF);
    int n = (byte)(j & 0x3);
    if ((j & 0xFFFFFF80) == 0)
    {
      j = (byte)(j >> 2);
      label413:
      if ((k & 0xFFFFFF80) != 0) {
        break label495;
      }
    }
    label495:
    for (k = (byte)(k >> 4);; k = (byte)(k >> 4 ^ 0xF0))
    {
      i1 = i + 1;
      arrayOfChar[i] = c[j];
      i = i1 + 1;
      arrayOfChar[i1] = c[(k | n << 4)];
      arrayOfChar[i] = c[(m << 2)];
      arrayOfChar[(i + 1)] = a;
      break;
      j = (byte)(j >> 2 ^ 0xC0);
      break label413;
    }
  }
  
  private static boolean a(char paramChar)
  {
    return paramChar == a;
  }
  
  public static byte[] a(String paramString)
  {
    if (paramString == null) {
      return null;
    }
    Object localObject = paramString.toCharArray();
    if (localObject == null) {
      k = 0;
    }
    while (k % 4 != 0)
    {
      return null;
      n = localObject.length;
      i = 0;
      j = 0;
      k = i;
      if (j < n)
      {
        k = localObject[j];
        if ((k != 32) && (k != 13) && (k != 10) && (k != 9)) {}
        for (m = 0;; m = 1)
        {
          k = i;
          if (m == 0)
          {
            localObject[i] = localObject[j];
            k = i + 1;
          }
          j += 1;
          i = k;
          break;
        }
      }
    }
    int m = k / 4;
    if (m == 0) {
      return new byte[0];
    }
    paramString = new byte[m * 3];
    int j = 0;
    int i = 0;
    int k = 0;
    for (;;)
    {
      if (j >= m - 1)
      {
        m = k + 1;
        c1 = localObject[k];
        if (b(c1))
        {
          n = m + 1;
          c2 = localObject[m];
          if (b(c2)) {
            break;
          }
        }
        return null;
      }
      n = k + 1;
      c1 = localObject[k];
      char c3;
      char c4;
      if (b(c1))
      {
        i1 = n + 1;
        c2 = localObject[n];
        if (b(c2))
        {
          k = i1 + 1;
          c3 = localObject[i1];
          if (b(c3))
          {
            c4 = localObject[k];
            if (b(c4)) {
              break label287;
            }
          }
        }
      }
      return null;
      label287:
      int i4 = b[c1];
      int i2 = b[c2];
      n = b[c3];
      i1 = b[c4];
      int i3 = i + 1;
      paramString[i] = ((byte)(i4 << 2 | i2 >> 4));
      i4 = i3 + 1;
      paramString[i3] = ((byte)((i2 & 0xF) << 4 | n >> 2 & 0xF));
      i = i4 + 1;
      paramString[i4] = ((byte)(n << 6 | i1));
      j += 1;
      k += 1;
    }
    k = b[c1];
    m = b[c2];
    char c1 = localObject[n];
    char c2 = localObject[(n + 1)];
    if ((!b(c1)) || (!b(c2)))
    {
      if ((a(c1)) && (a(c2)))
      {
        if ((m & 0xF) != 0) {
          return null;
        }
        localObject = new byte[j * 3 + 1];
        System.arraycopy(paramString, 0, localObject, 0, j * 3);
        localObject[i] = ((byte)(k << 2 | m >> 4));
        return localObject;
      }
      if ((!a(c1)) && (a(c2)))
      {
        n = b[c1];
        if ((n & 0x3) != 0) {
          return null;
        }
        localObject = new byte[j * 3 + 2];
        System.arraycopy(paramString, 0, localObject, 0, j * 3);
        localObject[i] = ((byte)(k << 2 | m >> 4));
        localObject[(i + 1)] = ((byte)((m & 0xF) << 4 | n >> 2 & 0xF));
        return localObject;
      }
      return null;
    }
    j = b[c1];
    int n = b[c2];
    int i1 = i + 1;
    paramString[i] = ((byte)(k << 2 | m >> 4));
    paramString[i1] = ((byte)((m & 0xF) << 4 | j >> 2 & 0xF));
    paramString[(i1 + 1)] = ((byte)(j << 6 | n));
    return paramString;
  }
  
  private static boolean b(char paramChar)
  {
    return (paramChar < '') && (b[paramChar] != -1);
  }
}
