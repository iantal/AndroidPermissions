package android.support.v4.widget;

import android.view.View;

final class g
  extends am
{
  private final int b;
  private aj c;
  private final Runnable d = new h(this);
  
  public g(DrawerLayout paramDrawerLayout, int paramInt)
  {
    this.b = paramInt;
  }
  
  private void c()
  {
    int i = 3;
    if (this.b == 3) {
      i = 5;
    }
    View localView = this.a.b(i);
    if (localView != null) {
      this.a.e(localView);
    }
  }
  
  public final void a()
  {
    this.a.removeCallbacks(this.d);
  }
  
  public final void a(int paramInt)
  {
    DrawerLayout localDrawerLayout = this.a;
    int i = this.b;
    localDrawerLayout.a(paramInt, this.c.c());
  }
  
  public final void a(int paramInt1, int paramInt2)
  {
    if ((paramInt1 & 0x1) == 1) {}
    for (View localView = this.a.b(3);; localView = this.a.b(5))
    {
      if ((localView != null) && (this.a.a(localView) == 0)) {
        this.c.a(localView, paramInt2);
      }
      return;
    }
  }
  
  public final void a(aj paramAj)
  {
    this.c = paramAj;
  }
  
  public final void a(View paramView, float paramFloat)
  {
    DrawerLayout localDrawerLayout = this.a;
    float f = DrawerLayout.b(paramView);
    int k = paramView.getWidth();
    int i;
    if (this.a.a(paramView, 3)) {
      if ((paramFloat > 0.0F) || ((paramFloat == 0.0F) && (f > 0.5F))) {
        i = 0;
      }
    }
    for (;;)
    {
      this.c.a(i, paramView.getTop());
      this.a.invalidate();
      return;
      i = -k;
      continue;
      int j = this.a.getWidth();
      if (paramFloat >= 0.0F)
      {
        i = j;
        if (paramFloat == 0.0F)
        {
          i = j;
          if (f <= 0.5F) {}
        }
      }
      else
      {
        i = j - k;
      }
    }
  }
  
  public final void a(View paramView, int paramInt)
  {
    int i = paramView.getWidth();
    float f;
    if (this.a.a(paramView, 3))
    {
      f = (i + paramInt) / i;
      this.a.a(paramView, f);
      if (f != 0.0F) {
        break label76;
      }
    }
    label76:
    for (paramInt = 4;; paramInt = 0)
    {
      paramView.setVisibility(paramInt);
      this.a.invalidate();
      return;
      f = (this.a.getWidth() - paramInt) / i;
      break;
    }
  }
  
  public final boolean a(View paramView)
  {
    DrawerLayout localDrawerLayout = this.a;
    return (DrawerLayout.d(paramView)) && (this.a.a(paramView, this.b)) && (this.a.a(paramView) == 0);
  }
  
  public final int b(View paramView, int paramInt)
  {
    if (this.a.a(paramView, 3)) {
      return Math.max(-paramView.getWidth(), Math.min(paramInt, 0));
    }
    int i = this.a.getWidth();
    return Math.max(i - paramView.getWidth(), Math.min(paramInt, i));
  }
  
  public final void b()
  {
    this.a.postDelayed(this.d, 160L);
  }
  
  public final void b(View paramView)
  {
    ((DrawerLayout.LayoutParams)paramView.getLayoutParams()).c = false;
    c();
  }
  
  public final int c(View paramView)
  {
    return paramView.getWidth();
  }
  
  public final int d(View paramView)
  {
    return paramView.getTop();
  }
}
