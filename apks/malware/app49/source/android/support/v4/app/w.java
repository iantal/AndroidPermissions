package android.support.v4.app;

import android.os.Bundle;
import android.support.v4.b.m;
import android.support.v4.content.e;
import android.util.Log;
import java.io.PrintWriter;
import java.lang.reflect.Modifier;

final class w
  extends u
{
  static boolean a = false;
  final m<x> b;
  final m<x> c;
  final String d;
  FragmentActivity e;
  boolean f;
  boolean g;
  
  final void a(FragmentActivity paramFragmentActivity)
  {
    this.e = paramFragmentActivity;
  }
  
  public final void a(String paramString, PrintWriter paramPrintWriter)
  {
    int j = 0;
    String str;
    int i;
    x localX;
    if (this.b.a() > 0)
    {
      paramPrintWriter.print(paramString);
      paramPrintWriter.println("Active Loaders:");
      str = paramString + "    ";
      i = 0;
      while (i < this.b.a())
      {
        localX = (x)this.b.b(i);
        paramPrintWriter.print(paramString);
        paramPrintWriter.print("  #");
        paramPrintWriter.print(this.b.a(i));
        paramPrintWriter.print(": ");
        paramPrintWriter.println(localX.toString());
        localX.a(str, paramPrintWriter);
        i += 1;
      }
    }
    if (this.c.a() > 0)
    {
      paramPrintWriter.print(paramString);
      paramPrintWriter.println("Inactive Loaders:");
      str = paramString + "    ";
      i = j;
      while (i < this.c.a())
      {
        localX = (x)this.c.b(i);
        paramPrintWriter.print(paramString);
        paramPrintWriter.print("  #");
        paramPrintWriter.print(this.c.a(i));
        paramPrintWriter.print(": ");
        paramPrintWriter.println(localX.toString());
        localX.a(str, paramPrintWriter);
        i += 1;
      }
    }
  }
  
  public final boolean a()
  {
    int j = this.b.a();
    int i = 0;
    boolean bool2 = false;
    if (i < j)
    {
      x localX = (x)this.b.b(i);
      if ((localX.h) && (!localX.f)) {}
      for (boolean bool1 = true;; bool1 = false)
      {
        bool2 |= bool1;
        i += 1;
        break;
      }
    }
    return bool2;
  }
  
  final void b()
  {
    if (a) {
      Log.v("LoaderManager", "Starting in " + this);
    }
    Object localObject;
    if (this.f)
    {
      localObject = new RuntimeException("here");
      ((RuntimeException)localObject).fillInStackTrace();
      Log.w("LoaderManager", "Called doStart when already started: " + this, (Throwable)localObject);
      return;
    }
    this.f = true;
    int i = this.b.a() - 1;
    label89:
    if (i >= 0)
    {
      localObject = (x)this.b.b(i);
      if ((!((x)localObject).i) || (!((x)localObject).j)) {
        break label131;
      }
      ((x)localObject).h = true;
    }
    for (;;)
    {
      i -= 1;
      break label89;
      break;
      label131:
      if (!((x)localObject).h)
      {
        ((x)localObject).h = true;
        if (a) {
          Log.v("LoaderManager", "  Starting: " + localObject);
        }
        if ((((x)localObject).d == null) && (((x)localObject).c != null))
        {
          v localV = ((x)localObject).c;
          int j = ((x)localObject).a;
          Bundle localBundle = ((x)localObject).b;
          ((x)localObject).d = localV.a();
        }
        if (((x)localObject).d != null)
        {
          if ((((x)localObject).d.getClass().isMemberClass()) && (!Modifier.isStatic(((x)localObject).d.getClass().getModifiers()))) {
            throw new IllegalArgumentException("Object returned from onCreateLoader must not be a non-static inner member class: " + ((x)localObject).d);
          }
          if (!((x)localObject).m)
          {
            ((x)localObject).d.a(((x)localObject).a, (e)localObject);
            ((x)localObject).m = true;
          }
          ((x)localObject).d.a();
        }
      }
    }
  }
  
  final void c()
  {
    if (a) {
      Log.v("LoaderManager", "Stopping in " + this);
    }
    if (!this.f)
    {
      RuntimeException localRuntimeException = new RuntimeException("here");
      localRuntimeException.fillInStackTrace();
      Log.w("LoaderManager", "Called doStop when not started: " + this, localRuntimeException);
      return;
    }
    int i = this.b.a() - 1;
    while (i >= 0)
    {
      ((x)this.b.b(i)).a();
      i -= 1;
    }
    this.f = false;
  }
  
  final void d()
  {
    if (a) {
      Log.v("LoaderManager", "Retaining in " + this);
    }
    Object localObject;
    if (!this.f)
    {
      localObject = new RuntimeException("here");
      ((RuntimeException)localObject).fillInStackTrace();
      Log.w("LoaderManager", "Called doRetain when not started: " + this, (Throwable)localObject);
    }
    for (;;)
    {
      return;
      this.g = true;
      this.f = false;
      int i = this.b.a() - 1;
      while (i >= 0)
      {
        localObject = (x)this.b.b(i);
        if (a) {
          Log.v("LoaderManager", "  Retaining: " + localObject);
        }
        ((x)localObject).i = true;
        ((x)localObject).j = ((x)localObject).h;
        ((x)localObject).h = false;
        ((x)localObject).c = null;
        i -= 1;
      }
    }
  }
  
  final void e()
  {
    if (this.g)
    {
      if (a) {
        Log.v("LoaderManager", "Finished Retaining in " + this);
      }
      this.g = false;
      int i = this.b.a() - 1;
      while (i >= 0)
      {
        x localX = (x)this.b.b(i);
        if (localX.i)
        {
          if (a) {
            Log.v("LoaderManager", "  Finished Retaining: " + localX);
          }
          localX.i = false;
          if ((localX.h != localX.j) && (!localX.h)) {
            localX.a();
          }
        }
        if ((localX.h) && (localX.e) && (!localX.k)) {
          localX.a(localX.d, localX.g);
        }
        i -= 1;
      }
    }
  }
  
  final void f()
  {
    int i = this.b.a() - 1;
    while (i >= 0)
    {
      ((x)this.b.b(i)).k = true;
      i -= 1;
    }
  }
  
  final void g()
  {
    int i = this.b.a() - 1;
    while (i >= 0)
    {
      x localX = (x)this.b.b(i);
      if ((localX.h) && (localX.k))
      {
        localX.k = false;
        if (localX.e) {
          localX.a(localX.d, localX.g);
        }
      }
      i -= 1;
    }
  }
  
  final void h()
  {
    if (!this.g)
    {
      if (a) {
        Log.v("LoaderManager", "Destroying Active in " + this);
      }
      i = this.b.a() - 1;
      while (i >= 0)
      {
        ((x)this.b.b(i)).b();
        i -= 1;
      }
      this.b.b();
    }
    if (a) {
      Log.v("LoaderManager", "Destroying Inactive in " + this);
    }
    int i = this.c.a() - 1;
    while (i >= 0)
    {
      ((x)this.c.b(i)).b();
      i -= 1;
    }
    this.c.b();
  }
  
  public final String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder(128);
    localStringBuilder.append("LoaderManager{");
    localStringBuilder.append(Integer.toHexString(System.identityHashCode(this)));
    localStringBuilder.append(" in ");
    android.support.v4.b.d.a(this.e, localStringBuilder);
    localStringBuilder.append("}}");
    return localStringBuilder.toString();
  }
}
