package android.support.v4.view;

import android.content.Context;
import android.content.res.Resources;
import android.content.res.Resources.NotFoundException;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.os.Build.VERSION;
import android.os.Parcelable;
import android.support.v4.widget.i;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.FocusFinder;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.SoundEffectConstants;
import android.view.VelocityTracker;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.ViewConfiguration;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.ViewParent;
import android.view.accessibility.AccessibilityEvent;
import android.view.animation.Interpolator;
import android.widget.Scroller;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

public class ViewPager
  extends ViewGroup
{
  private static final int[] a = { 16842931 };
  private static final br ad = new br();
  private static final Comparator<bl> c = new bh();
  private static final Interpolator d = new bi();
  private boolean A;
  private int B;
  private int C;
  private int D;
  private float E;
  private float F;
  private float G;
  private float H;
  private int I = -1;
  private VelocityTracker J;
  private int K;
  private int L;
  private int M;
  private int N;
  private boolean O;
  private i P;
  private i Q;
  private boolean R = true;
  private boolean S = false;
  private boolean T;
  private int U;
  private bo V;
  private bo W;
  private bn Z;
  private bp aa;
  private int ab;
  private ArrayList<View> ac;
  private final Runnable ae = new bj(this);
  private int af = 0;
  private int b;
  private final ArrayList<bl> e = new ArrayList();
  private final bl f = new bl();
  private final Rect g = new Rect();
  private aa h;
  private int i;
  private int j = -1;
  private Parcelable k = null;
  private ClassLoader l = null;
  private Scroller m;
  private int n;
  private Drawable o;
  private int p;
  private int q;
  private float r = -3.4028235E38F;
  private float s = Float.MAX_VALUE;
  private int t;
  private int u;
  private boolean v;
  private boolean w;
  private boolean x;
  private int y = 1;
  private boolean z;
  
  public ViewPager(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    setWillNotDraw(false);
    setDescendantFocusability(262144);
    setFocusable(true);
    paramContext = getContext();
    this.m = new Scroller(paramContext, d);
    paramAttributeSet = ViewConfiguration.get(paramContext);
    float f1 = paramContext.getResources().getDisplayMetrics().density;
    this.D = ax.a(paramAttributeSet);
    this.K = ((int)(400.0F * f1));
    this.L = paramAttributeSet.getScaledMaximumFlingVelocity();
    this.P = new i(paramContext);
    this.Q = new i(paramContext);
    this.M = ((int)(25.0F * f1));
    this.N = ((int)(2.0F * f1));
    this.B = ((int)(16.0F * f1));
    an.a(this, new bm(this));
    if (an.d(this) == 0) {
      an.e(this);
    }
  }
  
  private Rect a(Rect paramRect, View paramView)
  {
    if (paramRect == null) {
      paramRect = new Rect();
    }
    for (;;)
    {
      if (paramView == null)
      {
        paramRect.set(0, 0, 0, 0);
        return paramRect;
      }
      paramRect.left = paramView.getLeft();
      paramRect.right = paramView.getRight();
      paramRect.top = paramView.getTop();
      paramRect.bottom = paramView.getBottom();
      for (paramView = paramView.getParent(); ((paramView instanceof ViewGroup)) && (paramView != this); paramView = paramView.getParent())
      {
        paramView = (ViewGroup)paramView;
        paramRect.left += paramView.getLeft();
        paramRect.right += paramView.getRight();
        paramRect.top += paramView.getTop();
        paramRect.bottom += paramView.getBottom();
      }
      return paramRect;
    }
  }
  
  private bl a(View paramView)
  {
    for (;;)
    {
      paramView = paramView.getParent();
      if (paramView == this) {
        break;
      }
      if ((paramView == null) || (!(paramView instanceof View))) {
        return null;
      }
      paramView = (View)paramView;
    }
    return g();
  }
  
  private void a(int paramInt, float paramFloat)
  {
    int i1;
    int i2;
    int i7;
    int i5;
    Object localObject;
    int i3;
    int i4;
    label129:
    int i9;
    if (this.U > 0)
    {
      int i6 = getScrollX();
      i1 = getPaddingLeft();
      i2 = getPaddingRight();
      i7 = getWidth();
      int i8 = getChildCount();
      i5 = 0;
      if (i5 < i8)
      {
        localObject = getChildAt(i5);
        ViewPager.LayoutParams localLayoutParams = (ViewPager.LayoutParams)((View)localObject).getLayoutParams();
        if (!localLayoutParams.a) {
          break label386;
        }
        switch (localLayoutParams.b & 0x7)
        {
        case 2: 
        case 4: 
        default: 
          i3 = i1;
          i4 = i2;
          i2 = i1;
          i1 = i4;
          i9 = i3 + i6 - ((View)localObject).getLeft();
          i3 = i1;
          i4 = i2;
          if (i9 != 0)
          {
            ((View)localObject).offsetLeftAndRight(i9);
            i4 = i2;
            i3 = i1;
          }
          break;
        }
      }
    }
    for (;;)
    {
      i5 += 1;
      i1 = i4;
      i2 = i3;
      break;
      i3 = ((View)localObject).getWidth();
      i4 = i3 + i1;
      i3 = i1;
      i1 = i2;
      i2 = i4;
      break label129;
      i3 = Math.max((i7 - ((View)localObject).getMeasuredWidth()) / 2, i1);
      i4 = i1;
      i1 = i2;
      i2 = i4;
      break label129;
      i3 = i7 - i2 - ((View)localObject).getMeasuredWidth();
      i9 = ((View)localObject).getMeasuredWidth();
      i4 = i1;
      i1 = i2 + i9;
      i2 = i4;
      break label129;
      if (this.V != null) {
        this.V.a(paramInt, paramFloat);
      }
      if (this.W != null) {
        this.W.a(paramInt, paramFloat);
      }
      if (this.aa != null)
      {
        getScrollX();
        i1 = getChildCount();
        paramInt = 0;
        while (paramInt < i1)
        {
          localObject = getChildAt(paramInt);
          if (!((ViewPager.LayoutParams)((View)localObject).getLayoutParams()).a)
          {
            ((View)localObject).getLeft();
            e();
            localObject = this.aa;
          }
          paramInt += 1;
        }
      }
      this.T = true;
      return;
      label386:
      i3 = i2;
      i4 = i1;
    }
  }
  
  private void a(int paramInt1, boolean paramBoolean1, int paramInt2, boolean paramBoolean2)
  {
    Object localObject = f(paramInt1);
    paramInt1 = 0;
    if (localObject != null) {
      paramInt1 = (int)(e() * Math.max(this.r, Math.min(((bl)localObject).e, this.s)));
    }
    if (paramBoolean1)
    {
      if (getChildCount() == 0) {
        b(false);
      }
      int i1;
      int i2;
      int i3;
      int i4;
      for (;;)
      {
        if ((paramBoolean2) && (this.V != null)) {
          this.V.a();
        }
        if ((paramBoolean2) && (this.W != null)) {
          this.W.a();
        }
        return;
        i1 = getScrollX();
        i2 = getScrollY();
        i3 = paramInt1 - i1;
        i4 = 0 - i2;
        if ((i3 != 0) || (i4 != 0)) {
          break;
        }
        a(false);
        c();
        b(0);
      }
      b(true);
      b(2);
      paramInt1 = e();
      int i5 = paramInt1 / 2;
      float f3 = Math.min(1.0F, 1.0F * Math.abs(i3) / paramInt1);
      float f1 = i5;
      float f2 = i5;
      f3 = (float)Math.sin((float)((f3 - 0.5F) * 0.4712389167638204D));
      paramInt2 = Math.abs(paramInt2);
      if (paramInt2 > 0) {}
      for (paramInt1 = Math.round(1000.0F * Math.abs((f2 * f3 + f1) / paramInt2)) * 4;; paramInt1 = (int)((Math.abs(i3) / (f1 * 1.0F + this.n) + 1.0F) * 100.0F))
      {
        paramInt1 = Math.min(paramInt1, 600);
        this.m.startScroll(i1, i2, i3, i4, paramInt1);
        an.c(this);
        break;
        f1 = paramInt1;
        localObject = this.h;
        paramInt1 = this.i;
      }
    }
    if ((paramBoolean2) && (this.V != null)) {
      this.V.a();
    }
    if ((paramBoolean2) && (this.W != null)) {
      this.W.a();
    }
    a(false);
    scrollTo(paramInt1, 0);
    g(paramInt1);
  }
  
  private void a(int paramInt, boolean paramBoolean1, boolean paramBoolean2)
  {
    a(paramInt, paramBoolean1, paramBoolean2, 0);
  }
  
  private void a(int paramInt1, boolean paramBoolean1, boolean paramBoolean2, int paramInt2)
  {
    boolean bool = false;
    if ((this.h == null) || (this.h.a() <= 0))
    {
      b(false);
      return;
    }
    if ((!paramBoolean2) && (this.i == paramInt1) && (this.e.size() != 0))
    {
      b(false);
      return;
    }
    int i1;
    if (paramInt1 < 0) {
      i1 = 0;
    }
    for (;;)
    {
      paramInt1 = this.y;
      if ((i1 <= this.i + paramInt1) && (i1 >= this.i - paramInt1)) {
        break;
      }
      paramInt1 = 0;
      while (paramInt1 < this.e.size())
      {
        ((bl)this.e.get(paramInt1)).c = true;
        paramInt1 += 1;
      }
      i1 = paramInt1;
      if (paramInt1 >= this.h.a()) {
        i1 = this.h.a() - 1;
      }
    }
    paramBoolean2 = bool;
    if (this.i != i1) {
      paramBoolean2 = true;
    }
    if (this.R)
    {
      this.i = i1;
      if ((paramBoolean2) && (this.V != null)) {
        this.V.a();
      }
      if ((paramBoolean2) && (this.W != null)) {
        this.W.a();
      }
      requestLayout();
      return;
    }
    e(i1);
    a(i1, paramBoolean1, paramInt2, paramBoolean2);
  }
  
  private void a(bl paramBl1, int paramInt, bl paramBl2)
  {
    int i4 = this.h.a();
    int i1 = e();
    float f2;
    aa localAa;
    if (i1 > 0)
    {
      f2 = this.n / i1;
      if (paramBl2 == null) {
        break label405;
      }
      i1 = paramBl2.b;
      if (i1 < paramBl1.b)
      {
        f1 = paramBl2.e + paramBl2.d + f2;
        i1 += 1;
        i2 = 0;
      }
    }
    else
    {
      for (;;)
      {
        if ((i1 > paramBl1.b) || (i2 >= this.e.size())) {
          break label405;
        }
        for (paramBl2 = (bl)this.e.get(i2);; paramBl2 = (bl)this.e.get(i2))
        {
          i3 = i1;
          f3 = f1;
          if (i1 <= paramBl2.b) {
            break;
          }
          i3 = i1;
          f3 = f1;
          if (i2 >= this.e.size() - 1) {
            break;
          }
          i2 += 1;
        }
        f2 = 0.0F;
        break;
        while (i3 < paramBl2.b)
        {
          localAa = this.h;
          f3 += 1.0F + f2;
          i3 += 1;
        }
        paramBl2.e = f3;
        f1 = f3 + (paramBl2.d + f2);
        i1 = i3 + 1;
      }
    }
    if (i1 > paramBl1.b)
    {
      i2 = this.e.size() - 1;
      f1 = paramBl2.e;
      i1 -= 1;
      while ((i1 >= paramBl1.b) && (i2 >= 0))
      {
        for (paramBl2 = (bl)this.e.get(i2);; paramBl2 = (bl)this.e.get(i2))
        {
          i3 = i1;
          f3 = f1;
          if (i1 >= paramBl2.b) {
            break;
          }
          i3 = i1;
          f3 = f1;
          if (i2 <= 0) {
            break;
          }
          i2 -= 1;
        }
        while (i3 > paramBl2.b)
        {
          localAa = this.h;
          f3 -= 1.0F + f2;
          i3 -= 1;
        }
        f1 = f3 - (paramBl2.d + f2);
        paramBl2.e = f1;
        i1 = i3 - 1;
      }
    }
    label405:
    int i3 = this.e.size();
    float f3 = paramBl1.e;
    i1 = paramBl1.b - 1;
    if (paramBl1.b == 0)
    {
      f1 = paramBl1.e;
      this.r = f1;
      if (paramBl1.b != i4 - 1) {
        break label544;
      }
      f1 = paramBl1.e + paramBl1.d - 1.0F;
      label471:
      this.s = f1;
      i2 = paramInt - 1;
      f1 = f3;
    }
    for (;;)
    {
      if (i2 < 0) {
        break label597;
      }
      paramBl2 = (bl)this.e.get(i2);
      for (;;)
      {
        if (i1 > paramBl2.b)
        {
          localAa = this.h;
          i1 -= 1;
          f1 -= 1.0F + f2;
          continue;
          f1 = -3.4028235E38F;
          break;
          label544:
          f1 = Float.MAX_VALUE;
          break label471;
        }
      }
      f1 -= paramBl2.d + f2;
      paramBl2.e = f1;
      if (paramBl2.b == 0) {
        this.r = f1;
      }
      i1 -= 1;
      i2 -= 1;
    }
    label597:
    float f1 = paramBl1.e + paramBl1.d + f2;
    int i2 = paramBl1.b + 1;
    i1 = paramInt + 1;
    paramInt = i2;
    while (i1 < i3)
    {
      paramBl1 = (bl)this.e.get(i1);
      while (paramInt < paramBl1.b)
      {
        paramBl2 = this.h;
        paramInt += 1;
        f1 += 1.0F + f2;
      }
      if (paramBl1.b == i4 - 1) {
        this.s = (paramBl1.d + f1 - 1.0F);
      }
      paramBl1.e = f1;
      f1 += paramBl1.d + f2;
      paramInt += 1;
      i1 += 1;
    }
    this.S = false;
  }
  
  private void a(MotionEvent paramMotionEvent)
  {
    int i1 = w.b(paramMotionEvent);
    if (w.b(paramMotionEvent, i1) == this.I) {
      if (i1 != 0) {
        break label56;
      }
    }
    label56:
    for (i1 = 1;; i1 = 0)
    {
      this.E = w.c(paramMotionEvent, i1);
      this.I = w.b(paramMotionEvent, i1);
      if (this.J != null) {
        this.J.clear();
      }
      return;
    }
  }
  
  private void a(boolean paramBoolean)
  {
    if (this.af == 2) {}
    int i2;
    for (int i1 = 1;; i1 = 0)
    {
      if (i1 != 0)
      {
        b(false);
        this.m.abortAnimation();
        i2 = getScrollX();
        i3 = getScrollY();
        int i4 = this.m.getCurrX();
        int i5 = this.m.getCurrY();
        if ((i2 != i4) || (i3 != i5)) {
          scrollTo(i4, i5);
        }
      }
      this.x = false;
      int i3 = 0;
      i2 = i1;
      i1 = i3;
      while (i1 < this.e.size())
      {
        bl localBl = (bl)this.e.get(i1);
        if (localBl.c)
        {
          localBl.c = false;
          i2 = 1;
        }
        i1 += 1;
      }
    }
    if (i2 != 0)
    {
      if (paramBoolean) {
        an.a(this, this.ae);
      }
    }
    else {
      return;
    }
    this.ae.run();
  }
  
  private boolean a(float paramFloat)
  {
    int i2 = 1;
    boolean bool2 = false;
    boolean bool1 = false;
    float f1 = this.E;
    this.E = paramFloat;
    float f2 = getScrollX() + (f1 - paramFloat);
    int i3 = e();
    paramFloat = i3 * this.r;
    f1 = i3;
    float f3 = this.s;
    bl localBl1 = (bl)this.e.get(0);
    bl localBl2 = (bl)this.e.get(this.e.size() - 1);
    if (localBl1.b != 0) {
      paramFloat = localBl1.e * i3;
    }
    for (int i1 = 0;; i1 = 1)
    {
      if (localBl2.b != this.h.a() - 1)
      {
        f1 = localBl2.e * i3;
        i2 = 0;
      }
      for (;;)
      {
        if (f2 < paramFloat)
        {
          f1 = paramFloat;
          if (i1 != 0)
          {
            bool1 = this.P.a(Math.abs(paramFloat - f2) / i3);
            f1 = paramFloat;
          }
        }
        for (;;)
        {
          this.E += f1 - (int)f1;
          scrollTo((int)f1, getScrollY());
          g((int)f1);
          return bool1;
          if (f2 > f1)
          {
            bool1 = bool2;
            if (i2 != 0) {
              bool1 = this.Q.a(Math.abs(f2 - f1) / i3);
            }
          }
          else
          {
            f1 = f2;
          }
        }
        f1 *= f3;
      }
    }
  }
  
  private boolean a(View paramView, boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3)
  {
    int i1;
    if ((paramView instanceof ViewGroup))
    {
      ViewGroup localViewGroup = (ViewGroup)paramView;
      int i2 = paramView.getScrollX();
      int i3 = paramView.getScrollY();
      i1 = localViewGroup.getChildCount() - 1;
      if (i1 >= 0)
      {
        localView = localViewGroup.getChildAt(i1);
        if ((paramInt2 + i2 < localView.getLeft()) || (paramInt2 + i2 >= localView.getRight()) || (paramInt3 + i3 < localView.getTop()) || (paramInt3 + i3 >= localView.getBottom()) || (!a(localView, true, paramInt1, paramInt2 + i2 - localView.getLeft(), paramInt3 + i3 - localView.getTop()))) {}
      }
    }
    while ((paramBoolean) && (an.a(paramView, -paramInt1)))
    {
      View localView;
      return true;
      i1 -= 1;
      break;
    }
    return false;
  }
  
  private void b(int paramInt)
  {
    if (this.af == paramInt) {}
    label35:
    label71:
    do
    {
      return;
      this.af = paramInt;
      if (this.aa != null)
      {
        int i1;
        int i2;
        if (paramInt != 0)
        {
          i1 = 1;
          int i4 = getChildCount();
          i2 = 0;
          if (i2 >= i4) {
            continue;
          }
          if (i1 == 0) {
            break label71;
          }
        }
        for (int i3 = 2;; i3 = 0)
        {
          an.a(getChildAt(i2), i3, null);
          i2 += 1;
          break label35;
          i1 = 0;
          break;
        }
      }
    } while (this.V == null);
    this.V.a(paramInt);
  }
  
  private void b(boolean paramBoolean)
  {
    if (this.w != paramBoolean) {
      this.w = paramBoolean;
    }
  }
  
  private void c(int paramInt)
  {
    this.x = false;
    a(paramInt, true, false);
  }
  
  private bl d(int paramInt)
  {
    new bl().b = paramInt;
    aa localAa = this.h;
    throw new UnsupportedOperationException("Required method instantiateItem was not overridden");
  }
  
  private int e()
  {
    return getMeasuredWidth() - getPaddingLeft() - getPaddingRight();
  }
  
  private void e(int paramInt)
  {
    int i1;
    bl localBl;
    if (this.i != paramInt) {
      if (this.i < paramInt)
      {
        i1 = 66;
        localBl = f(this.i);
        this.i = paramInt;
      }
    }
    for (int i2 = i1;; i2 = 2)
    {
      if (this.h == null) {
        f();
      }
      do
      {
        return;
        i1 = 17;
        break;
        if (this.x)
        {
          f();
          return;
        }
      } while (getWindowToken() == null);
      Object localObject1 = this.h;
      paramInt = this.y;
      int i8 = Math.max(0, this.i - paramInt);
      int i6 = this.h.a();
      int i7 = Math.min(i6 - 1, paramInt + this.i);
      Object localObject2;
      if (i6 != this.b) {
        try
        {
          localObject1 = getResources().getResourceName(getId());
          throw new IllegalStateException("The application's PagerAdapter changed the adapter's contents without calling PagerAdapter#notifyDataSetChanged! Expected adapter item count: " + this.b + ", found: " + i6 + " Pager id: " + (String)localObject1 + " Pager class: " + getClass() + " Problematic adapter: " + this.h.getClass());
        }
        catch (Resources.NotFoundException localNotFoundException)
        {
          for (;;)
          {
            localObject2 = Integer.toHexString(getId());
          }
        }
      }
      paramInt = 0;
      if (paramInt < this.e.size())
      {
        localObject2 = (bl)this.e.get(paramInt);
        if (((bl)localObject2).b >= this.i) {
          if (((bl)localObject2).b != this.i) {
            break label1239;
          }
        }
      }
      for (;;)
      {
        if ((localObject2 == null) && (i6 > 0)) {}
        for (Object localObject3 = d(this.i);; localObject3 = localObject2)
        {
          label338:
          int i9;
          float f2;
          label351:
          float f3;
          int i3;
          label373:
          float f1;
          if (localObject3 != null)
          {
            int i5 = paramInt - 1;
            int i4;
            Object localObject4;
            if (i5 >= 0)
            {
              localObject2 = (bl)this.e.get(i5);
              i9 = e();
              if (i9 > 0) {
                break label536;
              }
              f2 = 0.0F;
              i1 = this.i;
              f3 = 0.0F;
              i4 = i1 - 1;
              i3 = paramInt;
              localObject4 = localObject2;
              if (i4 < 0) {
                break label682;
              }
              if ((f3 < f2) || (i4 >= i8)) {
                break label566;
              }
              if (localObject4 == null) {
                break label682;
              }
              localObject2 = localObject4;
              paramInt = i5;
              f1 = f3;
              i1 = i3;
              if (i4 == ((bl)localObject4).b)
              {
                localObject2 = localObject4;
                paramInt = i5;
                f1 = f3;
                i1 = i3;
                if (!((bl)localObject4).c)
                {
                  this.e.remove(i5);
                  localObject2 = this.h;
                  localObject2 = ((bl)localObject4).a;
                  aa.b();
                  paramInt = i5 - 1;
                  i1 = i3 - 1;
                  if (paramInt < 0) {
                    break label557;
                  }
                  localObject2 = (bl)this.e.get(paramInt);
                  f1 = f3;
                }
              }
            }
            for (;;)
            {
              i4 -= 1;
              localObject4 = localObject2;
              i5 = paramInt;
              f3 = f1;
              i3 = i1;
              break label373;
              paramInt += 1;
              break;
              localObject2 = null;
              break label338;
              label536:
              f2 = 2.0F - ((bl)localObject3).d + getPaddingLeft() / i9;
              break label351;
              label557:
              localObject2 = null;
              f1 = f3;
              continue;
              label566:
              if ((localObject4 != null) && (i4 == ((bl)localObject4).b))
              {
                f1 = f3 + ((bl)localObject4).d;
                paramInt = i5 - 1;
                if (paramInt >= 0)
                {
                  localObject2 = (bl)this.e.get(paramInt);
                  i1 = i3;
                }
                else
                {
                  localObject2 = null;
                  i1 = i3;
                }
              }
              else
              {
                f1 = f3 + d(i4).d;
                i1 = i3 + 1;
                if (i5 >= 0)
                {
                  localObject2 = (bl)this.e.get(i5);
                  paramInt = i5;
                }
                else
                {
                  localObject2 = null;
                  paramInt = i5;
                }
              }
            }
            label682:
            f1 = ((bl)localObject3).d;
            paramInt = i3 + 1;
            if (f1 < 2.0F) {
              if (paramInt < this.e.size())
              {
                localObject2 = (bl)this.e.get(paramInt);
                label723:
                if (i9 > 0) {
                  break label849;
                }
                f2 = 0.0F;
                label730:
                i1 = this.i;
                i1 += 1;
                label742:
                if (i1 >= i6) {
                  break label991;
                }
                if ((f1 < f2) || (i1 <= i7)) {
                  break label870;
                }
                if (localObject2 == null) {
                  break label991;
                }
                if ((i1 != ((bl)localObject2).b) || (((bl)localObject2).c)) {
                  break label1229;
                }
                this.e.remove(paramInt);
                localObject4 = this.h;
                localObject2 = ((bl)localObject2).a;
                aa.b();
                if (paramInt >= this.e.size()) {
                  break label864;
                }
                localObject2 = (bl)this.e.get(paramInt);
              }
            }
          }
          label849:
          label864:
          label870:
          label991:
          label1221:
          label1227:
          label1229:
          for (;;)
          {
            i1 += 1;
            break label742;
            localObject2 = null;
            break label723;
            f2 = getPaddingRight() / i9 + 2.0F;
            break label730;
            localObject2 = null;
            continue;
            if ((localObject2 != null) && (i1 == ((bl)localObject2).b))
            {
              f3 = ((bl)localObject2).d;
              paramInt += 1;
              if (paramInt < this.e.size()) {}
              for (localObject2 = (bl)this.e.get(paramInt);; localObject2 = null)
              {
                f1 += f3;
                break;
              }
            }
            localObject2 = d(i1);
            paramInt += 1;
            f3 = ((bl)localObject2).d;
            if (paramInt < this.e.size()) {}
            for (localObject2 = (bl)this.e.get(paramInt);; localObject2 = null)
            {
              f1 += f3;
              break;
            }
            a((bl)localObject3, i3, localBl);
            localObject2 = this.h;
            paramInt = this.i;
            if (localObject3 != null) {
              localObject2 = ((bl)localObject3).a;
            }
            localObject2 = this.h;
            i1 = getChildCount();
            paramInt = 0;
            while (paramInt < i1)
            {
              localObject2 = (ViewPager.LayoutParams)getChildAt(paramInt).getLayoutParams();
              ((ViewPager.LayoutParams)localObject2).f = paramInt;
              if ((!((ViewPager.LayoutParams)localObject2).a) && (((ViewPager.LayoutParams)localObject2).c == 0.0F))
              {
                localBl = g();
                if (localBl != null)
                {
                  ((ViewPager.LayoutParams)localObject2).c = localBl.d;
                  ((ViewPager.LayoutParams)localObject2).e = localBl.b;
                }
              }
              paramInt += 1;
            }
            f();
            if (!hasFocus()) {
              break;
            }
            localObject2 = findFocus();
            if (localObject2 != null) {}
            for (localObject2 = a((View)localObject2);; localObject2 = null)
            {
              if ((localObject2 != null) && (((bl)localObject2).b == this.i)) {
                break label1227;
              }
              paramInt = 0;
              for (;;)
              {
                if (paramInt >= getChildCount()) {
                  break label1221;
                }
                localObject2 = getChildAt(paramInt);
                localBl = g();
                if ((localBl != null) && (localBl.b == this.i) && (((View)localObject2).requestFocus(i2))) {
                  break;
                }
                paramInt += 1;
              }
              break;
            }
            break;
          }
        }
        label1239:
        localObject2 = null;
      }
      localBl = null;
    }
  }
  
  private bl f(int paramInt)
  {
    int i1 = 0;
    while (i1 < this.e.size())
    {
      bl localBl = (bl)this.e.get(i1);
      if (localBl.b == paramInt) {
        return localBl;
      }
      i1 += 1;
    }
    return null;
  }
  
  private void f()
  {
    if (this.ab != 0)
    {
      if (this.ac == null) {
        this.ac = new ArrayList();
      }
      for (;;)
      {
        int i2 = getChildCount();
        int i1 = 0;
        while (i1 < i2)
        {
          View localView = getChildAt(i1);
          this.ac.add(localView);
          i1 += 1;
        }
        this.ac.clear();
      }
      Collections.sort(this.ac, ad);
    }
  }
  
  private bl g()
  {
    int i1 = 0;
    while (i1 < this.e.size())
    {
      bl localBl = (bl)this.e.get(i1);
      aa localAa = this.h;
      Object localObject = localBl.a;
      if (localAa.c()) {
        return localBl;
      }
      i1 += 1;
    }
    return null;
  }
  
  private boolean g(int paramInt)
  {
    boolean bool = false;
    if (this.e.size() == 0)
    {
      this.T = false;
      a(0, 0.0F);
      if (!this.T) {
        throw new IllegalStateException("onPageScrolled did not call superclass implementation");
      }
    }
    else
    {
      bl localBl = i();
      int i1 = e();
      int i2 = this.n;
      float f1 = this.n / i1;
      i2 = localBl.b;
      f1 = (paramInt / i1 - localBl.e) / (localBl.d + f1);
      this.T = false;
      a(i2, f1);
      if (!this.T) {
        throw new IllegalStateException("onPageScrolled did not call superclass implementation");
      }
      bool = true;
    }
    return bool;
  }
  
  private void h()
  {
    ViewParent localViewParent = getParent();
    if (localViewParent != null) {
      localViewParent.requestDisallowInterceptTouchEvent(true);
    }
  }
  
  private boolean h(int paramInt)
  {
    boolean bool = false;
    View localView = findFocus();
    Object localObject;
    int i2;
    if (localView == this)
    {
      localObject = null;
      localView = FocusFinder.getInstance().findNextFocus(this, (View)localObject, paramInt);
      if ((localView == null) || (localView == localObject)) {
        break label320;
      }
      if (paramInt != 17) {
        break label266;
      }
      i1 = a(this.g, localView).left;
      i2 = a(this.g, (View)localObject).left;
      if ((localObject != null) && (i1 >= i2))
      {
        bool = k();
        label92:
        if (bool) {
          playSoundEffect(SoundEffectConstants.getContantForFocusDirection(paramInt));
        }
        return bool;
      }
    }
    else
    {
      if (localView == null) {
        break label396;
      }
      localObject = localView.getParent();
      if (!(localObject instanceof ViewGroup)) {
        break label403;
      }
      if (localObject != this) {}
    }
    label266:
    label320:
    label396:
    label403:
    for (int i1 = 1;; i1 = 0)
    {
      if (i1 == 0)
      {
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append(localView.getClass().getSimpleName());
        localObject = localView.getParent();
        for (;;)
        {
          if ((localObject instanceof ViewGroup))
          {
            localStringBuilder.append(" => ").append(localObject.getClass().getSimpleName());
            localObject = ((ViewParent)localObject).getParent();
            continue;
            localObject = ((ViewParent)localObject).getParent();
            break;
          }
        }
        Log.e("ViewPager", "arrowScroll tried to find focus based on non-child current focused view " + localStringBuilder.toString());
        localObject = null;
        break;
        bool = localView.requestFocus();
        break label92;
        if (paramInt != 66) {
          break label92;
        }
        i1 = a(this.g, localView).left;
        i2 = a(this.g, (View)localObject).left;
        if ((localObject == null) || (i1 > i2))
        {
          bool = localView.requestFocus();
          break label92;
          if ((paramInt == 17) || (paramInt == 1))
          {
            bool = k();
            break label92;
          }
          if ((paramInt != 66) && (paramInt != 2)) {
            break label92;
          }
        }
        if ((this.h != null) && (this.i < this.h.a() - 1))
        {
          c(this.i + 1);
          bool = true;
          break label92;
        }
        bool = false;
        break label92;
      }
      localObject = localView;
      break;
    }
  }
  
  private bl i()
  {
    int i1 = e();
    float f1;
    float f2;
    label36:
    float f4;
    float f3;
    int i3;
    int i2;
    Object localObject1;
    label53:
    Object localObject2;
    bl localBl;
    if (i1 > 0)
    {
      f1 = getScrollX() / i1;
      if (i1 <= 0) {
        break label216;
      }
      f2 = this.n / i1;
      f4 = 0.0F;
      f3 = 0.0F;
      i3 = -1;
      i1 = 0;
      i2 = 1;
      localObject1 = null;
      localObject2 = localObject1;
      if (i1 < this.e.size())
      {
        localBl = (bl)this.e.get(i1);
        if ((i2 != 0) || (localBl.b == i3 + 1)) {
          break label251;
        }
        localBl = this.f;
        localBl.e = (f4 + f3 + f2);
        localBl.b = (i3 + 1);
        localObject2 = this.h;
        i3 = localBl.b;
        localBl.d = 1.0F;
        i1 -= 1;
      }
    }
    label216:
    label221:
    label251:
    for (;;)
    {
      f3 = localBl.e;
      f4 = localBl.d;
      if (i2 == 0)
      {
        localObject2 = localObject1;
        if (f1 < f3) {}
      }
      else
      {
        if ((f1 >= f4 + f3 + f2) && (i1 != this.e.size() - 1)) {
          break label221;
        }
        localObject2 = localBl;
      }
      return localObject2;
      f1 = 0.0F;
      break;
      f2 = 0.0F;
      break label36;
      i3 = localBl.b;
      f4 = localBl.d;
      i2 = 0;
      i1 += 1;
      localObject1 = localBl;
      break label53;
    }
  }
  
  private void j()
  {
    this.z = false;
    this.A = false;
    if (this.J != null)
    {
      this.J.recycle();
      this.J = null;
    }
  }
  
  private boolean k()
  {
    if (this.i > 0)
    {
      c(this.i - 1);
      return true;
    }
    return false;
  }
  
  public final aa a()
  {
    return this.h;
  }
  
  final bo a(bo paramBo)
  {
    bo localBo = this.W;
    this.W = paramBo;
    return localBo;
  }
  
  public final void a(int paramInt)
  {
    this.x = false;
    if (!this.R) {}
    for (boolean bool = true;; bool = false)
    {
      a(paramInt, bool, false);
      return;
    }
  }
  
  final void a(bn paramBn)
  {
    this.Z = paramBn;
  }
  
  public void addFocusables(ArrayList<View> paramArrayList, int paramInt1, int paramInt2)
  {
    int i2 = paramArrayList.size();
    int i3 = getDescendantFocusability();
    if (i3 != 393216)
    {
      int i1 = 0;
      while (i1 < getChildCount())
      {
        View localView = getChildAt(i1);
        if (localView.getVisibility() == 0)
        {
          bl localBl = g();
          if ((localBl != null) && (localBl.b == this.i)) {
            localView.addFocusables(paramArrayList, paramInt1, paramInt2);
          }
        }
        i1 += 1;
      }
    }
    if (((i3 == 262144) && (i2 != paramArrayList.size())) || (!isFocusable())) {}
    while ((((paramInt2 & 0x1) == 1) && (isInTouchMode()) && (!isFocusableInTouchMode())) || (paramArrayList == null)) {
      return;
    }
    paramArrayList.add(this);
  }
  
  public void addTouchables(ArrayList<View> paramArrayList)
  {
    int i1 = 0;
    while (i1 < getChildCount())
    {
      View localView = getChildAt(i1);
      if (localView.getVisibility() == 0)
      {
        bl localBl = g();
        if ((localBl != null) && (localBl.b == this.i)) {
          localView.addTouchables(paramArrayList);
        }
      }
      i1 += 1;
    }
  }
  
  public void addView(View paramView, int paramInt, ViewGroup.LayoutParams paramLayoutParams)
  {
    if (!checkLayoutParams(paramLayoutParams)) {
      paramLayoutParams = generateLayoutParams(paramLayoutParams);
    }
    for (;;)
    {
      ViewPager.LayoutParams localLayoutParams = (ViewPager.LayoutParams)paramLayoutParams;
      localLayoutParams.a |= paramView instanceof bk;
      if (this.v)
      {
        if ((localLayoutParams != null) && (localLayoutParams.a)) {
          throw new IllegalStateException("Cannot add pager decor view during layout");
        }
        localLayoutParams.d = true;
        addViewInLayout(paramView, paramInt, paramLayoutParams);
        return;
      }
      super.addView(paramView, paramInt, paramLayoutParams);
      return;
    }
  }
  
  public final int b()
  {
    return this.i;
  }
  
  final void c()
  {
    e(this.i);
  }
  
  public boolean canScrollHorizontally(int paramInt)
  {
    if (this.h == null) {}
    int i1;
    int i2;
    do
    {
      do
      {
        return false;
        i1 = e();
        i2 = getScrollX();
        if (paramInt >= 0) {
          break;
        }
      } while (i2 <= (int)(i1 * this.r));
      return true;
    } while ((paramInt <= 0) || (i2 >= (int)(i1 * this.s)));
    return true;
  }
  
  protected boolean checkLayoutParams(ViewGroup.LayoutParams paramLayoutParams)
  {
    return ((paramLayoutParams instanceof ViewPager.LayoutParams)) && (super.checkLayoutParams(paramLayoutParams));
  }
  
  public void computeScroll()
  {
    if ((!this.m.isFinished()) && (this.m.computeScrollOffset()))
    {
      int i1 = getScrollX();
      int i2 = getScrollY();
      int i3 = this.m.getCurrX();
      int i4 = this.m.getCurrY();
      if ((i1 != i3) || (i2 != i4))
      {
        scrollTo(i3, i4);
        if (!g(i3))
        {
          this.m.abortAnimation();
          scrollTo(0, i4);
        }
      }
      an.c(this);
      return;
    }
    a(true);
  }
  
  public boolean dispatchKeyEvent(KeyEvent paramKeyEvent)
  {
    boolean bool2 = false;
    boolean bool1;
    if (!super.dispatchKeyEvent(paramKeyEvent))
    {
      if (paramKeyEvent.getAction() == 0) {}
      switch (paramKeyEvent.getKeyCode())
      {
      default: 
        bool1 = false;
      }
    }
    for (;;)
    {
      if (bool1) {
        bool2 = true;
      }
      return bool2;
      bool1 = h(17);
      continue;
      bool1 = h(66);
      continue;
      if (Build.VERSION.SDK_INT < 11) {
        break;
      }
      if (r.b(paramKeyEvent))
      {
        bool1 = h(2);
      }
      else
      {
        if (!r.a(paramKeyEvent)) {
          break;
        }
        bool1 = h(1);
      }
    }
  }
  
  public boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent paramAccessibilityEvent)
  {
    boolean bool2 = false;
    boolean bool1;
    if (paramAccessibilityEvent.getEventType() == 4096)
    {
      bool1 = super.dispatchPopulateAccessibilityEvent(paramAccessibilityEvent);
      return bool1;
    }
    int i2 = getChildCount();
    int i1 = 0;
    for (;;)
    {
      bool1 = bool2;
      if (i1 >= i2) {
        break;
      }
      View localView = getChildAt(i1);
      if (localView.getVisibility() == 0)
      {
        bl localBl = g();
        if ((localBl != null) && (localBl.b == this.i) && (localView.dispatchPopulateAccessibilityEvent(paramAccessibilityEvent))) {
          return true;
        }
      }
      i1 += 1;
    }
  }
  
  public void draw(Canvas paramCanvas)
  {
    super.draw(paramCanvas);
    int i3 = 0;
    int i1 = 0;
    int i4 = an.b(this);
    boolean bool;
    if ((i4 == 0) || ((i4 == 1) && (this.h != null) && (this.h.a() > 1)))
    {
      int i2;
      if (!this.P.a())
      {
        i3 = paramCanvas.save();
        i1 = getHeight() - getPaddingTop() - getPaddingBottom();
        i4 = getWidth();
        paramCanvas.rotate(270.0F);
        paramCanvas.translate(-i1 + getPaddingTop(), this.r * i4);
        this.P.a(i1, i4);
        i2 = this.P.a(paramCanvas) | false;
        paramCanvas.restoreToCount(i3);
      }
      i3 = i2;
      if (!this.Q.a())
      {
        i4 = paramCanvas.save();
        i3 = getWidth();
        int i5 = getHeight();
        int i6 = getPaddingTop();
        int i7 = getPaddingBottom();
        paramCanvas.rotate(90.0F);
        paramCanvas.translate(-getPaddingTop(), -(this.s + 1.0F) * i3);
        this.Q.a(i5 - i6 - i7, i3);
        bool = i2 | this.Q.a(paramCanvas);
        paramCanvas.restoreToCount(i4);
      }
    }
    for (;;)
    {
      if (bool) {
        an.c(this);
      }
      return;
      this.P.b();
      this.Q.b();
    }
  }
  
  protected void drawableStateChanged()
  {
    super.drawableStateChanged();
    Drawable localDrawable = this.o;
    if ((localDrawable != null) && (localDrawable.isStateful())) {
      localDrawable.setState(getDrawableState());
    }
  }
  
  protected ViewGroup.LayoutParams generateDefaultLayoutParams()
  {
    return new ViewPager.LayoutParams();
  }
  
  public ViewGroup.LayoutParams generateLayoutParams(AttributeSet paramAttributeSet)
  {
    return new ViewPager.LayoutParams(getContext(), paramAttributeSet);
  }
  
  protected ViewGroup.LayoutParams generateLayoutParams(ViewGroup.LayoutParams paramLayoutParams)
  {
    return generateDefaultLayoutParams();
  }
  
  protected int getChildDrawingOrder(int paramInt1, int paramInt2)
  {
    int i1 = paramInt2;
    if (this.ab == 2) {
      i1 = paramInt1 - 1 - paramInt2;
    }
    return ((ViewPager.LayoutParams)((View)this.ac.get(i1)).getLayoutParams()).f;
  }
  
  protected void onAttachedToWindow()
  {
    super.onAttachedToWindow();
    this.R = true;
  }
  
  protected void onDetachedFromWindow()
  {
    removeCallbacks(this.ae);
    super.onDetachedFromWindow();
  }
  
  protected void onDraw(Canvas paramCanvas)
  {
    super.onDraw(paramCanvas);
    if ((this.n > 0) && (this.o != null) && (this.e.size() > 0) && (this.h != null))
    {
      int i3 = getScrollX();
      int i4 = getWidth();
      float f3 = this.n / i4;
      Object localObject = (bl)this.e.get(0);
      float f1 = ((bl)localObject).e;
      int i5 = this.e.size();
      int i1 = ((bl)localObject).b;
      int i6 = ((bl)this.e.get(i5 - 1)).b;
      int i2 = 0;
      if (i1 < i6)
      {
        while ((i1 > ((bl)localObject).b) && (i2 < i5))
        {
          localObject = this.e;
          i2 += 1;
          localObject = (bl)((ArrayList)localObject).get(i2);
        }
        float f2;
        if (i1 == ((bl)localObject).b) {
          f2 = (((bl)localObject).e + ((bl)localObject).d) * i4;
        }
        for (f1 = ((bl)localObject).e + ((bl)localObject).d + f3;; f1 += 1.0F + f3)
        {
          if (this.n + f2 > i3)
          {
            this.o.setBounds((int)f2, this.p, (int)(this.n + f2 + 0.5F), this.q);
            this.o.draw(paramCanvas);
          }
          if (f2 > i3 + i4) {
            return;
          }
          i1 += 1;
          break;
          aa localAa = this.h;
          f2 = (1.0F + f1) * i4;
        }
      }
    }
  }
  
  public boolean onInterceptTouchEvent(MotionEvent paramMotionEvent)
  {
    int i1 = paramMotionEvent.getAction() & 0xFF;
    if ((i1 == 3) || (i1 == 1))
    {
      this.z = false;
      this.A = false;
      this.I = -1;
      if (this.J != null)
      {
        this.J.recycle();
        this.J = null;
      }
    }
    do
    {
      return false;
      if (i1 == 0) {
        break;
      }
      if (this.z) {
        return true;
      }
    } while (this.A);
    switch (i1)
    {
    }
    for (;;)
    {
      if (this.J == null) {
        this.J = VelocityTracker.obtain();
      }
      this.J.addMovement(paramMotionEvent);
      return this.z;
      i1 = this.I;
      if (i1 != -1)
      {
        i1 = w.a(paramMotionEvent, i1);
        float f2 = w.c(paramMotionEvent, i1);
        float f1 = f2 - this.E;
        float f4 = Math.abs(f1);
        float f3 = w.d(paramMotionEvent, i1);
        float f5 = Math.abs(f3 - this.H);
        if (f1 != 0.0F)
        {
          float f6 = this.E;
          if (((f6 < this.C) && (f1 > 0.0F)) || ((f6 > getWidth() - this.C) && (f1 < 0.0F))) {}
          for (i1 = 1; (i1 == 0) && (a(this, false, (int)f1, (int)f2, (int)f3)); i1 = 0)
          {
            this.E = f2;
            this.F = f3;
            this.A = true;
            return false;
          }
        }
        if ((f4 > this.D) && (0.5F * f4 > f5))
        {
          this.z = true;
          h();
          b(1);
          if (f1 > 0.0F)
          {
            f1 = this.G + this.D;
            label356:
            this.E = f1;
            this.F = f3;
            b(true);
          }
        }
        while ((this.z) && (a(f2)))
        {
          an.c(this);
          break;
          f1 = this.G - this.D;
          break label356;
          if (f5 > this.D) {
            this.A = true;
          }
        }
        f1 = paramMotionEvent.getX();
        this.G = f1;
        this.E = f1;
        f1 = paramMotionEvent.getY();
        this.H = f1;
        this.F = f1;
        this.I = w.b(paramMotionEvent, 0);
        this.A = false;
        this.m.computeScrollOffset();
        if ((this.af == 2) && (Math.abs(this.m.getFinalX() - this.m.getCurrX()) > this.N))
        {
          this.m.abortAnimation();
          this.x = false;
          c();
          this.z = true;
          h();
          b(1);
        }
        else
        {
          a(false);
          this.z = false;
          continue;
          a(paramMotionEvent);
        }
      }
    }
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    int i6 = getChildCount();
    int i8 = paramInt3 - paramInt1;
    int i7 = paramInt4 - paramInt2;
    paramInt2 = getPaddingLeft();
    paramInt1 = getPaddingTop();
    int i1 = getPaddingRight();
    paramInt3 = getPaddingBottom();
    int i9 = getScrollX();
    int i2 = 0;
    int i4 = 0;
    View localView;
    ViewPager.LayoutParams localLayoutParams;
    int i10;
    int i3;
    label154:
    int i5;
    if (i4 < i6)
    {
      localView = getChildAt(i4);
      if (localView.getVisibility() == 8) {
        break label669;
      }
      localLayoutParams = (ViewPager.LayoutParams)localView.getLayoutParams();
      if (!localLayoutParams.a) {
        break label669;
      }
      paramInt4 = localLayoutParams.b;
      i10 = localLayoutParams.b;
      switch (paramInt4 & 0x7)
      {
      case 2: 
      case 4: 
      default: 
        paramInt4 = paramInt2;
        i3 = paramInt2;
        switch (i10 & 0x70)
        {
        default: 
          i5 = paramInt1;
          paramInt2 = paramInt1;
          paramInt1 = paramInt3;
          paramInt3 = i5;
          label204:
          paramInt4 += i9;
          localView.layout(paramInt4, paramInt3, localView.getMeasuredWidth() + paramInt4, localView.getMeasuredHeight() + paramInt3);
          i2 += 1;
          paramInt4 = i1;
          paramInt3 = i3;
          i1 = paramInt1;
          paramInt1 = i2;
        }
        break;
      }
    }
    for (;;)
    {
      i4 += 1;
      i3 = paramInt3;
      i2 = paramInt1;
      paramInt1 = paramInt2;
      paramInt3 = i1;
      i1 = paramInt4;
      paramInt2 = i3;
      break;
      i3 = localView.getMeasuredWidth();
      paramInt4 = paramInt2;
      i3 += paramInt2;
      break label154;
      paramInt4 = Math.max((i8 - localView.getMeasuredWidth()) / 2, paramInt2);
      i3 = paramInt2;
      break label154;
      i3 = localView.getMeasuredWidth();
      paramInt4 = i1 + localView.getMeasuredWidth();
      i5 = i8 - i1 - i3;
      i1 = paramInt4;
      i3 = paramInt2;
      paramInt4 = i5;
      break label154;
      i5 = localView.getMeasuredHeight();
      paramInt2 = paramInt3;
      i5 += paramInt1;
      paramInt3 = paramInt1;
      paramInt1 = paramInt2;
      paramInt2 = i5;
      break label204;
      i5 = Math.max((i7 - localView.getMeasuredHeight()) / 2, paramInt1);
      paramInt2 = paramInt1;
      paramInt1 = paramInt3;
      paramInt3 = i5;
      break label204;
      i5 = i7 - paramInt3 - localView.getMeasuredHeight();
      i10 = localView.getMeasuredHeight();
      paramInt2 = paramInt1;
      paramInt1 = paramInt3 + i10;
      paramInt3 = i5;
      break label204;
      i1 = i8 - paramInt2 - i1;
      paramInt4 = 0;
      while (paramInt4 < i6)
      {
        localView = getChildAt(paramInt4);
        if (localView.getVisibility() != 8)
        {
          localLayoutParams = (ViewPager.LayoutParams)localView.getLayoutParams();
          if (!localLayoutParams.a)
          {
            bl localBl = g();
            if (localBl != null)
            {
              float f1 = i1;
              i3 = (int)(localBl.e * f1) + paramInt2;
              if (localLayoutParams.d)
              {
                localLayoutParams.d = false;
                f1 = i1;
                localView.measure(View.MeasureSpec.makeMeasureSpec((int)(localLayoutParams.c * f1), 1073741824), View.MeasureSpec.makeMeasureSpec(i7 - paramInt1 - paramInt3, 1073741824));
              }
              localView.layout(i3, paramInt1, localView.getMeasuredWidth() + i3, localView.getMeasuredHeight() + paramInt1);
            }
          }
        }
        paramInt4 += 1;
      }
      this.p = paramInt1;
      this.q = (i7 - paramInt3);
      this.U = i2;
      if (this.R) {
        a(this.i, false, 0, false);
      }
      this.R = false;
      return;
      label669:
      paramInt4 = i2;
      i2 = paramInt1;
      i3 = paramInt2;
      paramInt1 = paramInt4;
      paramInt4 = i1;
      i1 = paramInt3;
      paramInt2 = i2;
      paramInt3 = i3;
    }
  }
  
  protected void onMeasure(int paramInt1, int paramInt2)
  {
    setMeasuredDimension(getDefaultSize(0, paramInt1), getDefaultSize(0, paramInt2));
    paramInt1 = getMeasuredWidth();
    this.C = Math.min(paramInt1 / 10, this.B);
    paramInt1 = paramInt1 - getPaddingLeft() - getPaddingRight();
    paramInt2 = getMeasuredHeight() - getPaddingTop() - getPaddingBottom();
    int i9 = getChildCount();
    int i3 = 0;
    View localView;
    int i1;
    int i2;
    ViewPager.LayoutParams localLayoutParams;
    int i4;
    int i6;
    label183:
    int i5;
    if (i3 < i9)
    {
      localView = getChildAt(i3);
      i1 = paramInt1;
      i2 = paramInt2;
      if (localView.getVisibility() != 8)
      {
        localLayoutParams = (ViewPager.LayoutParams)localView.getLayoutParams();
        i1 = paramInt1;
        i2 = paramInt2;
        if (localLayoutParams != null)
        {
          i1 = paramInt1;
          i2 = paramInt2;
          if (localLayoutParams.a)
          {
            i1 = localLayoutParams.b & 0x7;
            i4 = localLayoutParams.b & 0x70;
            i6 = Integer.MIN_VALUE;
            i2 = Integer.MIN_VALUE;
            if ((i4 != 48) && (i4 != 80)) {
              break label333;
            }
            i4 = 1;
            if ((i1 != 3) && (i1 != 5)) {
              break label339;
            }
            i5 = 1;
            label198:
            if (i4 == 0) {
              break label345;
            }
            i1 = 1073741824;
            label208:
            if (localLayoutParams.width == -2) {
              break label528;
            }
            i6 = 1073741824;
            if (localLayoutParams.width == -1) {
              break label522;
            }
            i1 = localLayoutParams.width;
          }
        }
      }
    }
    for (;;)
    {
      int i8;
      if (localLayoutParams.height != -2)
      {
        i7 = 1073741824;
        i2 = i7;
        if (localLayoutParams.height != -1)
        {
          i8 = localLayoutParams.height;
          i2 = i7;
        }
      }
      for (int i7 = i8;; i7 = paramInt2)
      {
        localView.measure(View.MeasureSpec.makeMeasureSpec(i1, i6), View.MeasureSpec.makeMeasureSpec(i7, i2));
        if (i4 != 0)
        {
          i2 = paramInt2 - localView.getMeasuredHeight();
          i1 = paramInt1;
        }
        for (;;)
        {
          i3 += 1;
          paramInt1 = i1;
          paramInt2 = i2;
          break;
          label333:
          i4 = 0;
          break label183;
          label339:
          i5 = 0;
          break label198;
          label345:
          i1 = i6;
          if (i5 == 0) {
            break label208;
          }
          i2 = 1073741824;
          i1 = i6;
          break label208;
          i1 = paramInt1;
          i2 = paramInt2;
          if (i5 != 0)
          {
            i1 = paramInt1 - localView.getMeasuredWidth();
            i2 = paramInt2;
          }
        }
        this.t = View.MeasureSpec.makeMeasureSpec(paramInt1, 1073741824);
        this.u = View.MeasureSpec.makeMeasureSpec(paramInt2, 1073741824);
        this.v = true;
        c();
        this.v = false;
        i1 = getChildCount();
        paramInt2 = 0;
        while (paramInt2 < i1)
        {
          localView = getChildAt(paramInt2);
          if (localView.getVisibility() != 8)
          {
            localLayoutParams = (ViewPager.LayoutParams)localView.getLayoutParams();
            if ((localLayoutParams == null) || (!localLayoutParams.a))
            {
              float f1 = paramInt1;
              localView.measure(View.MeasureSpec.makeMeasureSpec((int)(localLayoutParams.c * f1), 1073741824), this.u);
            }
          }
          paramInt2 += 1;
        }
        return;
      }
      label522:
      i1 = paramInt1;
      continue;
      label528:
      i6 = i1;
      i1 = paramInt1;
    }
  }
  
  protected boolean onRequestFocusInDescendants(int paramInt, Rect paramRect)
  {
    int i3 = -1;
    int i2 = getChildCount();
    int i1;
    if ((paramInt & 0x2) != 0)
    {
      i3 = 1;
      i1 = 0;
    }
    while (i1 != i2)
    {
      View localView = getChildAt(i1);
      if (localView.getVisibility() == 0)
      {
        bl localBl = g();
        if ((localBl != null) && (localBl.b == this.i) && (localView.requestFocus(paramInt, paramRect)))
        {
          return true;
          i1 = i2 - 1;
          i2 = -1;
          continue;
        }
      }
      i1 += i3;
    }
    return false;
  }
  
  public void onRestoreInstanceState(Parcelable paramParcelable)
  {
    if (!(paramParcelable instanceof ViewPager.SavedState))
    {
      super.onRestoreInstanceState(paramParcelable);
      return;
    }
    paramParcelable = (ViewPager.SavedState)paramParcelable;
    super.onRestoreInstanceState(paramParcelable.getSuperState());
    if (this.h != null)
    {
      Object localObject = this.h;
      localObject = paramParcelable.b;
      localObject = paramParcelable.c;
      a(paramParcelable.a, false, true);
      return;
    }
    this.j = paramParcelable.a;
    this.k = paramParcelable.b;
    this.l = paramParcelable.c;
  }
  
  public Parcelable onSaveInstanceState()
  {
    ViewPager.SavedState localSavedState = new ViewPager.SavedState(super.onSaveInstanceState());
    localSavedState.a = this.i;
    if (this.h != null)
    {
      aa localAa = this.h;
      localSavedState.b = null;
    }
    return localSavedState;
  }
  
  protected void onSizeChanged(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    super.onSizeChanged(paramInt1, paramInt2, paramInt3, paramInt4);
    if (paramInt1 != paramInt3)
    {
      paramInt2 = this.n;
      paramInt4 = this.n;
      if ((paramInt3 <= 0) || (this.e.isEmpty())) {
        break label167;
      }
      int i1 = getPaddingLeft();
      int i2 = getPaddingRight();
      int i3 = getPaddingLeft();
      int i4 = getPaddingRight();
      f1 = getScrollX() / (paramInt4 + (paramInt3 - i3 - i4));
      paramInt2 = (int)((paramInt2 + (paramInt1 - i1 - i2)) * f1);
      scrollTo(paramInt2, getScrollY());
      if (!this.m.isFinished())
      {
        paramInt3 = this.m.getDuration();
        paramInt4 = this.m.timePassed();
        localBl = f(this.i);
        this.m.startScroll(paramInt2, 0, (int)(localBl.e * paramInt1), 0, paramInt3 - paramInt4);
      }
    }
    return;
    label167:
    bl localBl = f(this.i);
    if (localBl != null) {}
    for (float f1 = Math.min(localBl.e, this.s);; f1 = 0.0F)
    {
      paramInt1 = (int)(f1 * (paramInt1 - getPaddingLeft() - getPaddingRight()));
      if (paramInt1 == getScrollX()) {
        break;
      }
      a(false);
      scrollTo(paramInt1, getScrollY());
      return;
    }
  }
  
  public boolean onTouchEvent(MotionEvent paramMotionEvent)
  {
    int i5 = 0;
    if (this.O) {
      return true;
    }
    if ((paramMotionEvent.getAction() == 0) && (paramMotionEvent.getEdgeFlags() != 0)) {
      return false;
    }
    if ((this.h == null) || (this.h.a() == 0)) {
      return false;
    }
    if (this.J == null) {
      this.J = VelocityTracker.obtain();
    }
    this.J.addMovement(paramMotionEvent);
    int i1 = i5;
    switch (paramMotionEvent.getAction() & 0xFF)
    {
    default: 
      i1 = i5;
    }
    for (;;)
    {
      if (i1 != 0) {
        an.c(this);
      }
      return true;
      this.m.abortAnimation();
      this.x = false;
      c();
      float f1 = paramMotionEvent.getX();
      this.G = f1;
      this.E = f1;
      f1 = paramMotionEvent.getY();
      this.H = f1;
      this.F = f1;
      this.I = w.b(paramMotionEvent, 0);
      i1 = i5;
      continue;
      float f2;
      if (!this.z)
      {
        i1 = w.a(paramMotionEvent, this.I);
        f1 = w.c(paramMotionEvent, i1);
        float f3 = Math.abs(f1 - this.E);
        f2 = w.d(paramMotionEvent, i1);
        float f4 = Math.abs(f2 - this.F);
        if ((f3 > this.D) && (f3 > f4))
        {
          this.z = true;
          h();
          if (f1 - this.G <= 0.0F) {
            break label377;
          }
        }
      }
      Object localObject;
      label377:
      for (f1 = this.G + this.D;; f1 = this.G - this.D)
      {
        this.E = f1;
        this.F = f2;
        b(1);
        b(true);
        localObject = getParent();
        if (localObject != null) {
          ((ViewParent)localObject).requestDisallowInterceptTouchEvent(true);
        }
        i1 = i5;
        if (!this.z) {
          break;
        }
        bool1 = a(w.c(paramMotionEvent, w.a(paramMotionEvent, this.I))) | false;
        break;
      }
      boolean bool1 = i5;
      if (this.z)
      {
        localObject = this.J;
        ((VelocityTracker)localObject).computeCurrentVelocity(1000, this.L);
        int i6 = (int)aj.a((VelocityTracker)localObject, this.I);
        this.x = true;
        i5 = e();
        int i7 = getScrollX();
        localObject = i();
        int i2 = ((bl)localObject).b;
        f2 = (i7 / i5 - ((bl)localObject).e) / ((bl)localObject).d;
        if ((Math.abs((int)(w.c(paramMotionEvent, w.a(paramMotionEvent, this.I)) - this.G)) > this.M) && (Math.abs(i6) > this.K))
        {
          if (i6 > 0) {}
          for (;;)
          {
            i5 = i2;
            if (this.e.size() > 0)
            {
              paramMotionEvent = (bl)this.e.get(0);
              localObject = (bl)this.e.get(this.e.size() - 1);
              i5 = Math.max(paramMotionEvent.b, Math.min(i2, ((bl)localObject).b));
            }
            a(i5, true, true, i6);
            this.I = -1;
            j();
            boolean bool2 = this.P.c() | this.Q.c();
            break;
            bool2 += true;
          }
        }
        if (i3 >= this.i) {}
        for (f1 = 0.4F;; f1 = 0.6F)
        {
          i3 = (int)(i3 + f2 + f1);
          break;
        }
        int i3 = i5;
        if (this.z)
        {
          a(this.i, true, 0, false);
          this.I = -1;
          j();
          boolean bool3 = this.P.c() | this.Q.c();
          continue;
          int i4 = w.b(paramMotionEvent);
          this.E = w.c(paramMotionEvent, i4);
          this.I = w.b(paramMotionEvent, i4);
          i4 = i5;
          continue;
          a(paramMotionEvent);
          this.E = w.c(paramMotionEvent, w.a(paramMotionEvent, this.I));
          i4 = i5;
        }
      }
    }
  }
  
  public void removeView(View paramView)
  {
    if (this.v)
    {
      removeViewInLayout(paramView);
      return;
    }
    super.removeView(paramView);
  }
  
  protected boolean verifyDrawable(Drawable paramDrawable)
  {
    return (super.verifyDrawable(paramDrawable)) || (paramDrawable == this.o);
  }
}
