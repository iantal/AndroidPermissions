package com.hdc.f;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

public final class b
{
  public static b a = new b();
  
  public b() {}
  
  public static String a(String paramString)
  {
    for (;;)
    {
      try
      {
        paramString = new URL(paramString);
      }
      catch (MalformedURLException paramString)
      {
        BufferedReader localBufferedReader;
        String str2;
        String str1 = null;
        continue;
      }
      try
      {
        paramString = (HttpURLConnection)paramString.openConnection();
        paramString.setRequestMethod("GET");
        localBufferedReader = new BufferedReader(new InputStreamReader(paramString.getInputStream()));
        paramString = new StringBuffer();
        str1 = paramString;
      }
      catch (IOException localIOException2)
      {
        paramString = null;
        continue;
      }
      try
      {
        str2 = localBufferedReader.readLine();
        if (str2 != null) {
          continue;
        }
        str1 = paramString;
        localBufferedReader.close();
      }
      catch (IOException localIOException1)
      {
        str1 = paramString;
        localIOException1.printStackTrace();
        continue;
      }
      catch (MalformedURLException paramString)
      {
        paramString.printStackTrace();
        paramString = str1;
        continue;
      }
      return paramString.toString();
      str1 = paramString;
      paramString.append(str2);
    }
  }
  
  public static Bitmap b(String paramString)
  {
    Bitmap localBitmap = null;
    try
    {
      paramString = new URL(paramString);
      paramString = paramString.openConnection();
      if (!(paramString instanceof HttpURLConnection)) {
        throw new IOException("Not an HTTP connection");
      }
    }
    catch (MalformedURLException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
        paramString = null;
      }
      try
      {
        HttpURLConnection localHttpURLConnection = (HttpURLConnection)paramString;
        localHttpURLConnection.setRequestMethod("GET");
        localHttpURLConnection.setConnectTimeout(5000);
        localHttpURLConnection.connect();
        InputStream localInputStream;
        if (localHttpURLConnection.getResponseCode() == 200)
        {
          localInputStream = localHttpURLConnection.getInputStream();
          localBitmap = BitmapFactory.decodeStream(localInputStream);
          paramString = localBitmap;
        }
        localException1.printStackTrace();
      }
      catch (Exception localException1)
      {
        try
        {
          localInputStream.close();
          paramString = localBitmap;
          localHttpURLConnection.disconnect();
          return localBitmap;
        }
        catch (Exception localException2)
        {
          for (;;) {}
        }
        localException1 = localException1;
        paramString = null;
      }
    }
    return paramString;
  }
}
