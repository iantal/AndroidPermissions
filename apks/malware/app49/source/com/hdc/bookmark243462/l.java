package com.hdc.bookmark243462;

import android.os.AsyncTask;
import android.os.Environment;
import android.util.Log;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.net.URLConnection;
import java.util.Date;

final class l
  extends AsyncTask<String, String, String>
{
  File a;
  
  l(MainActivity paramMainActivity) {}
  
  private String a(String... paramVarArgs)
  {
    for (;;)
    {
      try
      {
        paramVarArgs = new URL(paramVarArgs[0]);
        localObject = paramVarArgs.openConnection();
        ((URLConnection)localObject).connect();
        i = ((URLConnection)localObject).getContentLength();
        paramVarArgs = new BufferedInputStream(paramVarArgs.openStream(), 8192);
        localObject = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + "/myfile");
        if (!((File)localObject).exists()) {
          ((File)localObject).mkdirs();
        }
        this.a = new File((File)localObject, new Date().getTime());
        localObject = new FileOutputStream(this.a);
        arrayOfByte = new byte['Ð€'];
        l = 0L;
        j = paramVarArgs.read(arrayOfByte);
        if (j != -1) {
          continue;
        }
        ((OutputStream)localObject).flush();
        ((OutputStream)localObject).close();
        paramVarArgs.close();
      }
      catch (Throwable paramVarArgs)
      {
        Object localObject;
        int i;
        byte[] arrayOfByte;
        long l;
        int j;
        Log.e("Error: ", paramVarArgs.getMessage());
        paramVarArgs.printStackTrace();
        continue;
      }
      return "-1";
      l += j;
      publishProgress(new String[] { (int)(100L * l / i) });
      ((OutputStream)localObject).write(arrayOfByte, 0, j);
    }
  }
  
  protected final void onPreExecute()
  {
    super.onPreExecute();
    this.b.b();
  }
}
