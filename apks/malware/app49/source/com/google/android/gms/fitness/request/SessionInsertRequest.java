package com.google.android.gms.fitness.request;

import android.os.IBinder;
import android.os.Parcel;
import android.os.Parcelable.Creator;
import com.google.android.gms.b.tk;
import com.google.android.gms.b.tl;
import com.google.android.gms.common.internal.ao;
import com.google.android.gms.common.internal.ap;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import com.google.android.gms.fitness.data.DataPoint;
import com.google.android.gms.fitness.data.DataSet;
import com.google.android.gms.fitness.data.Session;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class SessionInsertRequest
  implements SafeParcelable
{
  public static final Parcelable.Creator<SessionInsertRequest> CREATOR = new aa();
  private final int a;
  private final Session b;
  private final List<DataSet> c;
  private final List<DataPoint> d;
  private final tk e;
  private final String f;
  
  SessionInsertRequest(int paramInt, Session paramSession, List<DataSet> paramList, List<DataPoint> paramList1, IBinder paramIBinder, String paramString)
  {
    this.a = paramInt;
    this.b = paramSession;
    this.c = Collections.unmodifiableList(paramList);
    this.d = Collections.unmodifiableList(paramList1);
    if (paramIBinder == null) {}
    for (paramSession = null;; paramSession = tl.a(paramIBinder))
    {
      this.e = paramSession;
      this.f = paramString;
      return;
    }
  }
  
  public final Session a()
  {
    return this.b;
  }
  
  public final List<DataSet> b()
  {
    return this.c;
  }
  
  public final List<DataPoint> c()
  {
    return this.d;
  }
  
  public final IBinder d()
  {
    if (this.e == null) {
      return null;
    }
    return this.e.asBinder();
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public final String e()
  {
    return this.f;
  }
  
  public boolean equals(Object paramObject)
  {
    boolean bool2 = false;
    boolean bool1;
    if (paramObject != this)
    {
      bool1 = bool2;
      if (!(paramObject instanceof SessionInsertRequest)) {
        break label76;
      }
      paramObject = (SessionInsertRequest)paramObject;
      if ((!ao.a(this.b, paramObject.b)) || (!ao.a(this.c, paramObject.c)) || (!ao.a(this.d, paramObject.d))) {
        break label78;
      }
    }
    label76:
    label78:
    for (int i = 1;; i = 0)
    {
      bool1 = bool2;
      if (i != 0) {
        bool1 = true;
      }
      return bool1;
    }
  }
  
  final int f()
  {
    return this.a;
  }
  
  public int hashCode()
  {
    return Arrays.hashCode(new Object[] { this.b, this.c, this.d });
  }
  
  public String toString()
  {
    return ao.a(this).a("session", this.b).a("dataSets", this.c).a("aggregateDataPoints", this.d).toString();
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    aa.a(this, paramParcel, paramInt);
  }
}
