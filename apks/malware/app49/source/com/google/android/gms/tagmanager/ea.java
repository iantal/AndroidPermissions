package com.google.android.gms.tagmanager;

import android.content.Context;
import android.os.Handler;
import android.os.HandlerThread;
import android.text.TextUtils;
import com.google.android.gms.b.e;
import com.google.android.gms.b.f;
import com.google.android.gms.b.r;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

final class ea
  extends ai
{
  private static final String a = e.aL.toString();
  private static final String b = f.bH.toString();
  private static final String c = f.bm.toString();
  private static final String d = f.bu.toString();
  private static final String e = f.dl.toString();
  private boolean f;
  private boolean g;
  private final Context h;
  private h i;
  private final HandlerThread j;
  private Handler k;
  private final Set<String> l = new HashSet();
  
  public ea(Context paramContext, h paramH)
  {
    super(a, new String[] { c, b });
    this.h = paramContext;
    this.i = paramH;
    this.j = new HandlerThread("Google GTM SDK Timer", 10);
    this.j.start();
    this.k = new Handler(this.j.getLooper());
  }
  
  public final r a(Map<String, r> paramMap)
  {
    String str2 = eg.a((r)paramMap.get(b));
    String str1 = eg.a((r)paramMap.get(e));
    String str3 = eg.a((r)paramMap.get(c));
    paramMap = eg.a((r)paramMap.get(d));
    try
    {
      l1 = Long.parseLong(str3);
    }
    catch (NumberFormatException localNumberFormatException)
    {
      try
      {
        for (;;)
        {
          l2 = Long.parseLong(paramMap);
          if ((l1 > 0L) && (!TextUtils.isEmpty(str2)))
          {
            if (str1 != null)
            {
              paramMap = str1;
              if (!str1.isEmpty()) {}
            }
            else
            {
              paramMap = "0";
            }
            if (!this.l.contains(paramMap))
            {
              if (!"0".equals(paramMap)) {
                this.l.add(paramMap);
              }
              this.k.postDelayed(new eb(this, str2, paramMap, l1, l2), l1);
            }
          }
          return eg.f();
          localNumberFormatException = localNumberFormatException;
          long l1 = 0L;
        }
      }
      catch (NumberFormatException paramMap)
      {
        for (;;)
        {
          long l2 = 0L;
        }
      }
    }
  }
  
  public final boolean a()
  {
    return false;
  }
}
