package com.google.android.gms.b;

import android.net.Uri;
import android.os.Handler;
import android.os.Looper;
import android.os.SystemClock;
import android.text.TextUtils;
import java.util.Collections;
import java.util.Map;

public abstract class qa<T>
  implements Comparable<qa<T>>
{
  private final xu a;
  private final int b;
  private final String c;
  private final int d;
  private final sh e;
  private Integer f;
  private rb g;
  private boolean h;
  private boolean i;
  private boolean j;
  private long k;
  private um l;
  private bm m;
  
  public qa(String paramString, sh paramSh)
  {
    xu localXu;
    if (xu.a)
    {
      localXu = new xu();
      this.a = localXu;
      this.h = true;
      this.i = false;
      this.j = false;
      this.k = 0L;
      this.m = null;
      this.b = 0;
      this.c = paramString;
      this.e = paramSh;
      this.l = new es();
      if (TextUtils.isEmpty(paramString)) {
        break label118;
      }
      paramString = Uri.parse(paramString);
      if (paramString == null) {
        break label118;
      }
      paramString = paramString.getHost();
      if (paramString == null) {
        break label118;
      }
    }
    label118:
    for (int n = paramString.hashCode();; n = 0)
    {
      this.d = n;
      return;
      localXu = null;
      break;
    }
  }
  
  protected static xe a(xe paramXe)
  {
    return paramXe;
  }
  
  public static byte[] h()
  {
    return null;
  }
  
  public static String i()
  {
    return "application/x-www-form-urlencoded; charset=UTF-8";
  }
  
  public static byte[] j()
  {
    return null;
  }
  
  public final qa<?> a(int paramInt)
  {
    this.f = Integer.valueOf(paramInt);
    return this;
  }
  
  public final qa<?> a(bm paramBm)
  {
    this.m = paramBm;
    return this;
  }
  
  public final qa<?> a(rb paramRb)
  {
    this.g = paramRb;
    return this;
  }
  
  protected abstract sg<T> a(ow paramOw);
  
  public Map<String, String> a()
  {
    return Collections.emptyMap();
  }
  
  protected abstract void a(T paramT);
  
  public final void a(String paramString)
  {
    if (xu.a) {
      this.a.a(paramString, Thread.currentThread().getId());
    }
    while (this.k != 0L) {
      return;
    }
    this.k = SystemClock.elapsedRealtime();
  }
  
  public final int b()
  {
    return this.b;
  }
  
  public final void b(xe paramXe)
  {
    if (this.e != null) {
      this.e.a(paramXe);
    }
  }
  
  final void b(String paramString)
  {
    if (this.g != null) {
      this.g.b(this);
    }
    long l1;
    if (xu.a)
    {
      l1 = Thread.currentThread().getId();
      if (Looper.myLooper() != Looper.getMainLooper()) {
        new Handler(Looper.getMainLooper()).post(new qb(this, paramString, l1));
      }
    }
    do
    {
      return;
      this.a.a(paramString, l1);
      this.a.a(toString());
      return;
      l1 = SystemClock.elapsedRealtime() - this.k;
    } while (l1 < 3000L);
    xt.b("%d ms: %s", new Object[] { Long.valueOf(l1), toString() });
  }
  
  public final int c()
  {
    return this.d;
  }
  
  public final String d()
  {
    return this.c;
  }
  
  public final String e()
  {
    return this.c;
  }
  
  public final bm f()
  {
    return this.m;
  }
  
  public final boolean g()
  {
    return this.i;
  }
  
  public final boolean k()
  {
    return this.h;
  }
  
  public final int l()
  {
    return this.l.a();
  }
  
  public final um m()
  {
    return this.l;
  }
  
  public final void n()
  {
    this.j = true;
  }
  
  public final boolean o()
  {
    return this.j;
  }
  
  public String toString()
  {
    String str2 = "0x" + Integer.toHexString(this.d);
    StringBuilder localStringBuilder = new StringBuilder();
    if (this.i) {}
    for (String str1 = "[X] ";; str1 = "[ ] ") {
      return str1 + this.c + " " + str2 + " " + qc.b + " " + this.f;
    }
  }
}
