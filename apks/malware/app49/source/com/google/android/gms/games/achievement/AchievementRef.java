package com.google.android.gms.games.achievement;

import android.net.Uri;
import android.os.Parcel;
import com.google.android.gms.common.data.h;
import com.google.android.gms.common.internal.i;
import com.google.android.gms.games.Player;
import com.google.android.gms.games.PlayerRef;

public final class AchievementRef
  extends h
  implements Achievement
{
  private Achievement r()
  {
    return new AchievementEntity(this);
  }
  
  public final String b()
  {
    return e("external_achievement_id");
  }
  
  public final int c()
  {
    return c("type");
  }
  
  public final String d()
  {
    return e("name");
  }
  
  public final int describeContents()
  {
    return 0;
  }
  
  public final String e()
  {
    return e("description");
  }
  
  public final Uri f()
  {
    return h("unlocked_icon_image_uri");
  }
  
  public final String g()
  {
    return e("unlocked_icon_image_url");
  }
  
  public final Uri h()
  {
    return h("revealed_icon_image_uri");
  }
  
  public final String i()
  {
    return e("revealed_icon_image_url");
  }
  
  public final int j()
  {
    boolean bool = true;
    if (c("type") == 1) {}
    for (;;)
    {
      i.a(bool);
      return c("total_steps");
      bool = false;
    }
  }
  
  public final String k()
  {
    boolean bool = true;
    if (c("type") == 1) {}
    for (;;)
    {
      i.a(bool);
      return e("formatted_total_steps");
      bool = false;
    }
  }
  
  public final Player l()
  {
    return new PlayerRef(this.a_, this.b_);
  }
  
  public final int m()
  {
    return c("state");
  }
  
  public final int n()
  {
    boolean bool = true;
    if (c("type") == 1) {}
    for (;;)
    {
      i.a(bool);
      return c("current_steps");
      bool = false;
    }
  }
  
  public final String o()
  {
    boolean bool = true;
    if (c("type") == 1) {}
    for (;;)
    {
      i.a(bool);
      return e("formatted_current_steps");
      bool = false;
    }
  }
  
  public final long p()
  {
    return b("last_updated_timestamp");
  }
  
  public final long q()
  {
    if ((!a_("instance_xp_value")) || (i("instance_xp_value"))) {
      return b("definition_xp_value");
    }
    return b("instance_xp_value");
  }
  
  public final String toString()
  {
    return AchievementEntity.a(this);
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    ((AchievementEntity)r()).writeToParcel(paramParcel, paramInt);
  }
}
