package com.google.android.gms.tagmanager;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteException;
import android.text.TextUtils;
import com.google.android.gms.b.rd;
import com.google.android.gms.b.re;
import java.util.Collections;
import java.util.List;
import org.apache.http.impl.client.DefaultHttpClient;

final class cc
  implements at
{
  private static final String a = String.format("CREATE TABLE IF NOT EXISTS %s ( '%s' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, '%s' INTEGER NOT NULL, '%s' TEXT NOT NULL,'%s' INTEGER NOT NULL);", new Object[] { "gtm_hits", "hit_id", "hit_time", "hit_url", "hit_first_send_time" });
  private final ce b;
  private volatile ab c;
  private final au d;
  private final Context e;
  private final String f;
  private long g;
  private rd h;
  private final int i;
  
  cc(au paramAu, Context paramContext)
  {
    this(paramAu, paramContext, "gtm_urls.db");
  }
  
  private cc(au paramAu, Context paramContext, String paramString)
  {
    this.e = paramContext.getApplicationContext();
    this.f = paramString;
    this.d = paramAu;
    this.h = re.c();
    this.b = new ce(this, this.e, this.f);
    this.c = new du(new DefaultHttpClient(), this.e, new cd(this));
    this.g = 0L;
    this.i = 2000;
  }
  
  private SQLiteDatabase a(String paramString)
  {
    try
    {
      SQLiteDatabase localSQLiteDatabase = this.b.getWritableDatabase();
      return localSQLiteDatabase;
    }
    catch (SQLiteException localSQLiteException)
    {
      bj.b(paramString);
    }
    return null;
  }
  
  /* Error */
  private List<String> a(int paramInt)
  {
    // Byte code:
    //   0: new 116	java/util/ArrayList
    //   3: dup
    //   4: invokespecial 117	java/util/ArrayList:<init>	()V
    //   7: astore 6
    //   9: iload_1
    //   10: ifgt +11 -> 21
    //   13: ldc 119
    //   15: invokestatic 112	com/google/android/gms/tagmanager/bj:b	(Ljava/lang/String;)V
    //   18: aload 6
    //   20: areturn
    //   21: aload_0
    //   22: ldc 121
    //   24: invokespecial 123	com/google/android/gms/tagmanager/cc:a	(Ljava/lang/String;)Landroid/database/sqlite/SQLiteDatabase;
    //   27: astore_3
    //   28: aload_3
    //   29: ifnonnull +6 -> 35
    //   32: aload 6
    //   34: areturn
    //   35: ldc 125
    //   37: iconst_1
    //   38: anewarray 4	java/lang/Object
    //   41: dup
    //   42: iconst_0
    //   43: ldc 31
    //   45: aastore
    //   46: invokestatic 43	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   49: astore 4
    //   51: iload_1
    //   52: invokestatic 131	java/lang/Integer:toString	(I)Ljava/lang/String;
    //   55: astore 5
    //   57: aload_3
    //   58: ldc 29
    //   60: iconst_1
    //   61: anewarray 39	java/lang/String
    //   64: dup
    //   65: iconst_0
    //   66: ldc 31
    //   68: aastore
    //   69: aconst_null
    //   70: aconst_null
    //   71: aconst_null
    //   72: aconst_null
    //   73: aload 4
    //   75: aload 5
    //   77: invokevirtual 137	android/database/sqlite/SQLiteDatabase:query	(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
    //   80: astore 4
    //   82: aload 4
    //   84: astore_3
    //   85: aload 4
    //   87: invokeinterface 143 1 0
    //   92: ifeq +40 -> 132
    //   95: aload 4
    //   97: astore_3
    //   98: aload 6
    //   100: aload 4
    //   102: iconst_0
    //   103: invokeinterface 147 2 0
    //   108: invokestatic 151	java/lang/String:valueOf	(J)Ljava/lang/String;
    //   111: invokeinterface 157 2 0
    //   116: pop
    //   117: aload 4
    //   119: astore_3
    //   120: aload 4
    //   122: invokeinterface 160 1 0
    //   127: istore_2
    //   128: iload_2
    //   129: ifne -34 -> 95
    //   132: aload 4
    //   134: ifnull +10 -> 144
    //   137: aload 4
    //   139: invokeinterface 163 1 0
    //   144: aload 6
    //   146: areturn
    //   147: astore 5
    //   149: aconst_null
    //   150: astore 4
    //   152: aload 4
    //   154: astore_3
    //   155: new 165	java/lang/StringBuilder
    //   158: dup
    //   159: ldc -89
    //   161: invokespecial 169	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   164: aload 5
    //   166: invokevirtual 173	android/database/sqlite/SQLiteException:getMessage	()Ljava/lang/String;
    //   169: invokevirtual 177	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   172: invokevirtual 179	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   175: invokestatic 112	com/google/android/gms/tagmanager/bj:b	(Ljava/lang/String;)V
    //   178: aload 4
    //   180: ifnull -36 -> 144
    //   183: aload 4
    //   185: invokeinterface 163 1 0
    //   190: goto -46 -> 144
    //   193: astore 4
    //   195: aconst_null
    //   196: astore_3
    //   197: aload_3
    //   198: ifnull +9 -> 207
    //   201: aload_3
    //   202: invokeinterface 163 1 0
    //   207: aload 4
    //   209: athrow
    //   210: astore 4
    //   212: goto -15 -> 197
    //   215: astore 5
    //   217: goto -65 -> 152
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	220	0	this	cc
    //   0	220	1	paramInt	int
    //   127	2	2	bool	boolean
    //   27	175	3	localObject1	Object
    //   49	135	4	localObject2	Object
    //   193	15	4	localObject3	Object
    //   210	1	4	localObject4	Object
    //   55	21	5	str	String
    //   147	18	5	localSQLiteException1	SQLiteException
    //   215	1	5	localSQLiteException2	SQLiteException
    //   7	138	6	localArrayList	java.util.ArrayList
    // Exception table:
    //   from	to	target	type
    //   35	82	147	android/database/sqlite/SQLiteException
    //   35	82	193	finally
    //   85	95	210	finally
    //   98	117	210	finally
    //   120	128	210	finally
    //   155	178	210	finally
    //   85	95	215	android/database/sqlite/SQLiteException
    //   98	117	215	android/database/sqlite/SQLiteException
    //   120	128	215	android/database/sqlite/SQLiteException
  }
  
  private void a(long paramLong)
  {
    a(new String[] { String.valueOf(paramLong) });
  }
  
  private void a(String[] paramArrayOfString)
  {
    boolean bool = true;
    if ((paramArrayOfString == null) || (paramArrayOfString.length == 0)) {}
    SQLiteDatabase localSQLiteDatabase;
    do
    {
      return;
      localSQLiteDatabase = a("Error opening database for deleteHits.");
    } while (localSQLiteDatabase == null);
    String str = String.format("HIT_ID in (%s)", new Object[] { TextUtils.join(",", Collections.nCopies(paramArrayOfString.length, "?")) });
    for (;;)
    {
      try
      {
        localSQLiteDatabase.delete("gtm_hits", str, paramArrayOfString);
        paramArrayOfString = this.d;
        if (d() == 0)
        {
          paramArrayOfString.a(bool);
          return;
        }
      }
      catch (SQLiteException paramArrayOfString)
      {
        bj.b("Error deleting hits");
        return;
      }
      bool = false;
    }
  }
  
  /* Error */
  private List<ao> c()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: new 116	java/util/ArrayList
    //   6: dup
    //   7: invokespecial 117	java/util/ArrayList:<init>	()V
    //   10: astore 5
    //   12: aload_0
    //   13: ldc -3
    //   15: invokespecial 123	com/google/android/gms/tagmanager/cc:a	(Ljava/lang/String;)Landroid/database/sqlite/SQLiteDatabase;
    //   18: astore 8
    //   20: aload 8
    //   22: ifnonnull +10 -> 32
    //   25: aload 5
    //   27: astore 6
    //   29: aload 6
    //   31: areturn
    //   32: ldc 125
    //   34: iconst_1
    //   35: anewarray 4	java/lang/Object
    //   38: dup
    //   39: iconst_0
    //   40: ldc 31
    //   42: aastore
    //   43: invokestatic 43	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   46: astore 6
    //   48: bipush 40
    //   50: invokestatic 131	java/lang/Integer:toString	(I)Ljava/lang/String;
    //   53: astore 7
    //   55: aload 8
    //   57: ldc 29
    //   59: iconst_3
    //   60: anewarray 39	java/lang/String
    //   63: dup
    //   64: iconst_0
    //   65: ldc 31
    //   67: aastore
    //   68: dup
    //   69: iconst_1
    //   70: ldc 33
    //   72: aastore
    //   73: dup
    //   74: iconst_2
    //   75: ldc 37
    //   77: aastore
    //   78: aconst_null
    //   79: aconst_null
    //   80: aconst_null
    //   81: aconst_null
    //   82: aload 6
    //   84: aload 7
    //   86: invokevirtual 137	android/database/sqlite/SQLiteDatabase:query	(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
    //   89: astore 6
    //   91: aload 6
    //   93: astore 4
    //   95: new 116	java/util/ArrayList
    //   98: dup
    //   99: invokespecial 117	java/util/ArrayList:<init>	()V
    //   102: astore 7
    //   104: aload 4
    //   106: invokeinterface 143 1 0
    //   111: ifeq +54 -> 165
    //   114: aload 7
    //   116: new 255	com/google/android/gms/tagmanager/ao
    //   119: dup
    //   120: aload 4
    //   122: iconst_0
    //   123: invokeinterface 147 2 0
    //   128: aload 4
    //   130: iconst_1
    //   131: invokeinterface 147 2 0
    //   136: aload 4
    //   138: iconst_2
    //   139: invokeinterface 147 2 0
    //   144: invokespecial 258	com/google/android/gms/tagmanager/ao:<init>	(JJJ)V
    //   147: invokeinterface 157 2 0
    //   152: pop
    //   153: aload 4
    //   155: invokeinterface 160 1 0
    //   160: istore_3
    //   161: iload_3
    //   162: ifne -48 -> 114
    //   165: aload 4
    //   167: ifnull +10 -> 177
    //   170: aload 4
    //   172: invokeinterface 163 1 0
    //   177: aload 4
    //   179: astore 5
    //   181: ldc 125
    //   183: iconst_1
    //   184: anewarray 4	java/lang/Object
    //   187: dup
    //   188: iconst_0
    //   189: ldc 31
    //   191: aastore
    //   192: invokestatic 43	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   195: astore 6
    //   197: aload 4
    //   199: astore 5
    //   201: bipush 40
    //   203: invokestatic 131	java/lang/Integer:toString	(I)Ljava/lang/String;
    //   206: astore 9
    //   208: aload 4
    //   210: astore 5
    //   212: aload 8
    //   214: ldc 29
    //   216: iconst_2
    //   217: anewarray 39	java/lang/String
    //   220: dup
    //   221: iconst_0
    //   222: ldc 31
    //   224: aastore
    //   225: dup
    //   226: iconst_1
    //   227: ldc 35
    //   229: aastore
    //   230: aconst_null
    //   231: aconst_null
    //   232: aconst_null
    //   233: aconst_null
    //   234: aload 6
    //   236: aload 9
    //   238: invokevirtual 137	android/database/sqlite/SQLiteDatabase:query	(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
    //   241: astore 6
    //   243: aload 6
    //   245: invokeinterface 143 1 0
    //   250: ifeq +53 -> 303
    //   253: iconst_0
    //   254: istore_1
    //   255: aload 6
    //   257: checkcast 260	android/database/sqlite/SQLiteCursor
    //   260: invokevirtual 264	android/database/sqlite/SQLiteCursor:getWindow	()Landroid/database/CursorWindow;
    //   263: invokevirtual 269	android/database/CursorWindow:getNumRows	()I
    //   266: ifle +132 -> 398
    //   269: aload 7
    //   271: iload_1
    //   272: invokeinterface 273 2 0
    //   277: checkcast 255	com/google/android/gms/tagmanager/ao
    //   280: aload 6
    //   282: iconst_1
    //   283: invokeinterface 276 2 0
    //   288: invokevirtual 278	com/google/android/gms/tagmanager/ao:a	(Ljava/lang/String;)V
    //   291: aload 6
    //   293: invokeinterface 160 1 0
    //   298: istore_3
    //   299: iload_3
    //   300: ifne +366 -> 666
    //   303: aload 6
    //   305: ifnull +10 -> 315
    //   308: aload 6
    //   310: invokeinterface 163 1 0
    //   315: aload 7
    //   317: areturn
    //   318: astore 6
    //   320: aconst_null
    //   321: astore 7
    //   323: aload 5
    //   325: astore 4
    //   327: aload 7
    //   329: astore 5
    //   331: new 165	java/lang/StringBuilder
    //   334: dup
    //   335: ldc -89
    //   337: invokespecial 169	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   340: aload 6
    //   342: invokevirtual 173	android/database/sqlite/SQLiteException:getMessage	()Ljava/lang/String;
    //   345: invokevirtual 177	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   348: invokevirtual 179	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   351: invokestatic 112	com/google/android/gms/tagmanager/bj:b	(Ljava/lang/String;)V
    //   354: aload 4
    //   356: astore 6
    //   358: aload 5
    //   360: ifnull -331 -> 29
    //   363: aload 5
    //   365: invokeinterface 163 1 0
    //   370: aload 4
    //   372: areturn
    //   373: astore 6
    //   375: aload 4
    //   377: astore 5
    //   379: aload 6
    //   381: astore 4
    //   383: aload 5
    //   385: ifnull +10 -> 395
    //   388: aload 5
    //   390: invokeinterface 163 1 0
    //   395: aload 4
    //   397: athrow
    //   398: ldc_w 280
    //   401: iconst_1
    //   402: anewarray 4	java/lang/Object
    //   405: dup
    //   406: iconst_0
    //   407: aload 7
    //   409: iload_1
    //   410: invokeinterface 273 2 0
    //   415: checkcast 255	com/google/android/gms/tagmanager/ao
    //   418: invokevirtual 283	com/google/android/gms/tagmanager/ao:a	()J
    //   421: invokestatic 199	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   424: aastore
    //   425: invokestatic 43	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   428: invokestatic 112	com/google/android/gms/tagmanager/bj:b	(Ljava/lang/String;)V
    //   431: goto -140 -> 291
    //   434: astore 5
    //   436: aload 6
    //   438: astore 4
    //   440: aload 5
    //   442: astore 6
    //   444: aload 4
    //   446: astore 5
    //   448: new 165	java/lang/StringBuilder
    //   451: dup
    //   452: ldc_w 285
    //   455: invokespecial 169	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   458: aload 6
    //   460: invokevirtual 173	android/database/sqlite/SQLiteException:getMessage	()Ljava/lang/String;
    //   463: invokevirtual 177	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   466: invokevirtual 179	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   469: invokestatic 112	com/google/android/gms/tagmanager/bj:b	(Ljava/lang/String;)V
    //   472: aload 4
    //   474: astore 5
    //   476: new 116	java/util/ArrayList
    //   479: dup
    //   480: invokespecial 117	java/util/ArrayList:<init>	()V
    //   483: astore 6
    //   485: aload 4
    //   487: astore 5
    //   489: aload 7
    //   491: invokeinterface 289 1 0
    //   496: astore 7
    //   498: iconst_0
    //   499: istore_1
    //   500: aload 4
    //   502: astore 5
    //   504: aload 7
    //   506: invokeinterface 294 1 0
    //   511: ifeq +78 -> 589
    //   514: aload 4
    //   516: astore 5
    //   518: aload 7
    //   520: invokeinterface 298 1 0
    //   525: checkcast 255	com/google/android/gms/tagmanager/ao
    //   528: astore 8
    //   530: iload_1
    //   531: istore_2
    //   532: aload 4
    //   534: astore 5
    //   536: aload 8
    //   538: invokevirtual 300	com/google/android/gms/tagmanager/ao:c	()Ljava/lang/String;
    //   541: invokestatic 304	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   544: ifeq +9 -> 553
    //   547: iload_1
    //   548: ifne +41 -> 589
    //   551: iconst_1
    //   552: istore_2
    //   553: aload 4
    //   555: astore 5
    //   557: aload 6
    //   559: aload 8
    //   561: invokeinterface 157 2 0
    //   566: pop
    //   567: iload_2
    //   568: istore_1
    //   569: goto -69 -> 500
    //   572: astore 4
    //   574: aload 5
    //   576: ifnull +10 -> 586
    //   579: aload 5
    //   581: invokeinterface 163 1 0
    //   586: aload 4
    //   588: athrow
    //   589: aload 4
    //   591: ifnull +10 -> 601
    //   594: aload 4
    //   596: invokeinterface 163 1 0
    //   601: aload 6
    //   603: areturn
    //   604: astore 4
    //   606: aload 6
    //   608: astore 5
    //   610: goto -36 -> 574
    //   613: astore 6
    //   615: goto -171 -> 444
    //   618: astore 6
    //   620: aload 4
    //   622: astore 5
    //   624: aload 6
    //   626: astore 4
    //   628: goto -245 -> 383
    //   631: astore 4
    //   633: goto -250 -> 383
    //   636: astore 6
    //   638: aload 4
    //   640: astore 7
    //   642: aload 5
    //   644: astore 4
    //   646: aload 7
    //   648: astore 5
    //   650: goto -319 -> 331
    //   653: astore 6
    //   655: aload 4
    //   657: astore 5
    //   659: aload 7
    //   661: astore 4
    //   663: goto -332 -> 331
    //   666: iload_1
    //   667: iconst_1
    //   668: iadd
    //   669: istore_1
    //   670: goto -415 -> 255
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	673	0	this	cc
    //   254	416	1	j	int
    //   531	37	2	k	int
    //   160	140	3	bool	boolean
    //   1	553	4	localObject1	Object
    //   572	23	4	localObject2	Object
    //   604	17	4	localObject3	Object
    //   626	1	4	localObject4	Object
    //   631	8	4	localObject5	Object
    //   644	18	4	localObject6	Object
    //   10	379	5	localObject7	Object
    //   434	7	5	localSQLiteException1	SQLiteException
    //   446	212	5	localObject8	Object
    //   27	282	6	localObject9	Object
    //   318	23	6	localSQLiteException2	SQLiteException
    //   356	1	6	localObject10	Object
    //   373	64	6	localObject11	Object
    //   442	165	6	localObject12	Object
    //   613	1	6	localSQLiteException3	SQLiteException
    //   618	7	6	localObject13	Object
    //   636	1	6	localSQLiteException4	SQLiteException
    //   653	1	6	localSQLiteException5	SQLiteException
    //   53	607	7	localObject14	Object
    //   18	542	8	localObject15	Object
    //   206	31	9	str	String
    // Exception table:
    //   from	to	target	type
    //   32	91	318	android/database/sqlite/SQLiteException
    //   32	91	373	finally
    //   243	253	434	android/database/sqlite/SQLiteException
    //   255	291	434	android/database/sqlite/SQLiteException
    //   291	299	434	android/database/sqlite/SQLiteException
    //   398	431	434	android/database/sqlite/SQLiteException
    //   181	197	572	finally
    //   201	208	572	finally
    //   212	243	572	finally
    //   448	472	572	finally
    //   476	485	572	finally
    //   489	498	572	finally
    //   504	514	572	finally
    //   518	530	572	finally
    //   536	547	572	finally
    //   557	567	572	finally
    //   243	253	604	finally
    //   255	291	604	finally
    //   291	299	604	finally
    //   398	431	604	finally
    //   181	197	613	android/database/sqlite/SQLiteException
    //   201	208	613	android/database/sqlite/SQLiteException
    //   212	243	613	android/database/sqlite/SQLiteException
    //   95	104	618	finally
    //   104	114	618	finally
    //   114	161	618	finally
    //   331	354	631	finally
    //   95	104	636	android/database/sqlite/SQLiteException
    //   104	114	653	android/database/sqlite/SQLiteException
    //   114	161	653	android/database/sqlite/SQLiteException
  }
  
  private int d()
  {
    Object localObject3 = null;
    Object localObject1 = null;
    int j = 0;
    int k = 0;
    Object localObject5 = a("Error opening database for getNumStoredHits.");
    if (localObject5 == null) {}
    for (;;)
    {
      return k;
      try
      {
        localObject5 = ((SQLiteDatabase)localObject5).rawQuery("SELECT COUNT(*) from gtm_hits", null);
        localObject1 = localObject5;
        localObject3 = localObject5;
        if (((Cursor)localObject5).moveToFirst())
        {
          localObject1 = localObject5;
          localObject3 = localObject5;
          long l = ((Cursor)localObject5).getLong(0);
          j = (int)l;
        }
        k = j;
        if (localObject5 == null) {
          continue;
        }
        ((Cursor)localObject5).close();
        return j;
      }
      catch (SQLiteException localSQLiteException)
      {
        localObject4 = localObject1;
        bj.b("Error getting numStoredHits");
        return 0;
      }
      finally
      {
        Object localObject4;
        if (localObject4 != null) {
          localObject4.close();
        }
      }
    }
  }
  
  /* Error */
  private int e()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aload_0
    //   4: ldc -65
    //   6: invokespecial 123	com/google/android/gms/tagmanager/cc:a	(Ljava/lang/String;)Landroid/database/sqlite/SQLiteDatabase;
    //   9: astore_3
    //   10: aload_3
    //   11: ifnonnull +5 -> 16
    //   14: iconst_0
    //   15: ireturn
    //   16: aload_3
    //   17: ldc 29
    //   19: iconst_2
    //   20: anewarray 39	java/lang/String
    //   23: dup
    //   24: iconst_0
    //   25: ldc 31
    //   27: aastore
    //   28: dup
    //   29: iconst_1
    //   30: ldc 37
    //   32: aastore
    //   33: ldc_w 315
    //   36: aconst_null
    //   37: aconst_null
    //   38: aconst_null
    //   39: aconst_null
    //   40: invokevirtual 318	android/database/sqlite/SQLiteDatabase:query	(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
    //   43: astore_3
    //   44: aload_3
    //   45: invokeinterface 321 1 0
    //   50: istore_2
    //   51: iload_2
    //   52: istore_1
    //   53: aload_3
    //   54: ifnull +11 -> 65
    //   57: aload_3
    //   58: invokeinterface 163 1 0
    //   63: iload_2
    //   64: istore_1
    //   65: iload_1
    //   66: ireturn
    //   67: astore_3
    //   68: aconst_null
    //   69: astore_3
    //   70: ldc_w 323
    //   73: invokestatic 112	com/google/android/gms/tagmanager/bj:b	(Ljava/lang/String;)V
    //   76: aload_3
    //   77: ifnull +56 -> 133
    //   80: aload_3
    //   81: invokeinterface 163 1 0
    //   86: iconst_0
    //   87: istore_1
    //   88: goto -23 -> 65
    //   91: astore_3
    //   92: aload 4
    //   94: ifnull +10 -> 104
    //   97: aload 4
    //   99: invokeinterface 163 1 0
    //   104: aload_3
    //   105: athrow
    //   106: astore 5
    //   108: aload_3
    //   109: astore 4
    //   111: aload 5
    //   113: astore_3
    //   114: goto -22 -> 92
    //   117: astore 5
    //   119: aload_3
    //   120: astore 4
    //   122: aload 5
    //   124: astore_3
    //   125: goto -33 -> 92
    //   128: astore 4
    //   130: goto -60 -> 70
    //   133: iconst_0
    //   134: istore_1
    //   135: goto -70 -> 65
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	138	0	this	cc
    //   52	83	1	j	int
    //   50	14	2	k	int
    //   9	49	3	localObject1	Object
    //   67	1	3	localSQLiteException1	SQLiteException
    //   69	12	3	localObject2	Object
    //   91	18	3	localObject3	Object
    //   113	12	3	localObject4	Object
    //   1	120	4	localObject5	Object
    //   128	1	4	localSQLiteException2	SQLiteException
    //   106	6	5	localObject6	Object
    //   117	6	5	localObject7	Object
    // Exception table:
    //   from	to	target	type
    //   16	44	67	android/database/sqlite/SQLiteException
    //   16	44	91	finally
    //   44	51	106	finally
    //   70	76	117	finally
    //   44	51	128	android/database/sqlite/SQLiteException
  }
  
  public final void a()
  {
    bj.e("GTM Dispatch running...");
    if (!this.c.a()) {}
    do
    {
      return;
      List localList = c();
      if (localList.isEmpty())
      {
        bj.e("...nothing to dispatch");
        this.d.a(true);
        return;
      }
      this.c.a(localList);
    } while (e() <= 0);
    dn.c().a();
  }
  
  public final void a(long paramLong, String paramString)
  {
    boolean bool = true;
    long l = this.h.a();
    Object localObject;
    if (l > this.g + 86400000L)
    {
      this.g = l;
      localObject = a("Error opening database for deleteStaleHits.");
      if (localObject != null)
      {
        ((SQLiteDatabase)localObject).delete("gtm_hits", "HIT_TIME < ?", new String[] { Long.toString(this.h.a() - 2592000000L) });
        localObject = this.d;
        if (d() != 0) {
          break label255;
        }
      }
    }
    for (;;)
    {
      ((au)localObject).a(bool);
      int j = d() - this.i + 1;
      if (j > 0)
      {
        localObject = a(j);
        bj.e("Store full, deleting " + ((List)localObject).size() + " hits to make room.");
        a((String[])((List)localObject).toArray(new String[0]));
      }
      localObject = a("Error opening database for putHit");
      ContentValues localContentValues;
      if (localObject != null)
      {
        localContentValues = new ContentValues();
        localContentValues.put("hit_time", Long.valueOf(paramLong));
        localContentValues.put("hit_url", paramString);
        localContentValues.put("hit_first_send_time", Integer.valueOf(0));
      }
      try
      {
        ((SQLiteDatabase)localObject).insert("gtm_hits", null, localContentValues);
        this.d.a(false);
        return;
      }
      catch (SQLiteException paramString)
      {
        label255:
        bj.b("Error storing hit");
      }
      bool = false;
    }
  }
}
