package com.google.android.gms.b;

import android.text.TextUtils;
import com.google.android.gms.ads.internal.g;
import com.google.android.gms.ads.internal.overlay.AdLauncherIntentInfoParcel;
import com.google.android.gms.ads.internal.util.client.b;
import com.google.android.gms.ads.internal.w;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Map;

public final class fs
  implements ff
{
  private final fn a;
  private final g b;
  private final ii c;
  
  public fs(fn paramFn, g paramG, ii paramIi)
  {
    this.a = paramFn;
    this.b = paramG;
    this.c = paramIi;
  }
  
  private void a(boolean paramBoolean)
  {
    if (this.c != null) {
      this.c.a(paramBoolean);
    }
  }
  
  private static boolean a(Map<String, String> paramMap)
  {
    return "1".equals(paramMap.get("custom_close"));
  }
  
  private static int b(Map<String, String> paramMap)
  {
    paramMap = (String)paramMap.get("o");
    if (paramMap != null)
    {
      if ("p".equalsIgnoreCase(paramMap)) {
        return w.g().b();
      }
      if ("l".equalsIgnoreCase(paramMap)) {
        return w.g().a();
      }
      if ("c".equalsIgnoreCase(paramMap)) {
        return w.g().c();
      }
    }
    return -1;
  }
  
  public final void a(pa paramPa, Map<String, String> paramMap)
  {
    String str = (String)paramMap.get("a");
    if (str == null) {
      b.e("Action missing from an open GMSG.");
    }
    pb localPb;
    do
    {
      return;
      if ((this.b != null) && (!this.b.b()))
      {
        this.b.a((String)paramMap.get("u"));
        return;
      }
      localPb = paramPa.i();
      if ("expand".equalsIgnoreCase(str))
      {
        if (paramPa.m())
        {
          b.e("Cannot expand WebView that is already expanded.");
          return;
        }
        a(false);
        localPb.a(a(paramMap), b(paramMap));
        return;
      }
      if ("webapp".equalsIgnoreCase(str))
      {
        paramPa = (String)paramMap.get("u");
        a(false);
        if (paramPa != null)
        {
          localPb.a(a(paramMap), b(paramMap), paramPa);
          return;
        }
        localPb.a(a(paramMap), b(paramMap), (String)paramMap.get("html"), (String)paramMap.get("baseurl"));
        return;
      }
      if (!"in_app_purchase".equalsIgnoreCase(str)) {
        break;
      }
      paramPa = (String)paramMap.get("product_id");
      paramMap = (String)paramMap.get("report_urls");
    } while (this.a == null);
    if ((paramMap != null) && (!paramMap.isEmpty()))
    {
      paramMap = paramMap.split(" ");
      this.a.a(paramPa, new ArrayList(Arrays.asList(paramMap)));
      return;
    }
    this.a.a(paramPa, new ArrayList());
    return;
    a(true);
    paramPa.k();
    str = (String)paramMap.get("u");
    if (!TextUtils.isEmpty(str)) {
      w.e();
    }
    for (paramPa = nj.a(paramPa, str);; paramPa = str)
    {
      localPb.a(new AdLauncherIntentInfoParcel((String)paramMap.get("i"), paramPa, (String)paramMap.get("m"), (String)paramMap.get("p"), (String)paramMap.get("c"), (String)paramMap.get("f"), (String)paramMap.get("e")));
      return;
    }
  }
}
