package com.google.android.gms.internal;

import android.os.RemoteException;
import com.google.a.a.b;
import com.google.a.a.d;
import com.google.a.a.e;
import com.google.a.a.h;
import com.google.android.gms.a.f;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import org.json.JSONObject;

public final class eg<NETWORK_EXTRAS extends h, SERVER_PARAMETERS extends e>
  extends dy
{
  private final b<NETWORK_EXTRAS, SERVER_PARAMETERS> a;
  private final NETWORK_EXTRAS b;
  
  public eg(b<NETWORK_EXTRAS, SERVER_PARAMETERS> paramB, NETWORK_EXTRAS paramNETWORK_EXTRAS)
  {
    this.a = paramB;
    this.b = paramNETWORK_EXTRAS;
  }
  
  private SERVER_PARAMETERS a(String paramString)
  {
    if (paramString != null) {
      try
      {
        localObject2 = new JSONObject(paramString);
        localObject1 = new HashMap(((JSONObject)localObject2).length());
        Iterator localIterator = ((JSONObject)localObject2).keys();
        for (;;)
        {
          paramString = (String)localObject1;
          if (!localIterator.hasNext()) {
            break;
          }
          paramString = (String)localIterator.next();
          ((Map)localObject1).put(paramString, ((JSONObject)localObject2).getString(paramString));
        }
        paramString = new HashMap(0);
      }
      catch (Throwable paramString)
      {
        mi.c("Could not get MediationServerParameters.", paramString);
        throw new RemoteException();
      }
    }
    Object localObject2 = this.a.c();
    Object localObject1 = null;
    if (localObject2 != null)
    {
      localObject1 = (e)((Class)localObject2).newInstance();
      ((e)localObject1).a(paramString);
    }
    return localObject1;
  }
  
  public final com.google.android.gms.a.c a()
  {
    if (!(this.a instanceof com.google.a.a.c))
    {
      mi.e("MediationAdapter is not a MediationBannerAdapter: " + this.a.getClass().getCanonicalName());
      throw new RemoteException();
    }
    try
    {
      com.google.android.gms.a.c localC = f.a(((com.google.a.a.c)this.a).e());
      return localC;
    }
    catch (Throwable localThrowable)
    {
      mi.c("Could not get banner view from adapter.", localThrowable);
      throw new RemoteException();
    }
  }
  
  public final void a(com.google.android.gms.a.c paramC, av paramAv, String paramString, ea paramEa)
  {
    a(paramC, paramAv, paramString, null, paramEa);
  }
  
  public final void a(com.google.android.gms.a.c paramC, av paramAv, String paramString1, String paramString2, ea paramEa)
  {
    if (!(this.a instanceof d))
    {
      mi.e("MediationAdapter is not a MediationInterstitialAdapter: " + this.a.getClass().getCanonicalName());
      throw new RemoteException();
    }
    mi.a("Requesting interstitial ad from adapter.");
    try
    {
      paramString2 = (d)this.a;
      new ej(paramEa);
      f.a(paramC);
      int i = paramAv.h;
      a(paramString1);
      ek.a(paramAv);
      paramC = this.b;
      paramString2.d();
      return;
    }
    catch (Throwable paramC)
    {
      mi.c("Could not request interstitial ad from adapter.", paramC);
      throw new RemoteException();
    }
  }
  
  public final void a(com.google.android.gms.a.c paramC, ay paramAy, av paramAv, String paramString, ea paramEa)
  {
    a(paramC, paramAy, paramAv, paramString, null, paramEa);
  }
  
  public final void a(com.google.android.gms.a.c paramC, ay paramAy, av paramAv, String paramString1, String paramString2, ea paramEa)
  {
    if (!(this.a instanceof com.google.a.a.c))
    {
      mi.e("MediationAdapter is not a MediationBannerAdapter: " + this.a.getClass().getCanonicalName());
      throw new RemoteException();
    }
    mi.a("Requesting banner ad from adapter.");
    try
    {
      paramString2 = (com.google.a.a.c)this.a;
      new ej(paramEa);
      f.a(paramC);
      int i = paramAv.h;
      a(paramString1);
      ek.a(paramAy);
      ek.a(paramAv);
      paramC = this.b;
      paramString2.d();
      return;
    }
    catch (Throwable paramC)
    {
      mi.c("Could not request banner ad from adapter.", paramC);
      throw new RemoteException();
    }
  }
  
  public final void b()
  {
    if (!(this.a instanceof d))
    {
      mi.e("MediationAdapter is not a MediationInterstitialAdapter: " + this.a.getClass().getCanonicalName());
      throw new RemoteException();
    }
    mi.a("Showing interstitial from adapter.");
    try
    {
      ((d)this.a).e();
      return;
    }
    catch (Throwable localThrowable)
    {
      mi.c("Could not show interstitial from adapter.", localThrowable);
      throw new RemoteException();
    }
  }
  
  public final void c()
  {
    try
    {
      this.a.a();
      return;
    }
    catch (Throwable localThrowable)
    {
      mi.c("Could not destroy adapter.", localThrowable);
      throw new RemoteException();
    }
  }
  
  public final void d()
  {
    throw new RemoteException();
  }
  
  public final void e()
  {
    throw new RemoteException();
  }
}
