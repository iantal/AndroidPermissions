package com.google.android.gms.internal;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.os.Bundle;
import android.os.Handler;
import android.os.SystemClock;
import android.text.TextUtils;
import java.io.BufferedOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;

public final class kk
  extends ka
{
  private static final Object a = new Object();
  private static kk b;
  private final Context c;
  private final ku d;
  private final dd e;
  private final bs f;
  
  private kk(Context paramContext, bs paramBs, dd paramDd, ku paramKu)
  {
    this.c = paramContext;
    this.d = paramKu;
    this.e = paramDd;
    this.f = paramBs;
  }
  
  private static fk a(Context paramContext, bs paramBs, fi paramFi)
  {
    mi.a("Starting ad request from service.");
    kt localKt = new kt(paramContext);
    if (localKt.l == -1)
    {
      mi.a("Device is offline.");
      return new fk(2);
    }
    Object localObject = new ko(paramFi.g.packageName);
    if (paramFi.d.d != null)
    {
      str = paramFi.d.d.getString("_ad");
      if (str != null) {
        return kn.a(paramContext, paramFi, str);
      }
    }
    String str = paramBs.a();
    paramBs = kn.a(paramFi, localKt, paramBs.b(), paramBs.c());
    if (paramBs == null) {
      return new fk(0);
    }
    paramBs = new km(paramBs);
    mg.a.post(new kl(paramContext, paramFi, (ko)localObject, paramBs, str));
    try
    {
      paramBs = (ks)((ko)localObject).a().get(10L, TimeUnit.SECONDS);
      if (paramBs == null) {
        return new fk(0);
      }
    }
    catch (Exception paramContext)
    {
      return new fk(0);
    }
    if (paramBs.a() != -2) {
      return new fk(paramBs.a());
    }
    if (paramBs.f()) {
      localObject = paramFi.h.packageName;
    }
    return a(paramContext, paramFi.l.c, paramBs.d(), paramBs);
  }
  
  public static fk a(Context paramContext, String paramString1, String paramString2, ks paramKs)
  {
    try
    {
      localKr = new kr();
      mi.a("AdRequestServiceImpl: Sending request: " + paramString2);
      paramString2 = new URL(paramString2);
      l = SystemClock.elapsedRealtime();
      i = 0;
    }
    catch (IOException paramContext)
    {
      try
      {
        for (;;)
        {
          kr localKr;
          long l;
          int i;
          lo.a(paramContext, paramString1, false, localHttpURLConnection);
          if (!TextUtils.isEmpty(null)) {
            localHttpURLConnection.addRequestProperty("x-afma-drt-cookie", null);
          }
          if ((paramKs != null) && (!TextUtils.isEmpty(paramKs.c())))
          {
            localHttpURLConnection.setDoOutput(true);
            localObject = paramKs.c().getBytes();
            localHttpURLConnection.setFixedLengthStreamingMode(localObject.length);
            BufferedOutputStream localBufferedOutputStream = new BufferedOutputStream(localHttpURLConnection.getOutputStream());
            localBufferedOutputStream.write((byte[])localObject);
            localBufferedOutputStream.close();
          }
          int j = localHttpURLConnection.getResponseCode();
          Object localObject = localHttpURLConnection.getHeaderFields();
          if ((j >= 200) && (j < 300))
          {
            paramContext = paramString2.toString();
            paramString1 = lo.a(new InputStreamReader(localHttpURLConnection.getInputStream()));
            a(paramContext, (Map)localObject, paramString1, j);
            localKr.a(paramContext, (Map)localObject, paramString1);
            paramContext = localKr.a(l);
            return paramContext;
          }
          a(paramString2.toString(), (Map)localObject, null, j);
          if ((j >= 300) && (j < 400))
          {
            paramString2 = localHttpURLConnection.getHeaderField("Location");
            if (TextUtils.isEmpty(paramString2))
            {
              mi.e("No location header to follow redirect.");
              paramContext = new fk(0);
              return paramContext;
            }
            paramString2 = new URL(paramString2);
            i += 1;
            if (i > 5)
            {
              mi.e("Too many redirects.");
              paramContext = new fk(0);
              return paramContext;
            }
          }
          else
          {
            mi.e("Received error HTTP response code: " + j);
            paramContext = new fk(0);
            return paramContext;
          }
          localKr.a((Map)localObject);
          localHttpURLConnection.disconnect();
        }
      }
      finally
      {
        HttpURLConnection localHttpURLConnection;
        localHttpURLConnection.disconnect();
      }
      paramContext = paramContext;
      mi.e("Error while connecting to ad server: " + paramContext.getMessage());
      return new fk(2);
    }
    localHttpURLConnection = (HttpURLConnection)paramString2.openConnection();
  }
  
  public static kk a(Context paramContext, bs paramBs, dd paramDd, ku paramKu)
  {
    synchronized (a)
    {
      if (b == null) {
        b = new kk(paramContext.getApplicationContext(), paramBs, paramDd, paramKu);
      }
      paramContext = b;
      return paramContext;
    }
  }
  
  private static void a(String paramString1, Map<String, List<String>> paramMap, String paramString2, int paramInt)
  {
    if (mi.a(2))
    {
      mi.d("Http Response: {\n  URL:\n    " + paramString1 + "\n  Headers:");
      if (paramMap != null)
      {
        paramString1 = paramMap.keySet().iterator();
        while (paramString1.hasNext())
        {
          Object localObject = (String)paramString1.next();
          mi.d("    " + (String)localObject + ":");
          localObject = ((List)paramMap.get(localObject)).iterator();
          while (((Iterator)localObject).hasNext())
          {
            String str = (String)((Iterator)localObject).next();
            mi.d("      " + str);
          }
        }
      }
      mi.d("  Body:");
      if (paramString2 != null)
      {
        int i = 0;
        while (i < Math.min(paramString2.length(), 100000))
        {
          mi.d(paramString2.substring(i, Math.min(paramString2.length(), i + 1000)));
          i += 1000;
        }
      }
      mi.d("    null");
      mi.d("  Response Code:\n    " + paramInt + "\n}");
    }
  }
  
  public final fk a(fi paramFi)
  {
    Context localContext = this.c;
    bs localBs = this.f;
    Object localObject = this.e;
    localObject = this.d;
    return a(localContext, localBs, paramFi);
  }
}
