package com.google.android.gms.b;

import android.os.SystemClock;
import java.io.EOFException;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public final class xz
  implements bl
{
  private final Map<String, ya> a = new LinkedHashMap(16, 0.75F, true);
  private long b = 0L;
  private final File c;
  private final int d;
  
  private xz(File paramFile)
  {
    this.c = paramFile;
    this.d = 5242880;
  }
  
  public xz(File paramFile, byte paramByte)
  {
    this(paramFile);
  }
  
  static int a(InputStream paramInputStream)
  {
    return e(paramInputStream) << 0 | 0x0 | e(paramInputStream) << 8 | e(paramInputStream) << 16 | e(paramInputStream) << 24;
  }
  
  static void a(OutputStream paramOutputStream, int paramInt)
  {
    paramOutputStream.write(paramInt >> 0 & 0xFF);
    paramOutputStream.write(paramInt >> 8 & 0xFF);
    paramOutputStream.write(paramInt >> 16 & 0xFF);
    paramOutputStream.write(paramInt >> 24 & 0xFF);
  }
  
  static void a(OutputStream paramOutputStream, long paramLong)
  {
    paramOutputStream.write((byte)(int)(paramLong >>> 0));
    paramOutputStream.write((byte)(int)(paramLong >>> 8));
    paramOutputStream.write((byte)(int)(paramLong >>> 16));
    paramOutputStream.write((byte)(int)(paramLong >>> 24));
    paramOutputStream.write((byte)(int)(paramLong >>> 32));
    paramOutputStream.write((byte)(int)(paramLong >>> 40));
    paramOutputStream.write((byte)(int)(paramLong >>> 48));
    paramOutputStream.write((byte)(int)(paramLong >>> 56));
  }
  
  static void a(OutputStream paramOutputStream, String paramString)
  {
    paramString = paramString.getBytes("UTF-8");
    a(paramOutputStream, paramString.length);
    paramOutputStream.write(paramString, 0, paramString.length);
  }
  
  private void a(String paramString, ya paramYa)
  {
    if (!this.a.containsKey(paramString)) {}
    ya localYa;
    long l;
    for (this.b += paramYa.a;; this.b = (paramYa.a - localYa.a + l))
    {
      this.a.put(paramString, paramYa);
      return;
      localYa = (ya)this.a.get(paramString);
      l = this.b;
    }
  }
  
  private static byte[] a(InputStream paramInputStream, int paramInt)
  {
    byte[] arrayOfByte = new byte[paramInt];
    int i = 0;
    while (i < paramInt)
    {
      int j = paramInputStream.read(arrayOfByte, i, paramInt - i);
      if (j == -1) {
        break;
      }
      i += j;
    }
    if (i != paramInt) {
      throw new IOException("Expected " + paramInt + " bytes, read " + i + " bytes");
    }
    return arrayOfByte;
  }
  
  static long b(InputStream paramInputStream)
  {
    return 0L | (e(paramInputStream) & 0xFF) << 0 | (e(paramInputStream) & 0xFF) << 8 | (e(paramInputStream) & 0xFF) << 16 | (e(paramInputStream) & 0xFF) << 24 | (e(paramInputStream) & 0xFF) << 32 | (e(paramInputStream) & 0xFF) << 40 | (e(paramInputStream) & 0xFF) << 48 | (e(paramInputStream) & 0xFF) << 56;
  }
  
  private void b(String paramString)
  {
    try
    {
      boolean bool = d(paramString).delete();
      ya localYa = (ya)this.a.get(paramString);
      if (localYa != null)
      {
        this.b -= localYa.a;
        this.a.remove(paramString);
      }
      if (!bool) {
        xt.b("Could not delete cache entry for key=%s, filename=%s", new Object[] { paramString, c(paramString) });
      }
      return;
    }
    finally {}
  }
  
  static String c(InputStream paramInputStream)
  {
    return new String(a(paramInputStream, (int)b(paramInputStream)), "UTF-8");
  }
  
  private static String c(String paramString)
  {
    int i = paramString.length() / 2;
    int j = paramString.substring(0, i).hashCode();
    return String.valueOf(j) + String.valueOf(paramString.substring(i).hashCode());
  }
  
  private File d(String paramString)
  {
    return new File(this.c, c(paramString));
  }
  
  static Map<String, String> d(InputStream paramInputStream)
  {
    int j = a(paramInputStream);
    if (j == 0) {}
    for (Object localObject = Collections.emptyMap();; localObject = new HashMap(j))
    {
      int i = 0;
      while (i < j)
      {
        ((Map)localObject).put(c(paramInputStream).intern(), c(paramInputStream).intern());
        i += 1;
      }
    }
    return localObject;
  }
  
  private static int e(InputStream paramInputStream)
  {
    int i = paramInputStream.read();
    if (i == -1) {
      throw new EOFException();
    }
    return i;
  }
  
  /* Error */
  public final bm a(String paramString)
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield 28	com/google/android/gms/b/xz:a	Ljava/util/Map;
    //   6: aload_1
    //   7: invokeinterface 84 2 0
    //   12: checkcast 74	com/google/android/gms/b/ya
    //   15: astore 5
    //   17: aload 5
    //   19: ifnonnull +9 -> 28
    //   22: aconst_null
    //   23: astore_1
    //   24: aload_0
    //   25: monitorexit
    //   26: aload_1
    //   27: areturn
    //   28: aload_0
    //   29: aload_1
    //   30: invokespecial 122	com/google/android/gms/b/xz:d	(Ljava/lang/String;)Ljava/io/File;
    //   33: astore 4
    //   35: new 198	com/google/android/gms/b/yb
    //   38: dup
    //   39: new 200	java/io/FileInputStream
    //   42: dup
    //   43: aload 4
    //   45: invokespecial 201	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   48: iconst_0
    //   49: invokespecial 204	com/google/android/gms/b/yb:<init>	(Ljava/io/InputStream;B)V
    //   52: astore_2
    //   53: aload_2
    //   54: invokestatic 207	com/google/android/gms/b/ya:a	(Ljava/io/InputStream;)Lcom/google/android/gms/b/ya;
    //   57: pop
    //   58: aload_2
    //   59: aload 4
    //   61: invokevirtual 210	java/io/File:length	()J
    //   64: aload_2
    //   65: invokestatic 213	com/google/android/gms/b/yb:a	(Lcom/google/android/gms/b/yb;)I
    //   68: i2l
    //   69: lsub
    //   70: l2i
    //   71: invokestatic 146	com/google/android/gms/b/xz:a	(Ljava/io/InputStream;I)[B
    //   74: astore 6
    //   76: new 215	com/google/android/gms/b/bm
    //   79: dup
    //   80: invokespecial 216	com/google/android/gms/b/bm:<init>	()V
    //   83: astore_3
    //   84: aload_3
    //   85: aload 6
    //   87: putfield 219	com/google/android/gms/b/bm:a	[B
    //   90: aload_3
    //   91: aload 5
    //   93: getfield 222	com/google/android/gms/b/ya:c	Ljava/lang/String;
    //   96: putfield 224	com/google/android/gms/b/bm:b	Ljava/lang/String;
    //   99: aload_3
    //   100: aload 5
    //   102: getfield 226	com/google/android/gms/b/ya:d	J
    //   105: putfield 228	com/google/android/gms/b/bm:c	J
    //   108: aload_3
    //   109: aload 5
    //   111: getfield 230	com/google/android/gms/b/ya:e	J
    //   114: putfield 231	com/google/android/gms/b/bm:d	J
    //   117: aload_3
    //   118: aload 5
    //   120: getfield 234	com/google/android/gms/b/ya:f	J
    //   123: putfield 235	com/google/android/gms/b/bm:e	J
    //   126: aload_3
    //   127: aload 5
    //   129: getfield 238	com/google/android/gms/b/ya:g	J
    //   132: putfield 239	com/google/android/gms/b/bm:f	J
    //   135: aload_3
    //   136: aload 5
    //   138: getfield 242	com/google/android/gms/b/ya:h	Ljava/util/Map;
    //   141: putfield 244	com/google/android/gms/b/bm:g	Ljava/util/Map;
    //   144: aload_2
    //   145: invokevirtual 247	com/google/android/gms/b/yb:close	()V
    //   148: aload_3
    //   149: astore_1
    //   150: goto -126 -> 24
    //   153: astore_1
    //   154: aconst_null
    //   155: astore_1
    //   156: goto -132 -> 24
    //   159: astore_3
    //   160: aconst_null
    //   161: astore_2
    //   162: ldc -7
    //   164: iconst_2
    //   165: anewarray 4	java/lang/Object
    //   168: dup
    //   169: iconst_0
    //   170: aload 4
    //   172: invokevirtual 252	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   175: aastore
    //   176: dup
    //   177: iconst_1
    //   178: aload_3
    //   179: invokevirtual 253	java/io/IOException:toString	()Ljava/lang/String;
    //   182: aastore
    //   183: invokestatic 141	com/google/android/gms/b/xt:b	(Ljava/lang/String;[Ljava/lang/Object;)V
    //   186: aload_0
    //   187: aload_1
    //   188: invokespecial 255	com/google/android/gms/b/xz:b	(Ljava/lang/String;)V
    //   191: aload_2
    //   192: ifnull +7 -> 199
    //   195: aload_2
    //   196: invokevirtual 247	com/google/android/gms/b/yb:close	()V
    //   199: aconst_null
    //   200: astore_1
    //   201: goto -177 -> 24
    //   204: astore_1
    //   205: aconst_null
    //   206: astore_1
    //   207: goto -183 -> 24
    //   210: astore_1
    //   211: aconst_null
    //   212: astore_2
    //   213: aload_2
    //   214: ifnull +7 -> 221
    //   217: aload_2
    //   218: invokevirtual 247	com/google/android/gms/b/yb:close	()V
    //   221: aload_1
    //   222: athrow
    //   223: astore_1
    //   224: aload_0
    //   225: monitorexit
    //   226: aload_1
    //   227: athrow
    //   228: astore_1
    //   229: aconst_null
    //   230: astore_1
    //   231: goto -207 -> 24
    //   234: astore_1
    //   235: goto -22 -> 213
    //   238: astore_1
    //   239: goto -26 -> 213
    //   242: astore_3
    //   243: goto -81 -> 162
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	246	0	this	xz
    //   0	246	1	paramString	String
    //   52	166	2	localYb	yb
    //   83	66	3	localBm	bm
    //   159	20	3	localIOException1	IOException
    //   242	1	3	localIOException2	IOException
    //   33	138	4	localFile	File
    //   15	122	5	localYa	ya
    //   74	12	6	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   144	148	153	java/io/IOException
    //   35	53	159	java/io/IOException
    //   195	199	204	java/io/IOException
    //   35	53	210	finally
    //   2	17	223	finally
    //   28	35	223	finally
    //   144	148	223	finally
    //   195	199	223	finally
    //   217	221	223	finally
    //   221	223	223	finally
    //   217	221	228	java/io/IOException
    //   53	144	234	finally
    //   162	191	238	finally
    //   53	144	242	java/io/IOException
  }
  
  /* Error */
  public final void a()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield 32	com/google/android/gms/b/xz:c	Ljava/io/File;
    //   6: invokevirtual 258	java/io/File:exists	()Z
    //   9: ifne +36 -> 45
    //   12: aload_0
    //   13: getfield 32	com/google/android/gms/b/xz:c	Ljava/io/File;
    //   16: invokevirtual 261	java/io/File:mkdirs	()Z
    //   19: ifne +23 -> 42
    //   22: ldc_w 263
    //   25: iconst_1
    //   26: anewarray 4	java/lang/Object
    //   29: dup
    //   30: iconst_0
    //   31: aload_0
    //   32: getfield 32	com/google/android/gms/b/xz:c	Ljava/io/File;
    //   35: invokevirtual 252	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   38: aastore
    //   39: invokestatic 265	com/google/android/gms/b/xt:c	(Ljava/lang/String;[Ljava/lang/Object;)V
    //   42: aload_0
    //   43: monitorexit
    //   44: return
    //   45: aload_0
    //   46: getfield 32	com/google/android/gms/b/xz:c	Ljava/io/File;
    //   49: invokevirtual 269	java/io/File:listFiles	()[Ljava/io/File;
    //   52: astore 5
    //   54: aload 5
    //   56: ifnull -14 -> 42
    //   59: aload 5
    //   61: arraylength
    //   62: istore_2
    //   63: iconst_0
    //   64: istore_1
    //   65: iload_1
    //   66: iload_2
    //   67: if_icmpge -25 -> 42
    //   70: aload 5
    //   72: iload_1
    //   73: aaload
    //   74: astore 6
    //   76: aconst_null
    //   77: astore_3
    //   78: new 271	java/io/BufferedInputStream
    //   81: dup
    //   82: new 200	java/io/FileInputStream
    //   85: dup
    //   86: aload 6
    //   88: invokespecial 201	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   91: invokespecial 274	java/io/BufferedInputStream:<init>	(Ljava/io/InputStream;)V
    //   94: astore 4
    //   96: aload 4
    //   98: astore_3
    //   99: aload 4
    //   101: invokestatic 207	com/google/android/gms/b/ya:a	(Ljava/io/InputStream;)Lcom/google/android/gms/b/ya;
    //   104: astore 7
    //   106: aload 4
    //   108: astore_3
    //   109: aload 7
    //   111: aload 6
    //   113: invokevirtual 210	java/io/File:length	()J
    //   116: putfield 76	com/google/android/gms/b/ya:a	J
    //   119: aload 4
    //   121: astore_3
    //   122: aload_0
    //   123: aload 7
    //   125: getfield 275	com/google/android/gms/b/ya:b	Ljava/lang/String;
    //   128: aload 7
    //   130: invokespecial 277	com/google/android/gms/b/xz:a	(Ljava/lang/String;Lcom/google/android/gms/b/ya;)V
    //   133: aload 4
    //   135: invokevirtual 278	java/io/BufferedInputStream:close	()V
    //   138: iload_1
    //   139: iconst_1
    //   140: iadd
    //   141: istore_1
    //   142: goto -77 -> 65
    //   145: astore_3
    //   146: aconst_null
    //   147: astore 4
    //   149: aload 6
    //   151: ifnull +12 -> 163
    //   154: aload 4
    //   156: astore_3
    //   157: aload 6
    //   159: invokevirtual 128	java/io/File:delete	()Z
    //   162: pop
    //   163: aload 4
    //   165: ifnull -27 -> 138
    //   168: aload 4
    //   170: invokevirtual 278	java/io/BufferedInputStream:close	()V
    //   173: goto -35 -> 138
    //   176: astore_3
    //   177: goto -39 -> 138
    //   180: astore 5
    //   182: aload_3
    //   183: astore 4
    //   185: aload 5
    //   187: astore_3
    //   188: aload 4
    //   190: ifnull +8 -> 198
    //   193: aload 4
    //   195: invokevirtual 278	java/io/BufferedInputStream:close	()V
    //   198: aload_3
    //   199: athrow
    //   200: astore_3
    //   201: aload_0
    //   202: monitorexit
    //   203: aload_3
    //   204: athrow
    //   205: astore_3
    //   206: goto -68 -> 138
    //   209: astore 4
    //   211: goto -13 -> 198
    //   214: astore 5
    //   216: aload_3
    //   217: astore 4
    //   219: aload 5
    //   221: astore_3
    //   222: goto -34 -> 188
    //   225: astore_3
    //   226: goto -77 -> 149
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	229	0	this	xz
    //   64	78	1	i	int
    //   62	6	2	j	int
    //   77	45	3	localObject1	Object
    //   145	1	3	localIOException1	IOException
    //   156	1	3	localObject2	Object
    //   176	7	3	localIOException2	IOException
    //   187	12	3	localObject3	Object
    //   200	4	3	localObject4	Object
    //   205	12	3	localIOException3	IOException
    //   221	1	3	localObject5	Object
    //   225	1	3	localIOException4	IOException
    //   94	100	4	localObject6	Object
    //   209	1	4	localIOException5	IOException
    //   217	1	4	localIOException6	IOException
    //   52	19	5	arrayOfFile	File[]
    //   180	6	5	localObject7	Object
    //   214	6	5	localObject8	Object
    //   74	84	6	localFile	File
    //   104	25	7	localYa	ya
    // Exception table:
    //   from	to	target	type
    //   78	96	145	java/io/IOException
    //   168	173	176	java/io/IOException
    //   78	96	180	finally
    //   2	42	200	finally
    //   45	54	200	finally
    //   59	63	200	finally
    //   133	138	200	finally
    //   168	173	200	finally
    //   193	198	200	finally
    //   198	200	200	finally
    //   133	138	205	java/io/IOException
    //   193	198	209	java/io/IOException
    //   99	106	214	finally
    //   109	119	214	finally
    //   122	133	214	finally
    //   157	163	214	finally
    //   99	106	225	java/io/IOException
    //   109	119	225	java/io/IOException
    //   122	133	225	java/io/IOException
  }
  
  public final void a(String paramString, bm paramBm)
  {
    int i = 0;
    label347:
    label371:
    label374:
    for (;;)
    {
      Object localObject2;
      ya localYa;
      try
      {
        int j = paramBm.a.length;
        if (this.b + j >= this.d)
        {
          if (xt.b) {
            xt.a("Pruning old cache entries.", new Object[0]);
          }
          long l1 = this.b;
          long l2 = SystemClock.elapsedRealtime();
          localObject1 = this.a.entrySet().iterator();
          if (!((Iterator)localObject1).hasNext()) {
            break label374;
          }
          localObject2 = (ya)((Map.Entry)((Iterator)localObject1).next()).getValue();
          if (!d(((ya)localObject2).b).delete()) {
            continue;
          }
          this.b -= ((ya)localObject2).a;
          ((Iterator)localObject1).remove();
          i += 1;
          if ((float)(this.b + j) >= this.d * 0.9F) {
            break label371;
          }
          if (xt.b) {
            xt.a("pruned %d files, %d bytes, %d ms", new Object[] { Integer.valueOf(i), Long.valueOf(this.b - l1), Long.valueOf(SystemClock.elapsedRealtime() - l2) });
          }
        }
        Object localObject1 = d(paramString);
        try
        {
          localObject2 = new FileOutputStream((File)localObject1);
          localYa = new ya(paramString, paramBm);
          if (localYa.a((OutputStream)localObject2)) {
            break label347;
          }
          ((FileOutputStream)localObject2).close();
          xt.b("Failed to write header for %s", new Object[] { ((File)localObject1).getAbsolutePath() });
          throw new IOException();
        }
        catch (IOException paramString)
        {
          if (!((File)localObject1).delete()) {
            xt.b("Could not clean up file %s", new Object[] { ((File)localObject1).getAbsolutePath() });
          }
        }
        return;
        xt.b("Could not delete cache entry for key=%s, filename=%s", new Object[] { ((ya)localObject2).b, c(((ya)localObject2).b) });
        continue;
        ((FileOutputStream)localObject2).write(paramBm.a);
      }
      finally {}
      ((FileOutputStream)localObject2).close();
      a(paramString, localYa);
      continue;
    }
  }
}
