package com.google.android.gms.common;

import android.app.AppOpsManager;
import android.app.NotificationManager;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageInstaller;
import android.content.pm.PackageInstaller.SessionInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.Resources;
import android.os.Build;
import android.os.Bundle;
import android.util.Log;
import com.google.android.gms.b.ra;
import com.google.android.gms.b.rj;
import com.google.android.gms.common.internal.ad;
import com.google.android.gms.common.internal.k;
import com.google.android.gms.e;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.atomic.AtomicBoolean;

public final class d
{
  public static final int a = 7571000;
  public static boolean b = false;
  public static boolean c = false;
  static final AtomicBoolean d = new AtomicBoolean();
  private static int e = -1;
  private static final Object f = new Object();
  private static String g = null;
  private static Integer h = null;
  
  public static int a(Context paramContext)
  {
    if (k.a) {
      return 0;
    }
    PackageManager localPackageManager = paramContext.getPackageManager();
    for (;;)
    {
      try
      {
        paramContext.getResources().getString(e.b);
        if ("com.google.android.gms".equals(paramContext.getPackageName())) {
          break label261;
        }
      }
      catch (Throwable localThrowable)
      {
        synchronized (f)
        {
          if (g == null)
          {
            g = paramContext.getPackageName();
            try
            {
              localObject3 = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData;
              if (localObject3 == null) {
                continue;
              }
              h = Integer.valueOf(((Bundle)localObject3).getInt("com.google.android.gms.version"));
            }
            catch (PackageManager.NameNotFoundException localNameNotFoundException1)
            {
              Object localObject3;
              Log.wtf("GooglePlayServicesUtil", "This should never happen.", localNameNotFoundException1);
              continue;
            }
            localObject3 = h;
            if (localObject3 != null) {
              break;
            }
            throw new IllegalStateException("A required meta-data tag in your app's AndroidManifest.xml does not exist.  You must have the following declaration within the <application> element:     <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />");
            localThrowable = localThrowable;
            Log.e("GooglePlayServicesUtil", "The Google Play services resources were not found. Check your project configuration to ensure that the resources are included.");
            continue;
            h = null;
          }
        }
      }
      if (!g.equals(paramContext.getPackageName())) {
        throw new IllegalArgumentException("isGooglePlayServicesAvailable should only be called with Context from your application's package. A previous call used package '" + g + "' and this call used package '" + paramContext.getPackageName() + "'.");
      }
    }
    if (localNameNotFoundException1.intValue() != a) {
      throw new IllegalStateException("The meta-data tag in your app's AndroidManifest.xml does not have the right value.  Expected " + a + " but found " + localNameNotFoundException1 + ".  You must have the following declaration within the <application> element:     <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />");
    }
    try
    {
      label261:
      localObject2 = localPackageManager.getPackageInfo("com.google.android.gms", 64);
      if.a();
      if ((ra.b(((PackageInfo)localObject2).versionCode)) || (ra.a(paramContext)))
      {
        if (if.a((PackageInfo)localObject2, dn.a) != null) {
          break label433;
        }
        Log.w("GooglePlayServicesUtil", "Google Play services signature invalid.");
        return 9;
      }
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      Log.w("GooglePlayServicesUtil", "Google Play services is missing.");
      return 1;
    }
    try
    {
      i localI = if.a(localPackageManager.getPackageInfo("com.android.vending", 64), dn.a);
      if (localI == null)
      {
        Log.w("GooglePlayServicesUtil", "Google Play Store signature invalid.");
        return 9;
      }
    }
    catch (PackageManager.NameNotFoundException localNameNotFoundException2)
    {
      if (a(paramContext, "com.android.vending"))
      {
        Log.w("GooglePlayServicesUtil", "Google Play Store is updating.");
        if (if.a((PackageInfo)localObject2, dn.a) == null)
        {
          Log.w("GooglePlayServicesUtil", "Google Play services signature invalid.");
          return 9;
          if (if.a((PackageInfo)localObject2, new i[] { localNameNotFoundException2 }) == null)
          {
            Log.w("GooglePlayServicesUtil", "Google Play services signature invalid.");
            return 9;
          }
        }
      }
      else
      {
        Log.w("GooglePlayServicesUtil", "Google Play Store is neither installed nor updating.");
        return 9;
      }
    }
    label433:
    int i = ra.a(a);
    if (ra.a(((PackageInfo)localObject2).versionCode) < i)
    {
      Log.w("GooglePlayServicesUtil", "Google Play services out of date.  Requires " + a + " but found " + ((PackageInfo)localObject2).versionCode);
      return 2;
    }
    Object localObject2 = ((PackageInfo)localObject2).applicationInfo;
    paramContext = (Context)localObject2;
    if (localObject2 == null) {}
    try
    {
      paramContext = localPackageManager.getApplicationInfo("com.google.android.gms", 0);
      if (!paramContext.enabled) {
        return 3;
      }
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      Log.wtf("GooglePlayServicesUtil", "Google Play services missing when getting application info.");
      paramContext.printStackTrace();
      return 1;
    }
    return 0;
  }
  
  public static boolean a(Context paramContext, int paramInt)
  {
    if (a(paramContext, paramInt, "com.google.android.gms"))
    {
      paramContext = paramContext.getPackageManager();
      if.a();
      if (if.a(paramContext, "com.google.android.gms")) {
        return true;
      }
    }
    return false;
  }
  
  private static boolean a(Context paramContext, int paramInt, String paramString)
  {
    boolean bool2 = false;
    if (rj.c()) {
      paramContext = (AppOpsManager)paramContext.getSystemService("appops");
    }
    for (;;)
    {
      try
      {
        paramContext.checkPackage(paramInt, paramString);
        bool1 = true;
        return bool1;
      }
      catch (SecurityException paramContext) {}
      paramContext = paramContext.getPackageManager().getPackagesForUid(paramInt);
      boolean bool1 = bool2;
      if (paramString != null)
      {
        bool1 = bool2;
        if (paramContext != null)
        {
          paramInt = 0;
          for (;;)
          {
            bool1 = bool2;
            if (paramInt >= paramContext.length) {
              break;
            }
            if (paramString.equals(paramContext[paramInt])) {
              return true;
            }
            paramInt += 1;
          }
        }
      }
    }
    return false;
  }
  
  private static boolean a(Context paramContext, String paramString)
  {
    if (rj.e())
    {
      paramContext = paramContext.getPackageManager().getPackageInstaller().getAllSessions().iterator();
      do
      {
        if (!paramContext.hasNext()) {
          break;
        }
      } while (!paramString.equals(((PackageInstaller.SessionInfo)paramContext.next()).getAppPackageName()));
      return true;
    }
    paramContext = paramContext.getPackageManager();
    try
    {
      boolean bool = paramContext.getApplicationInfo(paramString, 8192).enabled;
      if (bool) {
        return true;
      }
    }
    catch (PackageManager.NameNotFoundException paramContext) {}
    return false;
  }
  
  public static boolean a(PackageManager paramPackageManager)
  {
    if (!b(paramPackageManager)) {
      if (!b) {
        break label23;
      }
    }
    label23:
    for (boolean bool = c; !bool; bool = "user".equals(Build.TYPE)) {
      return true;
    }
    return false;
  }
  
  public static void b(Context paramContext)
  {
    int i = a(paramContext);
    if (i != 0)
    {
      switch (i)
      {
      default: 
        paramContext = null;
      }
      for (;;)
      {
        Log.e("GooglePlayServicesUtil", "GooglePlayServices not available due to error " + i);
        if (paramContext != null) {
          break;
        }
        throw new b(i);
        paramContext = ad.b("com.google.android.gms");
        continue;
        paramContext = ad.a();
        continue;
        paramContext = ad.a("com.google.android.gms");
      }
      throw new c(i, "Google Play Services not available", paramContext);
    }
  }
  
  private static boolean b(PackageManager paramPackageManager)
  {
    synchronized (f)
    {
      int i = e;
      if (i == -1) {}
      try
      {
        paramPackageManager = paramPackageManager.getPackageInfo("com.google.android.gms", 64);
        if.a();
        if (if.a(paramPackageManager, new i[] { h.b[1] }) != null) {}
        for (e = 1; e != 0; e = 0) {
          return true;
        }
      }
      catch (PackageManager.NameNotFoundException paramPackageManager)
      {
        for (;;)
        {
          e = 0;
        }
      }
    }
    return false;
  }
  
  public static void c(Context paramContext)
  {
    if (d.getAndSet(true)) {
      return;
    }
    try
    {
      ((NotificationManager)paramContext.getSystemService("notification")).cancel(10436);
      return;
    }
    catch (SecurityException paramContext) {}
  }
  
  public static Resources d(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getResourcesForApplication("com.google.android.gms");
      return paramContext;
    }
    catch (PackageManager.NameNotFoundException paramContext) {}
    return null;
  }
  
  public static Context e(Context paramContext)
  {
    try
    {
      paramContext = paramContext.createPackageContext("com.google.android.gms", 3);
      return paramContext;
    }
    catch (PackageManager.NameNotFoundException paramContext) {}
    return null;
  }
  
  public static boolean f(Context paramContext)
  {
    paramContext = paramContext.getPackageManager();
    return (rj.e()) && (paramContext.hasSystemFeature("com.google.sidewinder"));
  }
}
