package com.google.android.gms.games;

import android.net.Uri;
import android.os.Parcel;
import com.google.android.gms.common.data.DataHolder;
import com.google.android.gms.common.data.h;

public final class GameRef
  extends h
  implements Game
{
  public GameRef(DataHolder paramDataHolder, int paramInt)
  {
    super(paramDataHolder, paramInt);
  }
  
  private Game A()
  {
    return new GameEntity(this);
  }
  
  public final String b()
  {
    return e("external_game_id");
  }
  
  public final String c()
  {
    return e("display_name");
  }
  
  public final String d()
  {
    return e("primary_category");
  }
  
  public final int describeContents()
  {
    return 0;
  }
  
  public final String e()
  {
    return e("secondary_category");
  }
  
  public final boolean equals(Object paramObject)
  {
    return GameEntity.a(this, paramObject);
  }
  
  public final String f()
  {
    return e("game_description");
  }
  
  public final String g()
  {
    return e("developer_name");
  }
  
  public final Uri h()
  {
    return h("game_icon_image_uri");
  }
  
  public final int hashCode()
  {
    return GameEntity.a(this);
  }
  
  public final String i()
  {
    return e("game_icon_image_url");
  }
  
  public final Uri j()
  {
    return h("game_hi_res_image_uri");
  }
  
  public final String k()
  {
    return e("game_hi_res_image_url");
  }
  
  public final Uri l()
  {
    return h("featured_image_uri");
  }
  
  public final String m()
  {
    return e("featured_image_url");
  }
  
  public final boolean n()
  {
    return d("play_enabled_game");
  }
  
  public final boolean o()
  {
    return d("muted");
  }
  
  public final boolean p()
  {
    return d("identity_sharing_confirmed");
  }
  
  public final boolean q()
  {
    return c("installed") > 0;
  }
  
  public final String r()
  {
    return e("package_name");
  }
  
  public final int s()
  {
    return c("gameplay_acl_status");
  }
  
  public final int t()
  {
    return c("achievement_total_count");
  }
  
  public final String toString()
  {
    return GameEntity.b(this);
  }
  
  public final int u()
  {
    return c("leaderboard_count");
  }
  
  public final boolean v()
  {
    return c("real_time_support") > 0;
  }
  
  public final boolean w()
  {
    return c("turn_based_support") > 0;
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    ((GameEntity)A()).writeToParcel(paramParcel, paramInt);
  }
  
  public final boolean x()
  {
    return c("snapshots_enabled") > 0;
  }
  
  public final String y()
  {
    return e("theme_color");
  }
  
  public final boolean z()
  {
    return c("gamepad_support") > 0;
  }
}
