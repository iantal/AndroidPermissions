package com.google.android.gms.internal;

import android.net.Uri;
import android.os.Handler;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public class mq
  extends WebViewClient
{
  protected final mm a;
  private final HashMap<String, cp> b = new HashMap();
  private final Object c = new Object();
  private sj d;
  private fd e;
  private mu f;
  private cf g;
  private boolean h = false;
  private cq i;
  private cs j;
  private boolean k;
  private fj l;
  private final eu m;
  private sq n;
  
  public mq(mm paramMm, boolean paramBoolean)
  {
    this(paramMm, paramBoolean, new eu(paramMm, paramMm.getContext(), new br(paramMm.getContext())));
  }
  
  private mq(mm paramMm, boolean paramBoolean, eu paramEu)
  {
    this.a = paramMm;
    this.k = paramBoolean;
    this.m = paramEu;
  }
  
  private void a(Uri paramUri)
  {
    Object localObject = paramUri.getPath();
    cp localCp = (cp)this.b.get(localObject);
    if (localCp != null)
    {
      paramUri = lo.a(paramUri);
      if (mi.a(2))
      {
        mi.d("Received GMSG: " + (String)localObject);
        localObject = paramUri.keySet().iterator();
        while (((Iterator)localObject).hasNext())
        {
          String str = (String)((Iterator)localObject).next();
          mi.d("  " + str + ": " + (String)paramUri.get(str));
        }
      }
      localCp.a(this.a, paramUri);
      return;
    }
    mi.d("No GMSG handler found for GMSG: " + paramUri);
  }
  
  private void a(dm paramDm)
  {
    ex.a(this.a.getContext(), paramDm);
  }
  
  public final sq a()
  {
    return this.n;
  }
  
  public final void a(dj paramDj)
  {
    fd localFd = null;
    boolean bool = this.a.j();
    sj localSj;
    if ((bool) && (!this.a.e().f))
    {
      localSj = null;
      if (!bool) {
        break label69;
      }
    }
    for (;;)
    {
      a(new dm(paramDj, localSj, localFd, this.l, this.a.i()));
      return;
      localSj = this.d;
      break;
      label69:
      localFd = this.e;
    }
  }
  
  public final void a(mu paramMu)
  {
    this.f = paramMu;
  }
  
  public final void a(sj paramSj, cf paramCf, fj paramFj, cq paramCq, cs paramCs, sq paramSq)
  {
    a(paramSj, null, paramCf, paramFj, true, paramCq, paramSq);
    a("/setInterstitialProperties", new cr(paramCs));
    this.j = paramCs;
  }
  
  public final void a(sj paramSj, fd paramFd, cf paramCf, fj paramFj, boolean paramBoolean, cq paramCq, sq paramSq)
  {
    sq localSq = paramSq;
    if (paramSq == null) {
      localSq = new sq((byte)0);
    }
    a("/appEvent", new ce(paramCf));
    a("/canOpenURLs", cg.b);
    a("/click", cg.c);
    a("/close", cg.d);
    a("/customClose", cg.e);
    a("/httpTrack", cg.f);
    a("/log", cg.g);
    a("/open", new cu(paramCq, localSq));
    a("/touch", cg.h);
    a("/video", cg.i);
    a("/mraid", new ct());
    this.d = paramSj;
    this.e = paramFd;
    this.g = paramCf;
    this.i = paramCq;
    this.l = paramFj;
    this.n = localSq;
    this.h = paramBoolean;
  }
  
  public final void a(String paramString, cp paramCp)
  {
    this.b.put(paramString, paramCp);
  }
  
  public final void a(boolean paramBoolean, int paramInt)
  {
    if ((this.a.j()) && (!this.a.e().f)) {}
    for (sj localSj = null;; localSj = this.d)
    {
      a(new dm(localSj, this.e, this.l, this.a, paramBoolean, paramInt, this.a.i()));
      return;
    }
  }
  
  public final void a(boolean paramBoolean, int paramInt, String paramString)
  {
    fd localFd = null;
    boolean bool = this.a.j();
    sj localSj;
    if ((bool) && (!this.a.e().f))
    {
      localSj = null;
      if (!bool) {
        break label89;
      }
    }
    for (;;)
    {
      a(new dm(localSj, localFd, this.g, this.l, this.a, paramBoolean, paramInt, paramString, this.a.i(), this.i));
      return;
      localSj = this.d;
      break;
      label89:
      localFd = this.e;
    }
  }
  
  public final void a(boolean paramBoolean, int paramInt, String paramString1, String paramString2)
  {
    boolean bool = this.a.j();
    sj localSj;
    if ((bool) && (!this.a.e().f))
    {
      localSj = null;
      if (!bool) {
        break label91;
      }
    }
    label91:
    for (fd localFd = null;; localFd = this.e)
    {
      a(new dm(localSj, localFd, this.g, this.l, this.a, paramBoolean, paramInt, paramString1, paramString2, this.a.i(), this.i));
      return;
      localSj = this.d;
      break;
    }
  }
  
  public final boolean b()
  {
    synchronized (this.c)
    {
      boolean bool = this.k;
      return bool;
    }
  }
  
  public final void c()
  {
    if (b()) {
      this.m.a();
    }
  }
  
  public final void d()
  {
    synchronized (this.c)
    {
      this.b.clear();
      this.d = null;
      this.e = null;
      this.f = null;
      this.g = null;
      this.h = false;
      this.k = false;
      this.i = null;
      this.l = null;
      return;
    }
  }
  
  public final void e()
  {
    this.h = false;
  }
  
  public final void f()
  {
    synchronized (this.c)
    {
      this.h = false;
      this.k = true;
      ex localEx = this.a.d();
      if (localEx != null)
      {
        if (!mg.b()) {
          mg.a.post(new ms(this, localEx));
        }
      }
      else {
        return;
      }
      localEx.k();
    }
  }
  
  public final void onLoadResource(WebView paramWebView, String paramString)
  {
    mi.d("Loading resource: " + paramString);
    paramWebView = Uri.parse(paramString);
    if (("gmsg".equalsIgnoreCase(paramWebView.getScheme())) && ("mobileads.google.com".equalsIgnoreCase(paramWebView.getHost()))) {
      a(paramWebView);
    }
  }
  
  public final void onPageFinished(WebView paramWebView, String paramString)
  {
    if (this.f != null)
    {
      this.f.a(this.a);
      this.f = null;
    }
  }
  
  public final boolean shouldOverrideUrlLoading(WebView paramWebView, String paramString)
  {
    mi.d("AdWebView shouldOverrideUrlLoading: " + paramString);
    Uri localUri = Uri.parse(paramString);
    if (("gmsg".equalsIgnoreCase(localUri.getScheme())) && ("mobileads.google.com".equalsIgnoreCase(localUri.getHost()))) {
      a(localUri);
    }
    for (;;)
    {
      return true;
      Object localObject;
      if ((this.h) && (paramWebView == this.a))
      {
        localObject = localUri.getScheme();
        if (("http".equalsIgnoreCase((String)localObject)) || ("https".equalsIgnoreCase((String)localObject))) {}
        for (int i1 = 1; i1 != 0; i1 = 0) {
          return super.shouldOverrideUrlLoading(paramWebView, paramString);
        }
      }
      if (!this.a.willNotDraw())
      {
        try
        {
          localObject = this.a.h();
          paramWebView = localUri;
          if (localObject != null)
          {
            paramWebView = localUri;
            if (((pl)localObject).a(localUri)) {
              paramWebView = ((pl)localObject).a(localUri, this.a.getContext());
            }
          }
        }
        catch (qk paramWebView)
        {
          for (;;)
          {
            mi.e("Unable to append parameter to URL: " + paramString);
            paramWebView = localUri;
          }
          this.n.a(paramString);
        }
        if ((this.n == null) || (this.n.b())) {
          a(new dj("android.intent.action.VIEW", paramWebView.toString(), null, null, null, null, null));
        }
      }
      else
      {
        mi.e("AdWebView unable to handle URL: " + paramString);
      }
    }
  }
}
