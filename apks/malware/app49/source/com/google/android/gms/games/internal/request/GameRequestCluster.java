package com.google.android.gms.games.internal.request;

import android.os.Parcel;
import com.google.android.gms.common.internal.i;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import com.google.android.gms.games.Game;
import com.google.android.gms.games.Player;
import com.google.android.gms.games.request.GameRequest;
import com.google.android.gms.games.request.GameRequestEntity;
import java.util.ArrayList;
import java.util.Arrays;

public final class GameRequestCluster
  implements SafeParcelable, GameRequest
{
  public static final a a = new a();
  private final int b;
  private final ArrayList<GameRequestEntity> c;
  
  GameRequestCluster(int paramInt, ArrayList<GameRequestEntity> paramArrayList)
  {
    this.b = paramInt;
    this.c = paramArrayList;
    m();
  }
  
  private void m()
  {
    GameRequest localGameRequest1;
    int i;
    label39:
    GameRequest localGameRequest2;
    if (!this.c.isEmpty())
    {
      bool = true;
      i.a(bool);
      localGameRequest1 = (GameRequest)this.c.get(0);
      int j = this.c.size();
      i = 1;
      if (i >= j) {
        return;
      }
      localGameRequest2 = (GameRequest)this.c.get(i);
      if (localGameRequest1.h() != localGameRequest2.h()) {
        break label116;
      }
    }
    label116:
    for (boolean bool = true;; bool = false)
    {
      i.a(bool, "All the requests must be of the same type");
      i.a(localGameRequest1.f().equals(localGameRequest2.f()), "All the requests must be from the same sender");
      i += 1;
      break label39;
      bool = false;
      break;
    }
  }
  
  public final int a(String paramString)
  {
    throw new UnsupportedOperationException("Method not supported on a cluster");
  }
  
  public final int b()
  {
    return this.b;
  }
  
  public final ArrayList<GameRequest> c()
  {
    return new ArrayList(this.c);
  }
  
  public final String d()
  {
    return ((GameRequestEntity)this.c.get(0)).d();
  }
  
  public final int describeContents()
  {
    return 0;
  }
  
  public final Game e()
  {
    throw new UnsupportedOperationException("Method not supported on a cluster");
  }
  
  public final boolean equals(Object paramObject)
  {
    if (!(paramObject instanceof GameRequestCluster)) {
      return false;
    }
    if (this == paramObject) {
      return true;
    }
    paramObject = (GameRequestCluster)paramObject;
    if (paramObject.c.size() != this.c.size()) {
      return false;
    }
    int j = this.c.size();
    int i = 0;
    while (i < j)
    {
      if (!((GameRequest)this.c.get(i)).equals((GameRequest)paramObject.c.get(i))) {
        return false;
      }
      i += 1;
    }
    return true;
  }
  
  public final Player f()
  {
    return ((GameRequestEntity)this.c.get(0)).f();
  }
  
  public final byte[] g()
  {
    throw new UnsupportedOperationException("Method not supported on a cluster");
  }
  
  public final int h()
  {
    return ((GameRequestEntity)this.c.get(0)).h();
  }
  
  public final int hashCode()
  {
    return Arrays.hashCode(this.c.toArray());
  }
  
  public final long i()
  {
    throw new UnsupportedOperationException("Method not supported on a cluster");
  }
  
  public final long j()
  {
    throw new UnsupportedOperationException("Method not supported on a cluster");
  }
  
  public final int k()
  {
    throw new UnsupportedOperationException("Method not supported on a cluster");
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    a.a(this, paramParcel);
  }
}
