package com.google.android.gms.b;

import com.google.android.gms.common.internal.aq;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public final class tx
{
  private final tz a;
  private final rd b;
  private boolean c;
  private long d;
  private long e;
  private long f;
  private long g;
  private long h;
  private boolean i;
  private final Map<Class<? extends ty>, ty> j;
  private final List<ug> k;
  
  private tx(tx paramTx)
  {
    this.a = paramTx.a;
    this.b = paramTx.b;
    this.d = paramTx.d;
    this.e = paramTx.e;
    this.f = paramTx.f;
    this.g = paramTx.g;
    this.h = paramTx.h;
    this.k = new ArrayList(paramTx.k);
    this.j = new HashMap(paramTx.j.size());
    paramTx = paramTx.j.entrySet().iterator();
    while (paramTx.hasNext())
    {
      Map.Entry localEntry = (Map.Entry)paramTx.next();
      ty localTy = c((Class)localEntry.getKey());
      ((ty)localEntry.getValue()).a(localTy);
      this.j.put(localEntry.getKey(), localTy);
    }
  }
  
  tx(tz paramTz, rd paramRd)
  {
    aq.a(paramTz);
    aq.a(paramRd);
    this.a = paramTz;
    this.b = paramRd;
    this.g = 1800000L;
    this.h = 3024000000L;
    this.j = new HashMap();
    this.k = new ArrayList();
  }
  
  private static <T extends ty> T c(Class<T> paramClass)
  {
    try
    {
      paramClass = (ty)paramClass.newInstance();
      return paramClass;
    }
    catch (InstantiationException paramClass)
    {
      throw new IllegalArgumentException("dataType doesn't have default constructor", paramClass);
    }
    catch (IllegalAccessException paramClass)
    {
      throw new IllegalArgumentException("dataType default constructor is not accessible", paramClass);
    }
  }
  
  public final tx a()
  {
    return new tx(this);
  }
  
  public final <T extends ty> T a(Class<T> paramClass)
  {
    return (ty)this.j.get(paramClass);
  }
  
  public final void a(long paramLong)
  {
    this.e = paramLong;
  }
  
  public final void a(ty paramTy)
  {
    aq.a(paramTy);
    Class localClass = paramTy.getClass();
    if (localClass.getSuperclass() != ty.class) {
      throw new IllegalArgumentException();
    }
    paramTy.a(b(localClass));
  }
  
  public final <T extends ty> T b(Class<T> paramClass)
  {
    ty localTy2 = (ty)this.j.get(paramClass);
    ty localTy1 = localTy2;
    if (localTy2 == null)
    {
      localTy1 = c(paramClass);
      this.j.put(paramClass, localTy1);
    }
    return localTy1;
  }
  
  public final Collection<ty> b()
  {
    return this.j.values();
  }
  
  public final List<ug> c()
  {
    return this.k;
  }
  
  public final long d()
  {
    return this.d;
  }
  
  public final void e()
  {
    this.a.p().a(this);
  }
  
  public final boolean f()
  {
    return this.c;
  }
  
  final void g()
  {
    this.f = this.b.b();
    if (this.e != 0L) {}
    for (this.d = this.e;; this.d = this.b.a())
    {
      this.c = true;
      return;
    }
  }
  
  final tz h()
  {
    return this.a;
  }
  
  final boolean i()
  {
    return this.i;
  }
  
  final void j()
  {
    this.i = true;
  }
}
