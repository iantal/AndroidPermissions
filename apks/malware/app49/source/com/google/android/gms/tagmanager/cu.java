package com.google.android.gms.tagmanager;

import android.content.Context;
import com.google.android.gms.b.p;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.TimeUnit;

final class cu
  implements fg
{
  private final String a;
  private final Context b;
  private final ScheduledExecutorService c;
  private final cx d;
  private ScheduledFuture<?> e;
  private boolean f;
  private fk g;
  private String h;
  private bh<p> i;
  
  public cu(Context paramContext, String paramString, fk paramFk)
  {
    this(paramContext, paramString, paramFk, (byte)0);
  }
  
  private cu(Context paramContext, String paramString, fk paramFk, byte paramByte)
  {
    this.g = paramFk;
    this.b = paramContext;
    this.a = paramString;
    this.c = new cv(this).a();
    this.d = new cw(this);
  }
  
  private void a()
  {
    try
    {
      if (this.f) {
        throw new IllegalStateException("called method after closed");
      }
    }
    finally {}
  }
  
  public final void a(String paramString)
  {
    try
    {
      bj.e("loadAfterDelay: containerId=" + this.a + " delay=0");
      a();
      if (this.i == null) {
        throw new IllegalStateException("callback must be set before loadAfterDelay() is called.");
      }
    }
    finally {}
    if (this.e != null) {
      this.e.cancel(false);
    }
    ScheduledExecutorService localScheduledExecutorService = this.c;
    ct localCt = this.d.a(this.g);
    localCt.a(this.i);
    localCt.a(this.h);
    localCt.b(paramString);
    this.e = localScheduledExecutorService.schedule(localCt, 0L, TimeUnit.MILLISECONDS);
  }
  
  public final void b()
  {
    try
    {
      a();
      if (this.e != null) {
        this.e.cancel(false);
      }
      this.c.shutdown();
      this.f = true;
      return;
    }
    finally {}
  }
  
  public final void b(String paramString)
  {
    try
    {
      a();
      this.h = paramString;
      return;
    }
    finally
    {
      paramString = finally;
      throw paramString;
    }
  }
}
