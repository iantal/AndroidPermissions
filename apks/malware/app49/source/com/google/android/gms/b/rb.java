package com.google.android.gms.b;

import android.os.Handler;
import android.os.Looper;
import com.google.android.gms.internal.zzl.zza;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Set;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.atomic.AtomicInteger;

public final class rb
{
  private AtomicInteger a = new AtomicInteger();
  private final Map<String, Queue<qa<?>>> b = new HashMap();
  private final Set<qa<?>> c = new HashSet();
  private final PriorityBlockingQueue<qa<?>> d = new PriorityBlockingQueue();
  private final PriorityBlockingQueue<qa<?>> e = new PriorityBlockingQueue();
  private final bl f;
  private final jc g;
  private final tr h;
  private lh[] i;
  private di j;
  private List<zzl.zza> k = new ArrayList();
  
  private rb(bl paramBl, jc paramJc)
  {
    this(paramBl, paramJc, new hg(new Handler(Looper.getMainLooper())));
  }
  
  public rb(bl paramBl, jc paramJc, byte paramByte)
  {
    this(paramBl, paramJc);
  }
  
  private rb(bl paramBl, jc paramJc, tr paramTr)
  {
    this.f = paramBl;
    this.g = paramJc;
    this.i = new lh[4];
    this.h = paramTr;
  }
  
  public final <T> qa<T> a(qa<T> paramQa)
  {
    paramQa.a(this);
    synchronized (this.c)
    {
      this.c.add(paramQa);
      paramQa.a(this.a.incrementAndGet());
      paramQa.a("add-to-queue");
      if (!paramQa.k())
      {
        this.e.add(paramQa);
        return paramQa;
      }
    }
    for (;;)
    {
      String str;
      synchronized (this.b)
      {
        str = paramQa.e();
        if (this.b.containsKey(str))
        {
          Queue localQueue = (Queue)this.b.get(str);
          ??? = localQueue;
          if (localQueue == null) {
            ??? = new LinkedList();
          }
          ((Queue)???).add(paramQa);
          this.b.put(str, ???);
          if (xt.b) {
            xt.a("Request for cacheKey=%s is in flight, putting on hold.", new Object[] { str });
          }
          return paramQa;
        }
      }
      this.b.put(str, null);
      this.d.add(paramQa);
    }
  }
  
  public final void a()
  {
    int n = 0;
    if (this.j != null) {
      this.j.a();
    }
    int m = 0;
    while (m < this.i.length)
    {
      if (this.i[m] != null) {
        this.i[m].a();
      }
      m += 1;
    }
    this.j = new di(this.d, this.e, this.f, this.h);
    this.j.start();
    m = n;
    while (m < this.i.length)
    {
      lh localLh = new lh(this.e, this.g, this.f, this.h);
      this.i[m] = localLh;
      localLh.start();
      m += 1;
    }
  }
  
  final <T> void b(qa<T> paramQa)
  {
    Object localObject2;
    synchronized (this.c)
    {
      this.c.remove(paramQa);
      synchronized (this.k)
      {
        localObject2 = this.k.iterator();
        if (((Iterator)localObject2).hasNext()) {
          ((Iterator)localObject2).next();
        }
      }
    }
    if (paramQa.k()) {}
    synchronized (this.b)
    {
      paramQa = paramQa.e();
      localObject2 = (Queue)this.b.remove(paramQa);
      if (localObject2 != null)
      {
        if (xt.b) {
          xt.a("Releasing %d waiting requests for cacheKey=%s.", new Object[] { Integer.valueOf(((Queue)localObject2).size()), paramQa });
        }
        this.d.addAll((Collection)localObject2);
      }
      return;
    }
  }
}
