package com.google.android.gms.ads.internal.overlay;

import android.content.Context;
import android.media.AudioManager;
import android.media.AudioManager.OnAudioFocusChangeListener;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnBufferingUpdateListener;
import android.media.MediaPlayer.OnCompletionListener;
import android.media.MediaPlayer.OnErrorListener;
import android.media.MediaPlayer.OnInfoListener;
import android.media.MediaPlayer.OnPreparedListener;
import android.media.MediaPlayer.OnVideoSizeChangedListener;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Handler;
import android.view.SurfaceHolder;
import android.view.SurfaceHolder.Callback;
import android.view.SurfaceView;
import android.view.View.MeasureSpec;
import com.google.android.gms.ads.internal.util.client.b;
import com.google.android.gms.ads.internal.w;
import com.google.android.gms.b.nj;
import com.google.android.gms.b.rd;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public final class m
  extends SurfaceView
  implements AudioManager.OnAudioFocusChangeListener, MediaPlayer.OnBufferingUpdateListener, MediaPlayer.OnCompletionListener, MediaPlayer.OnErrorListener, MediaPlayer.OnInfoListener, MediaPlayer.OnPreparedListener, MediaPlayer.OnVideoSizeChangedListener, SurfaceHolder.Callback
{
  private static final Map<Integer, String> a;
  private int b = 0;
  private int c = 0;
  private SurfaceHolder d;
  private MediaPlayer e;
  private Uri f;
  private int g;
  private int h;
  private int i;
  private int j;
  private int k;
  private float l = 1.0F;
  private boolean m;
  private boolean n;
  private int o;
  private k p;
  
  static
  {
    HashMap localHashMap = new HashMap();
    a = localHashMap;
    localHashMap.put(Integer.valueOf(64532), "MEDIA_ERROR_IO");
    a.put(Integer.valueOf(64529), "MEDIA_ERROR_MALFORMED");
    a.put(Integer.valueOf(64526), "MEDIA_ERROR_UNSUPPORTED");
    a.put(Integer.valueOf(-110), "MEDIA_ERROR_TIMED_OUT");
    a.put(Integer.valueOf(100), "MEDIA_ERROR_SERVER_DIED");
    a.put(Integer.valueOf(1), "MEDIA_ERROR_UNKNOWN");
    a.put(Integer.valueOf(1), "MEDIA_INFO_UNKNOWN");
    a.put(Integer.valueOf(700), "MEDIA_INFO_VIDEO_TRACK_LAGGING");
    a.put(Integer.valueOf(3), "MEDIA_INFO_VIDEO_RENDERING_START");
    a.put(Integer.valueOf(701), "MEDIA_INFO_BUFFERING_START");
    a.put(Integer.valueOf(702), "MEDIA_INFO_BUFFERING_END");
    a.put(Integer.valueOf(800), "MEDIA_INFO_BAD_INTERLEAVING");
    a.put(Integer.valueOf(801), "MEDIA_INFO_NOT_SEEKABLE");
    a.put(Integer.valueOf(802), "MEDIA_INFO_METADATA_UPDATE");
    a.put(Integer.valueOf(901), "MEDIA_INFO_UNSUPPORTED_SUBTITLE");
    a.put(Integer.valueOf(902), "MEDIA_INFO_SUBTITLE_TIMED_OUT");
  }
  
  public m(Context paramContext)
  {
    super(paramContext);
    getHolder().addCallback(this);
    if (Build.VERSION.SDK_INT < 11) {
      getHolder().setType(3);
    }
  }
  
  private void a(boolean paramBoolean)
  {
    b.d("AdVideoView release");
    if (this.e != null)
    {
      this.e.reset();
      this.e.release();
      this.e = null;
      this.b = 0;
      if (paramBoolean) {
        this.c = 0;
      }
      h();
    }
  }
  
  private void b(float paramFloat)
  {
    if (this.e != null) {}
    try
    {
      this.e.setVolume(paramFloat, paramFloat);
      return;
    }
    catch (IllegalStateException localIllegalStateException) {}
    b.e("AdVideoView setMediaPlayerVolume() called before onPrepared().");
    return;
  }
  
  private void g()
  {
    b.d("AdVideoView init MediaPlayer");
    if ((this.f == null) || (this.d == null)) {
      return;
    }
    a(false);
    try
    {
      this.e = new MediaPlayer();
      this.e.setOnBufferingUpdateListener(this);
      this.e.setOnCompletionListener(this);
      this.e.setOnErrorListener(this);
      this.e.setOnInfoListener(this);
      this.e.setOnPreparedListener(this);
      this.e.setOnVideoSizeChangedListener(this);
      this.k = 0;
      this.e.setDataSource(getContext(), this.f);
      this.e.setDisplay(this.d);
      this.e.setAudioStreamType(3);
      this.e.setScreenOnWhilePlaying(true);
      this.e.prepareAsync();
      this.b = 1;
      return;
    }
    catch (IOException localIOException)
    {
      b.c("Failed to initialize MediaPlayer at " + this.f, localIOException);
      onError(this.e, 1, 0);
      return;
    }
    catch (IllegalArgumentException localIllegalArgumentException)
    {
      for (;;) {}
    }
  }
  
  private void h()
  {
    b.d("AdVideoView abandon audio focus");
    AudioManager localAudioManager = l();
    if ((localAudioManager != null) && (this.n))
    {
      if (localAudioManager.abandonAudioFocus(this) == 1) {
        this.n = false;
      }
    }
    else {
      return;
    }
    b.e("AdVideoView abandon audio focus failed");
  }
  
  private boolean i()
  {
    return (this.e != null) && (this.b != -1) && (this.b != 0) && (this.b != 1);
  }
  
  private void j()
  {
    b.d("AdVideoView audio focus gained");
    this.n = true;
    k();
  }
  
  private void k()
  {
    if ((!this.m) && (this.n))
    {
      b(this.l);
      return;
    }
    b(0.0F);
  }
  
  private AudioManager l()
  {
    return (AudioManager)getContext().getSystemService("audio");
  }
  
  public final void a()
  {
    b.d("AdVideoView stop");
    if (this.e != null)
    {
      this.e.stop();
      this.e.release();
      this.e = null;
      this.b = 0;
      this.c = 0;
      h();
    }
  }
  
  public final void a(float paramFloat)
  {
    this.l = paramFloat;
    k();
  }
  
  public final void a(int paramInt)
  {
    b.d("AdVideoView seek " + paramInt);
    if (i())
    {
      this.e.seekTo(paramInt);
      this.o = 0;
      return;
    }
    this.o = paramInt;
  }
  
  public final void a(k paramK)
  {
    this.p = paramK;
  }
  
  public final void a(String paramString)
  {
    this.f = Uri.parse(paramString);
    this.o = 0;
    g();
    requestLayout();
    invalidate();
  }
  
  public final void b()
  {
    b.d("AdVideoView play");
    if (i())
    {
      this.e.start();
      this.b = 3;
      nj.a.post(new s(this));
    }
    this.c = 3;
  }
  
  public final void c()
  {
    b.d("AdVideoView pause");
    if ((i()) && (this.e.isPlaying()))
    {
      this.e.pause();
      this.b = 4;
      nj.a.post(new t(this));
    }
    this.c = 4;
  }
  
  public final int d()
  {
    if (i()) {
      return this.e.getCurrentPosition();
    }
    return 0;
  }
  
  public final void e()
  {
    this.m = true;
    k();
  }
  
  public final void f()
  {
    this.m = false;
    k();
  }
  
  public final void onAudioFocusChange(int paramInt)
  {
    if (paramInt > 0) {
      j();
    }
    while (paramInt >= 0) {
      return;
    }
    b.d("AdVideoView audio focus lost");
    this.n = false;
    k();
  }
  
  public final void onBufferingUpdate(MediaPlayer paramMediaPlayer, int paramInt)
  {
    this.k = paramInt;
  }
  
  public final void onCompletion(MediaPlayer paramMediaPlayer)
  {
    b.d("AdVideoView completion");
    this.b = 5;
    this.c = 5;
    nj.a.post(new o(this));
  }
  
  public final boolean onError(MediaPlayer paramMediaPlayer, int paramInt1, int paramInt2)
  {
    paramMediaPlayer = (String)a.get(Integer.valueOf(paramInt1));
    String str = (String)a.get(Integer.valueOf(paramInt2));
    b.e("AdVideoView MediaPlayer error: " + paramMediaPlayer + ":" + str);
    this.b = -1;
    this.c = -1;
    nj.a.post(new p(this, paramMediaPlayer, str));
    return true;
  }
  
  public final boolean onInfo(MediaPlayer paramMediaPlayer, int paramInt1, int paramInt2)
  {
    paramMediaPlayer = (String)a.get(Integer.valueOf(paramInt1));
    String str = (String)a.get(Integer.valueOf(paramInt2));
    b.d("AdVideoView MediaPlayer info: " + paramMediaPlayer + ":" + str);
    return true;
  }
  
  protected final void onMeasure(int paramInt1, int paramInt2)
  {
    int i3 = getDefaultSize(this.g, paramInt1);
    int i4 = getDefaultSize(this.h, paramInt2);
    int i2 = i4;
    int i1 = i3;
    int i5;
    if (this.g > 0)
    {
      i2 = i4;
      i1 = i3;
      if (this.h > 0)
      {
        i4 = View.MeasureSpec.getMode(paramInt1);
        paramInt1 = View.MeasureSpec.getSize(paramInt1);
        i5 = View.MeasureSpec.getMode(paramInt2);
        paramInt2 = View.MeasureSpec.getSize(paramInt2);
        if ((i4 != 1073741824) || (i5 != 1073741824)) {
          break label157;
        }
        if (this.g * paramInt2 >= this.h * paramInt1) {
          break label124;
        }
        i1 = this.g * paramInt2 / this.h;
        i2 = paramInt2;
      }
    }
    for (;;)
    {
      setMeasuredDimension(i1, i2);
      return;
      label124:
      if (this.g * paramInt2 > this.h * paramInt1)
      {
        i2 = this.h * paramInt1 / this.g;
        i1 = paramInt1;
        continue;
        label157:
        if (i4 == 1073741824)
        {
          i2 = this.h * paramInt1 / this.g;
          if ((i5 == Integer.MIN_VALUE) && (i2 > paramInt2))
          {
            i2 = paramInt2;
            i1 = paramInt1;
          }
        }
        else
        {
          if (i5 == 1073741824)
          {
            i3 = this.g * paramInt2 / this.h;
            i2 = paramInt2;
            i1 = i3;
            if (i4 != Integer.MIN_VALUE) {
              continue;
            }
            i2 = paramInt2;
            i1 = i3;
            if (i3 <= paramInt1) {
              continue;
            }
            i2 = paramInt2;
            i1 = paramInt1;
            continue;
          }
          i3 = this.g;
          i1 = this.h;
          if ((i5 == Integer.MIN_VALUE) && (i1 > paramInt2)) {
            i3 = this.g * paramInt2 / this.h;
          }
          for (;;)
          {
            i2 = paramInt2;
            i1 = i3;
            if (i4 != Integer.MIN_VALUE) {
              break;
            }
            i2 = paramInt2;
            i1 = i3;
            if (i3 <= paramInt1) {
              break;
            }
            i2 = this.h * paramInt1 / this.g;
            i1 = paramInt1;
            break;
            paramInt2 = i1;
          }
        }
        i1 = paramInt1;
      }
      else
      {
        i2 = paramInt2;
        i1 = paramInt1;
      }
    }
  }
  
  public final void onPrepared(MediaPlayer paramMediaPlayer)
  {
    b.d("AdVideoView prepared");
    this.b = 2;
    nj.a.post(new n(this, paramMediaPlayer));
    this.g = paramMediaPlayer.getVideoWidth();
    this.h = paramMediaPlayer.getVideoHeight();
    if (this.o != 0) {
      a(this.o);
    }
    if ((i()) && (this.c != 3))
    {
      b.d("AdVideoView nudging MediaPlayer");
      this.e.start();
      int i1 = this.e.getCurrentPosition();
      long l1 = w.i().a();
      while ((i()) && (this.e.getCurrentPosition() == i1) && (w.i().a() - l1 <= 250L)) {}
      this.e.pause();
    }
    if ((this.g != 0) && (this.h != 0))
    {
      b.c("AdVideoView stream dimensions: " + this.g + " x " + this.h);
      getHolder().setFixedSize(this.g, this.h);
      if ((this.i == this.g) && (this.j == this.h) && (this.c == 3)) {
        b();
      }
      paramMediaPlayer = l();
      if ((paramMediaPlayer != null) && (!this.n))
      {
        if (paramMediaPlayer.requestAudioFocus(this, 3, 2) != 1) {
          break label297;
        }
        j();
      }
    }
    for (;;)
    {
      k();
      return;
      if (this.c != 3) {
        break;
      }
      b();
      break;
      label297:
      b.e("AdVideoView audio focus request failed");
    }
  }
  
  public final void onVideoSizeChanged(MediaPlayer paramMediaPlayer, int paramInt1, int paramInt2)
  {
    b.d("AdVideoView size changed: " + paramInt1 + " x " + paramInt2);
    this.g = paramMediaPlayer.getVideoWidth();
    this.h = paramMediaPlayer.getVideoHeight();
    if ((this.g != 0) && (this.h != 0))
    {
      getHolder().setFixedSize(this.g, this.h);
      requestLayout();
    }
  }
  
  public final void surfaceChanged(SurfaceHolder paramSurfaceHolder, int paramInt1, int paramInt2, int paramInt3)
  {
    int i1 = 1;
    b.d("AdVideoView surface changed");
    this.i = paramInt2;
    this.j = paramInt3;
    if (this.c == 3)
    {
      paramInt1 = 1;
      if ((this.g != paramInt2) || (this.h != paramInt3)) {
        break label90;
      }
    }
    label90:
    for (paramInt2 = i1;; paramInt2 = 0)
    {
      if ((this.e != null) && (paramInt1 != 0) && (paramInt2 != 0))
      {
        if (this.o != 0) {
          a(this.o);
        }
        b();
      }
      return;
      paramInt1 = 0;
      break;
    }
  }
  
  public final void surfaceCreated(SurfaceHolder paramSurfaceHolder)
  {
    b.d("AdVideoView surface created");
    this.d = paramSurfaceHolder;
    g();
    nj.a.post(new q(this));
  }
  
  public final void surfaceDestroyed(SurfaceHolder paramSurfaceHolder)
  {
    b.d("AdVideoView surface destroyed");
    if ((this.e != null) && (this.o == 0)) {
      this.o = this.e.getCurrentPosition();
    }
    this.d = null;
    nj.a.post(new r(this));
    a(true);
  }
  
  public final String toString()
  {
    return getClass().getName() + "@" + Integer.toHexString(hashCode());
  }
}
