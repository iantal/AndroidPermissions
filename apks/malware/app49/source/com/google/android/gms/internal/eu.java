package com.google.android.gms.internal;

import android.content.Context;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.WindowManager;
import org.json.JSONException;
import org.json.JSONObject;

public final class eu
{
  DisplayMetrics a;
  int b = -1;
  int c = -1;
  private final mm d;
  private final Context e;
  private final WindowManager f;
  private final br g;
  private float h;
  private int i;
  private int j = -1;
  private int k = -1;
  private int[] l = new int[2];
  
  public eu(mm paramMm, Context paramContext, br paramBr)
  {
    this.d = paramMm;
    this.e = paramContext;
    this.g = paramBr;
    this.f = ((WindowManager)paramContext.getSystemService("window"));
    this.a = new DisplayMetrics();
    paramMm = this.f.getDefaultDisplay();
    paramMm.getMetrics(this.a);
    this.h = this.a.density;
    this.i = paramMm.getRotation();
    int m = lo.c(this.e);
    float f1 = 160.0F / this.a.densityDpi;
    this.b = Math.round(this.a.widthPixels * f1);
    this.c = Math.round((this.a.heightPixels - m) * f1);
    this.d.getLocationOnScreen(this.l);
    this.d.measure(0, 0);
    f1 = 160.0F / this.a.densityDpi;
    this.j = Math.round(this.d.getMeasuredWidth() * f1);
    this.k = Math.round(f1 * this.d.getMeasuredHeight());
  }
  
  public final void a()
  {
    try
    {
      localObject = new JSONObject().put("width", this.b).put("height", this.c).put("density", this.h).put("rotation", this.i);
      this.d.b("onScreenInfoChanged", (JSONObject)localObject);
      localObject = new et().b(this.g.a()).a(this.g.b()).c(this.g.d()).d(this.g.c());
      br localBr = this.g;
      localObject = new es(((et)localObject).a(), (byte)0);
      this.d.b("onDeviceFeaturesReceived", ((es)localObject).a());
    }
    catch (JSONException localJSONException1)
    {
      try
      {
        Object localObject = new JSONObject().put("x", this.l[0]).put("y", this.l[1]).put("width", this.j).put("height", this.k);
        this.d.b("onDefaultPositionReceived", (JSONObject)localObject);
        if (mi.a(2)) {
          mi.c("Dispatching Ready Event.");
        }
        this.d.b("onReadyEventReceived", new JSONObject());
        return;
        localJSONException1 = localJSONException1;
        mi.b("Error occured while obtaining screen information.", localJSONException1);
      }
      catch (JSONException localJSONException2)
      {
        for (;;)
        {
          mi.b("Error occured while dispatching default position.", localJSONException2);
        }
      }
    }
  }
}
