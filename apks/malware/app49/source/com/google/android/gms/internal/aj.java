package com.google.android.gms.internal;

import android.util.Base64OutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.Iterator;
import java.util.PriorityQueue;

public final class aj
{
  private final int a;
  private final int b;
  private final ai c = new am();
  private Base64OutputStream d;
  private ByteArrayOutputStream e;
  
  public aj(int paramInt)
  {
    this.b = paramInt;
    this.a = 6;
  }
  
  final String a(String paramString)
  {
    paramString = paramString.split("\n");
    if ((paramString == null) || (paramString.length == 0)) {
      return "";
    }
    this.e = new ByteArrayOutputStream();
    this.d = new Base64OutputStream(this.e, 10);
    Object localObject = new PriorityQueue(this.b, new ak(this));
    int i = 0;
    while (i < paramString.length)
    {
      String[] arrayOfString = al.b(paramString[i]);
      if (arrayOfString.length >= this.a) {
        an.a(arrayOfString, this.b, this.a, (PriorityQueue)localObject);
      }
      i += 1;
    }
    paramString = ((PriorityQueue)localObject).iterator();
    while (paramString.hasNext())
    {
      localObject = (ao)paramString.next();
      try
      {
        this.d.write(this.c.a(((ao)localObject).b));
      }
      catch (IOException localIOException)
      {
        mi.b("Error while writing hash to byteStream", localIOException);
      }
    }
    try
    {
      this.d.flush();
      this.d.close();
      paramString = this.e.toString();
      return paramString;
    }
    catch (IOException paramString)
    {
      mi.b("HashManager: unable to convert to base 64", paramString);
    }
    return "";
  }
}
