package com.google.android.gms.internal;

import java.io.UnsupportedEncodingException;

public final class rv
{
  private final byte[] a;
  private final int b;
  private int c;
  
  private rv(byte[] paramArrayOfByte, int paramInt)
  {
    this.a = paramArrayOfByte;
    this.c = 0;
    this.b = (paramInt + 0);
  }
  
  public static int a(int paramInt)
  {
    return c(1) + b(paramInt);
  }
  
  public static int a(long paramLong)
  {
    if ((0xFFFFFFFFFFFFFF80 & paramLong) == 0L) {
      return 1;
    }
    if ((0xFFFFFFFFFFFFC000 & paramLong) == 0L) {
      return 2;
    }
    if ((0xFFFFFFFFFFE00000 & paramLong) == 0L) {
      return 3;
    }
    if ((0xFFFFFFFFF0000000 & paramLong) == 0L) {
      return 4;
    }
    if ((0xFFFFFFF800000000 & paramLong) == 0L) {
      return 5;
    }
    if ((0xFFFFFC0000000000 & paramLong) == 0L) {
      return 6;
    }
    if ((0xFFFE000000000000 & paramLong) == 0L) {
      return 7;
    }
    if ((0xFF00000000000000 & paramLong) == 0L) {
      return 8;
    }
    if ((0x8000000000000000 & paramLong) == 0L) {
      return 9;
    }
    return 10;
  }
  
  private static int a(String paramString)
  {
    try
    {
      paramString = paramString.getBytes("UTF-8");
      int i = e(paramString.length);
      int j = paramString.length;
      return j + i;
    }
    catch (UnsupportedEncodingException paramString)
    {
      throw new RuntimeException("UTF-8 not supported.");
    }
  }
  
  public static rv a(byte[] paramArrayOfByte)
  {
    return a(paramArrayOfByte, paramArrayOfByte.length);
  }
  
  public static rv a(byte[] paramArrayOfByte, int paramInt)
  {
    return new rv(paramArrayOfByte, paramInt);
  }
  
  public static int b(int paramInt)
  {
    if (paramInt >= 0) {
      return e(paramInt);
    }
    return 10;
  }
  
  public static int b(int paramInt, sc paramSc)
  {
    paramInt = c(paramInt);
    int i = paramSc.d();
    return paramInt + (i + e(i));
  }
  
  public static int b(int paramInt, String paramString)
  {
    return c(paramInt) + a(paramString);
  }
  
  private void b(long paramLong)
  {
    for (;;)
    {
      if ((0xFFFFFFFFFFFFFF80 & paramLong) == 0L)
      {
        f((int)paramLong);
        return;
      }
      f((int)paramLong & 0x7F | 0x80);
      paramLong >>>= 7;
    }
  }
  
  public static int c(int paramInt)
  {
    return e(sf.a(paramInt, 0));
  }
  
  public static int c(int paramInt, long paramLong)
  {
    return c(paramInt) + a(c(paramLong));
  }
  
  private static long c(long paramLong)
  {
    return paramLong << 1 ^ paramLong >> 63;
  }
  
  public static int e(int paramInt)
  {
    if ((paramInt & 0xFFFFFF80) == 0) {
      return 1;
    }
    if ((paramInt & 0xC000) == 0) {
      return 2;
    }
    if ((0xFFE00000 & paramInt) == 0) {
      return 3;
    }
    if ((0xF0000000 & paramInt) == 0) {
      return 4;
    }
    return 5;
  }
  
  private void f(int paramInt)
  {
    int i = (byte)paramInt;
    if (this.c == this.b) {
      throw new rw(this.c, this.b);
    }
    byte[] arrayOfByte = this.a;
    paramInt = this.c;
    this.c = (paramInt + 1);
    arrayOfByte[paramInt] = i;
  }
  
  public final int a()
  {
    return this.b - this.c;
  }
  
  public final void a(int paramInt1, int paramInt2)
  {
    b(paramInt1, 0);
    if (paramInt2 >= 0)
    {
      d(paramInt2);
      return;
    }
    b(paramInt2);
  }
  
  public final void a(int paramInt, long paramLong)
  {
    b(paramInt, 0);
    b(paramLong);
  }
  
  public final void a(int paramInt, sc paramSc)
  {
    b(paramInt, 2);
    a(paramSc);
  }
  
  public final void a(int paramInt, String paramString)
  {
    b(paramInt, 2);
    paramString = paramString.getBytes("UTF-8");
    d(paramString.length);
    b(paramString);
  }
  
  public final void a(int paramInt, boolean paramBoolean)
  {
    int i = 0;
    b(paramInt, 0);
    paramInt = i;
    if (paramBoolean) {
      paramInt = 1;
    }
    f(paramInt);
  }
  
  public final void a(sc paramSc)
  {
    d(paramSc.c());
    paramSc.a(this);
  }
  
  public final void b(int paramInt1, int paramInt2)
  {
    d(sf.a(paramInt1, paramInt2));
  }
  
  public final void b(int paramInt, long paramLong)
  {
    b(paramInt, 0);
    b(c(paramLong));
  }
  
  public final void b(byte[] paramArrayOfByte)
  {
    int i = paramArrayOfByte.length;
    if (this.b - this.c >= i)
    {
      System.arraycopy(paramArrayOfByte, 0, this.a, this.c, i);
      this.c = (i + this.c);
      return;
    }
    throw new rw(this.c, this.b);
  }
  
  public final void d(int paramInt)
  {
    for (;;)
    {
      if ((paramInt & 0xFFFFFF80) == 0)
      {
        f(paramInt);
        return;
      }
      f(paramInt & 0x7F | 0x80);
      paramInt >>>= 7;
    }
  }
}
