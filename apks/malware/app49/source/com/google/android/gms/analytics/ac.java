package com.google.android.gms.analytics;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.RemoteException;
import com.google.android.gms.internal.hb;
import com.google.android.gms.internal.nk;
import java.util.List;
import java.util.Map;

final class ac
  implements ab
{
  private ServiceConnection a;
  private ae b;
  private af c;
  private Context d;
  private nk e;
  
  public ac(Context paramContext, ae paramAe, af paramAf)
  {
    this.d = paramContext;
    if (paramAe == null) {
      throw new IllegalArgumentException("onConnectedListener cannot be null");
    }
    this.b = paramAe;
    if (paramAf == null) {
      throw new IllegalArgumentException("onConnectionFailedListener cannot be null");
    }
    this.c = paramAf;
  }
  
  private nk d()
  {
    if (this.e != null) {}
    for (int i = 1; i == 0; i = 0) {
      throw new IllegalStateException("Not connected. Call connect() and wait for onConnected() to be called.");
    }
    return this.e;
  }
  
  public final void a()
  {
    try
    {
      d().a();
      return;
    }
    catch (RemoteException localRemoteException)
    {
      bs.a("clear hits failed: " + localRemoteException);
    }
  }
  
  public final void a(Map<String, String> paramMap, long paramLong, String paramString, List<hb> paramList)
  {
    try
    {
      d().a(paramMap, paramLong, paramString, paramList);
      return;
    }
    catch (RemoteException paramMap)
    {
      bs.a("sendHit failed: " + paramMap);
    }
  }
  
  public final void b()
  {
    Intent localIntent = new Intent("com.google.android.gms.analytics.service.START");
    localIntent.setComponent(new ComponentName("com.google.android.gms", "com.google.android.gms.analytics.service.AnalyticsService"));
    localIntent.putExtra("app_package_name", this.d.getPackageName());
    if (this.a != null) {
      bs.a("Calling connect() while still connected, missing disconnect().");
    }
    boolean bool;
    do
    {
      return;
      this.a = new ad(this);
      bool = this.d.bindService(localIntent, this.a, 129);
      bs.c("connect: bindService returned " + bool + " for " + localIntent);
    } while (bool);
    this.a = null;
    this.c.a(1);
  }
  
  public final void c()
  {
    this.e = null;
    if (this.a != null) {}
    try
    {
      this.d.unbindService(this.a);
      this.a = null;
      this.b.e();
      return;
    }
    catch (IllegalArgumentException localIllegalArgumentException)
    {
      for (;;) {}
    }
    catch (IllegalStateException localIllegalStateException)
    {
      for (;;) {}
    }
  }
}
