package com.google.android.gms.b;

import java.util.Iterator;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

public class ot<T>
  implements op<T>
{
  protected int a = 0;
  protected final BlockingQueue<ot<T>.ou> b = new LinkedBlockingQueue();
  protected T c;
  private final Object d = new Object();
  
  public ot() {}
  
  public final void a(os<T> paramOs, oq paramOq)
  {
    for (;;)
    {
      synchronized (this.d)
      {
        if (this.a == 1)
        {
          paramOs.a(this.c);
          return;
        }
        if (this.a == -1) {
          paramOq.a();
        }
      }
      if (this.a == 0) {
        this.b.add(new ou(this, paramOs, paramOq));
      }
    }
  }
  
  public final void a(T paramT)
  {
    synchronized (this.d)
    {
      if (this.a != 0) {
        throw new UnsupportedOperationException();
      }
    }
    this.c = paramT;
    this.a = 1;
    Iterator localIterator = this.b.iterator();
    while (localIterator.hasNext()) {
      ((ou)localIterator.next()).a.a(paramT);
    }
    this.b.clear();
  }
  
  public final void d()
  {
    synchronized (this.d)
    {
      if (this.a != 0) {
        throw new UnsupportedOperationException();
      }
    }
    this.a = -1;
    Iterator localIterator = this.b.iterator();
    while (localIterator.hasNext()) {
      ((ou)localIterator.next()).b.a();
    }
    this.b.clear();
  }
  
  public final int e()
  {
    return this.a;
  }
}
