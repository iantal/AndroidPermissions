package com.google.android.gms.iid;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Bundle;
import android.util.Base64;
import android.util.Log;
import java.security.KeyPair;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.PublicKey;
import java.util.HashMap;
import java.util.Map;

public final class a
{
  static Map<String, a> a = new HashMap();
  static String f;
  private static l g;
  private static j h;
  Context b;
  KeyPair c;
  String d = "";
  long e;
  
  private a(Context paramContext, String paramString)
  {
    this.b = paramContext.getApplicationContext();
    this.d = paramString;
  }
  
  static int a(Context paramContext)
  {
    try
    {
      int i = paramContext.getPackageManager().getPackageInfo(paramContext.getPackageName(), 0).versionCode;
      return i;
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      Log.w("InstanceID", "Never happens: can't find own package " + paramContext);
    }
    return 0;
  }
  
  public static a a(Context paramContext, Bundle paramBundle)
  {
    if (paramBundle == null) {
      paramBundle = "";
    }
    for (;;)
    {
      try
      {
        Context localContext = paramContext.getApplicationContext();
        if (g == null)
        {
          g = new l(localContext);
          h = new j(localContext);
        }
        f = Integer.toString(a(localContext));
        a localA = (a)a.get(paramBundle);
        paramContext = localA;
        if (localA == null)
        {
          paramContext = new a(localContext, paramBundle);
          a.put(paramBundle, paramContext);
        }
        return paramContext;
      }
      finally {}
      paramBundle = paramBundle.getString("subtype");
      while (paramBundle != null) {
        break;
      }
      paramBundle = "";
    }
  }
  
  static String a(KeyPair paramKeyPair)
  {
    paramKeyPair = paramKeyPair.getPublic().getEncoded();
    try
    {
      paramKeyPair = MessageDigest.getInstance("SHA1").digest(paramKeyPair);
      paramKeyPair[0] = ((byte)((paramKeyPair[0] & 0xF) + 112 & 0xFF));
      paramKeyPair = Base64.encodeToString(paramKeyPair, 0, 8, 11);
      return paramKeyPair;
    }
    catch (NoSuchAlgorithmException paramKeyPair)
    {
      Log.w("InstanceID", "Unexpected error, device missing required alghorithms");
    }
    return null;
  }
  
  static String a(byte[] paramArrayOfByte)
  {
    return Base64.encodeToString(paramArrayOfByte, 11);
  }
  
  public static a b(Context paramContext)
  {
    return a(paramContext, null);
  }
  
  static l b()
  {
    return g;
  }
  
  static j c()
  {
    return h;
  }
  
  public final String a(String paramString1, String paramString2, Bundle paramBundle)
  {
    if (paramString2 != null) {
      paramBundle.putString("scope", paramString2);
    }
    paramBundle.putString("sender", paramString1);
    if ("".equals(this.d)) {}
    for (paramString2 = paramString1;; paramString2 = this.d)
    {
      if (!paramBundle.containsKey("legacy.register"))
      {
        paramBundle.putString("subscription", paramString1);
        paramBundle.putString("subtype", paramString2);
        paramBundle.putString("X-subscription", paramString1);
        paramBundle.putString("X-subtype", paramString2);
      }
      paramString1 = h;
      if (this.c == null) {
        this.c = g.c(this.d);
      }
      if (this.c == null)
      {
        this.e = System.currentTimeMillis();
        this.c = g.a(this.d, this.e);
      }
      paramString1 = paramString1.a(paramBundle, this.c);
      paramString2 = h;
      return j.a(paramString1);
    }
  }
  
  final void a()
  {
    this.e = 0L;
    l localL = g;
    String str = this.d;
    localL.a(str + "|");
    this.c = null;
  }
}
