package com.google.android.gms.games.multiplayer.turnbased;

import android.os.Bundle;
import android.os.Parcel;
import com.google.android.gms.common.data.h;
import com.google.android.gms.games.Game;
import com.google.android.gms.games.multiplayer.Participant;
import com.google.android.gms.games.multiplayer.ParticipantRef;
import java.util.ArrayList;

public final class TurnBasedMatchRef
  extends h
  implements TurnBasedMatch
{
  private final Game c;
  private final int d;
  
  private TurnBasedMatch w()
  {
    return new TurnBasedMatchEntity(this);
  }
  
  public final Game b()
  {
    return this.c;
  }
  
  public final String c()
  {
    return e("external_match_id");
  }
  
  public final String d()
  {
    return e("creator_external");
  }
  
  public final int describeContents()
  {
    return 0;
  }
  
  public final long e()
  {
    return b("creation_timestamp");
  }
  
  public final boolean equals(Object paramObject)
  {
    return TurnBasedMatchEntity.a(this, paramObject);
  }
  
  public final int f()
  {
    return c("status");
  }
  
  public final int g()
  {
    return c("user_match_status");
  }
  
  public final String h()
  {
    return e("description");
  }
  
  public final int hashCode()
  {
    return TurnBasedMatchEntity.a(this);
  }
  
  public final int i()
  {
    return c("variant");
  }
  
  public final String j()
  {
    return e("last_updater_external");
  }
  
  public final ArrayList<Participant> k()
  {
    ArrayList localArrayList = new ArrayList(this.d);
    int i = 0;
    while (i < this.d)
    {
      localArrayList.add(new ParticipantRef(this.a_, this.b_ + i));
      i += 1;
    }
    return localArrayList;
  }
  
  public final long l()
  {
    return b("last_updated_timestamp");
  }
  
  public final String m()
  {
    return e("pending_participant_external");
  }
  
  public final byte[] n()
  {
    return g("data");
  }
  
  public final int o()
  {
    return c("version");
  }
  
  public final String p()
  {
    return e("rematch_id");
  }
  
  public final byte[] q()
  {
    return g("previous_match_data");
  }
  
  public final int r()
  {
    return c("match_number");
  }
  
  public final Bundle s()
  {
    if (!d("has_automatch_criteria")) {
      return null;
    }
    int i = c("automatch_min_players");
    int j = c("automatch_max_players");
    long l = b("automatch_bit_mask");
    Bundle localBundle = new Bundle();
    localBundle.putInt("min_automatch_players", i);
    localBundle.putInt("max_automatch_players", j);
    localBundle.putLong("exclusive_bit_mask", l);
    return localBundle;
  }
  
  public final int t()
  {
    if (!d("has_automatch_criteria")) {
      return 0;
    }
    return c("automatch_max_players");
  }
  
  public final String toString()
  {
    return TurnBasedMatchEntity.b(this);
  }
  
  public final boolean u()
  {
    return d("upsync_required");
  }
  
  public final String v()
  {
    return e("description_participant_id");
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    ((TurnBasedMatchEntity)w()).writeToParcel(paramParcel, paramInt);
  }
}
