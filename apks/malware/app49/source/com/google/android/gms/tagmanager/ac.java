package com.google.android.gms.tagmanager;

import android.util.Base64;
import com.google.android.gms.b.e;
import com.google.android.gms.b.f;
import com.google.android.gms.b.r;
import java.util.Map;

final class ac
  extends ai
{
  private static final String a = e.G.toString();
  private static final String b = f.p.toString();
  private static final String c = f.bN.toString();
  private static final String d = f.bj.toString();
  private static final String e = f.bV.toString();
  
  public ac()
  {
    super(a, new String[] { b });
  }
  
  public final r a(Map<String, r> paramMap)
  {
    Object localObject = (r)paramMap.get(b);
    if ((localObject == null) || (localObject == eg.f())) {
      return eg.f();
    }
    String str2 = eg.a((r)localObject);
    localObject = (r)paramMap.get(d);
    String str1;
    label84:
    int i;
    if (localObject == null)
    {
      str1 = "text";
      localObject = (r)paramMap.get(e);
      if (localObject != null) {
        break label165;
      }
      localObject = "base16";
      int j = 2;
      paramMap = (r)paramMap.get(c);
      i = j;
      if (paramMap != null)
      {
        i = j;
        if (eg.d(paramMap).booleanValue()) {
          i = 3;
        }
      }
    }
    for (;;)
    {
      try
      {
        if ("text".equals(str1))
        {
          paramMap = str2.getBytes();
          if (!"base16".equals(localObject)) {
            break label273;
          }
          paramMap = et.a(paramMap);
          return eg.a(paramMap);
          str1 = eg.a((r)localObject);
          break;
          label165:
          localObject = eg.a((r)localObject);
          break label84;
        }
        if ("base16".equals(str1))
        {
          paramMap = et.a(str2);
          continue;
        }
        if ("base64".equals(str1))
        {
          paramMap = Base64.decode(str2, i);
          continue;
        }
        if ("base64url".equals(str1))
        {
          paramMap = Base64.decode(str2, i | 0x8);
          continue;
        }
        bj.a("Encode: unknown input format: " + str1);
        paramMap = eg.f();
        return paramMap;
      }
      catch (IllegalArgumentException paramMap)
      {
        bj.a("Encode: invalid input:");
        return eg.f();
      }
      label273:
      if ("base64".equals(localObject))
      {
        paramMap = Base64.encodeToString(paramMap, i);
      }
      else
      {
        if (!"base64url".equals(localObject)) {
          break label314;
        }
        paramMap = Base64.encodeToString(paramMap, i | 0x8);
      }
    }
    label314:
    bj.a("Encode: unknown output format: " + (String)localObject);
    return eg.f();
  }
  
  public final boolean a()
  {
    return true;
  }
}
