package com.google.android.gms.internal;

import android.os.Parcel;
import com.google.android.gms.plus.a.a.b;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

public final class nw
  extends jj
  implements b
{
  public static final re a = new re();
  private static final HashMap<String, ji.a<?, ?>> i;
  final Set<Integer> b;
  final int c;
  String d;
  nu e;
  String f;
  nu g;
  String h;
  
  static
  {
    HashMap localHashMap = new HashMap();
    i = localHashMap;
    localHashMap.put("id", ji.a.d("id", 2));
    i.put("result", ji.a.a("result", 4, nu.class));
    i.put("startDate", ji.a.d("startDate", 5));
    i.put("target", ji.a.a("target", 6, nu.class));
    i.put("type", ji.a.d("type", 7));
  }
  
  public nw()
  {
    this.c = 1;
    this.b = new HashSet();
  }
  
  nw(Set<Integer> paramSet, int paramInt, String paramString1, nu paramNu1, String paramString2, nu paramNu2, String paramString3)
  {
    this.b = paramSet;
    this.c = paramInt;
    this.d = paramString1;
    this.e = paramNu1;
    this.f = paramString2;
    this.g = paramNu2;
    this.h = paramString3;
  }
  
  protected final boolean a(ji.a paramA)
  {
    return this.b.contains(Integer.valueOf(paramA.g()));
  }
  
  protected final Object b(ji.a paramA)
  {
    switch (paramA.g())
    {
    case 3: 
    default: 
      throw new IllegalStateException("Unknown safe parcelable id=" + paramA.g());
    case 2: 
      return this.d;
    case 4: 
      return this.e;
    case 5: 
      return this.f;
    case 6: 
      return this.g;
    }
    return this.h;
  }
  
  public final HashMap<String, ji.a<?, ?>> b()
  {
    return i;
  }
  
  public final int describeContents()
  {
    re localRe = a;
    return 0;
  }
  
  public final boolean equals(Object paramObject)
  {
    if (!(paramObject instanceof nw)) {
      return false;
    }
    if (this == paramObject) {
      return true;
    }
    paramObject = (nw)paramObject;
    Iterator localIterator = i.values().iterator();
    while (localIterator.hasNext())
    {
      ji.a localA = (ji.a)localIterator.next();
      if (a(localA))
      {
        if (paramObject.a(localA))
        {
          if (!b(localA).equals(paramObject.b(localA))) {
            return false;
          }
        }
        else {
          return false;
        }
      }
      else if (paramObject.a(localA)) {
        return false;
      }
    }
    return true;
  }
  
  public final int hashCode()
  {
    Iterator localIterator = i.values().iterator();
    int j = 0;
    if (localIterator.hasNext())
    {
      ji.a localA = (ji.a)localIterator.next();
      if (!a(localA)) {
        break label68;
      }
      int k = localA.g();
      j = b(localA).hashCode() + (j + k);
    }
    label68:
    for (;;)
    {
      break;
      return j;
    }
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    re localRe = a;
    re.a(this, paramParcel, paramInt);
  }
}
