package com.google.android.gms.b;

import android.app.KeyguardManager;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.IntentFilter;
import android.content.res.Resources;
import android.graphics.Rect;
import android.os.PowerManager;
import android.text.TextUtils;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.View;
import android.view.ViewTreeObserver;
import android.view.ViewTreeObserver.OnGlobalLayoutListener;
import android.view.ViewTreeObserver.OnScrollChangedListener;
import android.view.WindowManager;
import com.google.android.gms.ads.internal.client.AdSizeParcel;
import com.google.android.gms.ads.internal.util.client.VersionInfoParcel;
import com.google.android.gms.ads.internal.util.client.b;
import com.google.android.gms.ads.internal.w;
import java.lang.ref.WeakReference;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.UUID;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public final class bb
  implements ViewTreeObserver.OnGlobalLayoutListener, ViewTreeObserver.OnScrollChangedListener
{
  private final Object a = new Object();
  private final WeakReference<ml> b;
  private WeakReference<ViewTreeObserver> c;
  private final WeakReference<View> d;
  private final az e;
  private final Context f;
  private final gc g;
  private final gq h;
  private boolean i;
  private final WindowManager j;
  private final PowerManager k;
  private final KeyguardManager l;
  private bn m;
  private boolean n;
  private boolean o = false;
  private boolean p = false;
  private boolean q;
  private boolean r;
  private BroadcastReceiver s;
  private final HashSet<ay> t = new HashSet();
  private og u;
  private final ff v = new bh(this);
  private final ff w = new bi(this);
  private final ff x = new bj(this);
  
  public bb(AdSizeParcel paramAdSizeParcel, ml paramMl, VersionInfoParcel paramVersionInfoParcel, View paramView, gc paramGc)
  {
    this.g = paramGc;
    this.b = new WeakReference(paramMl);
    this.d = new WeakReference(paramView);
    this.c = new WeakReference(null);
    this.q = true;
    this.u = new og(200L);
    paramGc = UUID.randomUUID().toString();
    paramAdSizeParcel = paramAdSizeParcel.c;
    JSONObject localJSONObject = paramMl.j;
    boolean bool1 = bool2;
    if (paramMl.b != null)
    {
      if (paramMl.b.i() != null) {
        break label359;
      }
      bool1 = bool2;
    }
    for (;;)
    {
      this.e = new az(paramGc, paramVersionInfoParcel, paramAdSizeParcel, localJSONObject, bool1);
      this.h = this.g.b();
      this.j = ((WindowManager)paramView.getContext().getSystemService("window"));
      this.k = ((PowerManager)paramView.getContext().getApplicationContext().getSystemService("power"));
      this.l = ((KeyguardManager)paramView.getContext().getSystemService("keyguard"));
      this.f = paramView.getContext().getApplicationContext();
      try
      {
        paramAdSizeParcel = a(paramView);
        this.h.a(new bc(this, paramAdSizeParcel), new bd(this));
        this.h.a(new be(this), new bf(this));
        b.a("Tracking ad unit: " + this.e.d());
        return;
        label359:
        bool1 = paramMl.b.i().b();
      }
      catch (RuntimeException paramAdSizeParcel)
      {
        for (;;)
        {
          b.b("Failure while processing active view data.", paramAdSizeParcel);
        }
      }
      catch (JSONException paramAdSizeParcel)
      {
        for (;;) {}
      }
    }
  }
  
  private static int a(int paramInt, DisplayMetrics paramDisplayMetrics)
  {
    float f1 = paramDisplayMetrics.density;
    return (int)(paramInt / f1);
  }
  
  private JSONObject a(View paramView)
  {
    boolean bool1 = w.g().a(paramView);
    Object localObject2 = new int[2];
    Object localObject1 = new int[2];
    try
    {
      paramView.getLocationOnScreen((int[])localObject2);
      paramView.getLocationInWindow((int[])localObject1);
      localObject1 = paramView.getContext().getResources().getDisplayMetrics();
      Rect localRect1 = new Rect();
      localRect1.left = localObject2[0];
      localRect1.top = localObject2[1];
      localRect1.right = (localRect1.left + paramView.getWidth());
      localRect1.bottom = (localRect1.top + paramView.getHeight());
      Rect localRect2 = new Rect();
      localRect2.right = this.j.getDefaultDisplay().getWidth();
      localRect2.bottom = this.j.getDefaultDisplay().getHeight();
      Rect localRect3 = new Rect();
      boolean bool2 = paramView.getGlobalVisibleRect(localRect3, null);
      Rect localRect4 = new Rect();
      boolean bool3 = paramView.getLocalVisibleRect(localRect4);
      Rect localRect5 = new Rect();
      paramView.getHitRect(localRect5);
      localObject2 = k();
      localObject1 = ((JSONObject)localObject2).put("windowVisibility", paramView.getWindowVisibility()).put("isStopped", this.p).put("isPaused", this.o).put("isAttachedToWindow", bool1).put("viewBox", new JSONObject().put("top", a(localRect2.top, (DisplayMetrics)localObject1)).put("bottom", a(localRect2.bottom, (DisplayMetrics)localObject1)).put("left", a(localRect2.left, (DisplayMetrics)localObject1)).put("right", a(localRect2.right, (DisplayMetrics)localObject1))).put("adBox", new JSONObject().put("top", a(localRect1.top, (DisplayMetrics)localObject1)).put("bottom", a(localRect1.bottom, (DisplayMetrics)localObject1)).put("left", a(localRect1.left, (DisplayMetrics)localObject1)).put("right", a(localRect1.right, (DisplayMetrics)localObject1))).put("globalVisibleBox", new JSONObject().put("top", a(localRect3.top, (DisplayMetrics)localObject1)).put("bottom", a(localRect3.bottom, (DisplayMetrics)localObject1)).put("left", a(localRect3.left, (DisplayMetrics)localObject1)).put("right", a(localRect3.right, (DisplayMetrics)localObject1))).put("globalVisibleBoxVisible", bool2).put("localVisibleBox", new JSONObject().put("top", a(localRect4.top, (DisplayMetrics)localObject1)).put("bottom", a(localRect4.bottom, (DisplayMetrics)localObject1)).put("left", a(localRect4.left, (DisplayMetrics)localObject1)).put("right", a(localRect4.right, (DisplayMetrics)localObject1))).put("localVisibleBoxVisible", bool3).put("hitBox", new JSONObject().put("top", a(localRect5.top, (DisplayMetrics)localObject1)).put("bottom", a(localRect5.bottom, (DisplayMetrics)localObject1)).put("left", a(localRect5.left, (DisplayMetrics)localObject1)).put("right", a(localRect5.right, (DisplayMetrics)localObject1))).put("screenDensity", ((DisplayMetrics)localObject1).density);
      if ((paramView.getVisibility() == 0) && (paramView.isShown()) && (this.k.isScreenOn()) && ((!this.l.inKeyguardRestrictedInputMode()) || (w.e().a())))
      {
        bool1 = true;
        ((JSONObject)localObject1).put("isVisible", bool1);
        return localObject2;
      }
    }
    catch (Exception localException)
    {
      for (;;)
      {
        b.b("Failure getting view location.", localException);
        continue;
        bool1 = false;
      }
    }
  }
  
  private void i()
  {
    if (this.m != null) {
      this.m.a(this);
    }
  }
  
  private void j()
  {
    ViewTreeObserver localViewTreeObserver = (ViewTreeObserver)this.c.get();
    if ((localViewTreeObserver == null) || (!localViewTreeObserver.isAlive())) {
      return;
    }
    localViewTreeObserver.removeOnScrollChangedListener(this);
    localViewTreeObserver.removeGlobalOnLayoutListener(this);
  }
  
  private JSONObject k()
  {
    JSONObject localJSONObject = new JSONObject();
    localJSONObject.put("afmaVersion", this.e.b()).put("activeViewJSON", this.e.c()).put("timestamp", w.i().b()).put("adFormat", this.e.a()).put("hashCode", this.e.d()).put("isMraid", this.e.e());
    return localJSONObject;
  }
  
  protected final void a()
  {
    synchronized (this.a)
    {
      if (this.s != null) {
        return;
      }
      IntentFilter localIntentFilter = new IntentFilter();
      localIntentFilter.addAction("android.intent.action.SCREEN_ON");
      localIntentFilter.addAction("android.intent.action.SCREEN_OFF");
      this.s = new bg(this);
      this.f.registerReceiver(this.s, localIntentFilter);
      return;
    }
  }
  
  public final void a(ay paramAy)
  {
    this.t.add(paramAy);
  }
  
  public final void a(bn paramBn)
  {
    synchronized (this.a)
    {
      this.m = paramBn;
      return;
    }
  }
  
  protected final void a(ca paramCa)
  {
    paramCa.a("/updateActiveView", this.v);
    paramCa.a("/untrackActiveViewUnit", this.w);
    paramCa.a("/visibilityChanged", this.x);
  }
  
  protected final void a(JSONObject paramJSONObject)
  {
    try
    {
      JSONArray localJSONArray = new JSONArray();
      JSONObject localJSONObject = new JSONObject();
      localJSONArray.put(paramJSONObject);
      localJSONObject.put("units", localJSONArray);
      this.h.a(new bk(this, localJSONObject), new or());
      return;
    }
    catch (Throwable paramJSONObject)
    {
      b.b("Skipping active view message.", paramJSONObject);
    }
  }
  
  protected final void a(boolean paramBoolean)
  {
    Iterator localIterator = this.t.iterator();
    while (localIterator.hasNext()) {
      ((ay)localIterator.next()).a(paramBoolean);
    }
  }
  
  protected final boolean a(Map<String, String> paramMap)
  {
    if (paramMap == null) {
      return false;
    }
    paramMap = (String)paramMap.get("hashCode");
    return (!TextUtils.isEmpty(paramMap)) && (paramMap.equals(this.e.d()));
  }
  
  protected final void b()
  {
    synchronized (this.a)
    {
      j();
      synchronized (this.a)
      {
        if (this.s != null)
        {
          this.f.unregisterReceiver(this.s);
          this.s = null;
        }
        this.q = false;
        i();
        this.h.a();
        return;
      }
    }
  }
  
  protected final void b(boolean paramBoolean)
  {
    synchronized (this.a)
    {
      if ((!this.i) || (!this.q)) {
        return;
      }
      if ((paramBoolean) && (!this.u.a())) {
        return;
      }
    }
    Object localObject2 = (ml)this.b.get();
    Object localObject4 = (View)this.d.get();
    if (localObject4 != null) {
      if (localObject2 == null) {
        break label228;
      }
    }
    for (;;)
    {
      int i1;
      if (i1 != 0)
      {
        c();
        return;
        i1 = 0;
        continue;
      }
      try
      {
        a(a((View)localObject4));
        for (;;)
        {
          localObject4 = (View)this.d.get();
          if (localObject4 != null)
          {
            localObject2 = (ViewTreeObserver)this.c.get();
            localObject4 = ((View)localObject4).getViewTreeObserver();
            if (localObject4 != localObject2)
            {
              j();
              if ((!this.n) || ((localObject2 != null) && (((ViewTreeObserver)localObject2).isAlive())))
              {
                this.n = true;
                ((ViewTreeObserver)localObject4).addOnScrollChangedListener(this);
                ((ViewTreeObserver)localObject4).addOnGlobalLayoutListener(this);
              }
              this.c = new WeakReference(localObject4);
            }
          }
          i();
          return;
          b.a("Active view update failed.", (Throwable)localObject2);
        }
      }
      catch (RuntimeException localRuntimeException)
      {
        for (;;) {}
        i1 = 1;
      }
      catch (JSONException localJSONException)
      {
        label228:
        for (;;) {}
      }
    }
  }
  
  public final void c()
  {
    synchronized (this.a)
    {
      if (this.q) {
        this.r = true;
      }
    }
    try
    {
      JSONObject localJSONObject = k();
      localJSONObject.put("doneReasonCode", "u");
      a(localJSONObject);
      b.a("Untracking ad unit: " + this.e.d());
      return;
    }
    catch (JSONException localJSONException)
    {
      for (;;)
      {
        b.b("JSON failure while processing active view data.", localJSONException);
      }
      localObject2 = finally;
      throw localObject2;
    }
    catch (RuntimeException localRuntimeException)
    {
      for (;;)
      {
        b.b("Failure while processing active view data.", localRuntimeException);
      }
    }
  }
  
  protected final void d()
  {
    b(false);
  }
  
  public final boolean e()
  {
    synchronized (this.a)
    {
      boolean bool = this.q;
      return bool;
    }
  }
  
  public final void f()
  {
    synchronized (this.a)
    {
      this.p = true;
      b(false);
      return;
    }
  }
  
  public final void g()
  {
    synchronized (this.a)
    {
      this.o = true;
      b(false);
      return;
    }
  }
  
  public final void h()
  {
    synchronized (this.a)
    {
      this.o = false;
      b(false);
      return;
    }
  }
  
  public final void onGlobalLayout()
  {
    b(false);
  }
  
  public final void onScrollChanged()
  {
    b(true);
  }
}
