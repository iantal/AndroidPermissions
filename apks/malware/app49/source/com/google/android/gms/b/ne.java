package com.google.android.gms.b;

import com.google.android.gms.ads.internal.util.client.b;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.RejectedExecutionException;
import java.util.concurrent.ThreadFactory;

public final class ne
{
  private static final ExecutorService a = Executors.newFixedThreadPool(10, a("Default"));
  private static final ExecutorService b = Executors.newFixedThreadPool(5, a("Loader"));
  
  public static on<Void> a(int paramInt, Runnable paramRunnable)
  {
    if (paramInt == 1) {
      return a(b, new nf(paramRunnable));
    }
    return a(a, new ng(paramRunnable));
  }
  
  public static on<Void> a(Runnable paramRunnable)
  {
    return a(0, paramRunnable);
  }
  
  public static <T> on<T> a(Callable<T> paramCallable)
  {
    return a(a, paramCallable);
  }
  
  private static <T> on<T> a(ExecutorService paramExecutorService, Callable<T> paramCallable)
  {
    oi localOi = new oi();
    try
    {
      paramExecutorService.submit(new nh(localOi, paramCallable));
      return localOi;
    }
    catch (RejectedExecutionException paramExecutorService)
    {
      b.c("Thread execution is rejected.", paramExecutorService);
      localOi.cancel(true);
    }
    return localOi;
  }
  
  private static ThreadFactory a(String paramString)
  {
    return new ni(paramString);
  }
}
