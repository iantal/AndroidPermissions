package com.baidu.mobstat;

import android.content.Context;
import com.baidu.kirin.KirinConfig;
import org.json.JSONException;
import org.json.JSONObject;

public class h
{
  protected Context a;
  protected String b;
  protected String c;
  protected JSONObject d;
  protected JSONObject e;
  protected boolean f;
  private int g = -1;
  
  h(Context paramContext, String paramString)
  {
    this.a = paramContext;
    this.b = (KirinConfig.PREURL + paramString);
    m.a().a(new Object[] { "PostUrl: " + this.b });
    this.d = new JSONObject();
    try
    {
      this.d.put("appkey", f.b(this.a));
      this.d.put("version_code", f.d(this.a));
      this.d.put("version_name", f.c(this.a));
      this.d.put("deviceid", f.h(paramContext));
      this.d.put("channel", f.a(paramContext));
      this.d.put("sdk_version", CooperService.getMTJSDKVersion());
      this.d.put("sdk_tag", "mtj");
      b();
      return;
    }
    catch (JSONException paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
  }
  
  public JSONObject a()
  {
    return this.d;
  }
  
  public void a(String paramString, Object paramObject)
  {
    try
    {
      this.d.put(paramString, paramObject);
      return;
    }
    catch (JSONException paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  protected void b() {}
  
  public JSONObject c()
  {
    if (f.p(this.a)) {}
    for (;;)
    {
      try
      {
        m.a().a(new Object[] { this.c + " send Content is:" + this.d.toString() });
        localObject = as.a(this.d.toString());
        localObject = p.a(this.b, (String)localObject);
        try
        {
          this.g = ((n)localObject).a();
          if (!((n)localObject).b())
          {
            m.a().b(this.c + " : " + ((n)localObject).c());
            this.f = false;
            if (!this.f) {
              continue;
            }
            this.e = ((n)localObject).d();
            e();
            return this.e;
          }
          if (this.g != 0) {
            continue;
          }
          m.a().a(new Object[] { this.c + " : " + ((n)localObject).c() });
          this.f = true;
          continue;
          localException1.printStackTrace();
        }
        catch (Exception localException1) {}
      }
      catch (Exception localException2)
      {
        JSONObject localJSONObject;
        Object localObject = null;
        continue;
      }
      m.a().b("Fuck, " + this.c + " post Exception!");
      this.f = false;
      continue;
      m.a().b(this.c + "Backend return Code is not zeror, is : " + this.g);
      this.f = false;
      this.e = ((n)localObject).d();
      f();
      localJSONObject = this.e;
      return localJSONObject;
      this.f = false;
      m.a().a(new Object[] { "network has sth wrong!" });
      localObject = null;
    }
    f();
    return null;
  }
  
  public int d()
  {
    return this.g;
  }
  
  protected void e() {}
  
  protected void f() {}
}
