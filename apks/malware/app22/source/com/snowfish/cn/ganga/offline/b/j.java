package com.snowfish.cn.ganga.offline.b;

import android.os.IBinder;
import java.lang.reflect.Method;

final class j
{
  private Object a;
  
  public j(int paramInt)
  {
    Object localObject1;
    if (paramInt == 1) {
      localObject1 = "iphonesubinfo2";
    }
    try
    {
      for (;;)
      {
        Method localMethod = Class.forName("android.os.ServiceManager").getDeclaredMethod("getService", new Class[] { String.class });
        localMethod.setAccessible(true);
        localObject2 = localMethod.invoke(null, new Object[] { localObject1 });
        localObject1 = localObject2;
        if (localObject2 == null)
        {
          localObject1 = localObject2;
          if (paramInt == 1) {
            localObject1 = localMethod.invoke(null, new Object[] { "iphonesubinfo1" });
          }
        }
        if (localObject1 != null) {
          break;
        }
        return;
        localObject1 = "iphonesubinfo";
      }
      Object localObject2 = Class.forName("com.android.internal.telephony.IPhoneSubInfo$Stub").getDeclaredMethod("asInterface", new Class[] { IBinder.class });
      ((Method)localObject2).setAccessible(true);
      this.a = ((Method)localObject2).invoke(null, new Object[] { localObject1 });
      return;
    }
    catch (Exception localException) {}
  }
  
  public final Object a(String paramString, Class[] paramArrayOfClass, Object... paramVarArgs)
  {
    if (this.a == null) {
      return null;
    }
    try
    {
      Class localClass = this.a.getClass();
      Class[] arrayOfClass = paramArrayOfClass;
      if (paramArrayOfClass == null) {
        arrayOfClass = new Class[0];
      }
      paramString = localClass.getMethod(paramString, arrayOfClass).invoke(this.a, paramVarArgs);
      return paramString;
    }
    catch (Exception paramString) {}
    return null;
  }
}
