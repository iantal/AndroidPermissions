package com.snowfish.cn.ganga.offline.basic;

import java.io.OutputStream;

public abstract interface IPW
{
  public abstract byte[] byteArray();
  
  public abstract void ensureSize(int paramInt);
  
  public abstract void expand(int paramInt);
  
  public abstract int getLength();
  
  public abstract void setBigEndian(boolean paramBoolean);
  
  public abstract byte[] toByteArray();
  
  public abstract void write(IPW paramIPW);
  
  public abstract void write(byte[] paramArrayOfByte);
  
  public abstract void write(byte[] paramArrayOfByte, int paramInt1, int paramInt2);
  
  public abstract void writeBoolean(boolean paramBoolean);
  
  public abstract void writeFixedUTF16Array(String paramString, int paramInt);
  
  public abstract void writeI16(int paramInt);
  
  public abstract void writeI16At(int paramInt1, int paramInt2);
  
  public abstract void writeI32(int paramInt);
  
  public abstract void writeI32At(int paramInt1, int paramInt2);
  
  public abstract void writeI32LE(int paramInt);
  
  public abstract void writeI64(long paramLong);
  
  public abstract void writeI8(int paramInt);
  
  public abstract void writeTo(OutputStream paramOutputStream);
  
  public abstract void writeU16(int paramInt);
  
  public abstract void writeU32(int paramInt);
  
  public abstract void writeU64(long paramLong);
  
  public abstract void writeU8(int paramInt);
  
  public abstract void writeUTF16WithLength(String paramString, int paramInt);
  
  public abstract void writeUTF8WithLength(String paramString, int paramInt);
}
