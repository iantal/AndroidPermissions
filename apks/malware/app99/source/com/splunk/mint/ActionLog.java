package com.splunk.mint;

import android.content.Context;
import org.json.JSONException;
import org.json.JSONObject;

class ActionLog
  extends BaseDTO
  implements InterfaceDataType
{
  public Integer eventLevel = Integer.valueOf(2);
  public String eventName = "";
  
  public ActionLog(EnumActionType paramEnumActionType, String paramString, Integer paramInteger)
  {
    super(paramEnumActionType, null);
    this.eventName = paramString;
    this.eventLevel = paramInteger;
  }
  
  public static final ActionLog createLog(String paramString, MintLogLevel paramMintLogLevel)
  {
    return new ActionLog(EnumActionType.log, paramString, Integer.valueOf(Utils.convertLoggingLevelToInt(paramMintLogLevel)));
  }
  
  public void save(DataSaver paramDataSaver)
  {
    if (this.eventLevel != null)
    {
      if (this.eventLevel.intValue() >= Properties.RemoteSettingsProps.logLevel.intValue())
      {
        paramDataSaver.save(toJsonLine());
        return;
      }
      Logger.logInfo("Logs's level is lower than the minimum level from Remote Settings, log will not be saved");
      return;
    }
    paramDataSaver.save(toJsonLine());
  }
  
  public void send(Context paramContext, NetSender paramNetSender, boolean paramBoolean)
  {
    paramNetSender.send(toJsonLine(), paramBoolean);
  }
  
  public void send(NetSender paramNetSender, boolean paramBoolean)
  {
    paramNetSender.send(toJsonLine(), paramBoolean);
  }
  
  public String toJsonLine()
  {
    JSONObject localJSONObject = getBasicDataFixtureJson();
    try
    {
      localJSONObject.put("log_name", this.eventName);
      localJSONObject.put("level", this.eventLevel);
      return localJSONObject.toString() + Properties.getSeparator(this.type);
    }
    catch (JSONException localJSONException)
    {
      for (;;)
      {
        localJSONException.printStackTrace();
      }
    }
  }
}
