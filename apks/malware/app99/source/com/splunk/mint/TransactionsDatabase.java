package com.splunk.mint;

import java.util.HashMap;

class TransactionsDatabase
  extends HashMap<String, Container>
{
  protected static final String TransName = "TStart:name:";
  private static final long serialVersionUID = -3516111185615801729L;
  
  public TransactionsDatabase() {}
  
  public boolean addStartedTransaction(ActionTransactionStart paramActionTransactionStart)
  {
    boolean bool = false;
    if (paramActionTransactionStart == null) {}
    for (;;)
    {
      return bool;
      try
      {
        put("TStart:name:" + paramActionTransactionStart.name, new Container(paramActionTransactionStart.timestampMilis, paramActionTransactionStart.transaction_id));
        bool = true;
      }
      catch (Exception paramActionTransactionStart)
      {
        paramActionTransactionStart.printStackTrace();
      }
      finally {}
    }
  }
  
  public boolean closeStartedTransaction(String paramString)
  {
    boolean bool = false;
    if (paramString == null) {}
    for (;;)
    {
      return bool;
      try
      {
        if (!containsKey("TStart:name:" + paramString)) {
          continue;
        }
        put("TStart:name:" + paramString, new Container(Long.valueOf(-1L), null));
        bool = true;
      }
      finally {}
    }
  }
  
  public Container getStartedTransactionContainer(String paramString)
  {
    Container localContainer = null;
    if (paramString == null) {}
    for (;;)
    {
      return localContainer;
      try
      {
        if (!containsKey("TStart:name:" + paramString)) {
          continue;
        }
        localContainer = (Container)get("TStart:name:" + paramString);
      }
      finally {}
    }
  }
  
  public class Container
  {
    public Long timestamp;
    public String transid;
    
    public Container(Long paramLong, String paramString)
    {
      this.timestamp = paramLong;
      this.transid = paramString;
    }
  }
}
