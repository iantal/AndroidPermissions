package org.apache.http.client.methods;

import org.apache.http.Header;
import org.apache.http.HttpEntity;
import org.apache.http.HttpEntityEnclosingRequest;
import org.apache.http.annotation.NotThreadSafe;
import org.apache.http.client.utils.CloneUtilsHC4;

@NotThreadSafe
public abstract class HttpEntityEnclosingRequestBaseHC4
  extends HttpRequestBaseHC4
  implements HttpEntityEnclosingRequest
{
  private HttpEntity entity;
  
  public HttpEntityEnclosingRequestBaseHC4() {}
  
  public Object clone()
    throws CloneNotSupportedException
  {
    HttpEntityEnclosingRequestBaseHC4 localHttpEntityEnclosingRequestBaseHC4 = (HttpEntityEnclosingRequestBaseHC4)super.clone();
    if (this.entity != null) {
      localHttpEntityEnclosingRequestBaseHC4.entity = ((HttpEntity)CloneUtilsHC4.cloneObject(this.entity));
    }
    return localHttpEntityEnclosingRequestBaseHC4;
  }
  
  public boolean expectContinue()
  {
    Header localHeader = getFirstHeader("Expect");
    return (localHeader != null) && ("100-continue".equalsIgnoreCase(localHeader.getValue()));
  }
  
  public HttpEntity getEntity()
  {
    return this.entity;
  }
  
  public void setEntity(HttpEntity paramHttpEntity)
  {
    this.entity = paramHttpEntity;
  }
}
