package org.apache.http.impl.conn;

import android.util.Log;
import java.io.Closeable;
import java.io.IOException;
import java.net.InetSocketAddress;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicBoolean;
import org.apache.http.HttpClientConnection;
import org.apache.http.annotation.GuardedBy;
import org.apache.http.annotation.ThreadSafe;
import org.apache.http.config.ConnectionConfig;
import org.apache.http.config.Lookup;
import org.apache.http.config.Registry;
import org.apache.http.config.RegistryBuilder;
import org.apache.http.config.SocketConfig;
import org.apache.http.conn.ConnectionRequest;
import org.apache.http.conn.DnsResolver;
import org.apache.http.conn.HttpClientConnectionManager;
import org.apache.http.conn.HttpConnectionFactory;
import org.apache.http.conn.ManagedHttpClientConnection;
import org.apache.http.conn.SchemePortResolver;
import org.apache.http.conn.routing.HttpRoute;
import org.apache.http.conn.socket.ConnectionSocketFactory;
import org.apache.http.conn.socket.PlainConnectionSocketFactory;
import org.apache.http.conn.ssl.SSLConnectionSocketFactory;
import org.apache.http.protocol.HttpContext;
import org.apache.http.util.Args;
import org.apache.http.util.Asserts;

@ThreadSafe
public class BasicHttpClientConnectionManager
  implements HttpClientConnectionManager, Closeable
{
  private static final String TAG = "HttpClient";
  @GuardedBy("this")
  private ManagedHttpClientConnection conn;
  @GuardedBy("this")
  private ConnectionConfig connConfig;
  private final HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection> connFactory;
  private final HttpClientConnectionOperator connectionOperator;
  @GuardedBy("this")
  private long expiry;
  private final AtomicBoolean isShutdown;
  @GuardedBy("this")
  private boolean leased;
  @GuardedBy("this")
  private HttpRoute route;
  @GuardedBy("this")
  private SocketConfig socketConfig;
  @GuardedBy("this")
  private Object state;
  @GuardedBy("this")
  private long updated;
  
  public BasicHttpClientConnectionManager()
  {
    this(getDefaultRegistry(), null, null, null);
  }
  
  public BasicHttpClientConnectionManager(Lookup<ConnectionSocketFactory> paramLookup)
  {
    this(paramLookup, null, null, null);
  }
  
  public BasicHttpClientConnectionManager(Lookup<ConnectionSocketFactory> paramLookup, HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection> paramHttpConnectionFactory)
  {
    this(paramLookup, paramHttpConnectionFactory, null, null);
  }
  
  public BasicHttpClientConnectionManager(Lookup<ConnectionSocketFactory> paramLookup, HttpConnectionFactory<HttpRoute, ManagedHttpClientConnection> paramHttpConnectionFactory, SchemePortResolver paramSchemePortResolver, DnsResolver paramDnsResolver)
  {
    this.connectionOperator = new HttpClientConnectionOperator(paramLookup, paramSchemePortResolver, paramDnsResolver);
    if (paramHttpConnectionFactory != null) {}
    for (;;)
    {
      this.connFactory = paramHttpConnectionFactory;
      this.expiry = Long.MAX_VALUE;
      this.socketConfig = SocketConfig.DEFAULT;
      this.connConfig = ConnectionConfig.DEFAULT;
      this.isShutdown = new AtomicBoolean(false);
      return;
      paramHttpConnectionFactory = ManagedHttpClientConnectionFactory.INSTANCE;
    }
  }
  
  private void checkExpiry()
  {
    if ((this.conn != null) && (System.currentTimeMillis() >= this.expiry))
    {
      if (Log.isLoggable("HttpClient", 3)) {
        Log.d("HttpClient", "Connection expired @ " + new Date(this.expiry));
      }
      closeConnection();
    }
  }
  
  private void closeConnection()
  {
    if (this.conn != null) {
      if (Log.isLoggable("HttpClient", 3)) {
        Log.d("HttpClient", "Closing connection");
      }
    }
    try
    {
      this.conn.close();
      this.conn = null;
      return;
    }
    catch (IOException localIOException)
    {
      for (;;)
      {
        if (Log.isLoggable("HttpClient", 3)) {
          Log.d("HttpClient", "I/O exception closing connection", localIOException);
        }
      }
    }
  }
  
  private static Registry<ConnectionSocketFactory> getDefaultRegistry()
  {
    return RegistryBuilder.create().register("http", PlainConnectionSocketFactory.getSocketFactory()).register("https", SSLConnectionSocketFactory.getSocketFactory()).build();
  }
  
  private void shutdownConnection()
  {
    if (this.conn != null) {
      if (Log.isLoggable("HttpClient", 3)) {
        Log.d("HttpClient", "Shutting down connection");
      }
    }
    try
    {
      this.conn.shutdown();
      this.conn = null;
      return;
    }
    catch (IOException localIOException)
    {
      for (;;)
      {
        if (Log.isLoggable("HttpClient", 3)) {
          Log.d("HttpClient", "I/O exception shutting down connection", localIOException);
        }
      }
    }
  }
  
  public void close()
  {
    shutdown();
  }
  
  /* Error */
  public void closeExpiredConnections()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield 90	org/apache/http/impl/conn/BasicHttpClientConnectionManager:isShutdown	Ljava/util/concurrent/atomic/AtomicBoolean;
    //   6: invokevirtual 197	java/util/concurrent/atomic/AtomicBoolean:get	()Z
    //   9: istore_1
    //   10: iload_1
    //   11: ifeq +6 -> 17
    //   14: aload_0
    //   15: monitorexit
    //   16: return
    //   17: aload_0
    //   18: getfield 199	org/apache/http/impl/conn/BasicHttpClientConnectionManager:leased	Z
    //   21: ifne -7 -> 14
    //   24: aload_0
    //   25: invokespecial 201	org/apache/http/impl/conn/BasicHttpClientConnectionManager:checkExpiry	()V
    //   28: goto -14 -> 14
    //   31: astore_2
    //   32: aload_0
    //   33: monitorexit
    //   34: aload_2
    //   35: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	36	0	this	BasicHttpClientConnectionManager
    //   9	2	1	bool	boolean
    //   31	4	2	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   2	10	31	finally
    //   17	28	31	finally
  }
  
  /* Error */
  public void closeIdleConnections(long paramLong, TimeUnit paramTimeUnit)
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_3
    //   3: ldc -51
    //   5: invokestatic 211	org/apache/http/util/Args:notNull	(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
    //   8: pop
    //   9: aload_0
    //   10: getfield 90	org/apache/http/impl/conn/BasicHttpClientConnectionManager:isShutdown	Ljava/util/concurrent/atomic/AtomicBoolean;
    //   13: invokevirtual 197	java/util/concurrent/atomic/AtomicBoolean:get	()Z
    //   16: istore 6
    //   18: iload 6
    //   20: ifeq +6 -> 26
    //   23: aload_0
    //   24: monitorexit
    //   25: return
    //   26: aload_0
    //   27: getfield 199	org/apache/http/impl/conn/BasicHttpClientConnectionManager:leased	Z
    //   30: ifne -7 -> 23
    //   33: aload_3
    //   34: lload_1
    //   35: invokevirtual 217	java/util/concurrent/TimeUnit:toMillis	(J)J
    //   38: lstore 4
    //   40: lload 4
    //   42: lstore_1
    //   43: lload 4
    //   45: lconst_0
    //   46: lcmp
    //   47: ifge +5 -> 52
    //   50: lconst_0
    //   51: lstore_1
    //   52: invokestatic 106	java/lang/System:currentTimeMillis	()J
    //   55: lstore 4
    //   57: aload_0
    //   58: getfield 219	org/apache/http/impl/conn/BasicHttpClientConnectionManager:updated	J
    //   61: lload 4
    //   63: lload_1
    //   64: lsub
    //   65: lcmp
    //   66: ifgt -43 -> 23
    //   69: aload_0
    //   70: invokespecial 140	org/apache/http/impl/conn/BasicHttpClientConnectionManager:closeConnection	()V
    //   73: goto -50 -> 23
    //   76: astore_3
    //   77: aload_0
    //   78: monitorexit
    //   79: aload_3
    //   80: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	81	0	this	BasicHttpClientConnectionManager
    //   0	81	1	paramLong	long
    //   0	81	3	paramTimeUnit	TimeUnit
    //   38	24	4	l	long
    //   16	3	6	bool	boolean
    // Exception table:
    //   from	to	target	type
    //   2	18	76	finally
    //   26	40	76	finally
    //   52	73	76	finally
  }
  
  public void connect(HttpClientConnection paramHttpClientConnection, HttpRoute paramHttpRoute, int paramInt, HttpContext paramHttpContext)
    throws IOException
  {
    Args.notNull(paramHttpClientConnection, "Connection");
    Args.notNull(paramHttpRoute, "HTTP route");
    boolean bool;
    if (paramHttpClientConnection == this.conn)
    {
      bool = true;
      Asserts.check(bool, "Connection not obtained from this manager");
      if (paramHttpRoute.getProxyHost() == null) {
        break label91;
      }
      paramHttpClientConnection = paramHttpRoute.getProxyHost();
      label44:
      if (paramHttpRoute.getLocalAddress() == null) {
        break label99;
      }
    }
    label91:
    label99:
    for (paramHttpRoute = new InetSocketAddress(paramHttpRoute.getLocalAddress(), 0);; paramHttpRoute = null)
    {
      this.connectionOperator.connect(this.conn, paramHttpClientConnection, paramHttpRoute, paramInt, this.socketConfig, paramHttpContext);
      return;
      bool = false;
      break;
      paramHttpClientConnection = paramHttpRoute.getTargetHost();
      break label44;
    }
  }
  
  protected void finalize()
    throws Throwable
  {
    try
    {
      shutdown();
      return;
    }
    finally
    {
      super.finalize();
    }
  }
  
  /* Error */
  HttpClientConnection getConnection(HttpRoute paramHttpRoute, Object paramObject)
  {
    // Byte code:
    //   0: iconst_1
    //   1: istore 4
    //   3: aload_0
    //   4: monitorenter
    //   5: aload_0
    //   6: getfield 90	org/apache/http/impl/conn/BasicHttpClientConnectionManager:isShutdown	Ljava/util/concurrent/atomic/AtomicBoolean;
    //   9: invokevirtual 197	java/util/concurrent/atomic/AtomicBoolean:get	()Z
    //   12: ifne +146 -> 158
    //   15: iconst_1
    //   16: istore_3
    //   17: iload_3
    //   18: ldc_w 264
    //   21: invokestatic 233	org/apache/http/util/Asserts:check	(ZLjava/lang/String;)V
    //   24: ldc 15
    //   26: iconst_3
    //   27: invokestatic 112	android/util/Log:isLoggable	(Ljava/lang/String;I)Z
    //   30: ifeq +29 -> 59
    //   33: ldc 15
    //   35: new 114	java/lang/StringBuilder
    //   38: dup
    //   39: invokespecial 115	java/lang/StringBuilder:<init>	()V
    //   42: ldc_w 266
    //   45: invokevirtual 121	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   48: aload_1
    //   49: invokevirtual 129	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   52: invokevirtual 133	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   55: invokestatic 137	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
    //   58: pop
    //   59: aload_0
    //   60: getfield 199	org/apache/http/impl/conn/BasicHttpClientConnectionManager:leased	Z
    //   63: ifne +100 -> 163
    //   66: iload 4
    //   68: istore_3
    //   69: iload_3
    //   70: ldc_w 268
    //   73: invokestatic 233	org/apache/http/util/Asserts:check	(ZLjava/lang/String;)V
    //   76: aload_0
    //   77: getfield 270	org/apache/http/impl/conn/BasicHttpClientConnectionManager:route	Lorg/apache/http/conn/routing/HttpRoute;
    //   80: aload_1
    //   81: invokestatic 276	org/apache/http/util/LangUtils:equals	(Ljava/lang/Object;Ljava/lang/Object;)Z
    //   84: ifeq +14 -> 98
    //   87: aload_0
    //   88: getfield 278	org/apache/http/impl/conn/BasicHttpClientConnectionManager:state	Ljava/lang/Object;
    //   91: aload_2
    //   92: invokestatic 276	org/apache/http/util/LangUtils:equals	(Ljava/lang/Object;Ljava/lang/Object;)Z
    //   95: ifne +7 -> 102
    //   98: aload_0
    //   99: invokespecial 140	org/apache/http/impl/conn/BasicHttpClientConnectionManager:closeConnection	()V
    //   102: aload_0
    //   103: aload_1
    //   104: putfield 270	org/apache/http/impl/conn/BasicHttpClientConnectionManager:route	Lorg/apache/http/conn/routing/HttpRoute;
    //   107: aload_0
    //   108: aload_2
    //   109: putfield 278	org/apache/http/impl/conn/BasicHttpClientConnectionManager:state	Ljava/lang/Object;
    //   112: aload_0
    //   113: invokespecial 201	org/apache/http/impl/conn/BasicHttpClientConnectionManager:checkExpiry	()V
    //   116: aload_0
    //   117: getfield 100	org/apache/http/impl/conn/BasicHttpClientConnectionManager:conn	Lorg/apache/http/conn/ManagedHttpClientConnection;
    //   120: ifnonnull +24 -> 144
    //   123: aload_0
    //   124: aload_0
    //   125: getfield 66	org/apache/http/impl/conn/BasicHttpClientConnectionManager:connFactory	Lorg/apache/http/conn/HttpConnectionFactory;
    //   128: aload_1
    //   129: aload_0
    //   130: getfield 83	org/apache/http/impl/conn/BasicHttpClientConnectionManager:connConfig	Lorg/apache/http/config/ConnectionConfig;
    //   133: invokeinterface 283 3 0
    //   138: checkcast 146	org/apache/http/conn/ManagedHttpClientConnection
    //   141: putfield 100	org/apache/http/impl/conn/BasicHttpClientConnectionManager:conn	Lorg/apache/http/conn/ManagedHttpClientConnection;
    //   144: aload_0
    //   145: iconst_1
    //   146: putfield 199	org/apache/http/impl/conn/BasicHttpClientConnectionManager:leased	Z
    //   149: aload_0
    //   150: getfield 100	org/apache/http/impl/conn/BasicHttpClientConnectionManager:conn	Lorg/apache/http/conn/ManagedHttpClientConnection;
    //   153: astore_1
    //   154: aload_0
    //   155: monitorexit
    //   156: aload_1
    //   157: areturn
    //   158: iconst_0
    //   159: istore_3
    //   160: goto -143 -> 17
    //   163: iconst_0
    //   164: istore_3
    //   165: goto -96 -> 69
    //   168: astore_1
    //   169: aload_0
    //   170: monitorexit
    //   171: aload_1
    //   172: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	173	0	this	BasicHttpClientConnectionManager
    //   0	173	1	paramHttpRoute	HttpRoute
    //   0	173	2	paramObject	Object
    //   16	149	3	bool1	boolean
    //   1	66	4	bool2	boolean
    // Exception table:
    //   from	to	target	type
    //   5	15	168	finally
    //   17	59	168	finally
    //   59	66	168	finally
    //   69	98	168	finally
    //   98	102	168	finally
    //   102	144	168	finally
    //   144	154	168	finally
  }
  
  public ConnectionConfig getConnectionConfig()
  {
    try
    {
      ConnectionConfig localConnectionConfig = this.connConfig;
      return localConnectionConfig;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  HttpRoute getRoute()
  {
    return this.route;
  }
  
  public SocketConfig getSocketConfig()
  {
    try
    {
      SocketConfig localSocketConfig = this.socketConfig;
      return localSocketConfig;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  Object getState()
  {
    return this.state;
  }
  
  /* Error */
  public void releaseConnection(HttpClientConnection paramHttpClientConnection, Object paramObject, long paramLong, TimeUnit paramTimeUnit)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore 6
    //   3: aload_0
    //   4: monitorenter
    //   5: aload_1
    //   6: ldc -33
    //   8: invokestatic 211	org/apache/http/util/Args:notNull	(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
    //   11: pop
    //   12: aload_1
    //   13: aload_0
    //   14: getfield 100	org/apache/http/impl/conn/BasicHttpClientConnectionManager:conn	Lorg/apache/http/conn/ManagedHttpClientConnection;
    //   17: if_acmpne +6 -> 23
    //   20: iconst_1
    //   21: istore 6
    //   23: iload 6
    //   25: ldc -29
    //   27: invokestatic 233	org/apache/http/util/Asserts:check	(ZLjava/lang/String;)V
    //   30: ldc 15
    //   32: iconst_3
    //   33: invokestatic 112	android/util/Log:isLoggable	(Ljava/lang/String;I)Z
    //   36: ifeq +29 -> 65
    //   39: ldc 15
    //   41: new 114	java/lang/StringBuilder
    //   44: dup
    //   45: invokespecial 115	java/lang/StringBuilder:<init>	()V
    //   48: ldc_w 295
    //   51: invokevirtual 121	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   54: aload_1
    //   55: invokevirtual 129	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   58: invokevirtual 133	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   61: invokestatic 137	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
    //   64: pop
    //   65: aload_0
    //   66: getfield 90	org/apache/http/impl/conn/BasicHttpClientConnectionManager:isShutdown	Ljava/util/concurrent/atomic/AtomicBoolean;
    //   69: invokevirtual 197	java/util/concurrent/atomic/AtomicBoolean:get	()Z
    //   72: istore 6
    //   74: iload 6
    //   76: ifeq +6 -> 82
    //   79: aload_0
    //   80: monitorexit
    //   81: return
    //   82: aload_0
    //   83: invokestatic 106	java/lang/System:currentTimeMillis	()J
    //   86: putfield 219	org/apache/http/impl/conn/BasicHttpClientConnectionManager:updated	J
    //   89: aload_0
    //   90: getfield 100	org/apache/http/impl/conn/BasicHttpClientConnectionManager:conn	Lorg/apache/http/conn/ManagedHttpClientConnection;
    //   93: invokeinterface 298 1 0
    //   98: ifne +38 -> 136
    //   101: aload_0
    //   102: aconst_null
    //   103: putfield 100	org/apache/http/impl/conn/BasicHttpClientConnectionManager:conn	Lorg/apache/http/conn/ManagedHttpClientConnection;
    //   106: aload_0
    //   107: aconst_null
    //   108: putfield 270	org/apache/http/impl/conn/BasicHttpClientConnectionManager:route	Lorg/apache/http/conn/routing/HttpRoute;
    //   111: aload_0
    //   112: aconst_null
    //   113: putfield 100	org/apache/http/impl/conn/BasicHttpClientConnectionManager:conn	Lorg/apache/http/conn/ManagedHttpClientConnection;
    //   116: aload_0
    //   117: ldc2_w 67
    //   120: putfield 70	org/apache/http/impl/conn/BasicHttpClientConnectionManager:expiry	J
    //   123: aload_0
    //   124: iconst_0
    //   125: putfield 199	org/apache/http/impl/conn/BasicHttpClientConnectionManager:leased	Z
    //   128: goto -49 -> 79
    //   131: astore_1
    //   132: aload_0
    //   133: monitorexit
    //   134: aload_1
    //   135: athrow
    //   136: aload_0
    //   137: aload_2
    //   138: putfield 278	org/apache/http/impl/conn/BasicHttpClientConnectionManager:state	Ljava/lang/Object;
    //   141: ldc 15
    //   143: iconst_3
    //   144: invokestatic 112	android/util/Log:isLoggable	(Ljava/lang/String;I)Z
    //   147: ifeq +67 -> 214
    //   150: lload_3
    //   151: lconst_0
    //   152: lcmp
    //   153: ifle +93 -> 246
    //   156: new 114	java/lang/StringBuilder
    //   159: dup
    //   160: invokespecial 115	java/lang/StringBuilder:<init>	()V
    //   163: ldc_w 300
    //   166: invokevirtual 121	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   169: lload_3
    //   170: invokevirtual 303	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   173: ldc_w 305
    //   176: invokevirtual 121	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   179: aload 5
    //   181: invokevirtual 129	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   184: invokevirtual 133	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   187: astore_1
    //   188: ldc 15
    //   190: new 114	java/lang/StringBuilder
    //   193: dup
    //   194: invokespecial 115	java/lang/StringBuilder:<init>	()V
    //   197: ldc_w 307
    //   200: invokevirtual 121	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   203: aload_1
    //   204: invokevirtual 121	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   207: invokevirtual 133	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   210: invokestatic 137	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
    //   213: pop
    //   214: lload_3
    //   215: lconst_0
    //   216: lcmp
    //   217: ifle +36 -> 253
    //   220: aload_0
    //   221: aload_0
    //   222: getfield 219	org/apache/http/impl/conn/BasicHttpClientConnectionManager:updated	J
    //   225: aload 5
    //   227: lload_3
    //   228: invokevirtual 217	java/util/concurrent/TimeUnit:toMillis	(J)J
    //   231: ladd
    //   232: putfield 70	org/apache/http/impl/conn/BasicHttpClientConnectionManager:expiry	J
    //   235: goto -112 -> 123
    //   238: astore_1
    //   239: aload_0
    //   240: iconst_0
    //   241: putfield 199	org/apache/http/impl/conn/BasicHttpClientConnectionManager:leased	Z
    //   244: aload_1
    //   245: athrow
    //   246: ldc_w 309
    //   249: astore_1
    //   250: goto -62 -> 188
    //   253: aload_0
    //   254: ldc2_w 67
    //   257: putfield 70	org/apache/http/impl/conn/BasicHttpClientConnectionManager:expiry	J
    //   260: goto -137 -> 123
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	263	0	this	BasicHttpClientConnectionManager
    //   0	263	1	paramHttpClientConnection	HttpClientConnection
    //   0	263	2	paramObject	Object
    //   0	263	3	paramLong	long
    //   0	263	5	paramTimeUnit	TimeUnit
    //   1	74	6	bool	boolean
    // Exception table:
    //   from	to	target	type
    //   5	12	131	finally
    //   12	20	131	finally
    //   23	65	131	finally
    //   65	74	131	finally
    //   123	128	131	finally
    //   239	246	131	finally
    //   82	123	238	finally
    //   136	150	238	finally
    //   156	188	238	finally
    //   188	214	238	finally
    //   220	235	238	finally
    //   253	260	238	finally
  }
  
  public final ConnectionRequest requestConnection(final HttpRoute paramHttpRoute, final Object paramObject)
  {
    Args.notNull(paramHttpRoute, "Route");
    new ConnectionRequest()
    {
      public boolean cancel()
      {
        return false;
      }
      
      public HttpClientConnection get(long paramAnonymousLong, TimeUnit paramAnonymousTimeUnit)
      {
        return BasicHttpClientConnectionManager.this.getConnection(paramHttpRoute, paramObject);
      }
    };
  }
  
  public void routeComplete(HttpClientConnection paramHttpClientConnection, HttpRoute paramHttpRoute, HttpContext paramHttpContext)
    throws IOException
  {}
  
  public void setConnectionConfig(ConnectionConfig paramConnectionConfig)
  {
    if (paramConnectionConfig != null) {}
    for (;;)
    {
      try
      {
        this.connConfig = paramConnectionConfig;
        return;
      }
      finally {}
      paramConnectionConfig = ConnectionConfig.DEFAULT;
    }
  }
  
  public void setSocketConfig(SocketConfig paramSocketConfig)
  {
    if (paramSocketConfig != null) {}
    for (;;)
    {
      try
      {
        this.socketConfig = paramSocketConfig;
        return;
      }
      finally {}
      paramSocketConfig = SocketConfig.DEFAULT;
    }
  }
  
  public void shutdown()
  {
    try
    {
      if (this.isShutdown.compareAndSet(false, true)) {
        shutdownConnection();
      }
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public void upgrade(HttpClientConnection paramHttpClientConnection, HttpRoute paramHttpRoute, HttpContext paramHttpContext)
    throws IOException
  {
    Args.notNull(paramHttpClientConnection, "Connection");
    Args.notNull(paramHttpRoute, "HTTP route");
    if (paramHttpClientConnection == this.conn) {}
    for (boolean bool = true;; bool = false)
    {
      Asserts.check(bool, "Connection not obtained from this manager");
      this.connectionOperator.upgrade(this.conn, paramHttpRoute.getTargetHost(), paramHttpContext);
      return;
    }
  }
}
