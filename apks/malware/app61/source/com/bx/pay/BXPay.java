package com.bx.pay;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Handler;
import android.os.Message;
import com.bx.pay.backinf.PayCallback;
import com.bx.pay.backinf.PayCheckCallback;
import com.bx.pay.utils.Base64Util;
import com.bx.pay.utils.p;
import dalvik.system.DexClassLoader;
import java.io.File;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Map;

public class BXPay
{
  private static Handler L = null;
  public static String a = "201";
  public static PayCallback c;
  public static boolean d = false;
  private static Context e;
  private static String j;
  private static String k;
  private static String l;
  private static DexClassLoader o;
  private final int A = 715;
  private final int B = 716;
  private final int C = 717;
  private Map D;
  private Map E;
  private Map F;
  private Map G;
  private Map H;
  private Map I;
  private Map J;
  private Map K;
  private Handler M = null;
  public PayCheckCallback b;
  private Context f;
  private String g;
  private String h;
  private String i;
  private Class m;
  private Object n;
  private final int p = 701;
  private final int q = 702;
  private final int r = 704;
  private final int s = 705;
  private final int t = 706;
  private final int u = 707;
  private final int v = 708;
  private final int w = 711;
  private final int x = 712;
  private final int y = 713;
  private final int z = 714;
  
  public BXPay(Context paramContext)
  {
    com.bx.pay.a.c.a = paramContext;
    e = paramContext;
    if (com.bx.pay.a.d.x != null)
    {
      k = (String)com.bx.pay.a.d.x.get("appId");
      l = (String)com.bx.pay.a.d.x.get("channelCode");
    }
    SharedPreferences.Editor localEditor = paramContext.getSharedPreferences("wiipay", 0).edit();
    localEditor.putString("appId", k);
    localEditor.putString("channelCode", l);
    localEditor.commit();
    a(paramContext);
    if (!WpaySmsService.isServiceRunning(paramContext, "com.bx.pay.WpaySmsService")) {
      a.b(com.bx.pay.a.c.a);
    }
  }
  
  public BXPay(Context paramContext, String paramString1, String paramString2)
  {
    com.bx.pay.a.c.a = paramContext;
    e = paramContext;
    k = paramString1;
    l = paramString2;
    com.bx.pay.a.d.a(paramContext);
    com.bx.pay.a.d.x.put("appId", paramString1);
    com.bx.pay.a.d.x.put("channelCode", paramString2);
    SharedPreferences.Editor localEditor = paramContext.getSharedPreferences("wiipay", 0).edit();
    localEditor.putString("appId", paramString1);
    localEditor.putString("channelCode", paramString2);
    localEditor.commit();
    a(paramContext);
    if (!WpaySmsService.isServiceRunning(paramContext, "com.bx.pay.WpaySmsService")) {
      a.b(com.bx.pay.a.c.a);
    }
  }
  
  private void a(int paramInt)
  {
    Object localObject2;
    try
    {
      if (!WpaySmsService.isServiceRunning(e, "com.bx.pay.WpaySmsService")) {
        a.b(com.bx.pay.a.c.a);
      }
      Object localObject1 = o;
      if (localObject1 == null) {}
      try
      {
        int i1 = com.bx.pay.a.d.b("201");
        localObject2 = new File(com.bx.pay.a.d.a("201"), i1 + ".apk");
        localObject1 = localObject2;
        if (!((File)localObject2).exists())
        {
          localObject2 = new File(com.bx.pay.a.d.a("201"), "58.apk");
          localObject1 = localObject2;
          if (!((File)localObject2).exists())
          {
            com.bx.pay.utils.d.a(Base64Util.decoderBase64File(com.bx.pay.a.a.a()), (File)localObject2);
            localObject1 = localObject2;
          }
        }
        o = new DexClassLoader(((File)localObject1).getAbsolutePath(), ((File)localObject1).getParent(), null, ClassLoader.getSystemClassLoader());
      }
      catch (Exception localException1)
      {
        for (;;)
        {
          localException1.printStackTrace();
          localFile = new File(com.bx.pay.a.d.a("201"), "58.apk");
          if (!localFile.exists()) {
            com.bx.pay.utils.d.a(Base64Util.decoderBase64File(com.bx.pay.a.a.a()), localFile);
          }
          o = new DexClassLoader(localFile.getAbsolutePath(), localFile.getParent(), null, ClassLoader.getSystemClassLoader());
        }
      }
      if ((this.n == null) || (this.m == null))
      {
        this.m = o.loadClass("com.bx.sdk.Pay");
        this.n = this.m.newInstance();
        this.m.getMethod("init", new Class[] { Handler.class, Context.class, String.class, String.class }).invoke(this.n, new Object[] { this.M, e, k, l });
      }
      localObject1 = new Class[1];
      localObject1[0] = Map.class;
      this.m.getMethod("setDevPrivate", (Class[])localObject1).invoke(this.n, new Object[] { this.D });
      localObject2 = new Class[1];
      localObject2[0] = String.class;
      switch (paramInt)
      {
      case 701: 
      case 702: 
        File localFile;
      }
    }
    catch (Exception localException2)
    {
      try
      {
        localException2.printStackTrace();
        localObject2 = new HashMap();
        ((Map)localObject2).put("result", "error");
        ((Map)localObject2).put("showMsg", localException2.getMessage());
        ((Map)localObject2).put("actionType", paramInt);
        this.M.sendMessage(Message.obtain(this.M, paramInt, localObject2));
        com.bx.pay.a.d.a("BXPay.loadClass()", com.bx.pay.utils.c.a(localException2) + "\n\n actionType:" + paramInt);
        return;
      }
      catch (Exception localException3)
      {
        localException3.printStackTrace();
        localObject2 = new HashMap();
        ((Map)localObject2).put("result", "error");
        ((Map)localObject2).put("showMsg", localException3.getMessage());
        ((Map)localObject2).put("actionType", paramInt);
        this.M.sendMessage(Message.obtain(this.M, paramInt, localObject2));
        localException3.printStackTrace();
        return;
      }
      this.m.getMethod("check", (Class[])localObject2).invoke(this.n, new Object[] { j });
      return;
    }
    tmp708_705[0] = j;
    this.m.getMethod("payItem", (Class[])localObject2).invoke(this.n, tmp708_705);
    return;
    this.m.getMethod("pay", localException3).invoke(this.n, new Object[] { this.E });
    return;
    this.m.getMethod("payByActivity", new Class[] { Context.class, Map.class }).invoke(this.n, new Object[] { this.f, this.K });
    return;
    this.m.getMethod("upPayResult", new Class[] { String.class, String.class }).invoke(this.n, new Object[] { this.g, this.h });
    return;
    this.m.getMethod("regUser", localException3).invoke(this.n, new Object[] { this.F });
    return;
    this.m.getMethod("updateUser", localException3).invoke(this.n, new Object[] { this.G });
    return;
    this.m.getMethod("loginUser", localException3).invoke(this.n, new Object[] { this.G });
    return;
    this.m.getMethod("userBalance", localException3).invoke(this.n, new Object[] { this.H });
    return;
    this.m.getMethod("userBuyHistory", localException3).invoke(this.n, new Object[] { this.I });
    return;
    this.m.getMethod("recharge", localException3).invoke(this.n, new Object[] { this.E });
    return;
    this.m.getMethod("thirdPayLog", localException3).invoke(this.n, new Object[] { this.J });
    return;
    this.m.getMethod("setSmsVerifyCode", (Class[])localObject2).invoke(this.n, new Object[] { this.i });
    return;
  }
  
  private void a(Context paramContext)
  {
    if (this.M == null) {
      this.M = new h(this, paramContext.getMainLooper(), paramContext);
    }
    if (L == null) {
      L = new i(this, paramContext.getMainLooper());
    }
  }
  
  public static void init(Context paramContext)
  {
    a.a(paramContext);
  }
  
  public final void a(String paramString)
  {
    this.i = paramString;
    a(717);
  }
  
  public final void a(Map paramMap, Context paramContext, PayCallback paramPayCallback)
  {
    this.K = paramMap;
    this.f = paramContext;
    c = paramPayCallback;
    a(704);
  }
  
  public void check(String paramString, PayCheckCallback paramPayCheckCallback)
  {
    j = paramString;
    this.b = paramPayCheckCallback;
    a(701);
  }
  
  public void pay(String paramString, PayCallback paramPayCallback)
  {
    d = true;
    com.bx.pay.a.c.b = this.D;
    if (p.b(e))
    {
      if (paramPayCallback != null)
      {
        HashMap localHashMap = new HashMap();
        localHashMap.put("price", "");
        localHashMap.put("logCode", "");
        localHashMap.put("payType", "");
        localHashMap.put("result", "error");
        localHashMap.put("payCode", paramString);
        localHashMap.put("spResult", "");
        localHashMap.put("showMsg", "尊敬的用户，您的网络异常，请打开网络重新尝试！");
        paramPayCallback.pay(localHashMap);
      }
      return;
    }
    j = paramString;
    c = paramPayCallback;
    this.E = new HashMap();
    this.E.put("payCode", paramString);
    this.E.put("firstProgress", com.bx.pay.a.d.c);
    this.E.put("showPrompt", com.bx.pay.a.d.d);
    com.bx.pay.utils.o.e = paramString;
    com.bx.pay.utils.o.d = paramPayCallback;
    a(703);
  }
  
  public void setDevPrivate(Map paramMap)
  {
    this.D = paramMap;
  }
}
