.class public final Lcom/bx/pay/netx/core/b/b;
.super Lcom/bx/pay/netx/core/ab;


# static fields
.field private static final d:Ljava/lang/Object;


# instance fields
.field private a:Landroid/graphics/Bitmap$Config;

.field private b:I

.field private c:I


# direct methods
.method static constructor <clinit>()V
    .locals 1

    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    sput-object v0, Lcom/bx/pay/netx/core/b/b;->d:Ljava/lang/Object;

    return-void
.end method

.method private static a(IIII)I
    .locals 6

    if-nez p0, :cond_1

    if-nez p1, :cond_1

    move p0, p2

    :cond_0
    :goto_0
    return p0

    :cond_1
    if-nez p0, :cond_2

    int-to-double v0, p1

    int-to-double v2, p3

    div-double/2addr v0, v2

    int-to-double v2, p2

    mul-double/2addr v0, v2

    double-to-int p0, v0

    goto :goto_0

    :cond_2
    if-eqz p1, :cond_0

    int-to-double v0, p3

    int-to-double v2, p2

    div-double/2addr v0, v2

    int-to-double v2, p0

    mul-double/2addr v2, v0

    int-to-double v4, p1

    cmpl-double v2, v2, v4

    if-lez v2, :cond_0

    int-to-double v2, p1

    div-double v0, v2, v0

    double-to-int p0, v0

    goto :goto_0
.end method

.method private static b(IIII)I
    .locals 7

    const/high16 v6, 0x40000000    # 2.0f

    int-to-double v0, p0

    int-to-double v2, p2

    div-double/2addr v0, v2

    int-to-double v2, p1

    int-to-double v4, p3

    div-double/2addr v2, v4

    invoke-static {v0, v1, v2, v3}, Ljava/lang/Math;->min(DD)D

    move-result-wide v1

    const/high16 v0, 0x3f800000    # 1.0f

    :goto_0
    mul-float v3, v0, v6

    float-to-double v3, v3

    cmpg-double v3, v3, v1

    if-lez v3, :cond_0

    float-to-int v0, v0

    return v0

    :cond_0
    mul-float/2addr v0, v6

    goto :goto_0
.end method


# virtual methods
.method protected final a(Lcom/bx/pay/netx/core/u;)Lcom/bx/pay/netx/core/af;
    .locals 8

    sget-object v2, Lcom/bx/pay/netx/core/b/b;->d:Ljava/lang/Object;

    monitor-enter v2

    :try_start_0
    iget-object v0, p1, Lcom/bx/pay/netx/core/u;->b:[B

    new-instance v1, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v1}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    iget v3, p0, Lcom/bx/pay/netx/core/b/b;->b:I

    if-nez v3, :cond_0

    iget v3, p0, Lcom/bx/pay/netx/core/b/b;->c:I

    if-nez v3, :cond_0

    iget-object v3, p0, Lcom/bx/pay/netx/core/b/b;->a:Landroid/graphics/Bitmap$Config;

    iput-object v3, v1, Landroid/graphics/BitmapFactory$Options;->inPreferredConfig:Landroid/graphics/Bitmap$Config;

    const/4 v3, 0x0

    array-length v4, v0

    invoke-static {v0, v3, v4, v1}, Landroid/graphics/BitmapFactory;->decodeByteArray([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v0

    :goto_0
    if-nez v0, :cond_3

    new-instance v0, Lcom/bx/pay/netx/core/aa;

    invoke-direct {v0, p1}, Lcom/bx/pay/netx/core/aa;-><init>(Lcom/bx/pay/netx/core/u;)V

    invoke-static {v0}, Lcom/bx/pay/netx/core/af;->a(Lcom/bx/pay/netx/core/v;)Lcom/bx/pay/netx/core/af;
    :try_end_0
    .catch Ljava/lang/OutOfMemoryError; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    :goto_1
    :try_start_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :goto_2
    return-object v0

    :cond_0
    const/4 v3, 0x1

    :try_start_2
    iput-boolean v3, v1, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    const/4 v3, 0x0

    array-length v4, v0

    invoke-static {v0, v3, v4, v1}, Landroid/graphics/BitmapFactory;->decodeByteArray([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    iget v3, v1, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    iget v4, v1, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    iget v5, p0, Lcom/bx/pay/netx/core/b/b;->b:I

    iget v6, p0, Lcom/bx/pay/netx/core/b/b;->c:I

    invoke-static {v5, v6, v3, v4}, Lcom/bx/pay/netx/core/b/b;->a(IIII)I

    move-result v5

    iget v6, p0, Lcom/bx/pay/netx/core/b/b;->c:I

    iget v7, p0, Lcom/bx/pay/netx/core/b/b;->b:I

    invoke-static {v6, v7, v4, v3}, Lcom/bx/pay/netx/core/b/b;->a(IIII)I

    move-result v6

    const/4 v7, 0x0

    iput-boolean v7, v1, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    invoke-static {v3, v4, v5, v6}, Lcom/bx/pay/netx/core/b/b;->b(IIII)I

    move-result v3

    iput v3, v1, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    const/4 v3, 0x0

    array-length v4, v0

    invoke-static {v0, v3, v4, v1}, Landroid/graphics/BitmapFactory;->decodeByteArray([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v1

    if-eqz v1, :cond_2

    invoke-virtual {v1}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v0

    if-gt v0, v5, :cond_1

    invoke-virtual {v1}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v0

    if-le v0, v6, :cond_2

    :cond_1
    const/4 v0, 0x1

    invoke-static {v1, v5, v6, v0}, Landroid/graphics/Bitmap;->createScaledBitmap(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;

    move-result-object v0

    invoke-virtual {v1}, Landroid/graphics/Bitmap;->recycle()V
    :try_end_2
    .catch Ljava/lang/OutOfMemoryError; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0

    :catch_0
    move-exception v0

    const/4 v1, 0x2

    :try_start_3
    new-array v1, v1, [Ljava/lang/Object;

    const/4 v3, 0x0

    iget-object v4, p1, Lcom/bx/pay/netx/core/u;->b:[B

    array-length v4, v4

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v1, v3

    const/4 v3, 0x1

    invoke-virtual {p0}, Lcom/bx/pay/netx/core/b/b;->d()Ljava/lang/String;

    move-result-object v4

    aput-object v4, v1, v3

    const-string v3, "Caught OOM for %d byte image, url=%s"

    invoke-static {v3, v1}, Lcom/bx/pay/netx/core/w;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    new-instance v1, Lcom/bx/pay/netx/core/aa;

    invoke-direct {v1, v0}, Lcom/bx/pay/netx/core/aa;-><init>(Ljava/lang/Throwable;)V

    invoke-static {v1}, Lcom/bx/pay/netx/core/af;->a(Lcom/bx/pay/netx/core/v;)Lcom/bx/pay/netx/core/af;

    move-result-object v0

    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_2

    :catchall_0
    move-exception v0

    monitor-exit v2

    throw v0

    :cond_2
    move-object v0, v1

    goto :goto_0

    :cond_3
    :try_start_4
    invoke-static {v0, p1}, Lcom/bx/pay/netx/core/af;->a(Ljava/lang/Object;Lcom/bx/pay/netx/core/u;)Lcom/bx/pay/netx/core/af;
    :try_end_4
    .catch Ljava/lang/OutOfMemoryError; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    move-result-object v0

    goto :goto_1
.end method

.method public final o()Lcom/bx/pay/netx/core/ad;
    .locals 1

    sget-object v0, Lcom/bx/pay/netx/core/ad;->a:Lcom/bx/pay/netx/core/ad;

    return-object v0
.end method
