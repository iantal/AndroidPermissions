package com.snowfish.cn.ganga.offline.sf;

import android.content.Context;
import com.snowfish.a.a.p.APaymentResult;
import com.snowfish.a.a.p.IPaymentResultListener;
import com.snowfish.android.ahelper.APayment;
import com.snowfish.android.ahelper.APaymentExtended;
import com.snowfish.android.ahelper.APaymentUnity;
import com.snowfish.cn.ganga.offline.b.h;
import com.snowfish.cn.ganga.offline.basic.SFPayAdapter;
import com.snowfish.cn.ganga.offline.basic.SFUtilsInterface;
import com.snowfish.cn.ganga.offline.helper.SFIPayResultListener;
import java.util.HashMap;
import java.util.Map;

public final class d
  implements IPaymentResultListener, SFPayAdapter
{
  private SFIPayResultListener a;
  
  public d() {}
  
  public final byte[] call(Context paramContext, byte[] paramArrayOfByte)
  {
    APaymentExtended.call(h.a(), paramArrayOfByte);
    return null;
  }
  
  public final boolean isPaid(Context paramContext, String paramString)
  {
    return APayment.isPaid(paramContext, paramString);
  }
  
  public final void onPaymentCompleted(APaymentResult paramAPaymentResult)
  {
    if (this.a == null) {
      return;
    }
    SFUtilsInterface.sp(false);
    switch (a()[paramAPaymentResult.ordinal()])
    {
    default: 
      return;
    case 1: 
      this.a.onSuccess("");
      return;
    case 2: 
      this.a.onCanceled("");
      return;
    }
    this.a.onFailed("");
  }
  
  public final void pay(Context paramContext, String paramString, SFIPayResultListener paramSFIPayResultListener)
  {
    try
    {
      this.a = paramSFIPayResultListener;
      APayment.pay(paramContext, paramString, this, null, null);
      return;
    }
    catch (Throwable paramContext)
    {
      SFUtilsInterface.sp(false);
    }
  }
  
  public final boolean recharge(Context paramContext, String paramString1, int paramInt, String paramString2, String paramString3, SFIPayResultListener paramSFIPayResultListener)
  {
    try
    {
      this.a = paramSFIPayResultListener;
      paramString1 = new HashMap();
      paramString1.put("@CHARGE", Integer.valueOf(paramInt));
      paramString1.put("@DESC", paramString2);
      paramString1.put("@APPUSER", paramString3);
      APayment.pay(paramContext, "0", this, null, paramString1);
      return true;
    }
    catch (Throwable paramContext) {}
    return false;
  }
  
  public final void setPaid(Context paramContext, String paramString)
  {
    if (!h.e())
    {
      APayment.setPaid(paramContext, paramString, true);
      return;
    }
    APaymentUnity.setPaid(paramContext, paramString, true);
  }
  
  public final void showUI(Context paramContext) {}
}
