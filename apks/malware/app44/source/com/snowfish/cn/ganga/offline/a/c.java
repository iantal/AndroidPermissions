package com.snowfish.cn.ganga.offline.a;

import android.app.Activity;
import android.content.Context;
import com.snowfish.cn.ganga.offline.basic.SFBasicAdapter;
import com.snowfish.cn.ganga.offline.basic.SFPayAdapter;
import com.snowfish.cn.ganga.offline.basic.SFUtilsInterface;
import com.snowfish.cn.ganga.offline.helper.SFGameExitListener;
import com.snowfish.cn.ganga.offline.helper.SFIPayResultListener;
import com.snowfish.cn.ganga.offline.sf.SFChannelAdapterAHelper;
import com.snowfish.cn.ganga.offline.sf.b;
import java.lang.reflect.Method;

public class c
{
  public long a;
  public int b;
  
  public c() {}
  
  public static long a(String paramString)
  {
    if (paramString == null) {
      return 0L;
    }
    paramString = paramString.replace("{", "").replace("}", "").replace("-", "");
    if (paramString.length() < 16) {
      return Long.parseLong(paramString, 16);
    }
    return Long.parseLong(paramString.substring(0, 8), 16) << 32 | Long.parseLong(paramString.substring(8, 16), 16);
  }
  
  public static String a(Context paramContext)
  {
    try
    {
      paramContext = (String)paramContext.getClassLoader().loadClass("com.snowfish.cn.ganga.offline.builder.Builder").getMethod("getSafeName", new Class[0]).invoke(null, new Object[0]);
      return paramContext;
    }
    catch (Throwable paramContext) {}
    return null;
  }
  
  public static void a(Activity paramActivity)
  {
    paramActivity.runOnUiThread(new g(paramActivity));
  }
  
  public static void a(Activity paramActivity, SFGameExitListener paramSFGameExitListener)
  {
    paramActivity.runOnUiThread(new h(paramActivity, paramSFGameExitListener));
  }
  
  public static void a(Activity paramActivity, String paramString1, int paramInt, String paramString2, String paramString3, SFIPayResultListener paramSFIPayResultListener)
  {
    paramActivity.runOnUiThread(new f(paramActivity, paramString1, paramInt, paramString2, paramString3, paramSFIPayResultListener));
  }
  
  public static void a(Activity paramActivity, String paramString, SFIPayResultListener paramSFIPayResultListener)
  {
    if (SFUtilsInterface.ip()) {
      return;
    }
    SFUtilsInterface.sp(true);
    paramActivity.runOnUiThread(new d(paramActivity, paramString, paramSFIPayResultListener));
  }
  
  public static void a(Activity paramActivity, boolean paramBoolean)
  {
    paramActivity.runOnUiThread(new j(paramBoolean, paramActivity));
  }
  
  public static boolean a(Activity paramActivity, String paramString)
  {
    return a.b().createPayAdapter(paramActivity, "SFCommonInterfaceAdapter").isPaid(paramActivity, paramString);
  }
  
  static SFBasicAdapter b(Activity paramActivity, boolean paramBoolean)
  {
    if (paramBoolean)
    {
      b.a();
      return b.b().createBasicAdapter(paramActivity, "SFCommonInterfaceAdapter");
    }
    return a.b().createBasicAdapter(paramActivity, "SFCommonInterfaceAdapter");
  }
  
  public static void b(Activity paramActivity)
  {
    paramActivity.runOnUiThread(new k(paramActivity));
  }
  
  public static void b(Activity paramActivity, String paramString)
  {
    paramActivity.runOnUiThread(new e(paramActivity, paramString));
  }
  
  public static void c(Activity paramActivity)
  {
    paramActivity.runOnUiThread(new l(paramActivity));
  }
  
  public static boolean d(Activity paramActivity)
  {
    SFBasicAdapter localSFBasicAdapter = b(paramActivity, false);
    if (localSFBasicAdapter != null) {
      return localSFBasicAdapter.isMusicEnabled(paramActivity);
    }
    return true;
  }
  
  public static void e(Activity paramActivity)
  {
    paramActivity.runOnUiThread(new m(paramActivity));
  }
}
