package cn.yyf.utils;

import android.text.TextUtils;
import android.util.Log;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class a
{
  private static final String a = a.class.getName();
  
  public a() {}
  
  private static String a(String paramString)
  {
    Object localObject = null;
    try
    {
      BufferedReader localBufferedReader = new BufferedReader(new InputStreamReader(Runtime.getRuntime().exec("getprop " + paramString).getInputStream()), 1024);
      localObject = localBufferedReader;
      String str;
      return null;
    }
    catch (IOException localIOException2)
    {
      for (;;)
      {
        try
        {
          str = localBufferedReader.readLine();
          localObject = localBufferedReader;
          localBufferedReader.close();
        }
        catch (IOException localIOException3) {}finally
        {
          continue;
        }
        try
        {
          localBufferedReader.close();
          return str;
        }
        catch (IOException paramString)
        {
          Log.e(a, "Exception while closing InputStream", paramString);
          return localIOException2;
        }
      }
      localIOException2 = localIOException2;
      localBufferedReader = null;
      localObject = localBufferedReader;
      Log.e(a, "Unable to read sysprop " + paramString, localIOException2);
      if (localBufferedReader != null) {
        try
        {
          localBufferedReader.close();
          return null;
        }
        catch (IOException paramString)
        {
          Log.e(a, "Exception while closing InputStream", paramString);
          return null;
        }
      }
    }
    finally
    {
      paramString = finally;
      if (localObject != null) {}
      try
      {
        localObject.close();
        throw paramString;
      }
      catch (IOException localIOException1)
      {
        for (;;)
        {
          Log.e(a, "Exception while closing InputStream", localIOException1);
        }
      }
    }
  }
  
  public static boolean a()
  {
    if (TextUtils.isEmpty(a("ro.miui.ui.version.name"))) {}
    for (boolean bool = false;; bool = true)
    {
      Tool.a(a, "isMIUI:" + bool);
      return bool;
    }
  }
}
