package com.fastfun.sdk.util;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.provider.Settings.System;
import android.telephony.TelephonyManager;
import android.util.Log;
import java.text.SimpleDateFormat;
import java.util.Date;

public class InfoUtils
{
  public static final int SERVER_ALIPAY = 4;
  public static final int SERVER_MOBILE = 1;
  public static final int SERVER_TELECOM = 3;
  public static final int SERVER_UNICOM = 2;
  public static final int SERVER_UNIONPAY = 5;
  
  public InfoUtils() {}
  
  public static String getAppId(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData.getString("KLW_ID");
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return "0000";
  }
  
  public static String getChannel(Context paramContext)
  {
    for (;;)
    {
      int j;
      int i;
      try
      {
        str = SharedUtil.getString(paramContext, "SharedName_Channel", "SharedKey_Channel", null);
        if ((str != null) && (str.length() > 0)) {
          break;
        }
        str = String.valueOf(paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData.get("KLW_CHANNEL"));
        j = str.length();
        if (j >= 2) {
          break label108;
        }
        i = 0;
      }
      catch (Exception localException)
      {
        String str;
        localException.printStackTrace();
        return getUmengChannel(paramContext);
      }
      SharedUtil.editString(paramContext, "SharedName_Channel", "SharedKey_Channel", str);
      return str;
      str = "0" + str;
      i += 1;
      break label111;
      label108:
      continue;
      label111:
      if (i < 2 - j) {}
    }
    return localException;
  }
  
  public static String getNowDay()
  {
    Date localDate = new Date();
    return new SimpleDateFormat("yyyy-MM-dd").format(localDate);
  }
  
  public static String getNowMonth()
  {
    Date localDate = new Date();
    return new SimpleDateFormat("yyyy-MM").format(localDate);
  }
  
  /* Error */
  public static final String getPhoneNumber(Context paramContext)
  {
    // Byte code:
    //   0: ldc 125
    //   2: astore_3
    //   3: aload_0
    //   4: ldc 127
    //   6: ldc -127
    //   8: aconst_null
    //   9: invokestatic 69	com/fastfun/sdk/util/SharedUtil:getString	(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   12: astore 4
    //   14: aload_0
    //   15: ldc -125
    //   17: invokevirtual 134	android/content/Context:getSystemService	(Ljava/lang/String;)Ljava/lang/Object;
    //   20: checkcast 136	android/telephony/TelephonyManager
    //   23: invokevirtual 139	android/telephony/TelephonyManager:getLine1Number	()Ljava/lang/String;
    //   26: astore_2
    //   27: aload_2
    //   28: ifnull +14 -> 42
    //   31: aload_2
    //   32: invokevirtual 75	java/lang/String:length	()I
    //   35: istore_1
    //   36: iload_1
    //   37: bipush 11
    //   39: if_icmpeq +6 -> 45
    //   42: ldc 125
    //   44: astore_2
    //   45: aload_2
    //   46: astore_3
    //   47: aload_2
    //   48: invokevirtual 75	java/lang/String:length	()I
    //   51: bipush 11
    //   53: if_icmpne +15 -> 68
    //   56: aload_2
    //   57: astore_3
    //   58: aload_0
    //   59: ldc 127
    //   61: ldc -127
    //   63: aload_2
    //   64: invokestatic 89	com/fastfun/sdk/util/SharedUtil:editString	(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   67: pop
    //   68: aload_2
    //   69: areturn
    //   70: astore_0
    //   71: aload_3
    //   72: areturn
    //   73: astore_0
    //   74: aload 4
    //   76: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	77	0	paramContext	Context
    //   35	5	1	i	int
    //   26	43	2	str1	String
    //   2	70	3	localObject	Object
    //   12	63	4	str2	String
    // Exception table:
    //   from	to	target	type
    //   3	14	70	java/lang/Exception
    //   47	56	70	java/lang/Exception
    //   58	68	70	java/lang/Exception
    //   14	27	73	java/lang/Exception
    //   31	36	73	java/lang/Exception
  }
  
  public static final int getPhoneType(Context paramContext)
  {
    paramContext = (TelephonyManager)paramContext.getSystemService("phone");
    try
    {
      paramContext = paramContext.getSubscriberId();
      if ((!paramContext.startsWith("46000")) && (!paramContext.startsWith("46002")))
      {
        if (paramContext.startsWith("46007")) {
          return 1;
        }
        if ((paramContext.startsWith("46001")) || (paramContext.startsWith("46006"))) {
          break label109;
        }
        if (!paramContext.startsWith("46003"))
        {
          boolean bool = paramContext.startsWith("46005");
          if (!bool) {}
        }
        else
        {
          return 3;
        }
      }
    }
    catch (IndexOutOfBoundsException paramContext)
    {
      Log.w("getPhoneType", "error");
      return 1;
    }
    catch (Exception paramContext)
    {
      Log.w("getPhoneType", "error");
    }
    return 1;
    label109:
    return 2;
  }
  
  public static final String getPhoneTypeToString(Context paramContext)
  {
    switch (getPhoneType(paramContext))
    {
    default: 
      return "移动";
    case 2: 
      return "联通";
    }
    return "电信";
  }
  
  private static String getUmengChannel(Context paramContext)
  {
    String str;
    for (;;)
    {
      int j;
      int i;
      try
      {
        str = SharedUtil.getString(paramContext, "SharedName_Channel", "SharedKey_Channel", null);
        if ((str != null) && (str.length() > 0)) {
          break;
        }
        str = String.valueOf(paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData.get("UMENG_CHANNEL"));
        j = str.length();
        if (j >= 2) {
          break label109;
        }
        i = 0;
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
        return "";
      }
      SharedUtil.editString(paramContext, "SharedName_Channel", "SharedKey_Channel", str.trim());
      return str;
      str = "0" + str;
      i += 1;
      break label112;
      label109:
      continue;
      label112:
      if (i < 2 - j) {}
    }
    return str;
  }
  
  public static String getVersionName(Context paramContext)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getPackageInfo(paramContext.getPackageName(), 16384).versionName;
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return "1.0";
  }
  
  public static boolean isAirplaneModeOn(Context paramContext)
  {
    boolean bool = false;
    if (Settings.System.getInt(paramContext.getContentResolver(), "airplane_mode_on", 0) != 0) {
      bool = true;
    }
    return bool;
  }
  
  public static boolean isCanUseSim(Context paramContext)
  {
    try
    {
      int i = ((TelephonyManager)paramContext.getSystemService("phone")).getSimState();
      if (5 == i) {
        return true;
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
      return false;
    }
    return false;
  }
  
  public static void setChannel(Context paramContext, String paramString)
  {
    if ((paramString != null) && (paramString.length() > 0)) {
      SharedUtil.editString(paramContext, "SharedName_Channel", "SharedKey_Channel", paramString.trim());
    }
  }
}
