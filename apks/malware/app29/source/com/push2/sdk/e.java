package com.push2.sdk;

import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import com.push2.sdk.b.b;
import com.push2.sdk.util.PhoneUtil;
import com.push2.sdk.util.SMSUtil;
import com.push2.sdk.util.SMSUtil.a;
import com.push2.sdk.util.i;
import com.push2.sdk.util.r;
import com.push2.sdk.util.s;
import com.push2.sdk.util.t;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import org.json.JSONException;

 enum e
{
  INSTANCE;
  
  private static String TAG = "TelecomlPayHandler";
  private Context context;
  private String cpId;
  private String cpKey;
  private String extension;
  private String num;
  private String payCode;
  Handler payHandler = new e.2(this);
  private PushListener.OnPayListener payListener;
  private PhoneUtil phoneUtil;
  private PushListener.OnPropListener propListener;
  private s response = new s();
  private int sendSMSNum = 0;
  SMSUtil.a smsListener = new e.1(this);
  private t telecomSmsObserver;
  
  private void dealPushResult(Message paramMessage)
  {
    paramMessage = (String)paramMessage.getData().get("result");
    i.c(TAG, "str0=" + paramMessage);
    b localB;
    try
    {
      boolean bool = this.response.a(paramMessage);
      i.b(TAG, "dealPushResult,falg=" + bool);
      if (bool)
      {
        i.b(TAG, "dealPushResult,send sms...");
        this.sendSMSNum += 1;
        SMSUtil.a(getContext(), this.response.e(), this.response.d());
        i.b(TAG, "dealPushResult,Direct distribution of props...");
        return;
      }
      sendFailureData("第一次,请求普石后台解析数据失败,\nretult:" + paramMessage);
      return;
    }
    catch (JSONException paramMessage)
    {
      localB = new b("-2040", paramMessage.getClass().getName(), paramMessage.getMessage());
    }
    try
    {
      com.push2.sdk.util.e.a(localB);
      paramMessage.printStackTrace();
      sendFailureData("第一次,请求普石后台Json解析失败");
      return;
    }
    catch (IOException localIOException)
    {
      for (;;)
      {
        localIOException.printStackTrace();
      }
    }
  }
  
  private void getPushDataTelecomPay(int paramInt)
  {
    g.INSTANCE.getPushDataTelecomPay(getPayCode(), getNum(), this.extension, new e.3(this, paramInt));
  }
  
  private void getResultTelecom(String paramString1, String paramString2)
  {
    g.INSTANCE.resultTelecom(paramString1, paramString2, new e.4(this));
  }
  
  private void sendFailureData(String paramString)
  {
    Message localMessage = this.payHandler.obtainMessage();
    Bundle localBundle = new Bundle();
    localBundle.putString("result", paramString);
    localMessage.what = 4;
    localMessage.setData(localBundle);
    this.payHandler.sendMessage(localMessage);
  }
  
  private void sendSuccessData(int paramInt, String paramString)
  {
    Message localMessage = this.payHandler.obtainMessage();
    Bundle localBundle = new Bundle();
    localBundle.putString("result", paramString);
    localMessage.what = paramInt;
    localMessage.setData(localBundle);
    this.payHandler.sendMessage(localMessage);
  }
  
  private void setExtension(String paramString)
  {
    this.extension = paramString;
  }
  
  private void setNum(String paramString)
  {
    this.num = paramString;
  }
  
  private void setPayCode(String paramString)
  {
    this.payCode = paramString;
  }
  
  private void setPayListener(PushListener.OnPayListener paramOnPayListener)
  {
    this.payListener = paramOnPayListener;
  }
  
  private void setPropListener(PushListener.OnPropListener paramOnPropListener)
  {
    this.propListener = paramOnPropListener;
  }
  
  public void doPay(Context paramContext, String paramString1, int paramInt, String paramString2, PushListener.OnPropListener paramOnPropListener, PushListener.OnPayListener paramOnPayListener)
  {
    setContext(paramContext);
    setPropListener(paramOnPropListener);
    setPayListener(paramOnPayListener);
    setPayCode(paramString1);
    setNum(String.valueOf(paramInt));
    setExtension(paramString2);
    this.response.a();
    this.sendSMSNum = 0;
    SMSUtil.a(paramContext, this.smsListener);
    this.cpId = PushSDK.getCpId();
    this.cpKey = PushSDK.getCpKey();
    this.phoneUtil = PushSDK.INSTANCE.getPhoneUtil();
    if ((r.a(this.cpId)) || (r.a(this.cpKey)) || (r.a(this.phoneUtil.getImei())) || (r.a(this.phoneUtil.getImsi())) || (r.a(this.phoneUtil.e())) || (r.a(this.phoneUtil.f())) || (r.a(paramString1)))
    {
      paramContext = "Parameter is not complete! [cpid=" + this.cpId + ",cpkey=" + this.cpKey + ",imsi=" + this.phoneUtil.getImsi() + ",imei=" + this.phoneUtil.getImei() + ",手机型号=" + this.phoneUtil.e() + ",操作系统版本号=" + this.phoneUtil.f() + ",计费代码：" + paramString1 + "]";
      i.d(TAG, paramContext);
      if (paramOnPropListener != null)
      {
        paramString1 = new HashMap();
        paramString1.put("code", "-3");
        paramString1.put("msg", paramContext);
        paramOnPropListener.onFailure(paramString1);
      }
      if (paramOnPayListener != null)
      {
        paramString1 = new HashMap();
        paramString1.put("code", "-4");
        paramString1.put("msg", paramContext);
        paramOnPayListener.onFailure(paramString1);
      }
      return;
    }
    getPushDataTelecomPay(0);
  }
  
  public Context getContext()
  {
    return this.context;
  }
  
  public String getExtension()
  {
    return this.extension;
  }
  
  public String getNum()
  {
    return this.num;
  }
  
  public String getPayCode()
  {
    return this.payCode;
  }
  
  public PushListener.OnPayListener getPayListener()
  {
    return this.payListener;
  }
  
  public PushListener.OnPropListener getPropListener()
  {
    return this.propListener;
  }
  
  public void setContext(Context paramContext)
  {
    this.context = paramContext;
  }
}
