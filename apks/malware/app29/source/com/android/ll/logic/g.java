package com.android.ll.logic;

import android.text.TextUtils;
import com.android.intent.http.a;
import java.io.IOException;
import java.io.StringReader;
import java.util.Map;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlPullParserFactory;

public final class g
  extends com.android.intent.http.h
{
  private com.android.intent.http.g l = null;
  private com.android.dd.data.h m = null;
  
  public g() {}
  
  private void a(XmlPullParser paramXmlPullParser)
  {
    paramXmlPullParser.require(2, null, "root");
    for (;;)
    {
      if (paramXmlPullParser.nextTag() == 3)
      {
        paramXmlPullParser.require(3, null, "root");
        return;
      }
      String str = paramXmlPullParser.getName();
      if (str.equals("UserId")) {
        this.m.a = paramXmlPullParser.nextText();
      } else if (str.equals("Mobile")) {
        this.m.b = paramXmlPullParser.nextText();
      } else if (str.equals("IMSI")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("NetWorkOperators")) {
        this.m.c = paramXmlPullParser.nextText();
      } else if (str.equals("NowVersion")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("NewVersion")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("VersionFileUrl")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("OtherUpdateUrl")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("UpdateVersionPrompt")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("UpdateStatus")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("JokeType")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("JokeUrl")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("SendMobile")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("IntervalTime")) {
        this.m.d = paramXmlPullParser.nextText();
      } else if (str.equals("Tsy")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("Cweb")) {
        paramXmlPullParser.nextText();
      } else if (str.equals("TanC")) {
        paramXmlPullParser.nextText();
      } else {
        paramXmlPullParser.nextText();
      }
    }
  }
  
  public final void a(String paramString)
  {
    if (!TextUtils.isEmpty(paramString))
    {
      this.m = new com.android.dd.data.h();
      paramString = new StringReader(paramString);
    }
    try
    {
      XmlPullParser localXmlPullParser = XmlPullParserFactory.newInstance().newPullParser();
      localXmlPullParser.setInput(paramString);
      localXmlPullParser.next();
      a(localXmlPullParser);
      localXmlPullParser.next();
      localXmlPullParser.require(1, null, null);
      return;
    }
    catch (XmlPullParserException paramString)
    {
      paramString.printStackTrace();
      return;
    }
    catch (IOException paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  public final void a(String paramString1, String paramString2, Map paramMap, com.android.intent.http.g paramG, boolean paramBoolean)
  {
    this.m = null;
    this.l = paramG;
    a(paramString1, paramString2, paramMap, paramBoolean, a.a);
  }
  
  public final void a(boolean paramBoolean, String paramString)
  {
    this.l.response(this.m, paramBoolean);
  }
}
