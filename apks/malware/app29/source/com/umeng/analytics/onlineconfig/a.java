package com.umeng.analytics.onlineconfig;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.text.TextUtils;
import com.umeng.analytics.AnalyticsConfig;
import com.umeng.analytics.f;
import java.util.Iterator;
import org.json.JSONObject;
import u.aly.fu;
import u.aly.fv;
import u.aly.ga;

public class a
{
  public static final String a = "type";
  public static final String b = "package";
  public static final String c = "channel";
  public static final String d = "idmd5";
  public static final String e = "version_code";
  public static final String f = "appkey";
  public static final String g = "sdk_version";
  private final String h = "last_config_time";
  private final String i = "report_policy";
  private final String j = "online_config";
  private UmengOnlineConfigureListener k = null;
  private c l = null;
  private long m = 0L;
  
  public a() {}
  
  private void a(Context paramContext, b paramB)
  {
    SharedPreferences.Editor localEditor = f.a(paramContext).g().edit();
    if (!TextUtils.isEmpty(paramB.e))
    {
      localEditor.putString("umeng_last_config_time", paramB.e);
      localEditor.commit();
    }
    if (paramB.c != -1) {
      f.a(paramContext).a(paramB.c, paramB.d);
    }
  }
  
  private void a(JSONObject paramJSONObject)
  {
    if (this.k != null) {
      this.k.onDataReceived(paramJSONObject);
    }
  }
  
  private JSONObject b(Context paramContext)
  {
    JSONObject localJSONObject = new JSONObject();
    try
    {
      getClass();
      localJSONObject.put("type", "online_config");
      localJSONObject.put("appkey", AnalyticsConfig.getAppkey(paramContext));
      localJSONObject.put("version_code", fu.a(paramContext));
      localJSONObject.put("package", fu.o(paramContext));
      localJSONObject.put("sdk_version", "5.2.4");
      localJSONObject.put("idmd5", ga.b(fu.c(paramContext)));
      localJSONObject.put("channel", AnalyticsConfig.getChannel(paramContext));
      localJSONObject.put("report_policy", f.a(paramContext).a()[0]);
      localJSONObject.put("last_config_time", c(paramContext));
      return localJSONObject;
    }
    catch (Exception paramContext)
    {
      fv.b("MobclickAgent", "exception in onlineConfigInternal");
    }
    return null;
  }
  
  private void b(Context paramContext, b paramB)
  {
    if ((paramB.a == null) || (paramB.a.length() == 0)) {
      return;
    }
    paramContext = f.a(paramContext).g().edit();
    try
    {
      paramB = paramB.a;
      Iterator localIterator = paramB.keys();
      while (localIterator.hasNext())
      {
        String str = (String)localIterator.next();
        paramContext.putString(str, paramB.getString(str));
      }
      paramContext.commit();
    }
    catch (Exception paramContext)
    {
      fv.c("MobclickAgent", "save online config params", paramContext);
      return;
    }
    fv.a("MobclickAgent", "get online setting params: " + paramB);
  }
  
  private String c(Context paramContext)
  {
    return f.a(paramContext).g().getString("umeng_last_config_time", "");
  }
  
  public void a()
  {
    this.k = null;
  }
  
  public void a(Context paramContext)
  {
    if (paramContext == null) {}
    try
    {
      fv.b("MobclickAgent", "unexpected null context in updateOnlineConfig");
      return;
    }
    catch (Exception paramContext)
    {
      fv.b("MobclickAgent", "exception in updateOnlineConfig");
      return;
    }
    if ((fv.a) && (fu.q(paramContext)))
    {
      new Thread(new a.b(this, paramContext.getApplicationContext())).start();
      return;
    }
    long l1 = System.currentTimeMillis();
    if (l1 - this.m > 3600000L)
    {
      this.m = l1;
      new Thread(new a.b(this, paramContext.getApplicationContext())).start();
    }
  }
  
  public void a(UmengOnlineConfigureListener paramUmengOnlineConfigureListener)
  {
    this.k = paramUmengOnlineConfigureListener;
  }
  
  public void a(c paramC)
  {
    this.l = paramC;
  }
  
  public void b()
  {
    this.l = null;
  }
}
