package com.wq.intent.http;

import android.os.Build;
import android.text.TextUtils;
import com.wq.dd.data.c;
import com.wq.toast.log.a;
import java.io.UnsupportedEncodingException;
import java.math.BigInteger;
import java.net.URLEncoder;
import java.security.MessageDigest;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.message.BasicNameValuePair;

public abstract class k
  extends g
{
  private String k;
  private String l;
  private Map m;
  private f n;
  private boolean o;
  private boolean p;
  
  public k() {}
  
  private HttpUriRequest a(String paramString, Map paramMap, f paramF)
  {
    Iterator localIterator;
    if (paramF.equals(f.b))
    {
      paramF = new ArrayList();
      if (paramMap != null) {
        localIterator = paramMap.keySet().iterator();
      }
      for (;;)
      {
        if (!localIterator.hasNext()) {}
        try
        {
          paramMap = new UrlEncodedFormEntity(paramF);
          a.a("url", "post url = " + paramString);
          paramString = new HttpPost(paramString);
          paramString.setHeader(c.K, b(c.s + c.y));
          paramString.setHeader(c.E, c.s);
          paramString.setEntity(paramMap);
          return paramString;
        }
        catch (UnsupportedEncodingException paramString)
        {
          String str;
          throw new RuntimeException(paramString.getMessage(), paramString);
        }
        str = (String)localIterator.next();
        a.a("url", "post canshu=" + str + " - " + (String)paramMap.get(str));
        paramF.add(new BasicNameValuePair(str, (String)paramMap.get(str)));
      }
    }
    if (paramString.indexOf("?") < 0) {
      paramString = paramString + "?";
    }
    for (;;)
    {
      if (paramMap != null)
      {
        localIterator = paramMap.keySet().iterator();
        if (!localIterator.hasNext()) {
          label286:
          paramString = paramString.replace("?&", "?").replace("+", "");
        }
      }
      for (;;)
      {
        try
        {
          if (!TextUtils.isEmpty(c.r))
          {
            c.r = URLEncoder.encode(c.r, "utf-8");
            if (c.r.length() > 15000) {
              c.r = c.r.substring(0, 15000);
            }
          }
          paramF = Build.MODEL;
          paramMap = paramF;
          if (TextUtils.isEmpty(paramF)) {
            paramMap = "";
          }
          a.a("url", "url=" + paramString + "    TData.IMSI=" + c.g + "    TData.UID=" + c.e + "    TData.errorMessage=" + c.r + "\tpno=" + c.b + "  TData.imei = " + c.h + " TData.V=" + c.a + "  TData.Ip = " + c.m);
          paramString = new HttpGet(paramString);
          paramString.setHeader("V", c.a);
          paramString.setHeader("H", c.d);
          paramString.setHeader("cid", c.k);
          paramString.setHeader("wf", c.l);
          paramString.setHeader("cip", c.m);
          paramString.setHeader(c.z, c.b);
          paramString.setHeader(c.A, c.g);
          paramString.setHeader(c.B, c.f);
          paramString.setHeader(c.C, c.e);
          paramString.setHeader(c.D, c.r);
          paramString.setHeader(c.E, c.s);
          paramString.setHeader(c.F, b(c.s + c.x));
          paramString.setHeader(c.G, paramMap);
          paramString.setHeader(c.H, c.h);
          paramString.setHeader(c.I, c.i);
          paramString.setHeader(c.J, c.j);
          return paramString;
          paramF = (String)localIterator.next();
          try
          {
            if (paramMap.get(paramF) == null) {
              break label286;
            }
            paramF = paramString + "&" + paramF + "=" + URLEncoder.encode((String)paramMap.get(paramF), "utf-8");
            paramString = paramF;
          }
          catch (Exception paramF)
          {
            paramF.printStackTrace();
          }
        }
        catch (UnsupportedEncodingException paramMap)
        {
          paramMap.printStackTrace();
        }
      }
    }
  }
  
  private static String b(String paramString)
  {
    a.a("fmz", "pwd1 = " + paramString);
    String str2 = "";
    String str1 = str2;
    try
    {
      MessageDigest localMessageDigest = MessageDigest.getInstance("MD5");
      str1 = str2;
      localMessageDigest.update(paramString.getBytes());
      str1 = str2;
      paramString = new BigInteger(1, localMessageDigest.digest()).toString(16);
      str1 = paramString;
      paramString = paramString.toUpperCase();
      str1 = paramString;
      try
      {
        a.a("fmz", "pwd = " + str1);
        return str1;
      }
      catch (Exception paramString) {}
    }
    catch (Exception paramString)
    {
      for (;;) {}
    }
    paramString.printStackTrace();
    return str1;
  }
  
  /* Error */
  public final String a(String paramString1, String paramString2, Map paramMap, f paramF)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_2
    //   2: aload_1
    //   3: invokevirtual 346	java/lang/String:trim	()Ljava/lang/String;
    //   6: astore 5
    //   8: new 348	org/apache/http/impl/client/DefaultHttpClient
    //   11: dup
    //   12: invokespecial 349	org/apache/http/impl/client/DefaultHttpClient:<init>	()V
    //   15: astore_1
    //   16: aload_1
    //   17: invokevirtual 353	org/apache/http/impl/client/DefaultHttpClient:getParams	()Lorg/apache/http/params/HttpParams;
    //   20: ldc_w 355
    //   23: ldc_w 356
    //   26: invokeinterface 362 3 0
    //   31: pop
    //   32: aload_1
    //   33: invokevirtual 353	org/apache/http/impl/client/DefaultHttpClient:getParams	()Lorg/apache/http/params/HttpParams;
    //   36: ldc_w 364
    //   39: sipush 20000
    //   42: invokeinterface 362 3 0
    //   47: pop
    //   48: aload_0
    //   49: aload 5
    //   51: aload_3
    //   52: aload 4
    //   54: invokespecial 366	com/wq/intent/http/k:a	(Ljava/lang/String;Ljava/util/Map;Lcom/wq/intent/http/f;)Lorg/apache/http/client/methods/HttpUriRequest;
    //   57: astore_3
    //   58: aload_1
    //   59: invokevirtual 353	org/apache/http/impl/client/DefaultHttpClient:getParams	()Lorg/apache/http/params/HttpParams;
    //   62: ldc_w 368
    //   65: ldc_w 370
    //   68: invokeinterface 374 3 0
    //   73: pop
    //   74: aload_1
    //   75: aload_3
    //   76: invokevirtual 378	org/apache/http/impl/client/DefaultHttpClient:execute	(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;
    //   79: astore_3
    //   80: aload_2
    //   81: astore_1
    //   82: aload_3
    //   83: invokeinterface 384 1 0
    //   88: invokeinterface 389 1 0
    //   93: sipush 200
    //   96: if_icmpne +39 -> 135
    //   99: new 67	java/lang/StringBuilder
    //   102: dup
    //   103: aload_3
    //   104: invokeinterface 393 1 0
    //   109: invokestatic 398	org/apache/http/util/EntityUtils:toString	(Lorg/apache/http/HttpEntity;)Ljava/lang/String;
    //   112: invokespecial 72	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   115: astore_1
    //   116: aload_0
    //   117: iconst_0
    //   118: putfield 340	com/wq/intent/http/k:p	Z
    //   121: aload_1
    //   122: invokevirtual 80	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   125: ldc_w 400
    //   128: ldc_w 402
    //   131: invokevirtual 405	java/lang/String:replaceAll	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   134: astore_1
    //   135: aload_1
    //   136: areturn
    //   137: astore_1
    //   138: aload_1
    //   139: invokevirtual 406	java/net/SocketException:printStackTrace	()V
    //   142: aload_0
    //   143: iconst_1
    //   144: putfield 340	com/wq/intent/http/k:p	Z
    //   147: aconst_null
    //   148: areturn
    //   149: astore_1
    //   150: aload_1
    //   151: athrow
    //   152: astore_1
    //   153: aload_0
    //   154: iconst_1
    //   155: putfield 340	com/wq/intent/http/k:p	Z
    //   158: aload_1
    //   159: invokevirtual 292	java/lang/Exception:printStackTrace	()V
    //   162: aconst_null
    //   163: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	164	0	this	k
    //   0	164	1	paramString1	String
    //   0	164	2	paramString2	String
    //   0	164	3	paramMap	Map
    //   0	164	4	paramF	f
    //   6	44	5	str	String
    // Exception table:
    //   from	to	target	type
    //   8	80	137	java/net/SocketException
    //   82	135	137	java/net/SocketException
    //   8	80	149	finally
    //   82	135	149	finally
    //   138	147	149	finally
    //   153	162	149	finally
    //   8	80	152	java/lang/Exception
    //   82	135	152	java/lang/Exception
  }
  
  public abstract void a(String paramString);
  
  public final void a(String paramString1, String paramString2, Map paramMap, boolean paramBoolean, f paramF)
  {
    this.k = paramString1;
    this.l = paramString2;
    this.m = paramMap;
    this.n = paramF;
    this.o = paramBoolean;
    new b(this, null).execute(new String[0]);
  }
  
  public abstract void a(boolean paramBoolean, String paramString);
}
