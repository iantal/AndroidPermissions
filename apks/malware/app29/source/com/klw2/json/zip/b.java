package com.klw2.json.zip;

import com.klw2.json.Kim;
import java.util.HashMap;

final class b
  implements None, PostMortem
{
  protected int a;
  private int b;
  private Object[] c;
  private HashMap<Object, Integer> d;
  private int e;
  private long[] f;
  
  public b(int paramInt)
  {
    this.b = (1 << paramInt);
    this.a = 0;
    this.e = 0;
    this.f = new long[this.b];
    this.c = new Object[this.b];
    this.d = new HashMap(this.b);
  }
  
  public final int a()
  {
    for (;;)
    {
      if (1 << this.e >= this.a) {
        return this.e;
      }
      this.e += 1;
    }
  }
  
  public final int a(Object paramObject)
  {
    paramObject = this.d.get(paramObject);
    if ((paramObject instanceof Integer)) {
      return ((Integer)paramObject).intValue();
    }
    return -1;
  }
  
  public final void a(int paramInt)
  {
    long[] arrayOfLong = this.f;
    arrayOfLong[paramInt] = (1L + arrayOfLong[paramInt]);
  }
  
  public final Object b(int paramInt)
  {
    return this.c[paramInt];
  }
  
  public final void b(Object paramObject)
  {
    int i;
    int j;
    if (this.a >= this.b)
    {
      i = 0;
      j = 0;
      if (i < this.b) {
        break label88;
      }
      if (j >= this.b) {
        break label190;
      }
    }
    for (this.a = j;; this.a = 0)
    {
      this.e = 0;
      this.c[this.a] = paramObject;
      this.d.put(paramObject, Integer.valueOf(this.a));
      this.f[this.a] = 1L;
      this.a += 1;
      return;
      label88:
      Object localObject = this.c[i];
      long l = this.f[i];
      if (l >= 32L)
      {
        l = 16L;
        label118:
        if (l <= 0L) {
          break label177;
        }
        this.f[j] = l;
        this.c[j] = localObject;
        this.d.put(localObject, Integer.valueOf(j));
        j += 1;
      }
      for (;;)
      {
        i += 1;
        break;
        l /= 2L;
        break label118;
        label177:
        this.d.remove(localObject);
      }
      label190:
      this.d.clear();
    }
  }
  
  public final boolean postMortem(PostMortem paramPostMortem)
  {
    b localB = (b)paramPostMortem;
    if (this.a != localB.a)
    {
      JSONzip.log(this.a + " <> " + localB.a);
      return false;
    }
    int i = 0;
    for (;;)
    {
      if (i >= this.a) {
        return true;
      }
      if ((this.c[i] instanceof Kim)) {}
      Object localObject1;
      for (boolean bool = this.c[i].equals(localB.c[i]); !bool; bool = paramPostMortem.equals(localObject1))
      {
        JSONzip.log("\n[" + i + "]\n " + this.c[i] + "\n " + localB.c[i] + "\n " + this.f[i] + "\n " + localB.f[i]);
        return false;
        localObject1 = this.c[i];
        Object localObject2 = localB.c[i];
        paramPostMortem = (PostMortem)localObject1;
        if ((localObject1 instanceof Number)) {
          paramPostMortem = localObject1.toString();
        }
        localObject1 = localObject2;
        if ((localObject2 instanceof Number)) {
          localObject1 = localObject2.toString();
        }
      }
      i += 1;
    }
  }
}
