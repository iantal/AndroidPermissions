package com.lepeng.fastjson.util;

import java.util.Arrays;

public class Base64
{
  public static final char[] CA = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".toCharArray();
  public static final int[] IA = new int['Ä€'];
  
  static
  {
    Arrays.fill(IA, -1);
    int j = CA.length;
    int i = 0;
    for (;;)
    {
      if (i >= j)
      {
        IA[61] = 0;
        return;
      }
      IA[CA[i]] = i;
      i += 1;
    }
  }
  
  public Base64() {}
  
  public static final byte[] decodeFast(String paramString)
  {
    int i2 = 0;
    int k = paramString.length();
    if (k == 0) {
      return new byte[0];
    }
    int n = k - 1;
    int i = 0;
    label45:
    int j;
    label93:
    int m;
    label124:
    int i1;
    label129:
    int i6;
    byte[] arrayOfByte;
    if ((i >= n) || (IA[(paramString.charAt(i) & 0xFF)] >= 0))
    {
      if ((n > 0) && (IA[(paramString.charAt(n) & 0xFF)] < 0)) {
        break label216;
      }
      if (paramString.charAt(n) != '=') {
        break label230;
      }
      if (paramString.charAt(n - 1) != '=') {
        break label225;
      }
      j = 2;
      m = n - i + 1;
      if (k <= 76) {
        break label240;
      }
      if (paramString.charAt(76) != '\r') {
        break label235;
      }
      k = m / 78;
      i1 = k << 1;
      i6 = ((m - i1) * 6 >> 3) - j;
      arrayOfByte = new byte[i6];
      int i7 = i6 / 3;
      k = 0;
      m = 0;
      label160:
      if (k < i7 * 3) {
        break label246;
      }
      if (k < i6)
      {
        i1 = i;
        m = 0;
        i = i2;
        label183:
        i2 = i;
        if (i1 <= n - j) {
          break label435;
        }
        j = 16;
        i = k;
      }
    }
    for (;;)
    {
      if (i >= i6)
      {
        return arrayOfByte;
        i += 1;
        break;
        label216:
        n -= 1;
        break label45;
        label225:
        j = 1;
        break label93;
        label230:
        j = 0;
        break label93;
        label235:
        k = 0;
        break label124;
        label240:
        i1 = 0;
        break label129;
        label246:
        int[] arrayOfInt = IA;
        int i4 = i + 1;
        i = arrayOfInt[paramString.charAt(i)];
        arrayOfInt = IA;
        int i3 = i4 + 1;
        i4 = arrayOfInt[paramString.charAt(i4)];
        arrayOfInt = IA;
        int i5 = i3 + 1;
        int i8 = arrayOfInt[paramString.charAt(i3)];
        arrayOfInt = IA;
        i3 = i5 + 1;
        i = i8 << 6 | i << 18 | i4 << 12 | arrayOfInt[paramString.charAt(i5)];
        i4 = k + 1;
        arrayOfByte[k] = ((byte)(i >> 16));
        k = i4 + 1;
        arrayOfByte[i4] = ((byte)(i >> 8));
        i4 = k + 1;
        arrayOfByte[k] = ((byte)i);
        k = i4;
        i = i3;
        if (i1 <= 0) {
          break label160;
        }
        i5 = m + 1;
        m = i5;
        k = i4;
        i = i3;
        if (i5 != 19) {
          break label160;
        }
        i = i3 + 2;
        m = 0;
        k = i4;
        break label160;
        label435:
        i3 = IA[paramString.charAt(i1)];
        i = i2 + 1;
        m = i3 << 18 - i2 * 6 | m;
        i1 += 1;
        break label183;
      }
      arrayOfByte[i] = ((byte)(m >> j));
      j -= 8;
      i += 1;
    }
  }
  
  public static final byte[] decodeFast(String paramString, int paramInt1, int paramInt2)
  {
    int n = 0;
    if (paramInt2 == 0) {
      return new byte[0];
    }
    int k = paramInt1 + paramInt2 - 1;
    label36:
    int i;
    label80:
    int j;
    label111:
    int m;
    label116:
    int i4;
    byte[] arrayOfByte;
    if ((paramInt1 >= k) || (IA[paramString.charAt(paramInt1)] >= 0))
    {
      if ((k > 0) && (IA[paramString.charAt(k)] < 0)) {
        break label205;
      }
      if (paramString.charAt(k) != '=') {
        break label219;
      }
      if (paramString.charAt(k - 1) != '=') {
        break label214;
      }
      i = 2;
      j = k - paramInt1 + 1;
      if (paramInt2 <= 76) {
        break label229;
      }
      if (paramString.charAt(76) != '\r') {
        break label224;
      }
      paramInt2 = j / 78;
      m = paramInt2 << 1;
      i4 = ((j - m) * 6 >> 3) - i;
      arrayOfByte = new byte[i4];
      int i5 = i4 / 3;
      paramInt2 = 0;
      j = 0;
      label147:
      if (paramInt2 < i5 * 3) {
        break label235;
      }
      if (paramInt2 < i4)
      {
        m = paramInt1;
        j = 0;
        paramInt1 = n;
        label170:
        n = paramInt1;
        if (m <= k - i) {
          break label424;
        }
        i = 16;
        paramInt1 = paramInt2;
        paramInt2 = i;
      }
    }
    for (;;)
    {
      if (paramInt1 >= i4)
      {
        return arrayOfByte;
        paramInt1 += 1;
        break;
        label205:
        k -= 1;
        break label36;
        label214:
        i = 1;
        break label80;
        label219:
        i = 0;
        break label80;
        label224:
        paramInt2 = 0;
        break label111;
        label229:
        m = 0;
        break label116;
        label235:
        int[] arrayOfInt = IA;
        int i2 = paramInt1 + 1;
        paramInt1 = arrayOfInt[paramString.charAt(paramInt1)];
        arrayOfInt = IA;
        int i1 = i2 + 1;
        i2 = arrayOfInt[paramString.charAt(i2)];
        arrayOfInt = IA;
        int i3 = i1 + 1;
        int i6 = arrayOfInt[paramString.charAt(i1)];
        arrayOfInt = IA;
        i1 = i3 + 1;
        paramInt1 = i6 << 6 | paramInt1 << 18 | i2 << 12 | arrayOfInt[paramString.charAt(i3)];
        i2 = paramInt2 + 1;
        arrayOfByte[paramInt2] = ((byte)(paramInt1 >> 16));
        paramInt2 = i2 + 1;
        arrayOfByte[i2] = ((byte)(paramInt1 >> 8));
        i2 = paramInt2 + 1;
        arrayOfByte[paramInt2] = ((byte)paramInt1);
        paramInt2 = i2;
        paramInt1 = i1;
        if (m <= 0) {
          break label147;
        }
        i3 = j + 1;
        j = i3;
        paramInt2 = i2;
        paramInt1 = i1;
        if (i3 != 19) {
          break label147;
        }
        paramInt1 = i1 + 2;
        j = 0;
        paramInt2 = i2;
        break label147;
        label424:
        i1 = IA[paramString.charAt(m)];
        paramInt1 = n + 1;
        j = i1 << 18 - n * 6 | j;
        m += 1;
        break label170;
      }
      arrayOfByte[paramInt1] = ((byte)(j >> paramInt2));
      paramInt2 -= 8;
      paramInt1 += 1;
    }
  }
  
  public static final byte[] decodeFast(char[] paramArrayOfChar, int paramInt1, int paramInt2)
  {
    int n = 0;
    if (paramInt2 == 0) {
      return new byte[0];
    }
    int k = paramInt1 + paramInt2 - 1;
    label34:
    int i;
    label72:
    int j;
    label101:
    int m;
    label106:
    int i4;
    byte[] arrayOfByte;
    if ((paramInt1 >= k) || (IA[paramArrayOfChar[paramInt1]] >= 0))
    {
      if ((k > 0) && (IA[paramArrayOfChar[k]] < 0)) {
        break label195;
      }
      if (paramArrayOfChar[k] != '=') {
        break label209;
      }
      if (paramArrayOfChar[(k - 1)] != '=') {
        break label204;
      }
      i = 2;
      j = k - paramInt1 + 1;
      if (paramInt2 <= 76) {
        break label219;
      }
      if (paramArrayOfChar[76] != '\r') {
        break label214;
      }
      paramInt2 = j / 78;
      m = paramInt2 << 1;
      i4 = ((j - m) * 6 >> 3) - i;
      arrayOfByte = new byte[i4];
      int i5 = i4 / 3;
      paramInt2 = 0;
      j = 0;
      label137:
      if (paramInt2 < i5 * 3) {
        break label225;
      }
      if (paramInt2 < i4)
      {
        m = paramInt1;
        j = 0;
        paramInt1 = n;
        label160:
        n = paramInt1;
        if (m <= k - i) {
          break label406;
        }
        i = 16;
        paramInt1 = paramInt2;
        paramInt2 = i;
      }
    }
    for (;;)
    {
      if (paramInt1 >= i4)
      {
        return arrayOfByte;
        paramInt1 += 1;
        break;
        label195:
        k -= 1;
        break label34;
        label204:
        i = 1;
        break label72;
        label209:
        i = 0;
        break label72;
        label214:
        paramInt2 = 0;
        break label101;
        label219:
        m = 0;
        break label106;
        label225:
        int[] arrayOfInt = IA;
        int i2 = paramInt1 + 1;
        paramInt1 = arrayOfInt[paramArrayOfChar[paramInt1]];
        arrayOfInt = IA;
        int i1 = i2 + 1;
        i2 = arrayOfInt[paramArrayOfChar[i2]];
        arrayOfInt = IA;
        int i3 = i1 + 1;
        int i6 = arrayOfInt[paramArrayOfChar[i1]];
        arrayOfInt = IA;
        i1 = i3 + 1;
        paramInt1 = i6 << 6 | paramInt1 << 18 | i2 << 12 | arrayOfInt[paramArrayOfChar[i3]];
        i2 = paramInt2 + 1;
        arrayOfByte[paramInt2] = ((byte)(paramInt1 >> 16));
        paramInt2 = i2 + 1;
        arrayOfByte[i2] = ((byte)(paramInt1 >> 8));
        i2 = paramInt2 + 1;
        arrayOfByte[paramInt2] = ((byte)paramInt1);
        paramInt2 = i2;
        paramInt1 = i1;
        if (m <= 0) {
          break label137;
        }
        i3 = j + 1;
        j = i3;
        paramInt2 = i2;
        paramInt1 = i1;
        if (i3 != 19) {
          break label137;
        }
        paramInt1 = i1 + 2;
        j = 0;
        paramInt2 = i2;
        break label137;
        label406:
        i1 = IA[paramArrayOfChar[m]];
        paramInt1 = n + 1;
        j = i1 << 18 - n * 6 | j;
        m += 1;
        break label160;
      }
      arrayOfByte[paramInt1] = ((byte)(j >> paramInt2));
      paramInt2 -= 8;
      paramInt1 += 1;
    }
  }
}
