package com.lepeng.fastjson.serializer;

import java.util.HashSet;
import java.util.Set;

public class SimplePropertyPreFilter
  implements PropertyPreFilter
{
  private final Set<String> b = new HashSet();
  private final Set<String> c = new HashSet();
  private final Class<?> clazz;
  
  public SimplePropertyPreFilter(Class<?> paramClass, String... paramVarArgs)
  {
    this.clazz = paramClass;
    int j = paramVarArgs.length;
    int i = 0;
    for (;;)
    {
      if (i >= j) {
        return;
      }
      paramClass = paramVarArgs[i];
      if (paramClass != null) {
        this.b.add(paramClass);
      }
      i += 1;
    }
  }
  
  public SimplePropertyPreFilter(String... paramVarArgs)
  {
    this(null, paramVarArgs);
  }
  
  public boolean apply(JSONSerializer paramJSONSerializer, Object paramObject, String paramString)
  {
    boolean bool = false;
    if (paramObject == null) {}
    do
    {
      bool = true;
      do
      {
        return bool;
        if ((this.clazz != null) && (!this.clazz.isInstance(paramObject))) {
          break;
        }
      } while (this.c.contains(paramString));
    } while ((this.b.size() == 0) || (this.b.contains(paramString)));
    return false;
  }
  
  public Class<?> getClazz()
  {
    return this.clazz;
  }
  
  public Set<String> getExcludes()
  {
    return this.c;
  }
  
  public Set<String> getIncludes()
  {
    return this.b;
  }
}
