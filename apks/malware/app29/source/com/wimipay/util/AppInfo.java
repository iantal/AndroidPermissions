package com.wimipay.util;

import android.app.Activity;
import android.content.Context;
import android.os.Build;
import android.os.Build.VERSION;
import android.telephony.NeighboringCellInfo;
import android.telephony.TelephonyManager;
import android.telephony.gsm.GsmCellLocation;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.WindowManager;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

public class AppInfo
{
  public AppInfo() {}
  
  private static int formatCid(int paramInt)
  {
    try
    {
      String str = Integer.toString(paramInt, 2);
      int i = paramInt;
      if (str.length() > 16) {
        i = Integer.valueOf(str.substring(str.length() - 16, str.length()), 2).intValue();
      }
      return i;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return paramInt;
  }
  
  public static String getAndroidVersion()
  {
    return Build.VERSION.RELEASE;
  }
  
  public static String getCellID(Context paramContext)
  {
    TelephonyManager localTelephonyManager = (TelephonyManager)paramContext.getSystemService("phone");
    if (getPhoneTypeByImsi(getImsi(paramContext)) == 0)
    {
      paramContext = (GsmCellLocation)localTelephonyManager.getCellLocation();
      if (paramContext == null) {
        return "unknow";
      }
      int i = paramContext.getLac();
      int j = paramContext.getCid();
      if (i == 0) {
        return "unkonw";
      }
      j = formatCid(j);
      return i + "-" + j;
    }
    return "unknow";
  }
  
  public static String getDensity(Activity paramActivity)
  {
    paramActivity = (WindowManager)paramActivity.getSystemService("window");
    DisplayMetrics localDisplayMetrics = new DisplayMetrics();
    paramActivity.getDefaultDisplay().getMetrics(localDisplayMetrics);
    return localDisplayMetrics.densityDpi;
  }
  
  public static String getDeviceDetail()
  {
    return Build.MODEL;
  }
  
  public static String getDisplay(Activity paramActivity)
  {
    DisplayMetrics localDisplayMetrics = new DisplayMetrics();
    paramActivity.getWindowManager().getDefaultDisplay().getMetrics(localDisplayMetrics);
    return localDisplayMetrics.widthPixels + "*" + localDisplayMetrics.heightPixels;
  }
  
  public static String getIMEI(Context paramContext)
  {
    return ((TelephonyManager)paramContext.getSystemService("phone")).getDeviceId();
  }
  
  public static String getImsi(Context paramContext)
  {
    TelephonyManager localTelephonyManager = (TelephonyManager)paramContext.getSystemService("phone");
    Object localObject1 = localTelephonyManager.getSubscriberId();
    Object localObject3;
    if (localObject1 != null)
    {
      localObject3 = localObject1;
      if (!"".equals(localObject1)) {}
    }
    else
    {
      localObject3 = localTelephonyManager.getSimOperator();
    }
    Class[] arrayOfClass = new Class[1];
    arrayOfClass[0] = Integer.TYPE;
    Integer localInteger = new Integer(1);
    if (localObject3 != null)
    {
      localObject1 = localObject3;
      if (!"".equals(localObject3)) {
        break label108;
      }
    }
    try
    {
      localObject1 = localTelephonyManager.getClass().getDeclaredMethod("getSubscriberIdGemini", arrayOfClass);
      ((Method)localObject1).setAccessible(true);
      localObject1 = (String)((Method)localObject1).invoke(localTelephonyManager, new Object[] { localInteger });
      label108:
      if (localObject1 != null)
      {
        localObject3 = localObject1;
        if (!"".equals(localObject1)) {
          break label184;
        }
      }
    }
    catch (Exception paramContext)
    {
      try
      {
        localObject1 = Class.forName("com.android.internal.telephony.PhoneFactory");
        localObject3 = ((TelephonyManager)paramContext.getSystemService((String)((Class)localObject1).getMethod("getServiceName", new Class[] { String.class, Integer.TYPE }).invoke(localObject1, new Object[] { "phone", Integer.valueOf(1) }))).getSubscriberId();
        label184:
        if (localObject3 != null) {
          if (!"".equals(localObject3)) {
            break label268;
          }
        }
      }
      catch (Exception paramContext)
      {
        for (;;)
        {
          try
          {
            paramContext = localTelephonyManager.getClass().getDeclaredMethod("getSimSerialNumber", arrayOfClass);
            paramContext.setAccessible(true);
            paramContext = (String)paramContext.invoke(localTelephonyManager, new Object[] { localInteger });
            if (paramContext != null)
            {
              localObject1 = paramContext;
              if (paramContext.length() > 0) {}
            }
            else
            {
              localObject1 = "000000";
            }
            return localObject1;
            localException = localException;
            Object localObject2 = null;
            continue;
            paramContext = paramContext;
            localObject3 = null;
          }
          catch (Exception paramContext)
          {
            paramContext = null;
            continue;
          }
          label268:
          paramContext = (Context)localObject3;
        }
      }
    }
  }
  
  public static String getManufacturer()
  {
    return Build.MANUFACTURER;
  }
  
  public static ArrayList<String> getNeighboringCellInfo(Context paramContext)
  {
    Object localObject = (TelephonyManager)paramContext.getSystemService("phone");
    paramContext = new ArrayList();
    localObject = ((TelephonyManager)localObject).getNeighboringCellInfo();
    int j = ((List)localObject).size();
    int i = 0;
    for (;;)
    {
      if (i >= j) {
        return paramContext;
      }
      NeighboringCellInfo localNeighboringCellInfo = (NeighboringCellInfo)((List)localObject).get(i);
      int k = localNeighboringCellInfo.getLac();
      int m = localNeighboringCellInfo.getCid();
      if (k != 0)
      {
        m = formatCid(m);
        paramContext.add(k + "-" + m);
      }
      i += 1;
    }
  }
  
  public static String getPhoneOs()
  {
    return "android " + Build.VERSION.RELEASE;
  }
  
  public static int getPhoneTypeByImsi(String paramString)
  {
    if ((paramString.startsWith("46000")) || (paramString.startsWith("46002")) || (paramString.startsWith("46007"))) {
      return 0;
    }
    if ((paramString.startsWith("46001")) || (paramString.startsWith("46006")) || (paramString.startsWith("46010"))) {
      return 1;
    }
    if ((paramString.startsWith("46003")) || (paramString.startsWith("46005")) || (paramString.startsWith("46011"))) {
      return 2;
    }
    return -1;
  }
}
