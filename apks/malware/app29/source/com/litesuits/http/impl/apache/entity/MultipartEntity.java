package com.litesuits.http.impl.apache.entity;

import com.litesuits.http.request.content.multi.MultipartBody;
import java.io.InputStream;
import java.io.OutputStream;
import org.apache.http.Header;
import org.apache.http.HttpEntity;
import org.apache.http.message.BasicHeader;

public class MultipartEntity
  implements HttpEntity
{
  private boolean isRepeatable = false;
  private MultipartBody multipartBody;
  
  public MultipartEntity(MultipartBody paramMultipartBody)
  {
    this.multipartBody = paramMultipartBody;
  }
  
  public void consumeContent()
  {
    if (isStreaming()) {
      throw new UnsupportedOperationException("Streaming entity does not implement #consumeContent()");
    }
  }
  
  public InputStream getContent()
  {
    throw new UnsupportedOperationException("getContent() is not supported. Use writeTo() instead.");
  }
  
  public Header getContentEncoding()
  {
    return null;
  }
  
  public long getContentLength()
  {
    return this.multipartBody.getContentLength();
  }
  
  public Header getContentType()
  {
    return new BasicHeader("Content-Type", this.multipartBody.getContentType());
  }
  
  public boolean isChunked()
  {
    return false;
  }
  
  public boolean isRepeatable()
  {
    return this.isRepeatable;
  }
  
  public boolean isStreaming()
  {
    return false;
  }
  
  public void setIsRepeatable(boolean paramBoolean)
  {
    this.isRepeatable = paramBoolean;
  }
  
  public void writeTo(OutputStream paramOutputStream)
  {
    this.multipartBody.writeTo(paramOutputStream);
  }
}
