package com.litesuits.http.impl.apache;

import java.lang.reflect.Field;
import java.net.InetAddress;
import java.net.Socket;
import org.apache.http.conn.scheme.LayeredSocketFactory;
import org.apache.http.conn.ssl.SSLSocketFactory;
import org.apache.http.params.HttpParams;

public class MyLayeredSocketFactory
  implements LayeredSocketFactory
{
  SSLSocketFactory delegate = SSLSocketFactory.getSocketFactory();
  
  public MyLayeredSocketFactory() {}
  
  private void injectHostname(Socket paramSocket, String paramString)
  {
    try
    {
      Field localField = InetAddress.class.getDeclaredField("hostName");
      localField.setAccessible(true);
      localField.set(paramSocket.getInetAddress(), paramString);
      return;
    }
    catch (Exception paramSocket) {}
  }
  
  public Socket connectSocket(Socket paramSocket, String paramString, int paramInt1, InetAddress paramInetAddress, int paramInt2, HttpParams paramHttpParams)
  {
    return this.delegate.connectSocket(paramSocket, paramString, paramInt1, paramInetAddress, paramInt2, paramHttpParams);
  }
  
  public Socket createSocket()
  {
    return this.delegate.createSocket();
  }
  
  public Socket createSocket(Socket paramSocket, String paramString, int paramInt, boolean paramBoolean)
  {
    injectHostname(paramSocket, paramString);
    return this.delegate.createSocket(paramSocket, paramString, paramInt, paramBoolean);
  }
  
  public boolean isSecure(Socket paramSocket)
  {
    return this.delegate.isSecure(paramSocket);
  }
}
