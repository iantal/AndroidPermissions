package com.litesuits.http.network;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import com.litesuits.http.log.HttpLog;
import java.lang.reflect.Method;

public class Network
{
  private static final String TAG = Network.class.getSimpleName();
  
  public Network() {}
  
  public static ConnectivityManager getConnManager(Context paramContext)
  {
    return (ConnectivityManager)paramContext.getSystemService("connectivity");
  }
  
  public static Network.NetType getConnectedType(Context paramContext)
  {
    paramContext = getConnManager(paramContext).getActiveNetworkInfo();
    if (paramContext != null)
    {
      switch (paramContext.getType())
      {
      default: 
        return Network.NetType.Other;
      case 1: 
        return Network.NetType.Wifi;
      }
      return Network.NetType.Mobile;
    }
    return Network.NetType.None;
  }
  
  public static boolean isAvailable(Context paramContext)
  {
    return (isWifiAvailable(paramContext)) || ((isMobileAvailable(paramContext)) && (isMobileEnabled(paramContext)));
  }
  
  public static boolean isConnected(Context paramContext)
  {
    paramContext = getConnManager(paramContext).getActiveNetworkInfo();
    return (paramContext != null) && (paramContext.isConnected());
  }
  
  public static boolean isConnectedOrConnecting(Context paramContext)
  {
    boolean bool2 = false;
    paramContext = getConnManager(paramContext).getAllNetworkInfo();
    boolean bool1 = bool2;
    int j;
    int i;
    if (paramContext != null)
    {
      j = paramContext.length;
      i = 0;
    }
    for (;;)
    {
      bool1 = bool2;
      if (i < j)
      {
        if (paramContext[i].isConnectedOrConnecting()) {
          bool1 = true;
        }
      }
      else {
        return bool1;
      }
      i += 1;
    }
  }
  
  public static boolean isMobileAvailable(Context paramContext)
  {
    boolean bool2 = false;
    paramContext = getConnManager(paramContext).getAllNetworkInfo();
    boolean bool1 = bool2;
    int j;
    int i;
    if (paramContext != null)
    {
      j = paramContext.length;
      i = 0;
    }
    for (;;)
    {
      bool1 = bool2;
      if (i < j)
      {
        Object localObject = paramContext[i];
        if (localObject.getType() == 0) {
          bool1 = localObject.isAvailable();
        }
      }
      else
      {
        return bool1;
      }
      i += 1;
    }
  }
  
  public static boolean isMobileConnected(Context paramContext)
  {
    paramContext = getConnManager(paramContext).getActiveNetworkInfo();
    return (paramContext != null) && (paramContext.getType() == 0) && (paramContext.isConnected());
  }
  
  public static boolean isMobileEnabled(Context paramContext)
  {
    try
    {
      Method localMethod = ConnectivityManager.class.getDeclaredMethod("getMobileDataEnabled", new Class[0]);
      localMethod.setAccessible(true);
      boolean bool = ((Boolean)localMethod.invoke(getConnManager(paramContext), new Object[0])).booleanValue();
      return bool;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return true;
  }
  
  public static boolean isWifiAvailable(Context paramContext)
  {
    boolean bool2 = false;
    paramContext = getConnManager(paramContext).getAllNetworkInfo();
    boolean bool1 = bool2;
    int j;
    int i;
    if (paramContext != null)
    {
      j = paramContext.length;
      i = 0;
    }
    for (;;)
    {
      bool1 = bool2;
      if (i < j)
      {
        Object localObject = paramContext[i];
        if (localObject.getType() == 1) {
          bool1 = localObject.isAvailable();
        }
      }
      else
      {
        return bool1;
      }
      i += 1;
    }
  }
  
  public static boolean isWifiConnected(Context paramContext)
  {
    paramContext = getConnManager(paramContext).getActiveNetworkInfo();
    return (paramContext != null) && (paramContext.getType() == 1) && (paramContext.isConnected());
  }
  
  public static boolean printNetworkInfo(Context paramContext)
  {
    paramContext = (ConnectivityManager)paramContext.getSystemService("connectivity");
    if (paramContext != null)
    {
      NetworkInfo localNetworkInfo = paramContext.getActiveNetworkInfo();
      HttpLog.i(TAG, "-------------$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$-------------");
      HttpLog.i(TAG, "getActiveNetworkInfo: " + localNetworkInfo);
      paramContext = paramContext.getAllNetworkInfo();
      if (paramContext != null)
      {
        int i = 0;
        while (i < paramContext.length)
        {
          HttpLog.i(TAG, "NetworkInfo[" + i + "]isAvailable : " + paramContext[i].isAvailable());
          HttpLog.i(TAG, "NetworkInfo[" + i + "]isConnected : " + paramContext[i].isConnected());
          HttpLog.i(TAG, "NetworkInfo[" + i + "]isConnectedOrConnecting : " + paramContext[i].isConnectedOrConnecting());
          HttpLog.i(TAG, "NetworkInfo[" + i + "]: " + paramContext[i]);
          i += 1;
        }
        HttpLog.i(TAG, "\n");
      }
    }
    else
    {
      return false;
    }
    HttpLog.i(TAG, "getAllNetworkInfo is null");
    return false;
  }
}
