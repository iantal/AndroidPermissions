package com.litesuits.http.parser.impl;

import com.litesuits.http.data.Json;
import com.litesuits.http.parser.MemeoryDataParser;
import com.litesuits.http.request.AbstractRequest;
import java.io.InputStream;
import java.lang.reflect.Type;

public abstract class JsonAbsParser<T>
  extends MemeoryDataParser<T>
{
  protected Type claxx;
  protected String json;
  
  public JsonAbsParser(AbstractRequest<T> paramAbstractRequest)
  {
    super(paramAbstractRequest);
    this.claxx = new JsonAbsParser.1(this).getType();
  }
  
  public JsonAbsParser(AbstractRequest<T> paramAbstractRequest, Type paramType)
  {
    super(paramAbstractRequest);
    this.claxx = paramType;
  }
  
  public <C> C getJsonModel(Class<C> paramClass)
  {
    return Json.get().toObject(this.json, paramClass);
  }
  
  public String getRawString()
  {
    return this.json;
  }
  
  protected T parseDiskCache(InputStream paramInputStream, long paramLong)
  {
    this.json = streamToString(paramInputStream, paramLong, this.charSet);
    return Json.get().toObject(this.json, this.claxx);
  }
  
  protected T parseNetStream(InputStream paramInputStream, long paramLong, String paramString1, String paramString2)
  {
    this.json = streamToString(paramInputStream, paramLong, paramString1);
    if (this.request.needCache()) {
      keepToCache(this.json, getSpecifyFile(paramString2));
    }
    return Json.get().toObject(this.json, this.claxx);
  }
  
  public String toString()
  {
    return "JsonParser{claxx=" + this.claxx + "} " + super.toString();
  }
}
