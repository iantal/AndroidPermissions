package com.litesuits.http.utils;

import java.io.PrintStream;

public class HexUtil
{
  private static final char[] DIGITS_LOWER = { 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102 };
  private static final char[] DIGITS_UPPER = { 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70 };
  
  public HexUtil() {}
  
  public static byte[] decodeHex(char[] paramArrayOfChar)
  {
    int j = 0;
    int k = paramArrayOfChar.length;
    if ((k & 0x1) != 0) {
      throw new RuntimeException("Odd number of characters.");
    }
    byte[] arrayOfByte = new byte[k >> 1];
    int i = 0;
    while (j < k)
    {
      int m = toDigit(paramArrayOfChar[j], j);
      j += 1;
      int n = toDigit(paramArrayOfChar[j], j);
      j += 1;
      arrayOfByte[i] = ((byte)((m << 4 | n) & 0xFF));
      i += 1;
    }
    return arrayOfByte;
  }
  
  public static char[] encodeHex(byte[] paramArrayOfByte)
  {
    return encodeHex(paramArrayOfByte, true);
  }
  
  public static char[] encodeHex(byte[] paramArrayOfByte, boolean paramBoolean)
  {
    if (paramBoolean) {}
    for (char[] arrayOfChar = DIGITS_LOWER;; arrayOfChar = DIGITS_UPPER) {
      return encodeHex(paramArrayOfByte, arrayOfChar);
    }
  }
  
  protected static char[] encodeHex(byte[] paramArrayOfByte, char[] paramArrayOfChar)
  {
    int j = 0;
    int k = paramArrayOfByte.length;
    char[] arrayOfChar = new char[k << 1];
    int i = 0;
    while (i < k)
    {
      int m = j + 1;
      arrayOfChar[j] = paramArrayOfChar[((paramArrayOfByte[i] & 0xF0) >>> 4)];
      j = m + 1;
      arrayOfChar[m] = paramArrayOfChar[(paramArrayOfByte[i] & 0xF)];
      i += 1;
    }
    return arrayOfChar;
  }
  
  public static String encodeHexStr(byte[] paramArrayOfByte)
  {
    return encodeHexStr(paramArrayOfByte, true);
  }
  
  public static String encodeHexStr(byte[] paramArrayOfByte, boolean paramBoolean)
  {
    if (paramBoolean) {}
    for (char[] arrayOfChar = DIGITS_LOWER;; arrayOfChar = DIGITS_UPPER) {
      return encodeHexStr(paramArrayOfByte, arrayOfChar);
    }
  }
  
  protected static String encodeHexStr(byte[] paramArrayOfByte, char[] paramArrayOfChar)
  {
    return new String(encodeHex(paramArrayOfByte, paramArrayOfChar));
  }
  
  public static void main(String[] paramArrayOfString)
  {
    paramArrayOfString = encodeHexStr("待转换字符串".getBytes());
    String str = new String(decodeHex(paramArrayOfString.toCharArray()));
    System.out.println("转换前：" + "待转换字符串");
    System.out.println("转换后：" + paramArrayOfString);
    System.out.println("还原后：" + str);
  }
  
  protected static int toDigit(char paramChar, int paramInt)
  {
    int i = Character.digit(paramChar, 16);
    if (i == -1) {
      throw new RuntimeException("Illegal hexadecimal character " + paramChar + " at index " + paramInt);
    }
    return i;
  }
}
