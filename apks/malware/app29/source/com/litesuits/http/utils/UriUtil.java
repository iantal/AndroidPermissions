package com.litesuits.http.utils;

import android.net.Uri;
import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

public class UriUtil
{
  public UriUtil() {}
  
  public static Set<String> getQueryParameterNames(Uri paramUri)
  {
    if (paramUri.isOpaque()) {
      return Collections.emptySet();
    }
    paramUri = paramUri.getEncodedQuery();
    if (paramUri == null) {
      return Collections.emptySet();
    }
    LinkedHashSet localLinkedHashSet = new LinkedHashSet();
    int j = 0;
    int i;
    do
    {
      int k = paramUri.indexOf('&', j);
      i = k;
      if (k == -1) {
        i = paramUri.length();
      }
      int m = paramUri.indexOf('=', j);
      if (m <= i)
      {
        k = m;
        if (m != -1) {}
      }
      else
      {
        k = i;
      }
      localLinkedHashSet.add(paramUri.substring(j, k));
      i += 1;
      j = i;
    } while (i < paramUri.length());
    return Collections.unmodifiableSet(localLinkedHashSet);
  }
  
  public static List<String> getQueryParameters(Uri paramUri, String paramString)
  {
    if (paramUri.isOpaque()) {
      return Collections.emptyList();
    }
    if (paramString == null) {
      throw new NullPointerException("key");
    }
    paramUri = paramUri.getEncodedQuery();
    if (paramUri == null) {
      return Collections.emptyList();
    }
    ArrayList localArrayList = new ArrayList();
    int j = 0;
    int m = paramUri.indexOf('&', j);
    int i;
    label67:
    int k;
    if (m != -1)
    {
      i = m;
      int n = paramUri.indexOf('=', j);
      if (n <= i)
      {
        k = n;
        if (n != -1) {}
      }
      else
      {
        k = i;
      }
      if ((k - j == paramString.length()) && (paramUri.regionMatches(j, paramString, 0, paramString.length())))
      {
        if (k != i) {
          break label156;
        }
        localArrayList.add("");
      }
    }
    for (;;)
    {
      if (m == -1) {
        break label174;
      }
      j = m + 1;
      break;
      i = paramUri.length();
      break label67;
      label156:
      localArrayList.add(paramUri.substring(k + 1, i));
    }
    label174:
    return Collections.unmodifiableList(localArrayList);
  }
}
