package com.litesuits.http.request;

import com.litesuits.http.data.TypeToken;
import com.litesuits.http.parser.impl.JsonParser;
import com.litesuits.http.request.param.HttpParamModel;
import java.lang.reflect.Type;

public class JsonRequest<T>
  extends AbstractRequest<T>
{
  protected JsonParser<T> jsonParser;
  private Type resultType;
  
  public JsonRequest(HttpParamModel paramHttpParamModel, TypeToken<T> paramTypeToken)
  {
    super(paramHttpParamModel);
    this.resultType = paramTypeToken.getType();
  }
  
  public JsonRequest(HttpParamModel paramHttpParamModel, Type paramType)
  {
    super(paramHttpParamModel);
    this.resultType = paramType;
  }
  
  public JsonRequest(String paramString, TypeToken<T> paramTypeToken)
  {
    super(paramString);
    this.resultType = paramTypeToken.getType();
  }
  
  public JsonRequest(String paramString, Type paramType)
  {
    super(paramString);
    this.resultType = paramType;
  }
  
  public JsonParser<T> getDataParser()
  {
    if (this.jsonParser == null) {
      this.jsonParser = new JsonParser(this, this.resultType);
    }
    return this.jsonParser;
  }
}
