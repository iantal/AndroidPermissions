package com.litesuits.http.request.content.multi;

import com.litesuits.http.log.HttpLog;
import com.litesuits.http.utils.StringCodingUtils;
import java.io.OutputStream;

public class BytesPart
  extends AbstractPart
{
  public static final String TAG = BytesPart.class.getSimpleName();
  public byte[] bytes;
  
  public BytesPart(String paramString, byte[] paramArrayOfByte)
  {
    this(paramString, paramArrayOfByte, null);
    this.bytes = paramArrayOfByte;
  }
  
  public BytesPart(String paramString1, byte[] paramArrayOfByte, String paramString2)
  {
    super(paramString1, paramString2);
    this.bytes = paramArrayOfByte;
  }
  
  protected byte[] createContentDisposition()
  {
    return StringCodingUtils.getBytes("Content-Disposition: form-data; name=\"" + this.key + "\"\r\n", infoCharset);
  }
  
  protected byte[] createContentType()
  {
    return StringCodingUtils.getBytes("Content-Type: " + this.mimeType + "\r\n", infoCharset);
  }
  
  public long getTotalLength()
  {
    if ((HttpLog.isPrint) && (HttpLog.isPrint)) {
      HttpLog.v(TAG, TAG + "内容长度 header ： " + this.header.length + " ,body: " + this.bytes.length + " ," + "换行：" + CR_LF.length);
    }
    return this.header.length + this.bytes.length + CR_LF.length;
  }
  
  public byte[] getTransferEncoding()
  {
    return TRANSFER_ENCODING_BINARY;
  }
  
  public void writeTo(OutputStream paramOutputStream)
  {
    paramOutputStream.write(this.bytes);
    paramOutputStream.write(CR_LF);
    updateProgress(this.bytes.length + CR_LF.length);
  }
}
