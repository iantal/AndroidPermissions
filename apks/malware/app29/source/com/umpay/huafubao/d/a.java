package com.umpay.huafubao.d;

import android.app.Dialog;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.Resources;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.telephony.TelephonyManager;
import android.text.SpannableStringBuilder;
import android.text.TextUtils;
import android.text.style.ForegroundColorSpan;
import android.widget.TextView;
import android.widget.Toast;
import com.umpay.huafubao.c.e;
import com.umpay.huafubao.c.g;
import com.umpay.huafubao.e.f;
import com.umpay.huafubao.service.AppUpgradeService;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.json.JSONException;
import org.json.JSONObject;

public final class a
{
  public static String a = "SMS_SEND_ACTION";
  public static String b = "SMS_DELIVERED_ACTION";
  private static boolean c = false;
  private static boolean d = false;
  
  public static String a(JSONObject paramJSONObject, String paramString)
  {
    if (paramJSONObject == null) {
      return "";
    }
    try
    {
      paramJSONObject = paramJSONObject.getString(paramString);
      return paramJSONObject;
    }
    catch (JSONException paramJSONObject) {}
    return "";
  }
  
  public static void a(Dialog paramDialog)
  {
    if (paramDialog != null) {
      paramDialog.dismiss();
    }
  }
  
  public static void a(Context paramContext, com.umpay.huafubao.e.d paramD)
  {
    NotificationManager localNotificationManager = (NotificationManager)paramContext.getSystemService("notification");
    Notification localNotification = new Notification();
    localNotification.icon = c(paramContext, "hfb_application", "drawable");
    localNotification.tickerText = paramD.b;
    localNotification.defaults = 1;
    localNotification.flags = 48;
    Object localObject = new Intent(paramContext, AppUpgradeService.class);
    ((Intent)localObject).putExtra("downloadUrl", paramD.c);
    localObject = PendingIntent.getService(paramContext, 0, (Intent)localObject, 134217728);
    localNotification.setLatestEventInfo(paramContext, "支付提示更新", paramD.b, (PendingIntent)localObject);
    localNotificationManager.notify(1, localNotification);
  }
  
  public static void a(Context paramContext, f paramF, String paramString)
  {
    new StringBuilder("checked ver:").append(c);
    if (c) {
      return;
    }
    e localE = new e(paramContext, g.i);
    localE.a("clientName", "RemoteBilling");
    localE.a("type", paramF.e);
    localE.a("versionCode", "10114");
    localE.a("merId", paramString);
    localE.a("clientType", "2");
    paramContext = new b(paramContext, paramContext);
    paramContext.e = true;
    paramContext.f = false;
    paramContext.d = true;
    com.umpay.huafubao.c.d.a(localE, paramContext);
  }
  
  public static void a(TextView paramTextView, String paramString)
  {
    if (TextUtils.isEmpty(paramString))
    {
      paramTextView.setVisibility(8);
      return;
    }
    paramTextView.setVisibility(0);
    paramTextView.setText(paramString);
  }
  
  public static boolean a(Context paramContext)
  {
    TelephonyManager localTelephonyManager = (TelephonyManager)paramContext.getSystemService("phone");
    Object localObject = localTelephonyManager.getSimSerialNumber();
    paramContext = (Context)localObject;
    if (!TextUtils.isEmpty((CharSequence)localObject)) {
      paramContext = ((String)localObject).substring(0, 6);
    }
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("getSimOperator()=" + localTelephonyManager.getSimOperator() + "\n");
    ((StringBuilder)localObject).append("getSimOperatorName()=" + localTelephonyManager.getSimOperatorName() + "\n");
    ((StringBuilder)localObject).append("getSimSerialNumber(iccid)=" + localTelephonyManager.getSimSerialNumber() + "\n");
    ((StringBuilder)localObject).append("getNetworkOperator()=" + localTelephonyManager.getNetworkOperator() + "\n");
    ((StringBuilder)localObject).append("getNetworkOperatorName(=)" + localTelephonyManager.getNetworkOperatorName() + "\n");
    ((StringBuilder)localObject).append("getNetworkType()=" + localTelephonyManager.getNetworkType() + "\n");
    localTelephonyManager.getNetworkType();
    localTelephonyManager.getSimState();
    if (localTelephonyManager.getNetworkType() == 0) {
      return false;
    }
    if (("46000,46002,46007".contains(localTelephonyManager.getSimOperator())) && (!TextUtils.isEmpty(localTelephonyManager.getSimOperator()))) {
      return true;
    }
    if (("46000,46002,46007".contains(localTelephonyManager.getNetworkOperator())) && (!TextUtils.isEmpty(localTelephonyManager.getNetworkOperator()))) {
      return true;
    }
    if (("CMCC".equals(localTelephonyManager.getSimOperatorName())) && (!TextUtils.isEmpty(localTelephonyManager.getSimOperatorName()))) {
      return true;
    }
    if (("中国移动".equals(localTelephonyManager.getNetworkOperatorName())) && (!TextUtils.isEmpty(localTelephonyManager.getNetworkOperatorName()))) {
      return true;
    }
    return "898600".equals(paramContext);
  }
  
  public static boolean a(Context paramContext, String paramString)
  {
    boolean bool = a(paramString);
    if (!bool) {
      c.a(paramContext, "请输入正确的中国移动手机号码。", c.a);
    }
    return bool;
  }
  
  public static boolean a(Context paramContext, String paramString1, String paramString2)
  {
    boolean bool = TextUtils.isEmpty(paramString1);
    if (bool) {
      c.a(paramContext, paramString2, c.a);
    }
    return bool;
  }
  
  public static boolean a(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {}
    do
    {
      return false;
      paramString = paramString.trim().replace(" ", "");
    } while ((paramString.length() < 11) || (!Pattern.compile("^(13[4-9]|15[0-2,7-9]|18[2,3,7,8]|147)\\d{8}$").matcher(paramString).matches()));
    return true;
  }
  
  public static boolean a(String paramString1, String paramString2)
  {
    paramString2 = new SimpleDateFormat(paramString2, Locale.ENGLISH);
    try
    {
      Date localDate = paramString2.parse(paramString1);
      return paramString1.equals(paramString2.format(localDate));
    }
    catch (ParseException paramString1) {}
    return false;
  }
  
  public static boolean a(Map paramMap)
  {
    return (paramMap == null) || (paramMap.size() == 0);
  }
  
  public static int b(Context paramContext, String paramString)
  {
    return c(paramContext, paramString, "drawable");
  }
  
  public static int b(JSONObject paramJSONObject, String paramString)
  {
    if (paramJSONObject == null) {
      return 0;
    }
    try
    {
      int i = paramJSONObject.getInt(paramString);
      return i;
    }
    catch (JSONException paramJSONObject) {}
    return 0;
  }
  
  public static SpannableStringBuilder b(String paramString1, String paramString2)
  {
    if (TextUtils.isEmpty(paramString1)) {}
    while (TextUtils.isEmpty(paramString2)) {
      return null;
    }
    int i = paramString1.indexOf(paramString2);
    int j = paramString2.length();
    paramString1 = new SpannableStringBuilder(paramString1);
    paramString1.setSpan(new ForegroundColorSpan(-65536), i, j + i, 34);
    return paramString1;
  }
  
  public static String b(Context paramContext)
  {
    String str = ((TelephonyManager)paramContext.getSystemService("phone")).getDeviceId();
    paramContext = str;
    if (TextUtils.isEmpty(str)) {
      paramContext = "";
    }
    return paramContext;
  }
  
  public static String b(String paramString)
  {
    String str = paramString;
    if (TextUtils.isEmpty(paramString)) {
      str = "";
    }
    return str;
  }
  
  /* Error */
  public static void b(Context paramContext, String paramString1, String paramString2)
  {
    // Byte code:
    //   0: aload_1
    //   1: invokestatic 186	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4: ifeq +4 -> 8
    //   7: return
    //   8: new 117	java/lang/StringBuilder
    //   11: dup
    //   12: ldc_w 376
    //   15: invokespecial 122	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   18: aload_1
    //   19: invokevirtual 221	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22: ldc_w 378
    //   25: invokevirtual 221	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28: aload_2
    //   29: invokevirtual 221	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32: pop
    //   33: invokestatic 384	android/telephony/SmsManager:getDefault	()Landroid/telephony/SmsManager;
    //   36: astore_3
    //   37: new 84	android/content/Intent
    //   40: dup
    //   41: getstatic 16	com/umpay/huafubao/d/a:a	Ljava/lang/String;
    //   44: invokespecial 385	android/content/Intent:<init>	(Ljava/lang/String;)V
    //   47: astore 4
    //   49: new 84	android/content/Intent
    //   52: dup
    //   53: getstatic 20	com/umpay/huafubao/d/a:b	Ljava/lang/String;
    //   56: invokespecial 385	android/content/Intent:<init>	(Ljava/lang/String;)V
    //   59: astore 5
    //   61: aload_0
    //   62: invokevirtual 389	android/content/Context:getApplicationContext	()Landroid/content/Context;
    //   65: invokestatic 395	java/lang/System:currentTimeMillis	()J
    //   68: l2i
    //   69: aload 4
    //   71: ldc 98
    //   73: invokestatic 398	android/app/PendingIntent:getBroadcast	(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;
    //   76: astore 4
    //   78: aload_0
    //   79: invokevirtual 389	android/content/Context:getApplicationContext	()Landroid/content/Context;
    //   82: invokestatic 395	java/lang/System:currentTimeMillis	()J
    //   85: l2i
    //   86: aload 5
    //   88: ldc 98
    //   90: invokestatic 398	android/app/PendingIntent:getBroadcast	(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;
    //   93: astore_0
    //   94: aload_3
    //   95: aload_2
    //   96: invokevirtual 402	android/telephony/SmsManager:divideMessage	(Ljava/lang/String;)Ljava/util/ArrayList;
    //   99: invokeinterface 408 1 0
    //   104: astore_2
    //   105: aload_2
    //   106: invokeinterface 413 1 0
    //   111: ifeq -104 -> 7
    //   114: aload_3
    //   115: aload_1
    //   116: aconst_null
    //   117: aload_2
    //   118: invokeinterface 417 1 0
    //   123: checkcast 208	java/lang/String
    //   126: aload 4
    //   128: aload_0
    //   129: invokevirtual 421	android/telephony/SmsManager:sendTextMessage	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V
    //   132: goto -27 -> 105
    //   135: astore_0
    //   136: new 117	java/lang/StringBuilder
    //   139: dup
    //   140: ldc_w 423
    //   143: invokespecial 122	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   146: aload_0
    //   147: invokevirtual 426	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   150: invokevirtual 221	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   153: pop
    //   154: aload_0
    //   155: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	156	0	paramContext	Context
    //   0	156	1	paramString1	String
    //   0	156	2	paramString2	String
    //   36	79	3	localSmsManager	android.telephony.SmsManager
    //   47	80	4	localObject	Object
    //   59	28	5	localIntent	Intent
    // Exception table:
    //   from	to	target	type
    //   94	105	135	java/lang/Exception
    //   105	132	135	java/lang/Exception
  }
  
  public static int c(Context paramContext, String paramString)
  {
    return c(paramContext, paramString, "id");
  }
  
  private static int c(Context paramContext, String paramString1, String paramString2)
  {
    PackageManager localPackageManager = paramContext.getPackageManager();
    try
    {
      int i = localPackageManager.getResourcesForApplication(paramContext.getPackageName()).getIdentifier(paramString1, paramString2, paramContext.getPackageName());
      return i;
    }
    catch (PackageManager.NameNotFoundException paramContext) {}
    return 0;
  }
  
  public static String c(Context paramContext)
  {
    String str = ((TelephonyManager)paramContext.getSystemService("phone")).getSubscriberId();
    paramContext = str;
    if (TextUtils.isEmpty(str)) {
      paramContext = "";
    }
    return paramContext;
  }
  
  public static String c(String paramString)
  {
    if (TextUtils.isEmpty(paramString))
    {
      paramString = "";
      return paramString;
    }
    label22:
    String str;
    long l;
    if (TextUtils.isEmpty(paramString))
    {
      paramString = "";
      str = Double.parseDouble(paramString);
      if (str.endsWith(".0")) {
        return str.substring(0, str.length() - 2);
      }
    }
    else if (paramString.length() != 0)
    {
      str = paramString;
      if (paramString.charAt(0) == '+') {
        str = paramString.substring(1);
      }
      l = Long.parseLong(str);
      if (l >= 0L) {
        break label360;
      }
      l = Math.abs(l);
    }
    label360:
    for (int i = 1;; i = 0)
    {
      paramString = Long.toString(l);
      if (paramString.length() == 1)
      {
        if (i != 0)
        {
          paramString = "-0.0" + paramString;
          break label22;
          paramString = "";
          break label22;
        }
        paramString = "0.0" + paramString;
        break label22;
      }
      if (paramString.length() == 2)
      {
        if (i != 0)
        {
          paramString = "-0." + paramString;
          break label22;
        }
        paramString = "0." + paramString;
        break label22;
      }
      if (i != 0)
      {
        paramString = "-" + paramString.substring(0, paramString.length() - 2) + "." + paramString.substring(paramString.length() - 2);
        break label22;
      }
      paramString = paramString.substring(0, paramString.length() - 2) + "." + paramString.substring(paramString.length() - 2);
      break label22;
      paramString = str;
      if (!str.endsWith(".00")) {
        break;
      }
      return str.substring(0, str.length() - 3);
    }
  }
  
  public static int d(Context paramContext, String paramString)
  {
    return c(paramContext, paramString, "layout");
  }
  
  public static String d(Context paramContext)
  {
    String str = ((TelephonyManager)paramContext.getSystemService("phone")).getSimSerialNumber();
    paramContext = str;
    if (TextUtils.isEmpty(str)) {
      paramContext = "";
    }
    return paramContext;
  }
  
  public static void e(Context paramContext, String paramString)
  {
    if (!e(paramContext)) {
      return;
    }
    com.umpay.huafubao.c.d.a(paramContext, paramString);
  }
  
  public static boolean e(Context paramContext)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    if (paramContext != null) {
      return paramContext.isAvailable();
    }
    return false;
  }
  
  public static void f(Context paramContext, String paramString)
  {
    Toast.makeText(paramContext, paramString, 0).show();
  }
}
