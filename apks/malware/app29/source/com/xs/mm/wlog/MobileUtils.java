package com.xs.mm.wlog;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Build;
import android.text.TextUtils;
import android.util.Log;
import java.security.MessageDigest;
import java.util.Locale;
import java.util.Random;

public final class MobileUtils
{
  public MobileUtils() {}
  
  public static String access_netstate(Context paramContext)
  {
    return CheckInformation.getInsance().netStat.trim();
  }
  
  private static String buildMD5(String paramString)
  {
    int j = 0;
    for (;;)
    {
      int i;
      try
      {
        Object localObject = MessageDigest.getInstance("MD5");
        paramString = paramString.toCharArray();
        byte[] arrayOfByte = new byte[paramString.length];
        i = 0;
        if (i >= paramString.length)
        {
          paramString = ((MessageDigest)localObject).digest(arrayOfByte);
          localObject = new StringBuffer();
          i = j;
          if (i >= paramString.length) {
            return ((StringBuffer)localObject).toString();
          }
          j = paramString[i] & 0xFF;
          if (j < 16) {
            ((StringBuffer)localObject).append("0");
          }
          ((StringBuffer)localObject).append(Integer.toHexString(j));
          i += 1;
          continue;
        }
        arrayOfByte[i] = ((byte)paramString[i]);
      }
      catch (Exception paramString)
      {
        paramString.printStackTrace();
        return "";
      }
      i += 1;
    }
  }
  
  private static boolean checkPermission(Context paramContext, String paramString)
  {
    boolean bool = false;
    try
    {
      int i = paramContext.getPackageManager().checkPermission(paramString, paramContext.getPackageName());
      if (i == 0) {
        bool = true;
      }
      return bool;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return false;
  }
  
  protected static String filterStr900(String paramString)
  {
    if (paramString == null) {
      return "";
    }
    String str = paramString;
    if (paramString.length() > 901) {
      str = paramString.substring(0, 900);
    }
    return str.replace("\\", "").replace("|", "");
  }
  
  public static String get18digiestData(Context paramContext)
  {
    try
    {
      String str = getDeviceId(paramContext);
      if ((str != null) && (str.length() > 6)) {
        return String.valueOf(buildMD5(str).toCharArray(), 7, 18);
      }
      str = readMAC(paramContext);
      if ((str != null) && (str.length() >= 9)) {
        return String.valueOf(buildMD5(str).toCharArray(), 7, 18);
      }
      paramContext = getSubscriberId(paramContext);
      if ((paramContext != null) && (paramContext.length() != 0)) {
        return String.valueOf(buildMD5(paramContext).toCharArray(), 7, 18);
      }
      paramContext = String.valueOf(buildMD5(filterStr900(Build.MODEL)).toCharArray(), 7, 18);
      return paramContext;
    }
    catch (Exception paramContext) {}
    return "";
  }
  
  public static int getApplicationUid(Context paramContext)
  {
    try
    {
      int i = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 1).uid;
      return i;
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      paramContext.printStackTrace();
    }
    return -1;
  }
  
  public static String getBuild_MANUFACTURER()
  {
    return filterStr900(CheckInformation.getInsance().buildMANUFACTURER);
  }
  
  public static String getBuild_MODEL()
  {
    return filterStr900(CheckInformation.getInsance().buildMODEL);
  }
  
  public static String getCountry()
  {
    try
    {
      String str1 = Locale.getDefault().getCountry();
      return isEmpty(str1);
    }
    catch (Exception localException)
    {
      for (;;)
      {
        String str2 = "";
      }
    }
  }
  
  /* Error */
  public static String getCpufreq()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aconst_null
    //   4: astore_0
    //   5: aconst_null
    //   6: astore_3
    //   7: new 168	java/io/FileReader
    //   10: dup
    //   11: ldc -86
    //   13: invokespecial 173	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   16: astore_1
    //   17: new 175	java/io/BufferedReader
    //   20: dup
    //   21: aload_1
    //   22: invokespecial 178	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   25: invokevirtual 181	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   28: invokevirtual 27	java/lang/String:trim	()Ljava/lang/String;
    //   31: astore_0
    //   32: aload_1
    //   33: invokevirtual 184	java/io/FileReader:close	()V
    //   36: aload_0
    //   37: areturn
    //   38: astore_1
    //   39: aload_1
    //   40: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   43: aload_0
    //   44: areturn
    //   45: astore_2
    //   46: aload_1
    //   47: astore_0
    //   48: aload_2
    //   49: invokevirtual 186	java/io/FileNotFoundException:printStackTrace	()V
    //   52: aload_1
    //   53: invokevirtual 184	java/io/FileReader:close	()V
    //   56: ldc 70
    //   58: areturn
    //   59: astore_0
    //   60: aload_0
    //   61: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   64: goto -8 -> 56
    //   67: astore_2
    //   68: aload_1
    //   69: astore_0
    //   70: aload_2
    //   71: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   74: aload_1
    //   75: invokevirtual 184	java/io/FileReader:close	()V
    //   78: goto -22 -> 56
    //   81: astore_0
    //   82: aload_0
    //   83: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   86: goto -30 -> 56
    //   89: astore_2
    //   90: aload_0
    //   91: astore_1
    //   92: aload_2
    //   93: astore_0
    //   94: aload_1
    //   95: invokevirtual 184	java/io/FileReader:close	()V
    //   98: aload_0
    //   99: athrow
    //   100: astore_1
    //   101: aload_1
    //   102: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   105: goto -7 -> 98
    //   108: astore_0
    //   109: goto -15 -> 94
    //   112: astore_2
    //   113: aload 4
    //   115: astore_1
    //   116: goto -48 -> 68
    //   119: astore_2
    //   120: aload_3
    //   121: astore_1
    //   122: goto -76 -> 46
    // Local variable table:
    //   start	length	slot	name	signature
    //   4	44	0	localObject1	Object
    //   59	2	0	localIOException1	java.io.IOException
    //   69	1	0	localObject2	Object
    //   81	10	0	localIOException2	java.io.IOException
    //   93	6	0	localObject3	Object
    //   108	1	0	localObject4	Object
    //   16	17	1	localFileReader	java.io.FileReader
    //   38	37	1	localIOException3	java.io.IOException
    //   91	4	1	localIOException4	java.io.IOException
    //   100	2	1	localIOException5	java.io.IOException
    //   115	7	1	localObject5	Object
    //   45	4	2	localFileNotFoundException1	java.io.FileNotFoundException
    //   67	4	2	localIOException6	java.io.IOException
    //   89	4	2	localObject6	Object
    //   112	1	2	localIOException7	java.io.IOException
    //   119	1	2	localFileNotFoundException2	java.io.FileNotFoundException
    //   6	115	3	localObject7	Object
    //   1	113	4	localObject8	Object
    // Exception table:
    //   from	to	target	type
    //   32	36	38	java/io/IOException
    //   17	32	45	java/io/FileNotFoundException
    //   52	56	59	java/io/IOException
    //   17	32	67	java/io/IOException
    //   74	78	81	java/io/IOException
    //   7	17	89	finally
    //   48	52	89	finally
    //   70	74	89	finally
    //   94	98	100	java/io/IOException
    //   17	32	108	finally
    //   7	17	112	java/io/IOException
    //   7	17	119	java/io/FileNotFoundException
  }
  
  /* Error */
  public static String getCpuinfo_max_freq()
  {
    // Byte code:
    //   0: ldc 70
    //   2: astore_3
    //   3: aconst_null
    //   4: astore_2
    //   5: aconst_null
    //   6: astore_1
    //   7: new 189	java/lang/ProcessBuilder
    //   10: dup
    //   11: iconst_2
    //   12: anewarray 23	java/lang/String
    //   15: dup
    //   16: iconst_0
    //   17: ldc -65
    //   19: aastore
    //   20: dup
    //   21: iconst_1
    //   22: ldc -63
    //   24: aastore
    //   25: invokespecial 196	java/lang/ProcessBuilder:<init>	([Ljava/lang/String;)V
    //   28: invokevirtual 200	java/lang/ProcessBuilder:start	()Ljava/lang/Process;
    //   31: invokevirtual 206	java/lang/Process:getInputStream	()Ljava/io/InputStream;
    //   34: astore 4
    //   36: aload 4
    //   38: astore_1
    //   39: aload 4
    //   41: astore_2
    //   42: bipush 24
    //   44: newarray byte
    //   46: astore 5
    //   48: aload 4
    //   50: astore_1
    //   51: aload 4
    //   53: astore_2
    //   54: aload 4
    //   56: aload 5
    //   58: invokevirtual 212	java/io/InputStream:read	([B)I
    //   61: istore_0
    //   62: iload_0
    //   63: iconst_m1
    //   64: if_icmpne +13 -> 77
    //   67: aload 4
    //   69: invokevirtual 213	java/io/InputStream:close	()V
    //   72: aload_3
    //   73: invokevirtual 27	java/lang/String:trim	()Ljava/lang/String;
    //   76: areturn
    //   77: aload 4
    //   79: astore_1
    //   80: aload 4
    //   82: astore_2
    //   83: new 215	java/lang/StringBuilder
    //   86: dup
    //   87: aload_3
    //   88: invokestatic 218	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   91: invokespecial 219	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   94: new 23	java/lang/String
    //   97: dup
    //   98: aload 5
    //   100: invokespecial 222	java/lang/String:<init>	([B)V
    //   103: invokevirtual 225	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   106: invokevirtual 226	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   109: astore_3
    //   110: goto -62 -> 48
    //   113: astore_3
    //   114: aload_1
    //   115: astore_2
    //   116: aload_3
    //   117: invokevirtual 68	java/lang/Exception:printStackTrace	()V
    //   120: ldc 70
    //   122: astore_3
    //   123: aload_1
    //   124: invokevirtual 213	java/io/InputStream:close	()V
    //   127: goto -55 -> 72
    //   130: astore_1
    //   131: aload_1
    //   132: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   135: goto -63 -> 72
    //   138: astore_1
    //   139: aload_2
    //   140: invokevirtual 213	java/io/InputStream:close	()V
    //   143: aload_1
    //   144: athrow
    //   145: astore_2
    //   146: aload_2
    //   147: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   150: goto -7 -> 143
    //   153: astore_1
    //   154: aload_1
    //   155: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   158: goto -86 -> 72
    // Local variable table:
    //   start	length	slot	name	signature
    //   61	4	0	i	int
    //   6	118	1	localObject1	Object
    //   130	2	1	localIOException1	java.io.IOException
    //   138	6	1	localObject2	Object
    //   153	2	1	localIOException2	java.io.IOException
    //   4	136	2	localObject3	Object
    //   145	2	2	localIOException3	java.io.IOException
    //   2	108	3	str1	String
    //   113	4	3	localException	Exception
    //   122	1	3	str2	String
    //   34	47	4	localInputStream	java.io.InputStream
    //   46	53	5	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   7	36	113	java/lang/Exception
    //   42	48	113	java/lang/Exception
    //   54	62	113	java/lang/Exception
    //   83	110	113	java/lang/Exception
    //   123	127	130	java/io/IOException
    //   7	36	138	finally
    //   42	48	138	finally
    //   54	62	138	finally
    //   83	110	138	finally
    //   116	120	138	finally
    //   139	143	145	java/io/IOException
    //   67	72	153	java/io/IOException
  }
  
  public static String getDeviceId(Context paramContext)
  {
    try
    {
      paramContext = CheckInformation.getInsance().imei;
      return filterStr900(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = "";
      }
    }
  }
  
  public static String getLocaleLanguage()
  {
    try
    {
      String str1 = Locale.getDefault().getLanguage();
      return isEmpty(str1);
    }
    catch (Exception localException)
    {
      for (;;)
      {
        String str2 = "";
      }
    }
  }
  
  public static String getMOBILE_APPKEY(Context paramContext)
  {
    if (TextUtils.isEmpty(CheckInformation.getInsance().appId)) {
      return "00000";
    }
    return CheckInformation.getInsance().appId;
  }
  
  public static String getMOBILE_CHANNEL(Context paramContext)
  {
    return filterStr900(CheckInformation.getInsance().channelId);
  }
  
  /* Error */
  public static String getMemeryInfo()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_2
    //   2: aconst_null
    //   3: astore_1
    //   4: new 168	java/io/FileReader
    //   7: dup
    //   8: ldc -5
    //   10: invokespecial 173	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   13: astore_0
    //   14: new 175	java/io/BufferedReader
    //   17: dup
    //   18: aload_0
    //   19: sipush 8192
    //   22: invokespecial 254	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   25: astore_2
    //   26: aload_2
    //   27: invokevirtual 181	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   30: astore_1
    //   31: aload_1
    //   32: ifnonnull +22 -> 54
    //   35: aload_0
    //   36: invokevirtual 184	java/io/FileReader:close	()V
    //   39: aload_2
    //   40: invokevirtual 255	java/io/BufferedReader:close	()V
    //   43: ldc 70
    //   45: areturn
    //   46: astore_0
    //   47: aload_0
    //   48: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   51: goto -8 -> 43
    //   54: aload_1
    //   55: aload_1
    //   56: ldc_w 257
    //   59: invokevirtual 261	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   62: iconst_2
    //   63: iadd
    //   64: aload_1
    //   65: ldc_w 263
    //   68: invokevirtual 261	java/lang/String:indexOf	(Ljava/lang/String;)I
    //   71: iconst_1
    //   72: isub
    //   73: invokevirtual 95	java/lang/String:substring	(II)Ljava/lang/String;
    //   76: invokevirtual 27	java/lang/String:trim	()Ljava/lang/String;
    //   79: astore_1
    //   80: ldc_w 265
    //   83: aload_1
    //   84: invokestatic 271	com/xs/mm/wlog/LogUtil:printLog	(Ljava/lang/String;Ljava/lang/String;)V
    //   87: aload_1
    //   88: invokestatic 161	com/xs/mm/wlog/MobileUtils:isEmpty	(Ljava/lang/String;)Ljava/lang/String;
    //   91: astore_1
    //   92: aload_0
    //   93: invokevirtual 184	java/io/FileReader:close	()V
    //   96: aload_2
    //   97: invokevirtual 255	java/io/BufferedReader:close	()V
    //   100: aload_1
    //   101: areturn
    //   102: astore_0
    //   103: aload_0
    //   104: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   107: aload_1
    //   108: areturn
    //   109: astore_2
    //   110: aconst_null
    //   111: astore_0
    //   112: aload_2
    //   113: invokevirtual 68	java/lang/Exception:printStackTrace	()V
    //   116: aload_0
    //   117: invokevirtual 184	java/io/FileReader:close	()V
    //   120: aload_1
    //   121: invokevirtual 255	java/io/BufferedReader:close	()V
    //   124: ldc 70
    //   126: areturn
    //   127: astore_0
    //   128: aload_0
    //   129: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   132: goto -8 -> 124
    //   135: astore_3
    //   136: aconst_null
    //   137: astore_0
    //   138: aload_2
    //   139: astore_1
    //   140: aload_3
    //   141: astore_2
    //   142: aload_2
    //   143: astore_3
    //   144: aload_1
    //   145: astore_2
    //   146: aload_3
    //   147: astore_1
    //   148: aload_0
    //   149: invokevirtual 184	java/io/FileReader:close	()V
    //   152: aload_2
    //   153: invokevirtual 255	java/io/BufferedReader:close	()V
    //   156: aload_1
    //   157: athrow
    //   158: astore_0
    //   159: aload_0
    //   160: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   163: goto -7 -> 156
    //   166: astore_1
    //   167: aconst_null
    //   168: astore_2
    //   169: goto -21 -> 148
    //   172: astore_1
    //   173: goto -25 -> 148
    //   176: astore_2
    //   177: goto -65 -> 112
    //   180: astore_3
    //   181: aload_2
    //   182: astore_1
    //   183: aload_3
    //   184: astore_2
    //   185: goto -73 -> 112
    //   188: astore_2
    //   189: goto -47 -> 142
    // Local variable table:
    //   start	length	slot	name	signature
    //   13	23	0	localFileReader	java.io.FileReader
    //   46	47	0	localIOException1	java.io.IOException
    //   102	2	0	localIOException2	java.io.IOException
    //   111	6	0	localObject1	Object
    //   127	2	0	localIOException3	java.io.IOException
    //   137	12	0	localObject2	Object
    //   158	2	0	localIOException4	java.io.IOException
    //   3	154	1	localObject3	Object
    //   166	1	1	localObject4	Object
    //   172	1	1	localObject5	Object
    //   182	1	1	localException1	Exception
    //   1	96	2	localBufferedReader	java.io.BufferedReader
    //   109	30	2	localException2	Exception
    //   141	28	2	localObject6	Object
    //   176	6	2	localException3	Exception
    //   184	1	2	localObject7	Object
    //   188	1	2	localObject8	Object
    //   135	6	3	localObject9	Object
    //   143	4	3	localObject10	Object
    //   180	4	3	localException4	Exception
    // Exception table:
    //   from	to	target	type
    //   35	43	46	java/io/IOException
    //   92	100	102	java/io/IOException
    //   4	14	109	java/lang/Exception
    //   116	124	127	java/io/IOException
    //   4	14	135	finally
    //   148	156	158	java/io/IOException
    //   14	26	166	finally
    //   26	31	172	finally
    //   54	92	172	finally
    //   14	26	176	java/lang/Exception
    //   26	31	180	java/lang/Exception
    //   54	92	180	java/lang/Exception
    //   112	116	188	finally
  }
  
  public static int getMetrics_density(Context paramContext)
  {
    try
    {
      int i = CheckInformation.getInsance().density;
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  public static int getMetrics_densityDpi(Context paramContext)
  {
    try
    {
      int i = CheckInformation.getInsance().densityDpi;
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  public static int getMetrics_heightPixels(Context paramContext)
  {
    try
    {
      int i = CheckInformation.getInsance().disHeight;
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  public static int getMetrics_widthPixels(Context paramContext)
  {
    try
    {
      int i = CheckInformation.getInsance().disWidth;
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return 0;
  }
  
  public static String getNetworkOperatorName(Context paramContext)
  {
    try
    {
      paramContext = CheckInformation.getInsance().networkOperatorName;
      return isEmpty(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
        paramContext = "";
      }
    }
  }
  
  public static String getPackageName(Context paramContext)
  {
    try
    {
      paramContext = CheckInformation.getInsance().packageName;
      return isEmpty(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = "";
      }
    }
  }
  
  public static String getSessionId(Context paramContext, String paramString)
  {
    try
    {
      int i = new Random().nextInt(10);
      paramContext = String.valueOf(buildMD5(System.currentTimeMillis() + paramString + getDeviceId(paramContext) + readMAC(paramContext) + i).toCharArray(), 8, 16);
      return isEmpty(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = "";
      }
    }
  }
  
  public static String getSubscriberId(Context paramContext)
  {
    try
    {
      paramContext = CheckInformation.getInsance().imsi.trim();
      LogUtil.printLog("MobileUtils", paramContext);
      return isEmpty(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = "";
        Log.i("MobileUtils", "can't not read imsi");
      }
    }
  }
  
  /* Error */
  public static long[] getTcp_rcv_AND_Tcp_snd(Context paramContext)
  {
    // Byte code:
    //   0: lconst_0
    //   1: lstore 8
    //   3: aconst_null
    //   4: astore 11
    //   6: aload_0
    //   7: invokestatic 329	com/xs/mm/wlog/MobileUtils:getApplicationUid	(Landroid/content/Context;)I
    //   10: istore_1
    //   11: new 215	java/lang/StringBuilder
    //   14: dup
    //   15: ldc_w 331
    //   18: invokespecial 219	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   21: iload_1
    //   22: invokevirtual 315	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   25: ldc_w 333
    //   28: invokevirtual 225	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31: invokevirtual 226	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   34: astore_0
    //   35: new 215	java/lang/StringBuilder
    //   38: dup
    //   39: ldc_w 331
    //   42: invokespecial 219	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   45: iload_1
    //   46: invokevirtual 315	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   49: ldc_w 335
    //   52: invokevirtual 225	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   55: invokevirtual 226	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   58: astore 12
    //   60: new 168	java/io/FileReader
    //   63: dup
    //   64: aload_0
    //   65: invokespecial 173	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   68: astore 10
    //   70: new 175	java/io/BufferedReader
    //   73: dup
    //   74: aload 10
    //   76: sipush 500
    //   79: invokespecial 254	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   82: astore_0
    //   83: aload_0
    //   84: invokevirtual 181	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   87: invokevirtual 336	java/lang/String:toString	()Ljava/lang/String;
    //   90: invokevirtual 27	java/lang/String:trim	()Ljava/lang/String;
    //   93: invokestatic 342	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   96: lstore_2
    //   97: aload 10
    //   99: invokevirtual 184	java/io/FileReader:close	()V
    //   102: aload_0
    //   103: invokevirtual 255	java/io/BufferedReader:close	()V
    //   106: aconst_null
    //   107: astore_0
    //   108: aconst_null
    //   109: astore 10
    //   111: new 168	java/io/FileReader
    //   114: dup
    //   115: aload 12
    //   117: invokespecial 173	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   120: astore 11
    //   122: new 175	java/io/BufferedReader
    //   125: dup
    //   126: aload 11
    //   128: sipush 500
    //   131: invokespecial 254	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   134: astore 10
    //   136: aload 10
    //   138: invokevirtual 181	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   141: invokevirtual 336	java/lang/String:toString	()Ljava/lang/String;
    //   144: invokevirtual 27	java/lang/String:trim	()Ljava/lang/String;
    //   147: invokestatic 342	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   150: lstore 4
    //   152: aload 11
    //   154: invokevirtual 184	java/io/FileReader:close	()V
    //   157: aload 10
    //   159: invokevirtual 255	java/io/BufferedReader:close	()V
    //   162: ldc_w 265
    //   165: new 215	java/lang/StringBuilder
    //   168: dup
    //   169: ldc_w 344
    //   172: invokespecial 219	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   175: lload_2
    //   176: invokevirtual 347	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   179: ldc_w 349
    //   182: invokevirtual 225	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   185: lload 4
    //   187: invokevirtual 347	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   190: invokevirtual 226	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   193: invokestatic 271	com/xs/mm/wlog/LogUtil:printLog	(Ljava/lang/String;Ljava/lang/String;)V
    //   196: lload_2
    //   197: lstore 6
    //   199: lload_2
    //   200: lconst_0
    //   201: lcmp
    //   202: ifge +6 -> 208
    //   205: lconst_0
    //   206: lstore 6
    //   208: lload 4
    //   210: lconst_0
    //   211: lcmp
    //   212: ifge +262 -> 474
    //   215: lload 8
    //   217: lstore_2
    //   218: iconst_2
    //   219: newarray long
    //   221: dup
    //   222: iconst_0
    //   223: lload 6
    //   225: lastore
    //   226: dup
    //   227: iconst_1
    //   228: lload_2
    //   229: lastore
    //   230: areturn
    //   231: astore_0
    //   232: aconst_null
    //   233: astore_0
    //   234: aconst_null
    //   235: astore 10
    //   237: aload 10
    //   239: ifnull +224 -> 463
    //   242: aload 10
    //   244: invokevirtual 184	java/io/FileReader:close	()V
    //   247: aload_0
    //   248: invokevirtual 255	java/io/BufferedReader:close	()V
    //   251: aconst_null
    //   252: astore_0
    //   253: aconst_null
    //   254: astore 10
    //   256: lconst_0
    //   257: lstore_2
    //   258: goto -147 -> 111
    //   261: astore_0
    //   262: aconst_null
    //   263: astore 10
    //   265: aload 10
    //   267: ifnull +13 -> 280
    //   270: aload 10
    //   272: invokevirtual 184	java/io/FileReader:close	()V
    //   275: aload 11
    //   277: invokevirtual 255	java/io/BufferedReader:close	()V
    //   280: aload_0
    //   281: athrow
    //   282: astore 10
    //   284: aload 10
    //   286: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   289: goto -9 -> 280
    //   292: astore 11
    //   294: aload 11
    //   296: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   299: lconst_0
    //   300: lstore_2
    //   301: goto -190 -> 111
    //   304: astore 11
    //   306: aload 11
    //   308: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   311: goto -200 -> 111
    //   314: astore 11
    //   316: aload 10
    //   318: ifnull +150 -> 468
    //   321: aload 10
    //   323: invokevirtual 184	java/io/FileReader:close	()V
    //   326: aload_0
    //   327: invokevirtual 255	java/io/BufferedReader:close	()V
    //   330: lconst_0
    //   331: lstore 4
    //   333: goto -171 -> 162
    //   336: astore_0
    //   337: aload_0
    //   338: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   341: lconst_0
    //   342: lstore 4
    //   344: goto -182 -> 162
    //   347: astore 11
    //   349: aload 10
    //   351: astore 12
    //   353: aload_0
    //   354: astore 10
    //   356: aload 11
    //   358: astore_0
    //   359: aload 12
    //   361: ifnull +13 -> 374
    //   364: aload 12
    //   366: invokevirtual 184	java/io/FileReader:close	()V
    //   369: aload 10
    //   371: invokevirtual 255	java/io/BufferedReader:close	()V
    //   374: aload_0
    //   375: athrow
    //   376: astore 10
    //   378: aload 10
    //   380: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   383: goto -9 -> 374
    //   386: astore_0
    //   387: aload_0
    //   388: invokevirtual 185	java/io/IOException:printStackTrace	()V
    //   391: goto -229 -> 162
    //   394: astore 12
    //   396: aload_0
    //   397: astore 10
    //   399: aload 12
    //   401: astore_0
    //   402: aload 11
    //   404: astore 12
    //   406: goto -47 -> 359
    //   409: astore_0
    //   410: aload 11
    //   412: astore 12
    //   414: goto -55 -> 359
    //   417: astore 10
    //   419: aload 11
    //   421: astore 10
    //   423: goto -107 -> 316
    //   426: astore_0
    //   427: aload 10
    //   429: astore_0
    //   430: aload 11
    //   432: astore 10
    //   434: goto -118 -> 316
    //   437: astore_0
    //   438: goto -173 -> 265
    //   441: astore 12
    //   443: aload_0
    //   444: astore 11
    //   446: aload 12
    //   448: astore_0
    //   449: goto -184 -> 265
    //   452: astore_0
    //   453: aconst_null
    //   454: astore_0
    //   455: goto -218 -> 237
    //   458: astore 11
    //   460: goto -223 -> 237
    //   463: lconst_0
    //   464: lstore_2
    //   465: goto -354 -> 111
    //   468: lconst_0
    //   469: lstore 4
    //   471: goto -309 -> 162
    //   474: lload 4
    //   476: lstore_2
    //   477: goto -259 -> 218
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	480	0	paramContext	Context
    //   10	36	1	i	int
    //   96	381	2	l1	long
    //   150	325	4	l2	long
    //   197	27	6	l3	long
    //   1	215	8	l4	long
    //   68	203	10	localObject1	Object
    //   282	68	10	localIOException1	java.io.IOException
    //   354	16	10	localContext1	Context
    //   376	3	10	localIOException2	java.io.IOException
    //   397	1	10	localContext2	Context
    //   417	1	10	localException1	Exception
    //   421	12	10	localObject2	Object
    //   4	272	11	localFileReader	java.io.FileReader
    //   292	3	11	localIOException3	java.io.IOException
    //   304	3	11	localIOException4	java.io.IOException
    //   314	1	11	localException2	Exception
    //   347	84	11	localObject3	Object
    //   444	1	11	localContext3	Context
    //   458	1	11	localException3	Exception
    //   58	307	12	localObject4	Object
    //   394	6	12	localObject5	Object
    //   404	9	12	localObject6	Object
    //   441	6	12	localObject7	Object
    // Exception table:
    //   from	to	target	type
    //   60	70	231	java/lang/Exception
    //   60	70	261	finally
    //   270	280	282	java/io/IOException
    //   242	251	292	java/io/IOException
    //   97	106	304	java/io/IOException
    //   111	122	314	java/lang/Exception
    //   321	330	336	java/io/IOException
    //   111	122	347	finally
    //   364	374	376	java/io/IOException
    //   152	162	386	java/io/IOException
    //   122	136	394	finally
    //   136	152	409	finally
    //   122	136	417	java/lang/Exception
    //   136	152	426	java/lang/Exception
    //   70	83	437	finally
    //   83	97	441	finally
    //   70	83	452	java/lang/Exception
    //   83	97	458	java/lang/Exception
  }
  
  public static String getVERSION_RELEASE()
  {
    return filterStr900("android " + CheckInformation.getInsance().VERSIONRELEASE);
  }
  
  public static int getVersionCode(Context paramContext)
  {
    try
    {
      int i = Integer.valueOf(CheckInformation.getInsance().versionCode).intValue();
      return i;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return -1;
  }
  
  public static String getVersionName(Context paramContext)
  {
    try
    {
      paramContext = CheckInformation.getInsance().versionName;
      return isEmpty(paramContext);
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
        paramContext = "";
      }
    }
  }
  
  private static String isEmpty(String paramString)
  {
    String str = paramString;
    if (TextUtils.isEmpty(paramString)) {
      str = "";
    }
    return str;
  }
  
  protected static boolean isMoreLength(String paramString, int paramInt)
  {
    return (paramString != null) && (paramString.length() > paramInt);
  }
  
  public static String isWIFIorWap(Context paramContext)
  {
    try
    {
      paramContext = CheckInformation.getInsance().netType;
      return paramContext;
    }
    catch (Exception paramContext) {}
    return "";
  }
  
  public static String readMAC(Context paramContext)
  {
    return isEmpty(CheckInformation.getInsance().mac);
  }
}
