package com.xs.mm.wlog;

import android.content.Context;
import android.os.Build;
import android.os.Build.VERSION;
import com.xs.mm.MMBase64;
import com.xs.mm.RSAUtils;
import com.xs.mm.ShareDataUtils;
import java.util.Calendar;

public class DAHelper
{
  public static int BILFAILCODE;
  public static int BILOKCODE = 2016;
  public static int REBUYCODE;
  private static long currentTime;
  public static int field_267;
  public static int field_268;
  public static int field_269;
  public static int field_270;
  public static int field_271;
  public static int field_272;
  public static int field_273;
  public static int field_274;
  public static int field_276 = 2017;
  public static int field_277 = 2018;
  public static int field_278 = 2019;
  public static int field_279 = 2020;
  public static int field_280 = 2021;
  public static int field_284;
  private static long field_285;
  public static int field_286;
  public static int field_287;
  public static int field_288;
  public static int field_289;
  public static int field_292;
  public static int field_293;
  public static int field_294;
  public static int field_295;
  public static int field_296;
  public static int field_297;
  public static int field_298;
  public static int field_300;
  public static int field_301;
  public static int field_302;
  public static int field_303;
  public static int field_304;
  public static int field_305;
  public static int field_306;
  public static int logType;
  public static int payStatus;
  private static long startTime = 0L;
  
  static
  {
    currentTime = 0L;
    field_285 = 0L;
    payStatus = -1;
    field_284 = 1001;
    field_286 = 1002;
    field_287 = 1003;
    field_288 = 1004;
    field_289 = 1005;
    BILFAILCODE = 1006;
    REBUYCODE = 1007;
    field_292 = 1008;
    field_293 = 1009;
    field_294 = 1010;
    field_295 = 1011;
    field_296 = 1012;
    field_297 = 1013;
    field_298 = 1014;
    logType = 1015;
    field_300 = 2001;
    field_301 = 2002;
    field_302 = 2003;
    field_303 = 2004;
    field_304 = 2005;
    field_305 = 2006;
    field_306 = 2007;
    field_267 = 2008;
    field_268 = 2009;
    field_269 = 2010;
    field_270 = 2011;
    field_271 = 2012;
    field_272 = 2013;
    field_273 = 2014;
    field_274 = 2015;
  }
  
  public DAHelper() {}
  
  public static long getCurrentTime()
  {
    return currentTime;
  }
  
  public static String getLogStr(Context paramContext, int paramInt)
  {
    CheckInformation localCheckInformation = CheckInformation.getInsance();
    String str2 = localCheckInformation.appId;
    String str3 = localCheckInformation.paycode;
    String str4 = String.valueOf(localCheckInformation.orderCount);
    String str20 = localCheckInformation.tradeId;
    String str21 = String.valueOf(localCheckInformation.resultCode);
    String str5 = localCheckInformation.packageName;
    String str13 = localCheckInformation.verison;
    String str6 = localCheckInformation.channelId;
    String str22 = localCheckInformation.channelId;
    String str7 = localCheckInformation.imsi;
    String str8 = localCheckInformation.imei;
    String str14 = localCheckInformation.imsi;
    String str15 = localCheckInformation.imei;
    String str16 = Build.MODEL;
    String str17 = localCheckInformation.programID;
    String str18 = Build.VERSION.RELEASE;
    String str19 = localCheckInformation.disWidth + "*" + localCheckInformation.disHeight;
    String str9 = localCheckInformation.inetAddr;
    String str23 = localCheckInformation.versionName;
    String str10 = localCheckInformation.netType;
    Object localObject1 = "";
    if (str10.compareTo("GPRS") != 0) {
      localObject1 = localCheckInformation.ssid;
    }
    String str24 = localCheckInformation.verison;
    String str11 = String.valueOf(getStartTime());
    String str12 = String.valueOf(getCurrentTime());
    String str1 = "unknown";
    long l = Calendar.getInstance().getTimeInMillis() / 1000L;
    if (1 == localCheckInformation.payStyle) {
      switch (payStatus)
      {
      }
    }
    for (;;)
    {
      if (payStatus == 5)
      {
        str1 = Long.valueOf(Calendar.getInstance().getTimeInMillis() / 1000L).toString();
        str1 = RSAUtils.encryptStackMark(localCheckInformation.staticMark, str2, localCheckInformation.appKey, str1);
        str13 = localCheckInformation.dexSha1;
        str14 = localCheckInformation.publicKey;
        str1 = "@@" + str13 + "@@" + str14 + "@@" + str2 + "@@" + str3 + "@@" + str4 + "@@" + "0" + "@@" + str5 + "@@" + localCheckInformation.verison + "@@" + str6 + "@@" + localCheckInformation.programID + "@@" + str7 + "@@" + str8 + "@@" + str10 + "@@" + str9 + "@@" + (String)localObject1 + "@@" + str11 + "@@" + str12;
      }
      try
      {
        localObject1 = ShareDataUtils.readString(paramContext, "rsaServerKey");
        localObject1 = RSAUtils.rsaEncrypt(str1.getBytes(), (String)localObject1);
        if (localObject1 != null)
        {
          str1 = MMBase64.encodeToString((byte[])localObject1);
          paramContext = ShareDataUtils.readString(paramContext, "timestamp");
          str1 = "#" + paramContext + "#" + str1;
        }
        return str1;
        if (paramInt == 0)
        {
          str1 = "2@@" + str2 + "@@" + str5 + "@@" + str13 + "@@" + str6 + "@@" + str14 + "@@" + str15 + "@@" + str16 + "@@" + str18 + "@@" + str19 + "@@" + str10 + "@@" + str9 + "@@" + (String)localObject1 + "@@" + str24 + "@@" + str11 + "@@" + str12;
          continue;
        }
        if (paramInt == 1)
        {
          str1 = "2@@" + str2 + "@@" + str5 + "@@" + str13 + "@@" + str6 + "@@" + str17 + "@@" + str14 + "@@" + str15 + "@@" + str16 + "@@" + str18 + "@@" + str19 + "@@" + str10 + "@@" + str9 + "@@" + (String)localObject1 + "@@" + str24 + "@@" + str11 + "@@" + str12 + "@@" + "3";
          continue;
        }
        str1 = "2@@" + str2 + "@@" + str3 + "@@" + str4 + "@@" + str20 + "@@" + str21 + "@@" + str5 + "@@" + str13 + "@@" + str6 + "@@" + str17 + "@@" + str7 + "@@" + str8 + "@@" + str10 + "@@" + str9 + "@@" + (String)localObject1 + "@@" + str24 + "@@" + str11 + "@@" + str12 + "@@" + "3";
        continue;
        str1 = "2@@" + str2 + "@@" + str3 + "@@" + str4 + "@@" + str20 + "@@" + str21 + "@@" + str5 + "@@" + str13 + "@@" + str6 + "@@" + str17 + "@@" + str7 + "@@" + str8 + "@@" + str10 + "@@" + str9 + "@@" + (String)localObject1 + "@@" + str24 + "@@" + str11 + "@@" + str12 + "@@" + "3";
        continue;
        switch (payStatus)
        {
        default: 
          return "unknown";
        case 1: 
          if (paramInt == 0) {
            return "1@@" + str2 + "@@" + str5 + "@@" + str13 + "@@" + str6 + "@@" + str14 + "@@" + str15 + "@@" + str16 + "@@" + str18 + "@@" + str19 + "@@" + str10 + "@@" + str9 + "@@" + (String)localObject1 + "@@" + str24 + "@@" + str11 + "@@" + str12;
          }
          if (paramInt != 1) {
            continue;
          }
          return "1@@" + str2 + "@@" + str5 + "@@" + str13 + "@@" + str6 + "@@" + str17 + "@@" + str14 + "@@" + str15 + "@@" + str16 + "@@" + str18 + "@@" + str19 + "@@" + str10 + "@@" + str9 + "@@" + (String)localObject1 + "@@" + str24 + "@@" + str11 + "@@" + str12 + "@@" + "3";
        case 2: 
          return "1@@" + str2 + "@@" + str3 + "@@" + str4 + "@@" + str20 + "@@" + str21 + "@@" + str5 + "@@" + str13 + "@@" + str6 + "@@" + str7 + "@@" + str8 + "@@" + str10 + "@@" + str9 + "@@" + (String)localObject1 + "@@" + str24 + "@@" + str11 + "@@" + str12;
        case 3: 
          return "1@@" + str2 + "@@" + str3 + "@@" + str4 + "@@" + str20 + "@@" + str21 + "@@" + str5 + "@@" + str13 + "@@" + str6 + "@@" + str7 + "@@" + str8 + "@@" + str10 + "@@" + str9 + "@@" + (String)localObject1 + "@@" + str24 + "@@" + str11 + "@@" + str12;
        case 4: 
          return "1@@" + str2 + "@@" + str5 + "@@" + str23 + "@@" + str6 + "@@" + str22 + "@@" + str17 + "@@" + str7 + "@@" + str8 + "@@" + str24 + "@@" + str16 + "@@" + "Android" + "@@" + str18 + "@@" + l + "@@" + paramInt;
        }
      }
      catch (Exception localException)
      {
        for (;;)
        {
          localException.printStackTrace();
          Object localObject2 = null;
        }
      }
    }
  }
  
  public static String getPayStatus()
  {
    switch (payStatus)
    {
    case 4: 
    default: 
      return "_pay_logaction";
    case 1: 
      return "_pay_init";
    case 2: 
      return "_pay_auth";
    case 3: 
      return "_pay_pay";
    }
    return "_security_check";
  }
  
  public static long getStartTime()
  {
    return startTime;
  }
  
  public static void joinDuInit(Context paramContext, String paramString1, String paramString2)
  {
    MobileAgent.joinDu(paramContext, paramString1, paramString2);
  }
  
  public static void onEventRT(Context paramContext)
  {
    switch (payStatus)
    {
    default: 
      OnEventRTHelper.onEventRT(paramContext, getPayStatus(), getLogStr(paramContext, 0));
      return;
    }
    OnEventRTHelper.onEventRT(paramContext, getPayStatus(), getLogStr(paramContext, 0));
    OnEventRTHelper.onEventRT(paramContext, getPayStatus(), getLogStr(paramContext, 1));
  }
  
  public static void onEventRT(Context paramContext, int paramInt)
  {
    payStatus = 4;
    OnEventRTHelper.onEventRT(paramContext, getPayStatus(), getLogStr(paramContext, paramInt));
  }
  
  public static void setFinishTime()
  {
    currentTime = Calendar.getInstance().getTimeInMillis() / 1000L;
  }
  
  public static void setFinishTime(int paramInt)
  {
    currentTime = Calendar.getInstance().getTimeInMillis() / 1000L + paramInt;
  }
  
  public static void setStartTime()
  {
    startTime = Calendar.getInstance().getTimeInMillis() / 1000L;
  }
  
  public static void setStartTime(int paramInt)
  {
    startTime = Calendar.getInstance().getTimeInMillis() / 1000L + paramInt;
  }
}
