package com.zhangzhifu.sdk.util;

import android.content.ContentResolver;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Uri;
import android.telephony.TelephonyManager;

public class NetManage
{
  public static String CMNET;
  public static String CMWAP = "cmwap";
  public static String GNET_3;
  public static String GWAP_3;
  public static String UNINET = "uninet";
  public static String UNIWAP;
  private Uri PREFERRED_APN_URI;
  private Context ao;
  private Uri bN;
  private int bO;
  private int bP;
  private TelephonyManager bQ;
  private int bR;
  private int bS;
  
  static
  {
    CMNET = "cmnet";
    GWAP_3 = "3gwap";
    GNET_3 = "3gnet";
    UNIWAP = "uniwap";
  }
  
  public NetManage(Context paramContext)
  {
    this.ao = paramContext;
    this.PREFERRED_APN_URI = Uri.parse("content://telephony/carriers/preferapn");
    this.bN = Uri.parse("content://telephony/carriers");
  }
  
  private static void a(Cursor paramCursor)
  {
    if (paramCursor != null) {}
    for (;;)
    {
      if (!paramCursor.moveToNext()) {
        return;
      }
      String str1 = paramCursor.getString(paramCursor.getColumnIndex("name"));
      String str2 = paramCursor.getString(paramCursor.getColumnIndex("numeric"));
      String str3 = paramCursor.getString(paramCursor.getColumnIndex("_id"));
      String str4 = paramCursor.getString(paramCursor.getColumnIndex("mcc"));
      String str5 = paramCursor.getString(paramCursor.getColumnIndex("mnc"));
      String str6 = paramCursor.getString(paramCursor.getColumnIndex("apn"));
      String str7 = paramCursor.getString(paramCursor.getColumnIndex("user"));
      String str8 = paramCursor.getString(paramCursor.getColumnIndex("server"));
      String str9 = paramCursor.getString(paramCursor.getColumnIndex("password"));
      String str10 = paramCursor.getString(paramCursor.getColumnIndex("proxy"));
      String str11 = paramCursor.getString(paramCursor.getColumnIndex("port"));
      String str12 = paramCursor.getString(paramCursor.getColumnIndex("mmsproxy"));
      String str13 = paramCursor.getString(paramCursor.getColumnIndex("mmsport"));
      String str14 = paramCursor.getString(paramCursor.getColumnIndex("mmsc"));
      String str15 = paramCursor.getString(paramCursor.getColumnIndex("authtype"));
      String str16 = paramCursor.getString(paramCursor.getColumnIndex("type"));
      String str17 = paramCursor.getString(paramCursor.getColumnIndex("current"));
      ZhangPayLog.showSaveLog("AllWapAPN", "name=" + str1 + " numeric=" + str2 + " _id=" + str3 + " mcc=" + str4 + " mnc=" + str5 + " apn=" + str6 + " user=" + str7 + " server=" + str8 + " password=" + str9 + " proxy=" + str10 + " port=" + str11 + " mmsproxy=" + str12 + " mmsport=" + str13 + " mmsc=" + str14 + " authtype=" + str15 + " type=" + str16 + " current=" + str17);
    }
  }
  
  public int addCmwapAPN()
  {
    Object localObject1 = this.ao.getContentResolver();
    Object localObject3 = new ContentValues();
    ((ContentValues)localObject3).put("name", "cmwap");
    ((ContentValues)localObject3).put("apn", "cmwap");
    ((ContentValues)localObject3).put("proxy", "10.0.0.172");
    ((ContentValues)localObject3).put("port", "80");
    this.bQ = ((TelephonyManager)this.ao.getSystemService("phone"));
    String str = this.bQ.getSubscriberId();
    if ((str != null) && (!str.trim().equals("")))
    {
      if (str.startsWith("46000"))
      {
        ((ContentValues)localObject3).put("numeric", "46000");
        ((ContentValues)localObject3).put("mcc", "460");
        ((ContentValues)localObject3).put("mnc", "00");
      }
    }
    else
    {
      ((ContentValues)localObject3).put("mmsc", "http://mmsc.monternet.com");
      ((ContentValues)localObject3).put("mmsproxy", "10.0.0.172");
      ((ContentValues)localObject3).put("mmsport", "80");
    }
    for (;;)
    {
      Object localObject2;
      try
      {
        localObject3 = ((ContentResolver)localObject1).insert(this.bN, (ContentValues)localObject3);
        if (localObject3 == null) {
          break label392;
        }
        localObject1 = ((ContentResolver)localObject1).query((Uri)localObject3, null, null, null, null);
        localObject3 = localObject1;
        if (localObject1 == null) {
          break label394;
        }
        localObject3 = localObject1;
      }
      catch (Exception localException1)
      {
        int i;
        if (localObject2 != null) {
          localObject2.close();
        }
        return 0;
      }
      finally
      {
        localObject2 = null;
      }
      if (localObject2 != null) {
        localObject2.close();
      }
      throw localObject4;
      label392:
      Object localObject5 = null;
      label394:
      if (localObject5 != null) {
        localObject5.close();
      }
    }
  }
  
  public int addCtwapAPN()
  {
    Object localObject1 = this.ao.getContentResolver();
    Object localObject3 = new ContentValues();
    ((ContentValues)localObject3).put("name", "ctwap");
    ((ContentValues)localObject3).put("apn", "ctwap");
    ((ContentValues)localObject3).put("proxy", "10.0.0.200");
    ((ContentValues)localObject3).put("port", "80");
    this.bQ = ((TelephonyManager)this.ao.getSystemService("phone"));
    String str = this.bQ.getSubscriberId();
    if ((str != null) && (!str.trim().equals("")))
    {
      if (str.startsWith("46003"))
      {
        ((ContentValues)localObject3).put("numeric", "46003");
        ((ContentValues)localObject3).put("mcc", "460");
        ((ContentValues)localObject3).put("mnc", "03");
      }
    }
    else
    {
      ((ContentValues)localObject3).put("mmsproxy", "10.0.0.200");
      ((ContentValues)localObject3).put("mmsport", "80");
    }
    for (;;)
    {
      Object localObject2;
      try
      {
        localObject3 = ((ContentResolver)localObject1).insert(this.bN, (ContentValues)localObject3);
        if (localObject3 == null) {
          break label315;
        }
        localObject1 = ((ContentResolver)localObject1).query((Uri)localObject3, null, null, null, null);
        localObject3 = localObject1;
        if (localObject1 == null) {
          break label317;
        }
        localObject3 = localObject1;
      }
      catch (Exception localException1)
      {
        int i;
        if (localObject2 != null) {
          localObject2.close();
        }
        return 0;
      }
      finally
      {
        localObject2 = null;
      }
      if (localObject2 != null) {
        localObject2.close();
      }
      throw localObject4;
      label315:
      Object localObject5 = null;
      label317:
      if (localObject5 != null) {
        localObject5.close();
      }
    }
  }
  
  public int addUniwapAPN()
  {
    Object localObject1 = this.ao.getContentResolver();
    Object localObject3 = new ContentValues();
    ((ContentValues)localObject3).put("name", "uniwap");
    ((ContentValues)localObject3).put("apn", "uniwap");
    ((ContentValues)localObject3).put("proxy", "10.0.0.172");
    ((ContentValues)localObject3).put("port", "80");
    this.bQ = ((TelephonyManager)this.ao.getSystemService("phone"));
    String str = this.bQ.getSubscriberId();
    if ((str != null) && (!str.trim().equals("")))
    {
      if (str.startsWith("46001"))
      {
        ((ContentValues)localObject3).put("numeric", "46001");
        ((ContentValues)localObject3).put("mcc", "460");
        ((ContentValues)localObject3).put("mnc", "01");
      }
    }
    else
    {
      ((ContentValues)localObject3).put("mmsproxy", "10.0.0.172");
      ((ContentValues)localObject3).put("mmsport", "80");
    }
    for (;;)
    {
      Object localObject2;
      try
      {
        localObject3 = ((ContentResolver)localObject1).insert(this.bN, (ContentValues)localObject3);
        if (localObject3 == null) {
          break label311;
        }
        localObject1 = ((ContentResolver)localObject1).query((Uri)localObject3, null, null, null, null);
        localObject3 = localObject1;
        if (localObject1 == null) {
          break label313;
        }
        localObject3 = localObject1;
      }
      catch (Exception localException1)
      {
        int i;
        if (localObject2 != null) {
          localObject2.close();
        }
        return 0;
      }
      finally
      {
        localObject2 = null;
      }
      if (localObject2 != null) {
        localObject2.close();
      }
      throw localObject4;
      label311:
      Object localObject5 = null;
      label313:
      if (localObject5 != null) {
        localObject5.close();
      }
    }
  }
  
  public int addWapApn(Context paramContext)
  {
    if (SystemInfo.getCardType(paramContext).equals("mobile")) {
      return addCmwapAPN();
    }
    return 0;
  }
  
  public boolean checkHasWapAPN()
  {
    try
    {
      Cursor localCursor = this.ao.getContentResolver().query(this.bN, null, null, null, "_id ASC");
      while ((localCursor != null) && (localCursor.moveToNext()))
      {
        int i = localCursor.getInt(localCursor.getColumnIndex("_id"));
        String str1 = localCursor.getString(localCursor.getColumnIndex("name"));
        String str2 = localCursor.getString(localCursor.getColumnIndex("port"));
        String str3 = localCursor.getString(localCursor.getColumnIndex("proxy"));
        String str4 = localCursor.getString(localCursor.getColumnIndex("current"));
        String str5 = localCursor.getString(localCursor.getColumnIndex("apn"));
        if ((str1 != null) && (str3 != null) && (str2 != null) && (str4 != null) && (str5 != null) && ((str3.equals("10.0.0.172")) || (str3.equals("010.000.000.172")) || (str3.equals("10.0.0.200")) || (str3.equals("010.000.000.200"))) && (str2.equals("80")) && (str4.equals("1")))
        {
          this.bP = i;
          ZhangPayLog.showSaveLog("checkHasWapAPN", "cmwapApnId=" + this.bP);
          return true;
        }
      }
    }
    catch (Exception localException)
    {
      ZhangPayLog.d("NetManager", "读取APN失败" + localException.getMessage());
    }
    return false;
  }
  
  public boolean checkNetworkConnection(Context paramContext)
  {
    paramContext = (ConnectivityManager)paramContext.getSystemService("connectivity");
    NetworkInfo localNetworkInfo = paramContext.getNetworkInfo(1);
    paramContext.getNetworkInfo(0);
    return localNetworkInfo.isAvailable();
  }
  
  public int getCmwapApnId()
  {
    return this.bP;
  }
  
  public int getCreatNewApnId()
  {
    return this.bO;
  }
  
  public int getCurrentApnId()
  {
    return this.bR;
  }
  
  public int getCurrentWapAPNId()
  {
    Cursor localCursor = this.ao.getContentResolver().query(this.PREFERRED_APN_URI, null, null, null, null);
    a(localCursor);
    if ((localCursor != null) && (localCursor.moveToFirst())) {
      this.bR = localCursor.getInt(localCursor.getColumnIndex("_id"));
    }
    return this.bR;
  }
  
  public boolean isCurrentWapAPN()
  {
    try
    {
      Cursor localCursor = this.ao.getContentResolver().query(this.PREFERRED_APN_URI, null, null, null, null);
      if ((localCursor != null) && (localCursor.moveToFirst()))
      {
        String str1 = localCursor.getString(localCursor.getColumnIndex("proxy"));
        String str2 = localCursor.getString(localCursor.getColumnIndex("apn"));
        String str3 = localCursor.getString(localCursor.getColumnIndex("port"));
        String str4 = localCursor.getString(localCursor.getColumnIndex("current"));
        this.bR = localCursor.getInt(localCursor.getColumnIndex("_id"));
        ZhangPayLog.showSaveLog("isCurrentWapAPN", "proxy=" + str1 + " , apn=" + str2 + " port=" + str3 + " , current=" + str4 + " , _id=" + this.bR);
        if ((str1 == null) || (str2 == null) || (str3 == null) || (str4 == null)) {
          break label284;
        }
        if (((str1.equals("10.0.0.172")) || (str1.equals("010.000.000.172")) || (str1.equals("10.0.0.200")) || (str1.equals("010.000.000.200"))) && (str3.equals("80")) && (str4.equals("1")))
        {
          ZhangPayLog.showSaveLog("isCurrentWapAPN", "CurrentWapAPNd is cmwap");
          return true;
        }
      }
    }
    catch (Exception localException)
    {
      ZhangPayLog.d("NetManager", "读取APN失败");
    }
    return false;
    label284:
    return false;
  }
  
  public boolean isDataConnected()
  {
    return ((TelephonyManager)this.ao.getSystemService("phone")).getDataState() == 2;
  }
  
  public void reSetLastApn()
  {
    if (this.bS != 0)
    {
      setAPN(this.bS);
      this.bS = 0;
    }
  }
  
  public boolean setAPN(int paramInt)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("apn_id", Integer.valueOf(paramInt));
    ZhangPayLog.showSaveLog("", "切换APN " + paramInt);
    try
    {
      this.ao.getContentResolver().update(this.PREFERRED_APN_URI, localContentValues, null, null);
      this.bR = paramInt;
      return true;
    }
    catch (Exception localException)
    {
      ZhangPayLog.showSaveLog("===", "切换APN失败");
    }
    return false;
  }
  
  public boolean setWapNetWork()
  {
    WifiManage localWifiManage = new WifiManage(this.ao);
    if (localWifiManage.isWifiManageEnable()) {
      localWifiManage.CloseWifi();
    }
    if (isCurrentWapAPN()) {
      ZhangPayLog.showSaveLog("SetCMWAPActivity", "current is CMWAP!");
    }
    do
    {
      int i;
      do
      {
        return true;
        this.bS = getCurrentApnId();
        if (!checkHasWapAPN()) {
          break;
        }
        i = getCmwapApnId();
        ZhangPayLog.showSaveLog("SetCMWAPActivity", "checkHasWapAPN is true , cmwapid is " + i);
      } while (setAPN(i));
      return false;
    } while (addWapApn(this.ao) != 0);
    return false;
  }
  
  public void showAllAPN()
  {
    a(this.ao.getContentResolver().query(this.bN, null, "current='1'", null, null));
  }
}
