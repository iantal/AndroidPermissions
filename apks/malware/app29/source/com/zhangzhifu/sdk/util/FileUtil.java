package com.zhangzhifu.sdk.util;

import android.os.Environment;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.InputStream;

public class FileUtil
{
  private static String bI = "zpay";
  private static String bJ;
  
  public FileUtil() {}
  
  public static void delFolder(String paramString)
  {
    try
    {
      deleteZpayFile(paramString);
      new File(paramString.toString()).delete();
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  public static void deleteZpayFile(String paramString)
  {
    ZhangPayLog.showSaveLog("==", "删除文件" + paramString);
    for (;;)
    {
      try
      {
        File localFile = new File(paramString);
        localFile.exists();
        localFile.isDirectory();
        String[] arrayOfString = localFile.list();
        int i = 0;
        if (i >= arrayOfString.length) {
          return;
        }
        if (paramString.endsWith(File.separator))
        {
          localFile = new File(paramString + arrayOfString[i]);
          if (localFile.isFile()) {
            localFile.delete();
          }
          if (localFile.isDirectory())
          {
            deleteZpayFile(paramString + "/" + arrayOfString[i]);
            delFolder(paramString + "/" + arrayOfString[i]);
          }
        }
        else
        {
          localFile = new File(paramString + File.separator + arrayOfString[i]);
          continue;
        }
        i += 1;
      }
      catch (Exception paramString)
      {
        return;
      }
    }
  }
  
  public static String getExterPath()
  {
    if (bJ == null)
    {
      bJ = Environment.getExternalStorageDirectory().getPath();
      bJ = bJ + "/" + bI;
    }
    File localFile = new File(bJ);
    ZhangPayLog.showSaveLog("====", localFile.getAbsolutePath() + " , " + localFile.isDirectory() + " , " + localFile.exists());
    if ((!localFile.exists()) || (localFile.isFile())) {
      ZhangPayLog.showSaveLog("====", localFile.mkdir());
    }
    return bJ;
  }
  
  /* Error */
  public static String getUserIdFromFile()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_1
    //   2: aconst_null
    //   3: astore_0
    //   4: new 116	java/io/BufferedReader
    //   7: dup
    //   8: new 118	java/io/FileReader
    //   11: dup
    //   12: new 26	java/io/File
    //   15: dup
    //   16: new 45	java/lang/StringBuilder
    //   19: dup
    //   20: invokestatic 96	android/os/Environment:getExternalStorageDirectory	()Ljava/io/File;
    //   23: invokevirtual 99	java/io/File:getPath	()Ljava/lang/String;
    //   26: invokestatic 80	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   29: invokespecial 48	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   32: ldc 120
    //   34: invokevirtual 52	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37: invokevirtual 53	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   40: invokespecial 34	java/io/File:<init>	(Ljava/lang/String;)V
    //   43: invokespecial 123	java/io/FileReader:<init>	(Ljava/io/File;)V
    //   46: invokespecial 126	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   49: astore_2
    //   50: aload_2
    //   51: invokevirtual 129	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   54: astore_1
    //   55: aload_1
    //   56: astore_0
    //   57: aload_1
    //   58: ifnull -8 -> 50
    //   61: aload_1
    //   62: astore_0
    //   63: aload_1
    //   64: invokevirtual 132	java/lang/String:trim	()Ljava/lang/String;
    //   67: ldc -122
    //   69: invokevirtual 138	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   72: ifne -22 -> 50
    //   75: aload_2
    //   76: invokevirtual 141	java/io/BufferedReader:close	()V
    //   79: aload_1
    //   80: areturn
    //   81: astore_2
    //   82: aload_0
    //   83: astore_1
    //   84: aload_2
    //   85: astore_0
    //   86: aload_0
    //   87: invokevirtual 41	java/lang/Exception:printStackTrace	()V
    //   90: ldc 101
    //   92: new 45	java/lang/StringBuilder
    //   95: dup
    //   96: ldc -113
    //   98: invokespecial 48	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   101: aload_0
    //   102: invokevirtual 146	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   105: invokevirtual 52	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   108: invokevirtual 53	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   111: invokestatic 59	com/zhangzhifu/sdk/util/ZhangPayLog:showSaveLog	(Ljava/lang/String;Ljava/lang/String;)V
    //   114: aload_1
    //   115: areturn
    //   116: astore_0
    //   117: goto -31 -> 86
    //   120: astore_0
    //   121: goto -35 -> 86
    // Local variable table:
    //   start	length	slot	name	signature
    //   3	99	0	localObject1	Object
    //   116	1	0	localException1	Exception
    //   120	1	0	localException2	Exception
    //   1	114	1	localObject2	Object
    //   49	27	2	localBufferedReader	java.io.BufferedReader
    //   81	4	2	localException3	Exception
    // Exception table:
    //   from	to	target	type
    //   50	55	81	java/lang/Exception
    //   63	79	116	java/lang/Exception
    //   4	50	120	java/lang/Exception
  }
  
  public static boolean saveFlashFile(InputStream paramInputStream, String paramString)
  {
    if ((paramInputStream == null) || (paramString == null) || (paramString.trim().equals(""))) {
      return false;
    }
    try
    {
      Object localObject = new File(paramString);
      if (((File)localObject).exists()) {
        ((File)localObject).delete();
      }
      paramString = new FileOutputStream(paramString);
      localObject = new BufferedOutputStream(paramString);
      byte[] arrayOfByte = new byte['Ѐ'];
      for (;;)
      {
        int i = paramInputStream.read(arrayOfByte);
        if (i == -1)
        {
          ((BufferedOutputStream)localObject).flush();
          ((BufferedOutputStream)localObject).close();
          paramString.close();
          paramInputStream.close();
          return true;
        }
        ((BufferedOutputStream)localObject).write(arrayOfByte, 0, i);
      }
      return false;
    }
    catch (Exception paramInputStream)
    {
      paramInputStream.printStackTrace();
      ZhangPayLog.showSaveLog("====", "复制异常" + paramInputStream.getMessage());
    }
  }
  
  public static boolean saveUserIdFile(String paramString)
  {
    if ((paramString == null) || (paramString.trim().equals(""))) {
      return false;
    }
    try
    {
      Object localObject = Environment.getExternalStorageDirectory().getPath() + "/easoupay/userid.cfg";
      File localFile = new File(Environment.getExternalStorageDirectory().getPath() + "/easoupay");
      if (!localFile.exists()) {
        localFile.mkdir();
      }
      localFile = new File((String)localObject);
      if (localFile.exists()) {
        localFile.delete();
      }
      localObject = new FileWriter((String)localObject, false);
      ((FileWriter)localObject).write(paramString);
      ((FileWriter)localObject).flush();
      ((FileWriter)localObject).close();
      return true;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
      ZhangPayLog.showSaveLog("====", "写入user异常" + paramString.getMessage());
    }
    return false;
  }
}
