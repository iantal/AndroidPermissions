package com.ddd.cmvsdk;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.Signature;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.cert.CertificateException;
import java.security.cert.CertificateFactory;
import java.security.cert.X509Certificate;
import java.security.interfaces.RSAPublicKey;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

public class o
{
  public static String a(String paramString)
  {
    try
    {
      Object localObject = MessageDigest.getInstance("MD5");
      ((MessageDigest)localObject).update(paramString.getBytes());
      byte[] arrayOfByte = ((MessageDigest)localObject).digest();
      if (arrayOfByte != null)
      {
        int i = arrayOfByte.length;
        if (i > 0)
        {
          paramString = "";
          i = 0;
          for (;;)
          {
            if (i >= arrayOfByte.length)
            {
              if ((paramString == null) || (paramString.length() <= 0)) {
                break;
              }
              return paramString;
            }
            String str = Integer.toHexString(arrayOfByte[i] & 0xFF);
            localObject = str;
            if (str != null)
            {
              localObject = str;
              if (str.length() == 1) {
                localObject = "0" + str;
              }
            }
            paramString = paramString + (String)localObject;
            i += 1;
          }
        }
      }
      return null;
    }
    catch (Exception paramString) {}
    return "";
  }
  
  public static String a(String paramString1, String paramString2)
  {
    if ((paramString1 != null) && (paramString2 != null))
    {
      paramString1 = paramString1.replace("'", "\"");
      int i = paramString1.indexOf(paramString2);
      if (i > 0)
      {
        int j = paramString1.indexOf("\"", paramString2.length() + i);
        if (j > paramString2.length() + i) {
          return paramString1.substring(i, j).replace("amp;", "");
        }
      }
    }
    return null;
  }
  
  public static String a(byte[] paramArrayOfByte)
  {
    try
    {
      String str = ((RSAPublicKey)((X509Certificate)CertificateFactory.getInstance("X.509").generateCertificate(new ByteArrayInputStream(paramArrayOfByte))).getPublicKey()).getModulus().toString(16);
      paramArrayOfByte = str;
      if (str != null)
      {
        paramArrayOfByte = str;
        if (str.contains("modulus:")) {
          paramArrayOfByte = str.substring(str.indexOf("modulus: ") + 9, str.indexOf("\n", str.indexOf("modulus:"))).trim();
        }
      }
      return paramArrayOfByte;
    }
    catch (CertificateException paramArrayOfByte)
    {
      paramArrayOfByte.printStackTrace();
    }
    return null;
  }
  
  public static String a(String[] paramArrayOfString)
  {
    int j = 0;
    String[] arrayOfString = new String[paramArrayOfString.length];
    int i = 0;
    Object localObject2;
    if (i >= paramArrayOfString.length)
    {
      localObject2 = b(arrayOfString);
      paramArrayOfString = "";
      i = j;
    }
    for (;;)
    {
      if (i >= localObject2.length)
      {
        return paramArrayOfString;
        String str = paramArrayOfString[i];
        localObject2 = "";
        localObject1 = localObject2;
        if (str != null)
        {
          localObject1 = localObject2;
          if (!"".equals(str)) {
            localObject1 = String.valueOf(str.charAt(str.length() - 1));
          }
        }
        arrayOfString[i] = (localObject1 + str);
        i += 1;
        break;
      }
      arrayOfString = localObject2[i];
      Object localObject1 = paramArrayOfString;
      if (arrayOfString != null)
      {
        localObject1 = paramArrayOfString;
        if (!"".equals(arrayOfString)) {
          localObject1 = paramArrayOfString + arrayOfString.substring(1, arrayOfString.length());
        }
      }
      i += 1;
      paramArrayOfString = (String[])localObject1;
    }
  }
  
  public static Map a(InputStream paramInputStream)
  {
    int j = 0;
    HashMap localHashMap = new HashMap();
    for (;;)
    {
      int i;
      try
      {
        paramInputStream = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(paramInputStream).getDocumentElement();
        Object localObject1 = paramInputStream.getElementsByTagName("set");
        if ((localObject1 != null) && (((NodeList)localObject1).getLength() > 0))
        {
          i = 0;
          if (i < ((NodeList)localObject1).getLength()) {}
        }
        else
        {
          paramInputStream = paramInputStream.getElementsByTagName("node");
          if ((paramInputStream == null) || (paramInputStream.getLength() <= 0)) {
            break label359;
          }
          i = j;
          if (i < paramInputStream.getLength()) {
            continue;
          }
          return localHashMap;
        }
        Object localObject3 = (Element)((NodeList)localObject1).item(i);
        Object localObject2 = ((Element)localObject3).getAttribute("ys");
        String str1 = ((Element)localObject3).getAttribute("productId");
        String str2 = ((Element)localObject3).getAttribute("chargeMode");
        String str3 = ((Element)localObject3).getAttribute("price");
        localObject3 = ((Element)localObject3).getAttribute("desc");
        if ((i == 0) || ((str1 != null) && (str1.equals(m.m))) || ((str3 != null) && (str3.equals(m.m))))
        {
          localHashMap.put("ys", localObject2);
          localHashMap.put("productId", str1);
          localHashMap.put("chargeMode", str2);
          localHashMap.put("price", str3);
          localHashMap.put("desc", localObject3);
          break label361;
          localObject2 = (Element)paramInputStream.item(i);
          localObject1 = ((Element)localObject2).getAttribute("name");
          localObject2 = ((Element)localObject2).getAttribute("data");
          if ((localObject1 != null) && (localObject2 != null) && (("tt".equals(localObject1)) || ("dfzyh".equals(localObject1)) || ("tt2".equals(localObject1)))) {
            localHashMap.put(localObject1, localObject2);
          }
          i += 1;
          continue;
          return localHashMap;
        }
      }
      catch (Exception paramInputStream)
      {
        paramInputStream.printStackTrace();
      }
      label359:
      label361:
      i += 1;
    }
  }
  
  public static byte[] a(Context paramContext)
  {
    Object localObject = paramContext.getPackageManager();
    paramContext = paramContext.getApplicationInfo().packageName;
    localObject = ((PackageManager)localObject).getInstalledPackages(64);
    if (paramContext != null) {
      localObject = ((List)localObject).iterator();
    }
    PackageInfo localPackageInfo;
    do
    {
      if (!((Iterator)localObject).hasNext()) {
        return null;
      }
      localPackageInfo = (PackageInfo)((Iterator)localObject).next();
    } while (!paramContext.equalsIgnoreCase(localPackageInfo.packageName));
    return localPackageInfo.signatures[0].toByteArray();
  }
  
  private static String[] b(String[] paramArrayOfString)
  {
    int i = 0;
    if (i >= paramArrayOfString.length - 1) {
      return paramArrayOfString;
    }
    int j = 0;
    for (;;)
    {
      if (j >= paramArrayOfString.length - i - 1)
      {
        i += 1;
        break;
      }
      if (paramArrayOfString[j].compareTo(paramArrayOfString[(j + 1)]) > 0)
      {
        String str = paramArrayOfString[j];
        paramArrayOfString[j] = paramArrayOfString[(j + 1)];
        paramArrayOfString[(j + 1)] = str;
      }
      j += 1;
    }
  }
}
