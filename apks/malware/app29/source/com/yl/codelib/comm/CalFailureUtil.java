package com.yl.codelib.comm;

import com.yl.codelib.utils.FileUtil;
import com.yl.codelib.utils.LogUtil;
import com.yl.codelib.utils.TextUtil;
import com.yl.ml.date.ConFigFile;
import java.io.IOException;
import java.util.Iterator;
import org.json.JSONObject;

public class CalFailureUtil
{
  public CalFailureUtil() {}
  
  public static void cleanFailureInfo()
  {
    for (;;)
    {
      Object localObject1;
      try
      {
        String str = ConFigFile.SD_INFO + "/cache_calDateTime.info";
        localObject1 = null;
        try
        {
          localObject3 = FileUtil.readSDCardFile(str);
          localObject1 = localObject3;
        }
        catch (IOException localIOException)
        {
          Object localObject3;
          continue;
        }
        if (TextUtil.notNull((String)localObject1)) {
          LogUtil.v((String)localObject1);
        }
        try
        {
          localObject1 = new JSONObject((String)localObject1);
          localObject3 = ((JSONObject)localObject1).keys();
          LogUtil.v(localObject3.toString());
          if (((Iterator)localObject3).hasNext()) {
            continue;
          }
          FileUtil.writeSDCardFile(str, ((JSONObject)localObject1).toString().getBytes("UTF-8"), false);
        }
        catch (Exception localException)
        {
          Object localObject4;
          continue;
        }
        return;
      }
      finally {}
      localObject4 = ((JSONObject)localObject1).getString(((String)((Iterator)localObject3).next()).toString());
      LogUtil.v((String)localObject4);
      localObject4 = ((String)localObject4).split("#_#");
      if (System.currentTimeMillis() - Long.valueOf(localObject4[0]).longValue() > Long.valueOf(localObject4[1]).longValue()) {
        ((Iterator)localObject3).remove();
      }
    }
  }
  
  /* Error */
  public static String getKeys()
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: new 16	java/lang/StringBuilder
    //   6: dup
    //   7: getstatic 22	com/yl/ml/date/ConFigFile:SD_INFO	Ljava/lang/String;
    //   10: invokestatic 28	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   13: invokespecial 31	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   16: ldc 33
    //   18: invokevirtual 37	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21: invokevirtual 41	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   24: astore_1
    //   25: aconst_null
    //   26: astore_2
    //   27: ldc 119
    //   29: astore_3
    //   30: aload_1
    //   31: invokestatic 47	com/yl/codelib/utils/FileUtil:readSDCardFile	(Ljava/lang/String;)Ljava/lang/String;
    //   34: astore_1
    //   35: aload_1
    //   36: astore_2
    //   37: aload_2
    //   38: invokestatic 53	com/yl/codelib/utils/TextUtil:notNull	(Ljava/lang/String;)Z
    //   41: istore_0
    //   42: aload_3
    //   43: astore_1
    //   44: iload_0
    //   45: ifeq +31 -> 76
    //   48: new 60	org/json/JSONObject
    //   51: dup
    //   52: aload_2
    //   53: invokespecial 61	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   56: invokevirtual 65	org/json/JSONObject:keys	()Ljava/util/Iterator;
    //   59: astore 4
    //   61: ldc 119
    //   63: astore_1
    //   64: aload 4
    //   66: invokeinterface 72 1 0
    //   71: istore_0
    //   72: iload_0
    //   73: ifne +8 -> 81
    //   76: ldc 2
    //   78: monitorexit
    //   79: aload_1
    //   80: areturn
    //   81: aload 4
    //   83: invokeinterface 87 1 0
    //   88: checkcast 24	java/lang/String
    //   91: astore_2
    //   92: new 16	java/lang/StringBuilder
    //   95: dup
    //   96: aload_1
    //   97: invokestatic 28	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   100: invokespecial 31	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   103: aload_2
    //   104: invokevirtual 37	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   107: ldc 121
    //   109: invokevirtual 37	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   112: invokevirtual 41	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   115: astore_2
    //   116: aload_2
    //   117: astore_1
    //   118: goto -54 -> 64
    //   121: astore_1
    //   122: goto -85 -> 37
    //   125: astore_1
    //   126: ldc 2
    //   128: monitorexit
    //   129: aload_1
    //   130: athrow
    //   131: astore_1
    //   132: aload_3
    //   133: astore_1
    //   134: goto -58 -> 76
    //   137: astore_2
    //   138: goto -62 -> 76
    // Local variable table:
    //   start	length	slot	name	signature
    //   41	32	0	bool	boolean
    //   24	94	1	localObject1	Object
    //   121	1	1	localIOException	IOException
    //   125	5	1	localObject2	Object
    //   131	1	1	localJSONException1	org.json.JSONException
    //   133	1	1	localObject3	Object
    //   26	91	2	localObject4	Object
    //   137	1	2	localJSONException2	org.json.JSONException
    //   29	104	3	str	String
    //   59	23	4	localIterator	Iterator
    // Exception table:
    //   from	to	target	type
    //   30	35	121	java/io/IOException
    //   3	25	125	finally
    //   30	35	125	finally
    //   37	42	125	finally
    //   48	61	125	finally
    //   64	72	125	finally
    //   81	116	125	finally
    //   48	61	131	org/json/JSONException
    //   64	72	137	org/json/JSONException
    //   81	116	137	org/json/JSONException
  }
  
  public static boolean setKeyTime(String paramString, long paramLong)
  {
    boolean bool = false;
    for (;;)
    {
      String str2;
      try
      {
        str2 = ConFigFile.SD_INFO + "/cache_calDateTime.info";
        localObject = null;
        try
        {
          String str1 = FileUtil.readSDCardFile(str2);
          localObject = str1;
        }
        catch (IOException localIOException)
        {
          continue;
        }
        try
        {
          if (!TextUtil.notNull((String)localObject)) {
            continue;
          }
          LogUtil.v((String)localObject);
          localObject = new JSONObject((String)localObject);
          ((JSONObject)localObject).put(paramString, System.currentTimeMillis() + "#_#" + paramLong);
          FileUtil.writeSDCardFile(str2, ((JSONObject)localObject).toString().getBytes("UTF-8"), false);
          bool = true;
        }
        catch (Exception paramString)
        {
          continue;
        }
        return bool;
      }
      finally {}
      Object localObject = new JSONObject();
      ((JSONObject)localObject).put(paramString, System.currentTimeMillis() + "#_#" + paramLong);
      FileUtil.writeSDCardFile(str2, ((JSONObject)localObject).toString().getBytes("UTF-8"), false);
    }
  }
  
  /* Error */
  public static boolean testFailure(String paramString)
  {
    // Byte code:
    //   0: iconst_1
    //   1: istore_2
    //   2: ldc 2
    //   4: monitorenter
    //   5: new 16	java/lang/StringBuilder
    //   8: dup
    //   9: getstatic 22	com/yl/ml/date/ConFigFile:SD_INFO	Ljava/lang/String;
    //   12: invokestatic 28	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   15: invokespecial 31	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   18: ldc 33
    //   20: invokevirtual 37	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23: invokevirtual 41	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   26: astore 4
    //   28: aconst_null
    //   29: astore_3
    //   30: aload 4
    //   32: invokestatic 47	com/yl/codelib/utils/FileUtil:readSDCardFile	(Ljava/lang/String;)Ljava/lang/String;
    //   35: astore 4
    //   37: aload 4
    //   39: astore_3
    //   40: iload_2
    //   41: istore_1
    //   42: aload_3
    //   43: invokestatic 53	com/yl/codelib/utils/TextUtil:notNull	(Ljava/lang/String;)Z
    //   46: ifeq +70 -> 116
    //   49: new 60	org/json/JSONObject
    //   52: dup
    //   53: aload_3
    //   54: invokespecial 61	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   57: astore_3
    //   58: iload_2
    //   59: istore_1
    //   60: aload_3
    //   61: aload_0
    //   62: invokevirtual 138	org/json/JSONObject:has	(Ljava/lang/String;)Z
    //   65: ifeq +51 -> 116
    //   68: aload_3
    //   69: aload_0
    //   70: invokevirtual 91	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   73: astore_0
    //   74: invokestatic 143	com/yl/codelib/utils/TimeUtil:getNowDay	()Ljava/lang/String;
    //   77: astore_3
    //   78: iload_2
    //   79: istore_1
    //   80: aload_0
    //   81: aload_3
    //   82: invokevirtual 146	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   85: ifeq +31 -> 116
    //   88: aload_0
    //   89: new 16	java/lang/StringBuilder
    //   92: dup
    //   93: aload_3
    //   94: invokestatic 28	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   97: invokespecial 31	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   100: ldc 93
    //   102: invokevirtual 37	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   105: invokevirtual 41	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   108: ldc 119
    //   110: invokevirtual 150	java/lang/String:replace	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   113: pop
    //   114: iconst_0
    //   115: istore_1
    //   116: ldc 2
    //   118: monitorexit
    //   119: iload_1
    //   120: ireturn
    //   121: astore 4
    //   123: goto -83 -> 40
    //   126: astore_0
    //   127: ldc 2
    //   129: monitorexit
    //   130: aload_0
    //   131: athrow
    //   132: astore_0
    //   133: goto -19 -> 114
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	136	0	paramString	String
    //   41	79	1	bool1	boolean
    //   1	78	2	bool2	boolean
    //   29	65	3	localObject	Object
    //   26	12	4	str	String
    //   121	1	4	localIOException	IOException
    // Exception table:
    //   from	to	target	type
    //   30	37	121	java/io/IOException
    //   5	28	126	finally
    //   30	37	126	finally
    //   42	58	126	finally
    //   60	78	126	finally
    //   80	114	126	finally
    //   42	58	132	org/json/JSONException
    //   60	78	132	org/json/JSONException
    //   80	114	132	org/json/JSONException
  }
}
