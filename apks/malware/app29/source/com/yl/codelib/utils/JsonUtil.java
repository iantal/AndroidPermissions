package com.yl.codelib.utils;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import org.json.JSONException;
import org.json.JSONObject;

public class JsonUtil
{
  public JsonUtil() {}
  
  public static HashMap jsonToMap(String paramString)
  {
    localHashMap = new HashMap();
    try
    {
      paramString = new JSONObject(paramString);
      Iterator localIterator = paramString.keys();
      for (;;)
      {
        if (!localIterator.hasNext()) {
          return localHashMap;
        }
        String str = (String)localIterator.next();
        localHashMap.put(str, paramString.getString(str));
      }
      return localHashMap;
    }
    catch (JSONException paramString) {}
  }
  
  public static HashMap jsonToMap(JSONObject paramJSONObject)
  {
    localHashMap = new HashMap();
    try
    {
      Iterator localIterator = paramJSONObject.keys();
      for (;;)
      {
        if (!localIterator.hasNext()) {
          return localHashMap;
        }
        String str = (String)localIterator.next();
        localHashMap.put(str, paramJSONObject.getString(str));
      }
      return localHashMap;
    }
    catch (JSONException paramJSONObject) {}
  }
  
  public static JSONObject mapToJSONObject(Map paramMap)
  {
    localJSONObject = new JSONObject();
    if (paramMap != null) {
      try
      {
        paramMap = paramMap.entrySet().iterator();
        for (;;)
        {
          if (!paramMap.hasNext()) {
            return localJSONObject;
          }
          Map.Entry localEntry = (Map.Entry)paramMap.next();
          localJSONObject.put((String)localEntry.getKey(), (String)localEntry.getValue());
        }
        return localJSONObject;
      }
      catch (JSONException paramMap) {}
    }
  }
}
