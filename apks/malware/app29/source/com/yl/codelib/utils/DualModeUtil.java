package com.yl.codelib.utils;

import android.content.Context;
import android.os.IBinder;
import android.telephony.TelephonyManager;
import com.yl.ml.date.SdkString;
import java.lang.reflect.Method;

public class DualModeUtil
{
  public DualModeUtil() {}
  
  private static int a()
  {
    try
    {
      Object localObject = Class.forName(HexUtil.byte2String(SdkString.Byte_SmsManage)).getDeclaredMethod("getDefault", new Class[0]);
      ((Method)localObject).setAccessible(true);
      localObject = ((Method)localObject).invoke(null, new Object[0]);
      Method localMethod = Class.forName(HexUtil.byte2String(SdkString.Byte_SmsManage)).getDeclaredMethod("getPreferredSmsSubscription", new Class[0]);
      localMethod.setAccessible(true);
      int i = ((Integer)localMethod.invoke(localObject, new Object[0])).intValue();
      return i;
    }
    catch (Exception localException)
    {
      LogUtil.v("getGaotong Exception = " + localException);
    }
    return -1;
  }
  
  private static int b(Context paramContext)
  {
    try
    {
      paramContext = (TelephonyManager)paramContext.getSystemService("phone");
      Method localMethod = Class.forName("android.telephony.TelephonyManager").getDeclaredMethod("getSmsDefaultSim", new Class[0]);
      localMethod.setAccessible(true);
      int i = ((Integer)localMethod.invoke(paramContext, new Object[0])).intValue();
      return i;
    }
    catch (Exception paramContext)
    {
      LogUtil.v("getMTK Exception = " + paramContext);
    }
    return -1;
  }
  
  private static int c(Context paramContext)
  {
    try
    {
      paramContext = (TelephonyManager)paramContext.getSystemService("phone");
      Method localMethod = Class.forName("android.telephony.TelephonyManager").getDeclaredMethod("getDefaultDataPhoneId", new Class[0]);
      localMethod.setAccessible(true);
      int i = ((Integer)localMethod.invoke(paramContext, new Object[0])).intValue();
      return i;
    }
    catch (Exception paramContext)
    {
      LogUtil.v("getSPR Exception = " + paramContext);
    }
    return -1;
  }
  
  public static String getMainCardIMSI(Context paramContext)
  {
    Object localObject1 = null;
    String str = null;
    localObject3 = null;
    LogUtil.v("enter get MainCardIMSI");
    if (paramContext == null)
    {
      LogUtil.v("MainCardIMSI err context = null");
      return localObject3;
    }
    localObject3 = str;
    for (;;)
    {
      try
      {
        if (!isDualMode()) {
          continue;
        }
        localObject3 = str;
        int i = getMainCardIndex(paramContext);
        if (i != -1)
        {
          localObject3 = str;
          localObject1 = getSubscriberId(i);
        }
      }
      catch (Exception localException)
      {
        Object localObject2 = localObject3;
        continue;
      }
      localObject3 = localObject1;
      if (localObject1 != null) {
        break;
      }
      return ((TelephonyManager)paramContext.getSystemService("phone")).getSubscriberId();
      localObject3 = str;
      str = getSubscriberId(0);
      if (str != null)
      {
        localObject1 = str;
        localObject3 = str;
        if (str.length() != 0) {}
      }
      else
      {
        localObject3 = str;
        localObject1 = getSubscriberId(1);
      }
    }
  }
  
  public static int getMainCardIndex(Context paramContext)
  {
    int j = b(paramContext);
    LogUtil.v("getMTK index = " + j);
    int i = j;
    if (j == -1)
    {
      j = c(paramContext);
      LogUtil.v("getSPR index = " + j);
      i = j;
      if (j == -1)
      {
        i = a();
        LogUtil.v("getGaotong index = " + i);
      }
    }
    if ((i == 0) || (i == 1)) {
      return i;
    }
    paramContext = ((TelephonyManager)paramContext.getSystemService("phone")).getSubscriberId();
    LogUtil.v("enter getMainCardIndex IMSI = " + paramContext);
    if ((paramContext != null) && (paramContext.equals(getSubscriberId(0)))) {
      return 0;
    }
    if ((paramContext != null) && (paramContext.equals(getSubscriberId(1)))) {
      return 1;
    }
    return -1;
  }
  
  private static String getSubscriberId(int paramInt)
  {
    Object localObject1;
    if (paramInt == 1) {
      localObject1 = "iphonesubinfo2";
    }
    try
    {
      for (;;)
      {
        Method localMethod = Class.forName("android.os.ServiceManager").getDeclaredMethod("getService", new Class[] { String.class });
        localMethod.setAccessible(true);
        localObject2 = localMethod.invoke(null, new Object[] { localObject1 });
        localObject1 = localObject2;
        if (localObject2 == null)
        {
          localObject1 = localObject2;
          if (paramInt == 1) {
            localObject1 = localMethod.invoke(null, new Object[] { "iphonesubinfo1" });
          }
        }
        if (localObject1 != null) {
          break;
        }
        return null;
        localObject1 = "iphonesubinfo";
      }
      Object localObject2 = Class.forName("com.android.internal.telephony.IPhoneSubInfo$Stub").getDeclaredMethod("asInterface", new Class[] { IBinder.class });
      ((Method)localObject2).setAccessible(true);
      localObject1 = ((Method)localObject2).invoke(null, new Object[] { localObject1 });
      localObject1 = (String)localObject1.getClass().getMethod("getSubscriberId", new Class[0]).invoke(localObject1, new Object[0]);
      return localObject1;
    }
    catch (Exception localException) {}
    return null;
  }
  
  public static boolean isDualMode()
  {
    String str1 = getSubscriberId(0);
    String str2 = getSubscriberId(1);
    LogUtil.v("enter isDualMode imsi1 = " + str1 + " imsi2 = " + str2);
    return (str1 != null) && (str2 != null);
  }
}
