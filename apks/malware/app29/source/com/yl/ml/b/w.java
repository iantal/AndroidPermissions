package com.yl.ml.b;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import com.yl.codelib.utils.LogUtil;
import com.yl.codelib.utils.TextUtil;
import org.json.JSONException;
import org.json.JSONObject;

final class w
  implements Runnable
{
  w(u paramU, String paramString1, String paramString2, Handler paramHandler) {}
  
  public final void run()
  {
    int i = 0;
    for (;;)
    {
      if ((i >= 10) && ((!TextUtil.notNull(MA.g(u.a(this.aE)))) || (MA.g(u.a(this.aE)).equals("NO")))) {
        break label290;
      }
      try
      {
        localObject2 = new JSONObject(MA.g(u.a(this.aE)));
        Object localObject1 = ((JSONObject)localObject2).getString("resultCode");
        localObject2 = ((JSONObject)localObject2).getJSONObject("backParam");
        if (((String)localObject1).equals("0000"))
        {
          localObject1 = new Message();
          localObject2 = MA.submitVerifyCode(this.aD, (JSONObject)localObject2, this.aB);
          LogUtil.v("DDO提交验证码结果:" + ((JSONObject)localObject2).toString());
          localObject2 = ((JSONObject)localObject2).getString("resultCode");
          if (((String)localObject2).equals("0000"))
          {
            ((Message)localObject1).what = 1;
            ((Message)localObject1).obj = "9000";
            this.aC.sendMessage((Message)localObject1);
            return;
            i += 1;
            if (TextUtil.notNull(MA.g(u.a(this.aE)))) {
              continue;
            }
            try
            {
              Thread.sleep(1000L);
            }
            catch (InterruptedException localInterruptedException) {}
            continue;
          }
          localInterruptedException.what = -1;
          localInterruptedException.obj = localObject2;
          this.aC.sendMessage(localInterruptedException);
        }
      }
      catch (JSONException localJSONException)
      {
        localMessage = new Message();
        localMessage.what = 161;
        this.aC.sendMessage(localMessage);
        return;
      }
    }
    Object localObject2 = new Message();
    Bundle localBundle = new Bundle();
    localBundle.putString("code", localMessage);
    ((Message)localObject2).what = 160;
    ((Message)localObject2).setData(localBundle);
    this.aC.sendMessage((Message)localObject2);
    return;
    label290:
    Message localMessage = new Message();
    localMessage.what = 162;
    this.aC.sendMessage(localMessage);
  }
}
