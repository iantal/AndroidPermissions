package com.yl.ml.b;

import android.os.Handler;
import android.os.Message;
import com.yl.codelib.sim.SIMUtil;
import com.yl.codelib.utils.LogUtil;
import com.yl.codelib.utils.NetWorkUtil;
import com.yl.codelib.utils.OperatorUtil;
import com.yl.ml.common.AppDo;
import com.yl.ml.date.PayDetailInfo;
import com.yl.ml.listen.PCallback;
import com.yl.ml.thread.JiSuanSendSmsThread;
import java.net.URLDecoder;
import java.util.Map;
import org.json.JSONObject;

final class g
  extends Handler
{
  g(MA paramMA, PayDetailInfo paramPayDetailInfo, int paramInt, String paramString1, String paramString2, PCallback paramPCallback) {}
  
  public final void handleMessage(Message paramMessage)
  {
    switch (paramMessage.what)
    {
    default: 
      MA.a(this.ak, this.an, 40047, this.ap);
    }
    for (;;)
    {
      super.handleMessage(paramMessage);
      return;
      String str;
      try
      {
        Object localObject = (String)paramMessage.obj;
        LogUtil.v((String)localObject);
        localObject = new JSONObject((String)localObject);
        this.an.setNowBu(this.at);
        str = ((JSONObject)localObject).getString(this.av);
        localObject = ((JSONObject)localObject).getString(this.aw);
        str = URLDecoder.decode(str, "utf-8");
        if ((!str.equals("-1")) && (!((String)localObject).equals("-1"))) {
          break label165;
        }
        MA.a(this.ak, this.an, 7003, this.ap);
      }
      catch (Exception localException)
      {
        MA.a(this.ak, this.an, 7004, this.ap);
      }
      continue;
      label165:
      if ((str.equals("112233")) || (localException.equals("112233")))
      {
        MA.a(this.ak, this.an, 9000, this.ap);
      }
      else
      {
        Map localMap = AppDo.getUserBaseDeviceInfo(MA.a(this.ak));
        localMap.put("status", "10");
        localMap.put("fee", this.an.getPassId());
        localMap.put("orderNo", this.an.getStringNo());
        localMap.put("yys", OperatorUtil.getOperatorType(SIMUtil.getIMSI2(MA.a(this.ak)), NetWorkUtil.getNetWork(MA.a(this.ak)), null));
        new Thread(new JiSuanSendSmsThread(null, localMap)).start();
        MA.a(this.ak, MA.a(this.ak), this.an, this.ap);
        SIMUtil.sendSmsMessage(MA.a(this.ak), localException, str, null);
      }
    }
  }
}
