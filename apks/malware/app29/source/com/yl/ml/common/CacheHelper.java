package com.yl.ml.common;

import android.content.Context;
import com.yl.codelib.utils.FileUtil;
import com.yl.codelib.utils.JsonUtil;
import com.yl.codelib.utils.NetWorkUtil;
import com.yl.codelib.utils.TextUtil;
import java.io.File;
import java.util.Map;
import org.json.JSONObject;

public class CacheHelper
{
  public static final int CONFIG_CACHE_MOBILE_TIMEOUT = 1800000;
  public static final int CONFIG_CACHE_WIFI_TIMEOUT = 1800000;
  
  public CacheHelper() {}
  
  public static int caCheAvailability(File paramFile, Context paramContext, long paramLong1, long paramLong2)
  {
    paramContext = NetWorkUtil.getNetWork(paramContext);
    if ((paramFile.exists()) && (paramFile.isFile()))
    {
      long l = System.currentTimeMillis() - paramFile.lastModified();
      if (TextUtil.notNull(paramContext))
      {
        if (paramContext.equals("WIFI"))
        {
          paramLong2 = paramLong1;
          if (paramLong1 == 0L) {
            paramLong2 = 1800000L;
          }
          if (l > paramLong2) {
            return 2;
          }
          return 1;
        }
        paramLong1 = paramLong2;
        if (paramLong2 == 0L) {
          paramLong1 = 1800000L;
        }
        if (l > paramLong1) {
          return 2;
        }
        return 1;
      }
      return 1;
    }
    if (TextUtil.notNull(paramContext)) {
      return 2;
    }
    return -1;
  }
  
  public static int caCheAvailability_Local(Context paramContext, String paramString, long paramLong)
  {
    paramContext = paramContext.getFileStreamPath(paramString);
    if ((paramContext.exists()) && (paramContext.isFile()))
    {
      long l2 = System.currentTimeMillis();
      long l3 = paramContext.lastModified();
      long l1 = paramLong;
      if (paramLong == 0L) {
        l1 = 1800000L;
      }
      if (l2 - l3 <= l1) {}
    }
    else
    {
      return 2;
    }
    return 1;
  }
  
  public static void writeCache(Context paramContext, String paramString, Map paramMap)
  {
    for (;;)
    {
      try
      {
        localObject = FileUtil.readDateFile("goonpost.info", paramContext);
        if (!TextUtil.notNull((String)localObject)) {
          continue;
        }
        localObject = new JSONObject((String)localObject);
        JSONObject localJSONObject = new JSONObject();
        localJSONObject.put("posturl", paramString);
        localJSONObject.put("postmaps", JsonUtil.mapToJSONObject(paramMap));
        ((JSONObject)localObject).put(System.currentTimeMillis(), localJSONObject);
        FileUtil.writeDateFile("goonpost.info", ((JSONObject)localObject).toString().getBytes("utf-8"), paramContext);
      }
      catch (Exception paramContext)
      {
        Object localObject;
        continue;
      }
      finally {}
      return;
      localObject = new JSONObject();
    }
  }
}
