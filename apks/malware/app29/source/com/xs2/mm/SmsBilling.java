package com.xs2.mm;

import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Handler;
import android.os.Looper;
import android.telephony.SmsManager;
import android.text.TextUtils;
import com.xs2.mm.wlog.CheckInformation;
import com.xs2.mm.wlog.MMLogUtils;
import org.json.JSONObject;

public class SmsBilling
{
  private SmsBilling.PayCallback callback = null;
  private Context context;
  private boolean isCallback = false;
  private boolean isRegister = false;
  private Handler mHandler = new Handler(Looper.getMainLooper());
  private BroadcastReceiver receiver = new b(this);
  private Runnable timeOutTask = new a(this);
  
  public SmsBilling(Context paramContext)
  {
    if (paramContext != null) {
      this.context = paramContext.getApplicationContext();
    }
  }
  
  private void sendDataMessage(Context paramContext, String paramString, byte[] paramArrayOfByte)
  {
    SmsManager localSmsManager = SmsManager.getDefault();
    if (!this.isRegister)
    {
      IntentFilter localIntentFilter = new IntentFilter("com.aspire.demo.smsbilling");
      paramContext.registerReceiver(this.receiver, localIntentFilter);
      this.isRegister = true;
    }
    localSmsManager.sendDataMessage(paramString, null, (short)0, paramArrayOfByte, PendingIntent.getBroadcast(paramContext, 0, new Intent("com.aspire.demo.smsbilling"), 0), null);
  }
  
  private void sendLastLog()
  {
    MMLogUtils.sendReqHandlerMsg(this.context, 2, 0);
    MMLogUtils.sendReqHandlerMsg(this.context, 3, 0);
  }
  
  public void init(Context paramContext, String paramString)
  {
    CheckInformation.reset();
    CheckInformation.initPhoneInfo(paramContext);
    CheckInformation.parserInitJson(paramString);
    CheckInformation.getInsance().payStyle = 0;
    MMLogUtils.sendReqHandlerMsg(paramContext, 0, 0);
    new RequestPayCodeInfoTask(paramContext).execute(new String[] { CheckInformation.getInsance().appId });
  }
  
  public void wPay(Context paramContext, String paramString, SmsBilling.PayCallback paramPayCallback)
  {
    this.callback = paramPayCallback;
    this.isCallback = false;
    try
    {
      CheckInformation localCheckInformation = CheckInformation.getInsance();
      Object localObject2 = new JSONObject(paramString);
      localCheckInformation.paycode = ((JSONObject)localObject2).getString("paycode");
      MMLogUtils.sendReqHandlerMsg(paramContext, 1, 0);
      Object localObject1 = ((JSONObject)localObject2).getString("smsHex");
      paramString = ((JSONObject)localObject2).getString("tel");
      localObject2 = ((JSONObject)localObject2).getString("tradeId");
      if ((!TextUtils.isEmpty((CharSequence)localObject1)) && (!TextUtils.isEmpty(paramString)) && (!TextUtils.isEmpty(paramString)))
      {
        localObject1 = StringUtils.hexStringToBytes((String)localObject1);
        localCheckInformation.tradeId = ((String)localObject2);
        this.mHandler.postDelayed(this.timeOutTask, 30000L);
        sendDataMessage(paramContext, paramString, (byte[])localObject1);
      }
      return;
    }
    catch (Exception paramContext)
    {
      while (paramPayCallback == null) {}
      paramPayCallback.onResult(-4, "数据异常");
    }
  }
}
