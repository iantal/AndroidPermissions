package com.fastfun2.sdk.external;

import android.content.Context;
import com.fastfun2.sdk.FastFunSdk.IOnFastFunSdkListener;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class ExternalPayManager
  implements IExternalResultListener
{
  private Context mContext;
  private List<ExternalPay> mExternalPays = new ArrayList();
  private boolean mPaying = false;
  private List<Vo_PayInfo> mVoPayInfos = new ArrayList();
  
  public ExternalPayManager(Context paramContext)
  {
    this.mContext = paramContext;
    createExternalPays();
  }
  
  private void createExternalPays()
  {
    this.mExternalPays.add(new WuXuSdk318(this.mContext));
    this.mExternalPays.add(new WuXuSdk317(this.mContext));
    this.mExternalPays.add(new XsMmSdk(this.mContext));
  }
  
  private void nextExternalPay(int paramInt1, int paramInt2, Vo_PayInfo paramVo_PayInfo)
  {
    if (paramInt1 >= this.mExternalPays.size())
    {
      paramVo_PayInfo.getOnFastFunSdkListener().onPayResult(false, paramInt2, paramVo_PayInfo.getCpParam());
      payEnd();
      return;
    }
    ((ExternalPay)this.mExternalPays.get(paramInt1)).pay(new Vo_ExternalPayInfo(paramInt1, paramVo_PayInfo, this));
  }
  
  private void nextExternalPay(int paramInt, Vo_PayInfo paramVo_PayInfo)
  {
    nextExternalPay(paramInt, 1004, paramVo_PayInfo);
  }
  
  private void nextPay()
  {
    if (this.mPaying) {}
    while (this.mVoPayInfos.size() <= 0) {
      return;
    }
    Vo_PayInfo localVo_PayInfo = (Vo_PayInfo)this.mVoPayInfos.get(0);
    this.mVoPayInfos.remove(localVo_PayInfo);
    payStart(localVo_PayInfo);
  }
  
  private void payEnd()
  {
    this.mPaying = false;
    nextPay();
  }
  
  private void payStart(Vo_PayInfo paramVo_PayInfo)
  {
    this.mPaying = true;
    nextExternalPay(0, paramVo_PayInfo);
  }
  
  public void destroy()
  {
    Iterator localIterator = this.mExternalPays.iterator();
    for (;;)
    {
      if (!localIterator.hasNext()) {
        return;
      }
      ((ExternalPay)localIterator.next()).onDestroy();
    }
  }
  
  public Context getContext()
  {
    return this.mContext;
  }
  
  public void init(String paramString)
  {
    Iterator localIterator = this.mExternalPays.iterator();
    for (;;)
    {
      if (!localIterator.hasNext()) {
        return;
      }
      ((ExternalPay)localIterator.next()).init(paramString);
    }
  }
  
  public void onExternalResult(boolean paramBoolean, int paramInt, Vo_ExternalPayInfo paramVo_ExternalPayInfo)
  {
    Vo_PayInfo localVo_PayInfo = paramVo_ExternalPayInfo.getVoPayInfo();
    if (paramBoolean)
    {
      localVo_PayInfo.getOnFastFunSdkListener().onPayResult(paramBoolean, paramInt, localVo_PayInfo.getCpParam());
      payEnd();
      return;
    }
    nextExternalPay(paramVo_ExternalPayInfo.getIndex() + 1, paramInt, localVo_PayInfo);
  }
  
  public void pause()
  {
    Iterator localIterator = this.mExternalPays.iterator();
    for (;;)
    {
      if (!localIterator.hasNext()) {
        return;
      }
      ((ExternalPay)localIterator.next()).onPause();
    }
  }
  
  public void pay(Context paramContext, int paramInt, String paramString, FastFunSdk.IOnFastFunSdkListener paramIOnFastFunSdkListener)
  {
    this.mVoPayInfos.add(new Vo_PayInfo(paramContext, paramInt, paramString, paramIOnFastFunSdkListener));
    nextPay();
  }
  
  public void resume()
  {
    Iterator localIterator = this.mExternalPays.iterator();
    for (;;)
    {
      if (!localIterator.hasNext()) {
        return;
      }
      ((ExternalPay)localIterator.next()).onResume();
    }
  }
}
