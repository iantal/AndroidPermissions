package com.fastfun2.sdk.mmlog318;

import android.content.Context;
import android.content.res.Resources;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.os.Build.VERSION;
import android.telephony.TelephonyManager;
import android.util.Base64;
import android.util.DisplayMetrics;
import android.util.Log;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Enumeration;

public final class c
{
  public static int A = 1010;
  public static int B = 1011;
  public static int C = 1012;
  public static int D = 1013;
  public static int E = 1014;
  public static int F = 1015;
  public static int G = 2001;
  public static int H = 2002;
  public static int I = 2003;
  public static int J = 2004;
  public static int K = 2005;
  private static long L;
  private static long M;
  private static long N;
  private static long O;
  public static int a = 2006;
  public static int b = 2007;
  public static int c = 2008;
  public static int d = 2009;
  public static int e = 2010;
  public static int f = 2011;
  public static int g = 2012;
  public static int h = 2013;
  public static int i = 2014;
  public static int j = 2015;
  public static int k = 2016;
  public static int l = 2017;
  public static int m = 2018;
  public static int n = 2019;
  public static int o = 2020;
  public static int p = 2021;
  public static int q;
  public static int r;
  public static int s;
  public static int t;
  public static int u;
  public static int v;
  public static int w;
  public static int x;
  public static int y;
  public static int z;
  
  static
  {
    L = 0L;
    M = 0L;
    N = 0L;
    O = 0L;
    q = -1;
    r = 1001;
    s = 1002;
    t = 1003;
    u = 1004;
    v = 1005;
    w = 1006;
    x = 1007;
    y = 1008;
    z = 1009;
  }
  
  public c() {}
  
  public static long a()
  {
    return M;
  }
  
  private static String a(Context paramContext, int paramInt)
  {
    String str5 = TrustInfo.appId;
    String str6 = TrustInfo.paycode;
    String str11 = TrustInfo.tid;
    Object localObject2 = TrustInfo.packageName;
    if (localObject2 == null) {
      localObject2 = TrustInfo.packageName;
    }
    for (;;)
    {
      String str7 = TrustInfo.version;
      String str8 = TrustInfo.channelID;
      String str1 = ((TelephonyManager)paramContext.getSystemService("phone")).getSubscriberId();
      if (str1 == null) {
        str1 = "10086";
      }
      for (;;)
      {
        String str2 = ((TelephonyManager)paramContext.getSystemService("phone")).getDeviceId();
        if ((str2 == null) || (str2.equals(""))) {
          str2 = "10086";
        }
        for (;;)
        {
          String str14 = Build.MODEL;
          String str9 = TrustInfo.programID;
          String str15 = Build.VERSION.RELEASE;
          String str16 = d(paramContext).widthPixels + "*" + d(paramContext).heightPixels;
          String str10 = d();
          Object localObject1 = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
          if (localObject1 == null) {
            localObject1 = "";
          }
          label2415:
          for (;;)
          {
            String str3 = "";
            if (((String)localObject1).compareTo("GPRS") != 0) {
              str3 = ((WifiManager)paramContext.getSystemService("wifi")).getConnectionInfo().getSSID();
            }
            String str12 = String.valueOf(L);
            String str13 = String.valueOf(M);
            String str4 = "unknown";
            long l1 = Calendar.getInstance().getTimeInMillis() / 1000L;
            String str17 = h();
            String str18 = TrustInfo.channel;
            if ("mm_weak".equals(str18))
            {
              paramContext = str4;
              switch (q)
              {
              default: 
                paramContext = str4;
              }
            }
            for (;;)
            {
              if (q == 5)
              {
                paramContext = TrustInfo.esm;
                str4 = TrustInfo.mdh;
                str11 = TrustInfo.pkm;
                localObject1 = paramContext + "@@" + str4 + "@@" + str11 + "@@" + str5 + "@@" + str6 + "@@1@@0@@" + (String)localObject2 + "@@" + str7 + "@@" + str8 + "@@" + str9 + "@@" + str1 + "@@" + str2 + "@@" + (String)localObject1 + "@@" + str10 + "@@" + str3 + "@@" + str12 + "@@" + str13;
                paramContext = (Context)localObject1;
                if (TrustInfo.sda != null)
                {
                  paramContext = (Context)localObject1;
                  if (TrustInfo.sda.length() > 100)
                  {
                    localObject2 = TrustInfo.sda.split("@");
                    paramContext = localObject2[0].trim();
                    localObject2 = localObject2[1].trim();
                  }
                }
              }
              try
              {
                localObject2 = h.a(((String)localObject1).getBytes(), (String)localObject2);
                paramContext = str5 + "#" + paramContext + "#" + Base64.encodeToString((byte[])localObject2, 2);
                return paramContext;
              }
              catch (Exception paramContext)
              {
                paramContext.printStackTrace();
                return localObject1;
              }
              localObject1 = ((NetworkInfo)localObject1).getTypeName();
              if ((((String)localObject1).compareTo("MOBILE") != 0) && (((String)localObject1).compareTo("mobile") != 0)) {
                break label2415;
              }
              localObject1 = "GPRS";
              break;
              if (paramInt == 0)
              {
                paramContext = "1@@" + str5 + "@@" + (String)localObject2 + "@@" + str7 + "@@" + str8 + "@@" + str1 + "@@" + str2 + "@@" + str14 + "@@" + str15 + "@@" + str16 + "@@" + (String)localObject1 + "@@" + str10 + "@@" + str3 + "@@" + str7 + "@@" + str12 + "@@" + str13;
              }
              else if (paramInt == 1)
              {
                paramContext = "1@@" + str5 + "@@" + (String)localObject2 + "@@" + str7 + "@@" + str8 + "@@" + str9 + "@@" + str1 + "@@" + str2 + "@@" + str14 + "@@" + str15 + "@@" + str16 + "@@" + (String)localObject1 + "@@" + str10 + "@@" + str3 + "@@" + str7 + "@@" + str12 + "@@" + str13 + "@@3";
              }
              else
              {
                paramContext = "2@@" + str5 + "@@" + str6 + "@@1@@" + null + "@@0@@" + (String)localObject2 + "@@" + str7 + "@@" + str8 + "@@" + str9 + "@@" + str1 + "@@" + str2 + "@@" + (String)localObject1 + "@@" + str10 + "@@" + str3 + "@@" + str7 + "@@" + str12 + "@@" + str13 + "@@3";
                continue;
                paramContext = "2@@" + str5 + "@@" + str6 + "@@1@@" + str11 + "@@0@@" + (String)localObject2 + "@@" + str7 + "@@" + str8 + "@@" + str9 + "@@" + str1 + "@@" + str2 + "@@" + (String)localObject1 + "@@" + str10 + "@@" + str3 + "@@" + str7 + "@@" + str12 + "@@" + str13 + "@@3";
                continue;
                paramContext = str5 + "@@" + (String)localObject2 + "@@" + str7 + "@@" + str8 + "@@" + str9 + "@@" + str1 + "@@" + str2 + "@@" + str7 + "@@" + str17 + "@@@@3";
                continue;
                paramContext = str4;
                if ("mm_strong".equals(str18)) {
                  switch (q)
                  {
                  default: 
                    paramContext = str4;
                    break;
                  case 1: 
                    if (paramInt == 0) {
                      paramContext = "1@@" + str5 + "@@" + (String)localObject2 + "@@" + str7 + "@@" + str8 + "@@" + str1 + "@@" + str2 + "@@" + str14 + "@@" + str15 + "@@" + str16 + "@@" + (String)localObject1 + "@@" + str10 + "@@" + str3 + "@@" + str7 + "@@" + str12 + "@@" + str13;
                    } else if (paramInt == 1) {
                      paramContext = "1@@" + str5 + "@@" + (String)localObject2 + "@@" + str7 + "@@" + str8 + "@@" + str9 + "@@" + str1 + "@@" + str2 + "@@" + str14 + "@@" + str15 + "@@" + str16 + "@@" + (String)localObject1 + "@@" + str10 + "@@" + str3 + "@@" + str7 + "@@" + str12 + "@@" + str13 + "@@3";
                    }
                    break;
                  case 2: 
                    paramContext = "1@@" + str5 + "@@" + str6 + "@@1@@" + str11 + "@@0@@" + (String)localObject2 + "@@" + str7 + "@@" + str8 + "@@" + str1 + "@@" + str2 + "@@" + (String)localObject1 + "@@" + str10 + "@@" + str3 + "@@" + str7 + "@@" + str12 + "@@" + str13;
                    break;
                  case 3: 
                    paramContext = "1@@" + str5 + "@@" + str6 + "@@1@@" + str11 + "@@0@@" + (String)localObject2 + "@@" + str7 + "@@" + str8 + "@@" + str1 + "@@" + str2 + "@@" + (String)localObject1 + "@@" + str10 + "@@" + str3 + "@@" + str7 + "@@" + str12 + "@@" + str13;
                    break;
                  case 4: 
                    new StringBuilder("1@@").append(str5).append("@@").append((String)localObject2).append("@@2@@").append(str8).append("@@").append(str8).append("@@").append(str9).append("@@").append(str1).append("@@").append(str2).append("@@").append(str7).append("@@").append(str14).append("@@Android@@").append(str15).append("@@").append(l1).append("@@").append(paramInt);
                    paramContext = str4;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  public static void a(long paramLong)
  {
    M = paramLong;
  }
  
  public static void a(Context paramContext)
  {
    switch (q)
    {
    default: 
      e.c(paramContext, g(), a(paramContext, 0));
      return;
    }
    e.c(paramContext, g(), a(paramContext, 0));
    e.c(paramContext, g(), a(paramContext, 1));
  }
  
  public static void a(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8, String paramString9)
  {
    e.a(paramContext, paramString1, paramString2, paramString3, paramString4, paramString5, paramString6, paramString7, paramString8, paramString9);
  }
  
  private static String b(Context paramContext)
  {
    String str = ((TelephonyManager)paramContext.getSystemService("phone")).getSubscriberId();
    paramContext = str;
    if (str == null) {
      paramContext = "10086";
    }
    return paramContext;
  }
  
  public static void b()
  {
    L = Calendar.getInstance().getTimeInMillis() / 1000L;
  }
  
  public static void b(long paramLong)
  {
    L = paramLong;
  }
  
  private static void b(Context paramContext, int paramInt)
  {
    q = 4;
    e.c(paramContext, g(), a(paramContext, paramInt));
  }
  
  private static String c(Context paramContext)
  {
    String str = ((TelephonyManager)paramContext.getSystemService("phone")).getDeviceId();
    if (str != null)
    {
      paramContext = str;
      if (!str.equals("")) {}
    }
    else
    {
      paramContext = "10086";
    }
    return paramContext;
  }
  
  public static void c()
  {
    M = Calendar.getInstance().getTimeInMillis() / 1000L;
  }
  
  private static void c(long paramLong)
  {
    N = paramLong;
  }
  
  private static DisplayMetrics d(Context paramContext)
  {
    new DisplayMetrics();
    return paramContext.getResources().getDisplayMetrics();
  }
  
  private static String d()
  {
    try
    {
      localObject = NetworkInterface.getNetworkInterfaces();
      boolean bool = ((Enumeration)localObject).hasMoreElements();
      if (bool) {
        break label18;
      }
    }
    catch (SocketException localSocketException)
    {
      for (;;)
      {
        Object localObject;
        label18:
        Enumeration localEnumeration;
        InetAddress localInetAddress;
        Log.e("WifiPreference IpAddress", localSocketException.toString());
      }
    }
    return "";
    localEnumeration = ((NetworkInterface)((Enumeration)localObject).nextElement()).getInetAddresses();
    do
    {
      if (!localEnumeration.hasMoreElements()) {
        break;
      }
      localInetAddress = (InetAddress)localEnumeration.nextElement();
    } while (localInetAddress.isLoopbackAddress());
    localObject = localInetAddress.getHostAddress().toString();
    return localObject;
  }
  
  private static long e()
  {
    return N;
  }
  
  private static String e(Context paramContext)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    if (paramContext == null) {
      paramContext = "";
    }
    String str;
    do
    {
      return paramContext;
      str = paramContext.getTypeName();
      if (str.compareTo("MOBILE") == 0) {
        break;
      }
      paramContext = str;
    } while (str.compareTo("mobile") != 0);
    return "GPRS";
  }
  
  private static long f()
  {
    return L;
  }
  
  private static String f(Context paramContext)
  {
    return ((WifiManager)paramContext.getSystemService("wifi")).getConnectionInfo().getSSID();
  }
  
  private static String g()
  {
    switch (q)
    {
    case 4: 
    default: 
      return "_pay_logaction";
    case 1: 
      return "_pay_init";
    case 2: 
      return "_pay_auth";
    case 3: 
      return "_pay_pay";
    case 5: 
      return "_security_check";
    }
    return "_pay_remain";
  }
  
  private static String h()
  {
    Object localObject = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    Date localDate = new Date();
    try
    {
      localObject = ((SimpleDateFormat)localObject).parse("2010-01-01 0:0:0");
      return Long.toString((new Date().getTime() - ((Date)localObject).getTime()) / 1000L);
    }
    catch (ParseException localParseException)
    {
      localParseException.printStackTrace();
    }
    return Long.toString((new Date().getTime() - localDate.getTime()) / 1000L);
  }
}
