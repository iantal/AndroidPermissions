package com.fastfun2.sdk.util;

final class c
  extends a
{
  private static final byte[] h;
  private static final byte[] i;
  public final boolean d;
  public final boolean e;
  public final boolean f;
  int g;
  private final byte[] j;
  private int k;
  private final byte[] l;
  
  static
  {
    if (!Base64.class.desiredAssertionStatus()) {}
    for (boolean bool = true;; bool = false)
    {
      c = bool;
      h = new byte[] { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47 };
      i = new byte[] { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95 };
      return;
    }
  }
  
  public c(int paramInt)
  {
    this.b = null;
    boolean bool1;
    label32:
    label45:
    byte[] arrayOfByte;
    if ((paramInt & 0x1) == 0)
    {
      bool1 = true;
      this.f = bool1;
      if ((paramInt & 0x2) != 0) {
        break label101;
      }
      bool1 = true;
      this.e = bool1;
      if ((paramInt & 0x4) == 0) {
        break label106;
      }
      bool1 = bool2;
      this.d = bool1;
      if ((paramInt & 0x8) != 0) {
        break label111;
      }
      arrayOfByte = h;
      label62:
      this.j = arrayOfByte;
      this.l = new byte[2];
      this.g = 0;
      if (!this.e) {
        break label119;
      }
    }
    label101:
    label106:
    label111:
    label119:
    for (paramInt = 19;; paramInt = -1)
    {
      this.k = paramInt;
      return;
      bool1 = false;
      break;
      bool1 = false;
      break label32;
      bool1 = false;
      break label45;
      arrayOfByte = i;
      break label62;
    }
  }
  
  public final boolean a(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
  {
    byte[] arrayOfByte1 = this.j;
    byte[] arrayOfByte2 = this.b;
    int i1 = this.k;
    int i4 = paramInt2 + paramInt1;
    switch (this.g)
    {
    default: 
      paramInt2 = -1;
    }
    for (;;)
    {
      int n = 0;
      int m = i1;
      if (paramInt2 != -1)
      {
        arrayOfByte2[0] = arrayOfByte1[(paramInt2 >> 18 & 0x3F)];
        arrayOfByte2[1] = arrayOfByte1[(paramInt2 >> 12 & 0x3F)];
        arrayOfByte2[2] = arrayOfByte1[(paramInt2 >> 6 & 0x3F)];
        arrayOfByte2[3] = arrayOfByte1[(paramInt2 & 0x3F)];
        paramInt2 = i1 - 1;
        n = 4;
        m = paramInt2;
        if (paramInt2 == 0)
        {
          paramInt2 = 4;
          if (this.d)
          {
            arrayOfByte2[4] = 13;
            paramInt2 = 5;
          }
          n = paramInt2 + 1;
          arrayOfByte2[paramInt2] = 10;
          m = 19;
          paramInt2 = n;
        }
      }
      label169:
      label675:
      label690:
      label722:
      label917:
      label1004:
      label1038:
      label1044:
      for (;;)
      {
        int i2;
        if (paramInt1 + 3 > i4)
        {
          if (paramInt1 - this.g != i4 - 1) {
            break label690;
          }
          if (this.g <= 0) {
            break label675;
          }
          i1 = this.l[0];
          i2 = 1;
          n = paramInt1;
        }
        for (paramInt1 = i2;; paramInt1 = 0)
        {
          i1 = (i1 & 0xFF) << 4;
          this.g -= paramInt1;
          paramInt1 = paramInt2 + 1;
          arrayOfByte2[paramInt2] = arrayOfByte1[(i1 >> 6 & 0x3F)];
          paramInt2 = paramInt1 + 1;
          arrayOfByte2[paramInt1] = arrayOfByte1[(i1 & 0x3F)];
          paramInt1 = paramInt2;
          if (this.f)
          {
            i1 = paramInt2 + 1;
            arrayOfByte2[paramInt2] = 61;
            paramInt1 = i1 + 1;
            arrayOfByte2[i1] = 61;
          }
          paramInt2 = paramInt1;
          i1 = n;
          if (this.e)
          {
            paramInt2 = paramInt1;
            if (this.d)
            {
              arrayOfByte2[paramInt1] = 13;
              paramInt2 = paramInt1 + 1;
            }
            arrayOfByte2[paramInt2] = 10;
            paramInt2 += 1;
            i1 = n;
          }
          if ((c) || (this.g == 0)) {
            break label1004;
          }
          throw new AssertionError();
          if (paramInt1 + 2 > i4) {
            break label1047;
          }
          paramInt2 = this.l[0];
          m = paramInt1 + 1;
          n = paramArrayOfByte[paramInt1];
          i2 = paramArrayOfByte[m];
          this.g = 0;
          paramInt1 = m + 1;
          paramInt2 = (paramInt2 & 0xFF) << 16 | (n & 0xFF) << 8 | i2 & 0xFF;
          break;
          if (paramInt1 + 1 > i4) {
            break label1047;
          }
          paramInt2 = this.l[0];
          m = this.l[1];
          n = paramArrayOfByte[paramInt1];
          this.g = 0;
          paramInt1 += 1;
          paramInt2 = (paramInt2 & 0xFF) << 16 | (m & 0xFF) << 8 | n & 0xFF;
          break;
          n = (paramArrayOfByte[paramInt1] & 0xFF) << 16 | (paramArrayOfByte[(paramInt1 + 1)] & 0xFF) << 8 | paramArrayOfByte[(paramInt1 + 2)] & 0xFF;
          arrayOfByte2[paramInt2] = arrayOfByte1[(n >> 18 & 0x3F)];
          arrayOfByte2[(paramInt2 + 1)] = arrayOfByte1[(n >> 12 & 0x3F)];
          arrayOfByte2[(paramInt2 + 2)] = arrayOfByte1[(n >> 6 & 0x3F)];
          arrayOfByte2[(paramInt2 + 3)] = arrayOfByte1[(n & 0x3F)];
          n = paramInt1 + 3;
          i1 = paramInt2 + 4;
          i2 = m - 1;
          paramInt1 = n;
          m = i2;
          paramInt2 = i1;
          if (i2 != 0) {
            break label1044;
          }
          paramInt1 = i1;
          if (this.d)
          {
            arrayOfByte2[i1] = 13;
            paramInt1 = i1 + 1;
          }
          paramInt2 = paramInt1 + 1;
          arrayOfByte2[paramInt1] = 10;
          m = 19;
          paramInt1 = n;
          break label169;
          i1 = paramArrayOfByte[paramInt1];
          n = paramInt1 + 1;
        }
        if (paramInt1 - this.g == i4 - 2)
        {
          int i3;
          if (this.g > 1)
          {
            i1 = this.l[0];
            n = 1;
            if (this.g <= 0) {
              break label917;
            }
            i3 = this.l[n];
            i2 = n + 1;
          }
          for (n = paramInt1;; n = paramInt1)
          {
            paramInt1 = (i1 & 0xFF) << 10 | (i3 & 0xFF) << 2;
            this.g -= i2;
            i1 = paramInt2 + 1;
            arrayOfByte2[paramInt2] = arrayOfByte1[(paramInt1 >> 12 & 0x3F)];
            i2 = i1 + 1;
            arrayOfByte2[i1] = arrayOfByte1[(paramInt1 >> 6 & 0x3F)];
            paramInt2 = i2 + 1;
            arrayOfByte2[i2] = arrayOfByte1[(paramInt1 & 0x3F)];
            paramInt1 = paramInt2;
            if (this.f)
            {
              arrayOfByte2[paramInt2] = 61;
              paramInt1 = paramInt2 + 1;
            }
            paramInt2 = paramInt1;
            i1 = n;
            if (!this.e) {
              break;
            }
            paramInt2 = paramInt1;
            if (this.d)
            {
              arrayOfByte2[paramInt1] = 13;
              paramInt2 = paramInt1 + 1;
            }
            arrayOfByte2[paramInt2] = 10;
            paramInt2 += 1;
            i1 = n;
            break;
            i1 = paramArrayOfByte[paramInt1];
            paramInt1 += 1;
            n = 0;
            break label722;
            i3 = paramArrayOfByte[paramInt1];
            paramInt1 += 1;
            i2 = n;
          }
        }
        n = paramInt2;
        if (this.e)
        {
          n = paramInt2;
          if (paramInt2 > 0)
          {
            n = paramInt2;
            if (m != 19)
            {
              if (!this.d) {
                break label1038;
              }
              n = paramInt2 + 1;
              arrayOfByte2[paramInt2] = 13;
              paramInt2 = n;
            }
          }
        }
        for (;;)
        {
          n = paramInt2 + 1;
          arrayOfByte2[paramInt2] = 10;
          paramInt2 = n;
          i1 = paramInt1;
          break;
          if ((!c) && (i1 != i4)) {
            throw new AssertionError();
          }
          this.a = paramInt2;
          this.k = m;
          return true;
        }
        paramInt2 = n;
      }
      label1047:
      paramInt2 = -1;
    }
  }
}
