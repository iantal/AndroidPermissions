package com.jx.night.unit;

import java.util.Arrays;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public class o
{
  public static String a(String paramString, Map<String, Object> paramMap)
  {
    if (paramMap == null) {
      return "";
    }
    Iterator localIterator = paramMap.entrySet().iterator();
    if (localIterator.hasNext())
    {
      Map.Entry localEntry = (Map.Entry)localIterator.next();
      StringBuilder localStringBuilder = new StringBuilder().append(paramString);
      if (paramString.contains("?")) {}
      for (paramString = "&";; paramString = "?")
      {
        paramString = paramString + (String)localEntry.getKey() + "=" + localEntry.getValue();
        break;
      }
    }
    return paramString + "&hash=" + a(paramMap, null);
  }
  
  public static String a(Map<String, Object> paramMap1, Map<String, Object> paramMap2)
  {
    int j = 0;
    StringBuilder localStringBuilder = new StringBuilder("yuafenba(&^%_=>yuafenba|");
    Object localObject;
    int i;
    if (paramMap1 != null)
    {
      localObject = new String[paramMap1.size()];
      Iterator localIterator = paramMap1.entrySet().iterator();
      i = 0;
      while (localIterator.hasNext())
      {
        localObject[i] = ((String)((Map.Entry)localIterator.next()).getKey());
        i += 1;
      }
      Arrays.sort((Object[])localObject, String.CASE_INSENSITIVE_ORDER);
      i = 0;
      while (i < localObject.length)
      {
        localStringBuilder.append(paramMap1.get(localObject[i]).toString());
        localStringBuilder.append("|");
        i += 1;
      }
    }
    if (paramMap2 != null)
    {
      paramMap1 = new String[paramMap2.size()];
      localObject = paramMap2.entrySet().iterator();
      i = 0;
      while (((Iterator)localObject).hasNext())
      {
        paramMap1[i] = ((String)((Map.Entry)((Iterator)localObject).next()).getKey());
        i += 1;
      }
      Arrays.sort(paramMap1, String.CASE_INSENSITIVE_ORDER);
      i = j;
      while (i < paramMap1.length)
      {
        localStringBuilder.append(paramMap2.get(paramMap1[i]).toString());
        if (i != paramMap2.size() - 1) {
          localStringBuilder.append("|");
        }
        i += 1;
      }
    }
    return h.a(localStringBuilder.toString());
  }
}
