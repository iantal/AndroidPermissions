package com.xiipay.b;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.wifi.WifiManager;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ByteArrayEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;

public final class f
{
  public static int a(Context paramContext)
  {
    WifiManager localWifiManager = (WifiManager)paramContext.getSystemService("wifi");
    if ((localWifiManager != null) && (localWifiManager.isWifiEnabled())) {
      return 2;
    }
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    if ((paramContext == null) || (paramContext.getExtraInfo() == null)) {
      return -1;
    }
    if (paramContext.getExtraInfo().toLowerCase().indexOf("wap") != -1) {
      return 0;
    }
    if (paramContext.getExtraInfo().toLowerCase().indexOf("net") != -1) {
      return 1;
    }
    return -1;
  }
  
  private static HttpResponse a(HttpClient paramHttpClient, String paramString, int paramInt, byte[] paramArrayOfByte)
  {
    boolean bool2 = false;
    boolean bool1 = false;
    for (;;)
    {
      try
      {
        paramString = e.a(paramString);
        if (paramArrayOfByte != null) {
          break label231;
        }
        if (paramInt == 0) {
          bool1 = true;
        }
        paramArrayOfByte = new HttpGet(paramString.a(bool1));
        if (paramInt == 0)
        {
          paramArrayOfByte.setHeader("X-Online-Host", paramString.a() + ":" + paramString.b());
          if ((-1L > -1L) && (-1L > -1L)) {
            paramArrayOfByte.setHeader("Range", "bytes=-1--1");
          }
        }
        return paramHttpClient.execute(paramArrayOfByte);
      }
      catch (Exception paramHttpClient)
      {
        HttpPost localHttpPost;
        return null;
      }
      localHttpPost = new HttpPost(paramString.a(bool1));
      if (paramInt == 0)
      {
        localHttpPost.setHeader("X-Online-Host", paramString.a() + ":" + paramString.b());
        if ((-1L > -1L) && (-1L > -1L)) {
          localHttpPost.setHeader("Range", "bytes=-1--1");
        }
      }
      localHttpPost.addHeader("Content-Type", "text/plain");
      localHttpPost.setEntity(new ByteArrayEntity(paramArrayOfByte));
      paramHttpClient = paramHttpClient.execute(localHttpPost);
      return paramHttpClient;
      label231:
      bool1 = bool2;
      if (paramInt == 0) {
        bool1 = true;
      }
    }
  }
  
  public static byte[] a(String paramString, int paramInt, byte[] paramArrayOfByte)
  {
    BasicHttpParams localBasicHttpParams = new BasicHttpParams();
    HttpConnectionParams.setConnectionTimeout(localBasicHttpParams, 10000);
    HttpConnectionParams.setSoTimeout(localBasicHttpParams, 10000);
    paramString = a(new DefaultHttpClient(localBasicHttpParams), paramString, paramInt, paramArrayOfByte);
    if (paramString.getStatusLine().getStatusCode() != 200) {
      return null;
    }
    try
    {
      paramString = b.a(paramString.getEntity().getContent());
      return paramString;
    }
    catch (Exception paramString) {}
    return null;
  }
}
