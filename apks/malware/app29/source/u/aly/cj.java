package u.aly;

import java.nio.ByteBuffer;
import java.util.HashMap;
import java.util.Map;

public abstract class cj<T extends cj<?, ?>, F extends gk>
  implements gd<T, F>
{
  private static final Map<Class<? extends hc>, hd> a = new HashMap();
  protected Object b = null;
  protected F c = null;
  
  static
  {
    a.put(di.class, new go(null));
    a.put(dj.class, new gq(null));
  }
  
  protected cj() {}
  
  protected abstract Object a(gw paramGw, gt paramGt);
  
  protected abstract Object a(gw paramGw, short paramShort);
  
  protected abstract gt a(F paramF);
  
  protected abstract hb a();
  
  public void a(gw paramGw)
  {
    ((hd)a.get(paramGw.y())).b().b(paramGw, this);
  }
  
  public F b()
  {
    return this.c;
  }
  
  protected abstract F b(short paramShort);
  
  public void b(gw paramGw)
  {
    ((hd)a.get(paramGw.y())).b().a(paramGw, this);
  }
  
  public Object c()
  {
    return this.b;
  }
  
  protected abstract void c(gw paramGw);
  
  protected abstract void d(gw paramGw);
  
  public boolean d()
  {
    return this.c != null;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("<");
    localStringBuilder.append(getClass().getSimpleName());
    localStringBuilder.append(" ");
    Object localObject;
    if (b() != null)
    {
      localObject = c();
      localStringBuilder.append(a(b()).a);
      localStringBuilder.append(":");
      if (!(localObject instanceof ByteBuffer)) {
        break label96;
      }
      gf.a((ByteBuffer)localObject, localStringBuilder);
    }
    for (;;)
    {
      localStringBuilder.append(">");
      return localStringBuilder.toString();
      label96:
      localStringBuilder.append(localObject.toString());
    }
  }
}
