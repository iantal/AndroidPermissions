package u.aly;

import java.util.BitSet;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

class bx
  extends dj<ao>
{
  private bx() {}
  
  public void a(gw paramGw, ao paramAo)
  {
    paramGw = (de)paramGw;
    paramGw.a(paramAo.a);
    paramGw.a(paramAo.b.size());
    Object localObject = paramAo.b.entrySet().iterator();
    while (((Iterator)localObject).hasNext())
    {
      Map.Entry localEntry = (Map.Entry)((Iterator)localObject).next();
      paramGw.a((String)localEntry.getKey());
      ((az)localEntry.getValue()).b(paramGw);
    }
    paramGw.a(paramAo.e);
    localObject = new BitSet();
    if (paramAo.a()) {
      ((BitSet)localObject).set(0);
    }
    if (paramAo.b()) {
      ((BitSet)localObject).set(1);
    }
    paramGw.a((BitSet)localObject, 2);
    if (paramAo.a()) {
      paramGw.a(paramAo.c);
    }
    if (paramAo.b()) {
      paramGw.a(paramAo.d);
    }
  }
  
  public void b(gw paramGw, ao paramAo)
  {
    paramGw = (de)paramGw;
    paramAo.a = paramGw.v();
    paramAo.a(true);
    Object localObject = new gv((byte)11, (byte)12, paramGw.s());
    paramAo.b = new HashMap(((gv)localObject).c * 2);
    int i = 0;
    while (i < ((gv)localObject).c)
    {
      String str = paramGw.v();
      az localAz = new az();
      localAz.a(paramGw);
      paramAo.b.put(str, localAz);
      i += 1;
    }
    paramAo.b(true);
    paramAo.e = paramGw.t();
    paramAo.e(true);
    localObject = paramGw.b(2);
    if (((BitSet)localObject).get(0))
    {
      paramAo.c = paramGw.t();
      paramAo.c(true);
    }
    if (((BitSet)localObject).get(1))
    {
      paramAo.d = paramGw.s();
      paramAo.d(true);
    }
  }
}
