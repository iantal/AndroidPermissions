package u.aly;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

class bc
  extends di<al>
{
  private bc() {}
  
  public void a(gw paramGw, al paramAl)
  {
    paramGw.f();
    Object localObject = paramGw.h();
    if (((gt)localObject).b == 0)
    {
      paramGw.g();
      if (!paramAl.a()) {
        throw new cz("Required field 'ts' was not found in serialized data! Struct: " + toString());
      }
    }
    else
    {
      switch (((gt)localObject).c)
      {
      default: 
        gz.a(paramGw, ((gt)localObject).b);
      }
      for (;;)
      {
        paramGw.i();
        break;
        if (((gt)localObject).b == 10)
        {
          paramAl.a = paramGw.t();
          paramAl.a(true);
        }
        else
        {
          gz.a(paramGw, ((gt)localObject).b);
          continue;
          if (((gt)localObject).b == 11)
          {
            paramAl.b = paramGw.v();
            paramAl.b(true);
          }
          else
          {
            gz.a(paramGw, ((gt)localObject).b);
            continue;
            if (((gt)localObject).b == 13)
            {
              localObject = paramGw.j();
              paramAl.c = new HashMap(((gv)localObject).c * 2);
              int i = 0;
              while (i < ((gv)localObject).c)
              {
                String str1 = paramGw.v();
                String str2 = paramGw.v();
                paramAl.c.put(str1, str2);
                i += 1;
              }
              paramGw.k();
              paramAl.c(true);
            }
            else
            {
              gz.a(paramGw, ((gt)localObject).b);
              continue;
              if (((gt)localObject).b == 10)
              {
                paramAl.d = paramGw.t();
                paramAl.d(true);
              }
              else
              {
                gz.a(paramGw, ((gt)localObject).b);
                continue;
                if (((gt)localObject).b == 8)
                {
                  paramAl.e = paramGw.s();
                  paramAl.e(true);
                }
                else
                {
                  gz.a(paramGw, ((gt)localObject).b);
                }
              }
            }
          }
        }
      }
    }
    paramAl.d();
  }
  
  public void b(gw paramGw, al paramAl)
  {
    paramAl.d();
    paramGw.a(al.e());
    paramGw.a(al.f());
    paramGw.a(paramAl.a);
    paramGw.b();
    if (paramAl.b != null)
    {
      paramGw.a(al.g());
      paramGw.a(paramAl.b);
      paramGw.b();
    }
    if (paramAl.c != null)
    {
      paramGw.a(al.h());
      paramGw.a(new gv((byte)11, (byte)11, paramAl.c.size()));
      Iterator localIterator = paramAl.c.entrySet().iterator();
      while (localIterator.hasNext())
      {
        Map.Entry localEntry = (Map.Entry)localIterator.next();
        paramGw.a((String)localEntry.getKey());
        paramGw.a((String)localEntry.getValue());
      }
      paramGw.d();
      paramGw.b();
    }
    if (paramAl.b())
    {
      paramGw.a(al.i());
      paramGw.a(paramAl.d);
      paramGw.b();
    }
    if (paramAl.c())
    {
      paramGw.a(al.j());
      paramGw.a(paramAl.e);
      paramGw.b();
    }
    paramGw.c();
    paramGw.a();
  }
}
