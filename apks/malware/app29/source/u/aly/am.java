package u.aly;

import java.io.Serializable;
import java.util.Collections;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.Map;

public class am
  implements Serializable, Cloneable, gd<am, am.e>
{
  public static final Map<am.e, gr> d;
  private static final hb e = new hb("Error");
  private static final gt f = new gt("ts", (byte)10, (short)1);
  private static final gt g = new gt("context", (byte)11, (short)2);
  private static final gt h = new gt("source", (byte)8, (short)3);
  private static final Map<Class<? extends hc>, hd> i = new HashMap();
  public long a;
  public String b;
  public bt c;
  private byte j = 0;
  private am.e[] k = { am.e.c };
  
  static
  {
    i.put(di.class, new bq(null));
    i.put(dj.class, new bs(null));
    EnumMap localEnumMap = new EnumMap(am.e.class);
    localEnumMap.put(am.e.a, new gr("ts", (byte)1, new gs((byte)10)));
    localEnumMap.put(am.e.b, new gr("context", (byte)1, new gs((byte)11)));
    localEnumMap.put(am.e.c, new gr("source", (byte)2, new ck((byte)16, bt.class)));
    d = Collections.unmodifiableMap(localEnumMap);
    gr.a(am.class, d);
  }
  
  public am() {}
  
  public am a(long paramLong)
  {
    this.a = paramLong;
    b(true);
    return this;
  }
  
  public am a(String paramString)
  {
    this.b = paramString;
    return this;
  }
  
  public am a(bt paramBt)
  {
    this.c = paramBt;
    return this;
  }
  
  public void a(gw paramGw)
  {
    ((hd)i.get(paramGw.y())).b().b(paramGw, this);
  }
  
  public boolean a()
  {
    return gb.a(this.j, 0);
  }
  
  public void b(gw paramGw)
  {
    ((hd)i.get(paramGw.y())).b().a(paramGw, this);
  }
  
  public void b(boolean paramBoolean)
  {
    this.j = gb.a(this.j, 0, paramBoolean);
  }
  
  public boolean b()
  {
    return this.c != null;
  }
  
  public void c()
  {
    if (this.b == null) {
      throw new cz("Required field 'context' was not present! Struct: " + toString());
    }
  }
  
  public void c(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.b = null;
    }
  }
  
  public void d(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.c = null;
    }
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder("Error(");
    localStringBuilder.append("ts:");
    localStringBuilder.append(this.a);
    localStringBuilder.append(", ");
    localStringBuilder.append("context:");
    if (this.b == null)
    {
      localStringBuilder.append("null");
      if (b())
      {
        localStringBuilder.append(", ");
        localStringBuilder.append("source:");
        if (this.c != null) {
          break label113;
        }
        localStringBuilder.append("null");
      }
    }
    for (;;)
    {
      localStringBuilder.append(")");
      return localStringBuilder.toString();
      localStringBuilder.append(this.b);
      break;
      label113:
      localStringBuilder.append(this.c);
    }
  }
}
