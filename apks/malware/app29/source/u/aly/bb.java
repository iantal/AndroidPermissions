package u.aly;

import java.io.Serializable;
import java.util.Collections;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.Map;

public class bb
  implements Serializable, Cloneable, gd<bb, bb.e>
{
  public static final Map<bb.e, gr> d;
  private static final hb e = new hb("Response");
  private static final gt f = new gt("resp_code", (byte)8, (short)1);
  private static final gt g = new gt("msg", (byte)11, (short)2);
  private static final gt h = new gt("imprint", (byte)12, (short)3);
  private static final Map<Class<? extends hc>, hd> i = new HashMap();
  public int a;
  public String b;
  public at c;
  private byte j = 0;
  private bb.e[] k = { bb.e.b, bb.e.c };
  
  static
  {
    i.put(di.class, new er(null));
    i.put(dj.class, new et(null));
    EnumMap localEnumMap = new EnumMap(bb.e.class);
    localEnumMap.put(bb.e.a, new gr("resp_code", (byte)1, new gs((byte)8)));
    localEnumMap.put(bb.e.b, new gr("msg", (byte)2, new gs((byte)11)));
    localEnumMap.put(bb.e.c, new gr("imprint", (byte)2, new cq((byte)12, at.class)));
    d = Collections.unmodifiableMap(localEnumMap);
    gr.a(bb.class, d);
  }
  
  public bb() {}
  
  public void a(gw paramGw)
  {
    ((hd)i.get(paramGw.y())).b().b(paramGw, this);
  }
  
  public void a(boolean paramBoolean)
  {
    this.j = gb.a(this.j, 0, paramBoolean);
  }
  
  public boolean a()
  {
    return gb.a(this.j, 0);
  }
  
  public String b()
  {
    return this.b;
  }
  
  public void b(gw paramGw)
  {
    ((hd)i.get(paramGw.y())).b().a(paramGw, this);
  }
  
  public void b(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.b = null;
    }
  }
  
  public void c(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.c = null;
    }
  }
  
  public boolean c()
  {
    return this.b != null;
  }
  
  public at d()
  {
    return this.c;
  }
  
  public boolean e()
  {
    return this.c != null;
  }
  
  public void f()
  {
    if (this.c != null) {
      this.c.e();
    }
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder("Response(");
    localStringBuilder.append("resp_code:");
    localStringBuilder.append(this.a);
    if (c())
    {
      localStringBuilder.append(", ");
      localStringBuilder.append("msg:");
      if (this.b == null) {
        localStringBuilder.append("null");
      }
    }
    else if (e())
    {
      localStringBuilder.append(", ");
      localStringBuilder.append("imprint:");
      if (this.c != null) {
        break label120;
      }
      localStringBuilder.append("null");
    }
    for (;;)
    {
      localStringBuilder.append(")");
      return localStringBuilder.toString();
      localStringBuilder.append(this.b);
      break;
      label120:
      localStringBuilder.append(this.c);
    }
  }
}
