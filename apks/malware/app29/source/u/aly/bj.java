package u.aly;

import java.util.BitSet;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

class bj
  extends dj<al>
{
  private bj() {}
  
  public void a(gw paramGw, al paramAl)
  {
    paramGw = (de)paramGw;
    paramGw.a(paramAl.a);
    paramGw.a(paramAl.b);
    paramGw.a(paramAl.c.size());
    Object localObject = paramAl.c.entrySet().iterator();
    while (((Iterator)localObject).hasNext())
    {
      Map.Entry localEntry = (Map.Entry)((Iterator)localObject).next();
      paramGw.a((String)localEntry.getKey());
      paramGw.a((String)localEntry.getValue());
    }
    localObject = new BitSet();
    if (paramAl.b()) {
      ((BitSet)localObject).set(0);
    }
    if (paramAl.c()) {
      ((BitSet)localObject).set(1);
    }
    paramGw.a((BitSet)localObject, 2);
    if (paramAl.b()) {
      paramGw.a(paramAl.d);
    }
    if (paramAl.c()) {
      paramGw.a(paramAl.e);
    }
  }
  
  public void b(gw paramGw, al paramAl)
  {
    paramGw = (de)paramGw;
    paramAl.a = paramGw.t();
    paramAl.a(true);
    paramAl.b = paramGw.v();
    paramAl.b(true);
    Object localObject = new gv((byte)11, (byte)11, paramGw.s());
    paramAl.c = new HashMap(((gv)localObject).c * 2);
    int i = 0;
    while (i < ((gv)localObject).c)
    {
      String str1 = paramGw.v();
      String str2 = paramGw.v();
      paramAl.c.put(str1, str2);
      i += 1;
    }
    paramAl.c(true);
    localObject = paramGw.b(2);
    if (((BitSet)localObject).get(0))
    {
      paramAl.d = paramGw.t();
      paramAl.d(true);
    }
    if (((BitSet)localObject).get(1))
    {
      paramAl.e = paramGw.s();
      paramAl.e(true);
    }
  }
}
