package u.aly;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

class bv
  extends di<ao>
{
  private bv() {}
  
  public void a(gw paramGw, ao paramAo)
  {
    paramGw.f();
    Object localObject = paramGw.h();
    if (((gt)localObject).b == 0)
    {
      paramGw.g();
      if (!paramAo.c()) {
        throw new cz("Required field 'ts' was not found in serialized data! Struct: " + toString());
      }
    }
    else
    {
      switch (((gt)localObject).c)
      {
      default: 
        gz.a(paramGw, ((gt)localObject).b);
      }
      for (;;)
      {
        paramGw.i();
        break;
        if (((gt)localObject).b == 11)
        {
          paramAo.a = paramGw.v();
          paramAo.a(true);
        }
        else
        {
          gz.a(paramGw, ((gt)localObject).b);
          continue;
          if (((gt)localObject).b == 13)
          {
            localObject = paramGw.j();
            paramAo.b = new HashMap(((gv)localObject).c * 2);
            int i = 0;
            while (i < ((gv)localObject).c)
            {
              String str = paramGw.v();
              az localAz = new az();
              localAz.a(paramGw);
              paramAo.b.put(str, localAz);
              i += 1;
            }
            paramGw.k();
            paramAo.b(true);
          }
          else
          {
            gz.a(paramGw, ((gt)localObject).b);
            continue;
            if (((gt)localObject).b == 10)
            {
              paramAo.c = paramGw.t();
              paramAo.c(true);
            }
            else
            {
              gz.a(paramGw, ((gt)localObject).b);
              continue;
              if (((gt)localObject).b == 8)
              {
                paramAo.d = paramGw.s();
                paramAo.d(true);
              }
              else
              {
                gz.a(paramGw, ((gt)localObject).b);
                continue;
                if (((gt)localObject).b == 10)
                {
                  paramAo.e = paramGw.t();
                  paramAo.e(true);
                }
                else
                {
                  gz.a(paramGw, ((gt)localObject).b);
                }
              }
            }
          }
        }
      }
    }
    paramAo.d();
  }
  
  public void b(gw paramGw, ao paramAo)
  {
    paramAo.d();
    paramGw.a(ao.e());
    if (paramAo.a != null)
    {
      paramGw.a(ao.f());
      paramGw.a(paramAo.a);
      paramGw.b();
    }
    if (paramAo.b != null)
    {
      paramGw.a(ao.g());
      paramGw.a(new gv((byte)11, (byte)12, paramAo.b.size()));
      Iterator localIterator = paramAo.b.entrySet().iterator();
      while (localIterator.hasNext())
      {
        Map.Entry localEntry = (Map.Entry)localIterator.next();
        paramGw.a((String)localEntry.getKey());
        ((az)localEntry.getValue()).b(paramGw);
      }
      paramGw.d();
      paramGw.b();
    }
    if (paramAo.a())
    {
      paramGw.a(ao.h());
      paramGw.a(paramAo.c);
      paramGw.b();
    }
    if (paramAo.b())
    {
      paramGw.a(ao.i());
      paramGw.a(paramAo.d);
      paramGw.b();
    }
    paramGw.a(ao.j());
    paramGw.a(paramAo.e);
    paramGw.b();
    paramGw.c();
    paramGw.a();
  }
}
