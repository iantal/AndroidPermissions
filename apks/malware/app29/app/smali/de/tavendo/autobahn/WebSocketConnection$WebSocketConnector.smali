.class Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;
.super Ljava/lang/Thread;


# instance fields
.field final synthetic this$0:Lde/tavendo/autobahn/WebSocketConnection;


# direct methods
.method private constructor <init>(Lde/tavendo/autobahn/WebSocketConnection;)V
    .locals 0

    iput-object p1, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-direct {p0}, Ljava/lang/Thread;-><init>()V

    return-void
.end method

.method synthetic constructor <init>(Lde/tavendo/autobahn/WebSocketConnection;Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;)V
    .locals 0

    invoke-direct {p0, p1}, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;-><init>(Lde/tavendo/autobahn/WebSocketConnection;)V

    return-void
.end method


# virtual methods
.method public run()V
    .locals 5

    const/4 v4, 0x2

    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object v0

    const-string v1, "WebSocketConnector"

    invoke-virtual {v0, v1}, Ljava/lang/Thread;->setName(Ljava/lang/String;)V

    :try_start_0
    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {}, Ljava/nio/channels/SocketChannel;->open()Ljava/nio/channels/SocketChannel;

    move-result-object v1

    iput-object v1, v0, Lde/tavendo/autobahn/WebSocketConnection;->mTransportChannel:Ljava/nio/channels/SocketChannel;

    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v0, v0, Lde/tavendo/autobahn/WebSocketConnection;->mTransportChannel:Ljava/nio/channels/SocketChannel;

    invoke-virtual {v0}, Ljava/nio/channels/SocketChannel;->socket()Ljava/net/Socket;

    move-result-object v0

    new-instance v1, Ljava/net/InetSocketAddress;

    iget-object v2, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v2}, Lde/tavendo/autobahn/WebSocketConnection;->access$0(Lde/tavendo/autobahn/WebSocketConnection;)Ljava/lang/String;

    move-result-object v2

    iget-object v3, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v3}, Lde/tavendo/autobahn/WebSocketConnection;->access$1(Lde/tavendo/autobahn/WebSocketConnection;)I

    move-result v3

    invoke-direct {v1, v2, v3}, Ljava/net/InetSocketAddress;-><init>(Ljava/lang/String;I)V

    iget-object v2, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v2, v2, Lde/tavendo/autobahn/WebSocketConnection;->mOptions:Lde/tavendo/autobahn/WebSocketOptions;

    invoke-virtual {v2}, Lde/tavendo/autobahn/WebSocketOptions;->getSocketConnectTimeout()I

    move-result v2

    invoke-virtual {v0, v1, v2}, Ljava/net/Socket;->connect(Ljava/net/SocketAddress;I)V

    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v0, v0, Lde/tavendo/autobahn/WebSocketConnection;->mTransportChannel:Ljava/nio/channels/SocketChannel;

    invoke-virtual {v0}, Ljava/nio/channels/SocketChannel;->socket()Ljava/net/Socket;

    move-result-object v0

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v1, v1, Lde/tavendo/autobahn/WebSocketConnection;->mOptions:Lde/tavendo/autobahn/WebSocketOptions;

    invoke-virtual {v1}, Lde/tavendo/autobahn/WebSocketOptions;->getSocketReceiveTimeout()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/net/Socket;->setSoTimeout(I)V

    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v0, v0, Lde/tavendo/autobahn/WebSocketConnection;->mTransportChannel:Ljava/nio/channels/SocketChannel;

    invoke-virtual {v0}, Ljava/nio/channels/SocketChannel;->socket()Ljava/net/Socket;

    move-result-object v0

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v1, v1, Lde/tavendo/autobahn/WebSocketConnection;->mOptions:Lde/tavendo/autobahn/WebSocketOptions;

    invoke-virtual {v1}, Lde/tavendo/autobahn/WebSocketOptions;->getTcpNoDelay()Z

    move-result v1

    invoke-virtual {v0, v1}, Ljava/net/Socket;->setTcpNoDelay(Z)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v0, v0, Lde/tavendo/autobahn/WebSocketConnection;->mTransportChannel:Ljava/nio/channels/SocketChannel;

    invoke-virtual {v0}, Ljava/nio/channels/SocketChannel;->isConnected()Z

    move-result v0

    if-eqz v0, :cond_0

    :try_start_1
    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-virtual {v0}, Lde/tavendo/autobahn/WebSocketConnection;->createReader()V

    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-virtual {v0}, Lde/tavendo/autobahn/WebSocketConnection;->createWriter()V

    new-instance v0, Lde/tavendo/autobahn/WebSocketMessage$ClientHandshake;

    new-instance v1, Ljava/lang/StringBuilder;

    iget-object v2, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v2}, Lde/tavendo/autobahn/WebSocketConnection;->access$0(Lde/tavendo/autobahn/WebSocketConnection;)Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    const-string v2, ":"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v2}, Lde/tavendo/autobahn/WebSocketConnection;->access$1(Lde/tavendo/autobahn/WebSocketConnection;)I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lde/tavendo/autobahn/WebSocketMessage$ClientHandshake;-><init>(Ljava/lang/String;)V

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v1}, Lde/tavendo/autobahn/WebSocketConnection;->access$3(Lde/tavendo/autobahn/WebSocketConnection;)Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lde/tavendo/autobahn/WebSocketMessage$ClientHandshake;->mPath:Ljava/lang/String;

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v1}, Lde/tavendo/autobahn/WebSocketConnection;->access$4(Lde/tavendo/autobahn/WebSocketConnection;)Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lde/tavendo/autobahn/WebSocketMessage$ClientHandshake;->mQuery:Ljava/lang/String;

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v1}, Lde/tavendo/autobahn/WebSocketConnection;->access$5(Lde/tavendo/autobahn/WebSocketConnection;)[Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lde/tavendo/autobahn/WebSocketMessage$ClientHandshake;->mSubprotocols:[Ljava/lang/String;

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-static {v1}, Lde/tavendo/autobahn/WebSocketConnection;->access$6(Lde/tavendo/autobahn/WebSocketConnection;)Ljava/util/List;

    move-result-object v1

    iput-object v1, v0, Lde/tavendo/autobahn/WebSocketMessage$ClientHandshake;->mHeaderList:Ljava/util/List;

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    iget-object v1, v1, Lde/tavendo/autobahn/WebSocketConnection;->mWriter:Lde/tavendo/autobahn/WebSocketWriter;

    invoke-virtual {v1, v0}, Lde/tavendo/autobahn/WebSocketWriter;->forward(Ljava/lang/Object;)V

    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    const/4 v1, 0x1

    invoke-static {v0, v1}, Lde/tavendo/autobahn/WebSocketConnection;->access$7(Lde/tavendo/autobahn/WebSocketConnection;Z)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    :goto_0
    return-void

    :catch_0
    move-exception v0

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    invoke-virtual {v0}, Ljava/io/IOException;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v4, v0}, Lde/tavendo/autobahn/WebSocketConnection;->access$2(Lde/tavendo/autobahn/WebSocketConnection;ILjava/lang/String;)V

    goto :goto_0

    :catch_1
    move-exception v0

    iget-object v1, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    const/4 v2, 0x5

    invoke-virtual {v0}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v2, v0}, Lde/tavendo/autobahn/WebSocketConnection;->access$2(Lde/tavendo/autobahn/WebSocketConnection;ILjava/lang/String;)V

    goto :goto_0

    :cond_0
    iget-object v0, p0, Lde/tavendo/autobahn/WebSocketConnection$WebSocketConnector;->this$0:Lde/tavendo/autobahn/WebSocketConnection;

    const-string v1, "Could not connect to WebSocket server"

    invoke-static {v0, v4, v1}, Lde/tavendo/autobahn/WebSocketConnection;->access$2(Lde/tavendo/autobahn/WebSocketConnection;ILjava/lang/String;)V

    goto :goto_0
.end method
