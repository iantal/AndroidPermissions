.class public Lcom/zhangzhifu/sdk/db/MMRWapDBManager;
.super Ljava/lang/Object;


# static fields
.field private static M:Lcom/zhangzhifu/sdk/db/MMRWapDBManager;


# direct methods
.method private constructor <init>()V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method private static a(Landroid/database/sqlite/SQLiteDatabase;I)Ljava/util/List;
    .locals 4

    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    const-string v2, "select aurl , type , smsnum , timer from mmrprocedure where pc_which_id = "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    const/4 v2, 0x0

    invoke-virtual {p0, v1, v2}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v1

    if-eqz v1, :cond_1

    invoke-interface {v1}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v2

    if-eqz v2, :cond_1

    :cond_0
    new-instance v2, Lcom/zhangzhifu/sdk/modle/MMRProcedure;

    invoke-direct {v2}, Lcom/zhangzhifu/sdk/modle/MMRProcedure;-><init>()V

    const/4 v3, 0x0

    invoke-interface {v1, v3}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/zhangzhifu/sdk/modle/MMRProcedure;->setA_url(Ljava/lang/String;)V

    const/4 v3, 0x1

    invoke-interface {v1, v3}, Landroid/database/Cursor;->getInt(I)I

    move-result v3

    invoke-virtual {v2, v3}, Lcom/zhangzhifu/sdk/modle/MMRProcedure;->setType(I)V

    const/4 v3, 0x2

    invoke-interface {v1, v3}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/zhangzhifu/sdk/modle/MMRProcedure;->setSms_num(Ljava/lang/String;)V

    const/4 v3, 0x3

    invoke-interface {v1, v3}, Landroid/database/Cursor;->getInt(I)I

    move-result v3

    invoke-virtual {v2, v3}, Lcom/zhangzhifu/sdk/modle/MMRProcedure;->setTimer(I)V

    invoke-interface {v0, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    invoke-interface {v1}, Landroid/database/Cursor;->moveToNext()Z

    move-result v2

    if-nez v2, :cond_0

    :cond_1
    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    return-object v0
.end method

.method public static getInstance()Lcom/zhangzhifu/sdk/db/MMRWapDBManager;
    .locals 1

    sget-object v0, Lcom/zhangzhifu/sdk/db/MMRWapDBManager;->M:Lcom/zhangzhifu/sdk/db/MMRWapDBManager;

    if-nez v0, :cond_0

    new-instance v0, Lcom/zhangzhifu/sdk/db/MMRWapDBManager;

    invoke-direct {v0}, Lcom/zhangzhifu/sdk/db/MMRWapDBManager;-><init>()V

    sput-object v0, Lcom/zhangzhifu/sdk/db/MMRWapDBManager;->M:Lcom/zhangzhifu/sdk/db/MMRWapDBManager;

    :cond_0
    sget-object v0, Lcom/zhangzhifu/sdk/db/MMRWapDBManager;->M:Lcom/zhangzhifu/sdk/db/MMRWapDBManager;

    return-object v0
.end method


# virtual methods
.method public addWapFee(Lcom/zhangzhifu/sdk/modle/MMRWap;Landroid/content/Context;)V
    .locals 7

    if-nez p1, :cond_0

    :goto_0
    return-void

    :cond_0
    const-string v0, "lock"

    monitor-enter v0

    :try_start_0
    invoke-static {p2}, Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;->getInstance(Landroid/content/Context;)Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;

    move-result-object v0

    invoke-virtual {v0}, Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v2

    new-instance v0, Landroid/content/ContentValues;

    invoke-direct {v0}, Landroid/content/ContentValues;-><init>()V

    const-string v1, "filter_info"

    invoke-virtual {p1}, Lcom/zhangzhifu/sdk/modle/MMRWap;->getFilterInfo()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v1, v3}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const-string v1, "filter_port"

    invoke-virtual {p1}, Lcom/zhangzhifu/sdk/modle/MMRWap;->getFilterPort()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v1, v3}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const-string v1, "mmr"

    const/4 v3, 0x0

    invoke-virtual {v2, v1, v3, v0}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J

    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    const-string v1, " select max(_ID) from mmr"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x0

    invoke-virtual {v2, v0, v1}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v3

    if-eqz v3, :cond_4

    invoke-interface {v3}, Landroid/database/Cursor;->moveToFirst()Z

    const/4 v0, 0x0

    invoke-interface {v3, v0}, Landroid/database/Cursor;->getInt(I)I

    move-result v0

    move v1, v0

    :goto_1
    invoke-interface {v3}, Landroid/database/Cursor;->close()V

    invoke-virtual {p1}, Lcom/zhangzhifu/sdk/modle/MMRWap;->getAllProcedure()Ljava/util/List;

    move-result-object v0

    if-eqz v0, :cond_2

    invoke-virtual {p1}, Lcom/zhangzhifu/sdk/modle/MMRWap;->getAllProcedure()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :cond_1
    :goto_2
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-nez v0, :cond_3

    :cond_2
    invoke-virtual {v2}, Landroid/database/sqlite/SQLiteDatabase;->close()V

    const-string v0, "lock"

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_0

    :catchall_0
    move-exception v0

    const-string v1, "lock"

    monitor-exit v1

    throw v0

    :cond_3
    :try_start_1
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/zhangzhifu/sdk/modle/MMRProcedure;

    if-eqz v0, :cond_1

    new-instance v4, Landroid/content/ContentValues;

    invoke-direct {v4}, Landroid/content/ContentValues;-><init>()V

    const-string v5, "aurl"

    invoke-virtual {v0}, Lcom/zhangzhifu/sdk/modle/MMRProcedure;->getA_url()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v5, v6}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const-string v5, "type"

    invoke-virtual {v0}, Lcom/zhangzhifu/sdk/modle/MMRProcedure;->getType()I

    move-result v6

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    invoke-virtual {v4, v5, v6}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const-string v5, "smsnum"

    invoke-virtual {v0}, Lcom/zhangzhifu/sdk/modle/MMRProcedure;->getSms_num()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v5, v6}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const-string v5, "timer"

    invoke-virtual {v0}, Lcom/zhangzhifu/sdk/modle/MMRProcedure;->getTimer()I

    move-result v0

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    invoke-virtual {v4, v5, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const-string v0, "pc_which_id"

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v4, v0, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const-string v0, "mmrprocedure"

    const/4 v5, 0x0

    invoke-virtual {v2, v0, v5, v4}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    :cond_4
    const/4 v0, -0x1

    move v1, v0

    goto :goto_1
.end method

.method public delWapById(Landroid/content/Context;Lcom/zhangzhifu/sdk/modle/MMRWap;)V
    .locals 5

    const-string v0, "lock"

    monitor-enter v0

    :try_start_0
    invoke-static {p1}, Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;->getInstance(Landroid/content/Context;)Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;

    move-result-object v0

    invoke-virtual {v0}, Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v0

    const/4 v1, 0x1

    new-array v1, v1, [Ljava/lang/String;

    const/4 v2, 0x0

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Lcom/zhangzhifu/sdk/modle/MMRWap;->getId()I

    move-result v4

    invoke-static {v4}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    aput-object v3, v1, v2

    const-string v2, "mmr"

    const-string v3, "_ID = ? "

    invoke-virtual {v0, v2, v3, v1}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    invoke-virtual {p2}, Lcom/zhangzhifu/sdk/modle/MMRWap;->getId()I

    move-result v1

    const/4 v2, 0x1

    new-array v2, v2, [Ljava/lang/String;

    const/4 v3, 0x0

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-static {v1}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v4, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    aput-object v1, v2, v3

    const-string v1, "mmrprocedure"

    const-string v3, "pc_which_id = ? "

    invoke-virtual {v0, v1, v3, v2}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V

    const-string v0, "lock"

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return-void

    :catchall_0
    move-exception v0

    const-string v1, "lock"

    monitor-exit v1

    throw v0
.end method

.method public deleteAllSMS(Landroid/content/Context;)V
    .locals 4

    const-string v0, "lock"

    monitor-enter v0

    :try_start_0
    invoke-static {p1}, Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;->getInstance(Landroid/content/Context;)Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;

    move-result-object v0

    invoke-virtual {v0}, Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v0

    const-string v1, "mmr"

    const/4 v2, 0x0

    const/4 v3, 0x0

    invoke-virtual {v0, v1, v2, v3}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V

    const-string v0, "lock"

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return-void

    :catchall_0
    move-exception v0

    const-string v1, "lock"

    monitor-exit v1

    throw v0
.end method

.method public delpro(Landroid/content/Context;)V
    .locals 4

    const-string v0, "lock"

    monitor-enter v0

    :try_start_0
    invoke-static {p1}, Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;->getInstance(Landroid/content/Context;)Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;

    move-result-object v0

    invoke-virtual {v0}, Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v0

    const-string v1, "mmrprocedure"

    const/4 v2, 0x0

    const/4 v3, 0x0

    invoke-virtual {v0, v1, v2, v3}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    const-string v0, "lock"

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return-void

    :catchall_0
    move-exception v0

    const-string v1, "lock"

    monitor-exit v1

    throw v0
.end method

.method public getAllWap(Landroid/content/Context;)Ljava/util/List;
    .locals 5

    const-string v0, "lock"

    monitor-enter v0

    :try_start_0
    new-instance v0, Ljava/util/LinkedList;

    invoke-direct {v0}, Ljava/util/LinkedList;-><init>()V

    invoke-static {p1}, Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;->getInstance(Landroid/content/Context;)Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;

    move-result-object v1

    invoke-virtual {v1}, Lcom/zhangzhifu/sdk/db/ZhangPayDBHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v1

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, " select _ID , filter_info , filter_port from mmr"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v1, v2, v3}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v2

    if-eqz v2, :cond_1

    invoke-interface {v2}, Landroid/database/Cursor;->getCount()I

    move-result v3

    if-lez v3, :cond_1

    invoke-interface {v2}, Landroid/database/Cursor;->moveToFirst()Z

    :cond_0
    new-instance v3, Lcom/zhangzhifu/sdk/modle/MMRWap;

    invoke-direct {v3}, Lcom/zhangzhifu/sdk/modle/MMRWap;-><init>()V

    const/4 v4, 0x0

    invoke-interface {v2, v4}, Landroid/database/Cursor;->getInt(I)I

    move-result v4

    invoke-virtual {v3, v4}, Lcom/zhangzhifu/sdk/modle/MMRWap;->setId(I)V

    const/4 v4, 0x1

    invoke-interface {v2, v4}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/zhangzhifu/sdk/modle/MMRWap;->setFilterInfo(Ljava/lang/String;)V

    const/4 v4, 0x2

    invoke-interface {v2, v4}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/zhangzhifu/sdk/modle/MMRWap;->setFilterPort(Ljava/lang/String;)V

    invoke-virtual {v3}, Lcom/zhangzhifu/sdk/modle/MMRWap;->getId()I

    move-result v4

    invoke-static {v1, v4}, Lcom/zhangzhifu/sdk/db/MMRWapDBManager;->a(Landroid/database/sqlite/SQLiteDatabase;I)Ljava/util/List;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/zhangzhifu/sdk/modle/MMRWap;->setAllProcedure(Ljava/util/List;)V

    invoke-interface {v0, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    invoke-interface {v2}, Landroid/database/Cursor;->moveToNext()Z

    move-result v3

    if-nez v3, :cond_0

    :cond_1
    invoke-interface {v2}, Landroid/database/Cursor;->close()V

    invoke-virtual {v1}, Landroid/database/sqlite/SQLiteDatabase;->close()V

    const-string v1, "lock"

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return-object v0

    :catchall_0
    move-exception v0

    const-string v1, "lock"

    monitor-exit v1

    throw v0
.end method
