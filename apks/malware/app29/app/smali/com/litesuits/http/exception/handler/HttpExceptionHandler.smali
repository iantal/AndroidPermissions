.class public abstract Lcom/litesuits/http/exception/handler/HttpExceptionHandler;
.super Ljava/lang/Object;


# direct methods
.method public constructor <init>()V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method


# virtual methods
.method public handleException(Lcom/litesuits/http/exception/HttpException;)Lcom/litesuits/http/exception/handler/HttpExceptionHandler;
    .locals 3

    if-eqz p1, :cond_0

    instance-of v0, p1, Lcom/litesuits/http/exception/HttpClientException;

    if-eqz v0, :cond_1

    move-object v0, p1

    check-cast v0, Lcom/litesuits/http/exception/HttpClientException;

    invoke-virtual {v0}, Lcom/litesuits/http/exception/HttpClientException;->getExceptionType()Lcom/litesuits/http/exception/ClientException;

    move-result-object v1

    invoke-virtual {p0, v0, v1}, Lcom/litesuits/http/exception/handler/HttpExceptionHandler;->onClientException(Lcom/litesuits/http/exception/HttpClientException;Lcom/litesuits/http/exception/ClientException;)V

    :goto_0
    const/4 v0, 0x1

    invoke-virtual {p1, v0}, Lcom/litesuits/http/exception/HttpException;->setHandled(Z)Lcom/litesuits/http/exception/HttpException;

    :cond_0
    return-object p0

    :cond_1
    instance-of v0, p1, Lcom/litesuits/http/exception/HttpNetException;

    if-eqz v0, :cond_2

    move-object v0, p1

    check-cast v0, Lcom/litesuits/http/exception/HttpNetException;

    invoke-virtual {v0}, Lcom/litesuits/http/exception/HttpNetException;->getExceptionType()Lcom/litesuits/http/exception/NetException;

    move-result-object v1

    invoke-virtual {p0, v0, v1}, Lcom/litesuits/http/exception/handler/HttpExceptionHandler;->onNetException(Lcom/litesuits/http/exception/HttpNetException;Lcom/litesuits/http/exception/NetException;)V

    goto :goto_0

    :cond_2
    instance-of v0, p1, Lcom/litesuits/http/exception/HttpServerException;

    if-eqz v0, :cond_3

    move-object v0, p1

    check-cast v0, Lcom/litesuits/http/exception/HttpServerException;

    invoke-virtual {v0}, Lcom/litesuits/http/exception/HttpServerException;->getExceptionType()Lcom/litesuits/http/exception/ServerException;

    move-result-object v1

    invoke-virtual {v0}, Lcom/litesuits/http/exception/HttpServerException;->getHttpStatus()Lcom/litesuits/http/data/HttpStatus;

    move-result-object v2

    invoke-virtual {p0, v0, v1, v2}, Lcom/litesuits/http/exception/handler/HttpExceptionHandler;->onServerException(Lcom/litesuits/http/exception/HttpServerException;Lcom/litesuits/http/exception/ServerException;Lcom/litesuits/http/data/HttpStatus;)V

    goto :goto_0

    :cond_3
    new-instance v0, Lcom/litesuits/http/exception/HttpClientException;

    invoke-direct {v0, p1}, Lcom/litesuits/http/exception/HttpClientException;-><init>(Ljava/lang/Throwable;)V

    invoke-virtual {v0}, Lcom/litesuits/http/exception/HttpClientException;->getExceptionType()Lcom/litesuits/http/exception/ClientException;

    move-result-object v1

    invoke-virtual {p0, v0, v1}, Lcom/litesuits/http/exception/handler/HttpExceptionHandler;->onClientException(Lcom/litesuits/http/exception/HttpClientException;Lcom/litesuits/http/exception/ClientException;)V

    goto :goto_0
.end method

.method protected abstract onClientException(Lcom/litesuits/http/exception/HttpClientException;Lcom/litesuits/http/exception/ClientException;)V
.end method

.method protected abstract onNetException(Lcom/litesuits/http/exception/HttpNetException;Lcom/litesuits/http/exception/NetException;)V
.end method

.method protected abstract onServerException(Lcom/litesuits/http/exception/HttpServerException;Lcom/litesuits/http/exception/ServerException;Lcom/litesuits/http/data/HttpStatus;)V
.end method
