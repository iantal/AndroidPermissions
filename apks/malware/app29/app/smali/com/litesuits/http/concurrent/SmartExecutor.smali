.class public Lcom/litesuits/http/concurrent/SmartExecutor;
.super Ljava/lang/Object;

# interfaces
.implements Ljava/util/concurrent/Executor;


# static fields
.field private static final TAG:Ljava/lang/String;

.field private static threadPool:Ljava/util/concurrent/ThreadPoolExecutor;


# instance fields
.field private coreSize:I

.field private final lock:Ljava/lang/Object;

.field private overloadPolicy:Lcom/litesuits/http/concurrent/OverloadPolicy;

.field private queueSize:I

.field private runningList:Ljava/util/LinkedList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/LinkedList",
            "<",
            "Lcom/litesuits/http/concurrent/SmartExecutor$WrappedRunnable;",
            ">;"
        }
    .end annotation
.end field

.field private schedulePolicy:Lcom/litesuits/http/concurrent/SchedulePolicy;

.field private waitingList:Ljava/util/LinkedList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/LinkedList",
            "<",
            "Lcom/litesuits/http/concurrent/SmartExecutor$WrappedRunnable;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method static constructor <clinit>()V
    .locals 1

    const-class v0, Lcom/litesuits/http/concurrent/SmartExecutor;

    invoke-virtual {v0}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    return-void
.end method

.method public constructor <init>()V
    .locals 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    invoke-static {}, Lcom/litesuits/http/utils/HttpUtil;->getCoresNumbers()I

    move-result v0

    iput v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->coreSize:I

    iget v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->coreSize:I

    mul-int/lit8 v0, v0, 0x20

    iput v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->queueSize:I

    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->lock:Ljava/lang/Object;

    new-instance v0, Ljava/util/LinkedList;

    invoke-direct {v0}, Ljava/util/LinkedList;-><init>()V

    iput-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->runningList:Ljava/util/LinkedList;

    new-instance v0, Ljava/util/LinkedList;

    invoke-direct {v0}, Ljava/util/LinkedList;-><init>()V

    iput-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    sget-object v0, Lcom/litesuits/http/concurrent/SchedulePolicy;->FirstInFistRun:Lcom/litesuits/http/concurrent/SchedulePolicy;

    iput-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->schedulePolicy:Lcom/litesuits/http/concurrent/SchedulePolicy;

    sget-object v0, Lcom/litesuits/http/concurrent/OverloadPolicy;->DiscardOldTaskInQueue:Lcom/litesuits/http/concurrent/OverloadPolicy;

    iput-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->overloadPolicy:Lcom/litesuits/http/concurrent/OverloadPolicy;

    invoke-virtual {p0}, Lcom/litesuits/http/concurrent/SmartExecutor;->initThreadPool()V

    return-void
.end method

.method public constructor <init>(II)V
    .locals 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    invoke-static {}, Lcom/litesuits/http/utils/HttpUtil;->getCoresNumbers()I

    move-result v0

    iput v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->coreSize:I

    iget v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->coreSize:I

    mul-int/lit8 v0, v0, 0x20

    iput v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->queueSize:I

    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->lock:Ljava/lang/Object;

    new-instance v0, Ljava/util/LinkedList;

    invoke-direct {v0}, Ljava/util/LinkedList;-><init>()V

    iput-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->runningList:Ljava/util/LinkedList;

    new-instance v0, Ljava/util/LinkedList;

    invoke-direct {v0}, Ljava/util/LinkedList;-><init>()V

    iput-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    sget-object v0, Lcom/litesuits/http/concurrent/SchedulePolicy;->FirstInFistRun:Lcom/litesuits/http/concurrent/SchedulePolicy;

    iput-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->schedulePolicy:Lcom/litesuits/http/concurrent/SchedulePolicy;

    sget-object v0, Lcom/litesuits/http/concurrent/OverloadPolicy;->DiscardOldTaskInQueue:Lcom/litesuits/http/concurrent/OverloadPolicy;

    iput-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->overloadPolicy:Lcom/litesuits/http/concurrent/OverloadPolicy;

    iput p1, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->coreSize:I

    iput p2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->queueSize:I

    invoke-virtual {p0}, Lcom/litesuits/http/concurrent/SmartExecutor;->initThreadPool()V

    return-void
.end method

.method static synthetic access$000(Lcom/litesuits/http/concurrent/SmartExecutor;Lcom/litesuits/http/concurrent/SmartExecutor$WrappedRunnable;)V
    .locals 0

    invoke-direct {p0, p1}, Lcom/litesuits/http/concurrent/SmartExecutor;->scheduleNext(Lcom/litesuits/http/concurrent/SmartExecutor$WrappedRunnable;)V

    return-void
.end method

.method public static createDefaultThreadPool()Ljava/util/concurrent/ThreadPoolExecutor;
    .locals 10

    new-instance v1, Ljava/util/concurrent/ThreadPoolExecutor;

    const/4 v2, 0x1

    const v3, 0x7fffffff

    const-wide/16 v4, 0x3

    sget-object v6, Ljava/util/concurrent/TimeUnit;->SECONDS:Ljava/util/concurrent/TimeUnit;

    new-instance v7, Ljava/util/concurrent/SynchronousQueue;

    invoke-direct {v7}, Ljava/util/concurrent/SynchronousQueue;-><init>()V

    new-instance v8, Lcom/litesuits/http/concurrent/SmartExecutor$1;

    invoke-direct {v8}, Lcom/litesuits/http/concurrent/SmartExecutor$1;-><init>()V

    new-instance v9, Ljava/util/concurrent/ThreadPoolExecutor$DiscardPolicy;

    invoke-direct {v9}, Ljava/util/concurrent/ThreadPoolExecutor$DiscardPolicy;-><init>()V

    invoke-direct/range {v1 .. v9}, Ljava/util/concurrent/ThreadPoolExecutor;-><init>(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V

    return-object v1
.end method

.method public static getThreadPool()Ljava/util/concurrent/ThreadPoolExecutor;
    .locals 1

    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    return-object v0
.end method

.method private scheduleNext(Lcom/litesuits/http/concurrent/SmartExecutor$WrappedRunnable;)V
    .locals 4

    iget-object v1, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->lock:Ljava/lang/Object;

    monitor-enter v1

    :try_start_0
    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->runningList:Ljava/util/LinkedList;

    invoke-virtual {v0, p1}, Ljava/util/LinkedList;->remove(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->runningList:Ljava/util/LinkedList;

    invoke-virtual {v0}, Ljava/util/LinkedList;->clear()V

    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "SmartExecutor scheduler remove failed, so clear all(running list) to avoid unpreditable error : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Lcom/litesuits/http/log/HttpLog;->e(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v0}, Ljava/util/LinkedList;->size()I

    move-result v0

    if-lez v0, :cond_1

    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor$3;->$SwitchMap$com$litesuits$http$concurrent$SchedulePolicy:[I

    iget-object v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->schedulePolicy:Lcom/litesuits/http/concurrent/SchedulePolicy;

    invoke-virtual {v2}, Lcom/litesuits/http/concurrent/SchedulePolicy;->ordinal()I

    move-result v2

    aget v0, v0, v2

    packed-switch v0, :pswitch_data_0

    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v0}, Ljava/util/LinkedList;->pollLast()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/litesuits/http/concurrent/SmartExecutor$WrappedRunnable;

    :goto_0
    if-eqz v0, :cond_2

    iget-object v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->runningList:Ljava/util/LinkedList;

    invoke-virtual {v2, v0}, Ljava/util/LinkedList;->add(Ljava/lang/Object;)Z

    sget-object v2, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v2, v0}, Ljava/util/concurrent/ThreadPoolExecutor;->execute(Ljava/lang/Runnable;)V

    :cond_1
    :goto_1
    monitor-exit v1

    return-void

    :pswitch_0
    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v0}, Ljava/util/LinkedList;->pollLast()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/litesuits/http/concurrent/SmartExecutor$WrappedRunnable;

    goto :goto_0

    :pswitch_1
    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v0}, Ljava/util/LinkedList;->pollFirst()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/litesuits/http/concurrent/SmartExecutor$WrappedRunnable;

    goto :goto_0

    :cond_2
    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "SmartExecutor get a NULL task from waiting queue: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Thread;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Lcom/litesuits/http/log/HttpLog;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public static setThreadPool(Ljava/util/concurrent/ThreadPoolExecutor;)V
    .locals 0

    sput-object p0, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    return-void
.end method


# virtual methods
.method public cancelWaitingTask(Ljava/lang/Runnable;)Z
    .locals 4

    const/4 v1, 0x0

    iget-object v3, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->lock:Ljava/lang/Object;

    monitor-enter v3

    :try_start_0
    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v0}, Ljava/util/LinkedList;->size()I

    move-result v0

    if-lez v0, :cond_0

    add-int/lit8 v0, v0, -0x1

    move v2, v0

    :goto_0
    if-ltz v2, :cond_0

    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v0, v2}, Ljava/util/LinkedList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/litesuits/http/concurrent/SmartExecutor$WrappedRunnable;

    invoke-interface {v0}, Lcom/litesuits/http/concurrent/SmartExecutor$WrappedRunnable;->getRealRunnable()Ljava/lang/Runnable;

    move-result-object v0

    if-ne v0, p1, :cond_1

    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v0, v2}, Ljava/util/LinkedList;->remove(I)Ljava/lang/Object;

    const/4 v0, 0x1

    :goto_1
    add-int/lit8 v1, v2, -0x1

    move v2, v1

    move v1, v0

    goto :goto_0

    :cond_0
    monitor-exit v3

    return v1

    :catchall_0
    move-exception v0

    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    :cond_1
    move v0, v1

    goto :goto_1
.end method

.method public execute(Ljava/lang/Runnable;)V
    .locals 6

    if-nez p1, :cond_1

    :cond_0
    :goto_0
    return-void

    :cond_1
    new-instance v1, Lcom/litesuits/http/concurrent/SmartExecutor$2;

    invoke-direct {v1, p0, p1}, Lcom/litesuits/http/concurrent/SmartExecutor$2;-><init>(Lcom/litesuits/http/concurrent/SmartExecutor;Ljava/lang/Runnable;)V

    const/4 v0, 0x0

    iget-object v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->lock:Ljava/lang/Object;

    monitor-enter v2

    :try_start_0
    iget-object v3, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->runningList:Ljava/util/LinkedList;

    invoke-virtual {v3}, Ljava/util/LinkedList;->size()I

    move-result v3

    iget v4, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->coreSize:I

    if-ge v3, v4, :cond_3

    iget-object v3, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->runningList:Ljava/util/LinkedList;

    invoke-virtual {v3, v1}, Ljava/util/LinkedList;->add(Ljava/lang/Object;)Z

    sget-object v3, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v3, v1}, Ljava/util/concurrent/ThreadPoolExecutor;->execute(Ljava/lang/Runnable;)V

    :goto_1
    :pswitch_0
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v0, :cond_0

    sget-boolean v0, Lcom/litesuits/http/log/HttpLog;->isPrint:Z

    if-eqz v0, :cond_2

    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    const-string v1, "SmartExecutor task running in caller thread"

    invoke-static {v0, v1}, Lcom/litesuits/http/log/HttpLog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_2
    invoke-interface {p1}, Ljava/lang/Runnable;->run()V

    goto :goto_0

    :cond_3
    :try_start_1
    iget-object v3, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v3}, Ljava/util/LinkedList;->size()I

    move-result v3

    iget v4, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->queueSize:I

    if-ge v3, v4, :cond_4

    iget-object v3, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v3, v1}, Ljava/util/LinkedList;->addLast(Ljava/lang/Object;)V

    goto :goto_1

    :catchall_0
    move-exception v0

    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    :cond_4
    :try_start_2
    sget-boolean v3, Lcom/litesuits/http/log/HttpLog;->isPrint:Z

    if-eqz v3, :cond_5

    sget-object v3, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "SmartExecutor overload , policy is: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v5, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->overloadPolicy:Lcom/litesuits/http/concurrent/OverloadPolicy;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Lcom/litesuits/http/log/HttpLog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_5
    sget-object v3, Lcom/litesuits/http/concurrent/SmartExecutor$3;->$SwitchMap$com$litesuits$http$concurrent$OverloadPolicy:[I

    iget-object v4, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->overloadPolicy:Lcom/litesuits/http/concurrent/OverloadPolicy;

    invoke-virtual {v4}, Lcom/litesuits/http/concurrent/OverloadPolicy;->ordinal()I

    move-result v4

    aget v3, v3, v4

    packed-switch v3, :pswitch_data_0

    goto :goto_1

    :pswitch_1
    iget-object v3, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v3}, Ljava/util/LinkedList;->pollLast()Ljava/lang/Object;

    iget-object v3, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v3, v1}, Ljava/util/LinkedList;->addLast(Ljava/lang/Object;)V

    goto :goto_1

    :pswitch_2
    iget-object v3, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v3}, Ljava/util/LinkedList;->pollFirst()Ljava/lang/Object;

    iget-object v3, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v3, v1}, Ljava/util/LinkedList;->addLast(Ljava/lang/Object;)V

    goto :goto_1

    :pswitch_3
    const/4 v0, 0x1

    goto :goto_1

    :pswitch_4
    new-instance v0, Ljava/lang/RuntimeException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Task rejected from lite smart executor. "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_2
        :pswitch_3
        :pswitch_0
        :pswitch_4
    .end packed-switch
.end method

.method public getCoreSize()I
    .locals 1

    iget v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->coreSize:I

    return v0
.end method

.method public getOverloadPolicy()Lcom/litesuits/http/concurrent/OverloadPolicy;
    .locals 1

    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->overloadPolicy:Lcom/litesuits/http/concurrent/OverloadPolicy;

    return-object v0
.end method

.method public getQueueSize()I
    .locals 1

    iget v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->queueSize:I

    return v0
.end method

.method public getRunningSize()I
    .locals 1

    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->runningList:Ljava/util/LinkedList;

    invoke-virtual {v0}, Ljava/util/LinkedList;->size()I

    move-result v0

    return v0
.end method

.method public getSchedulePolicy()Lcom/litesuits/http/concurrent/SchedulePolicy;
    .locals 1

    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->schedulePolicy:Lcom/litesuits/http/concurrent/SchedulePolicy;

    return-object v0
.end method

.method public getWaitingSize()I
    .locals 1

    iget-object v0, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v0}, Ljava/util/LinkedList;->size()I

    move-result v0

    return v0
.end method

.method protected declared-synchronized initThreadPool()V
    .locals 3

    monitor-enter p0

    :try_start_0
    sget-boolean v0, Lcom/litesuits/http/log/HttpLog;->isPrint:Z

    if-eqz v0, :cond_0

    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "SmartExecutor core-queue size: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->coreSize:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->queueSize:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "  running-wait task: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->runningList:Ljava/util/LinkedList;

    invoke-virtual {v2}, Ljava/util/LinkedList;->size()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v2}, Ljava/util/LinkedList;->size()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/litesuits/http/log/HttpLog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    if-nez v0, :cond_1

    invoke-static {}, Lcom/litesuits/http/concurrent/SmartExecutor;->createDefaultThreadPool()Ljava/util/concurrent/ThreadPoolExecutor;

    move-result-object v0

    sput-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_1
    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public printThreadPoolInfo()V
    .locals 4

    sget-boolean v0, Lcom/litesuits/http/log/HttpLog;->isPrint:Z

    if-eqz v0, :cond_0

    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    const-string v1, "______________________________________"

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "state (shutdown - terminating - terminated): "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v2}, Ljava/util/concurrent/ThreadPoolExecutor;->isShutdown()Z

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v2}, Ljava/util/concurrent/ThreadPoolExecutor;->isTerminating()Z

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v2}, Ljava/util/concurrent/ThreadPoolExecutor;->isTerminated()Z

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "pool size (core - max): "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v2}, Ljava/util/concurrent/ThreadPoolExecutor;->getCorePoolSize()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v2}, Ljava/util/concurrent/ThreadPoolExecutor;->getMaximumPoolSize()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "task (actice - complete - total): "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v2}, Ljava/util/concurrent/ThreadPoolExecutor;->getActiveCount()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v2}, Ljava/util/concurrent/ThreadPoolExecutor;->getCompletedTaskCount()J

    move-result-wide v2

    invoke-virtual {v1, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v2}, Ljava/util/concurrent/ThreadPoolExecutor;->getTaskCount()J

    move-result-wide v2

    invoke-virtual {v1, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "waitingList size : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v2}, Ljava/util/concurrent/ThreadPoolExecutor;->getQueue()Ljava/util/concurrent/BlockingQueue;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/concurrent/BlockingQueue;->size()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " , "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Lcom/litesuits/http/concurrent/SmartExecutor;->threadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v2}, Ljava/util/concurrent/ThreadPoolExecutor;->getQueue()Ljava/util/concurrent/BlockingQueue;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    return-void
.end method

.method public setCoreSize(I)Lcom/litesuits/http/concurrent/SmartExecutor;
    .locals 3

    if-gtz p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "coreSize can not <= 0 !"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iput p1, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->coreSize:I

    sget-boolean v0, Lcom/litesuits/http/log/HttpLog;->isPrint:Z

    if-eqz v0, :cond_1

    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "SmartExecutor core-queue size: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->queueSize:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "  running-wait task: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->runningList:Ljava/util/LinkedList;

    invoke-virtual {v2}, Ljava/util/LinkedList;->size()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v2}, Ljava/util/LinkedList;->size()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/litesuits/http/log/HttpLog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_1
    return-object p0
.end method

.method public setOverloadPolicy(Lcom/litesuits/http/concurrent/OverloadPolicy;)V
    .locals 2

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "OverloadPolicy can not be null !"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iput-object p1, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->overloadPolicy:Lcom/litesuits/http/concurrent/OverloadPolicy;

    return-void
.end method

.method public setQueueSize(I)Lcom/litesuits/http/concurrent/SmartExecutor;
    .locals 3

    if-gez p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "queueSize can not < 0 !"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iput p1, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->queueSize:I

    sget-boolean v0, Lcom/litesuits/http/log/HttpLog;->isPrint:Z

    if-eqz v0, :cond_1

    sget-object v0, Lcom/litesuits/http/concurrent/SmartExecutor;->TAG:Ljava/lang/String;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "SmartExecutor core-queue size: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->coreSize:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "  running-wait task: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->runningList:Ljava/util/LinkedList;

    invoke-virtual {v2}, Ljava/util/LinkedList;->size()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->waitingList:Ljava/util/LinkedList;

    invoke-virtual {v2}, Ljava/util/LinkedList;->size()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/litesuits/http/log/HttpLog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_1
    return-object p0
.end method

.method public setSchedulePolicy(Lcom/litesuits/http/concurrent/SchedulePolicy;)V
    .locals 2

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "SchedulePolicy can not be null !"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iput-object p1, p0, Lcom/litesuits/http/concurrent/SmartExecutor;->schedulePolicy:Lcom/litesuits/http/concurrent/SchedulePolicy;

    return-void
.end method
