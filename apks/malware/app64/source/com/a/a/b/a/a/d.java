package com.a.a.b.a.a;

import java.io.Serializable;
import java.lang.reflect.Array;
import java.util.AbstractQueue;
import java.util.Collection;
import java.util.Iterator;
import java.util.NoSuchElementException;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;

public class d<E>
  extends AbstractQueue<E>
  implements a<E>, Serializable
{
  transient h<E> a;
  transient h<E> b;
  final ReentrantLock c = new ReentrantLock();
  private transient int d;
  private final int e;
  private final Condition f = this.c.newCondition();
  private final Condition g = this.c.newCondition();
  
  public d()
  {
    this(Integer.MAX_VALUE);
  }
  
  public d(int paramInt)
  {
    if (paramInt <= 0) {
      throw new IllegalArgumentException();
    }
    this.e = paramInt;
  }
  
  private boolean b(h<E> paramH)
  {
    if (this.d >= this.e) {
      return false;
    }
    h localH = this.a;
    paramH.c = localH;
    this.a = paramH;
    if (this.b == null) {
      this.b = paramH;
    }
    for (;;)
    {
      this.d += 1;
      this.f.signal();
      return true;
      localH.b = paramH;
    }
  }
  
  private boolean c(h<E> paramH)
  {
    if (this.d >= this.e) {
      return false;
    }
    h localH = this.b;
    paramH.b = localH;
    this.b = paramH;
    if (this.a == null) {
      this.a = paramH;
    }
    for (;;)
    {
      this.d += 1;
      this.f.signal();
      return true;
      localH.c = paramH;
    }
  }
  
  private E f()
  {
    h localH1 = this.a;
    if (localH1 == null) {
      return null;
    }
    h localH2 = localH1.c;
    Object localObject = localH1.a;
    localH1.a = null;
    localH1.c = localH1;
    this.a = localH2;
    if (localH2 == null) {
      this.b = null;
    }
    for (;;)
    {
      this.d -= 1;
      this.g.signal();
      return localObject;
      localH2.b = null;
    }
  }
  
  private E g()
  {
    h localH1 = this.b;
    if (localH1 == null) {
      return null;
    }
    h localH2 = localH1.b;
    Object localObject = localH1.a;
    localH1.a = null;
    localH1.b = localH1;
    this.b = localH2;
    if (localH2 == null) {
      this.a = null;
    }
    for (;;)
    {
      this.d -= 1;
      this.g.signal();
      return localObject;
      localH2.c = null;
    }
  }
  
  public E a()
  {
    Object localObject = b();
    if (localObject == null) {
      throw new NoSuchElementException();
    }
    return localObject;
  }
  
  public E a(long paramLong, TimeUnit paramTimeUnit)
  {
    paramLong = paramTimeUnit.toNanos(paramLong);
    paramTimeUnit = this.c;
    paramTimeUnit.lockInterruptibly();
    try
    {
      Object localObject1;
      for (;;)
      {
        localObject1 = f();
        if (localObject1 != null) {
          break;
        }
        if (paramLong <= 0L) {
          return null;
        }
        paramLong = this.f.awaitNanos(paramLong);
      }
      return localObject1;
    }
    finally
    {
      paramTimeUnit.unlock();
    }
  }
  
  void a(h<E> paramH)
  {
    h localH1 = paramH.b;
    h localH2 = paramH.c;
    if (localH1 == null)
    {
      f();
      return;
    }
    if (localH2 == null)
    {
      g();
      return;
    }
    localH1.c = localH2;
    localH2.b = localH1;
    paramH.a = null;
    this.d -= 1;
    this.g.signal();
  }
  
  public void a(E paramE)
  {
    if (!c(paramE)) {
      throw new IllegalStateException("Deque full");
    }
  }
  
  public boolean a(E paramE, long paramLong, TimeUnit paramTimeUnit)
  {
    if (paramE == null) {
      throw new NullPointerException();
    }
    paramE = new h(paramE);
    paramLong = paramTimeUnit.toNanos(paramLong);
    paramTimeUnit = this.c;
    paramTimeUnit.lockInterruptibly();
    try
    {
      for (;;)
      {
        boolean bool = c(paramE);
        if (bool) {
          break;
        }
        if (paramLong <= 0L) {
          return false;
        }
        paramLong = this.g.awaitNanos(paramLong);
      }
      return true;
    }
    finally
    {
      paramTimeUnit.unlock();
    }
  }
  
  public boolean add(E paramE)
  {
    a(paramE);
    return true;
  }
  
  public E b()
  {
    ReentrantLock localReentrantLock = this.c;
    localReentrantLock.lock();
    try
    {
      Object localObject1 = f();
      return localObject1;
    }
    finally
    {
      localReentrantLock.unlock();
    }
  }
  
  public boolean b(E paramE)
  {
    if (paramE == null) {
      throw new NullPointerException();
    }
    h localH = new h(paramE);
    paramE = this.c;
    paramE.lock();
    try
    {
      boolean bool = b(localH);
      return bool;
    }
    finally
    {
      paramE.unlock();
    }
  }
  
  public E c()
  {
    ReentrantLock localReentrantLock = this.c;
    localReentrantLock.lock();
    try
    {
      for (;;)
      {
        Object localObject = f();
        if (localObject != null) {
          break;
        }
        this.f.await();
      }
    }
    finally
    {
      localReentrantLock.unlock();
    }
    return ?;
  }
  
  public boolean c(E paramE)
  {
    if (paramE == null) {
      throw new NullPointerException();
    }
    h localH = new h(paramE);
    paramE = this.c;
    paramE.lock();
    try
    {
      boolean bool = c(localH);
      return bool;
    }
    finally
    {
      paramE.unlock();
    }
  }
  
  public void clear()
  {
    ReentrantLock localReentrantLock = this.c;
    localReentrantLock.lock();
    try
    {
      h localH;
      for (Object localObject1 = this.a; localObject1 != null; localObject1 = localH)
      {
        ((h)localObject1).a = null;
        localH = ((h)localObject1).c;
        ((h)localObject1).b = null;
        ((h)localObject1).c = null;
      }
      this.b = null;
      this.a = null;
      this.d = 0;
      this.g.signalAll();
      return;
    }
    finally
    {
      localReentrantLock.unlock();
    }
  }
  
  public boolean contains(Object paramObject)
  {
    if (paramObject == null) {
      return false;
    }
    ReentrantLock localReentrantLock = this.c;
    localReentrantLock.lock();
    try
    {
      for (h localH = this.a; localH != null; localH = localH.c)
      {
        boolean bool = paramObject.equals(localH.a);
        if (bool) {
          return true;
        }
      }
      return false;
    }
    finally
    {
      localReentrantLock.unlock();
    }
  }
  
  public E d()
  {
    Object localObject = e();
    if (localObject == null) {
      throw new NoSuchElementException();
    }
    return localObject;
  }
  
  public void d(E paramE)
  {
    if (paramE == null) {
      throw new NullPointerException();
    }
    h localH = new h(paramE);
    paramE = this.c;
    paramE.lock();
    try
    {
      if (!c(localH)) {
        this.g.await();
      }
      return;
    }
    finally
    {
      paramE.unlock();
    }
  }
  
  public int drainTo(Collection<? super E> paramCollection)
  {
    return drainTo(paramCollection, Integer.MAX_VALUE);
  }
  
  public int drainTo(Collection<? super E> paramCollection, int paramInt)
  {
    if (paramCollection == null) {
      throw new NullPointerException();
    }
    if (paramCollection == this) {
      throw new IllegalArgumentException();
    }
    ReentrantLock localReentrantLock = this.c;
    localReentrantLock.lock();
    try
    {
      int i = Math.min(paramInt, this.d);
      paramInt = 0;
      while (paramInt < i)
      {
        paramCollection.add(this.a.a);
        f();
        paramInt += 1;
      }
      return i;
    }
    finally
    {
      localReentrantLock.unlock();
    }
  }
  
  /* Error */
  public E e()
  {
    // Byte code:
    //   0: aload_0
    //   1: getfield 35	com/a/a/b/a/a/d:c	Ljava/util/concurrent/locks/ReentrantLock;
    //   4: astore_2
    //   5: aload_2
    //   6: invokevirtual 128	java/util/concurrent/locks/ReentrantLock:lock	()V
    //   9: aload_0
    //   10: getfield 53	com/a/a/b/a/a/d:a	Lcom/a/a/b/a/a/h;
    //   13: astore_1
    //   14: aload_1
    //   15: ifnonnull +11 -> 26
    //   18: aconst_null
    //   19: astore_1
    //   20: aload_2
    //   21: invokevirtual 92	java/util/concurrent/locks/ReentrantLock:unlock	()V
    //   24: aload_1
    //   25: areturn
    //   26: aload_0
    //   27: getfield 53	com/a/a/b/a/a/d:a	Lcom/a/a/b/a/a/h;
    //   30: getfield 71	com/a/a/b/a/a/h:a	Ljava/lang/Object;
    //   33: astore_1
    //   34: goto -14 -> 20
    //   37: astore_1
    //   38: aload_2
    //   39: invokevirtual 92	java/util/concurrent/locks/ReentrantLock:unlock	()V
    //   42: aload_1
    //   43: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	44	0	this	d
    //   13	21	1	localObject1	Object
    //   37	6	1	localObject2	Object
    //   4	35	2	localReentrantLock	ReentrantLock
    // Exception table:
    //   from	to	target	type
    //   9	14	37	finally
    //   26	34	37	finally
  }
  
  public boolean e(Object paramObject)
  {
    if (paramObject == null) {
      return false;
    }
    ReentrantLock localReentrantLock = this.c;
    localReentrantLock.lock();
    try
    {
      for (h localH = this.a; localH != null; localH = localH.c) {
        if (paramObject.equals(localH.a))
        {
          a(localH);
          return true;
        }
      }
      return false;
    }
    finally
    {
      localReentrantLock.unlock();
    }
  }
  
  public E element()
  {
    return d();
  }
  
  public Iterator<E> iterator()
  {
    return new g(this, null);
  }
  
  public boolean offer(E paramE)
  {
    return c(paramE);
  }
  
  public boolean offer(E paramE, long paramLong, TimeUnit paramTimeUnit)
  {
    return a(paramE, paramLong, paramTimeUnit);
  }
  
  public E peek()
  {
    return e();
  }
  
  public E poll()
  {
    return b();
  }
  
  public E poll(long paramLong, TimeUnit paramTimeUnit)
  {
    return a(paramLong, paramTimeUnit);
  }
  
  public void put(E paramE)
  {
    d(paramE);
  }
  
  public int remainingCapacity()
  {
    ReentrantLock localReentrantLock = this.c;
    localReentrantLock.lock();
    try
    {
      int i = this.e;
      int j = this.d;
      return i - j;
    }
    finally
    {
      localReentrantLock.unlock();
    }
  }
  
  public E remove()
  {
    return a();
  }
  
  public boolean remove(Object paramObject)
  {
    return e(paramObject);
  }
  
  public int size()
  {
    ReentrantLock localReentrantLock = this.c;
    localReentrantLock.lock();
    try
    {
      int i = this.d;
      return i;
    }
    finally
    {
      localReentrantLock.unlock();
    }
  }
  
  public E take()
  {
    return c();
  }
  
  public Object[] toArray()
  {
    ReentrantLock localReentrantLock = this.c;
    localReentrantLock.lock();
    try
    {
      Object[] arrayOfObject = new Object[this.d];
      int i = 0;
      h localH = this.a;
      while (localH != null)
      {
        arrayOfObject[i] = localH.a;
        localH = localH.c;
        i += 1;
      }
      return arrayOfObject;
    }
    finally
    {
      localReentrantLock.unlock();
    }
  }
  
  public <T> T[] toArray(T[] paramArrayOfT)
  {
    ReentrantLock localReentrantLock = this.c;
    localReentrantLock.lock();
    for (;;)
    {
      try
      {
        if (paramArrayOfT.length < this.d)
        {
          paramArrayOfT = (Object[])Array.newInstance(paramArrayOfT.getClass().getComponentType(), this.d);
          int i = 0;
          h localH = this.a;
          if (localH != null)
          {
            paramArrayOfT[i] = localH.a;
            localH = localH.c;
            i += 1;
          }
          else
          {
            if (paramArrayOfT.length > i) {
              paramArrayOfT[i] = null;
            }
            return paramArrayOfT;
          }
        }
      }
      finally
      {
        localReentrantLock.unlock();
      }
    }
  }
  
  /* Error */
  public String toString()
  {
    // Byte code:
    //   0: aload_0
    //   1: getfield 35	com/a/a/b/a/a/d:c	Ljava/util/concurrent/locks/ReentrantLock;
    //   4: astore 4
    //   6: aload 4
    //   8: invokevirtual 128	java/util/concurrent/locks/ReentrantLock:lock	()V
    //   11: aload_0
    //   12: getfield 53	com/a/a/b/a/a/d:a	Lcom/a/a/b/a/a/h;
    //   15: astore_1
    //   16: aload_1
    //   17: ifnonnull +11 -> 28
    //   20: aload 4
    //   22: invokevirtual 92	java/util/concurrent/locks/ReentrantLock:unlock	()V
    //   25: ldc -35
    //   27: areturn
    //   28: new 223	java/lang/StringBuilder
    //   31: dup
    //   32: invokespecial 224	java/lang/StringBuilder:<init>	()V
    //   35: astore 5
    //   37: aload 5
    //   39: bipush 91
    //   41: invokevirtual 228	java/lang/StringBuilder:append	(C)Ljava/lang/StringBuilder;
    //   44: pop
    //   45: aload_1
    //   46: getfield 71	com/a/a/b/a/a/h:a	Ljava/lang/Object;
    //   49: astore_3
    //   50: aload_3
    //   51: astore_2
    //   52: aload_3
    //   53: aload_0
    //   54: if_acmpne +6 -> 60
    //   57: ldc -26
    //   59: astore_2
    //   60: aload 5
    //   62: aload_2
    //   63: invokevirtual 233	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   66: pop
    //   67: aload_1
    //   68: getfield 57	com/a/a/b/a/a/h:c	Lcom/a/a/b/a/a/h;
    //   71: astore_1
    //   72: aload_1
    //   73: ifnonnull +21 -> 94
    //   76: aload 5
    //   78: bipush 93
    //   80: invokevirtual 228	java/lang/StringBuilder:append	(C)Ljava/lang/StringBuilder;
    //   83: invokevirtual 235	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   86: astore_1
    //   87: aload 4
    //   89: invokevirtual 92	java/util/concurrent/locks/ReentrantLock:unlock	()V
    //   92: aload_1
    //   93: areturn
    //   94: aload 5
    //   96: bipush 44
    //   98: invokevirtual 228	java/lang/StringBuilder:append	(C)Ljava/lang/StringBuilder;
    //   101: bipush 32
    //   103: invokevirtual 228	java/lang/StringBuilder:append	(C)Ljava/lang/StringBuilder;
    //   106: pop
    //   107: goto -62 -> 45
    //   110: astore_1
    //   111: aload 4
    //   113: invokevirtual 92	java/util/concurrent/locks/ReentrantLock:unlock	()V
    //   116: aload_1
    //   117: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	118	0	this	d
    //   15	78	1	localObject1	Object
    //   110	7	1	localObject2	Object
    //   51	12	2	localObject3	Object
    //   49	4	3	localObject4	Object
    //   4	108	4	localReentrantLock	ReentrantLock
    //   35	60	5	localStringBuilder	StringBuilder
    // Exception table:
    //   from	to	target	type
    //   11	16	110	finally
    //   28	45	110	finally
    //   45	50	110	finally
    //   60	72	110	finally
    //   76	87	110	finally
    //   94	107	110	finally
  }
}
