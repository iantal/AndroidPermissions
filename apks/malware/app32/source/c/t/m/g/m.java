package c.t.m.g;

import android.annotation.SuppressLint;
import android.content.Context;
import android.location.GpsSatellite;
import android.location.GpsStatus;
import android.location.GpsStatus.Listener;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import java.util.Iterator;

public final class m
  implements GpsStatus.Listener, LocationListener
{
  private long a = 0L;
  private Location b;
  private final b c;
  private final m.a d;
  private int e = 1024;
  private boolean f = false;
  private int g = 0;
  private int h = 0;
  
  public m(b paramB, m.a paramA)
  {
    if (c.a.a(paramB, paramA)) {
      throw new NullPointerException();
    }
    this.c = paramB;
    this.d = paramA;
    if (paramB.c() == null) {
      i = 1;
    }
    if (i != 0)
    {
      aj.b();
      throw new NullPointerException("android LocationManager is null");
    }
  }
  
  @SuppressLint({"NewApi"})
  private boolean a(Context paramContext, Location paramLocation)
  {
    if (!x.a) {}
    label60:
    label169:
    label174:
    do
    {
      for (;;)
      {
        return false;
        try
        {
          i = Settings.Secure.getInt(paramContext.getContentResolver(), "mock_location");
          if (i == 1) {}
          for (i = 1; i != 0; i = 0)
          {
            if ((Build.VERSION.SDK_INT < 18) || (!paramLocation.isFromMockProvider())) {
              break label60;
            }
            return true;
          }
          if ((this.e & 0x2) != 2) {
            break label169;
          }
        }
        catch (Exception paramContext)
        {
          aj.a("isFromMockProvider: ALLOW_MOCK_LOCATION not found", paramContext);
          return false;
        }
      }
      c();
      if (this.h > 0) {
        this.f = true;
      }
      if (this.f) {
        if ((this.h >= 3) || (this.h == 0))
        {
          i = 1;
          if ((i == 0) || ((!this.f) && (Math.abs(System.currentTimeMillis() - this.a) >= 30000L))) {
            break label169;
          }
        }
      }
      for (int i = 1;; i = 0)
      {
        if (i != 0) {
          break label174;
        }
        return true;
        i = 0;
        break;
        if (this.h == 0)
        {
          i = 1;
          break;
        }
        i = 0;
        break;
      }
    } while (a(paramLocation));
    return true;
  }
  
  @SuppressLint({"NewApi"})
  private static boolean a(Location paramLocation)
  {
    if (paramLocation.getProvider() == null) {}
    for (;;)
    {
      return false;
      if ((paramLocation.hasAccuracy()) && (paramLocation.getTime() != 0L)) {
        if (Build.VERSION.SDK_INT < 17) {}
      }
      try
      {
        long l = paramLocation.getElapsedRealtimeNanos();
        if (l == 0L) {}
      }
      catch (Exception paramLocation)
      {
        for (;;)
        {
          Log.getStackTraceString(paramLocation);
          aj.b();
        }
      }
    }
    return true;
  }
  
  private void b()
  {
    int i;
    if (this.e == 4) {
      i = 1;
    }
    for (;;)
    {
      this.d.a(12002, i);
      return;
      if (this.e == 0) {
        i = 0;
      } else {
        i = -1;
      }
    }
  }
  
  private void c()
  {
    this.h = 0;
    this.g = 0;
    Object localObject = this.c.c().getGpsStatus(null);
    if (localObject == null) {}
    for (;;)
    {
      return;
      int i = ((GpsStatus)localObject).getMaxSatellites();
      localObject = ((GpsStatus)localObject).getSatellites().iterator();
      if (localObject != null) {
        while ((((Iterator)localObject).hasNext()) && (this.g <= i))
        {
          this.g += 1;
          if (((GpsSatellite)((Iterator)localObject).next()).usedInFix()) {
            this.h += 1;
          }
        }
      }
    }
  }
  
  public final void a()
  {
    LocationManager localLocationManager = this.c.c();
    try
    {
      localLocationManager.removeGpsStatusListener(this);
      localLocationManager.removeUpdates(this);
      aj.a();
      return;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  public final void a(Handler paramHandler, long paramLong)
  {
    paramLong = Math.max(paramLong, 3000L);
    LocationManager localLocationManager = this.c.c();
    try
    {
      localLocationManager.addGpsStatusListener(this);
      localLocationManager.requestLocationUpdates("gps", paramLong, 10.0F, this, paramHandler.getLooper());
      aj.a();
      return;
    }
    catch (Exception paramHandler)
    {
      for (;;)
      {
        aj.a("startup: can not add location listener", paramHandler);
      }
    }
  }
  
  public final void onGpsStatusChanged(int paramInt)
  {
    switch (paramInt)
    {
    }
    for (;;)
    {
      c();
      return;
      this.e |= 0x1;
      continue;
      this.e = this.e;
      continue;
      this.e |= 0x2;
    }
  }
  
  public final void onLocationChanged(Location paramLocation)
  {
    int j = 0;
    if ((paramLocation == null) || (!"gps".equals(paramLocation.getProvider()))) {}
    label141:
    label226:
    for (;;)
    {
      return;
      double d1 = paramLocation.getLatitude();
      double d2 = paramLocation.getLongitude();
      int i = j;
      if (d1 != 29.999998211860657D)
      {
        if (d2 != 103.99999916553497D) {
          break label141;
        }
        i = j;
      }
      for (;;)
      {
        if (i == 0) {
          break label226;
        }
        c();
        this.e |= 0x2;
        if (a(this.c.a, paramLocation)) {
          break;
        }
        this.a = System.currentTimeMillis();
        this.b = paramLocation;
        paramLocation = new u(this.b, this.a, this.g, this.h, this.e);
        this.d.a(paramLocation);
        return;
        i = j;
        if (Math.abs(d1) >= 1.0E-8D)
        {
          i = j;
          if (Math.abs(d2) >= 1.0E-8D)
          {
            i = j;
            if (d1 >= -90.0D)
            {
              i = j;
              if (d1 <= 90.0D)
              {
                i = j;
                if (d2 >= -180.0D)
                {
                  i = j;
                  if (d2 <= 180.0D) {
                    i = 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  public final void onProviderDisabled(String paramString)
  {
    if ("gps".equals(paramString))
    {
      aj.a();
      this.h = 0;
      this.g = 0;
      this.e = 0;
      this.f = false;
      this.a = 0L;
      this.b = null;
      b();
    }
  }
  
  public final void onProviderEnabled(String paramString)
  {
    if ("gps".equals(paramString))
    {
      aj.a();
      this.e = 4;
      b();
    }
  }
  
  public final void onStatusChanged(String paramString, int paramInt, Bundle paramBundle) {}
}
