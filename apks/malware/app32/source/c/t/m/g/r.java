package c.t.m.g;

import android.os.SystemClock;
import com.tencent.tencentmap.lbssdk.service.e;
import java.util.Iterator;
import java.util.concurrent.LinkedBlockingQueue;

public final class r
{
  final LinkedBlockingQueue a;
  final b b;
  long c;
  long d;
  long e;
  final d.c f;
  long g;
  
  r(b paramB)
  {
    this.b = paramB;
    this.a = new LinkedBlockingQueue(3);
    this.f = d.d;
  }
  
  static String a(byte[] paramArrayOfByte, int paramInt)
  {
    if ((aj.a) || (e.o(paramArrayOfByte) < 0)) {
      return c.a.a(paramInt, 0);
    }
    return c.a.a(paramInt, 1);
  }
  
  final void a(r.a paramA)
  {
    if (r.a.c(paramA) == 1)
    {
      paramA = (v)r.a.d(paramA);
      if (paramA.c == null) {
        break label61;
      }
      i = 1;
      if (i != 0)
      {
        if (paramA.b == null) {
          break label66;
        }
        i = 1;
        label38:
        if (i == 0) {
          if (paramA.a == null) {
            break label71;
          }
        }
      }
    }
    label61:
    label66:
    label71:
    for (int i = 1;; i = 0)
    {
      if (i != 0) {
        paramA = this.f;
      }
      return;
      i = 0;
      break;
      i = 0;
      break label38;
    }
  }
  
  public final void a(String paramString, v paramV, int paramInt)
  {
    new StringBuilder("postLocationRequest: queue size=").append(this.a.size()).toString();
    aj.a();
    long l = SystemClock.elapsedRealtime();
    if (l - this.g < 2500L) {}
    for (int i = 1; i != 0; i = 0)
    {
      aj.a();
      return;
    }
    paramString = c.a.a(paramString.getBytes());
    paramString = new r.a(1, paramString, a(paramString, paramInt), paramV);
    if (this.a.offer(paramString))
    {
      this.g = l;
      return;
    }
    aj.a();
  }
  
  final void b(r.a paramA)
  {
    r.a.e(paramA);
    Iterator localIterator = this.a.iterator();
    do
    {
      if (!localIterator.hasNext()) {
        break;
      }
    } while (r.a.c((r.a)localIterator.next()) != r.a.c(paramA));
    for (int i = 1;; i = 0)
    {
      if ((r.a.f(paramA) > 0) && (i == 0))
      {
        new StringBuilder("retryIfNeed: times=").append(r.a.f(paramA)).toString();
        aj.a();
        this.a.offer(paramA);
        return;
      }
      a(paramA);
      return;
    }
  }
}
