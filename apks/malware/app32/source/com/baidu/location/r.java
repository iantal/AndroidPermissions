package com.baidu.location;

import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.net.wifi.ScanResult;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.Message;
import android.os.Messenger;
import android.os.PowerManager;
import android.os.PowerManager.WakeLock;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

class r
{
  public static r a;
  private boolean b;
  private List c;
  private List d;
  private PowerManager.WakeLock e;
  private HandlerThread f;
  private w g;
  private v h;
  private boolean i;
  private String j;
  private String k;
  private ar l;
  private ar m;
  private String n;
  private Messenger o;
  private int p;
  private Map q = new HashMap();
  private Handler r = new Handler();
  private boolean s = true;
  
  r() {}
  
  public static r a()
  {
    if (a == null)
    {
      a = new r();
      a.b();
    }
    return a;
  }
  
  private List a(boolean paramBoolean)
  {
    Object localObject = ce.a().e();
    this.l = ao.a().i();
    ArrayList localArrayList = new ArrayList();
    if (paramBoolean)
    {
      this.j = String.format("%s|%s|%s|%s", new Object[] { Integer.valueOf(((cf)localObject).c), Integer.valueOf(((cf)localObject).d), Integer.valueOf(((cf)localObject).a), Integer.valueOf(((cf)localObject).b) });
      localArrayList.add(Jni.c(this.j));
    }
    if (this.l != null)
    {
      localObject = this.l.a;
      if (localObject != null)
      {
        localObject = ((List)localObject).iterator();
        while (((Iterator)localObject).hasNext())
        {
          ScanResult localScanResult = (ScanResult)((Iterator)localObject).next();
          if (localScanResult != null) {
            localArrayList.add(Jni.c(localScanResult.BSSID.replace(":", "")));
          }
        }
      }
    }
    return localArrayList;
  }
  
  private void a(List paramList)
  {
    if ((paramList == null) || (paramList.size() == 0)) {
      return;
    }
    int i2 = paramList.size();
    int i1 = 0;
    while (i1 < i2)
    {
      paramList.set(i1, String.format("'%s'", new Object[] { paramList.get(i1) }));
      i1 += 1;
    }
    Object localObject1 = a(paramList, true);
    Object localObject2;
    Iterator localIterator1;
    Object localObject3;
    if (localObject1 != null)
    {
      paramList = ((List)localObject1).iterator();
      while (paramList.hasNext())
      {
        localObject2 = (an)paramList.next();
        localIterator1 = this.q.entrySet().iterator();
        while (localIterator1.hasNext())
        {
          localObject3 = (Map.Entry)localIterator1.next();
          if (System.currentTimeMillis() - ((Long)((Map.Entry)localObject3).getValue()).longValue() >= 1800000L) {
            localIterator1.remove();
          }
          if (((an)localObject2).b().equals(((Map.Entry)localObject3).getKey())) {
            paramList.remove();
          }
        }
      }
    }
    paramList = a(false);
    if ((paramList != null) && (paramList.size() > 0))
    {
      localObject2 = f();
      if (((Map)localObject2).size() > 0)
      {
        localIterator1 = paramList.iterator();
        for (;;)
        {
          if (!localIterator1.hasNext()) {
            break label326;
          }
          localObject3 = (String)localIterator1.next();
          Iterator localIterator2 = ((Map)localObject2).entrySet().iterator();
          if (localIterator2.hasNext())
          {
            if (!((List)((Map.Entry)localIterator2.next()).getValue()).contains(localObject3)) {
              break;
            }
            localIterator2.remove();
          }
        }
      }
      label326:
      if (((Map)localObject2).size() > 0)
      {
        paramList.clear();
        paramList.addAll(((Map)localObject2).keySet());
        i2 = paramList.size();
        i1 = 0;
        while (i1 < i2)
        {
          paramList.set(i1, String.format("'%s'", new Object[] { paramList.get(i1) }));
          i1 += 1;
        }
      }
    }
    for (paramList = a(paramList, false);; paramList = null)
    {
      localObject2 = new ArrayList();
      if (localObject1 != null) {
        ((List)localObject2).addAll((Collection)localObject1);
      }
      if (paramList != null)
      {
        paramList = paramList.iterator();
        while (paramList.hasNext())
        {
          localObject1 = (an)paramList.next();
          if ((!((List)localObject2).contains(localObject1)) || (this.s)) {
            ((List)localObject2).add(localObject1);
          }
        }
      }
      if ((localObject2 != null) && (((List)localObject2).size() > 0))
      {
        paramList = ((List)localObject2).iterator();
        label521:
        while (paramList.hasNext())
        {
          localObject1 = (an)paramList.next();
          if (localObject1 != null)
          {
            this.b = true;
            a((an)localObject1);
            this.k = this.j;
            this.m = this.l;
            this.p = 0;
          }
          else
          {
            this.b = false;
            this.p += 1;
            if (this.p != Integer.MAX_VALUE) {
              break label615;
            }
          }
        }
        label615:
        for (i1 = 1;; i1 = this.p)
        {
          this.p = i1;
          break label521;
          break;
        }
      }
      this.b = false;
      return;
    }
  }
  
  private void b()
  {
    this.f = new HandlerThread("GeofenceStrategyService", 10);
    this.f.start();
    this.r = new Handler(this.f.getLooper());
    this.g = new w(this, null);
  }
  
  private void b(Context paramContext)
  {
    if (this.e == null)
    {
      this.e = ((PowerManager)paramContext.getSystemService("power")).newWakeLock(1, "GeofenceStrategyService");
      this.e.setReferenceCounted(false);
      this.e.acquire(60000L);
    }
  }
  
  private void c()
  {
    if (this.b)
    {
      a(f.c(), 30000);
      return;
    }
    Object localObject;
    int i1;
    if (this.p > 0)
    {
      localObject = f.c();
      if (this.p >= 6) {}
      for (i1 = 180000;; i1 = this.p * 30000)
      {
        a((Context)localObject, i1);
        return;
      }
    }
    an localAn;
    if ((this.c != null) && (this.c.size() > 0))
    {
      localObject = this.c.iterator();
      i1 = 0;
      if (((Iterator)localObject).hasNext())
      {
        localAn = (an)((Iterator)localObject).next();
        if ((localAn.h()) || (localAn.g())) {
          break label258;
        }
        a(localAn);
        i1 = 1;
      }
    }
    label258:
    for (;;)
    {
      break;
      int i2 = i1;
      if (this.d != null)
      {
        i2 = i1;
        if (this.d.size() > 0)
        {
          localObject = this.d.iterator();
          for (;;)
          {
            i2 = i1;
            if (!((Iterator)localObject).hasNext()) {
              break;
            }
            localAn = (an)((Iterator)localObject).next();
            if ((!localAn.h()) && (!localAn.g()))
            {
              a(localAn);
              i1 = 1;
            }
          }
        }
      }
      if (i2 != 0)
      {
        a(f.c(), 30000);
        return;
      }
      a(f.c(), 180000);
      return;
      a(f.c(), 360000);
      return;
    }
  }
  
  private boolean d()
  {
    if (this.m == null) {}
    do
    {
      return true;
      if (this.l == this.m) {
        return false;
      }
    } while (!this.m.c(this.l));
    return false;
  }
  
  private void e()
  {
    if ((this.e != null) && (this.e.isHeld()))
    {
      this.e.release();
      this.e = null;
    }
  }
  
  private Map f()
  {
    String str1 = null;
    Cursor localCursor2 = null;
    HashMap localHashMap = new HashMap();
    SQLiteDatabase localSQLiteDatabase = bv.a(f.c()).getReadableDatabase();
    localCursor1 = localCursor2;
    localObject1 = str1;
    for (;;)
    {
      try
      {
        long l1 = System.currentTimeMillis();
        localCursor1 = localCursor2;
        localObject1 = str1;
        localCursor2 = localSQLiteDatabase.rawQuery(String.format("SELECT a.ap, b.geofence_id FROM %s AS a LEFT JOIN %s AS b WHERE (a.geofence_id = b.geofence_id) AND ((b.valid_date + b.duration_millis) >= %d) AND (b.next_exit_active_time < %d) ", new Object[] { "geofence_detail", "geofence", Long.valueOf(l1), Long.valueOf(l1) }), null);
        if (localCursor2 != null)
        {
          localCursor1 = localCursor2;
          localObject1 = localCursor2;
          if (localCursor2.getCount() > 0)
          {
            localCursor1 = localCursor2;
            localObject1 = localCursor2;
            localCursor2.moveToFirst();
            localCursor1 = localCursor2;
            localObject1 = localCursor2;
            int i1 = localCursor2.getColumnIndex("geofence_id");
            localCursor1 = localCursor2;
            localObject1 = localCursor2;
            int i2 = localCursor2.getColumnIndex("ap");
            localCursor1 = localCursor2;
            localObject1 = localCursor2;
            str1 = localCursor2.getString(i1);
            localCursor1 = localCursor2;
            localObject1 = localCursor2;
            str2 = localCursor2.getString(i2);
            localCursor1 = localCursor2;
            localObject1 = localCursor2;
            if (!localHashMap.containsKey(str1)) {
              continue;
            }
            localCursor1 = localCursor2;
            localObject1 = localCursor2;
            ((List)localHashMap.get(str1)).add(str2);
            localCursor1 = localCursor2;
            localObject1 = localCursor2;
            boolean bool = localCursor2.moveToNext();
            if (bool) {
              continue;
            }
          }
        }
        if (localCursor2 != null) {
          localCursor2.close();
        }
      }
      catch (Exception localException)
      {
        String str2;
        ArrayList localArrayList;
        localObject1 = localCursor1;
        localException.printStackTrace();
        if (localCursor1 == null) {
          continue;
        }
        localCursor1.close();
        continue;
      }
      finally
      {
        if (localObject1 == null) {
          continue;
        }
        ((Cursor)localObject1).close();
      }
      localSQLiteDatabase.close();
      return localHashMap;
      localCursor1 = localCursor2;
      localObject1 = localCursor2;
      localArrayList = new ArrayList();
      localCursor1 = localCursor2;
      localObject1 = localCursor2;
      localArrayList.add(str2);
      localCursor1 = localCursor2;
      localObject1 = localCursor2;
      localHashMap.put(str1, localArrayList);
    }
  }
  
  /* Error */
  public List a(String paramString, boolean paramBoolean)
  {
    // Byte code:
    //   0: invokestatic 318	com/baidu/location/f:c	()Landroid/content/Context;
    //   3: invokestatic 347	com/baidu/location/bv:a	(Landroid/content/Context;)Lcom/baidu/location/bv;
    //   6: invokevirtual 351	com/baidu/location/bv:getReadableDatabase	()Landroid/database/sqlite/SQLiteDatabase;
    //   9: astore 26
    //   11: aconst_null
    //   12: astore 23
    //   14: aconst_null
    //   15: astore 24
    //   17: aconst_null
    //   18: astore 25
    //   20: aload 26
    //   22: ifnull +464 -> 486
    //   25: aconst_null
    //   26: astore 22
    //   28: invokestatic 199	java/lang/System:currentTimeMillis	()J
    //   31: lstore 20
    //   33: iload_2
    //   34: ifeq +455 -> 489
    //   37: ldc_w 417
    //   40: iconst_5
    //   41: anewarray 4	java/lang/Object
    //   44: dup
    //   45: iconst_0
    //   46: ldc_w 355
    //   49: aastore
    //   50: dup
    //   51: iconst_1
    //   52: ldc_w 357
    //   55: aastore
    //   56: dup
    //   57: iconst_2
    //   58: aload_1
    //   59: aastore
    //   60: dup
    //   61: iconst_3
    //   62: lload 20
    //   64: invokestatic 360	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   67: aastore
    //   68: dup
    //   69: iconst_4
    //   70: lload 20
    //   72: invokestatic 360	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   75: aastore
    //   76: invokestatic 114	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   79: astore_1
    //   80: aload 26
    //   82: aload_1
    //   83: aconst_null
    //   84: invokevirtual 366	android/database/sqlite/SQLiteDatabase:rawQuery	(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;
    //   87: astore_1
    //   88: aload 25
    //   90: astore 22
    //   92: aload_1
    //   93: ifnull +370 -> 463
    //   96: aload 25
    //   98: astore 22
    //   100: aload_1
    //   101: invokeinterface 371 1 0
    //   106: ifle +357 -> 463
    //   109: new 89	java/util/ArrayList
    //   112: dup
    //   113: invokespecial 90	java/util/ArrayList:<init>	()V
    //   116: astore 22
    //   118: aload_1
    //   119: invokeinterface 374 1 0
    //   124: pop
    //   125: aload_1
    //   126: ldc_w 376
    //   129: invokeinterface 380 2 0
    //   134: istore 7
    //   136: aload_1
    //   137: ldc_w 419
    //   140: invokeinterface 380 2 0
    //   145: istore 8
    //   147: aload_1
    //   148: ldc_w 421
    //   151: invokeinterface 380 2 0
    //   156: istore 9
    //   158: aload_1
    //   159: ldc_w 423
    //   162: invokeinterface 380 2 0
    //   167: istore 10
    //   169: aload_1
    //   170: ldc_w 425
    //   173: invokeinterface 380 2 0
    //   178: istore 11
    //   180: aload_1
    //   181: ldc_w 427
    //   184: invokeinterface 380 2 0
    //   189: istore 12
    //   191: aload_1
    //   192: ldc_w 429
    //   195: invokeinterface 380 2 0
    //   200: istore 13
    //   202: aload_1
    //   203: ldc_w 431
    //   206: invokeinterface 380 2 0
    //   211: istore 14
    //   213: aload_1
    //   214: ldc_w 433
    //   217: invokeinterface 380 2 0
    //   222: istore 15
    //   224: aload_1
    //   225: ldc_w 435
    //   228: invokeinterface 380 2 0
    //   233: istore 16
    //   235: aload_1
    //   236: iload 7
    //   238: invokeinterface 386 2 0
    //   243: astore 23
    //   245: aload_1
    //   246: iload 8
    //   248: invokeinterface 386 2 0
    //   253: invokestatic 440	java/lang/Float:valueOf	(Ljava/lang/String;)Ljava/lang/Float;
    //   256: invokevirtual 444	java/lang/Float:floatValue	()F
    //   259: fstore_3
    //   260: aload_1
    //   261: iload 9
    //   263: invokeinterface 386 2 0
    //   268: invokestatic 440	java/lang/Float:valueOf	(Ljava/lang/String;)Ljava/lang/Float;
    //   271: invokevirtual 444	java/lang/Float:floatValue	()F
    //   274: fstore 4
    //   276: aload_1
    //   277: iload 10
    //   279: invokeinterface 386 2 0
    //   284: invokestatic 440	java/lang/Float:valueOf	(Ljava/lang/String;)Ljava/lang/Float;
    //   287: invokevirtual 444	java/lang/Float:floatValue	()F
    //   290: fstore 5
    //   292: aload_1
    //   293: iload 11
    //   295: invokeinterface 386 2 0
    //   300: astore 24
    //   302: aload_1
    //   303: iload 12
    //   305: invokeinterface 448 2 0
    //   310: lstore 20
    //   312: aload_1
    //   313: iload 13
    //   315: invokeinterface 452 2 0
    //   320: ifeq +215 -> 535
    //   323: iconst_1
    //   324: istore 17
    //   326: aload_1
    //   327: iload 14
    //   329: invokeinterface 452 2 0
    //   334: ifeq +207 -> 541
    //   337: iconst_1
    //   338: istore 18
    //   340: aload_1
    //   341: iload 15
    //   343: invokeinterface 452 2 0
    //   348: ifeq +199 -> 547
    //   351: iconst_1
    //   352: istore 19
    //   354: aload_1
    //   355: iload 16
    //   357: invokeinterface 452 2 0
    //   362: istore 6
    //   364: new 182	com/baidu/location/an
    //   367: dup
    //   368: aload 23
    //   370: fload_3
    //   371: f2d
    //   372: fload 4
    //   374: f2d
    //   375: iload 6
    //   377: lload 20
    //   379: aload 24
    //   381: invokespecial 455	com/baidu/location/an:<init>	(Ljava/lang/String;DDIJLjava/lang/String;)V
    //   384: astore 23
    //   386: aload 23
    //   388: ifnull +52 -> 440
    //   391: aload 23
    //   393: fload 5
    //   395: invokevirtual 458	com/baidu/location/an:a	(F)V
    //   398: aload 23
    //   400: iload 17
    //   402: invokevirtual 460	com/baidu/location/an:a	(Z)V
    //   405: aload 23
    //   407: iload 18
    //   409: invokevirtual 462	com/baidu/location/an:c	(Z)V
    //   412: aload 23
    //   414: iload 19
    //   416: invokevirtual 464	com/baidu/location/an:b	(Z)V
    //   419: aload_0
    //   420: getfield 52	com/baidu/location/r:s	Z
    //   423: ifne +17 -> 440
    //   426: iload_2
    //   427: ifeq +126 -> 553
    //   430: iconst_1
    //   431: istore 6
    //   433: aload 23
    //   435: iload 6
    //   437: invokevirtual 467	com/baidu/location/an:a	(I)V
    //   440: aload 22
    //   442: aload 23
    //   444: invokeinterface 127 2 0
    //   449: pop
    //   450: aload_1
    //   451: invokeinterface 395 1 0
    //   456: istore 17
    //   458: iload 17
    //   460: ifne -225 -> 235
    //   463: aload 22
    //   465: astore 23
    //   467: aload_1
    //   468: ifnull +13 -> 481
    //   471: aload_1
    //   472: invokeinterface 398 1 0
    //   477: aload 22
    //   479: astore 23
    //   481: aload 26
    //   483: invokevirtual 399	android/database/sqlite/SQLiteDatabase:close	()V
    //   486: aload 23
    //   488: areturn
    //   489: ldc_w 469
    //   492: iconst_5
    //   493: anewarray 4	java/lang/Object
    //   496: dup
    //   497: iconst_0
    //   498: ldc_w 355
    //   501: aastore
    //   502: dup
    //   503: iconst_1
    //   504: ldc_w 357
    //   507: aastore
    //   508: dup
    //   509: iconst_2
    //   510: aload_1
    //   511: aastore
    //   512: dup
    //   513: iconst_3
    //   514: lload 20
    //   516: invokestatic 360	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   519: aastore
    //   520: dup
    //   521: iconst_4
    //   522: lload 20
    //   524: invokestatic 360	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   527: aastore
    //   528: invokestatic 114	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   531: astore_1
    //   532: goto -452 -> 80
    //   535: iconst_0
    //   536: istore 17
    //   538: goto -212 -> 326
    //   541: iconst_0
    //   542: istore 18
    //   544: goto -204 -> 340
    //   547: iconst_0
    //   548: istore 19
    //   550: goto -196 -> 354
    //   553: iconst_0
    //   554: istore 6
    //   556: goto -123 -> 433
    //   559: astore_1
    //   560: aload 24
    //   562: astore_1
    //   563: aload_1
    //   564: astore 23
    //   566: aload 22
    //   568: ifnull -87 -> 481
    //   571: aload 22
    //   573: invokeinterface 398 1 0
    //   578: aload_1
    //   579: astore 23
    //   581: goto -100 -> 481
    //   584: astore 22
    //   586: aconst_null
    //   587: astore_1
    //   588: aload_1
    //   589: ifnull +9 -> 598
    //   592: aload_1
    //   593: invokeinterface 398 1 0
    //   598: aload 22
    //   600: athrow
    //   601: astore 22
    //   603: goto -15 -> 588
    //   606: astore 22
    //   608: aload_1
    //   609: astore 22
    //   611: aload 24
    //   613: astore_1
    //   614: goto -51 -> 563
    //   617: astore 23
    //   619: aload_1
    //   620: astore 23
    //   622: aload 22
    //   624: astore_1
    //   625: aload 23
    //   627: astore 22
    //   629: goto -66 -> 563
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	632	0	this	r
    //   0	632	1	paramString	String
    //   0	632	2	paramBoolean	boolean
    //   259	112	3	f1	float
    //   274	99	4	f2	float
    //   290	104	5	f3	float
    //   362	193	6	i1	int
    //   134	103	7	i2	int
    //   145	102	8	i3	int
    //   156	106	9	i4	int
    //   167	111	10	i5	int
    //   178	116	11	i6	int
    //   189	115	12	i7	int
    //   200	114	13	i8	int
    //   211	117	14	i9	int
    //   222	120	15	i10	int
    //   233	123	16	i11	int
    //   324	213	17	bool1	boolean
    //   338	205	18	bool2	boolean
    //   352	197	19	bool3	boolean
    //   31	492	20	l1	long
    //   26	546	22	localObject1	Object
    //   584	15	22	localObject2	Object
    //   601	1	22	localObject3	Object
    //   606	1	22	localException1	Exception
    //   609	19	22	str1	String
    //   12	568	23	localObject4	Object
    //   617	1	23	localException2	Exception
    //   620	6	23	str2	String
    //   15	597	24	str3	String
    //   18	79	25	localObject5	Object
    //   9	473	26	localSQLiteDatabase	SQLiteDatabase
    // Exception table:
    //   from	to	target	type
    //   37	80	559	java/lang/Exception
    //   80	88	559	java/lang/Exception
    //   489	532	559	java/lang/Exception
    //   37	80	584	finally
    //   80	88	584	finally
    //   489	532	584	finally
    //   100	118	601	finally
    //   118	235	601	finally
    //   235	323	601	finally
    //   326	337	601	finally
    //   340	351	601	finally
    //   354	386	601	finally
    //   391	426	601	finally
    //   433	440	601	finally
    //   440	458	601	finally
    //   100	118	606	java/lang/Exception
    //   118	235	617	java/lang/Exception
    //   235	323	617	java/lang/Exception
    //   326	337	617	java/lang/Exception
    //   340	351	617	java/lang/Exception
    //   354	386	617	java/lang/Exception
    //   391	426	617	java/lang/Exception
    //   433	440	617	java/lang/Exception
    //   440	458	617	java/lang/Exception
  }
  
  /* Error */
  public List a(List paramList, boolean paramBoolean)
  {
    // Byte code:
    //   0: ldc_w 471
    //   3: aload_1
    //   4: invokestatic 477	android/text/TextUtils:join	(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;
    //   7: astore_1
    //   8: invokestatic 318	com/baidu/location/f:c	()Landroid/content/Context;
    //   11: invokestatic 347	com/baidu/location/bv:a	(Landroid/content/Context;)Lcom/baidu/location/bv;
    //   14: invokevirtual 351	com/baidu/location/bv:getReadableDatabase	()Landroid/database/sqlite/SQLiteDatabase;
    //   17: astore 26
    //   19: aconst_null
    //   20: astore 23
    //   22: aconst_null
    //   23: astore 24
    //   25: aconst_null
    //   26: astore 25
    //   28: aload 26
    //   30: ifnull +471 -> 501
    //   33: aconst_null
    //   34: astore 22
    //   36: invokestatic 199	java/lang/System:currentTimeMillis	()J
    //   39: lstore 20
    //   41: iload_2
    //   42: ifeq +462 -> 504
    //   45: ldc_w 479
    //   48: iconst_5
    //   49: anewarray 4	java/lang/Object
    //   52: dup
    //   53: iconst_0
    //   54: ldc_w 355
    //   57: aastore
    //   58: dup
    //   59: iconst_1
    //   60: ldc_w 357
    //   63: aastore
    //   64: dup
    //   65: iconst_2
    //   66: aload_1
    //   67: aastore
    //   68: dup
    //   69: iconst_3
    //   70: lload 20
    //   72: invokestatic 360	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   75: aastore
    //   76: dup
    //   77: iconst_4
    //   78: lload 20
    //   80: invokestatic 360	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   83: aastore
    //   84: invokestatic 114	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   87: astore_1
    //   88: aload 26
    //   90: aload_1
    //   91: aconst_null
    //   92: invokevirtual 366	android/database/sqlite/SQLiteDatabase:rawQuery	(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;
    //   95: astore_1
    //   96: aload 25
    //   98: astore 22
    //   100: aload_1
    //   101: ifnull +377 -> 478
    //   104: aload 25
    //   106: astore 22
    //   108: aload_1
    //   109: invokeinterface 371 1 0
    //   114: ifle +364 -> 478
    //   117: new 89	java/util/ArrayList
    //   120: dup
    //   121: invokespecial 90	java/util/ArrayList:<init>	()V
    //   124: astore 22
    //   126: aload 22
    //   128: invokeinterface 233 1 0
    //   133: aload_1
    //   134: invokeinterface 374 1 0
    //   139: pop
    //   140: aload_1
    //   141: ldc_w 376
    //   144: invokeinterface 380 2 0
    //   149: istore 7
    //   151: aload_1
    //   152: ldc_w 419
    //   155: invokeinterface 380 2 0
    //   160: istore 8
    //   162: aload_1
    //   163: ldc_w 421
    //   166: invokeinterface 380 2 0
    //   171: istore 9
    //   173: aload_1
    //   174: ldc_w 423
    //   177: invokeinterface 380 2 0
    //   182: istore 10
    //   184: aload_1
    //   185: ldc_w 425
    //   188: invokeinterface 380 2 0
    //   193: istore 11
    //   195: aload_1
    //   196: ldc_w 427
    //   199: invokeinterface 380 2 0
    //   204: istore 12
    //   206: aload_1
    //   207: ldc_w 429
    //   210: invokeinterface 380 2 0
    //   215: istore 13
    //   217: aload_1
    //   218: ldc_w 431
    //   221: invokeinterface 380 2 0
    //   226: istore 14
    //   228: aload_1
    //   229: ldc_w 433
    //   232: invokeinterface 380 2 0
    //   237: istore 15
    //   239: aload_1
    //   240: ldc_w 435
    //   243: invokeinterface 380 2 0
    //   248: istore 16
    //   250: aload_1
    //   251: iload 7
    //   253: invokeinterface 386 2 0
    //   258: astore 23
    //   260: aload_1
    //   261: iload 8
    //   263: invokeinterface 386 2 0
    //   268: invokestatic 440	java/lang/Float:valueOf	(Ljava/lang/String;)Ljava/lang/Float;
    //   271: invokevirtual 444	java/lang/Float:floatValue	()F
    //   274: fstore_3
    //   275: aload_1
    //   276: iload 9
    //   278: invokeinterface 386 2 0
    //   283: invokestatic 440	java/lang/Float:valueOf	(Ljava/lang/String;)Ljava/lang/Float;
    //   286: invokevirtual 444	java/lang/Float:floatValue	()F
    //   289: fstore 4
    //   291: aload_1
    //   292: iload 10
    //   294: invokeinterface 386 2 0
    //   299: invokestatic 440	java/lang/Float:valueOf	(Ljava/lang/String;)Ljava/lang/Float;
    //   302: invokevirtual 444	java/lang/Float:floatValue	()F
    //   305: fstore 5
    //   307: aload_1
    //   308: iload 11
    //   310: invokeinterface 386 2 0
    //   315: astore 24
    //   317: aload_1
    //   318: iload 12
    //   320: invokeinterface 448 2 0
    //   325: lstore 20
    //   327: aload_1
    //   328: iload 13
    //   330: invokeinterface 452 2 0
    //   335: ifeq +215 -> 550
    //   338: iconst_1
    //   339: istore 17
    //   341: aload_1
    //   342: iload 14
    //   344: invokeinterface 452 2 0
    //   349: ifeq +207 -> 556
    //   352: iconst_1
    //   353: istore 18
    //   355: aload_1
    //   356: iload 15
    //   358: invokeinterface 452 2 0
    //   363: ifeq +199 -> 562
    //   366: iconst_1
    //   367: istore 19
    //   369: aload_1
    //   370: iload 16
    //   372: invokeinterface 452 2 0
    //   377: istore 6
    //   379: new 182	com/baidu/location/an
    //   382: dup
    //   383: aload 23
    //   385: fload_3
    //   386: f2d
    //   387: fload 4
    //   389: f2d
    //   390: iload 6
    //   392: lload 20
    //   394: aload 24
    //   396: invokespecial 455	com/baidu/location/an:<init>	(Ljava/lang/String;DDIJLjava/lang/String;)V
    //   399: astore 23
    //   401: aload 23
    //   403: ifnull +52 -> 455
    //   406: aload 23
    //   408: fload 5
    //   410: invokevirtual 458	com/baidu/location/an:a	(F)V
    //   413: aload 23
    //   415: iload 17
    //   417: invokevirtual 460	com/baidu/location/an:a	(Z)V
    //   420: aload 23
    //   422: iload 18
    //   424: invokevirtual 462	com/baidu/location/an:c	(Z)V
    //   427: aload 23
    //   429: iload 19
    //   431: invokevirtual 464	com/baidu/location/an:b	(Z)V
    //   434: aload_0
    //   435: getfield 52	com/baidu/location/r:s	Z
    //   438: ifne +17 -> 455
    //   441: iload_2
    //   442: ifeq +126 -> 568
    //   445: iconst_1
    //   446: istore 6
    //   448: aload 23
    //   450: iload 6
    //   452: invokevirtual 467	com/baidu/location/an:a	(I)V
    //   455: aload 22
    //   457: aload 23
    //   459: invokeinterface 127 2 0
    //   464: pop
    //   465: aload_1
    //   466: invokeinterface 395 1 0
    //   471: istore 17
    //   473: iload 17
    //   475: ifne -225 -> 250
    //   478: aload 22
    //   480: astore 23
    //   482: aload_1
    //   483: ifnull +13 -> 496
    //   486: aload_1
    //   487: invokeinterface 398 1 0
    //   492: aload 22
    //   494: astore 23
    //   496: aload 26
    //   498: invokevirtual 399	android/database/sqlite/SQLiteDatabase:close	()V
    //   501: aload 23
    //   503: areturn
    //   504: ldc_w 481
    //   507: iconst_5
    //   508: anewarray 4	java/lang/Object
    //   511: dup
    //   512: iconst_0
    //   513: ldc_w 355
    //   516: aastore
    //   517: dup
    //   518: iconst_1
    //   519: ldc_w 357
    //   522: aastore
    //   523: dup
    //   524: iconst_2
    //   525: aload_1
    //   526: aastore
    //   527: dup
    //   528: iconst_3
    //   529: lload 20
    //   531: invokestatic 360	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   534: aastore
    //   535: dup
    //   536: iconst_4
    //   537: lload 20
    //   539: invokestatic 360	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   542: aastore
    //   543: invokestatic 114	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   546: astore_1
    //   547: goto -459 -> 88
    //   550: iconst_0
    //   551: istore 17
    //   553: goto -212 -> 341
    //   556: iconst_0
    //   557: istore 18
    //   559: goto -204 -> 355
    //   562: iconst_0
    //   563: istore 19
    //   565: goto -196 -> 369
    //   568: iconst_0
    //   569: istore 6
    //   571: goto -123 -> 448
    //   574: astore_1
    //   575: aload 24
    //   577: astore_1
    //   578: aload_1
    //   579: astore 23
    //   581: aload 22
    //   583: ifnull -87 -> 496
    //   586: aload 22
    //   588: invokeinterface 398 1 0
    //   593: aload_1
    //   594: astore 23
    //   596: goto -100 -> 496
    //   599: astore 22
    //   601: aconst_null
    //   602: astore_1
    //   603: aload_1
    //   604: ifnull +9 -> 613
    //   607: aload_1
    //   608: invokeinterface 398 1 0
    //   613: aload 22
    //   615: athrow
    //   616: astore 22
    //   618: goto -15 -> 603
    //   621: astore 22
    //   623: aload_1
    //   624: astore 22
    //   626: aload 24
    //   628: astore_1
    //   629: goto -51 -> 578
    //   632: astore 23
    //   634: aload_1
    //   635: astore 23
    //   637: aload 22
    //   639: astore_1
    //   640: aload 23
    //   642: astore 22
    //   644: goto -66 -> 578
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	647	0	this	r
    //   0	647	1	paramList	List
    //   0	647	2	paramBoolean	boolean
    //   274	112	3	f1	float
    //   289	99	4	f2	float
    //   305	104	5	f3	float
    //   377	193	6	i1	int
    //   149	103	7	i2	int
    //   160	102	8	i3	int
    //   171	106	9	i4	int
    //   182	111	10	i5	int
    //   193	116	11	i6	int
    //   204	115	12	i7	int
    //   215	114	13	i8	int
    //   226	117	14	i9	int
    //   237	120	15	i10	int
    //   248	123	16	i11	int
    //   339	213	17	bool1	boolean
    //   353	205	18	bool2	boolean
    //   367	197	19	bool3	boolean
    //   39	499	20	l1	long
    //   34	553	22	localObject1	Object
    //   599	15	22	localObject2	Object
    //   616	1	22	localObject3	Object
    //   621	1	22	localException1	Exception
    //   624	19	22	localList1	List
    //   20	575	23	localObject4	Object
    //   632	1	23	localException2	Exception
    //   635	6	23	localList2	List
    //   23	604	24	str	String
    //   26	79	25	localObject5	Object
    //   17	480	26	localSQLiteDatabase	SQLiteDatabase
    // Exception table:
    //   from	to	target	type
    //   36	41	574	java/lang/Exception
    //   45	88	574	java/lang/Exception
    //   88	96	574	java/lang/Exception
    //   504	547	574	java/lang/Exception
    //   36	41	599	finally
    //   45	88	599	finally
    //   88	96	599	finally
    //   504	547	599	finally
    //   108	126	616	finally
    //   126	250	616	finally
    //   250	338	616	finally
    //   341	352	616	finally
    //   355	366	616	finally
    //   369	401	616	finally
    //   406	441	616	finally
    //   448	455	616	finally
    //   455	473	616	finally
    //   108	126	621	java/lang/Exception
    //   126	250	632	java/lang/Exception
    //   250	338	632	java/lang/Exception
    //   341	352	632	java/lang/Exception
    //   355	366	632	java/lang/Exception
    //   369	401	632	java/lang/Exception
    //   406	441	632	java/lang/Exception
    //   448	455	632	java/lang/Exception
    //   455	473	632	java/lang/Exception
  }
  
  public void a(Context paramContext)
  {
    this.i = false;
    bp.a(paramContext, PendingIntent.getBroadcast(paramContext, 0, new Intent("com.baidu.locsdk.geofence.geofencestrategyservice"), 134217728));
    e();
    if (this.h != null) {}
    try
    {
      paramContext.unregisterReceiver(this.h);
      return;
    }
    catch (Exception paramContext) {}
  }
  
  public void a(Context paramContext, int paramInt)
  {
    Intent localIntent = new Intent("com.baidu.locsdk.geofence.geofencestrategyservice");
    PendingIntent localPendingIntent = PendingIntent.getBroadcast(paramContext, 0, localIntent, 134217728);
    if (paramInt <= 0)
    {
      bp.a(paramContext, localPendingIntent);
      paramContext.sendBroadcast(localIntent);
      return;
    }
    bp.a(paramContext, localPendingIntent, paramInt);
  }
  
  public void a(Context paramContext, Message paramMessage)
  {
    if (this.i) {
      return;
    }
    this.o = paramMessage.replyTo;
    this.i = true;
    this.h = new v(this);
    paramContext.registerReceiver(this.h, new IntentFilter("com.baidu.locsdk.geofence.geofencestrategyservice"));
    a(paramContext, 0);
  }
  
  public void a(an paramAn)
  {
    new t(this, paramAn, Jni.a(new u(this, null).a("&gf=1").replace("gcj02", paramAn.f()))).b();
  }
}
