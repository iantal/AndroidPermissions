package com.baidu.location;

import android.os.Bundle;
import android.os.Message;
import android.os.Messenger;
import com.baidu.location.a.a.a;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

class t
  extends cb
{
  private an b;
  private final String c;
  
  public t(r paramR, an paramAn, String paramString)
  {
    this.b = paramAn;
    this.c = paramString;
    this.h = new ArrayList();
  }
  
  private void c()
  {
    r.b(this.a, false);
    r.b(this.a).put(this.b.b(), Long.valueOf(System.currentTimeMillis()));
    au.a(f.c()).a(this.b);
    if (r.c(this.a) != null)
    {
      Message localMessage = Message.obtain(null, 208);
      Bundle localBundle = new Bundle();
      localBundle.putString("geofence_id", this.b.b());
      localMessage.setData(localBundle);
      r.c(this.a).send(localMessage);
    }
  }
  
  private void i()
  {
    r.b(this.a, false);
    au.a(f.c()).b(this.b);
    if (r.c(this.a) != null)
    {
      Message localMessage = Message.obtain(null, 209);
      Bundle localBundle = new Bundle();
      localBundle.putString("geofence_id", this.b.b());
      localMessage.setData(localBundle);
      r.c(this.a).send(localMessage);
    }
  }
  
  void a()
  {
    this.e = "http://loc.map.baidu.com/fence";
    Object localObject = new DecimalFormat("0.00000");
    String str1 = ((DecimalFormat)localObject).format(this.b.d());
    String str2 = ((DecimalFormat)localObject).format(this.b.c());
    float f = this.b.e();
    String str3 = String.valueOf(this.b.f());
    int i = au.c(f.c());
    String str4 = a.a(f.c());
    int j = this.b.i();
    if (ao.a().l()) {}
    for (localObject = "1";; localObject = "0")
    {
      localObject = Jni.a(String.format("&x=%s&y=%s&r=%s&coord=%s&type=%s&cu=%s&fence_type=%s&wf_on=%s", new Object[] { str1, str2, String.valueOf(f), str3, Integer.valueOf(i), str4, Integer.valueOf(j), localObject }));
      this.h.add(new BasicNameValuePair("fence", (String)localObject));
      this.h.add(new BasicNameValuePair("bloc", this.c));
      this.h.add(new BasicNameValuePair("ext", Jni.a(String.format(Locale.CHINA, "&ki=%s&sn=%s", new Object[] { ci.b(f.c()), ci.a(f.c()) }))));
      return;
    }
  }
  
  void a(boolean paramBoolean)
  {
    int i = 0;
    r.a(this.a, false);
    if ((paramBoolean) && (this.g != null)) {}
    try
    {
      JSONObject localJSONObject = new JSONObject(EntityUtils.toString(this.g, "UTF-8"));
      if (localJSONObject != null)
      {
        int j = Integer.valueOf(localJSONObject.getString("error")).intValue();
        if (localJSONObject.has("in")) {
          i = Integer.valueOf(localJSONObject.getString("in")).intValue();
        }
        if (j == 0)
        {
          r.a(this.a, null);
          r.a(this.a, null);
          au.a(f.c()).a();
          if (r.a(this.a))
          {
            if (i == 1)
            {
              c();
              return;
            }
            if (i == 0) {
              i();
            }
          }
          else
          {
            if ((i == 1) && (this.b.a() == 1))
            {
              c();
              return;
            }
            if ((i == 0) && (this.b.a() == 0)) {
              i();
            }
          }
        }
      }
      return;
    }
    catch (Exception localException) {}
  }
  
  public void b()
  {
    e();
  }
}
