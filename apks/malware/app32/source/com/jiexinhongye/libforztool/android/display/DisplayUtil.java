package com.jiexinhongye.libforztool.android.display;

import android.app.Activity;
import android.content.Context;
import android.view.View;
import android.view.WindowManager;
import android.view.WindowManager.LayoutParams;
import android.widget.FrameLayout;
import android.widget.FrameLayout.LayoutParams;
import java.util.HashMap;

public class DisplayUtil
{
  private static DisplayUtil util;
  private Context context;
  private boolean isInit = false;
  private HashMap maps = new HashMap();
  private WindowManager winManager;
  
  private DisplayUtil() {}
  
  private void checkInit()
  {
    if (!this.isInit) {
      throw new RuntimeException("DisplayUtil is not init");
    }
  }
  
  public static DisplayUtil getInstance()
  {
    try
    {
      if (util == null) {
        util = new DisplayUtil();
      }
      DisplayUtil localDisplayUtil = util;
      return localDisplayUtil;
    }
    finally {}
  }
  
  private FrameLayout getRootLayout()
  {
    FrameLayout localFrameLayout = new FrameLayout(this.context);
    localFrameLayout.setLayoutParams(new FrameLayout.LayoutParams(-2, -2));
    return localFrameLayout;
  }
  
  public void closeView(View paramView)
  {
    closeView(paramView, null);
  }
  
  public void closeView(View paramView, CloseListener paramCloseListener)
  {
    FrameLayout localFrameLayout = (FrameLayout)this.maps.get(paramView);
    if (localFrameLayout != null)
    {
      this.winManager.removeView(localFrameLayout);
      localFrameLayout.removeAllViews();
      this.maps.remove(paramView);
    }
    if (paramCloseListener != null) {
      paramCloseListener.onCloseView(paramView);
    }
  }
  
  public void flushWithActivity(Activity paramActivity)
  {
    this.context = paramActivity;
    this.winManager = paramActivity.getWindowManager();
  }
  
  public void init(Context paramContext)
  {
    this.context = paramContext;
    if (this.context != null) {}
    for (boolean bool = true;; bool = false)
    {
      this.isInit = bool;
      this.winManager = ((WindowManager)paramContext.getSystemService("window"));
      return;
    }
  }
  
  public void showView(View paramView, int paramInt, ShowListener paramShowListener)
  {
    showView(paramView, paramInt, paramShowListener, -1, -1);
  }
  
  public void showView(View paramView, int paramInt1, ShowListener paramShowListener, int paramInt2, int paramInt3)
  {
    checkInit();
    FrameLayout localFrameLayout = getRootLayout();
    WindowManager.LayoutParams localLayoutParams = new WindowManager.LayoutParams();
    localLayoutParams.type = 2003;
    localLayoutParams.format = -3;
    localLayoutParams.gravity = paramInt1;
    localLayoutParams.width = paramInt2;
    localLayoutParams.height = paramInt3;
    localLayoutParams.flags = 8;
    try
    {
      localFrameLayout.addView(paramView);
      this.winManager.addView(localFrameLayout, localLayoutParams);
      this.maps.put(paramView, localFrameLayout);
      if (paramShowListener != null) {
        paramShowListener.onShowView(paramView);
      }
      return;
    }
    catch (IllegalStateException paramView)
    {
      paramView.printStackTrace();
    }
  }
}
