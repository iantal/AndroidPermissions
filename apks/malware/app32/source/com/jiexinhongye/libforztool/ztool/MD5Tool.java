package com.jiexinhongye.libforztool.ztool;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class MD5Tool
{
  public MD5Tool() {}
  
  private static boolean a(String paramString, File paramFile)
  {
    paramString = new ZNetTask(paramString, null, null, null);
    InputStream localInputStream = paramString.getTaskInputStream(0);
    return new ZFileTask().writeFileWithStream(localInputStream, paramFile, paramString.getContentLenght(), null, false);
  }
  
  public static String getMd5(File paramFile)
  {
    try
    {
      paramFile = getMd5(new FileInputStream(paramFile));
      return paramFile;
    }
    catch (FileNotFoundException paramFile)
    {
      paramFile.printStackTrace();
    }
    return null;
  }
  
  public static String getMd5(InputStream paramInputStream)
  {
    String str = null;
    int i = 0;
    for (;;)
    {
      try
      {
        localObject3 = MessageDigest.getInstance("MD5");
        localObject4 = new byte['Ð€'];
        j = paramInputStream.read((byte[])localObject4);
        if (j == -1)
        {
          localObject3 = ((MessageDigest)localObject3).digest();
          if (localObject3 != null) {
            continue;
          }
        }
      }
      catch (NoSuchAlgorithmException localNoSuchAlgorithmException)
      {
        Object localObject3;
        localNoSuchAlgorithmException = localNoSuchAlgorithmException;
        localNoSuchAlgorithmException.printStackTrace();
        try
        {
          paramInputStream.close();
          return null;
        }
        catch (IOException paramInputStream)
        {
          paramInputStream.printStackTrace();
          return null;
        }
        localObject1 = new StringBuffer();
        int j = localObject3.length;
        if (i >= j)
        {
          localObject1 = ((StringBuffer)localObject1).toString();
          continue;
        }
        Object localObject4 = Integer.toHexString(localObject3[i] & 0xFF);
        if (((String)localObject4).length() == 1)
        {
          ((StringBuffer)localObject1).append("0").append((String)localObject4);
          break label190;
        }
        ((StringBuffer)localObject1).append((String)localObject4);
        break label190;
      }
      catch (IOException localIOException)
      {
        localIOException = localIOException;
        localIOException.printStackTrace();
        try
        {
          paramInputStream.close();
          return null;
        }
        catch (IOException paramInputStream)
        {
          paramInputStream.printStackTrace();
          return null;
        }
      }
      finally {}
      try
      {
        paramInputStream.close();
        return str;
      }
      catch (IOException paramInputStream)
      {
        paramInputStream.printStackTrace();
        return localIOException;
      }
      ((MessageDigest)localObject3).update((byte[])localObject4, 0, j);
    }
    for (;;)
    {
      try
      {
        Object localObject1;
        paramInputStream.close();
        throw localObject2;
      }
      catch (IOException paramInputStream)
      {
        paramInputStream.printStackTrace();
        continue;
      }
      label190:
      i += 1;
    }
  }
  
  public static String getMd5(String paramString)
  {
    return getMd5(new ByteArrayInputStream(paramString.getBytes()));
  }
  
  public static String getMd5(byte[] paramArrayOfByte)
  {
    return getMd5(new ByteArrayInputStream(paramArrayOfByte));
  }
  
  public static boolean updateMD5File(File paramFile, String paramString1, String paramString2)
  {
    if (paramFile.exists())
    {
      paramString1 = ZNetTask.getStr(paramString1);
      String str = getMd5(paramFile);
      if ((paramString1 == null) || (str == null)) {
        return a(paramString2, paramFile);
      }
      if (paramString1.equals(str)) {
        return true;
      }
      return a(paramString2, paramFile);
    }
    return a(paramString2, paramFile);
  }
}
