package com.jiexinhongye.adsdk;

import android.app.Activity;
import android.app.Dialog;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory.Options;
import android.graphics.drawable.ColorDrawable;
import android.net.Uri;
import android.os.Handler;
import android.os.Looper;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.view.animation.AlphaAnimation;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.RemoteViews;
import com.jiexinhongye.adsdk.log.NetLoger;
import com.jiexinhongye.adsdk.model.AppADItem;
import com.jiexinhongye.libforztool.android.ResHelper;
import com.jiexinhongye.libforztool.android.ZDownloadTask;
import com.jiexinhongye.libforztool.android.Zlog;
import com.jiexinhongye.libforztool.android.display.BitmapUtil;
import com.jiexinhongye.libforztool.android.display.CloseListener;
import com.jiexinhongye.libforztool.android.display.DisplayAndroid;
import com.jiexinhongye.libforztool.android.display.DisplayUtil;
import com.jiexinhongye.libforztool.android.display.ShowListener;
import com.jiexinhongye.libforztool.android.download.NotiDownloadContentProvider;
import java.io.File;
import java.util.concurrent.Executor;

public class ADTask
  implements NotiDownloadContentProvider, Runnable
{
  public static final String RECEIVER_AD_ID = "aditem_id";
  public static Handler handler = new Handler(Looper.getMainLooper());
  public static SparseArray taskMap = new SparseArray();
  private Context a;
  private AppADItem b;
  private File c;
  private File d;
  private File e;
  private File f;
  private File g;
  private View h;
  private View i;
  private AlphaAnimation j = new AlphaAnimation(0.0F, 1.0F);
  private ShowListener k;
  private CloseListener l;
  private Runnable m = new a(this);
  
  public ADTask(Context paramContext, AppADItem paramAppADItem, File paramFile1, File paramFile2)
  {
    this.a = paramContext;
    this.b = paramAppADItem;
    this.c = paramFile2;
    this.d = new File(paramFile1, "icon.png");
    this.e = new File(paramFile1, "banner.png");
    this.f = new File(paramFile1, "window.png");
    this.g = new File(paramFile1, "app.apk");
  }
  
  private boolean a(File paramFile, String paramString)
  {
    new ZDownloadTask(this.c, paramString, paramFile, null).run();
    return (paramFile.exists()) && (paramFile.length() > 0L);
  }
  
  protected void donwloadADitem()
  {
    if (this.b.getAppurl() == null)
    {
      Zlog.syso("!!!ApkUrl..is..null");
      return;
    }
    ZDownloadTask localZDownloadTask = new ZDownloadTask(this.c, this.b.getAppurl(), this.g, new f(this));
    localZDownloadTask.setMainCallback(new g(this));
    ADUtil.exec.execute(localZDownloadTask);
    NetLoger.netlog(DataUrl.makeBaseParams(this.a) + "&adItemId=" + this.b.getId() + "&showType=" + this.b.getShowType() + "&action=download");
  }
  
  public AppADItem getAD()
  {
    return this.b;
  }
  
  public CloseListener getCloseListener()
  {
    return this.l;
  }
  
  public Context getContext()
  {
    return this.a;
  }
  
  public Bitmap getIcon()
  {
    return LruUtil.getFileBitmap(this.d);
  }
  
  protected Intent getOpenIntent()
  {
    Intent localIntent = new Intent("android.intent.action.VIEW");
    localIntent.setDataAndType(Uri.fromFile(this.g), "application/vnd.android.package-archive");
    localIntent.setFlags(268435456);
    return localIntent;
  }
  
  public PendingIntent getPendingIntent()
  {
    return PendingIntent.getActivity(getContext(), this.b.getId().intValue(), getOpenIntent(), 1073741824);
  }
  
  public ShowListener getShowListener()
  {
    return this.k;
  }
  
  public int getStepInt()
  {
    return 1;
  }
  
  public int getTaskId()
  {
    return this.b.getId().intValue();
  }
  
  public String getTaskName()
  {
    return this.b.getAdName();
  }
  
  public String getTaskTicker()
  {
    return "开始下载";
  }
  
  public String getTaskTitle()
  {
    return this.b.getAdTitle();
  }
  
  public void run()
  {
    Zlog.syso("task..is..runing:" + this.b);
    String str = this.b.getShowType();
    boolean bool;
    if ("banner".equals(str))
    {
      a(this.d, this.b.getIcon());
      bool = a(this.e, this.b.getPicBanner());
    }
    for (;;)
    {
      if (bool)
      {
        PreData.addStr(this.b.getShowType(), "|" + this.b.getId(), "0");
        handler.post(this.m);
      }
      return;
      if ("push".equals(str))
      {
        bool = a(this.d, this.b.getIcon());
      }
      else if ("window".equals(str))
      {
        a(this.d, this.b.getIcon());
        bool = a(this.f, this.b.getPicWindow());
      }
      else
      {
        Zlog.syso("from syncRes unknown type!!!");
        bool = false;
      }
    }
  }
  
  public void setCloseListener(CloseListener paramCloseListener)
  {
    this.l = paramCloseListener;
  }
  
  public void setShowListener(ShowListener paramShowListener)
  {
    this.k = paramShowListener;
  }
  
  protected void showBannerMain()
  {
    this.i = LayoutInflater.from(this.a).inflate(ResHelper.getLayoutId(this.a, "ztool_ad_window"), null, false);
    ImageView localImageView = (ImageView)this.i.findViewById(ResHelper.getId(this.a, "image_content"));
    Object localObject = BitmapUtil.getImageWHWithPath(this.e);
    float f1 = ((BitmapFactory.Options)localObject).outHeight / ((BitmapFactory.Options)localObject).outWidth;
    float f2 = DisplayAndroid.width(getContext());
    localObject = (RelativeLayout.LayoutParams)localImageView.getLayoutParams();
    ((RelativeLayout.LayoutParams)localObject).width = ((int)f2);
    ((RelativeLayout.LayoutParams)localObject).height = ((int)(f2 * f1));
    localImageView.setLayoutParams((ViewGroup.LayoutParams)localObject);
    localImageView.setScaleType(ImageView.ScaleType.FIT_XY);
    localObject = (ImageView)this.i.findViewById(ResHelper.getId(this.a, "image_close"));
    localImageView.setImageBitmap(LruUtil.getFileBitmap(this.e));
    ((ImageView)localObject).setOnClickListener(new h(this));
    localImageView.setOnClickListener(new i(this));
    DisplayUtil.getInstance().showView(this.i, 80, null, -1, -2);
    this.j.setDuration(1000L);
    this.i.startAnimation(this.j);
    NetLoger.netlog(DataUrl.makeBaseParams(this.a) + "&adItemId=" + this.b.getId() + "&showType=" + this.b.getShowType() + "&action=show");
  }
  
  protected void showPushMain()
  {
    NotificationManager localNotificationManager = (NotificationManager)this.a.getSystemService("notification");
    Notification localNotification = new Notification();
    localNotification.icon = 17301646;
    localNotification.when = System.currentTimeMillis();
    localNotification.tickerText = "您有一条新的消息";
    Object localObject = new RemoteViews(this.a.getPackageName(), ResHelper.getLayoutId(this.a, "ztool_push_noti"));
    ((RemoteViews)localObject).setImageViewBitmap(ResHelper.getId(this.a, "noti_image"), LruUtil.getFileBitmap(this.d));
    ((RemoteViews)localObject).setTextViewText(ResHelper.getId(this.a, "noti_title"), this.b.getAdName());
    ((RemoteViews)localObject).setTextViewText(ResHelper.getId(this.a, "noti_pro_str"), this.b.getAdTitle());
    localNotification.contentView = ((RemoteViews)localObject);
    localNotification.defaults = -1;
    localNotification.flags = 18;
    localObject = new Intent("ztool_push_donwload");
    ((Intent)localObject).putExtra("aditem_id", this.b.getId());
    localNotification.contentIntent = PendingIntent.getBroadcast(this.a, this.b.getId().intValue(), (Intent)localObject, 1073741824);
    localNotificationManager.notify(this.b.getId().intValue(), localNotification);
    NetLoger.netlog(DataUrl.makeBaseParams(this.a) + "&adItemId=" + this.b.getId() + "&showType=" + this.b.getShowType() + "&action=show");
  }
  
  protected void showWindowMain()
  {
    Zlog.syso("show..window");
    this.h = LayoutInflater.from(this.a).inflate(ResHelper.getLayoutId(this.a, "ztool_ad_window"), null, false);
    ImageView localImageView1 = (ImageView)this.h.findViewById(ResHelper.getId(this.a, "image_content"));
    ImageView localImageView2 = (ImageView)this.h.findViewById(ResHelper.getId(this.a, "image_close"));
    Object localObject = BitmapUtil.getImageWHWithPath(this.f);
    float f1 = ((BitmapFactory.Options)localObject).outHeight / ((BitmapFactory.Options)localObject).outWidth;
    float f2 = BitmapUtil.dipToPx(getContext(), 300.0F);
    localObject = (RelativeLayout.LayoutParams)localImageView1.getLayoutParams();
    ((RelativeLayout.LayoutParams)localObject).width = ((int)f2);
    ((RelativeLayout.LayoutParams)localObject).height = ((int)(f2 * f1));
    localImageView1.setLayoutParams((ViewGroup.LayoutParams)localObject);
    localImageView1.setImageBitmap(LruUtil.getFileBitmap(this.f));
    if ((this.a instanceof Activity))
    {
      localObject = new Dialog(this.a);
      ((Dialog)localObject).requestWindowFeature(1);
      ((Dialog)localObject).getWindow().setBackgroundDrawable(new ColorDrawable(0));
      ((Dialog)localObject).setContentView(this.h);
      localImageView2.setOnClickListener(new b(this, (Dialog)localObject));
      localImageView1.setOnClickListener(new c(this, (Dialog)localObject));
      ((Dialog)localObject).setCancelable(false);
      ((Dialog)localObject).show();
    }
    for (;;)
    {
      NetLoger.netlog(DataUrl.makeBaseParams(this.a) + "&adItemId=" + this.b.getId() + "&showType=" + this.b.getShowType() + "&action=show");
      return;
      localImageView2.setOnClickListener(new d(this));
      localImageView1.setOnClickListener(new e(this));
      DisplayUtil.getInstance().showView(this.h, 17, null);
      this.j.setDuration(1000L);
      this.h.startAnimation(this.j);
    }
  }
}
