package com.ta.utdid2.device;

import android.content.Context;
import com.ta.utdid2.b.a.f;
import com.ta.utdid2.b.a.h;
import java.util.zip.Adler32;

public final class b
{
  static String a = "d6fc3a4a06adbde89223bvefedc24fecde188aaa9161";
  static final Object b = new Object();
  private static a c = null;
  
  public static a a(Context paramContext)
  {
    for (;;)
    {
      try
      {
        if (c != null)
        {
          paramContext = c;
          return paramContext;
        }
        if (paramContext != null)
        {
          paramContext = b(paramContext);
          c = paramContext;
        }
        else
        {
          paramContext = null;
        }
      }
      finally {}
    }
  }
  
  private static a b(Context paramContext)
  {
    if (paramContext != null) {
      new a();
    }
    for (;;)
    {
      synchronized (b)
      {
        Object localObject1 = c.a(paramContext).a();
        if (!h.a((String)localObject1))
        {
          if (((String)localObject1).endsWith("\n"))
          {
            localObject1 = ((String)localObject1).substring(0, ((String)localObject1).length() - 1);
            a localA = new a();
            long l = System.currentTimeMillis();
            String str = f.a(paramContext);
            paramContext = f.b(paramContext);
            localA.c(str);
            localA.a(str);
            localA.b(l);
            localA.b(paramContext);
            localA.d((String)localObject1);
            paramContext = String.format("%s%s%s%s%s", new Object[] { localA.e(), localA.d(), Long.valueOf(localA.a()), localA.c(), localA.b() });
            if (!h.a(paramContext))
            {
              localObject1 = new Adler32();
              ((Adler32)localObject1).reset();
              ((Adler32)localObject1).update(paramContext.getBytes());
              l = ((Adler32)localObject1).getValue();
              localA.a(l);
              return localA;
            }
            l = 0L;
          }
        }
        else {
          return null;
        }
      }
    }
  }
}
