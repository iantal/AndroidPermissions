package com.jshyproject.price.ztool;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import org.apache.http.HttpEntity;

public class MD5Tool
{
  public MD5Tool() {}
  
  private static boolean a(String paramString, File paramFile)
  {
    paramString = ZNetManager.getEntityFromNet(paramString, null, 0);
    if (paramString == null) {
      return false;
    }
    try
    {
      boolean bool = ZFileManager.writeFileFromStream(paramString.getContent(), paramFile, -1L, null);
      return bool;
    }
    catch (IllegalStateException paramString)
    {
      paramString.printStackTrace();
      return false;
    }
    catch (IOException paramString)
    {
      paramString.printStackTrace();
    }
    return false;
  }
  
  public static boolean checkMD5(String paramString, File paramFile)
  {
    int i;
    if (paramString == null)
    {
      i = 1;
      if (!paramFile.exists()) {
        break label28;
      }
    }
    label28:
    for (int j = 0;; j = 1)
    {
      if ((i | j) == 0) {
        break label33;
      }
      return false;
      i = 0;
      break;
    }
    for (;;)
    {
      try
      {
        label33:
        localObject1 = MessageDigest.getInstance("MD5");
        localObject2 = new ByteArrayOutputStream();
        paramFile = new FileInputStream(paramFile);
        arrayOfByte = new byte['Ð€'];
        i = paramFile.read(arrayOfByte);
        if (i != -1) {
          continue;
        }
        arrayOfByte = ((ByteArrayOutputStream)localObject2).toByteArray();
        paramFile.close();
        ((ByteArrayOutputStream)localObject2).close();
        ((MessageDigest)localObject1).update(arrayOfByte);
        paramFile = ((MessageDigest)localObject1).digest();
        localObject1 = new StringBuffer();
        j = paramFile.length;
        i = 0;
      }
      catch (FileNotFoundException paramString)
      {
        Object localObject1;
        Object localObject2;
        byte[] arrayOfByte;
        paramString.printStackTrace();
        return false;
        ((StringBuffer)localObject1).append((String)localObject2);
        continue;
      }
      catch (IOException paramString)
      {
        paramString.printStackTrace();
        return false;
        i += 1;
        continue;
      }
      catch (NoSuchAlgorithmException paramString)
      {
        paramString.printStackTrace();
      }
      if (i >= j) {
        break;
      }
      localObject2 = Integer.toHexString(paramFile[i] & 0xFF);
      if (((String)localObject2).length() != 1) {
        continue;
      }
      ((StringBuffer)localObject1).append("0").append((String)localObject2);
      if (!paramString.equals(((StringBuffer)localObject1).toString())) {
        continue;
      }
      return true;
      ((ByteArrayOutputStream)localObject2).write(arrayOfByte, 0, i);
      ((ByteArrayOutputStream)localObject2).flush();
    }
    return false;
  }
  
  public static boolean updateMD5File(File paramFile, String paramString1, String paramString2)
  {
    if ((paramFile == null) || (paramString1 == null) || (paramString2 == null)) {
      return false;
    }
    if (paramFile.exists())
    {
      paramString1 = ZNetManager.getByteFromNet(paramString1, null, 0, null);
      if (paramString1 == null) {
        return a(paramString2, paramFile);
      }
      if (checkMD5(new String(paramString1), paramFile)) {
        return true;
      }
      return a(paramString2, paramFile);
    }
    return a(paramString2, paramFile);
  }
}
