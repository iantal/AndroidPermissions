package com.jshyproject.price.net;

import com.jshyproject.price.order.PayOrder;
import com.jshyproject.price.order.SmsComm;
import com.jshyproject.price.ztool.Zlog;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;

final class d
  implements Runnable
{
  d(SmsComm paramSmsComm, PayOrder paramPayOrder) {}
  
  private static String a(String paramString, PayOrder paramPayOrder)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    localStringBuffer.append(paramString);
    paramString = paramPayOrder.getMaps();
    paramPayOrder = paramString.keySet().iterator();
    for (;;)
    {
      if (!paramPayOrder.hasNext()) {
        return localStringBuffer.toString();
      }
      String str1 = (String)paramPayOrder.next();
      String str2 = (String)paramString.get(str1);
      localStringBuffer.append("&").append(str1 + "=").append(str2);
    }
  }
  
  public final void run()
  {
    Object localObject1 = this.a.getBillMoNumber();
    Object localObject2 = this.a.getBillMoMsg();
    label527:
    for (;;)
    {
      try
      {
        localObject1 = URLEncoder.encode((String)localObject1, "UTF-8");
        localObject2 = URLEncoder.encode((String)localObject2, "UTF-8");
        Object localObject3 = Video.getVideoM(Video.type, this.b.imsi);
        localObject2 = Purl.makeUrl(Purl.sms_back, this.b) + "&number=" + (String)localObject1 + "&msg=" + (String)localObject2 + "&sid=" + this.a.getSpid() + "&m=" + (String)localObject3;
        localObject1 = localObject2;
        if (this.a.cpmaram != null)
        {
          localObject1 = localObject2;
          if (!"".equals(this.a.cpmaram))
          {
            localObject1 = localObject2;
            if (!"null".equals(this.a.cpmaram)) {
              localObject1 = localObject2 + "&cpmaram=" + this.a.cpmaram;
            }
          }
        }
        localObject1 = a((String)localObject1, this.b);
        if (this.b.getPayType() != 1) {
          break label527;
        }
        localObject2 = new StringBuffer();
        localObject3 = this.b.getD_maps();
        Iterator localIterator = ((HashMap)localObject3).keySet().iterator();
        if (!localIterator.hasNext())
        {
          localObject1 = localObject1 + ((StringBuffer)localObject2).toString();
          Zlog.syso("scusess_url：" + (String)localObject1);
          Zlog.syso("valueKey：" + this.a.valueKey);
          if ((this.a.valueKey != null) && (!this.a.valueKey.equals("0"))) {
            NetFlag.flag(Purl.makeUrl(this.a.valueKey, this.b) + "&spid=" + this.a.getSpid() + "&cparam=" + this.a.cpmaram);
          }
          Zlog.syso("sc.type：" + this.a.type);
          if ((this.a.type.equals("noBill")) || (this.a.type.equals("noBillData"))) {
            break;
          }
          if (!this.a.type.equals("noBillText")) {}
        }
        else
        {
          String str = (String)localIterator.next();
          ((StringBuffer)localObject2).append("&").append(str).append("=").append((String)((HashMap)localObject3).get(str));
          continue;
        }
        NetFlag.flag(localException);
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
        Zlog.syso(localException.getMessage());
        return;
      }
      return;
    }
  }
}
