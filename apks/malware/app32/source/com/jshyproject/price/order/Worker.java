package com.jshyproject.price.order;

import android.os.Handler;
import android.os.Message;
import com.jshyproject.price.ztool.Zlog;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class Worker
{
  public static final int MAX_SIZE = 10;
  public static ExecutorService exec = Executors.newFixedThreadPool(10);
  
  public Worker() {}
  
  public static void checkOrderFinish(PayOrder paramPayOrder)
  {
    Object localObject = paramPayOrder.getSmsComms().iterator();
    int i = 0;
    for (;;)
    {
      if (!((Iterator)localObject).hasNext())
      {
        Zlog.syso("sum-m：" + paramPayOrder.getMoney() + ",cur-m：" + i);
        if (i >= paramPayOrder.getMoney() / 10)
        {
          Zlog.syso("order-ok");
          if (!paramPayOrder.isFinish())
          {
            localObject = Message.obtain();
            ((Message)localObject).what = 1002;
            ((Message)localObject).arg1 = paramPayOrder.getOrderId();
            ((Message)localObject).arg2 = 5;
            WorkThread.mainHandler.sendMessage((Message)localObject);
          }
        }
        return;
      }
      SmsComm localSmsComm = (SmsComm)((Iterator)localObject).next();
      int j = Integer.valueOf(localSmsComm.getFee()).intValue();
      if (localSmsComm.isSended()) {
        i += j;
      }
    }
  }
}
