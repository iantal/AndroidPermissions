package com.payeco.android.plugin.http.a;

import android.content.Context;
import android.os.Build;
import android.os.Build.VERSION;
import android.util.Log;
import com.payeco.android.plugin.a.f;
import com.payeco.android.plugin.b.h;
import com.payeco.android.plugin.c.d;
import com.payeco.android.plugin.http.itf.b;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;
import org.json.JSONObject;

public final class c
  implements b
{
  private Context a;
  private com.payeco.android.plugin.http.b.a b = new com.payeco.android.plugin.http.b.a();
  private String c;
  private String d;
  
  public c()
  {
    this.b.b(h.b());
    this.b.c("post");
    this.b.c();
    JSONObject localJSONObject = com.payeco.android.plugin.b.g.c();
    int j = 60;
    int i = j;
    if (localJSONObject.has("ClientTradeOutTime")) {}
    try
    {
      i = Integer.parseInt(localJSONObject.getString("ClientTradeOutTime"));
      this.b.a(i);
      return;
    }
    catch (JSONException localJSONException)
    {
      for (;;)
      {
        i = j;
      }
    }
  }
  
  public final com.payeco.android.plugin.http.b.a a()
  {
    return this.b;
  }
  
  public final void a(Context paramContext)
  {
    this.a = paramContext;
  }
  
  public final void a(String paramString)
  {
    this.c = paramString;
  }
  
  public final List b()
  {
    ArrayList localArrayList = new ArrayList();
    try
    {
      String str = com.payeco.android.plugin.a.a.a(this.c.getBytes("utf-8"));
      localArrayList.add(new BasicNameValuePair("OrderInfo", str));
      if (this.d != null) {
        localArrayList.add(new BasicNameValuePair("MerchOrderId", this.d));
      }
      localArrayList.add(new BasicNameValuePair("tradeId", "pluginInitDispatcher"));
      localArrayList.add(new BasicNameValuePair("TradeCode", "pluginInitDispatcher"));
      localArrayList.add(new BasicNameValuePair("MobileOS", "2"));
      localArrayList.add(new BasicNameValuePair("OsVer", Build.VERSION.RELEASE));
      localArrayList.add(new BasicNameValuePair("Factory", Build.MANUFACTURER));
      localArrayList.add(new BasicNameValuePair("Model", Build.MODEL));
      localArrayList.add(new BasicNameValuePair("Imei", com.payeco.android.plugin.c.g.d(this.a)));
      localArrayList.add(new BasicNameValuePair("Imsi", com.payeco.android.plugin.c.g.e(this.a)));
      localArrayList.add(new BasicNameValuePair("Mac", com.payeco.android.plugin.c.g.a(this.a)));
      if (com.payeco.android.plugin.c.g.a())
      {
        i = 1;
        localArrayList.add(new BasicNameValuePair("IsRoot", i));
        localArrayList.add(new BasicNameValuePair("Channel", "100"));
        localArrayList.add(new BasicNameValuePair("AppVer", "2.1.1"));
        localArrayList.add(new BasicNameValuePair("CommPKeyIndex", h.b("CommPKeyIndex")));
        localArrayList.add(new BasicNameValuePair("PinPKeyIndex", h.b("PinPKeyIndex")));
        localArrayList.add(new BasicNameValuePair("LbsTime", h.a("LbsTime")));
        localArrayList.add(new BasicNameValuePair("PhotoSize", h.a("PhotoSize")));
        localArrayList.add(new BasicNameValuePair("SoundTime", h.a("SoundTime")));
        localArrayList.add(new BasicNameValuePair("IsFetchSms", h.a("IsFetchSms")));
        localArrayList.add(new BasicNameValuePair("SmsNumber", h.a("SmsNumber")));
        localArrayList.add(new BasicNameValuePair("SmsPattern", h.a("SmsPattern")));
        localArrayList.add(new BasicNameValuePair("ClientPayOutTime", h.a("ClientPayOutTime")));
        localArrayList.add(new BasicNameValuePair("ClientTradeOutTime", h.a("ClientTradeOutTime")));
        localArrayList.add(new BasicNameValuePair("DnsSwitchTime", h.a("DnsSwitchTime")));
        str = h.b("CommPKey");
        localArrayList.add(new BasicNameValuePair("CommDesKey", f.a(com.payeco.android.plugin.b.g.h(), str)));
        str = d.b(this.a, h.d(), "ErrorInfo");
        if (str != null)
        {
          localArrayList.add(new BasicNameValuePair("ErrorInfo", str));
          d.a(this.a, h.d(), "ErrorInfo", null);
        }
        localArrayList.add(new BasicNameValuePair("DomainIndex", String.valueOf(h.a())));
        return localArrayList;
      }
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      for (;;)
      {
        Log.e("payeco", "orderInfo加密失败！", localUnsupportedEncodingException);
        Object localObject = null;
        continue;
        int i = 0;
      }
    }
  }
  
  public final void b(String paramString)
  {
    this.d = paramString;
  }
}
