package com.payeco.android.plugin.http.b;

import a.a.a.a.a.a.b;
import a.a.a.a.a.a.d;
import a.a.a.a.a.a.e;
import android.content.Context;
import android.webkit.CookieManager;
import android.webkit.CookieSyncManager;
import java.io.File;
import java.nio.charset.Charset;
import java.security.KeyStore;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import org.apache.http.HttpResponse;
import org.apache.http.HttpVersion;
import org.apache.http.NameValuePair;
import org.apache.http.StatusLine;
import org.apache.http.client.CookieStore;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.client.params.HttpClientParams;
import org.apache.http.conn.scheme.PlainSocketFactory;
import org.apache.http.conn.scheme.Scheme;
import org.apache.http.conn.scheme.SchemeRegistry;
import org.apache.http.conn.scheme.SocketFactory;
import org.apache.http.conn.ssl.SSLSocketFactory;
import org.apache.http.cookie.Cookie;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;
import org.apache.http.params.HttpProtocolParams;
import org.apache.http.util.EntityUtils;

public final class a
{
  private String a;
  private String b = "UTF-8";
  private String c = "post";
  private String d;
  private String e;
  private CookieStore f;
  private int g = 10;
  private int h = 120;
  private List i;
  private Map j;
  private int k;
  
  public a() {}
  
  private String a(HttpUriRequest paramHttpUriRequest)
  {
    Object localObject1 = KeyStore.getInstance(KeyStore.getDefaultType());
    ((KeyStore)localObject1).load(null, null);
    localObject1 = new c((KeyStore)localObject1);
    ((c)localObject1).setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
    Object localObject2 = new BasicHttpParams();
    HttpConnectionParams.setConnectionTimeout((HttpParams)localObject2, this.g * 1000);
    HttpConnectionParams.setSoTimeout((HttpParams)localObject2, this.h * 1000);
    HttpConnectionParams.setSocketBufferSize((HttpParams)localObject2, 8192);
    HttpClientParams.setRedirecting((HttpParams)localObject2, true);
    if (this.d != null) {
      HttpProtocolParams.setUserAgent((HttpParams)localObject2, this.d);
    }
    HttpProtocolParams.setVersion((HttpParams)localObject2, HttpVersion.HTTP_1_1);
    HttpProtocolParams.setContentCharset((HttpParams)localObject2, this.b);
    SchemeRegistry localSchemeRegistry = new SchemeRegistry();
    localSchemeRegistry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
    localSchemeRegistry.register(new Scheme("https", (SocketFactory)localObject1, 443));
    localObject1 = new DefaultHttpClient(new ThreadSafeClientConnManager((HttpParams)localObject2, localSchemeRegistry), (HttpParams)localObject2);
    if (this.f != null) {
      ((DefaultHttpClient)localObject1).setCookieStore(this.f);
    }
    paramHttpUriRequest = ((DefaultHttpClient)localObject1).execute(paramHttpUriRequest);
    this.f = ((DefaultHttpClient)localObject1).getCookieStore();
    if (this.f != null)
    {
      localObject1 = this.f.getCookies();
      if (!((List)localObject1).isEmpty())
      {
        localObject1 = ((List)localObject1).iterator();
        if (((Iterator)localObject1).hasNext()) {
          break label276;
        }
      }
    }
    for (;;)
    {
      this.k = paramHttpUriRequest.getStatusLine().getStatusCode();
      if (this.k != 200) {
        break label336;
      }
      return EntityUtils.toString(paramHttpUriRequest.getEntity());
      label276:
      localObject2 = (Cookie)((Iterator)localObject1).next();
      if ((!"JSESSIONID".equalsIgnoreCase(((Cookie)localObject2).getName())) || (!this.a.contains(((Cookie)localObject2).getDomain()))) {
        break;
      }
      this.e = ((Cookie)localObject2).getValue();
      com.payeco.android.plugin.b.g.a(this.e);
    }
    label336:
    return null;
  }
  
  private String e()
  {
    HttpPost localHttpPost = new HttpPost(this.a);
    a.a.a.a.a.g localG = new a.a.a.a.a.g();
    Iterator localIterator;
    if ((this.i != null) && (!this.i.isEmpty()))
    {
      localIterator = this.i.iterator();
      if (localIterator.hasNext()) {}
    }
    else if ((this.j != null) && (!this.j.isEmpty()))
    {
      localIterator = this.j.entrySet().iterator();
    }
    for (;;)
    {
      if (!localIterator.hasNext())
      {
        localHttpPost.setEntity(localG);
        return a(localHttpPost);
        localObject1 = (NameValuePair)localIterator.next();
        localObject2 = new e(((NameValuePair)localObject1).getValue(), Charset.forName(this.b));
        localG.a(((NameValuePair)localObject1).getName(), (b)localObject2);
        break;
      }
      Object localObject1 = (Map.Entry)localIterator.next();
      Object localObject2 = new d((File)((Map.Entry)localObject1).getValue());
      localG.a((String)((Map.Entry)localObject1).getKey(), (b)localObject2);
    }
  }
  
  public final String a()
  {
    if ("post".equalsIgnoreCase(this.c))
    {
      HttpPost localHttpPost = new HttpPost(this.a);
      localHttpPost.setEntity(new UrlEncodedFormEntity(this.i, this.b));
      return a(localHttpPost);
    }
    if ("upload".equalsIgnoreCase(this.c)) {
      return e();
    }
    return a(new HttpGet(this.a));
  }
  
  public final void a(int paramInt)
  {
    this.h = paramInt;
  }
  
  public final void a(Context paramContext)
  {
    CookieSyncManager.createInstance(paramContext);
    CookieManager.getInstance().setCookie(this.a, "JSESSIONID=" + this.e);
    CookieSyncManager.getInstance().sync();
  }
  
  public final void a(String paramString)
  {
    this.d = paramString;
  }
  
  public final void a(List paramList)
  {
    this.i = paramList;
  }
  
  public final void a(Map paramMap)
  {
    this.j = paramMap;
  }
  
  public final void a(CookieStore paramCookieStore)
  {
    this.f = paramCookieStore;
  }
  
  public final CookieStore b()
  {
    return this.f;
  }
  
  public final void b(String paramString)
  {
    this.a = paramString;
  }
  
  public final void c()
  {
    this.g = 10;
  }
  
  public final void c(String paramString)
  {
    this.c = paramString;
  }
  
  public final int d()
  {
    return this.k;
  }
}
