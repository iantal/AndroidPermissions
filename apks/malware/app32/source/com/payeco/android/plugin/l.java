package com.payeco.android.plugin;

import android.content.Context;
import android.content.Intent;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.net.Uri;
import android.os.Build;
import android.os.Build.VERSION;
import android.util.Log;
import android.widget.LinearLayout;
import android.widget.PopupWindow;
import com.payeco.android.plugin.c.g;
import com.payeco.android.plugin.d.ab;
import com.payeco.android.plugin.d.t;
import com.payeco.android.plugin.http.a.d;
import com.payeco.android.plugin.http.itf.impl.AsyncExecute;
import com.payeco.android.plugin.js.JsBridge;
import com.payeco.android.plugin.js.JsFunction;
import java.io.File;
import java.util.Iterator;
import org.json.JSONObject;

final class l
  extends JsFunction
{
  private PopupWindow b;
  
  public l(PayecoPluginLoadingActivity paramPayecoPluginLoadingActivity, Context paramContext)
  {
    super(paramContext);
  }
  
  public final String goBack()
  {
    if ((this.b != null) && (this.b.isShowing()))
    {
      this.b.dismiss();
      this.b = null;
      return getResultJson(1, "退出PopupWindow!").toString();
    }
    PayecoPluginLoadingActivity.h(this.a).execJsMethod("pageBack", "", null);
    return getResultJson(0, "").toString();
  }
  
  public final String notifyPayResult(String paramString)
  {
    try
    {
      PayecoPluginLoadingActivity.j(this.a);
      Intent localIntent = new Intent();
      localIntent.putExtra("upPay.Rsp", paramString);
      localIntent.setAction(PayecoPluginLoadingActivity.k(this.a));
      localIntent.addCategory("android.intent.category.DEFAULT");
      this.context.sendBroadcast(localIntent);
      return getResultJson(0, "通知完毕！").toString();
    }
    catch (Exception localException)
    {
      for (;;)
      {
        Log.e("payeco", "退出服务器会话错误！", localException);
      }
    }
  }
  
  public final String repay()
  {
    try
    {
      PayecoPluginLoadingActivity.i(this.a);
      String str = getResultJson(0, "").toString();
      return str;
    }
    catch (Exception localException)
    {
      Log.e("payeco", "repay错误！", localException);
    }
    return getResultJson(1, "重新支付错误！").toString();
  }
  
  public final void startCamera(JSONObject paramJSONObject, String paramString)
  {
    if (!g.b())
    {
      PayecoPluginLoadingActivity.h(this.a).execJsMethodFromFuncs(paramString, new Object[] { Integer.valueOf(1), "手机未使用SD卡，请插入后再试！", "", "" });
      return;
    }
    try
    {
      PayecoPluginLoadingActivity.b(this.a, paramString);
      int i = Integer.valueOf(Build.VERSION.SDK).intValue();
      if (i <= 11) {
        break label204;
      }
      if ((i == 15) && ("HTC S710d".equals(Build.MODEL)))
      {
        paramJSONObject = new Intent("android.media.action.IMAGE_CAPTURE", null);
        paramJSONObject.putExtra("output", Uri.fromFile(new File(com.payeco.android.plugin.b.a.b)));
        this.a.startActivityForResult(paramJSONObject, 0);
        return;
      }
    }
    catch (Exception paramJSONObject)
    {
      Log.e("payeco", "无法开启相机！", paramJSONObject);
      PayecoPluginLoadingActivity.h(this.a).execJsMethodFromFuncs(PayecoPluginLoadingActivity.m(this.a), new Object[] { Integer.valueOf(1), "无法开启相机！", "", "" });
      return;
    }
    paramJSONObject = new Intent(this.a, PayecoCameraActivity.class);
    this.a.startActivityForResult(paramJSONObject, 0);
    return;
    label204:
    paramJSONObject = new Intent("android.media.action.IMAGE_CAPTURE", null);
    paramJSONObject.putExtra("output", Uri.fromFile(new File(com.payeco.android.plugin.b.a.b)));
    this.a.startActivityForResult(paramJSONObject, 0);
  }
  
  public final void startCreditKeyboard(JSONObject paramJSONObject, String paramString)
  {
    int i = paramJSONObject.getInt("minlen");
    int j = paramJSONObject.getInt("maxlen");
    int k = this.a.getResources().getConfiguration().orientation;
    paramJSONObject = paramJSONObject.getString("orderId");
    this.b = com.payeco.android.plugin.d.a.a(this.a, PayecoPluginLoadingActivity.l(this.a), i, j, k, new n(this, paramJSONObject, paramString));
  }
  
  public final void startNumberKeyboard(JSONObject paramJSONObject, String paramString)
  {
    int i = paramJSONObject.getInt("minlen");
    int j = paramJSONObject.getInt("maxlen");
    String str = paramJSONObject.getString("title");
    boolean bool1 = paramJSONObject.getBoolean("xEnabled");
    boolean bool2 = paramJSONObject.getBoolean("formatFlag");
    paramJSONObject = paramJSONObject.getString("defaultVal");
    int k = this.a.getResources().getConfiguration().orientation;
    Context localContext = this.context;
    LinearLayout localLinearLayout = PayecoPluginLoadingActivity.l(this.a);
    if (bool1) {}
    for (bool1 = false;; bool1 = true)
    {
      this.b = com.payeco.android.plugin.d.n.a(localContext, localLinearLayout, str, i, j, paramJSONObject, bool1, bool2, k, new p(this, paramString));
      return;
    }
  }
  
  public final void startPasswordKeyBoard(JSONObject paramJSONObject, String paramString)
  {
    int i = paramJSONObject.getInt("minlen");
    int j = paramJSONObject.getInt("minlen");
    int k = this.a.getResources().getConfiguration().orientation;
    paramJSONObject = paramJSONObject.getString("orderId");
    this.b = t.a(this.context, PayecoPluginLoadingActivity.l(this.a), i, j, k, new o(this, paramJSONObject, paramString));
  }
  
  public final void startRecord(JSONObject paramJSONObject, String paramString)
  {
    int i = paramJSONObject.getInt("recordTime");
    this.b = ab.a(this.context, PayecoPluginLoadingActivity.l(this.a), i, new q(this, paramString));
  }
  
  public final void startVedio(JSONObject paramJSONObject, String paramString)
  {
    if (!g.b())
    {
      toast("手机未使用SD卡，请插入后再试！");
      PayecoPluginLoadingActivity.h(this.a).execJsMethodFromFuncs(paramString, new Object[] { Integer.valueOf(1), "手机未使用SD卡，请插入后再试！", "", "" });
      return;
    }
    int i = paramJSONObject.getInt("vedioTime");
    try
    {
      PayecoPluginLoadingActivity.c(this.a, paramString);
      paramJSONObject = new Intent(this.a, PayecoVedioActivity.class);
      paramJSONObject.putExtra("vedioTime", i);
      this.a.startActivityForResult(paramJSONObject, 1);
      return;
    }
    catch (Exception paramJSONObject)
    {
      Log.e("payeco", "PayecoPluginLoadingActivity PayecoJsFunction startVedio error.", paramJSONObject);
      PayecoPluginLoadingActivity.h(this.a).execJsMethodFromFuncs(paramString, new Object[] { Integer.valueOf(1), "无法开启相机！", "", "" });
    }
  }
  
  public final void upFile(JSONObject paramJSONObject, String paramString)
  {
    Object localObject2 = paramJSONObject.getString("fileName");
    Object localObject1 = paramJSONObject.getString("url");
    paramJSONObject.remove("url");
    paramJSONObject.remove("fileName");
    localObject1 = new d((String)localObject1);
    ((d)localObject1).a().a(PayecoPluginLoadingActivity.b(this.a).b());
    ((d)localObject1).a((String)localObject2, new File((String)localObject2));
    localObject2 = paramJSONObject.keys();
    for (;;)
    {
      if (!((Iterator)localObject2).hasNext())
      {
        paramJSONObject = new com.payeco.android.plugin.http.b.b();
        paramJSONObject.a((com.payeco.android.plugin.http.itf.b)localObject1);
        paramJSONObject.a(new AsyncExecute());
        paramJSONObject.a(new m(this, paramString));
        paramJSONObject.a();
        return;
      }
      String str = (String)((Iterator)localObject2).next();
      ((d)localObject1).a(str, paramJSONObject.getString(str));
    }
  }
}
