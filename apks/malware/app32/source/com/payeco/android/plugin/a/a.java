package com.payeco.android.plugin.a;

public class a
{
  static
  {
    if (!a.class.desiredAssertionStatus()) {}
    for (boolean bool = true;; bool = false)
    {
      a = bool;
      return;
    }
  }
  
  private a() {}
  
  public static String a(byte[] paramArrayOfByte)
  {
    int k = paramArrayOfByte.length;
    d localD = new d();
    int j = k / 3 * 4;
    int i;
    int m;
    if (localD.d)
    {
      i = j;
      if (k % 3 > 0) {
        i = j + 4;
      }
      j = i;
      if (localD.e)
      {
        j = i;
        if (k > 0)
        {
          m = (k - 1) / 57;
          if (!localD.f) {
            break label171;
          }
        }
      }
    }
    label171:
    for (j = 2;; j = 1)
    {
      j = i + j * (m + 1);
      localD.a = new byte[j];
      localD.a(paramArrayOfByte, k);
      if ((a) || (localD.b == j)) {
        break label176;
      }
      throw new AssertionError();
      i = j;
      switch (k % 3)
      {
      case 0: 
      default: 
        i = j;
        break;
      case 1: 
        i = j + 2;
        break;
      case 2: 
        i = j + 3;
        break;
      }
    }
    label176:
    return new String(localD.a);
  }
  
  public static byte[] a(String paramString)
  {
    byte[] arrayOfByte = paramString.getBytes();
    int i = arrayOfByte.length;
    paramString = new c(new byte[i * 3 / 4]);
    if (!paramString.a(arrayOfByte, i)) {
      throw new IllegalArgumentException("bad base-64");
    }
    if (paramString.b == paramString.a.length) {
      return paramString.a;
    }
    arrayOfByte = new byte[paramString.b];
    System.arraycopy(paramString.a, 0, arrayOfByte, 0, paramString.b);
    return arrayOfByte;
  }
}
