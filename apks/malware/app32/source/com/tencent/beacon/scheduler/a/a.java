package com.tencent.beacon.scheduler.a;

import android.content.Context;
import com.tencent.beacon.scheduler.AccessScheduler;
import com.tencent.beacon.scheduler.e.c;
import com.tencent.beacon.scheduler.exception.SchedulerInitException;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public final class a
{
  private static final Lock a = new ReentrantLock();
  private static AccessScheduler b = null;
  
  public static AccessScheduler a(Context paramContext, String paramString1, String paramString2, String paramString3)
  {
    c.b("AccessSchedulerManager", "creatAccessScheduler...context:" + paramContext + ",appId:" + paramString1 + ",channelId:" + paramString2 + ",uuid:" + paramString3);
    if (com.tencent.beacon.scheduler.c.b.i() == null) {
      com.tencent.beacon.scheduler.c.b.a(paramContext);
    }
    int i;
    if (paramContext != null)
    {
      if (paramString1 != null) {
        break label154;
      }
      i = 1;
      if (i == 0)
      {
        if (paramString3 != null) {
          break label176;
        }
        i = 1;
        label81:
        if (i == 0)
        {
          if (paramString2 != null) {
            break label198;
          }
          i = 1;
        }
      }
    }
    for (;;)
    {
      if (i == 0) {
        break label220;
      }
      throw new SchedulerInitException("AccessScheduler init illegal Argument[appId=" + paramString1 + ",channelId=" + paramString2 + ",uuid=" + paramString3 + ",context=" + paramContext + "]");
      label154:
      if (paramString1.trim().length() == 0)
      {
        i = 1;
        break;
      }
      i = 0;
      break;
      label176:
      if (paramString3.trim().length() == 0)
      {
        i = 1;
        break label81;
      }
      i = 0;
      break label81;
      label198:
      if (paramString2.trim().length() == 0) {
        i = 1;
      } else {
        i = 0;
      }
    }
    label220:
    String str = paramString3;
    if ("test_uuid".equals(paramString3))
    {
      paramString3 = com.tencent.beacon.scheduler.c.b.i();
      str = paramString3.d() + "_" + paramString3.g();
    }
    a.lock();
    for (;;)
    {
      try
      {
        if (b == null)
        {
          g.a(paramContext, paramString1, paramString2, str, "1.0.6");
          com.tencent.beacon.scheduler.e.b.a(paramContext);
          c.b("AccessSchedulerManager", "SchedulerSDKBaseInfo:" + g.a());
          b = new a.a(paramString1, paramString2, str);
          new Thread((Runnable)b).start();
          return b;
        }
        paramContext = (a.a)b;
        if ((a.a.a(paramContext).equals(paramString1)) && (a.a.c(paramContext).equals(paramString2)) && (a.a.b(paramContext).equals(str)))
        {
          i = 1;
          if (i != 0) {
            continue;
          }
          paramContext = (a.a)b;
          throw new SchedulerInitException("AccessScheduler [" + a.a.a(paramContext) + "," + a.a.b(paramContext) + "] is already in used");
        }
      }
      finally
      {
        a.unlock();
      }
      i = 0;
    }
  }
}
