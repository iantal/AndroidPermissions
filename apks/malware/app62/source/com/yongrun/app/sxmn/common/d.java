package com.yongrun.app.sxmn.common;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Environment;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.WindowManager;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;

public class d
{
  private static d b;
  private Context a;
  
  private d(Context paramContext)
  {
    this.a = paramContext;
  }
  
  public static d a(Context paramContext)
  {
    if (b == null) {
      b = new d(paramContext);
    }
    return b;
  }
  
  public float a()
  {
    DisplayMetrics localDisplayMetrics = new DisplayMetrics();
    ((Activity)this.a).getWindowManager().getDefaultDisplay().getMetrics(localDisplayMetrics);
    return localDisplayMetrics.density;
  }
  
  public void a(File paramFile)
  {
    Intent localIntent = new Intent("android.intent.action.VIEW");
    localIntent.setDataAndType(Uri.fromFile(paramFile), "application/vnd.android.package-archive");
    localIntent.setFlags(268435456);
    this.a.startActivity(localIntent);
  }
  
  public void a(String paramString1, String paramString2)
  {
    int i = 0;
    Object localObject = new File(d() + "sxmn2/download");
    if (!((File)localObject).exists()) {
      ((File)localObject).mkdir();
    }
    paramString1 = d() + "sxmn2/cache/" + paramString1;
    paramString2 = d() + "sxmn2/download/" + paramString2;
    try
    {
      if (new File(paramString1).exists())
      {
        paramString1 = new FileInputStream(paramString1);
        paramString2 = new FileOutputStream(paramString2);
        localObject = new byte['֤'];
        for (;;)
        {
          int j = paramString1.read((byte[])localObject);
          if (j == -1)
          {
            paramString1.close();
            return;
          }
          i += j;
          System.out.println(i);
          paramString2.write((byte[])localObject, 0, j);
        }
      }
      return;
    }
    catch (Exception paramString1)
    {
      System.out.println("复制单个文件操作出错");
      paramString1.printStackTrace();
    }
  }
  
  public boolean a(String paramString)
  {
    List localList = this.a.getPackageManager().getInstalledPackages(0);
    ArrayList localArrayList = new ArrayList();
    int i;
    if (localList != null) {
      i = 0;
    }
    for (;;)
    {
      if (i >= localList.size()) {
        return localArrayList.contains(paramString);
      }
      localArrayList.add(((PackageInfo)localList.get(i)).packageName);
      i += 1;
    }
  }
  
  public int b()
  {
    DisplayMetrics localDisplayMetrics = new DisplayMetrics();
    ((Activity)this.a).getWindowManager().getDefaultDisplay().getMetrics(localDisplayMetrics);
    return localDisplayMetrics.widthPixels;
  }
  
  public int c()
  {
    DisplayMetrics localDisplayMetrics = new DisplayMetrics();
    ((Activity)this.a).getWindowManager().getDefaultDisplay().getMetrics(localDisplayMetrics);
    return localDisplayMetrics.heightPixels;
  }
  
  public String d()
  {
    return Environment.getExternalStorageDirectory() + "/";
  }
}
