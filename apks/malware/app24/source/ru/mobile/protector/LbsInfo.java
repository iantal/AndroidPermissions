package ru.mobile.protector;

import android.text.format.Time;
import android.util.Log;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserFactory;

public class LbsInfo
{
  private static final int ID_ALTITUDE = 5;
  private static final int ID_ERROR = 1;
  private static final int ID_LATITUDE = 3;
  private static final int ID_LONGTITUDE = 4;
  private static final int ID_POSITION = 2;
  private static final int ID_PRECISION = 6;
  private static final int ID_TYPE = 7;
  private static final int ID_UNKNOWN = 0;
  private static final String TAG_ALTITUDE = "altitude";
  private static final String TAG_ERROR = "error";
  private static final String TAG_LATITUDE = "latitude";
  private static final String TAG_LONGTITUDE = "longitude";
  private static final String TAG_POSITION = "position";
  private static final String TAG_PRECISION = "precision";
  private static final String TAG_TYPE = "type";
  public String errorMessage;
  public boolean isError;
  public String lbsAltitude;
  public String lbsLatitude;
  public String lbsLongtitude;
  public String lbsPrecision;
  public String lbsType;
  public long timepoint;
  
  public LbsInfo() {}
  
  public static LbsInfo parseByteData(byte[] paramArrayOfByte)
  {
    localLbsInfo = new LbsInfo();
    if ((paramArrayOfByte != null) && (paramArrayOfByte.length > 0)) {}
    try
    {
      localObject = new ByteArrayInputStream(paramArrayOfByte);
      paramArrayOfByte = XmlPullParserFactory.newInstance();
      paramArrayOfByte.setNamespaceAware(true);
      paramArrayOfByte = paramArrayOfByte.newPullParser();
      paramArrayOfByte.setInput((InputStream)localObject, null);
      j = 0;
      k = paramArrayOfByte.getEventType();
      if (k != 1) {
        break label90;
      }
    }
    catch (Exception paramArrayOfByte)
    {
      for (;;)
      {
        Object localObject;
        int j;
        int k;
        int i;
        Log.e("LBS", "parse response error " + paramArrayOfByte);
        continue;
        if ((j == 2) && ("latitude".equals(localObject)))
        {
          i = 3;
        }
        else if ((j == 2) && ("longitude".equals(localObject)))
        {
          i = 4;
        }
        else if ((j == 2) && ("altitude".equals(localObject)))
        {
          i = 5;
        }
        else if ((j == 2) && ("precision".equals(localObject)))
        {
          i = 6;
        }
        else
        {
          i = j;
          if (j == 2)
          {
            i = j;
            if ("type".equals(localObject))
            {
              i = 7;
              continue;
              if (k == 3)
              {
                localObject = paramArrayOfByte.getName();
                if ("error".equals(localObject))
                {
                  i = 0;
                  continue;
                }
                if ("position".equals(localObject))
                {
                  i = 0;
                  continue;
                }
                if ((!"latitude".equals(localObject)) && (!"longitude".equals(localObject)) && (!"altitude".equals(localObject)) && (!"precision".equals(localObject)))
                {
                  i = j;
                  if (!"type".equals(localObject)) {
                    continue;
                  }
                }
              }
              else
              {
                i = j;
                if (k != 4) {
                  continue;
                }
                if (j == 1)
                {
                  localLbsInfo.errorMessage = paramArrayOfByte.getText();
                  i = j;
                  continue;
                }
                if (j == 3)
                {
                  localLbsInfo.lbsLatitude = paramArrayOfByte.getText();
                  i = j;
                  continue;
                }
                if (j == 4)
                {
                  localLbsInfo.lbsLongtitude = paramArrayOfByte.getText();
                  i = j;
                  continue;
                }
                if (j == 5)
                {
                  localLbsInfo.lbsAltitude = paramArrayOfByte.getText();
                  i = j;
                  continue;
                }
                if (j == 6)
                {
                  localLbsInfo.lbsPrecision = paramArrayOfByte.getText();
                  i = j;
                  continue;
                }
                i = j;
                if (j != 7) {
                  continue;
                }
                localLbsInfo.lbsType = paramArrayOfByte.getText();
                i = j;
                continue;
              }
              i = 2;
            }
          }
        }
      }
    }
    paramArrayOfByte = new Time();
    paramArrayOfByte.setToNow();
    localLbsInfo.timepoint = paramArrayOfByte.toMillis(true);
    return localLbsInfo;
    label90:
    if (k == 2)
    {
      localObject = paramArrayOfByte.getName();
      if ("error".equals(localObject)) {
        i = 1;
      }
      for (localLbsInfo.isError = true;; localLbsInfo.isError = false)
      {
        k = paramArrayOfByte.next();
        j = i;
        break;
        if (!"position".equals(localObject)) {
          break label180;
        }
        i = 2;
      }
    }
  }
}
