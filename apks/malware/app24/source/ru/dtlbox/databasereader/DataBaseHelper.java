package ru.dtlbox.databasereader;

import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteException;
import java.io.File;
import java.io.IOException;
import java.io.PrintStream;

public class DataBaseHelper
{
  public static boolean DEBUG = false;
  public SQLiteDatabase mDataBase;
  private DataBaseHelperParams mDataBaseHelperParams;
  private String mPathToUsingDataBase;
  
  public DataBaseHelper(DataBaseHelperParams paramDataBaseHelperParams)
    throws IOException
  {
    this.mDataBaseHelperParams = paramDataBaseHelperParams;
    initUsingPath();
    if (!checkdatabase()) {
      createdatabase();
    }
  }
  
  private boolean checkdatabase()
  {
    try
    {
      boolean bool = new File(this.mPathToUsingDataBase + this.mDataBaseHelperParams.mUsingDataBaseName).exists();
      return bool;
    }
    catch (SQLiteException localSQLiteException)
    {
      System.out.println("Database doesn't exist");
    }
    return false;
  }
  
  private void copydatabase()
    throws IOException
  {
    int i = this.mDataBaseHelperParams.mResourceFilePath.lastIndexOf("/") + 1;
    String str1 = this.mDataBaseHelperParams.mResourceFilePath.substring(0, i);
    String str3 = this.mDataBaseHelperParams.mResourceFilePath.substring(i);
    runCopyFilesRootAccess(true, str1, str3, this.mPathToUsingDataBase, this.mDataBaseHelperParams.mUsingDataBaseName);
    String str2 = str3 + "-shm";
    str3 = str3 + "-wal";
    String str4 = this.mDataBaseHelperParams.mUsingDataBaseName + "-shm";
    String str5 = this.mDataBaseHelperParams.mUsingDataBaseName + "-wal";
    runCopyFilesRootAccess(true, str1, str2, this.mPathToUsingDataBase, str4);
    runCopyFilesRootAccess(true, str1, str3, this.mPathToUsingDataBase, str5);
  }
  
  private void initUsingPath()
  {
    this.mPathToUsingDataBase = this.mDataBaseHelperParams.mCachePath;
  }
  
  private void runCopyFilesRootAccess(boolean paramBoolean, String paramString1, String paramString2, String paramString3, String paramString4)
  {
    String str = "chmod 777 " + paramString3 + paramString4;
    RootCommand.commandSU("cat '" + paramString1 + paramString2 + "' > '" + paramString3 + paramString4 + "'");
    RootCommand.commandSU(str);
  }
  
  public void close()
  {
    try
    {
      if (this.mDataBase != null) {
        this.mDataBase.close();
      }
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public void createdatabase()
    throws IOException
  {
    new File(this.mDataBaseHelperParams.mCachePath).mkdirs();
    copydatabase();
  }
  
  public SQLiteDatabase getDataBase()
  {
    return this.mDataBase;
  }
  
  public void opendatabase()
    throws SQLException
  {
    this.mDataBase = SQLiteDatabase.openDatabase(this.mPathToUsingDataBase + this.mDataBaseHelperParams.mUsingDataBaseName, null, 0);
  }
  
  public boolean updateDataBase()
  {
    try
    {
      copydatabase();
      return true;
    }
    catch (IOException localIOException) {}
    return false;
  }
  
  public static class DataBaseHelperParams
  {
    private String mCachePath;
    private String mResourceFilePath;
    private String mUsingDataBaseName;
    
    public DataBaseHelperParams(String paramString1, String paramString2, String paramString3)
    {
      this.mCachePath = paramString2;
      this.mResourceFilePath = paramString1;
      this.mUsingDataBaseName = paramString3;
    }
  }
}
