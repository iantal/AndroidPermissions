package com.ironsource.mobilcore;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.util.SparseArray;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class p
  extends l
{
  private static p e;
  private a f;
  private Activity g;
  private JSONObject h;
  private JSONArray i;
  private SparseArray<Boolean> j;
  private OnReadyListener k;
  
  public p() {}
  
  private void a(a paramA)
  {
    try
    {
      a("setState", "from:" + this.f + " , to:" + paramA);
      this.f = paramA;
      return;
    }
    finally
    {
      paramA = finally;
      throw paramA;
    }
  }
  
  public static p h()
  {
    if (e == null) {
      e = new p();
    }
    return e;
  }
  
  public final void a(Activity paramActivity)
  {
    if (this.f != a.b)
    {
      b("goToMarket", "Trying to go to market failed: not ready.");
      return;
    }
    this.g = paramActivity;
    a(b.b);
  }
  
  public final void a(OnReadyListener paramOnReadyListener)
  {
    try
    {
      this.k = paramOnReadyListener;
      return;
    }
    finally
    {
      paramOnReadyListener = finally;
      throw paramOnReadyListener;
    }
  }
  
  protected final boolean a()
  {
    return this.f == null;
  }
  
  protected final l.a b()
  {
    return new l.a("directToMarket", "direct", "direct-feed", b.a, new c());
  }
  
  @SuppressLint({"UseSparseArrays"})
  protected final void d()
  {
    super.d();
    a(a.a);
    a("DirectToMarket", "initMembers");
    this.h = w.a().b("direct-feed");
    this.j = new SparseArray();
  }
  
  protected final void e()
  {
    b("handleFlowDownloadError", "Unspecified error.");
    a(a.c);
  }
  
  public final boolean i()
  {
    return this.f == a.b;
  }
  
  public static enum a
  {
    private a() {}
  }
  
  protected static enum b
    implements l.c
  {
    private String c;
    
    private b(String paramString)
    {
      this.c = paramString;
    }
    
    public final String a()
    {
      return this.c;
    }
  }
  
  private final class c
    implements aF.a
  {
    private boolean b = false;
    
    public c() {}
    
    public final String getInstalledAppPackages()
    {
      p.this.a("JSFlowBridge , getInstalledAppPackages");
      return aE.b();
    }
    
    public final String getMobileParams()
    {
      p.this.a("JSFlowBridge , getMobileParams");
      return aE.k(MobileCore.c());
    }
    
    public final void init(String paramString1, String paramString2)
    {
      p.this.a("JSFlowBridge , init", "flow:" + paramString1 + " , flowName:" + paramString2);
      p.this.c = paramString2;
      p.this.b = paramString1;
    }
    
    public final void openReportOffers(String paramString1, String paramString2)
    {
      try
      {
        paramString2 = aN.a(new JSONArray(paramString2));
        aE.a(MobileCore.c(), p.this.b, p.this.b, aJ.a.a(paramString1), "", paramString2);
        return;
      }
      catch (Exception paramString1)
      {
        paramString1.printStackTrace();
      }
    }
    
    public final void processFeed(String paramString)
    {
      p.this.a("JSFlowBridge , processFeed");
      w.a().a("direct-feed", paramString);
      try
      {
        p.a(p.this, new JSONObject(paramString));
        p.a(p.this, p.b(p.this).getJSONArray("ads"));
        p.c(p.this).clear();
        if (p.d(p.this) == p.a.a)
        {
          p.a(p.this, p.a.b);
          p.e(p.this);
        }
        return;
      }
      catch (JSONException paramString)
      {
        aE.a(MobileCore.c(), p.class.getName(), paramString);
      }
    }
    
    public final void processNotAllowed()
    {
      p.this.a("JSFlowBridge , processNotAllowed");
      p.a(p.this, p.a.c);
    }
    
    public final void reportFeedRequestError()
    {
      if (p.d(p.this) == p.a.a)
      {
        p.a(p.this, p.a.c);
        p.this.b("reportFeedRequestError", "Unspecified Error.");
      }
    }
    
    public final void show()
    {
      for (;;)
      {
        int i;
        try
        {
          if (this.b) {
            return;
          }
          this.b = true;
          i = 0;
          if (i >= p.f(p.this).length()) {
            break label172;
          }
          Object localObject1 = (Boolean)p.c(p.this).get(i);
          if ((localObject1 == null) || (!((Boolean)localObject1).booleanValue()))
          {
            localObject1 = p.f(p.this).getJSONObject(i);
            ((JSONObject)localObject1).put("index", i);
            p.c(p.this).put(i, Boolean.valueOf(true));
            Object localObject3 = localObject1;
            if (localObject1 == null) {
              localObject3 = p.f(p.this).getJSONObject(0);
            }
            if (p.g(p.this) != null) {
              j.a(p.g(p.this));
            }
            p.this.a(p.g(p.this), (JSONObject)localObject3, new l.d()
            {
              public final void a()
              {
                p.c.a(p.c.this, false);
              }
            });
            p.h(p.this);
            return;
          }
        }
        catch (JSONException localJSONException)
        {
          localJSONException.printStackTrace();
          return;
        }
        i += 1;
        continue;
        label172:
        Object localObject2 = null;
      }
    }
  }
}
