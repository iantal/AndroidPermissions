package com.ironsource.mobilcore;

import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

class aX
{
  aX() {}
  
  public static boolean a(String paramString, File paramFile)
  {
    ZipInputStream localZipInputStream;
    for (;;)
    {
      Object localObject1;
      try
      {
        localZipInputStream = new ZipInputStream(new BufferedInputStream(new FileInputStream(paramFile)));
        paramFile = paramFile.getName().substring(0, paramFile.getName().length() - 4);
        localObject1 = new File(paramString + "/" + paramFile);
        if (!((File)localObject1).exists()) {
          ((File)localObject1).mkdirs();
        }
        Object localObject2 = localZipInputStream.getNextEntry();
        if (localObject2 == null) {
          break;
        }
        localObject1 = new ByteArrayOutputStream();
        byte[] arrayOfByte = new byte['Ð€'];
        if (((ZipEntry)localObject2).isDirectory()) {
          continue;
        }
        File localFile = new File(paramString + "/" + paramFile + "/" + ((ZipEntry)localObject2).getName());
        if (!localFile.getParentFile().exists()) {
          localFile.getParentFile().mkdirs();
        }
        localObject2 = ((ZipEntry)localObject2).getName();
        localObject2 = new File(paramString + "/" + paramFile, (String)localObject2);
        ((File)localObject2).getParentFile().mkdirs();
        localObject2 = new FileOutputStream((File)localObject2);
        int i = localZipInputStream.read(arrayOfByte);
        if (i != -1)
        {
          ((ByteArrayOutputStream)localObject1).write(arrayOfByte, 0, i);
          ((FileOutputStream)localObject2).write(((ByteArrayOutputStream)localObject1).toByteArray());
          ((ByteArrayOutputStream)localObject1).reset();
          continue;
        }
        ((FileOutputStream)localObject2).close();
      }
      catch (IOException paramString)
      {
        aE.a(MobileCore.c(), aX.class.getName(), paramString);
        return false;
      }
      ((ByteArrayOutputStream)localObject1).close();
      localZipInputStream.closeEntry();
    }
    localZipInputStream.close();
    return true;
  }
}
