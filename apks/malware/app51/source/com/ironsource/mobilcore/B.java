package com.ironsource.mobilcore;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Rect;
import android.graphics.drawable.AnimationDrawable;
import android.graphics.drawable.Drawable;
import android.os.AsyncTask;
import android.os.Build.VERSION;
import android.text.TextUtils;
import android.util.Base64;
import android.util.DisplayMetrics;
import android.view.View;
import android.widget.ImageView;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

final class B
{
  public static int a(Context paramContext, float paramFloat)
  {
    return (int)(paramContext.getResources().getDisplayMetrics().density * paramFloat);
  }
  
  @SuppressLint({"InlinedApi"})
  public static Bitmap a(Context paramContext, Bitmap paramBitmap)
  {
    float f = 320.0F / paramContext.getResources().getDisplayMetrics().densityDpi;
    return Bitmap.createScaledBitmap(paramBitmap, (int)(paramBitmap.getWidth() / f), (int)(paramBitmap.getHeight() / f), true);
  }
  
  public static Bitmap a(Context paramContext, String paramString)
  {
    paramString = a(paramString);
    if (paramString == null) {
      return null;
    }
    return a(paramContext, paramString);
  }
  
  @SuppressLint({"InlinedApi"})
  public static Bitmap a(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    try
    {
      if (Build.VERSION.SDK_INT <= 8) {}
      for (paramString = k.a(paramString, 0);; paramString = Base64.decode(paramString, 0)) {
        return BitmapFactory.decodeByteArray(paramString, 0, paramString.length);
      }
      return null;
    }
    catch (Exception paramString) {}
  }
  
  public static final void a(AnimationDrawable paramAnimationDrawable)
  {
    if (paramAnimationDrawable == null) {
      return;
    }
    paramAnimationDrawable.stop();
    paramAnimationDrawable.setVisible(false, true);
  }
  
  public static void a(View paramView, Drawable paramDrawable)
  {
    if (Build.VERSION.SDK_INT >= 16)
    {
      paramView.setBackground(paramDrawable);
      return;
    }
    paramView.setBackgroundDrawable(paramDrawable);
  }
  
  public static void a(ImageView paramImageView, AnimationDrawable paramAnimationDrawable)
  {
    if (paramAnimationDrawable == null) {
      return;
    }
    a(paramImageView, paramAnimationDrawable);
  }
  
  public static final void b(AnimationDrawable paramAnimationDrawable)
  {
    if (paramAnimationDrawable == null) {
      return;
    }
    a(paramAnimationDrawable);
    paramAnimationDrawable.start();
  }
  
  public static abstract interface a
  {
    public abstract void a();
    
    public abstract void a(Bitmap paramBitmap);
  }
  
  private static final class b
  {
    public Rect a = new Rect();
    public int[] b;
    public int[] c;
    public int[] d;
    
    private b() {}
    
    public static b a(byte[] paramArrayOfByte)
    {
      paramArrayOfByte = ByteBuffer.wrap(paramArrayOfByte).order(ByteOrder.nativeOrder());
      if (paramArrayOfByte.get() == 0) {
        return null;
      }
      b localB = new b();
      localB.b = new int[paramArrayOfByte.get()];
      localB.c = new int[paramArrayOfByte.get()];
      localB.d = new int[paramArrayOfByte.get()];
      a(localB.b.length);
      a(localB.c.length);
      paramArrayOfByte.getInt();
      paramArrayOfByte.getInt();
      localB.a.left = paramArrayOfByte.getInt();
      localB.a.right = paramArrayOfByte.getInt();
      localB.a.top = paramArrayOfByte.getInt();
      localB.a.bottom = paramArrayOfByte.getInt();
      paramArrayOfByte.getInt();
      a(localB.b, paramArrayOfByte);
      a(localB.c, paramArrayOfByte);
      a(localB.d, paramArrayOfByte);
      return localB;
    }
    
    private static void a(int paramInt)
    {
      if ((paramInt == 0) || ((paramInt & 0x1) != 0)) {
        throw new RuntimeException("invalid nine-patch: " + paramInt);
      }
    }
    
    private static void a(int[] paramArrayOfInt, ByteBuffer paramByteBuffer)
    {
      int i = 0;
      int j = paramArrayOfInt.length;
      while (i < j)
      {
        paramArrayOfInt[i] = paramByteBuffer.getInt();
        i += 1;
      }
    }
  }
}
