package com.ironsource.mobilcore;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.graphics.Rect;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.os.Build.VERSION;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.view.WindowManager.LayoutParams;

abstract class ai
  extends ViewGroup
{
  static final boolean p;
  protected int A;
  protected boolean B;
  protected boolean C;
  protected int D = 0;
  protected int E;
  protected int F;
  protected int G = 1;
  protected boolean H = true;
  private View a;
  private int b = 0;
  private a c;
  private Activity d;
  protected Drawable q;
  protected boolean r;
  protected Drawable s;
  protected int t;
  protected Bitmap u;
  protected View v;
  protected int w;
  protected final Rect x = new Rect();
  protected ac y;
  protected ac z;
  
  static
  {
    if (Build.VERSION.SDK_INT >= 12) {}
    for (boolean bool = true;; bool = false)
    {
      p = bool;
      return;
    }
  }
  
  ai(Activity paramActivity, int paramInt)
  {
    this(paramActivity);
    this.d = paramActivity;
    this.b = paramInt;
  }
  
  private ai(Context paramContext)
  {
    this(paramContext, null);
  }
  
  private ai(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, null);
    a(paramContext, null);
  }
  
  public static ai a(Activity paramActivity, int paramInt)
  {
    Object localObject = al.a;
    switch (1.a[localObject.ordinal()])
    {
    default: 
      throw new IllegalArgumentException("position must be one of LEFT, TOP, RIGHT or BOTTOM");
    case 1: 
      localObject = new ag(paramActivity, 1);
    }
    for (;;)
    {
      ((ai)localObject).setId(4660);
      switch (1)
      {
      default: 
        throw new RuntimeException("Unknown menu mode: " + 1);
        localObject = new am(paramActivity, 1);
        continue;
        localObject = new as(paramActivity, 1);
        continue;
        localObject = new aa(paramActivity, 1);
      }
    }
    paramActivity = (ViewGroup)paramActivity.findViewById(16908290);
    paramActivity.removeAllViews();
    paramActivity.addView((View)localObject, -1, -1);
    return localObject;
    paramActivity = (ViewGroup)paramActivity.getWindow().getDecorView();
    ViewGroup localViewGroup = (ViewGroup)paramActivity.getChildAt(0);
    paramActivity.removeAllViews();
    paramActivity.addView((View)localObject, -1, -1);
    ((ai)localObject).z.addView(localViewGroup, localViewGroup.getLayoutParams());
    return localObject;
  }
  
  public abstract void a(int paramInt);
  
  @SuppressLint({"NewApi"})
  protected void a(Context paramContext, AttributeSet paramAttributeSet)
  {
    boolean bool = false;
    setWillNotDraw(false);
    setFocusable(false);
    if (this.A != -1) {
      bool = true;
    }
    this.B = bool;
    this.r = true;
    this.s = null;
    if (this.s == null) {
      a(-16777216);
    }
    this.t = d(6);
    this.E = d(24);
    this.y = new ac(paramContext);
    this.y.setId(4661);
    addView(this.y);
    this.z = new aj(paramContext);
    paramContext = new ColorDrawable(Color.parseColor("#000000"));
    B.a(this.z, paramContext);
    addView(this.z);
    this.q = new ad(-16777216);
  }
  
  public final void a(View paramView)
  {
    ViewGroup.LayoutParams localLayoutParams = new ViewGroup.LayoutParams(-1, -1);
    this.a = paramView;
    this.y.removeAllViews();
    this.y.addView(paramView, localLayoutParams);
    if ((this.d.getWindow().getAttributes().flags & 0x400) != 0) {}
    for (int i = 1;; i = 0)
    {
      if ((i == 0) && (this.b == 1))
      {
        paramView = new Rect();
        this.d.getWindow().getDecorView().getWindowVisibleDisplayFrame(paramView);
        i = paramView.top;
        if (i != 0)
        {
          this.y.setPadding(0, i, 0, 0);
          A.a("MCSliderDrawerMenuDrawer.addMenuContainerPaddingIfNeeded(), statusBarHeight=" + i + ", setting it as a paddingTop for mMenuContainer", 55);
        }
      }
      return;
    }
  }
  
  public final void a(a paramA)
  {
    this.c = paramA;
  }
  
  public abstract void a(boolean paramBoolean);
  
  public final void b(View paramView)
  {
    ViewGroup.LayoutParams localLayoutParams = new ViewGroup.LayoutParams(-1, -1);
    switch (this.b)
    {
    default: 
      return;
    case 0: 
      this.z.removeAllViews();
      this.z.addView(paramView, localLayoutParams);
      return;
    }
    this.d.setContentView(paramView, localLayoutParams);
  }
  
  public abstract void b(boolean paramBoolean);
  
  public abstract void c(int paramInt);
  
  public abstract void c(boolean paramBoolean);
  
  public abstract boolean c();
  
  protected final int d(int paramInt)
  {
    return (int)(getResources().getDisplayMetrics().density * paramInt + 0.5F);
  }
  
  public abstract void d();
  
  protected final void e(int paramInt)
  {
    if (paramInt != this.D)
    {
      int i = this.D;
      this.D = paramInt;
      if (this.c != null) {
        this.c.a(paramInt);
      }
    }
  }
  
  protected boolean fitSystemWindows(Rect paramRect)
  {
    if (this.b == 1) {
      this.y.setPadding(0, paramRect.top, 0, 0);
    }
    return super.fitSystemWindows(paramRect);
  }
  
  protected void onFinishInflate()
  {
    super.onFinishInflate();
  }
  
  public static abstract interface a
  {
    public abstract void a(int paramInt);
  }
}
