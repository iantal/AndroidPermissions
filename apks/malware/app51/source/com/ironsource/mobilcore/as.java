package com.ironsource.mobilcore;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.GradientDrawable;
import android.graphics.drawable.GradientDrawable.Orientation;
import android.view.MotionEvent;
import android.view.VelocityTracker;
import android.view.View;
import android.view.animation.Interpolator;

@SuppressLint({"NewApi"})
final class as
  extends au
{
  as(Activity paramActivity, int paramInt)
  {
    super(paramActivity, paramInt);
  }
  
  private void f(int paramInt)
  {
    if ((this.n) && (this.A != 0))
    {
      j = this.A;
      f = (j - paramInt) / j;
      if (!p) {
        break label76;
      }
      if (paramInt > 0)
      {
        f = -f;
        paramInt = (int)(j * f * 0.25F);
        this.y.setTranslationY(paramInt);
      }
    }
    else
    {
      return;
    }
    this.y.setTranslationY(-j);
    return;
    label76:
    int i = this.y.getTop();
    float f = -f;
    int j = (int)(j * f * 0.25F);
    this.y.offsetTopAndBottom(j - i);
    ac localAc = this.y;
    if (paramInt == 0) {}
    for (paramInt = 4;; paramInt = 0)
    {
      localAc.setVisibility(paramInt);
      return;
    }
  }
  
  protected final void a()
  {
    int i = this.A / 3;
    this.k.a(0, 0, i, 0, 1000);
  }
  
  public final void a(int paramInt)
  {
    this.s = new GradientDrawable(GradientDrawable.Orientation.BOTTOM_TOP, new int[] { -16777216, 0 });
    invalidate();
  }
  
  protected final void a(Canvas paramCanvas, int paramInt)
  {
    int i = getWidth();
    this.s.setBounds(0, paramInt - this.t, i, paramInt);
    this.s.draw(paramCanvas);
  }
  
  public final void a(boolean paramBoolean)
  {
    a(this.A, 0, paramBoolean);
  }
  
  protected final boolean a(float paramFloat)
  {
    return ((!this.C) && (this.g <= this.F) && (paramFloat > 0.0F)) || ((this.C) && (this.g >= this.d));
  }
  
  protected final boolean a(MotionEvent paramMotionEvent)
  {
    return paramMotionEvent.getY() > this.d;
  }
  
  protected final void b(float paramFloat)
  {
    c(Math.min(Math.max(this.d + paramFloat, 0.0F), this.A));
  }
  
  protected final void b(int paramInt)
  {
    if (p)
    {
      this.z.setTranslationY(paramInt);
      f(paramInt);
      invalidate();
      return;
    }
    this.z.offsetTopAndBottom(paramInt - this.z.getTop());
    f(paramInt);
    invalidate();
  }
  
  protected final void b(Canvas paramCanvas, int paramInt)
  {
    int i = getWidth();
    float f = paramInt / this.A;
    this.q.setBounds(0, 0, i, paramInt);
    this.q.setAlpha((int)((1.0F - f) * 185.0F));
    this.q.draw(paramCanvas);
  }
  
  protected final void b(MotionEvent paramMotionEvent)
  {
    int i = (int)this.d;
    if (this.e)
    {
      this.l.computeCurrentVelocity(1000, this.m);
      j = (int)this.l.getXVelocity();
      this.i = paramMotionEvent.getY();
      if (this.l.getYVelocity() > 0.0F)
      {
        i = this.A;
        a(i, j, true);
      }
    }
    while ((!this.C) || (paramMotionEvent.getY() <= i)) {
      for (;;)
      {
        int j;
        return;
        i = 0;
      }
    }
    b(true);
  }
  
  public final void b(boolean paramBoolean)
  {
    a(0, 0, paramBoolean);
  }
  
  protected final boolean b()
  {
    return ((!this.C) && (this.g <= this.F)) || ((this.C) && (this.g >= this.d));
  }
  
  protected final void c(Canvas paramCanvas, int paramInt)
  {
    if ((this.v != null) && (this.v.getParent() != null) && (this.w == 0))
    {
      int i = this.A;
      int j = this.u.getHeight();
      float f = paramInt / i;
      this.v.getDrawingRect(this.x);
      offsetDescendantRectToMyCoords(this.v, this.x);
      i = this.u.getWidth();
      j = paramInt - (int)((1.0F - a.getInterpolation(1.0F - f)) * j);
      int k = this.x.left + (this.x.width() - i) / 2;
      paramCanvas.save();
      paramCanvas.clipRect(k, j, i + k, paramInt);
      paramCanvas.drawBitmap(this.u, k, j, null);
      paramCanvas.restore();
    }
  }
  
  protected final void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    paramInt1 = paramInt3 - paramInt1;
    paramInt2 = paramInt4 - paramInt2;
    paramInt3 = (int)this.d;
    this.y.layout(0, 0, paramInt1, this.A);
    f(paramInt3);
    if (p)
    {
      this.z.layout(0, 0, paramInt1, paramInt2);
      return;
    }
    this.z.layout(0, paramInt3, paramInt1, paramInt2 + paramInt3);
  }
}
