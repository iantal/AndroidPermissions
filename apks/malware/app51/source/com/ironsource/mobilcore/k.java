package com.ironsource.mobilcore;

public class k
{
  static
  {
    if (!k.class.desiredAssertionStatus()) {}
    for (boolean bool = true;; bool = false)
    {
      a = bool;
      return;
    }
  }
  
  private k() {}
  
  public static byte[] a(String paramString, int paramInt)
  {
    byte[] arrayOfByte = paramString.getBytes();
    paramInt = arrayOfByte.length;
    paramString = new b(0, new byte[paramInt * 3 / 4]);
    if (!paramString.a(arrayOfByte, 0, paramInt, true)) {
      throw new IllegalArgumentException("bad base-64");
    }
    if (paramString.b == paramString.a.length) {
      return paramString.a;
    }
    arrayOfByte = new byte[paramString.b];
    System.arraycopy(paramString.a, 0, arrayOfByte, 0, paramString.b);
    return arrayOfByte;
  }
  
  public static byte[] a(byte[] paramArrayOfByte, int paramInt)
  {
    int j = paramArrayOfByte.length;
    c localC = new c(0, null);
    int i = j / 3 * 4;
    int k;
    if (localC.d)
    {
      paramInt = i;
      if (j % 3 > 0) {
        paramInt = i + 4;
      }
      i = paramInt;
      if (localC.e)
      {
        i = paramInt;
        if (j > 0)
        {
          k = (j - 1) / 57;
          if (!localC.f) {
            break label175;
          }
        }
      }
    }
    label175:
    for (i = 2;; i = 1)
    {
      i = paramInt + i * (k + 1);
      localC.a = new byte[i];
      localC.a(paramArrayOfByte, 0, j, true);
      if ((a) || (localC.b == i)) {
        break label180;
      }
      throw new AssertionError();
      paramInt = i;
      switch (j % 3)
      {
      case 0: 
      default: 
        paramInt = i;
        break;
      case 1: 
        paramInt = i + 2;
        break;
      case 2: 
        paramInt = i + 3;
        break;
      }
    }
    label180:
    return localC.a;
  }
  
  static abstract class a
  {
    public byte[] a;
    public int b;
    
    a() {}
  }
  
  static final class b
    extends k.a
  {
    private static final int[] c = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -2, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
    private static final int[] d = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -2, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, 63, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
    private int e;
    private int f;
    private final int[] g;
    
    public b(int paramInt, byte[] paramArrayOfByte)
    {
      this.a = paramArrayOfByte;
      if ((paramInt & 0x8) == 0) {}
      for (paramArrayOfByte = c;; paramArrayOfByte = d)
      {
        this.g = paramArrayOfByte;
        this.e = 0;
        this.f = 0;
        return;
      }
    }
    
    public final boolean a(byte[] paramArrayOfByte, int paramInt1, int paramInt2, boolean paramBoolean)
    {
      if (this.e == 6) {
        return false;
      }
      int i1 = paramInt2 + paramInt1;
      paramInt2 = this.e;
      int i = this.f;
      int j = 0;
      byte[] arrayOfByte = this.a;
      int[] arrayOfInt = this.g;
      int m = j;
      int n = i;
      if (paramInt1 < i1)
      {
        int k = j;
        m = i;
        n = paramInt1;
        if (paramInt2 == 0)
        {
          k = paramInt1;
          for (paramInt1 = i; k + 4 <= i1; paramInt1 = i)
          {
            i = arrayOfInt[(paramArrayOfByte[k] & 0xFF)] << 18 | arrayOfInt[(paramArrayOfByte[(k + 1)] & 0xFF)] << 12 | arrayOfInt[(paramArrayOfByte[(k + 2)] & 0xFF)] << 6 | arrayOfInt[(paramArrayOfByte[(k + 3)] & 0xFF)];
            paramInt1 = i;
            if (i < 0) {
              break;
            }
            arrayOfByte[(j + 2)] = ((byte)i);
            arrayOfByte[(j + 1)] = ((byte)(i >> 8));
            arrayOfByte[j] = ((byte)(i >> 16));
            j += 3;
            k += 4;
          }
          m = j;
          n = paramInt1;
          if (k < i1)
          {
            n = k;
            m = paramInt1;
            k = j;
          }
        }
        else
        {
          paramInt1 = n + 1;
          i = arrayOfInt[(paramArrayOfByte[n] & 0xFF)];
          switch (paramInt2)
          {
          }
          do
          {
            do
            {
              do
              {
                do
                {
                  do
                  {
                    do
                    {
                      j = k;
                      i = m;
                      break;
                      if (i >= 0)
                      {
                        paramInt2 += 1;
                        j = k;
                        break;
                      }
                    } while (i == -1);
                    this.e = 6;
                    return false;
                    if (i >= 0)
                    {
                      i = m << 6 | i;
                      paramInt2 += 1;
                      j = k;
                      break;
                    }
                  } while (i == -1);
                  this.e = 6;
                  return false;
                  if (i >= 0)
                  {
                    i = m << 6 | i;
                    paramInt2 += 1;
                    j = k;
                    break;
                  }
                  if (i == -2)
                  {
                    arrayOfByte[k] = ((byte)(m >> 4));
                    paramInt2 = 4;
                    j = k + 1;
                    i = m;
                    break;
                  }
                } while (i == -1);
                this.e = 6;
                return false;
                if (i >= 0)
                {
                  i = m << 6 | i;
                  arrayOfByte[(k + 2)] = ((byte)i);
                  arrayOfByte[(k + 1)] = ((byte)(i >> 8));
                  arrayOfByte[k] = ((byte)(i >> 16));
                  j = k + 3;
                  paramInt2 = 0;
                  break;
                }
                if (i == -2)
                {
                  arrayOfByte[(k + 1)] = ((byte)(m >> 2));
                  arrayOfByte[k] = ((byte)(m >> 10));
                  j = k + 2;
                  paramInt2 = 5;
                  i = m;
                  break;
                }
              } while (i == -1);
              this.e = 6;
              return false;
              if (i == -2)
              {
                paramInt2 += 1;
                j = k;
                i = m;
                break;
              }
            } while (i == -1);
            this.e = 6;
            return false;
          } while (i == -1);
          this.e = 6;
          return false;
        }
      }
      paramInt1 = m;
      switch (paramInt2)
      {
      default: 
        paramInt1 = m;
      case 0: 
      case 1: 
      case 2: 
      case 3: 
        for (;;)
        {
          this.e = paramInt2;
          this.b = paramInt1;
          return true;
          this.e = 6;
          return false;
          arrayOfByte[m] = ((byte)(n >> 4));
          paramInt1 = m + 1;
          continue;
          i = m + 1;
          arrayOfByte[m] = ((byte)(n >> 10));
          paramInt1 = i + 1;
          arrayOfByte[i] = ((byte)(n >> 2));
        }
      }
      this.e = 6;
      return false;
    }
  }
  
  static final class c
    extends k.a
  {
    private static final byte[] h;
    private static final byte[] i;
    int c;
    public final boolean d;
    public final boolean e;
    public final boolean f;
    private final byte[] j;
    private int k;
    private final byte[] l;
    
    static
    {
      if (!k.class.desiredAssertionStatus()) {}
      for (boolean bool = true;; bool = false)
      {
        g = bool;
        h = new byte[] { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47 };
        i = new byte[] { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95 };
        return;
      }
    }
    
    public c(int paramInt, byte[] paramArrayOfByte)
    {
      this.a = null;
      boolean bool1;
      if ((paramInt & 0x1) == 0)
      {
        bool1 = true;
        this.d = bool1;
        if ((paramInt & 0x2) != 0) {
          break label101;
        }
        bool1 = true;
        label33:
        this.e = bool1;
        if ((paramInt & 0x4) == 0) {
          break label106;
        }
        bool1 = bool2;
        label47:
        this.f = bool1;
        if ((paramInt & 0x8) != 0) {
          break label111;
        }
        paramArrayOfByte = h;
        label63:
        this.l = paramArrayOfByte;
        this.j = new byte[2];
        this.c = 0;
        if (!this.e) {
          break label118;
        }
      }
      label101:
      label106:
      label111:
      label118:
      for (paramInt = 19;; paramInt = -1)
      {
        this.k = paramInt;
        return;
        bool1 = false;
        break;
        bool1 = false;
        break label33;
        bool1 = false;
        break label47;
        paramArrayOfByte = i;
        break label63;
      }
    }
    
    public final boolean a(byte[] paramArrayOfByte, int paramInt1, int paramInt2, boolean paramBoolean)
    {
      byte[] arrayOfByte1 = this.l;
      byte[] arrayOfByte2 = this.a;
      int n = 0;
      int i1 = this.k;
      int i4 = paramInt2 + paramInt1;
      int m;
      switch (this.c)
      {
      default: 
        paramInt2 = -1;
        m = paramInt1;
        paramInt1 = paramInt2;
        label63:
        if (paramInt1 != -1)
        {
          arrayOfByte2[0] = arrayOfByte1[(paramInt1 >> 18 & 0x3F)];
          arrayOfByte2[1] = arrayOfByte1[(paramInt1 >> 12 & 0x3F)];
          arrayOfByte2[2] = arrayOfByte1[(paramInt1 >> 6 & 0x3F)];
          paramInt2 = 4;
          arrayOfByte2[3] = arrayOfByte1[(paramInt1 & 0x3F)];
          paramInt1 = i1 - 1;
          if (paramInt1 == 0)
          {
            paramInt1 = paramInt2;
            if (this.f)
            {
              paramInt1 = 5;
              arrayOfByte2[4] = 13;
            }
            n = paramInt1 + 1;
            arrayOfByte2[paramInt1] = 10;
            paramInt2 = 19;
            paramInt1 = n;
          }
        }
        break;
      }
      for (;;)
      {
        label166:
        if (m + 3 <= i4)
        {
          n = (paramArrayOfByte[m] & 0xFF) << 16 | (paramArrayOfByte[(m + 1)] & 0xFF) << 8 | paramArrayOfByte[(m + 2)] & 0xFF;
          arrayOfByte2[paramInt1] = arrayOfByte1[(n >> 18 & 0x3F)];
          arrayOfByte2[(paramInt1 + 1)] = arrayOfByte1[(n >> 12 & 0x3F)];
          arrayOfByte2[(paramInt1 + 2)] = arrayOfByte1[(n >> 6 & 0x3F)];
          arrayOfByte2[(paramInt1 + 3)] = arrayOfByte1[(n & 0x3F)];
          m += 3;
          paramInt1 += 4;
          paramInt2 -= 1;
          if (paramInt2 != 0) {
            break label1101;
          }
          if (!this.f) {
            break label1098;
          }
          paramInt2 = paramInt1 + 1;
          arrayOfByte2[paramInt1] = 13;
          paramInt1 = paramInt2;
        }
        label742:
        label772:
        label958:
        label1095:
        label1098:
        for (;;)
        {
          paramInt2 = paramInt1 + 1;
          arrayOfByte2[paramInt1] = 10;
          n = 19;
          paramInt1 = paramInt2;
          paramInt2 = n;
          break label166;
          paramInt2 = -1;
          m = paramInt1;
          paramInt1 = paramInt2;
          break label63;
          if (paramInt1 + 2 > i4) {
            break;
          }
          m = this.j[0];
          paramInt2 = paramInt1 + 1;
          paramInt1 = paramArrayOfByte[paramInt1];
          int i2 = paramArrayOfByte[paramInt2];
          this.c = 0;
          paramInt1 = (m & 0xFF) << 16 | (paramInt1 & 0xFF) << 8 | i2 & 0xFF;
          m = paramInt2 + 1;
          break label63;
          if (paramInt1 + 1 > i4) {
            break;
          }
          paramInt2 = this.j[0];
          i2 = this.j[1];
          m = paramInt1 + 1;
          paramInt1 = paramArrayOfByte[paramInt1];
          this.c = 0;
          paramInt1 = (paramInt2 & 0xFF) << 16 | (i2 & 0xFF) << 8 | paramInt1 & 0xFF;
          break label63;
          if (m - this.c == i4 - 1)
          {
            n = 0;
            if (this.c > 0)
            {
              paramArrayOfByte = this.j;
              n = 1;
              i1 = paramArrayOfByte[0];
            }
            for (;;)
            {
              i1 = (i1 & 0xFF) << 4;
              this.c -= n;
              i2 = paramInt1 + 1;
              arrayOfByte2[paramInt1] = arrayOfByte1[(i1 >> 6 & 0x3F)];
              n = i2 + 1;
              arrayOfByte2[i2] = arrayOfByte1[(i1 & 0x3F)];
              paramInt1 = n;
              if (this.d)
              {
                i1 = n + 1;
                arrayOfByte2[n] = 61;
                paramInt1 = i1 + 1;
                arrayOfByte2[i1] = 61;
              }
              n = paramInt1;
              if (this.e)
              {
                n = paramInt1;
                if (this.f)
                {
                  arrayOfByte2[paramInt1] = 13;
                  n = paramInt1 + 1;
                }
                arrayOfByte2[n] = 10;
                n += 1;
              }
              i1 = m;
              if ((g) || (this.c == 0)) {
                break;
              }
              throw new AssertionError();
              i1 = paramArrayOfByte[m];
              m += 1;
            }
          }
          int i3;
          if (m - this.c == i4 - 2)
          {
            n = 0;
            if (this.c > 1)
            {
              byte[] arrayOfByte3 = this.j;
              i2 = 1;
              i1 = arrayOfByte3[0];
              n = m;
              m = i2;
              if (this.c <= 0) {
                break label958;
              }
              i2 = this.j[m];
              i3 = m + 1;
              m = n;
              n = i3;
              i1 = (i2 & 0xFF) << 2 | (i1 & 0xFF) << 10;
              this.c -= n;
              n = paramInt1 + 1;
              arrayOfByte2[paramInt1] = arrayOfByte1[(i1 >> 12 & 0x3F)];
              i2 = n + 1;
              arrayOfByte2[n] = arrayOfByte1[(i1 >> 6 & 0x3F)];
              paramInt1 = i2 + 1;
              arrayOfByte2[i2] = arrayOfByte1[(i1 & 0x3F)];
              if (!this.d) {
                break label1095;
              }
              n = paramInt1 + 1;
              arrayOfByte2[paramInt1] = 61;
              paramInt1 = n;
            }
          }
          for (;;)
          {
            n = paramInt1;
            if (this.e)
            {
              n = paramInt1;
              if (this.f)
              {
                arrayOfByte2[paramInt1] = 13;
                n = paramInt1 + 1;
              }
              arrayOfByte2[n] = 10;
              n += 1;
            }
            i1 = m;
            break;
            i1 = paramArrayOfByte[m];
            i2 = m + 1;
            m = n;
            n = i2;
            break label742;
            i2 = paramArrayOfByte[n];
            i3 = n + 1;
            n = m;
            m = i3;
            break label772;
            i1 = m;
            n = paramInt1;
            if (!this.e) {
              break;
            }
            i1 = m;
            n = paramInt1;
            if (paramInt1 <= 0) {
              break;
            }
            i1 = m;
            n = paramInt1;
            if (paramInt2 == 19) {
              break;
            }
            if (this.f)
            {
              n = paramInt1 + 1;
              arrayOfByte2[paramInt1] = 13;
              paramInt1 = n;
            }
            for (;;)
            {
              n = paramInt1 + 1;
              arrayOfByte2[paramInt1] = 10;
              i1 = m;
              break;
              if ((!g) && (i1 != i4)) {
                throw new AssertionError();
              }
              this.b = n;
              this.k = paramInt2;
              return true;
            }
          }
        }
        label1101:
        continue;
        paramInt2 = paramInt1;
        paramInt1 = 4;
        continue;
        paramInt2 = i1;
        paramInt1 = n;
      }
    }
  }
}
