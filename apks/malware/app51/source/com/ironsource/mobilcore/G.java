package com.ironsource.mobilcore;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.text.TextUtils;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.LinearLayout;
import android.widget.RelativeLayout.LayoutParams;
import org.json.JSONException;
import org.json.JSONObject;

abstract class G
{
  private int a;
  private String b;
  protected Context c;
  protected aw d;
  protected Activity e;
  protected int f;
  protected View g;
  protected View h;
  protected X i;
  protected String j;
  protected boolean k;
  private a l = a.b;
  
  public G(Context paramContext, aw paramAw)
  {
    this.c = paramContext;
    this.d = paramAw;
    this.a = 1;
    this.f = -1;
    c();
    this.g = new LinearLayout(this.c);
    paramContext = (LinearLayout)this.g;
    paramContext.setLayoutParams(new RelativeLayout.LayoutParams(-1, -2));
    paramContext.setOrientation(1);
    paramContext.addView(this.h);
    if (b()) {
      this.d.a(paramContext);
    }
  }
  
  public abstract String a();
  
  public void a(int paramInt)
  {
    this.f = paramInt;
  }
  
  public void a(Activity paramActivity)
  {
    this.e = paramActivity;
  }
  
  protected void a(View paramView) {}
  
  public void a(a paramA)
  {
    this.l = paramA;
  }
  
  public final void a(X paramX)
  {
    this.i = paramX;
    if (this.i != null) {
      if (this.g.getVisibility() != 0) {
        break label37;
      }
    }
    label37:
    for (int m = 1;; m = 0)
    {
      if (m == 0) {
        this.i.a(false);
      }
      return;
    }
  }
  
  protected final void a(String paramString)
  {
    Intent localIntent = new Intent("com.ironsource.mcslidermenu.MCWidgetCallbackAction");
    localIntent.putExtra("callbackId", paramString);
    this.c.sendBroadcast(localIntent);
  }
  
  public abstract void a(JSONObject paramJSONObject)
    throws JSONException;
  
  protected void a(JSONObject paramJSONObject, boolean paramBoolean)
    throws JSONException
  {
    this.j = paramJSONObject.optString("id", "");
    this.k = paramJSONObject.optBoolean("closeSliderOnClick", true);
    paramJSONObject = paramJSONObject.optJSONObject("events");
    if (paramJSONObject != null) {
      this.b = paramJSONObject.optString("onClick", "");
    }
    this.h.setOnClickListener(new View.OnClickListener()
    {
      public final void onClick(View paramAnonymousView)
      {
        G.this.a(paramAnonymousView);
        if (!TextUtils.isEmpty(G.a(G.this))) {
          G.this.a(G.a(G.this));
        }
        if (G.this.f >= 0) {}
        for (paramAnonymousView = String.valueOf(G.this.f);; paramAnonymousView = null)
        {
          G.this.a(new I.a[] { new I.a("type", G.this.a()), new I.a("position", paramAnonymousView) });
          return;
        }
      }
    });
    if (paramBoolean)
    {
      d();
      if ((this instanceof L)) {
        ((L)this).g();
      }
      e();
    }
  }
  
  public final void a(boolean paramBoolean)
  {
    Object localObject = this;
    View localView = ((G)localObject).g;
    if (paramBoolean) {}
    for (int m = 0;; m = 8)
    {
      localView.setVisibility(m);
      if (((G)localObject).i == null) {
        return;
      }
      localObject = ((G)localObject).i;
      break;
    }
  }
  
  protected void a(I.a... paramVarArgs)
  {
    I.a(this.c, "slider", "widget", "click", paramVarArgs);
  }
  
  protected boolean b()
  {
    return true;
  }
  
  protected abstract void c();
  
  protected abstract void d();
  
  protected abstract void e();
  
  public final String h()
  {
    return this.j;
  }
  
  public final View i()
  {
    return this.g;
  }
  
  protected final int j()
  {
    int m = this.a;
    this.a = (m + 1);
    return m;
  }
  
  protected final void k()
  {
    if (this.k) {
      aQ.h().closeSliderMenu(true);
    }
  }
  
  protected final a l()
  {
    return this.l;
  }
  
  public static enum a
  {
    private a() {}
  }
}
