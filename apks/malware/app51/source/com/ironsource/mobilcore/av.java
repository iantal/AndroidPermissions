package com.ironsource.mobilcore;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.graphics.drawable.Drawable;
import android.text.TextUtils.TruncateAt;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.TextView;
import org.json.JSONException;
import org.json.JSONObject;

final class av
  extends H
{
  private final int a = 48;
  
  public av(Context paramContext, aw paramAw)
  {
    super(paramContext, paramAw);
  }
  
  public final String a()
  {
    return "sliderHeader";
  }
  
  public final void a(JSONObject paramJSONObject)
    throws JSONException
  {
    super.a(paramJSONObject, true);
  }
  
  protected final void c()
  {
    this.h = new RelativeLayout(this.c);
    this.h.setPadding(this.d.h(), this.d.j(), this.d.h(), this.d.j());
    this.h.setEnabled(false);
  }
  
  protected final void d()
  {
    ViewGroup localViewGroup = (ViewGroup)this.h;
    this.s = new ImageView(this.c);
    this.s.setId(j());
    RelativeLayout.LayoutParams localLayoutParams = new RelativeLayout.LayoutParams(B.a(this.c, 48.0F), B.a(this.c, 48.0F));
    localLayoutParams.addRule(15);
    localLayoutParams.rightMargin = B.a(this.c, 9.0F);
    this.s.setLayoutParams(localLayoutParams);
    localViewGroup.addView(this.s);
    this.p = new TextView(this.c);
    this.p.setBackgroundColor(0);
    localLayoutParams = new RelativeLayout.LayoutParams(-2, -2);
    localLayoutParams.addRule(1, this.s.getId());
    localLayoutParams.addRule(15);
    this.p.setLayoutParams(localLayoutParams);
    this.p.setId(j());
    this.p.setSingleLine();
    this.p.setEllipsize(TextUtils.TruncateAt.END);
    this.p.setTypeface(null, 1);
    this.p.setTextSize(2, 18.0F);
    localViewGroup.addView(this.p);
    this.d.a(true, this.d.b(), new TextView[] { this.p });
  }
  
  protected final void e()
  {
    Object localObject3 = null;
    PackageManager localPackageManager = this.c.getApplicationContext().getPackageManager();
    for (;;)
    {
      try
      {
        Object localObject1 = localPackageManager.getApplicationIcon(this.c.getPackageName());
        ApplicationInfo localApplicationInfo;
        localNameNotFoundException1.printStackTrace();
      }
      catch (PackageManager.NameNotFoundException localNameNotFoundException1)
      {
        try
        {
          localApplicationInfo = localPackageManager.getApplicationInfo(this.c.getPackageName(), 0);
          if (localObject1 != null) {
            this.s.setImageDrawable((Drawable)localObject1);
          }
          if (localApplicationInfo != null)
          {
            localObject1 = ((String)localPackageManager.getApplicationLabel(localApplicationInfo)).toUpperCase();
            this.p.setText(((String)localObject1).toUpperCase());
          }
          return;
        }
        catch (PackageManager.NameNotFoundException localNameNotFoundException2)
        {
          Object localObject2;
          for (;;) {}
        }
        localNameNotFoundException1 = localNameNotFoundException1;
        localObject1 = null;
      }
      localObject2 = localObject3;
    }
  }
  
  protected final boolean f()
  {
    return true;
  }
}
