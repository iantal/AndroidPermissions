package com.ironsource.mobilcore;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.AsyncTask;
import android.util.Log;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;

public final class aV
  extends RelativeLayout
{
  private ProgressBar a;
  private ImageView b;
  private AsyncTask<String, Void, Bitmap> c = new AsyncTask()
  {
    private static Bitmap a(String... paramAnonymousVarArgs)
    {
      str = paramAnonymousVarArgs[0].replace("file:///", "");
      paramAnonymousVarArgs = null;
      try
      {
        localObject = BitmapFactory.decodeFile(str);
        paramAnonymousVarArgs = (String[])localObject;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          Object localObject;
          Log.e("WebImageView load Error of url " + str, localException.getMessage());
          localException.printStackTrace();
        }
      }
      localObject = paramAnonymousVarArgs;
      if (paramAnonymousVarArgs == null)
      {
        Log.d("MobileCore", "Failed to load image " + str);
        localObject = B.a("iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjFGRDQ5OTMzNUQ5RDExRTNCQ0I0Q0U0QUU0NUM0OTJGIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjFGRDQ5OTM0NUQ5RDExRTNCQ0I0Q0U0QUU0NUM0OTJGIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6MUZENDk5MzE1RDlEMTFFM0JDQjRDRTRBRTQ1QzQ5MkYiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6MUZENDk5MzI1RDlEMTFFM0JDQjRDRTRBRTQ1QzQ5MkYiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz5gcz1cAAAQUUlEQVR42uyde3BU133H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");
      }
      return localObject;
    }
  };
  
  public aV(Context paramContext)
  {
    super(paramContext);
    this.b = new ImageView(paramContext);
    this.b.setLayoutParams(new RelativeLayout.LayoutParams(-1, -1));
    this.b.setVisibility(4);
    this.b.setScaleType(ImageView.ScaleType.CENTER_CROP);
    this.a = new ProgressBar(paramContext);
    paramContext = new RelativeLayout.LayoutParams(-2, -2);
    paramContext.addRule(13);
    this.a.setLayoutParams(paramContext);
    this.a.setVisibility(0);
    addView(this.b);
    addView(this.a);
  }
  
  public final void a(String paramString)
  {
    this.b.setVisibility(4);
    this.a.setVisibility(0);
    this.c.execute(new String[] { paramString });
  }
}
