package com.ironsource.mobilcore;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.text.TextUtils;
import android.webkit.WebView;
import android.widget.Toast;
import java.util.Arrays;
import java.util.HashMap;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpUriRequest;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

class aN
{
  private static HashMap<u.a, Long> a;
  
  aN() {}
  
  public static String a(JSONArray paramJSONArray)
  {
    try
    {
      JSONArray localJSONArray = new JSONArray();
      int i = 0;
      while (i < paramJSONArray.length())
      {
        localJSONArray.put(i, b(paramJSONArray.getJSONObject(i)));
        i += 1;
      }
      paramJSONArray = localJSONArray.toString();
      return paramJSONArray;
    }
    catch (JSONException paramJSONArray)
    {
      aE.a(MobileCore.c(), aN.class.getName(), paramJSONArray);
    }
    return null;
  }
  
  public static void a(Activity paramActivity, WebView paramWebView, JSONObject paramJSONObject, String paramString1, String paramString2)
  {
    aE.a(MobileCore.c(), paramString2, paramString1, aJ.a.e, c(paramJSONObject), null);
    String str = paramJSONObject.optString("click");
    if (TextUtils.isEmpty(str))
    {
      A.a("ReportHelper | handleOfferClick click url is empty!", 3);
      return;
    }
    if (str.startsWith("market://"))
    {
      a(str, paramString1, paramString2, paramJSONObject);
      return;
    }
    if (paramActivity != null) {
      j.a(paramActivity);
    }
    paramWebView.loadUrl(str);
  }
  
  public static void a(u.a paramA)
  {
    if (a == null) {
      a = new HashMap();
    }
    a.put(paramA, Long.valueOf(System.currentTimeMillis()));
  }
  
  public static void a(u.a paramA, I.a... paramVarArgs)
  {
    if ((a == null) || (!a.containsKey(paramA))) {}
    Long localLong;
    do
    {
      return;
      localLong = (Long)a.get(paramA);
    } while (localLong == null);
    if ((paramVarArgs != null) && (paramVarArgs.length > 0)) {}
    for (paramVarArgs = (I.a[])Arrays.copyOf(paramVarArgs, paramVarArgs.length + 1);; paramVarArgs = new I.a[1])
    {
      long l1 = System.currentTimeMillis();
      long l2 = localLong.longValue();
      paramVarArgs[(paramVarArgs.length - 1)] = new I.a("duration", String.valueOf(l1 - l2));
      I.a(MobileCore.c(), paramA.a(), "time_measurement", paramA.b(), paramVarArgs);
      a.remove(paramA);
      return;
    }
  }
  
  public static void a(String paramString1, String paramString2, String paramString3, JSONObject paramJSONObject)
  {
    Object localObject = new Intent("android.intent.action.VIEW", Uri.parse(paramString1));
    ((Intent)localObject).setFlags(268435456);
    MobileCore.c().startActivity((Intent)localObject);
    localObject = "AI";
    String str2 = aE.g(paramString1);
    String str1 = c(paramJSONObject);
    paramString1 = (String)localObject;
    if (!aE.b(MobileCore.c(), str2))
    {
      aE.a(MobileCore.c(), paramString2, str2, str1, 0, paramString3, -1);
      paramString1 = "S";
    }
    aE.a(MobileCore.c(), paramString3, paramString2, paramString1, str1);
    try
    {
      a(u.a.c, new I.a[] { new I.a("offer", b(paramJSONObject)) });
      return;
    }
    catch (JSONException paramString1)
    {
      paramString1.printStackTrace();
    }
  }
  
  public static void a(JSONObject paramJSONObject)
  {
    Object localObject = new HttpGet(paramJSONObject.optString("impression"));
    HttpClient localHttpClient = aE.a();
    try
    {
      localObject = localHttpClient.execute((HttpUriRequest)localObject);
      int i = ((HttpResponse)localObject).getStatusLine().getStatusCode();
      ((HttpResponse)localObject).getEntity().consumeContent();
      paramJSONObject.put("impressionResult", i);
      return;
    }
    catch (Exception localException)
    {
      try
      {
        paramJSONObject.putOpt("impressionResult", Integer.valueOf(-1));
        return;
      }
      catch (JSONException paramJSONObject)
      {
        aE.a(MobileCore.c(), aN.class.getName(), paramJSONObject);
      }
    }
  }
  
  public static boolean a(String paramString)
  {
    return paramString.startsWith("market://");
  }
  
  public static JSONObject b(JSONObject paramJSONObject)
    throws JSONException
  {
    int i = 0;
    JSONObject localJSONObject = new JSONObject();
    if (paramJSONObject != null)
    {
      Object localObject = paramJSONObject.optString("id").split("-")[0];
      String str = paramJSONObject.optString("impressionResult");
      localJSONObject.putOpt("Name", paramJSONObject.optString("title"));
      localJSONObject.putOpt("Feed", paramJSONObject.optString("aff"));
      localJSONObject.putOpt("Type", paramJSONObject.optString("type"));
      localJSONObject.putOpt("cpi", paramJSONObject.optString("cpi"));
      localJSONObject.putOpt("Number", paramJSONObject.optString("index"));
      localJSONObject.putOpt("TransID", localObject);
      if (str != null) {
        localJSONObject.putOpt("impressionResult", str);
      }
      paramJSONObject = paramJSONObject.optJSONArray("extra");
      for (;;)
      {
        if ((paramJSONObject != null) && (i < paramJSONObject.length()))
        {
          localObject = paramJSONObject.optJSONObject(i);
          try
          {
            if ("report".equals(((JSONObject)localObject).getString("type"))) {
              localJSONObject.put(((JSONObject)localObject).getString("name"), ((JSONObject)localObject).getString("value"));
            }
            i += 1;
          }
          catch (JSONException localJSONException)
          {
            for (;;)
            {
              A.a("parseExtra | Error: " + localJSONException.getLocalizedMessage(), 2);
            }
          }
        }
      }
    }
    return localJSONObject;
  }
  
  public static void b(String paramString1, String paramString2, String paramString3, JSONObject paramJSONObject)
  {
    A.a("Starting apk installation process " + paramString1, 3);
    if (!aE.b(MobileCore.c(), paramJSONObject.optString("appId")))
    {
      A.a("Got ApkDownload type with url: " + paramString1, 55);
      try
      {
        String str2 = paramJSONObject.getString("appId");
        String str3 = paramJSONObject.getString("img");
        A.a("Utils/imgpath = " + str3, 55);
        String str1 = "Already downloading this offer";
        if (!r.a().a(str2))
        {
          r.a().a(paramString1, str2, str3, c(paramJSONObject), paramString3, -1L, true, paramString2);
          str1 = "The app will be downloaded to your device shortly";
        }
        Toast.makeText(MobileCore.c(), str1, 1).show();
        return;
      }
      catch (Exception paramString1)
      {
        A.a("handleAPKDownloadUrl error: " + paramString1.getMessage(), 3);
        return;
      }
    }
    Toast.makeText(MobileCore.c(), "Application already installed", 1).show();
    aE.a(MobileCore.c(), paramString3, paramString2, "AI", c(paramJSONObject));
  }
  
  public static String c(JSONObject paramJSONObject)
  {
    try
    {
      paramJSONObject = b(paramJSONObject).toString();
      return paramJSONObject;
    }
    catch (JSONException paramJSONObject)
    {
      aE.a(MobileCore.c(), aN.class.getName(), paramJSONObject);
    }
    return null;
  }
}
