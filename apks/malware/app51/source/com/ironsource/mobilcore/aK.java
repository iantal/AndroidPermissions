package com.ironsource.mobilcore;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;

final class aK
{
  protected static int a(Context paramContext)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    if ((paramContext != null) && (paramContext.isConnected()))
    {
      if (paramContext.getTypeName().equalsIgnoreCase("MOBILE")) {
        return 1;
      }
      if (paramContext.getTypeName().equalsIgnoreCase("WIFI")) {
        return 0;
      }
      if (paramContext.getTypeName().equalsIgnoreCase("WIMAX")) {
        return 2;
      }
      if (paramContext.getTypeName().equalsIgnoreCase("ETHERNET")) {
        return 3;
      }
    }
    return -1;
  }
  
  protected static boolean a(Context paramContext, int paramInt)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getAllNetworkInfo();
    if (paramContext == null)
    {
      A.a("NetworkUtils/isConnectionPossible | NetworkInfo is null.", 3);
      return false;
    }
    int j = paramContext.length;
    int i = 0;
    if (i < j)
    {
      Object localObject = paramContext[i];
      A.a("network detected: " + localObject.getTypeName(), 55);
      switch (paramInt)
      {
      default: 
        A.a("NetworkUtils/isConnectionPossible | error: connection requested is not defined in NetworkUtils.", 3);
      }
      do
      {
        do
        {
          do
          {
            do
            {
              i += 1;
              break;
            } while ((!localObject.getTypeName().equalsIgnoreCase("MOBILE")) || (!localObject.isAvailable()));
            return true;
          } while ((!localObject.getTypeName().equalsIgnoreCase("WIFI")) || (!localObject.isAvailable()));
          return true;
        } while ((!localObject.getTypeName().equalsIgnoreCase("WIMAX")) || (!localObject.isAvailable()));
        return true;
      } while ((!localObject.getTypeName().equalsIgnoreCase("ETHERNET")) || (!localObject.isAvailable()));
      return true;
    }
    return false;
  }
  
  protected static boolean b(Context paramContext)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    return (paramContext != null) && (paramContext.isConnected());
  }
}
