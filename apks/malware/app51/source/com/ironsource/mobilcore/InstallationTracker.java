package com.ironsource.mobilcore;

import android.annotation.SuppressLint;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.pm.PackageManager;
import android.os.Build.VERSION;

public class InstallationTracker
  extends BroadcastReceiver
{
  protected static final int[] a = { 0, 1, 2, 5, 8, 10, 15, 20, 30, 45, 60, 120, 240 };
  private Context b;
  private SharedPreferences c;
  
  public InstallationTracker() {}
  
  @SuppressLint({"InlinedApi"})
  private static SharedPreferences a(Context paramContext)
  {
    if (Build.VERSION.SDK_INT >= 9) {
      return paramContext.getSharedPreferences("inst_tracker_spref_file_name", 4);
    }
    return paramContext.getSharedPreferences("inst_tracker_spref_file_name", 0);
  }
  
  private void a(Context paramContext, String paramString)
  {
    String str = "tracked_package_" + paramString;
    if (this.c == null) {
      this.c = a(paramContext);
    }
    if (this.c.getBoolean(str, false))
    {
      this.c.edit().remove(str).commit();
      A.a("InstallationTracker | removing instTracking sPref of " + paramString, 55);
      return;
    }
    A.a("InstallationTracker | cannot remove instTracking sPref of " + paramString + ". It doesn't exist.", 55);
  }
  
  private void a(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    aE.a(this.b, paramString1, paramString2, paramString4, paramString3);
  }
  
  private boolean a(String paramString)
  {
    PackageManager localPackageManager = this.b.getPackageManager();
    try
    {
      localPackageManager.getPackageInfo(paramString, 1);
      return true;
    }
    catch (Exception paramString) {}
    return false;
  }
  
  protected final void a(Intent paramIntent)
  {
    String str1 = paramIntent.getStringExtra("s#ge1%dms#ga1%dns#g_s#ges#ggs#ga1%dks#gcs#ga1%dps#g_s#ga1%dr1%dt1%dxs#ge");
    String str2 = paramIntent.getStringExtra("com.ironsource.mobilcore.MobileCoreReport_extra_offer");
    String str3 = paramIntent.getStringExtra("com.ironsource.mobilcore.MobileCoreReport_extra_flow_type");
    String str4 = paramIntent.getStringExtra("com.ironsource.mobilcore.extra_download_filename");
    String str5 = paramIntent.getStringExtra("com.ironsource.mobilecore.MobileCoreReport_extra_flow");
    int j = paramIntent.getIntExtra("com.ironsource.mobilecore.prefs_tracker_id", 0);
    A.a("InstallationTracker | Got package name: " + str1, 55);
    String str6;
    if (j == -1)
    {
      paramIntent = this.b;
      str6 = "tracked_package_" + str1;
      if (this.c == null) {
        this.c = a(paramIntent);
      }
      if (!this.c.getBoolean(str6, false)) {
        break label335;
      }
      A.a("InstallationTracker | isInstallationTracked true", 55);
    }
    boolean bool;
    for (int i = 1; i == 0; i = 0)
    {
      paramIntent = this.b;
      str6 = "tracked_package_" + str1;
      if (this.c == null) {
        this.c = a(paramIntent);
      }
      this.c.edit().putBoolean(str6, true).commit();
      A.a("InstallationTracker | adding instTracking sPref of " + str1, 55);
      A.a("InstallationTracker | monitoring market install", 55);
      if (!a(str1)) {
        break label355;
      }
      a(str5, str3, str2, "+");
      A.a("InstallationTracker | MMM Market inst successful " + str1, 55);
      if (str4 != null)
      {
        bool = this.b.deleteFile(str4);
        A.a("InstallationTracker | MMM Making sure deletion of: " + str4 + ". result: " + bool, 55);
      }
      a(this.b, str1);
      return;
      label335:
      A.a("InstallationTracker | isInstallationTracked false", 55);
    }
    A.a("InstallationTracker | not monitoring market install", 55);
    return;
    label355:
    if (j == a.length - 1)
    {
      A.a("InstallationTracker | Reporting install failure!", 55);
      a(str5, str3, str2, "S-");
      if (str4 != null)
      {
        bool = this.b.deleteFile(str4);
        A.a("InstallationTracker | Making sure deletion of: " + str4 + ". result: " + bool, 55);
      }
      A.a("InstallationTracker | Market inst unsuccessful" + str1, 55);
      a(this.b, str1);
      return;
    }
    j += 1;
    i = a[0];
    if (j > 1) {
      i = a[(j - 1)];
    }
    for (;;)
    {
      int k = a[j];
      A.a("InstallationTracker | TrackInstallationFromMarket | trackingCount = " + i + " next check will come in " + (k - i), 55);
      A.a("InstallationTracker | Report failure false setting check time to " + k, 55);
      aE.a(this.b, str3, str1, str2, k - i, str5, j);
      return;
    }
  }
  
  @SuppressLint({"InlinedApi"})
  public void onReceive(final Context paramContext, final Intent paramIntent)
  {
    new Thread(new Runnable()
    {
      public final void run()
      {
        A.a("InstallationTracker | Got to installationTracker", 55);
        InstallationTracker.a(InstallationTracker.this, paramContext);
        InstallationTracker.this.a(paramIntent);
      }
    }).start();
  }
}
