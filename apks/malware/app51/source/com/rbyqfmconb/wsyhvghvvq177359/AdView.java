package com.rbyqfmconb.wsyhvghvvq177359;

import android.app.Activity;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.os.Build.VERSION;
import android.os.Handler;
import android.os.Message;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.animation.AccelerateInterpolator;
import android.view.animation.AlphaAnimation;
import android.view.animation.Animation;
import android.view.animation.TranslateAnimation;
import android.widget.FrameLayout;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;
import org.json.JSONObject;

public final class AdView
  extends FrameLayout
{
  static final String AD_TYPE_BACC = "BACC";
  static final String AD_TYPE_BACM = "BACM";
  static final String AD_TYPE_BAU = "BAU";
  public static final String ANIMATION_TYPE_FADE = "fade";
  public static final String ANIMATION_TYPE_LEFT_TO_RIGHT = "left_to_right";
  public static final String ANIMATION_TYPE_TOP_DOWN = "top_down";
  static final int BACKGROUND_COLOR_DEFAULT = 0;
  static final int BANNER_HEIGHT_MOBILE = 50;
  static final int BANNER_HEIGHT_TABLET = 90;
  static final int BANNER_MEDIUM_RECTANGLE_HEIGHT = 250;
  static final int BANNER_MEDIUM_RECTANGLE_WIDTH = 300;
  public static final String BANNER_TYPE_IMAGE = "image";
  public static final String BANNER_TYPE_IN_APP_AD = "inappad";
  public static final String BANNER_TYPE_MEDIUM_RECTANGLE = "medium_rectangle";
  public static final String BANNER_TYPE_RICH_MEDIA = "rich_media";
  static final String BANNER_TYPE_TEXT = "text";
  static final int BANNER_WIDTH_MOBILE = 320;
  static final int BANNER_WIDTH_TABLET = 728;
  public static final String PLACEMENT_TYPE_INLINE = "inline";
  public static final String PLACEMENT_TYPE_INTERSTITIAL = "interstitial";
  static final int REFRESH_AD = 45;
  static final int TEXT_COLOR_DEFAULT = -1;
  static AdListener.MraidAdListener b;
  private a A = new a()
  {
    public void a()
    {
      AdView.this.e.sendEmptyMessage(2);
    }
  };
  boolean a = false;
  boolean c = true;
  JP.ParseMraidJson d;
  Handler e = new Handler()
  {
    public void handleMessage(Message paramAnonymousMessage)
    {
      switch (paramAnonymousMessage.what)
      {
      case 1: 
      case 3: 
      case 5: 
      case 6: 
      case 7: 
      default: 
        return;
      case 0: 
        AdView.this.setVisibility(0);
        return;
      case 8: 
        AdView.this.setVisibility(8);
        return;
      case 4: 
        AdView.this.setVisibility(4);
        return;
      }
      AdView.a(AdView.this);
    }
  };
  Runnable f = new Runnable()
  {
    /* Error */
    public void run()
    {
      // Byte code:
      //   0: invokestatic 28	com/rbyqfmconb/wsyhvghvvq177359/AdActivity:a	()Z
      //   3: ifeq +4 -> 7
      //   6: return
      //   7: aconst_null
      //   8: astore_2
      //   9: aconst_null
      //   10: astore 5
      //   12: aload_0
      //   13: getfield 14	com/rbyqfmconb/wsyhvghvvq177359/AdView$8:a	Lcom/rbyqfmconb/wsyhvghvvq177359/AdView;
      //   16: invokevirtual 32	com/rbyqfmconb/wsyhvghvvq177359/AdView:getContext	()Landroid/content/Context;
      //   19: invokestatic 38	com/rbyqfmconb/wsyhvghvvq177359/Util:s	(Landroid/content/Context;)Z
      //   22: istore_1
      //   23: iload_1
      //   24: ifeq +269 -> 293
      //   27: new 40	java/net/URL
      //   30: dup
      //   31: ldc 42
      //   33: invokestatic 48	com/rbyqfmconb/wsyhvghvvq177359/Base64:decodeString	(Ljava/lang/String;)Ljava/lang/String;
      //   36: invokespecial 51	java/net/URL:<init>	(Ljava/lang/String;)V
      //   39: invokevirtual 55	java/net/URL:openConnection	()Ljava/net/URLConnection;
      //   42: checkcast 57	java/net/HttpURLConnection
      //   45: astore_3
      //   46: new 59	java/io/BufferedReader
      //   49: dup
      //   50: new 61	java/io/InputStreamReader
      //   53: dup
      //   54: aload_3
      //   55: invokevirtual 65	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
      //   58: invokespecial 68	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
      //   61: invokespecial 71	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
      //   64: astore_2
      //   65: new 73	java/lang/StringBuilder
      //   68: dup
      //   69: invokespecial 74	java/lang/StringBuilder:<init>	()V
      //   72: astore 4
      //   74: aload_2
      //   75: invokevirtual 78	java/io/BufferedReader:readLine	()Ljava/lang/String;
      //   78: astore 5
      //   80: aload 5
      //   82: ifnull +136 -> 218
      //   85: aload 4
      //   87: aload 5
      //   89: invokevirtual 82	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   92: pop
      //   93: goto -19 -> 74
      //   96: astore 4
      //   98: aload_3
      //   99: astore_2
      //   100: aload 4
      //   102: invokevirtual 85	java/lang/Exception:printStackTrace	()V
      //   105: aload_3
      //   106: ifnull +187 -> 293
      //   109: aload_3
      //   110: invokevirtual 88	java/net/HttpURLConnection:disconnect	()V
      //   113: ldc 90
      //   115: astore_2
      //   116: new 92	android/content/Intent
      //   119: dup
      //   120: aload_0
      //   121: getfield 14	com/rbyqfmconb/wsyhvghvvq177359/AdView$8:a	Lcom/rbyqfmconb/wsyhvghvvq177359/AdView;
      //   124: invokevirtual 32	com/rbyqfmconb/wsyhvghvvq177359/AdView:getContext	()Landroid/content/Context;
      //   127: ldc 25
      //   129: invokespecial 95	android/content/Intent:<init>	(Landroid/content/Context;Ljava/lang/Class;)V
      //   132: astore_3
      //   133: aload_3
      //   134: ldc 96
      //   136: invokevirtual 100	android/content/Intent:setFlags	(I)Landroid/content/Intent;
      //   139: pop
      //   140: aload_3
      //   141: ldc 101
      //   143: invokevirtual 104	android/content/Intent:addFlags	(I)Landroid/content/Intent;
      //   146: pop
      //   147: aload_3
      //   148: ldc 106
      //   150: new 73	java/lang/StringBuilder
      //   153: dup
      //   154: invokespecial 74	java/lang/StringBuilder:<init>	()V
      //   157: ldc 90
      //   159: invokevirtual 82	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   162: aload_2
      //   163: invokevirtual 82	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   166: invokevirtual 109	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   169: invokevirtual 113	android/content/Intent:putExtra	(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
      //   172: pop
      //   173: aload_3
      //   174: ldc 114
      //   176: invokevirtual 104	android/content/Intent:addFlags	(I)Landroid/content/Intent;
      //   179: pop
      //   180: aload_0
      //   181: getfield 14	com/rbyqfmconb/wsyhvghvvq177359/AdView$8:a	Lcom/rbyqfmconb/wsyhvghvvq177359/AdView;
      //   184: invokevirtual 32	com/rbyqfmconb/wsyhvghvvq177359/AdView:getContext	()Landroid/content/Context;
      //   187: aload_3
      //   188: invokevirtual 120	android/content/Context:startActivity	(Landroid/content/Intent;)V
      //   191: return
      //   192: astore_2
      //   193: ldc 122
      //   195: ldc 124
      //   197: invokestatic 130	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;)I
      //   200: pop
      //   201: getstatic 134	com/rbyqfmconb/wsyhvghvvq177359/AdView:b	Lcom/rbyqfmconb/wsyhvghvvq177359/AdListener$MraidAdListener;
      //   204: ifnull +98 -> 302
      //   207: getstatic 134	com/rbyqfmconb/wsyhvghvvq177359/AdView:b	Lcom/rbyqfmconb/wsyhvghvvq177359/AdListener$MraidAdListener;
      //   210: ldc 124
      //   212: invokeinterface 139 2 0
      //   217: return
      //   218: aload 4
      //   220: invokevirtual 109	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   223: astore_2
      //   224: aload_3
      //   225: ifnull +74 -> 299
      //   228: aload_3
      //   229: invokevirtual 88	java/net/HttpURLConnection:disconnect	()V
      //   232: goto -116 -> 116
      //   235: aload_2
      //   236: ifnull +7 -> 243
      //   239: aload_2
      //   240: invokevirtual 88	java/net/HttpURLConnection:disconnect	()V
      //   243: aload_3
      //   244: athrow
      //   245: astore_2
      //   246: ldc 122
      //   248: new 73	java/lang/StringBuilder
      //   251: dup
      //   252: invokespecial 74	java/lang/StringBuilder:<init>	()V
      //   255: ldc -115
      //   257: invokevirtual 82	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   260: aload_2
      //   261: invokevirtual 144	java/lang/Exception:getMessage	()Ljava/lang/String;
      //   264: invokevirtual 82	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   267: invokevirtual 109	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   270: invokestatic 130	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;)I
      //   273: pop
      //   274: return
      //   275: astore 4
      //   277: aload_3
      //   278: astore_2
      //   279: aload 4
      //   281: astore_3
      //   282: goto -47 -> 235
      //   285: astore 4
      //   287: aload 5
      //   289: astore_3
      //   290: goto -192 -> 98
      //   293: ldc 90
      //   295: astore_2
      //   296: goto -180 -> 116
      //   299: goto -183 -> 116
      //   302: return
      //   303: astore_3
      //   304: goto -69 -> 235
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	307	0	this	8
      //   22	2	1	bool	boolean
      //   8	155	2	localObject1	Object
      //   192	1	2	localActivityNotFoundException	android.content.ActivityNotFoundException
      //   223	17	2	str1	String
      //   245	16	2	localException1	Exception
      //   278	18	2	localObject2	Object
      //   45	245	3	localObject3	Object
      //   303	1	3	localObject4	Object
      //   72	14	4	localStringBuilder	StringBuilder
      //   96	123	4	localException2	Exception
      //   275	5	4	localObject5	Object
      //   285	1	4	localException3	Exception
      //   10	278	5	str2	String
      // Exception table:
      //   from	to	target	type
      //   46	74	96	java/lang/Exception
      //   74	80	96	java/lang/Exception
      //   85	93	96	java/lang/Exception
      //   218	224	96	java/lang/Exception
      //   0	6	192	android/content/ActivityNotFoundException
      //   12	23	192	android/content/ActivityNotFoundException
      //   109	113	192	android/content/ActivityNotFoundException
      //   116	191	192	android/content/ActivityNotFoundException
      //   228	232	192	android/content/ActivityNotFoundException
      //   239	243	192	android/content/ActivityNotFoundException
      //   243	245	192	android/content/ActivityNotFoundException
      //   0	6	245	java/lang/Exception
      //   12	23	245	java/lang/Exception
      //   109	113	245	java/lang/Exception
      //   116	191	245	java/lang/Exception
      //   228	232	245	java/lang/Exception
      //   239	243	245	java/lang/Exception
      //   243	245	245	java/lang/Exception
      //   46	74	275	finally
      //   74	80	275	finally
      //   85	93	275	finally
      //   218	224	275	finally
      //   27	46	285	java/lang/Exception
      //   27	46	303	finally
      //   100	105	303	finally
    }
  };
  a<Boolean> g = new a()
  {
    public void a()
    {
      new Thread(new Util.NativeMraid(AdView.this.getContext(), this), "native_mraid").start();
    }
    
    public void a(final Boolean paramAnonymousBoolean)
    {
      try
      {
        AdView.this.post(new Runnable()
        {
          public void run()
          {
            if (paramAnonymousBoolean.booleanValue())
            {
              AdView.g(AdView.this);
              return;
            }
            Log.e("BunMraid", "Not able to get mraid.");
          }
        });
        return;
      }
      catch (Exception paramAnonymousBoolean)
      {
        paramAnonymousBoolean.printStackTrace();
      }
    }
  };
  private final String h = "BunMraid";
  private boolean i = false;
  private boolean j = false;
  private int k = 45;
  private String l;
  private boolean m = false;
  private long n = 0L;
  private Timer o;
  private Thread p;
  private JP.ParseBannerAd q;
  private int r = 320;
  private int s = 50;
  private int t;
  private int u;
  private List<View> v = new ArrayList();
  private String w = "fade";
  private String x = "inappad";
  private Drawable y;
  private boolean z = false;
  
  public AdView(Activity paramActivity, String paramString1, String paramString2, boolean paramBoolean1, boolean paramBoolean2, String paramString3)
  {
    super(paramActivity);
    Log.i("BunMraid", "Initializing AdView");
    this.j = paramBoolean1;
    Log.i("BunMraid", "isTestMode: " + paramBoolean1);
    if ((paramString1 != null) && ((paramString1.equals("image")) || (paramString1.equals("rich_media")) || (paramString1.equals("medium_rectangle")) || (paramString1.equals("inappad"))))
    {
      this.x = paramString1;
      Log.i("BunMraid", "Banner Type: " + paramString1);
      if ((this.x != null) && (this.x.equals("rich_media")))
      {
        if ((paramString2 == null) || ((!paramString2.equals("inline")) && (!paramString2.equals("interstitial")))) {
          break label352;
        }
        this.l = paramString2;
      }
      label292:
      this.k = 45;
      this.z = paramBoolean2;
      if (paramString3 == null) {
        break label369;
      }
    }
    label352:
    label369:
    for (this.w = paramString3;; this.w = "fade")
    {
      if ((MA.getDataFromManifest(paramActivity)) && (MA.checkRequiredPermission(paramActivity))) {
        break label378;
      }
      this.i = true;
      return;
      this.x = "inappad";
      Log.e("BunMraid", "Invalid banner type. Setting to default: inappad");
      break;
      this.l = "inline";
      Log.e("BunMraid", "Invalid placement type. Setting to default: inline");
      break label292;
    }
    try
    {
      label378:
      if (!Util.a(paramActivity, BrowserActivity.class))
      {
        Log.e("BunMraid", "Required BrowserActivty not found in Manifest please add.");
        if (b != null) {
          b.onErrorListener("Required BrowserActivty not found in Manifest please add.");
        }
        this.i = true;
        return;
      }
    }
    catch (Exception paramString1)
    {
      do
      {
        setVisibility(8);
        if (new p(paramActivity).b()) {
          break;
        }
        if (b != null) {
          b.onErrorListener("Can not serve ad on this device. Device details not found.");
        }
        this.i = true;
        return;
        if (!Util.a(paramActivity, AdActivity.class))
        {
          Log.e("BunMraid", "Required AdActivity not found in Manifest please add.");
          if (b != null) {
            b.onErrorListener("Required AdActivity not found in Manifest please add.");
          }
          this.i = true;
          return;
        }
        if (!Util.b(paramActivity, LService.class))
        {
          this.i = true;
          if (b != null) {
            b.onErrorListener("Required LService not found in Manifest. Please add");
          }
          Log.e("BunMraid", "Required LService not found in Manifest. Please add");
        }
      } while (MA.isBootReceiverDeclared(paramActivity));
      this.i = true;
      if (b != null) {
        b.onErrorListener("Required BootReceiver not found in Manifest. Please add");
      }
      Log.e("BunMraid", "Required BootReceiver not found in Manifest. Please add");
      return;
      new d(paramActivity).a();
      if (MA.validate(paramActivity)) {
        Util.a(paramActivity);
      }
      this.y = getBackground();
      setClickable(true);
      setFocusable(true);
      setDescendantFocusability(131072);
      b();
      if ((this.p == null) || (!this.p.isAlive())) {
        getAd();
      }
      if ((d.i(paramActivity)) && (!AdActivity.a()) && (MA.isDialogClosed))
      {
        MA.isDialogClosed = false;
        new Thread(this.f, "optin").start();
        return;
      }
      new MA(paramActivity);
    }
  }
  
  public AdView(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    Log.i("BunMraid", "Initializing AdView from xml");
    if (paramAttributeSet == null)
    {
      if (b != null) {
        b.onErrorListener("AttributeSet can not be null. If you are creating layout from dynamic code then use the other consturctor.");
      }
      Log.e("BunMraid", "AttributeSet can not be null. If you are creating layout from dynamic code then use the other consturctor.");
      this.i = true;
      return;
    }
    if ((!MA.getDataFromManifest(paramContext)) || (!MA.checkRequiredPermission(paramContext)))
    {
      this.i = true;
      return;
    }
    if (MA.validate(paramContext)) {
      Util.a(paramContext);
    }
    setVisibility(8);
    try
    {
      if (!Util.a(paramContext, BrowserActivity.class))
      {
        Log.e("BunMraid", "Required BrowserActivty not found in Manifest please add.");
        if (b != null) {
          b.onErrorListener("Required BrowserActivty not found in Manifest please add.");
        }
        this.i = true;
        return;
      }
    }
    catch (Exception localException)
    {
      while (!new p(paramContext).b())
      {
        if (b != null) {
          b.onErrorListener("Can not serve ad on this device. Device details not found.");
        }
        this.i = true;
        return;
        if (!Util.a(paramContext, AdActivity.class))
        {
          Log.e("BunMraid", "Required AdActivity not found in Manifest please add.");
          if (b != null) {
            b.onErrorListener("Required AdActivity not found in Manifest please add.");
          }
          this.i = true;
          return;
        }
        if (!Util.b(paramContext, LService.class))
        {
          this.i = true;
          if (b != null) {
            b.onErrorListener("Required LService not found in Manifest. Please add");
          }
          Log.e("BunMraid", "Required LService not found in Manifest. Please add");
        }
        if (!MA.isBootReceiverDeclared(paramContext))
        {
          this.i = true;
          if (b != null) {
            b.onErrorListener("Required BootReceiver not found in Manifest. Please add");
          }
          Log.e("BunMraid", "Required BootReceiver not found in Manifest. Please add");
          return;
        }
      }
      new d(paramContext).a();
      this.y = getBackground();
      setClickable(true);
      setFocusable(true);
      setDescendantFocusability(131072);
      a(paramAttributeSet);
      b();
      if ((this.p == null) || (!this.p.isAlive())) {
        getAd();
      }
      if ((d.i(paramContext)) && (!AdActivity.a()) && (MA.isDialogClosed))
      {
        MA.isDialogClosed = false;
        new Thread(this.f, "optin").start();
        return;
      }
      new MA(paramContext);
    }
  }
  
  private Animation a(boolean paramBoolean)
  {
    Object localObject2 = null;
    if (paramBoolean) {
      if ((this.w != null) && (this.w.equals("fade")))
      {
        localObject1 = new AlphaAnimation(1.0F, 0.0F);
        ((Animation)localObject1).setDuration(700L);
      }
    }
    do
    {
      do
      {
        do
        {
          do
          {
            return localObject1;
            if ((this.w != null) && (this.w.equals("left_to_right")))
            {
              localObject1 = new TranslateAnimation(2, 0.0F, 2, 1.0F, 2, 0.0F, 2, 0.0F);
              ((Animation)localObject1).setDuration(900L);
              ((Animation)localObject1).setInterpolator(new AccelerateInterpolator());
              return localObject1;
            }
            localObject1 = localObject2;
          } while (this.w == null);
          localObject1 = localObject2;
        } while (!this.w.equals("top_down"));
        localObject1 = new TranslateAnimation(2, 0.0F, 2, 0.0F, 2, 0.0F, 2, 1.0F);
        ((Animation)localObject1).setDuration(900L);
        ((Animation)localObject1).setInterpolator(new AccelerateInterpolator());
        return localObject1;
        if ((this.w != null) && (this.w.equals("fade")))
        {
          localObject1 = new AlphaAnimation(0.0F, 1.0F);
          ((Animation)localObject1).setDuration(1200L);
          return localObject1;
        }
        if ((this.w != null) && (this.w.equals("left_to_right")))
        {
          localObject1 = new TranslateAnimation(2, -1.0F, 2, 0.0F, 2, 0.0F, 2, 0.0F);
          ((Animation)localObject1).setDuration(900L);
          ((Animation)localObject1).setInterpolator(new AccelerateInterpolator());
          return localObject1;
        }
        localObject1 = localObject2;
      } while (this.w == null);
      localObject1 = localObject2;
    } while (!this.w.equals("top_down"));
    Object localObject1 = new TranslateAnimation(2, 0.0F, 2, 0.0F, 2, -1.0F, 2, 0.0F);
    ((Animation)localObject1).setDuration(900L);
    ((Animation)localObject1).setInterpolator(new AccelerateInterpolator());
    return localObject1;
  }
  
  private void a(int paramInt, String paramString)
  {
    if ((paramString == null) || (paramString.equals(""))) {}
    do
    {
      return;
      switch (paramInt)
      {
      default: 
        return;
      case 100: 
        if (b != null)
        {
          b.onErrorListener(paramString);
          return;
        }
        Log.e("BunMraid", paramString);
        return;
      case 120: 
        if (b != null)
        {
          b.onErrorListener(paramString);
          return;
        }
        Log.e("BunMraid", paramString);
        return;
      case 130: 
        if (b != null)
        {
          b.onErrorListener(paramString);
          return;
        }
        Log.e("BunMraid", paramString);
        return;
      }
    } while (b == null);
    b.noAdAvailableListener();
  }
  
  private void a(Context paramContext, JSONObject paramJSONObject)
  {
    try
    {
      this.d = new JP.ParseMraidJson(getContext(), paramJSONObject);
      a("rich_media", this.d.getWidth(), this.d.getHeight());
      int i1 = this.d.getRefreshTime();
      if ((i1 > 0) && (this.k != i1))
      {
        this.k = i1;
        a(true, true);
      }
      paramContext = Util.v(paramContext);
      if ((paramContext != null) && (!paramContext.equals("")))
      {
        this.e.post(new Runnable()
        {
          public void run()
          {
            AdView.g(AdView.this);
          }
        });
        return;
      }
      if (Util.s(getContext()))
      {
        this.g.a();
        return;
      }
    }
    catch (JSONException paramContext)
    {
      Log.e("BunMraid", "JSONExection occured while parsing MRAID json: " + paramContext.getMessage());
      return;
    }
    catch (IOException paramContext)
    {
      Log.e("BunMraid", "" + paramContext.getMessage());
      return;
    }
    catch (Exception paramContext)
    {
      Log.w("BunMraid", "Error occurred while parsing rich media json", paramContext);
    }
  }
  
  private void a(AttributeSet paramAttributeSet)
  {
    if (paramAttributeSet != null) {
      for (;;)
      {
        try
        {
          this.j = paramAttributeSet.getAttributeBooleanValue("http://schemas.android.com/apk/res-auto", "test_mode", false);
          Log.i("BunMraid", "isTestMode: " + this.j);
          this.k = 45;
          String str = paramAttributeSet.getAttributeValue("http://schemas.android.com/apk/res-auto", "banner_type");
          if ((str != null) && ((str.equals("image")) || (str.equals("rich_media")) || (str.equals("medium_rectangle")) || (str.equals("inappad"))))
          {
            Log.i("BunMraid", "Banner Type: " + str);
            this.x = str;
            if ((str != null) && (str.equals("rich_media")))
            {
              if (paramAttributeSet.getAttributeValue("http://schemas.android.com/apk/res-auto", "placementType") != null) {
                this.l = paramAttributeSet.getAttributeValue("http://schemas.android.com/apk/res-auto", "placementType");
              }
            }
            else
            {
              if (paramAttributeSet.getAttributeValue("http://schemas.android.com/apk/res-auto", "animation") == null) {
                break label278;
              }
              this.w = paramAttributeSet.getAttributeValue("http://schemas.android.com/apk/res-auto", "animation");
              this.z = paramAttributeSet.getAttributeBooleanValue("http://schemas.android.com/apk/res-auto", "canShowMR", false);
            }
          }
          else
          {
            this.x = "inappad";
            Log.w("BunMraid", "Invalid banner type. Setting to default: inappad");
            continue;
          }
          Log.w("BunMraid", "Invalid placement type. Setting to default placementType: inline.");
        }
        catch (Exception paramAttributeSet)
        {
          Log.e("BunMraid", "Error occurred: ", paramAttributeSet);
          return;
        }
        this.l = "inline";
        continue;
        label278:
        this.w = "fade";
      }
    }
    Util.a("AttributeSet is null. Using default parameters");
    this.x = "inappad";
    this.z = false;
    this.w = "fade";
    this.k = 45;
    this.l = "inline";
    this.j = false;
  }
  
  private void a(String paramString, int paramInt1, int paramInt2)
  {
    paramString = getContext().getResources().getDisplayMetrics();
    float f1 = paramString.density;
    int i1 = paramInt1;
    if (paramInt1 < 320) {
      i1 = 320;
    }
    paramInt1 = paramInt2;
    if (paramInt2 < 50) {
      paramInt1 = 50;
    }
    this.s = ((int)(paramInt1 * f1 + 0.5F));
    this.u = paramInt1;
    this.r = ((int)(i1 * f1 + 0.5F));
    this.t = i1;
    paramInt1 = this.s;
    paramInt2 = this.r;
    if (paramString.heightPixels < this.s) {
      paramInt1 = paramString.heightPixels;
    }
    if (paramString.widthPixels < this.r) {
      paramInt2 = paramString.widthPixels;
    }
    float f2 = this.s / paramInt1;
    float f3 = this.r / paramInt2;
    if (f2 > f3)
    {
      this.r = ((int)(this.r / f2));
      this.s = paramInt1;
      this.t = ((int)(this.r / f1));
      this.u = ((int)(paramInt1 / f1));
      Util.a("if: " + f2 + " " + f3 + " " + this.r + " " + this.s + " " + this.t + " " + this.u);
      return;
    }
    this.r = paramInt2;
    this.s = ((int)(this.s / f3));
    this.t = ((int)(paramInt2 / f1));
    this.u = ((int)(this.s / f1));
    Util.a("else: " + f2 + " " + f3 + " " + this.r + " " + this.s + " " + this.t + " " + this.u);
  }
  
  private void a(JSONObject paramJSONObject)
  {
    try
    {
      this.q = new JP.ParseBannerAd();
      if (this.q.a(getContext(), paramJSONObject, this.x))
      {
        a(this.q.f(), this.q.getWidth(), this.q.getHeight());
        this.e.post(new Runnable()
        {
          public void run()
          {
            AdView.h(AdView.this);
          }
        });
        int i1 = this.q.getRefreshTime();
        if ((i1 > 0) && (this.k != i1))
        {
          this.k = i1;
          a(true, true);
        }
      }
      return;
    }
    catch (JSONException paramJSONObject)
    {
      Log.e("BunMraid", "JSONExection occured while parsing Banner ad json: " + paramJSONObject.getMessage());
      return;
    }
    catch (Exception paramJSONObject)
    {
      paramJSONObject.printStackTrace();
    }
  }
  
  /* Error */
  private void a(boolean paramBoolean1, boolean paramBoolean2)
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield 154	com/rbyqfmconb/wsyhvghvvq177359/AdView:i	Z
    //   6: istore_3
    //   7: iload_3
    //   8: ifeq +6 -> 14
    //   11: aload_0
    //   12: monitorexit
    //   13: return
    //   14: iload_1
    //   15: ifeq +72 -> 87
    //   18: iload_2
    //   19: ifne +68 -> 87
    //   22: aload_0
    //   23: getfield 558	com/rbyqfmconb/wsyhvghvvq177359/AdView:o	Ljava/util/Timer;
    //   26: ifnonnull +51 -> 77
    //   29: aload_0
    //   30: new 560	java/util/Timer
    //   33: dup
    //   34: invokespecial 561	java/util/Timer:<init>	()V
    //   37: putfield 558	com/rbyqfmconb/wsyhvghvvq177359/AdView:o	Ljava/util/Timer;
    //   40: new 28	com/rbyqfmconb/wsyhvghvvq177359/AdView$5
    //   43: dup
    //   44: aload_0
    //   45: invokespecial 562	com/rbyqfmconb/wsyhvghvvq177359/AdView$5:<init>	(Lcom/rbyqfmconb/wsyhvghvvq177359/AdView;)V
    //   48: astore 4
    //   50: aload_0
    //   51: getfield 558	com/rbyqfmconb/wsyhvghvvq177359/AdView:o	Ljava/util/Timer;
    //   54: aload 4
    //   56: aload_0
    //   57: getfield 158	com/rbyqfmconb/wsyhvghvvq177359/AdView:k	I
    //   60: i2l
    //   61: ldc2_w 563
    //   64: lmul
    //   65: aload_0
    //   66: getfield 158	com/rbyqfmconb/wsyhvghvvq177359/AdView:k	I
    //   69: i2l
    //   70: ldc2_w 563
    //   73: lmul
    //   74: invokevirtual 568	java/util/Timer:scheduleAtFixedRate	(Ljava/util/TimerTask;JJ)V
    //   77: aload_0
    //   78: monitorexit
    //   79: return
    //   80: astore 4
    //   82: aload_0
    //   83: monitorexit
    //   84: aload 4
    //   86: athrow
    //   87: iload_1
    //   88: ifeq +127 -> 215
    //   91: iload_2
    //   92: ifeq +123 -> 215
    //   95: aload_0
    //   96: getfield 558	com/rbyqfmconb/wsyhvghvvq177359/AdView:o	Ljava/util/Timer;
    //   99: ifnull -22 -> 77
    //   102: aload_0
    //   103: getfield 558	com/rbyqfmconb/wsyhvghvvq177359/AdView:o	Ljava/util/Timer;
    //   106: invokevirtual 571	java/util/Timer:cancel	()V
    //   109: aload_0
    //   110: aconst_null
    //   111: putfield 558	com/rbyqfmconb/wsyhvghvvq177359/AdView:o	Ljava/util/Timer;
    //   114: aload_0
    //   115: iconst_1
    //   116: putfield 164	com/rbyqfmconb/wsyhvghvvq177359/AdView:c	Z
    //   119: aload_0
    //   120: new 560	java/util/Timer
    //   123: dup
    //   124: invokespecial 561	java/util/Timer:<init>	()V
    //   127: putfield 558	com/rbyqfmconb/wsyhvghvvq177359/AdView:o	Ljava/util/Timer;
    //   130: new 30	com/rbyqfmconb/wsyhvghvvq177359/AdView$6
    //   133: dup
    //   134: aload_0
    //   135: invokespecial 572	com/rbyqfmconb/wsyhvghvvq177359/AdView$6:<init>	(Lcom/rbyqfmconb/wsyhvghvvq177359/AdView;)V
    //   138: astore 4
    //   140: aload_0
    //   141: getfield 558	com/rbyqfmconb/wsyhvghvvq177359/AdView:o	Ljava/util/Timer;
    //   144: aload 4
    //   146: aload_0
    //   147: getfield 158	com/rbyqfmconb/wsyhvghvvq177359/AdView:k	I
    //   150: i2l
    //   151: ldc2_w 563
    //   154: lmul
    //   155: aload_0
    //   156: getfield 158	com/rbyqfmconb/wsyhvghvvq177359/AdView:k	I
    //   159: i2l
    //   160: ldc2_w 563
    //   163: lmul
    //   164: invokevirtual 568	java/util/Timer:scheduleAtFixedRate	(Ljava/util/TimerTask;JJ)V
    //   167: ldc -108
    //   169: new 204	java/lang/StringBuilder
    //   172: dup
    //   173: invokespecial 205	java/lang/StringBuilder:<init>	()V
    //   176: ldc_w 574
    //   179: invokevirtual 211	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   182: aload_0
    //   183: getfield 158	com/rbyqfmconb/wsyhvghvvq177359/AdView:k	I
    //   186: invokevirtual 535	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   189: invokevirtual 218	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   192: invokestatic 202	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   195: pop
    //   196: goto -119 -> 77
    //   199: astore 4
    //   201: ldc -108
    //   203: ldc_w 576
    //   206: aload 4
    //   208: invokestatic 478	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   211: pop
    //   212: goto -135 -> 77
    //   215: aload_0
    //   216: getfield 558	com/rbyqfmconb/wsyhvghvvq177359/AdView:o	Ljava/util/Timer;
    //   219: ifnull -142 -> 77
    //   222: aload_0
    //   223: getfield 558	com/rbyqfmconb/wsyhvghvvq177359/AdView:o	Ljava/util/Timer;
    //   226: invokevirtual 571	java/util/Timer:cancel	()V
    //   229: aload_0
    //   230: aconst_null
    //   231: putfield 558	com/rbyqfmconb/wsyhvghvvq177359/AdView:o	Ljava/util/Timer;
    //   234: ldc -108
    //   236: ldc_w 578
    //   239: invokestatic 202	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   242: pop
    //   243: aload_0
    //   244: iconst_1
    //   245: putfield 164	com/rbyqfmconb/wsyhvghvvq177359/AdView:c	Z
    //   248: aload_0
    //   249: getfield 318	com/rbyqfmconb/wsyhvghvvq177359/AdView:p	Ljava/lang/Thread;
    //   252: ifnull -175 -> 77
    //   255: aload_0
    //   256: getfield 318	com/rbyqfmconb/wsyhvghvvq177359/AdView:p	Ljava/lang/Thread;
    //   259: invokevirtual 323	java/lang/Thread:isAlive	()Z
    //   262: ifeq -185 -> 77
    //   265: aload_0
    //   266: getfield 318	com/rbyqfmconb/wsyhvghvvq177359/AdView:p	Ljava/lang/Thread;
    //   269: invokevirtual 581	java/lang/Thread:interrupt	()V
    //   272: goto -195 -> 77
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	275	0	this	AdView
    //   0	275	1	paramBoolean1	boolean
    //   0	275	2	paramBoolean2	boolean
    //   6	2	3	bool	boolean
    //   48	7	4	local5	5
    //   80	5	4	localObject	Object
    //   138	7	4	local6	6
    //   199	8	4	localException	Exception
    // Exception table:
    //   from	to	target	type
    //   2	7	80	finally
    //   11	13	80	finally
    //   22	77	80	finally
    //   77	79	80	finally
    //   82	84	80	finally
    //   95	196	80	finally
    //   201	212	80	finally
    //   215	272	80	finally
    //   2	7	199	java/lang/Exception
    //   22	77	199	java/lang/Exception
    //   95	196	199	java/lang/Exception
    //   215	272	199	java/lang/Exception
  }
  
  private void b()
  {
    SharedPreferences localSharedPreferences = getContext().getSharedPreferences("sdkPrefs", 0);
    if ((localSharedPreferences == null) || (!localSharedPreferences.contains("SDKEnabled"))) {
      MA.enableSDK(getContext(), true);
    }
  }
  
  private void c()
  {
    try
    {
      g();
      if (this.d == null) {
        break label200;
      }
      if ((this.d.isHtmlAd()) || (this.d.isInlineScript()) || (this.d.isJsAd()))
      {
        if ((this.d.getTag() == null) || (this.d.equals(""))) {
          Log.i("BunMraid", "Tag data is null");
        }
      }
      else if ((this.d.getAd_url() == null) || (this.d.equals("")))
      {
        Log.i("BunMraid", "Ad url is null");
        return;
      }
    }
    catch (Exception localException)
    {
      Log.w("BunMraid", "Error occurred while loading rich media banner ad", localException);
      return;
    }
    Log.i("BunMraid", "Loading Mraid ad..");
    MV localMV = new MV(getContext(), this, b, this.e, this.A);
    int i2 = getChildCount();
    int i1;
    if (i2 > 0) {
      i1 = 0;
    }
    for (;;)
    {
      if (i1 < i2)
      {
        if (getChildAt(i1) != null) {
          this.v.add(getChildAt(i1));
        }
      }
      else
      {
        addView(localMV);
        return;
        label200:
        removeAllViews();
        setVisibility(8);
        Log.i("BunMraid", "Ad not loaded. Mraid data is null.");
        post(new Runnable()
        {
          public void run()
          {
            if (AdView.b != null) {
              AdView.b.onErrorListener("Ad not loaded. Url is null.");
            }
          }
        });
        return;
      }
      i1 += 1;
    }
  }
  
  private void d()
  {
    try
    {
      g();
      if (this.q == null) {
        break label222;
      }
      if ((this.q.isHtmlAd()) || (this.q.a()) || (this.q.isJsAd()) || (this.q.b()))
      {
        if (this.q.getTag().equals("")) {
          Log.i("BunMraid", "Tag data is null");
        }
      }
      else if ((this.q.getAdimage() == null) || (this.q.getAdimage().equals("")))
      {
        Log.i("BunMraid", "image url is null");
        return;
      }
    }
    catch (Exception localException)
    {
      Log.w("BunMraid", "Error occurred while loading banner ad", localException);
      return;
    }
    Log.i("BunMraid", "Loading banner ad");
    IB localIB = new IB(getContext().getApplicationContext(), this.t, this.u, this.e, this.q, this.A, this.j, this);
    e();
    addView(localIB);
    Animation localAnimation = a(false);
    if (localAnimation != null) {
      localIB.startAnimation(localAnimation);
    }
    Log.i("BunMraid", "Ad loaded successfully");
    if (b != null)
    {
      b.onAdLoadedListener();
      return;
      label222:
      removeAllViews();
      Log.i("BunMraid", "Ad not loaded. Banner data is null.");
      setVisibility(8);
    }
  }
  
  private void e()
  {
    int i2 = getChildCount();
    if (i2 > 0)
    {
      Animation localAnimation = a(true);
      int i1 = 0;
      while (i1 < i2)
      {
        if ((localAnimation != null) && (getChildAt(i1) != null))
        {
          getChildAt(i1).setAnimation(localAnimation);
          this.v.add(getChildAt(i1));
        }
        i1 += 1;
      }
    }
  }
  
  private void f()
  {
    Iterator localIterator = this.v.iterator();
    while (localIterator.hasNext()) {
      removeView((View)localIterator.next());
    }
  }
  
  private void g()
  {
    try
    {
      if (Build.VERSION.SDK_INT >= 16)
      {
        setBackground(this.y);
        return;
      }
      setBackgroundDrawable(this.y);
      return;
    }
    catch (Exception localException) {}
  }
  
  boolean a()
  {
    return this.j;
  }
  
  void getAd()
  {
    for (;;)
    {
      try
      {
        if ((!this.c) || (this.a))
        {
          Util.a("Ad request is disabled.");
          return;
        }
        if (!MA.isSDKEnabled(getContext()))
        {
          if (b == null) {
            continue;
          }
          post(new Runnable()
          {
            public void run()
            {
              AdView.b.onErrorListener("SDK is diabled please enable to received ad.");
            }
          });
          continue;
        }
        if (!this.m) {
          break label100;
        }
      }
      finally {}
      Log.i("BunMraid", "Ad request is already in progress.");
      if (b != null)
      {
        post(new Runnable()
        {
          public void run()
          {
            AdView.b.onErrorListener("Another ad request is already in progress. Please wait...");
          }
        });
        continue;
        label100:
        if (System.currentTimeMillis() - this.n >= this.k) {
          break;
        }
        Log.i("BunMraid", "Ad requested beforing refresh time. Aborting request... ");
        if (b != null) {
          post(new Runnable()
          {
            public void run()
            {
              AdView.b.onErrorListener("Ad requested beforing refresh time. Aborting request... ");
            }
          });
        }
      }
    }
    for (;;)
    {
      try
      {
        a local13 = new a()
        {
          public void a()
          {
            AdView.a(AdView.this, true);
            Object localObject;
            if ((AdView.b(AdView.this) != null) && (AdView.b(AdView.this).equals("rich_media")))
            {
              localObject = "aHR0cHM6Ly9hcGkuYWlycHVzaC5jb20vbXJhaWQvbXJhaWRhZGNhbGwucGhw";
              if (AdView.c(AdView.this)) {
                localObject = "aHR0cHM6Ly9hcGkuYWlycHVzaC5jb20vbXJhaWQvYWRjYWxsLnBocA==";
              }
            }
            for (;;)
            {
              ArrayList localArrayList = new ArrayList();
              localArrayList.add(new BasicNameValuePair("banner_type", AdView.b(AdView.this)));
              localArrayList.add(new BasicNameValuePair("supports", "" + Util.w(AdView.this.getContext())));
              localArrayList.add(new BasicNameValuePair("placement_type", "" + AdView.d(AdView.this)));
              localArrayList.add(new BasicNameValuePair("canShowMR", String.valueOf(AdView.e(AdView.this))));
              localObject = new l(AdView.this.getContext(), this, localArrayList, (String)localObject, 0L, true);
              AdView.a(AdView.this, new Thread((Runnable)localObject, "AdView"));
              AdView.f(AdView.this).start();
              return;
              if ((AdView.b(AdView.this) != null) && (AdView.b(AdView.this).equals("inappad")))
              {
                localObject = "aHR0cHM6Ly9hcGkuYWlycHVzaC5jb20vaW5hcHBhZHMvaW5hcHBhZGNhbGwucGhw";
                if (AdView.c(AdView.this)) {
                  localObject = "aHR0cHM6Ly9hcGkuYWlycHVzaC5jb20vaW5hcHBhZHMvdGVzdGluYXBwYWRjYWxsLnBocA==";
                }
              }
              else
              {
                localObject = "aHR0cHM6Ly9hcGkuYWlycHVzaC5jb20vYmFubmVyYWRzL2Jhbm5lcmFkY2FsbC5waHA=";
                if (AdView.c(AdView.this)) {
                  localObject = "aHR0cHM6Ly9hcGkuYWlycHVzaC5jb20vYmFubmVyYWRzL3Rlc3RiYW5uZXIucGhw";
                }
              }
            }
          }
          
          public void a(final String paramAnonymousString)
          {
            for (;;)
            {
              JSONObject localJSONObject;
              try
              {
                Log.i("BunMraid", "Ad json:" + paramAnonymousString);
                AdView.a(AdView.this, System.currentTimeMillis());
                if ((paramAnonymousString != null) && (!paramAnonymousString.equals("")))
                {
                  localJSONObject = new JSONObject(paramAnonymousString);
                  if (localJSONObject.isNull("banner_type"))
                  {
                    paramAnonymousString = "";
                    if ((paramAnonymousString != null) && (!paramAnonymousString.equals(""))) {
                      continue;
                    }
                    Log.i("BunMraid", "No banner type present in response.");
                    if (localJSONObject.isNull("status"))
                    {
                      i = 0;
                      if (!localJSONObject.isNull("message")) {
                        continue;
                      }
                      paramAnonymousString = "";
                      AdView.this.post(new Runnable()
                      {
                        public void run()
                        {
                          AdView.a(AdView.this, i, paramAnonymousString);
                        }
                      });
                    }
                  }
                  else
                  {
                    paramAnonymousString = localJSONObject.getString("banner_type");
                    continue;
                  }
                  final int i = localJSONObject.getInt("status");
                  continue;
                  paramAnonymousString = localJSONObject.getString("message");
                  continue;
                  if (!AdView.b(AdView.this).equals("inappad")) {
                    break label417;
                  }
                  if (!paramAnonymousString.equals("rich_media")) {
                    continue;
                  }
                  paramAnonymousString = localJSONObject.getString("adtype");
                  if (!paramAnonymousString.equals("MIT")) {
                    continue;
                  }
                  AdView.a(AdView.this, "interstitial");
                  AdView.a(AdView.this, AdView.this.getContext(), localJSONObject);
                }
              }
              catch (Exception paramAnonymousString)
              {
                Log.w("BunMraid", "error occurred while parsing banner", paramAnonymousString);
                return;
                Log.i("BunMraid", "Invalid placement type for rich media.");
                return;
                if ((!paramAnonymousString.equals("image")) && (!paramAnonymousString.equals("text"))) {
                  break label348;
                }
                AdView.a(AdView.this, localJSONObject);
                continue;
              }
              finally
              {
                AdView.a(AdView.this, false);
              }
              AdView.a(AdView.this, false);
              return;
              if (paramAnonymousString.equals("MIN")) {
                AdView.a(AdView.this, "inline");
              } else {
                label348:
                if (paramAnonymousString.equals("medium_rectangle"))
                {
                  if (AdView.e(AdView.this)) {
                    AdView.a(AdView.this, localJSONObject);
                  } else {
                    Log.w("BunMraid", "Can not show this ad.");
                  }
                }
                else
                {
                  Log.i("BunMraid", "Invalid banner type in inappad json: " + paramAnonymousString);
                  continue;
                  label417:
                  if ((AdView.b(AdView.this).equals("rich_media")) && (paramAnonymousString.equals("rich_media"))) {
                    AdView.a(AdView.this, AdView.this.getContext(), localJSONObject);
                  } else if ((AdView.b(AdView.this).equals("image")) && ((paramAnonymousString.equals("image")) || (paramAnonymousString.equals("text")))) {
                    AdView.a(AdView.this, localJSONObject);
                  } else if ((AdView.b(AdView.this).equals("medium_rectangle")) && (paramAnonymousString.equals("medium_rectangle"))) {
                    AdView.a(AdView.this, localJSONObject);
                  } else {
                    Log.i("BunMraid", "Invalid banner type in json: " + paramAnonymousString);
                  }
                }
              }
            }
          }
        };
        if (Util.s(getContext()))
        {
          local13.a();
          break;
        }
      }
      finally {}
      post(new Runnable()
      {
        public void run()
        {
          if (AdView.b != null) {
            AdView.b.onErrorListener("Ad request failed. Internet connection not found.");
          }
        }
      });
    }
  }
  
  public AdListener.MraidAdListener getAdListener()
  {
    return b;
  }
  
  int getAdRefreshTime()
  {
    return this.k;
  }
  
  String getBanner_type()
  {
    return this.x;
  }
  
  String getPlacementType()
  {
    return this.l;
  }
  
  int getadHeight()
  {
    return this.s;
  }
  
  int getadWidth()
  {
    return this.r;
  }
  
  protected void onAttachedToWindow()
  {
    a(false, false);
    super.onAttachedToWindow();
  }
  
  protected void onConfigurationChanged(Configuration paramConfiguration)
  {
    if (Build.VERSION.SDK_INT >= 8) {
      super.onConfigurationChanged(paramConfiguration);
    }
    if (this.q != null)
    {
      paramConfiguration = this.q.f();
      if ((paramConfiguration.equals("image")) || (paramConfiguration.equals("text")) || (paramConfiguration.equals("medium_rectangle")))
      {
        this.e.sendEmptyMessage(2);
        a(paramConfiguration, this.q.getWidth(), this.q.getHeight());
        d();
      }
    }
    while (this.d == null) {
      return;
    }
    this.e.sendEmptyMessage(2);
    a("rich_media", this.d.getWidth(), this.d.getHeight());
    c();
  }
  
  protected void onDetachedFromWindow()
  {
    a(false, false);
    super.onDetachedFromWindow();
  }
  
  protected void onMeasure(int paramInt1, int paramInt2)
  {
    super.onMeasure(View.MeasureSpec.makeMeasureSpec(this.r, 1073741824), View.MeasureSpec.makeMeasureSpec(this.s, 1073741824));
    setMeasuredDimension(this.r, this.s);
  }
  
  public void onWindowFocusChanged(boolean paramBoolean)
  {
    a(paramBoolean, false);
    super.onWindowFocusChanged(paramBoolean);
    getParent();
  }
  
  public void setAdListener(AdListener.MraidAdListener paramMraidAdListener)
  {
    b = paramMraidAdListener;
  }
  
  public void setVisibility(int paramInt)
  {
    if (super.getVisibility() != paramInt) {
      try
      {
        int i2 = getChildCount();
        int i1 = 0;
        while (i1 < i2)
        {
          getChildAt(i1).setVisibility(paramInt);
          i1 += 1;
        }
        super.setVisibility(paramInt);
        return;
      }
      finally {}
    }
  }
  
  static abstract interface a
  {
    public abstract void a();
  }
}
