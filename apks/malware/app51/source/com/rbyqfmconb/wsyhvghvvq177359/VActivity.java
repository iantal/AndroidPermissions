package com.rbyqfmconb.wsyhvghvvq177359;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.Typeface;
import android.media.AudioManager;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnCompletionListener;
import android.media.MediaPlayer.OnErrorListener;
import android.media.MediaPlayer.OnPreparedListener;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.TextView;
import android.widget.VideoView;
import java.io.File;
import java.io.PrintStream;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;

public class VActivity
  extends r
  implements MediaPlayer.OnCompletionListener, MediaPlayer.OnErrorListener, MediaPlayer.OnPreparedListener, View.OnClickListener
{
  static final String ACTION_PLAY = "play_video";
  private static final int ID_AD_INFO_TEXT_VIEW = 106;
  private static final int ID_AD_PROGRESS_TEXT = 111;
  private static final int ID_ICON_IMAGE_VIEW = 102;
  private static final int ID_MUTE_BUTTON = 112;
  private static final int ID_PLAY_BUTTON = 107;
  private static final int ID_SEEK_BAR = 109;
  private static final int ID_SKIP_BUTTON = 110;
  private static final int ID_VIDEO_PLAYER = 108;
  private boolean A = true;
  private XmlParser.Creative B;
  private Uri C;
  private ProgressBar D;
  private TextView E;
  private Button F;
  private ImageButton G;
  private ImageButton H;
  private boolean I = true;
  private int J = 0;
  private boolean K = false;
  private int L;
  private int M;
  private int N;
  private int O;
  Handler a;
  View.OnTouchListener b = new View.OnTouchListener()
  {
    public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
    {
      try
      {
        if ((paramAnonymousView == VActivity.a(VActivity.this)) && (paramAnonymousMotionEvent.getAction() == 0))
        {
          paramAnonymousView = VActivity.b(VActivity.this).getVideoClickThrough();
          if ((paramAnonymousView != null) && (!paramAnonymousView.equals("")))
          {
            VActivity.this.a(paramAnonymousView);
            VActivity.a(VActivity.this, false);
            VActivity.this.a(r.a.q);
            VActivity.a(VActivity.this).stopPlayback();
            VActivity.this.finish();
            return true;
          }
        }
      }
      catch (Exception paramAnonymousView)
      {
        paramAnonymousView.printStackTrace();
        Log.e("BunVast", "Error occured while on video click", paramAnonymousView);
        VActivity.a(VActivity.this, true);
        VActivity.this.a(VActivity.this.u);
      }
      return false;
    }
  };
  Runnable c = new Runnable()
  {
    public void run()
    {
      VActivity.b(VActivity.this, VActivity.c(VActivity.this));
    }
  };
  private final String w = "BunVast";
  private ProgressDialog x;
  private XmlParser y;
  private VideoView z;
  
  public VActivity() {}
  
  private void e(boolean paramBoolean)
  {
    try
    {
      if ((this.z != null) && (paramBoolean))
      {
        i = this.z.getCurrentPosition() / 1000;
        int j = this.z.getDuration() / 1000;
        if (i < j)
        {
          if ((this.B.isAdLinearSkipable()) && (i < this.J))
          {
            long l = this.J - i;
            this.F.setText("Skip in " + l + "s");
          }
          j -= i;
          this.E.setText("Ad: " + VU.a(j));
          if ((this.B.isAdLinearSkipable()) && (this.J == i))
          {
            this.F.setEnabled(true);
            this.F.setText("Skip Ad");
            this.F.setClickable(true);
          }
          d(j);
          this.D.setProgress(this.z.getCurrentPosition());
          this.a.postDelayed(this.c, 1000L);
          if (this.L == i)
          {
            a(r.a.n);
            return;
          }
          if (this.M == i)
          {
            a(r.a.o);
            return;
          }
        }
      }
    }
    catch (Exception localException)
    {
      int i;
      Log.e("BunVast", "Exception occurred in updatePlayer", localException);
      return;
      if (this.N == i)
      {
        a(r.a.p);
        return;
      }
    }
    catch (Throwable localThrowable)
    {
      Log.e("BunVast", "Error occurred in updatePlayer", localThrowable);
    }
  }
  
  private void h(int paramInt)
  {
    this.L = (paramInt * 25 / 100);
    this.M = (paramInt * 50 / 100);
    this.N = (paramInt * 75 / 100);
  }
  
  private void o()
  {
    try
    {
      new Thread(new Runnable()
      {
        public void run()
        {
          VU.a(new File(Environment.getExternalStorageDirectory(), "ap_video"));
        }
      }, "delete").start();
      return;
    }
    catch (Exception localException)
    {
      Log.e("BunVast", "Not able to delete video.", localException);
    }
  }
  
  void a()
  {
    if (MA.adListener != null) {
      MA.adListener.onSmartWallAdShowing();
    }
    try
    {
      if (this.B.isAdLinearSkipable())
      {
        this.F.setVisibility(0);
        this.F.setEnabled(false);
      }
      this.O = this.z.getDuration();
      this.D.setMax(this.O);
      e(this.O);
      h(this.O / 1000);
      this.I = true;
      this.a.post(this.c);
      a(r.a.m);
      return;
    }
    catch (Exception localException)
    {
      Log.e("BunVast", "Exception occurred in start ad", localException);
      finish();
      this.A = true;
      a(this.t);
      return;
    }
    catch (Throwable localThrowable)
    {
      for (;;)
      {
        Log.e("BunVast", "Error occurred in start ad", localThrowable);
      }
    }
  }
  
  void a(int paramInt)
  {
    if (this.A)
    {
      Log.e("BunVast", "Stopping ad. An error is occurred.");
      g(paramInt);
    }
    for (;;)
    {
      finish();
      return;
      Log.i("BunVast", "Sending impression data>>");
      a(r.a.v);
    }
  }
  
  void a(int paramInt1, int paramInt2, String paramString) {}
  
  void a(int paramInt1, int paramInt2, String paramString1, int paramInt3, String paramString2, String paramString3)
  {
    try
    {
      ((AudioManager)getSystemService("audio")).setStreamMute(3, false);
      try
      {
        setContentView(new VpaidLayout(this));
        this.E = ((TextView)findViewById(111));
        this.D = ((ProgressBar)findViewById(109));
        this.z = ((VideoView)findViewById(108));
        this.F = ((Button)findViewById(110));
        this.F.setOnClickListener(this);
        this.G = ((ImageButton)findViewById(107));
        this.G.setOnClickListener(this);
        this.H = ((ImageButton)findViewById(112));
        this.H.setOnClickListener(this);
        this.z.setVideoURI(this.C);
        this.z.setOnTouchListener(this.b);
        this.z.setOnPreparedListener(this);
        this.z.setOnCompletionListener(this);
        this.z.setOnErrorListener(this);
        this.z.requestFocus();
        this.z.setKeepScreenOn(true);
        setVolumeControlStream(3);
        this.z.start();
        a(r.a.a);
        return;
      }
      catch (Exception paramString1)
      {
        Log.e("BunVast", "Exception occurred while initializing video", paramString1);
        finish();
        return;
      }
      catch (Throwable paramString1)
      {
        for (;;)
        {
          Log.e("BunVast", "Error occurred while initializing video", paramString1);
        }
      }
    }
    catch (Exception paramString1)
    {
      for (;;) {}
    }
  }
  
  void a(String paramString)
  {
    Log.i("BunVast", "Video clicked>>");
    try
    {
      Intent localIntent = new Intent("android.intent.action.VIEW", Uri.parse(paramString));
      localIntent.setFlags(268435456);
      localIntent.addFlags(8388608);
      localIntent.addCategory("android.intent.category.LAUNCHER");
      localIntent.setClassName("com.android.browser", "com.android.browser.BrowserActivity");
      startActivity(localIntent);
      return;
    }
    catch (ActivityNotFoundException localActivityNotFoundException)
    {
      try
      {
        Log.i("BunVast", "Browser not found.");
        paramString = new Intent("android.intent.action.VIEW", Uri.parse(paramString));
        paramString.setFlags(268435456);
        paramString.addFlags(8388608);
        startActivity(paramString);
        return;
      }
      catch (ActivityNotFoundException paramString)
      {
        Log.e("BunVast", "Error whlie displaying push ad......: ", paramString);
        return;
      }
    }
    catch (Exception paramString)
    {
      Log.e("BunVast", "Error whlie displaying url......: ", paramString);
    }
  }
  
  void b()
  {
    try
    {
      if ((this.z != null) && (this.z.isPlaying()))
      {
        this.z.pause();
        this.I = false;
        this.G.setBackgroundResource(17301540);
        this.a.removeCallbacks(this.c);
        a(r.a.w);
      }
      return;
    }
    catch (IllegalStateException localIllegalStateException)
    {
      this.A = true;
      a(this.u);
      Log.e("BunVast", "Error occurred in pausing", localIllegalStateException);
    }
  }
  
  void c()
  {
    try
    {
      if ((this.z != null) && (!this.z.isPlaying()))
      {
        this.z.start();
        this.I = true;
        this.G.setBackgroundResource(17301539);
        this.a.post(this.c);
        a(r.a.x);
      }
      return;
    }
    catch (IllegalStateException localIllegalStateException)
    {
      this.A = true;
      a(this.v);
      Log.e("BunVast", "Error occurred in resume", localIllegalStateException);
    }
  }
  
  void d()
  {
    this.A = false;
    a(r.a.d);
    try
    {
      this.z.stopPlayback();
      finish();
      return;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  public void onBackPressed() {}
  
  public void onClick(View paramView)
  {
    switch (paramView.getId())
    {
    case 108: 
    case 109: 
    case 111: 
    default: 
      return;
    case 107: 
      if (this.I)
      {
        b();
        return;
      }
      c();
      return;
    case 110: 
      d();
      return;
    }
    if (this.K)
    {
      ((AudioManager)getSystemService("audio")).setStreamMute(3, false);
      this.K = false;
      f(1);
      this.H.setBackgroundResource(17301554);
    }
    for (;;)
    {
      a(r.a.k);
      return;
      ((AudioManager)getSystemService("audio")).setStreamMute(3, true);
      this.K = true;
      f(0);
      this.H.setBackgroundResource(17301553);
    }
  }
  
  public void onCompletion(MediaPlayer paramMediaPlayer)
  {
    try
    {
      if (this.z != null) {
        this.z.stopPlayback();
      }
      paramMediaPlayer.release();
    }
    catch (Exception paramMediaPlayer)
    {
      for (;;)
      {
        Log.e("BunVast", "Error occurred in onCompletion", paramMediaPlayer);
      }
    }
    this.A = false;
    a(this.v);
    o();
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    this.a = new Handler();
    AdActivity.a(true);
    this.d = new HashSet();
    a(this);
    getWindow().setFormat(-3);
    getWindow().addFlags(128);
    int i;
    int j;
    int k;
    try
    {
      c(new WebView(this).getSettings().getUserAgentString());
      paramBundle = getIntent();
      if (!paramBundle.getAction().equals("play_video"))
      {
        finish();
        return;
      }
      this.C = paramBundle.getData();
      a(r.a.l);
      Util.a("VideoAdActivty: url: " + this.C);
      setRequestedOrientation(0);
      requestWindowFeature(1);
      getWindow().setFlags(1024, 1024);
      this.x = ProgressDialog.show(this, null, "Loading....");
      this.y = q.b();
      a(this.y);
      paramBundle = this.y.m();
      if ((paramBundle != null) && (paramBundle.size() > 0))
      {
        this.B = ((XmlParser.Creative)paramBundle.get(0));
        a(this.B);
        paramBundle = (HashMap)this.B.getMediaFiles().get(0);
        i = ((Integer)paramBundle.get("bitrate")).intValue();
        j = ((Integer)paramBundle.get("width")).intValue();
        k = ((Integer)paramBundle.get("height")).intValue();
        paramBundle = paramBundle.get("apiFramework");
        if ((paramBundle == null) || (paramBundle.equals("VPAID"))) {
          break label380;
        }
        Log.e("BunVast", "Invalid apiFramwork: " + paramBundle);
        g(this.v);
      }
    }
    catch (Exception paramBundle)
    {
      paramBundle.printStackTrace();
      Log.e("BunVast", "Excetion occurred in video ad.", paramBundle);
      if (this.x != null) {
        this.x.dismiss();
      }
      finish();
      return;
    }
    label380:
    a(j, k, "fullscreen", i, this.B.getAdParams(), null);
  }
  
  protected void onDestroy()
  {
    if (MA.adListener != null) {
      MA.adListener.onSmartWallAdClosed();
    }
    AdActivity.a(false);
    try
    {
      b localB = new b(this);
      localB.d(AdListener.AdType.video);
      if (localB.a())
      {
        localB.c(AdListener.AdType.smartwall);
        localB.a(false);
      }
      try
      {
        ((AudioManager)getSystemService("audio")).setStreamMute(3, false);
        super.onDestroy();
        return;
      }
      catch (Exception localException1)
      {
        for (;;) {}
      }
    }
    catch (Exception localException2)
    {
      for (;;) {}
    }
  }
  
  public boolean onError(MediaPlayer paramMediaPlayer, int paramInt1, int paramInt2)
  {
    Log.e("BunVast", "An error occurred while playing ad video. Error code: " + paramInt1);
    this.A = true;
    a(this.t);
    if (MA.adListener != null) {
      MA.sendAdError("An error occurred while playing video.");
    }
    return true;
  }
  
  protected void onPause()
  {
    super.onPause();
    try
    {
      if (this.z.getCurrentPosition() > 0) {
        a(r.a.u);
      }
      if (this.x != null) {
        this.x.dismiss();
      }
      this.z.stopPlayback();
      finish();
      return;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  public void onPrepared(MediaPlayer paramMediaPlayer)
  {
    for (;;)
    {
      try
      {
        if (this.x != null) {
          this.x.dismiss();
        }
        this.G.setBackgroundResource(17301539);
        if (this.B.isAdLinearSkipable())
        {
          paramMediaPlayer = this.B.getSkipOffSet();
          if ((paramMediaPlayer != null) && (!paramMediaPlayer.equals("")) && (!paramMediaPlayer.equals("0:0:0")) && (!paramMediaPlayer.equals("%"))) {
            continue;
          }
          this.A = true;
          a(this.e);
          Log.e("BunVast", "Invalid skip offset: " + paramMediaPlayer);
        }
      }
      catch (IllegalStateException paramMediaPlayer)
      {
        finish();
        paramMediaPlayer.printStackTrace();
        return;
        if (!paramMediaPlayer.contains("%")) {
          break label276;
        }
        this.J = (Integer.parseInt(paramMediaPlayer.replace("%", "")) * this.z.getDuration() / 100 / 1000);
        this.F.setText("Skip in " + this.J + " sec");
        continue;
      }
      catch (Exception paramMediaPlayer)
      {
        finish();
        return;
      }
      a();
      return;
      if (paramMediaPlayer.contains(":"))
      {
        this.J = ((int)(VU.a(paramMediaPlayer) / 1000L));
        this.F.setText("Skip in " + this.J + "s");
      }
      else
      {
        label276:
        this.A = true;
        a(this.e);
        Log.e("BunVast", "Invalid skip offset: " + paramMediaPlayer);
      }
    }
  }
  
  protected void onStop()
  {
    n();
    super.onStop();
  }
  
  private class VpaidLayout
    extends RelativeLayout
    implements j
  {
    private final float b;
    private Context c;
    
    @SuppressLint({"InlinedApi"})
    public VpaidLayout(Activity paramActivity)
      throws NullPointerException, Exception
    {
      super();
      this.c = paramActivity;
      this.b = paramActivity.getResources().getDisplayMetrics().density;
      setLayoutParams(new RelativeLayout.LayoutParams(-1, -1));
      Object localObject1 = (XmlParser.Creative)VActivity.d(VActivity.this).m().get(0);
      final ImageView localImageView = new ImageView(paramActivity);
      localImageView.setId(102);
      for (;;)
      {
        try
        {
          localObject1 = ((XmlParser.Creative)localObject1).getIcons();
          if ((localObject1 == null) || (((List)localObject1).isEmpty())) {
            Util.a("hashmap empty");
          }
          localObject5 = (HashMap)((List)localObject1).get(0);
          if (((HashMap)localObject5).isEmpty()) {
            Util.a("hash map");
          }
          int i = ((Integer)((HashMap)localObject5).get("width")).intValue();
          int j = ((Integer)((HashMap)localObject5).get("height")).intValue();
          System.out.println("width: " + i);
          localObject4 = ((HashMap)localObject5).get("xPosition").toString();
          localObject3 = ((HashMap)localObject5).get("yPosition").toString();
          if (!((HashMap)localObject5).containsKey("offset")) {
            continue;
          }
          localObject1 = null;
          if (!((HashMap)localObject5).containsKey("Duration")) {
            continue;
          }
          localObject2 = null;
          localObject5 = ((HashMap)localObject5).get("StaticResource").toString();
          System.out.println("icon url: " + (String)localObject5);
          a((String)localObject5, localImageView);
          if ((localObject1 != null) && (((String)localObject1).contains(":"))) {
            VActivity.this.a.postDelayed(new Runnable()
            {
              public void run()
              {
                localImageView.setVisibility(0);
                Runnable local1 = new Runnable()
                {
                  public void run()
                  {
                    VActivity.VpaidLayout.1.this.b.setVisibility(8);
                  }
                };
                if ((this.c != null) && (this.c.contains(":"))) {}
                try
                {
                  VActivity.this.a.postDelayed(local1, VU.a(this.c));
                  return;
                }
                catch (NumberFormatException localNumberFormatException)
                {
                  localNumberFormatException.printStackTrace();
                  return;
                }
                catch (NullPointerException localNullPointerException)
                {
                  localNullPointerException.printStackTrace();
                  return;
                }
                catch (Exception localException)
                {
                  localException.printStackTrace();
                }
              }
            }, VU.a((String)localObject1));
          }
          localObject1 = new RelativeLayout.LayoutParams(i, j);
          if (!((String)localObject4).equals("left")) {
            continue;
          }
          ((RelativeLayout.LayoutParams)localObject1).addRule(9);
        }
        catch (Exception localException1)
        {
          Object localObject5;
          Object localObject4;
          Object localObject3;
          Object localObject2;
          Object localObject6;
          RelativeLayout.LayoutParams localLayoutParams;
          Util.a("Icon not present");
          continue;
          try
          {
            localException1.leftMargin = ((int)Util.b(Float.parseFloat((String)localObject4), paramActivity));
          }
          catch (Exception localException2)
          {
            localException2.printStackTrace();
          }
          continue;
          if (!((String)localObject3).equals("bottom")) {
            continue;
          }
          localException1.addRule(12);
          continue;
          try
          {
            localException1.topMargin = ((int)Util.b(Float.parseFloat((String)localObject3), paramActivity));
          }
          catch (Exception localException3)
          {
            localException3.printStackTrace();
          }
          continue;
        }
        if (!((String)localObject3).equals("top")) {
          continue;
        }
        ((RelativeLayout.LayoutParams)localObject1).addRule(10);
        localImageView.setLayoutParams((ViewGroup.LayoutParams)localObject1);
        localObject2 = new StringBuilder();
        ((StringBuilder)localObject2).append(VActivity.d(VActivity.this).e() + " ");
        ((StringBuilder)localObject2).append(VActivity.d(VActivity.this).g());
        this$1 = VActivity.d(VActivity.this).h();
        if ((VActivity.this != null) && (!VActivity.this.equals(""))) {
          ((StringBuilder)localObject2).append(" - by " + VActivity.this);
        }
        localObject1 = new TextView(paramActivity);
        this$1 = new RelativeLayout.LayoutParams(-2, -2);
        VActivity.this.addRule(1, 102);
        VActivity.this.addRule(10);
        VActivity.this.leftMargin = ((int)(10.0F * this.b));
        ((TextView)localObject1).setLayoutParams(VActivity.this);
        ((TextView)localObject1).setId(106);
        ((TextView)localObject1).setSingleLine();
        ((TextView)localObject1).setTextAppearance(paramActivity, 16973892);
        ((TextView)localObject1).setText(((StringBuilder)localObject2).toString());
        localObject2 = new VideoView(paramActivity);
        ((VideoView)localObject2).setId(108);
        this$1 = new RelativeLayout.LayoutParams(-2, -2);
        if (Build.VERSION.SDK_INT > 17) {
          this$1 = new RelativeLayout.LayoutParams(-1, -1);
        }
        VActivity.this.bottomMargin = ((int)(this.b * 17.0F));
        VActivity.this.topMargin = ((int)(this.b * 17.0F));
        VActivity.this.rightMargin = ((int)(this.b * 30.0F));
        VActivity.this.leftMargin = ((int)(this.b * 30.0F));
        VActivity.this.addRule(13, -1);
        ((VideoView)localObject2).setLayoutParams(VActivity.this);
        this$1 = new Button(paramActivity);
        VActivity.this.setId(110);
        localObject3 = new RelativeLayout.LayoutParams(-2, -2);
        ((RelativeLayout.LayoutParams)localObject3).addRule(11);
        ((RelativeLayout.LayoutParams)localObject3).addRule(12);
        ((RelativeLayout.LayoutParams)localObject3).bottomMargin = ((int)(35.0F * this.b));
        VActivity.this.setLayoutParams((ViewGroup.LayoutParams)localObject3);
        VActivity.this.setBackgroundColor(-16777216);
        VActivity.this.setTextColor(-1);
        VActivity.this.setTypeface(Typeface.MONOSPACE, 16973892);
        VActivity.this.setClickable(false);
        VActivity.this.setVisibility(8);
        localObject3 = new ImageButton(paramActivity);
        ((ImageButton)localObject3).setId(107);
        localObject4 = new RelativeLayout.LayoutParams(-2, -2);
        ((RelativeLayout.LayoutParams)localObject4).addRule(12);
        ((RelativeLayout.LayoutParams)localObject4).addRule(9);
        ((ImageButton)localObject3).setLayoutParams((ViewGroup.LayoutParams)localObject4);
        ((ImageButton)localObject3).setBackgroundResource(17301539);
        localObject4 = new ImageButton(paramActivity);
        ((ImageButton)localObject4).setId(112);
        localObject5 = new RelativeLayout.LayoutParams(-2, -2);
        ((RelativeLayout.LayoutParams)localObject5).addRule(12);
        ((RelativeLayout.LayoutParams)localObject5).addRule(1, 107);
        ((ImageButton)localObject4).setLayoutParams((ViewGroup.LayoutParams)localObject5);
        ((ImageButton)localObject4).setBackgroundResource(17301554);
        localObject5 = new ProgressBar(paramActivity, null, 16842872);
        localObject6 = new RelativeLayout.LayoutParams(-1, (int)(10.0F * this.b));
        ((RelativeLayout.LayoutParams)localObject6).addRule(12);
        ((RelativeLayout.LayoutParams)localObject6).addRule(1, 112);
        ((RelativeLayout.LayoutParams)localObject6).setMargins((int)this.b * 5, 0, (int)this.b * 65, (int)(this.b * 7.0F));
        ((ProgressBar)localObject5).setLayoutParams((ViewGroup.LayoutParams)localObject6);
        ((ProgressBar)localObject5).setId(109);
        localObject6 = new TextView(paramActivity);
        localLayoutParams = new RelativeLayout.LayoutParams(-2, -2);
        localLayoutParams.addRule(11);
        localLayoutParams.addRule(12);
        ((TextView)localObject6).setLayoutParams(localLayoutParams);
        ((TextView)localObject6).setTextColor(-1);
        ((TextView)localObject6).setTextAppearance(paramActivity, 16973894);
        ((TextView)localObject6).setBackgroundColor(-16777216);
        ((TextView)localObject6).setId(111);
        addView((View)localObject2);
        addView(localImageView);
        addView((View)localObject1);
        addView((View)localObject3);
        addView((View)localObject4);
        addView((View)localObject5);
        addView(VActivity.this);
        addView((View)localObject6);
        return;
        localObject1 = ((HashMap)localObject5).get("offset").toString();
        continue;
        localObject2 = ((HashMap)localObject5).get("Duration").toString();
        continue;
        if (!((String)localObject4).equals("right")) {
          continue;
        }
        ((RelativeLayout.LayoutParams)localObject1).addRule(11);
      }
    }
    
    void a(final String paramString, final ImageView paramImageView)
      throws NullPointerException
    {
      paramString = new a()
      {
        public void a()
        {
          new i(paramString, this).execute(new Void[0]);
        }
        
        public void a(final Bitmap paramAnonymousBitmap)
        {
          if ((paramAnonymousBitmap != null) && (VActivity.this.a != null)) {
            VActivity.this.a.post(new Runnable()
            {
              public void run()
              {
                VActivity.VpaidLayout.2.this.a.setImageBitmap(paramAnonymousBitmap);
              }
            });
          }
        }
      };
      if (Util.s(this.c)) {
        paramString.a();
      }
    }
  }
}
