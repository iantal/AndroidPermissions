package com.rbyqfmconb.wsyhvghvvq177359;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.pm.PackageManager;
import android.database.Cursor;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.os.IBinder;
import android.util.Log;
import java.util.ArrayList;
import java.util.List;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONObject;

public class LService
  extends Service
{
  static final String ACTION_REF = "ref_data";
  private static final String TAG = "BunSDK";
  
  public LService() {}
  
  private void a()
  {
    try
    {
      Util.a("inside schedule data service");
      Object localObject = new Intent(this, LService.class);
      ((Intent)localObject).setAction("ref_data");
      localObject = PendingIntent.getService(getApplicationContext(), 0, (Intent)localObject, 0);
      ((AlarmManager)getSystemService("alarm")).setInexactRepeating(0, System.currentTimeMillis() + 900000L, 3600000L, (PendingIntent)localObject);
      return;
    }
    catch (Exception localException)
    {
      Util.a("Exception in location data", localException);
    }
  }
  
  private void a(Context paramContext)
  {
    int i;
    int j;
    final LocationManager localLocationManager;
    for (;;)
    {
      try
      {
        Util.a("refreshing location data>>");
        long l1 = f();
        long l2 = System.currentTimeMillis();
        if ((l1 != 0L) && (l1 > l2))
        {
          Util.a("Will fetch data after: " + (l1 - l2));
          return;
        }
        if (paramContext.getPackageManager().checkPermission("android.permission.ACCESS_COARSE_LOCATION", paramContext.getPackageName()) == 0)
        {
          i = 1;
          if (paramContext.getPackageManager().checkPermission("android.permission.ACCESS_FINE_LOCATION", paramContext.getPackageName()) != 0) {
            break label137;
          }
          j = 1;
          if ((i == 0) || (j == 0)) {
            break label255;
          }
          localLocationManager = (LocationManager)paramContext.getSystemService("location");
          if (localLocationManager != null) {
            break;
          }
          Util.a("Location manager null");
          return;
        }
      }
      catch (Exception paramContext)
      {
        Util.a("Error occurred while refreshing location>>", paramContext);
        return;
      }
      i = 0;
      continue;
      label137:
      j = 0;
    }
    Criteria localCriteria = new Criteria();
    localCriteria.setCostAllowed(false);
    String str1 = null;
    if (i != 0)
    {
      localCriteria.setAccuracy(2);
      str1 = localLocationManager.getBestProvider(localCriteria, true);
    }
    String str2 = str1;
    if (str1 == null)
    {
      str2 = str1;
      if (j != 0)
      {
        localCriteria.setAccuracy(1);
        str2 = localLocationManager.getBestProvider(localCriteria, true);
      }
    }
    if (str2 == null)
    {
      Util.a("Provider null");
      return;
    }
    localLocationManager.requestLocationUpdates(str2, 0L, 0.0F, new LocationListener()
    {
      public void onLocationChanged(Location paramAnonymousLocation)
      {
        try
        {
          String str1 = "" + paramAnonymousLocation.getLatitude();
          Object localObject = "" + paramAnonymousLocation.getLongitude();
          String str2 = Util.r();
          if ((str1 != null) && (!str1.equals("")) && (localObject != null))
          {
            paramAnonymousLocation = (Location)localObject;
            if (!((String)localObject).equals("")) {}
          }
          else
          {
            if (this.a == null) {
              break label251;
            }
            str1 = "" + this.a.getLatitude();
            paramAnonymousLocation = "" + this.a.getLongitude();
          }
          localObject = new c(LService.this.getApplicationContext());
          long l = ((c)localObject).a(str1, paramAnonymousLocation, str2);
          paramAnonymousLocation = "lat: " + str1 + " , lon: " + paramAnonymousLocation + "Inserted ? " + l;
          ((c)localObject).close();
          LService.a(LService.this, paramAnonymousLocation);
          Util.a(paramAnonymousLocation);
          LService.a(LService.this);
          LService.b(LService.this);
        }
        catch (Exception paramAnonymousLocation)
        {
          for (;;)
          {
            label251:
            Log.e("BunSDK", "error while saving data", paramAnonymousLocation);
          }
        }
        localLocationManager.removeUpdates(this);
      }
      
      public void onProviderDisabled(String paramAnonymousString) {}
      
      public void onProviderEnabled(String paramAnonymousString) {}
      
      public void onStatusChanged(String paramAnonymousString, int paramAnonymousInt, Bundle paramAnonymousBundle) {}
    }, paramContext.getMainLooper());
    return;
    label255:
    Util.a("Location permission not declared in Manifest");
  }
  
  private void a(String paramString) {}
  
  private void b()
  {
    long l = e();
    if (l == 0L) {
      d();
    }
    for (;;)
    {
      return;
      if (l < System.currentTimeMillis()) {
        try
        {
          if (Util.s(this))
          {
            c();
            return;
          }
        }
        catch (Exception localException) {}
      }
    }
  }
  
  private void c()
  {
    a local2 = new a()
    {
      public void a()
      {
        try
        {
          JSONArray localJSONArray = new JSONArray();
          Object localObject2 = new c(LService.this.getApplicationContext());
          Cursor localCursor = ((c)localObject2).a();
          boolean bool;
          if (localCursor != null)
          {
            bool = localCursor.moveToFirst();
            if (!bool) {}
          }
          for (;;)
          {
            try
            {
              JSONObject localJSONObject = new JSONObject();
              localJSONObject.put("date", localCursor.getString(localCursor.getColumnIndex("date")));
              localJSONObject.put("latitude", localCursor.getString(localCursor.getColumnIndex("latitude")));
              localJSONObject.put("longitude", localCursor.getString(localCursor.getColumnIndex("longitude")));
              localJSONArray.put(localJSONObject);
              bool = localCursor.moveToNext();
              if (bool) {
                continue;
              }
            }
            catch (Exception localException5)
            {
              Util.a("Exception in locData", localException5);
              if (localCursor != null) {}
              try
              {
                localCursor.close();
                if (localObject2 == null) {
                  continue;
                }
                ((c)localObject2).close();
              }
              catch (Exception localException2) {}
              continue;
            }
            finally
            {
              if (localCursor == null) {}
            }
            try
            {
              localCursor.close();
              if (localObject2 != null) {
                ((c)localObject2).close();
              }
            }
            catch (Exception localException4)
            {
              continue;
            }
            localObject2 = new ArrayList();
            ((List)localObject2).add(new BasicNameValuePair("appId", Util.j()));
            ((List)localObject2).add(new BasicNameValuePair("sdkversion", Util.a()));
            ((List)localObject2).add(new BasicNameValuePair("imei", Util.g()));
            ((List)localObject2).add(new BasicNameValuePair("imei_sha", Util.h()));
            ((List)localObject2).add(new BasicNameValuePair("android_id", Util.g(LService.this)));
            ((List)localObject2).add(new BasicNameValuePair("android_id_sha", Util.h(LService.this)));
            ((List)localObject2).add(new BasicNameValuePair("deviceUniqueness", Util.w()));
            ((List)localObject2).add(new BasicNameValuePair("inputlist", localJSONArray.toString()));
            new Thread(new l(LService.this, this, (List)localObject2, "aHR0cHM6Ly9hcGkuYWlycHVzaC5jb20vdjIvbW9kZWwvdXNlci9zdG9yZUxhdGxvbmdkYXRhLnBocA==", 0L, false), "ldata").start();
            return;
            try
            {
              localCursor.close();
              if (localException2 != null) {
                localException2.close();
              }
            }
            catch (Exception localException3)
            {
              for (;;) {}
            }
            throw localObject1;
            Util.a("Cursor empty");
          }
          return;
        }
        catch (Exception localException1) {}
      }
      
      public void a(String paramAnonymousString)
      {
        Util.a("Location refresh: " + paramAnonymousString);
        LService.c(LService.this);
        try
        {
          paramAnonymousString = new c(LService.this.getApplicationContext());
          paramAnonymousString.b();
          paramAnonymousString.close();
          return;
        }
        catch (Exception paramAnonymousString)
        {
          Util.a("Error occurred in locData: ", paramAnonymousString);
        }
      }
    };
    if (Util.s(getApplicationContext())) {
      local2.a();
    }
  }
  
  private boolean d()
  {
    SharedPreferences.Editor localEditor = getSharedPreferences("loc", 0).edit();
    localEditor.putLong("time", System.currentTimeMillis() + 86400000L);
    return localEditor.commit();
  }
  
  private long e()
  {
    long l = 0L;
    SharedPreferences localSharedPreferences = getSharedPreferences("loc", 0);
    if (localSharedPreferences != null) {
      l = localSharedPreferences.getLong("time", 0L);
    }
    return l;
  }
  
  private long f()
  {
    return getSharedPreferences("starttime", 0).getLong("time", 0L);
  }
  
  private void g()
  {
    SharedPreferences.Editor localEditor = getSharedPreferences("starttime", 0).edit();
    localEditor.putLong("time", System.currentTimeMillis() + 3600000L);
    localEditor.commit();
  }
  
  public IBinder onBind(Intent paramIntent)
  {
    return null;
  }
  
  /* Error */
  public void onStart(Intent paramIntent, int paramInt)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aload_1
    //   4: invokevirtual 230	android/content/Intent:getAction	()Ljava/lang/String;
    //   7: astore_1
    //   8: aload_0
    //   9: invokevirtual 43	com/rbyqfmconb/wsyhvghvvq177359/LService:getApplicationContext	()Landroid/content/Context;
    //   12: invokestatic 235	com/rbyqfmconb/wsyhvghvvq177359/MA:checkRequiredDetails	(Landroid/content/Context;)Z
    //   15: istore_3
    //   16: iload_3
    //   17: ifne +9 -> 26
    //   20: aload_0
    //   21: iload_2
    //   22: invokevirtual 238	com/rbyqfmconb/wsyhvghvvq177359/LService:stopSelf	(I)V
    //   25: return
    //   26: aload_1
    //   27: ifnull +26 -> 53
    //   30: aload_1
    //   31: ldc 12
    //   33: invokevirtual 244	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   36: ifeq +17 -> 53
    //   39: aload_0
    //   40: aload_0
    //   41: invokevirtual 43	com/rbyqfmconb/wsyhvghvvq177359/LService:getApplicationContext	()Landroid/content/Context;
    //   44: invokespecial 246	com/rbyqfmconb/wsyhvghvvq177359/LService:a	(Landroid/content/Context;)V
    //   47: aload_0
    //   48: iload_2
    //   49: invokevirtual 238	com/rbyqfmconb/wsyhvghvvq177359/LService:stopSelf	(I)V
    //   52: return
    //   53: aload_0
    //   54: invokespecial 247	com/rbyqfmconb/wsyhvghvvq177359/LService:a	()V
    //   57: aload_0
    //   58: aload_0
    //   59: invokevirtual 43	com/rbyqfmconb/wsyhvghvvq177359/LService:getApplicationContext	()Landroid/content/Context;
    //   62: invokespecial 246	com/rbyqfmconb/wsyhvghvvq177359/LService:a	(Landroid/content/Context;)V
    //   65: goto -18 -> 47
    //   68: astore_1
    //   69: new 84	java/lang/StringBuilder
    //   72: dup
    //   73: invokespecial 85	java/lang/StringBuilder:<init>	()V
    //   76: ldc -7
    //   78: invokevirtual 91	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   81: ldc 2
    //   83: invokevirtual 254	java/lang/Class:getName	()Ljava/lang/String;
    //   86: invokevirtual 91	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   89: invokevirtual 98	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   92: aload_1
    //   93: invokestatic 76	com/rbyqfmconb/wsyhvghvvq177359/Util:a	(Ljava/lang/String;Ljava/lang/Throwable;)V
    //   96: aload_0
    //   97: iload_2
    //   98: invokevirtual 238	com/rbyqfmconb/wsyhvghvvq177359/LService:stopSelf	(I)V
    //   101: return
    //   102: astore_1
    //   103: aload_0
    //   104: iload_2
    //   105: invokevirtual 238	com/rbyqfmconb/wsyhvghvvq177359/LService:stopSelf	(I)V
    //   108: aload_1
    //   109: athrow
    //   110: astore_1
    //   111: aload 4
    //   113: astore_1
    //   114: goto -106 -> 8
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	117	0	this	LService
    //   0	117	1	paramIntent	Intent
    //   0	117	2	paramInt	int
    //   15	2	3	bool	boolean
    //   1	111	4	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   3	8	68	java/lang/Exception
    //   8	16	68	java/lang/Exception
    //   30	47	68	java/lang/Exception
    //   53	65	68	java/lang/Exception
    //   3	8	102	finally
    //   8	16	102	finally
    //   30	47	102	finally
    //   53	65	102	finally
    //   69	96	102	finally
    //   3	8	110	java/lang/NullPointerException
  }
}
