package com.appbrain.b;

import java.io.IOException;

public final class n
  extends IOException
{
  private s a = null;
  
  public n(String paramString)
  {
    super(paramString);
  }
  
  static n a()
  {
    return new n("While parsing a protocol message, the input ended unexpectedly in the middle of a field.  This could mean either than the input has been truncated or that an embedded message misreported its own length.");
  }
  
  static n b()
  {
    return new n("CodedInputStream encountered an embedded string or message which claimed to have negative size.");
  }
  
  static n c()
  {
    return new n("CodedInputStream encountered a malformed varint.");
  }
  
  static n d()
  {
    return new n("Protocol message contained an invalid tag (zero).");
  }
  
  static n e()
  {
    return new n("Protocol message end-group tag did not match expected tag.");
  }
  
  static n f()
  {
    return new n("Protocol message tag had invalid wire type.");
  }
  
  static n g()
  {
    return new n("Protocol message had too many levels of nesting.  May be malicious.  Use CodedInputStream.setRecursionLimit() to increase the depth limit.");
  }
  
  static n h()
  {
    return new n("Protocol message was too large.  May be malicious.  Use CodedInputStream.setSizeLimit() to increase the size limit.");
  }
  
  public final n a(s paramS)
  {
    this.a = paramS;
    return this;
  }
}
