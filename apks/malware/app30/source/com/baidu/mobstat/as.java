package com.baidu.mobstat;

import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;

public final class as
{
  private static final byte[] a = { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47 };
  private static final char[] b = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".toCharArray();
  private static final int[] c = new int['Ä€'];
  
  static
  {
    Arrays.fill(c, -1);
    int j = b.length;
    int i = 0;
    while (i < j)
    {
      c[b[i]] = i;
      i += 1;
    }
    c[61] = 0;
  }
  
  public static final String a(String paramString)
  {
    try
    {
      paramString = new String(a(paramString.getBytes("UTF-8"), false));
      return paramString;
    }
    catch (UnsupportedEncodingException paramString)
    {
      System.err.println("Base64 encoding error: " + paramString.getMessage());
      paramString.printStackTrace();
    }
    return null;
  }
  
  public static String a(byte[] paramArrayOfByte, String paramString)
  {
    int i = paramArrayOfByte.length * 4 / 3;
    byte[] arrayOfByte = new byte[i + (i / 76 + 3)];
    int n = paramArrayOfByte.length - paramArrayOfByte.length % 3;
    i = 0;
    int j = 0;
    int k = 0;
    while (j < n)
    {
      int m = i + 1;
      arrayOfByte[i] = a[((paramArrayOfByte[j] & 0xFF) >> 2)];
      i = m + 1;
      arrayOfByte[m] = a[((paramArrayOfByte[j] & 0x3) << 4 | (paramArrayOfByte[(j + 1)] & 0xFF) >> 4)];
      int i1 = i + 1;
      arrayOfByte[i] = a[((paramArrayOfByte[(j + 1)] & 0xF) << 2 | (paramArrayOfByte[(j + 2)] & 0xFF) >> 6)];
      m = i1 + 1;
      arrayOfByte[i1] = a[(paramArrayOfByte[(j + 2)] & 0x3F)];
      i = k;
      if ((m - k) % 76 == 0)
      {
        i = k;
        if (m != 0) {
          i = k + 1;
        }
      }
      j += 3;
      k = i;
      i = m;
    }
    switch (paramArrayOfByte.length % 3)
    {
    }
    for (;;)
    {
      return new String(arrayOfByte, 0, i, paramString);
      j = i + 1;
      arrayOfByte[i] = a[((paramArrayOfByte[n] & 0xFF) >> 2)];
      i = j + 1;
      arrayOfByte[j] = a[((paramArrayOfByte[n] & 0x3) << 4)];
      j = i + 1;
      arrayOfByte[i] = 61;
      i = j + 1;
      arrayOfByte[j] = 61;
      continue;
      j = i + 1;
      arrayOfByte[i] = a[((paramArrayOfByte[n] & 0xFF) >> 2)];
      i = j + 1;
      arrayOfByte[j] = a[((paramArrayOfByte[n] & 0x3) << 4 | (paramArrayOfByte[(n + 1)] & 0xFF) >> 4)];
      j = i + 1;
      arrayOfByte[i] = a[((paramArrayOfByte[(n + 1)] & 0xF) << 2)];
      i = j + 1;
      arrayOfByte[j] = 61;
    }
  }
  
  public static byte[] a(byte[] paramArrayOfByte)
  {
    return a(paramArrayOfByte, paramArrayOfByte.length);
  }
  
  public static byte[] a(byte[] paramArrayOfByte, int paramInt)
  {
    int i = paramInt / 4 * 3;
    if (i == 0) {
      return new byte[0];
    }
    byte[] arrayOfByte = new byte[i];
    int j = 0;
    int k = paramInt;
    i = paramArrayOfByte[(k - 1)];
    paramInt = j;
    if (i != 10)
    {
      paramInt = j;
      if (i != 13)
      {
        paramInt = j;
        if (i != 32) {
          if (i != 9) {
            break label74;
          }
        }
      }
    }
    for (paramInt = j;; paramInt = j + 1)
    {
      k -= 1;
      j = paramInt;
      break;
      label74:
      if (i != 61) {
        break label87;
      }
    }
    label87:
    i = 0;
    int n = 0;
    int i1 = 0;
    int m = 0;
    while (m < k)
    {
      int i4 = paramArrayOfByte[m];
      int i2 = n;
      paramInt = i;
      int i3 = i1;
      if (i4 != 10)
      {
        i2 = n;
        paramInt = i;
        i3 = i1;
        if (i4 != 13)
        {
          i2 = n;
          paramInt = i;
          i3 = i1;
          if (i4 != 32)
          {
            if (i4 != 9) {
              break label198;
            }
            i3 = i1;
            paramInt = i;
            i2 = n;
          }
        }
      }
      m += 1;
      n = i2;
      i = paramInt;
      i1 = i3;
      continue;
      label198:
      if ((i4 >= 65) && (i4 <= 90)) {
        paramInt = i4 - 65;
      }
      for (;;)
      {
        i3 = i1 << 6 | (byte)paramInt;
        paramInt = i;
        if (n % 4 == 3)
        {
          paramInt = i + 1;
          arrayOfByte[i] = ((byte)((0xFF0000 & i3) >> 16));
          i = paramInt + 1;
          arrayOfByte[paramInt] = ((byte)((0xFF00 & i3) >> 8));
          paramInt = i + 1;
          arrayOfByte[i] = ((byte)(i3 & 0xFF));
        }
        i2 = n + 1;
        break;
        if ((i4 >= 97) && (i4 <= 122))
        {
          paramInt = i4 - 71;
        }
        else if ((i4 >= 48) && (i4 <= 57))
        {
          paramInt = i4 + 4;
        }
        else if (i4 == 43)
        {
          paramInt = 62;
        }
        else
        {
          if (i4 != 47) {
            break label367;
          }
          paramInt = 63;
        }
      }
      label367:
      return null;
    }
    paramInt = i;
    if (j > 0)
    {
      k = i1 << j * 6;
      paramInt = i + 1;
      arrayOfByte[i] = ((byte)((0xFF0000 & k) >> 16));
      if (j != 1) {
        break label440;
      }
      i = paramInt + 1;
      arrayOfByte[paramInt] = ((byte)((0xFF00 & k) >> 8));
      paramInt = i;
    }
    label440:
    for (;;)
    {
      paramArrayOfByte = new byte[paramInt];
      System.arraycopy(arrayOfByte, 0, paramArrayOfByte, 0, paramInt);
      return paramArrayOfByte;
    }
  }
  
  public static final char[] a(byte[] paramArrayOfByte, boolean paramBoolean)
  {
    int i1 = 0;
    if (paramArrayOfByte != null) {}
    for (int m = paramArrayOfByte.length; m == 0; m = 0) {
      return new char[0];
    }
    int i5 = m / 3 * 3;
    int k = (m - 1) / 3 + 1 << 2;
    if (paramBoolean) {}
    int i6;
    char[] arrayOfChar;
    int n;
    for (int j = (k - 1) / 76 << 1;; j = 0)
    {
      i6 = k + j;
      arrayOfChar = new char[i6];
      n = 0;
      k = 0;
      j = 0;
      while (n < i5)
      {
        int i2 = n + 1;
        n = paramArrayOfByte[n];
        int i3 = i2 + 1;
        int i4 = paramArrayOfByte[i2];
        i2 = i3 + 1;
        n = (i4 & 0xFF) << 8 | (n & 0xFF) << 16 | paramArrayOfByte[i3] & 0xFF;
        i3 = k + 1;
        arrayOfChar[k] = b[(n >>> 18 & 0x3F)];
        k = i3 + 1;
        arrayOfChar[i3] = b[(n >>> 12 & 0x3F)];
        i4 = k + 1;
        arrayOfChar[k] = b[(n >>> 6 & 0x3F)];
        i3 = i4 + 1;
        arrayOfChar[i4] = b[(n & 0x3F)];
        n = i2;
        k = i3;
        if (paramBoolean)
        {
          i4 = j + 1;
          n = i2;
          k = i3;
          j = i4;
          if (i4 == 19)
          {
            n = i2;
            k = i3;
            j = i4;
            if (i3 < i6 - 2)
            {
              j = i3 + 1;
              arrayOfChar[i3] = '\r';
              k = j + 1;
              arrayOfChar[j] = '\n';
              j = 0;
              n = i2;
            }
          }
        }
      }
    }
    k = m - i5;
    if (k > 0)
    {
      n = paramArrayOfByte[i5];
      j = i1;
      if (k == 2) {
        j = (paramArrayOfByte[(m - 1)] & 0xFF) << 2;
      }
      j |= (n & 0xFF) << 10;
      arrayOfChar[(i6 - 4)] = b[(j >> 12)];
      arrayOfChar[(i6 - 3)] = b[(j >>> 6 & 0x3F)];
      if (k != 2) {
        break label448;
      }
    }
    label448:
    for (int i = b[(j & 0x3F)];; i = 61)
    {
      arrayOfChar[(i6 - 2)] = i;
      arrayOfChar[(i6 - 1)] = '=';
      return arrayOfChar;
    }
  }
}
