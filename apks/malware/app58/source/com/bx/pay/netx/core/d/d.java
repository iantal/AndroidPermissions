package com.bx.pay.netx.core.d;

import android.os.Looper;
import com.bx.pay.netx.core.ae;
import com.bx.pay.netx.core.q;
import java.util.Iterator;
import java.util.LinkedList;

public final class d
{
  private final ae a;
  private final int b;
  private final LinkedList c;
  
  public d(ae paramAe)
  {
    if (1 >= paramAe.b()) {
      throw new IllegalArgumentException("parallelTaskCount[1] must less than threadPoolSize[" + paramAe.b() + "] of the RequestQueue.");
    }
    this.c = new LinkedList();
    this.b = 1;
    this.a = paramAe;
  }
  
  private void a()
  {
    LinkedList localLinkedList = this.c;
    int i = 0;
    for (;;)
    {
      try
      {
        Iterator localIterator = this.c.iterator();
        if (!localIterator.hasNext())
        {
          if (i < this.b) {}
        }
        else
        {
          if (!((e)localIterator.next()).a()) {
            continue;
          }
          i += 1;
          continue;
        }
        localIterator = this.c.iterator();
        if (!localIterator.hasNext()) {
          return;
        }
      }
      finally {}
      if (e.c((e)localObject.next()))
      {
        i += 1;
        if (i == this.b) {
          return;
        }
      }
    }
  }
  
  public final e a(String arg1, String paramString2, q paramQ)
  {
    if (Looper.myLooper() != Looper.getMainLooper()) {
      throw new IllegalStateException("FileDownloader must be invoked from the main thread.");
    }
    paramString2 = new e(this, ???, paramString2, paramQ, (byte)0);
    synchronized (this.c)
    {
      this.c.add(paramString2);
      a();
      return paramString2;
    }
  }
}
