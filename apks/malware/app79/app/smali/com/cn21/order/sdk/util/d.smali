.class public final Lcom/cn21/order/sdk/util/d;
.super Ljava/lang/Object;


# direct methods
.method public constructor <init>()V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    .locals 13

    if-eqz p0, :cond_0

    if-eqz p1, :cond_0

    if-nez p2, :cond_1

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return-object v0

    :cond_1
    new-instance v0, Lcom/cn21/order/sdk/util/a;

    invoke-direct {v0}, Lcom/cn21/order/sdk/util/a;-><init>()V

    invoke-virtual {p0, p1}, Ljava/lang/String;->getBytes(Ljava/lang/String;)[B

    move-result-object v0

    new-instance v1, Lcom/cn21/order/sdk/util/a;

    invoke-direct {v1}, Lcom/cn21/order/sdk/util/a;-><init>()V

    invoke-static {p2}, Lcom/cn21/order/sdk/util/a;->a(Ljava/lang/String;)[B

    move-result-object v1

    if-eqz v0, :cond_2

    array-length v2, v0

    if-eqz v2, :cond_2

    if-nez v1, :cond_3

    :cond_2
    const/4 v0, 0x0

    :goto_1
    invoke-static {v0}, Lcom/cn21/order/sdk/util/a;->a([B)Ljava/lang/String;

    move-result-object v0

    goto :goto_0

    :cond_3
    const/4 v2, 0x1

    invoke-static {v0, v2}, Lcom/cn21/order/sdk/util/d;->a([BZ)[I

    move-result-object v2

    const/4 v0, 0x0

    invoke-static {v1, v0}, Lcom/cn21/order/sdk/util/d;->a([BZ)[I

    move-result-object v1

    array-length v0, v2

    add-int/lit8 v6, v0, -0x1

    if-gtz v6, :cond_4

    move-object v0, v2

    :goto_2
    array-length v1, v0

    shl-int/lit8 v3, v1, 0x2

    new-array v1, v3, [B

    const/4 v2, 0x0

    :goto_3
    if-lt v2, v3, :cond_7

    move-object v0, v1

    goto :goto_1

    :cond_4
    array-length v0, v1

    const/4 v3, 0x4

    if-ge v0, v3, :cond_8

    const/4 v0, 0x4

    new-array v0, v0, [I

    const/4 v3, 0x0

    const/4 v4, 0x0

    array-length v5, v1

    invoke-static {v1, v3, v0, v4, v5}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    :goto_4
    aget v4, v2, v6

    const/4 v3, 0x0

    const/16 v1, 0x34

    add-int/lit8 v5, v6, 0x1

    div-int/2addr v1, v5

    add-int/lit8 v1, v1, 0x6

    move v5, v3

    move v3, v4

    :goto_5
    add-int/lit8 v4, v1, -0x1

    if-gtz v1, :cond_5

    move-object v0, v2

    goto :goto_2

    :cond_5
    const v1, -0x61c88647

    add-int/2addr v5, v1

    ushr-int/lit8 v1, v5, 0x2

    and-int/lit8 v7, v1, 0x3

    const/4 v1, 0x0

    :goto_6
    if-lt v1, v6, :cond_6

    const/4 v8, 0x0

    aget v8, v2, v8

    aget v9, v2, v6

    ushr-int/lit8 v10, v3, 0x5

    shl-int/lit8 v11, v8, 0x2

    xor-int/2addr v10, v11

    ushr-int/lit8 v11, v8, 0x3

    shl-int/lit8 v12, v3, 0x4

    xor-int/2addr v11, v12

    add-int/2addr v10, v11

    xor-int/2addr v8, v5

    and-int/lit8 v1, v1, 0x3

    xor-int/2addr v1, v7

    aget v1, v0, v1

    xor-int/2addr v1, v3

    add-int/2addr v1, v8

    xor-int/2addr v1, v10

    add-int v3, v9, v1

    aput v3, v2, v6

    move v1, v4

    goto :goto_5

    :cond_6
    add-int/lit8 v8, v1, 0x1

    aget v8, v2, v8

    aget v9, v2, v1

    ushr-int/lit8 v10, v3, 0x5

    shl-int/lit8 v11, v8, 0x2

    xor-int/2addr v10, v11

    ushr-int/lit8 v11, v8, 0x3

    shl-int/lit8 v12, v3, 0x4

    xor-int/2addr v11, v12

    add-int/2addr v10, v11

    xor-int/2addr v8, v5

    and-int/lit8 v11, v1, 0x3

    xor-int/2addr v11, v7

    aget v11, v0, v11

    xor-int/2addr v3, v11

    add-int/2addr v3, v8

    xor-int/2addr v3, v10

    add-int/2addr v3, v9

    aput v3, v2, v1

    add-int/lit8 v1, v1, 0x1

    goto :goto_6

    :cond_7
    ushr-int/lit8 v4, v2, 0x2

    aget v4, v0, v4

    and-int/lit8 v5, v2, 0x3

    shl-int/lit8 v5, v5, 0x3

    ushr-int/2addr v4, v5

    int-to-byte v4, v4

    aput-byte v4, v1, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    :cond_8
    move-object v0, v1

    goto :goto_4
.end method

.method private static a([BZ)[I
    .locals 7

    array-length v0, p0

    and-int/lit8 v0, v0, 0x3

    if-nez v0, :cond_0

    array-length v0, p0

    ushr-int/lit8 v0, v0, 0x2

    move v1, v0

    :goto_0
    if-eqz p1, :cond_1

    add-int/lit8 v0, v1, 0x1

    new-array v0, v0, [I

    array-length v2, p0

    aput v2, v0, v1

    :goto_1
    array-length v2, p0

    const/4 v1, 0x0

    :goto_2
    if-lt v1, v2, :cond_2

    return-object v0

    :cond_0
    array-length v0, p0

    ushr-int/lit8 v0, v0, 0x2

    add-int/lit8 v0, v0, 0x1

    move v1, v0

    goto :goto_0

    :cond_1
    new-array v0, v1, [I

    goto :goto_1

    :cond_2
    ushr-int/lit8 v3, v1, 0x2

    aget v4, v0, v3

    aget-byte v5, p0, v1

    and-int/lit16 v5, v5, 0xff

    and-int/lit8 v6, v1, 0x3

    shl-int/lit8 v6, v6, 0x3

    shl-int/2addr v5, v6

    or-int/2addr v4, v5

    aput v4, v0, v3

    add-int/lit8 v1, v1, 0x1

    goto :goto_2
.end method
