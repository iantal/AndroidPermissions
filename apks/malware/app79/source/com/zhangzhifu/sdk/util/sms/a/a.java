package com.zhangzhifu.sdk.util.sms.a;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import com.zhangzhifu.sdk.a.e;
import java.io.PrintStream;
import java.util.HashMap;

public final class a
{
  private SQLiteDatabase a = null;
  
  public a(Context paramContext)
  {
    this.a = b.a(paramContext).getReadableDatabase();
  }
  
  public final long a(String paramString, int paramInt)
  {
    if (this.a.rawQuery("SELECT * FROM rules WHERE rule='" + paramString + "' and type='" + paramInt + "'", null).getCount() > 0) {
      return -2L;
    }
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("rule", paramString);
    localContentValues.put("type", Integer.valueOf(paramInt));
    return this.a.insert("rules", null, localContentValues);
  }
  
  public final long a(String paramString1, long paramLong, String paramString2)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("number", paramString1);
    localContentValues.put("timestamp", Long.valueOf(paramLong));
    localContentValues.put("allowedrule", paramString2);
    localContentValues.put("status", Integer.valueOf(0));
    return this.a.insert("allowedmessages", null, localContentValues);
  }
  
  public final long a(String paramString1, String paramString2, long paramLong, String paramString3)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("number", paramString1);
    localContentValues.put("msgbody", paramString2);
    localContentValues.put("timestamp", Long.valueOf(paramLong));
    localContentValues.put("blockedrule", paramString3);
    localContentValues.put("status", Integer.valueOf(0));
    return this.a.insert("blockedmessages", null, localContentValues);
  }
  
  public final Cursor a(String paramString)
  {
    return this.a.query("rules", new String[] { "_id", "rule", "type" }, paramString, null, null, null, "type");
  }
  
  public final HashMap a(Context paramContext)
  {
    HashMap localHashMap = new HashMap();
    try
    {
      paramContext = e.a().w(paramContext);
      paramContext = this.a.query("blockedmessages", new String[] { "msgbody", "timestamp" }, "number=?", new String[] { paramContext }, null, null, "_id desc");
      if (paramContext != null)
      {
        paramContext.moveToFirst();
        while (!paramContext.isAfterLast())
        {
          String str1 = paramContext.getString(paramContext.getColumnIndex("msgbody"));
          String str2 = paramContext.getString(paramContext.getColumnIndex("timestamp"));
          localHashMap.put("dbSMS_Body", str1);
          localHashMap.put("dbSMS_Time", str2);
          System.out.println("msgbody=====================" + str1 + "\b时间" + str2);
          paramContext.moveToNext();
        }
      }
      System.out.println("=======================================Cursor= null");
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
      System.out.println("=======================================查询出现问题");
      return null;
    }
    return localHashMap;
  }
  
  public final boolean a(long paramLong1, String paramString, long paramLong2)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("rule", paramString);
    localContentValues.put("type", Long.valueOf(paramLong2));
    return this.a.update("rules", localContentValues, "_id=" + paramLong1, null) > 0;
  }
  
  public final boolean a(String paramString, long paramLong)
  {
    return this.a.delete(paramString, "_id=" + paramLong, null) > 0;
  }
}
