package com.unicom.wounipaysms.duandai;

import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.telephony.gsm.SmsManager;
import com.unicom.wounipaysms.bean.UpLinkSMSMBean;
import com.unicom.wounipaysms.delegate.RequestDelegate;
import com.unicom.wounipaysms.dialog.SecondConfirmSMSDialog.SecondConfirmListener;
import java.util.Iterator;
import java.util.List;
import java.util.Timer;

public class SendSMS
  implements SecondConfirmSMSDialog.SecondConfirmListener
{
  private static final String DELIVERED_SMS_ACTION_ORDER = "DELIVERED_SMS_ACTION_ORDER";
  private static final String DELIVERED_SMS_ACTION_VERIFY = "DELIVERED_SMS_ACTION_VERIFY";
  public static final int INT_SEND_MESSAGE_FAILED_INNERCODE = 9993;
  public static final int INT_SEND_MESSAGE_TIME_OUT = 2237;
  private static final long LONG_TIMER_DURATION_SECOND = 60000L;
  public static final String SECOND_CONFRIM_SMS_ADDRESS = "106566660020";
  private static final String SENT_SMS_ACTION_ORDER = "SENT_SMS_ACTION_ORDER";
  private static final String SENT_SMS_ACTION_VERIFY = "SENT_SMS_ACTION_VERIFY";
  private static final String TAG = "SendSMS";
  private static int sendCounter;
  private Context context;
  private BroadcastReceiver deliverReceiver;
  private Timer mTimerClock;
  private BroadcastReceiver receiver;
  private RequestDelegate reqDelegate;
  private UpLinkSMSMBean smsBean;
  
  public SendSMS(Context paramContext, UpLinkSMSMBean paramUpLinkSMSMBean, RequestDelegate paramRequestDelegate)
  {
    this.context = paramContext;
    this.smsBean = paramUpLinkSMSMBean;
    this.reqDelegate = paramRequestDelegate;
    init();
  }
  
  public SendSMS(Context paramContext, RequestDelegate paramRequestDelegate)
  {
    this.context = paramContext;
    this.reqDelegate = paramRequestDelegate;
    init();
  }
  
  private PendingIntent getOrderDeliverPI()
  {
    Intent localIntent = new Intent("DELIVERED_SMS_ACTION_ORDER");
    Context localContext = this.context;
    int i = sendCounter;
    sendCounter = i + 1;
    return PendingIntent.getBroadcast(localContext, i, localIntent, 134217728);
  }
  
  private PendingIntent getOrderSentPI()
  {
    Intent localIntent = new Intent("SENT_SMS_ACTION_ORDER");
    Context localContext = this.context;
    int i = sendCounter;
    sendCounter = i + 1;
    return PendingIntent.getBroadcast(localContext, i, localIntent, 134217728);
  }
  
  private PendingIntent getVerifyDeliverPI()
  {
    Intent localIntent = new Intent("DELIVERED_SMS_ACTION_VERIFY");
    Context localContext = this.context;
    int i = sendCounter;
    sendCounter = i + 1;
    return PendingIntent.getBroadcast(localContext, i, localIntent, 134217728);
  }
  
  private PendingIntent getVerifySentPI()
  {
    Intent localIntent = new Intent("SENT_SMS_ACTION_VERIFY");
    Context localContext = this.context;
    int i = sendCounter;
    sendCounter = i + 1;
    return PendingIntent.getBroadcast(localContext, i, localIntent, 134217728);
  }
  
  private void init()
  {
    this.receiver = new SendSMS.SendBroadcastReceiver(this);
    this.deliverReceiver = new SendSMS.DeliverBroadcastReceiver(this);
  }
  
  private void resetTimer(int paramInt)
  {
    if (this.mTimerClock != null) {
      this.mTimerClock.cancel();
    }
    this.mTimerClock = new Timer();
    this.mTimerClock.schedule(new SendSMS.MyTimerTask(this, paramInt), 60000L);
  }
  
  private void sendSMS(PendingIntent paramPendingIntent1, PendingIntent paramPendingIntent2, String paramString1, String paramString2)
  {
    SmsManager localSmsManager = SmsManager.getDefault();
    paramString1 = localSmsManager.divideMessage(paramString1).iterator();
    for (;;)
    {
      if (!paramString1.hasNext()) {
        return;
      }
      localSmsManager.sendTextMessage(paramString2, null, (String)paramString1.next(), paramPendingIntent1, paramPendingIntent2);
    }
  }
  
  public void cancel()
  {
    this.reqDelegate.requestFailed(9991, "用户取消");
    this.context.unregisterReceiver(this.receiver);
    this.context.unregisterReceiver(this.deliverReceiver);
  }
  
  public void confirm()
  {
    sendVerifySMSToServer();
  }
  
  public void sendOrderSMSToServer()
  {
    Object localObject = new IntentFilter();
    ((IntentFilter)localObject).addAction("SENT_SMS_ACTION_ORDER");
    ((IntentFilter)localObject).addAction("SENT_SMS_ACTION_VERIFY");
    this.context.registerReceiver(this.receiver, (IntentFilter)localObject);
    localObject = new IntentFilter();
    ((IntentFilter)localObject).addAction("DELIVERED_SMS_ACTION_ORDER");
    ((IntentFilter)localObject).addAction("DELIVERED_SMS_ACTION_VERIFY");
    this.context.registerReceiver(this.deliverReceiver, (IntentFilter)localObject);
    resetTimer(1);
    localObject = this.smsBean.getSmsContent();
    sendSMS(getOrderSentPI(), getOrderDeliverPI(), (String)localObject, "106566660020");
  }
  
  public void sendVerifySMSToServer()
  {
    resetTimer(2);
    sendSMS(getVerifySentPI(), getVerifyDeliverPI(), this.smsBean.getVerifyCode(), "106566660020");
  }
}
