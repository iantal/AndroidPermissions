package com.sopay;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import android.util.Log;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.util.Enumeration;

public final class i
{
  private static TelephonyManager a;
  private static ConnectivityManager b;
  private static String c = "";
  private static String d = "";
  private static String e = "";
  private static String f = "";
  private static String g = "";
  private static String h = "";
  private static String i = "";
  
  public static String a()
  {
    return Build.BRAND;
  }
  
  public static String a(Context paramContext, String paramString)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData.getString(paramString);
      return paramContext;
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      paramContext.printStackTrace();
    }
    return "";
  }
  
  public static boolean a(Context paramContext)
  {
    if (paramContext != null)
    {
      if (a == null) {
        a = (TelephonyManager)paramContext.getSystemService("phone");
      }
      Log.i("tmp", "st " + a.getSimState());
    }
    switch (a.getSimState())
    {
    case 2: 
    case 3: 
    case 4: 
    default: 
      return false;
    case 0: 
    case 1: 
      return false;
    }
    return true;
  }
  
  public static String b()
  {
    return Build.VERSION.RELEASE;
  }
  
  public static String b(Context paramContext)
  {
    paramContext = ((TelephonyManager)paramContext.getSystemService("phone")).getSubscriberId();
    if ((paramContext != null) && (!"".equals(paramContext)))
    {
      if ((paramContext.startsWith("46000")) || (paramContext.startsWith("46002")) || (paramContext.startsWith("46007"))) {
        return "1";
      }
      if ((paramContext.startsWith("46001")) || (paramContext.startsWith("46006"))) {
        return "2";
      }
      if ((paramContext.startsWith("46003")) || (paramContext.startsWith("46005")) || (paramContext.startsWith("46011"))) {
        return "3";
      }
      return "null@" + paramContext;
    }
    return "-1";
  }
  
  public static String c(Context paramContext)
  {
    if ((paramContext == null) || (!TextUtils.isEmpty(g)) || (paramContext != null))
    {
      try
      {
        if (b == null) {
          b = (ConnectivityManager)paramContext.getSystemService("connectivity");
        }
        if (b == null) {
          break label292;
        }
        localObject = b.getAllNetworkInfo();
        if (localObject == null) {
          break label292;
        }
        j = 0;
        if (j < localObject.length) {
          break label205;
        }
      }
      catch (Exception paramContext)
      {
        for (;;)
        {
          Object localObject;
          label63:
          paramContext.printStackTrace();
        }
      }
      if (j != 0)
      {
        if (paramContext == null) {
          break label304;
        }
        if (b == null) {
          b = (ConnectivityManager)paramContext.getSystemService("connectivity");
        }
        if (b.getNetworkInfo(1) == null) {
          break label304;
        }
      }
    }
    label205:
    label292:
    label297:
    label304:
    for (int j = 1;; j = 0)
    {
      if (j != 0)
      {
        paramContext = (WifiManager)paramContext.getSystemService("wifi");
        if (!paramContext.isWifiEnabled()) {
          paramContext.setWifiEnabled(true);
        }
        j = paramContext.getConnectionInfo().getIpAddress();
        g = String.format("%d.%d.%d.%d", new Object[] { Integer.valueOf(j & 0xFF), Integer.valueOf(j >> 8 & 0xFF), Integer.valueOf(j >> 16 & 0xFF), Integer.valueOf(j >> 24 & 0xFF) });
      }
      for (;;)
      {
        return g;
        if (!localObject[j].isConnected()) {
          break label297;
        }
        j = 1;
        break;
        paramContext = NetworkInterface.getNetworkInterfaces();
        while (paramContext.hasMoreElements())
        {
          localObject = ((NetworkInterface)paramContext.nextElement()).getInetAddresses();
          while (((Enumeration)localObject).hasMoreElements())
          {
            InetAddress localInetAddress = (InetAddress)((Enumeration)localObject).nextElement();
            if (!localInetAddress.isLoopbackAddress()) {
              g = localInetAddress.getHostAddress().toString();
            }
          }
        }
      }
      j = 0;
      break label63;
      j += 1;
      break;
    }
  }
  
  public static String d(Context paramContext)
  {
    if ((paramContext != null) && (TextUtils.isEmpty(f)))
    {
      if (a == null) {
        a = (TelephonyManager)paramContext.getSystemService("phone");
      }
      paramContext = a.getLine1Number();
      f = paramContext;
      if (!TextUtils.isEmpty(paramContext))
      {
        if (f.startsWith("+86")) {
          f = f.substring(3);
        }
        if (!f.matches("[0]+")) {}
      }
      else
      {
        f = "";
      }
    }
    return f;
  }
  
  public static String e(Context paramContext)
  {
    if ((paramContext != null) && (TextUtils.isEmpty(c)))
    {
      if (a == null) {
        a = (TelephonyManager)paramContext.getSystemService("phone");
      }
      c = a.getSubscriberId();
    }
    if (c == null) {
      return "";
    }
    return c;
  }
  
  public static String f(Context paramContext)
  {
    if ((paramContext != null) && (TextUtils.isEmpty(d)))
    {
      if (a == null) {
        a = (TelephonyManager)paramContext.getSystemService("phone");
      }
      paramContext = a.getDeviceId();
      d = paramContext;
      if ((paramContext == null) || (d.trim().length() == 0) || (d.matches("0+"))) {
        d = "";
      }
    }
    return d;
  }
  
  public static String g(Context paramContext)
  {
    if ((paramContext != null) && (TextUtils.isEmpty(e)))
    {
      if (a == null) {
        a = (TelephonyManager)paramContext.getSystemService("phone");
      }
      e = a.getSimSerialNumber();
    }
    if (c == null) {
      return "";
    }
    return e;
  }
  
  /* Error */
  public static String h(Context paramContext)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 50	android/content/Context:getPackageManager	()Landroid/content/pm/PackageManager;
    //   4: astore_2
    //   5: aload_2
    //   6: aload_0
    //   7: invokevirtual 53	android/content/Context:getPackageName	()Ljava/lang/String;
    //   10: iconst_0
    //   11: invokevirtual 279	android/content/pm/PackageManager:getPackageInfo	(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
    //   14: getfield 285	android/content/pm/PackageInfo:applicationInfo	Landroid/content/pm/ApplicationInfo;
    //   17: aload_2
    //   18: invokevirtual 289	android/content/pm/ApplicationInfo:loadLabel	(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;
    //   21: checkcast 122	java/lang/String
    //   24: astore_0
    //   25: aload_0
    //   26: ifnull +12 -> 38
    //   29: aload_0
    //   30: invokevirtual 270	java/lang/String:length	()I
    //   33: istore_1
    //   34: iload_1
    //   35: ifgt +6 -> 41
    //   38: ldc 20
    //   40: astore_0
    //   41: aload_0
    //   42: areturn
    //   43: astore_0
    //   44: ldc 20
    //   46: areturn
    //   47: astore_2
    //   48: aload_0
    //   49: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	50	0	paramContext	Context
    //   33	2	1	j	int
    //   4	14	2	localPackageManager	PackageManager
    //   47	1	2	localException	Exception
    // Exception table:
    //   from	to	target	type
    //   0	25	43	java/lang/Exception
    //   29	34	47	java/lang/Exception
  }
  
  public static String i(Context paramContext)
  {
    if ((paramContext != null) && (TextUtils.isEmpty(h))) {}
    try
    {
      h = paramContext.getPackageManager().getPackageInfo(paramContext.getPackageName(), 0).packageName.toString();
      return h;
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
  }
}
