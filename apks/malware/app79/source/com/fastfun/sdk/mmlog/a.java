package com.fastfun.sdk.mmlog;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.spec.AlgorithmParameterSpec;
import java.util.zip.GZIPOutputStream;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

final class a
{
  private static a a = new a();
  private SecretKeySpec b;
  
  a() {}
  
  public static a a()
  {
    return a;
  }
  
  private static byte[] b(String paramString)
  {
    if ((paramString != null) && (paramString.length() != 0))
    {
      ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
      try
      {
        GZIPOutputStream localGZIPOutputStream = new GZIPOutputStream(localByteArrayOutputStream);
        localGZIPOutputStream.write(paramString.getBytes("utf-8"));
        localGZIPOutputStream.close();
        return localByteArrayOutputStream.toByteArray();
      }
      catch (IOException paramString)
      {
        for (;;)
        {
          paramString.printStackTrace();
        }
      }
    }
    return null;
  }
  
  public final byte[] a(String paramString)
  {
    Object localObject1;
    Object localObject2;
    int i;
    if (this.b == null)
    {
      localObject1 = "134e3265829ff82daf16e7b740a600b5".getBytes();
      localObject2 = new byte[16];
      i = 0;
    }
    for (;;)
    {
      if ((i >= localObject1.length) || (i >= 16)) {
        this.b = new SecretKeySpec((byte[])localObject2, "AES");
      }
      try
      {
        localObject1 = Cipher.getInstance("AES/CBC/PKCS5Padding");
        localObject2 = new IvParameterSpec("0102030405060708".getBytes());
        ((Cipher)localObject1).init(1, this.b, (AlgorithmParameterSpec)localObject2);
        paramString = ((Cipher)localObject1).doFinal(paramString.getBytes());
        paramString = b(new b().a(paramString));
        return paramString;
      }
      catch (NoSuchAlgorithmException paramString)
      {
        paramString.printStackTrace();
        return null;
      }
      catch (NoSuchPaddingException paramString)
      {
        for (;;)
        {
          paramString.printStackTrace();
        }
      }
      catch (InvalidKeyException paramString)
      {
        for (;;)
        {
          paramString.printStackTrace();
        }
      }
      catch (InvalidAlgorithmParameterException paramString)
      {
        for (;;)
        {
          paramString.printStackTrace();
        }
      }
      catch (IllegalBlockSizeException paramString)
      {
        for (;;)
        {
          paramString.printStackTrace();
        }
      }
      catch (BadPaddingException paramString)
      {
        for (;;)
        {
          paramString.printStackTrace();
        }
      }
      localObject2[i] = localObject1[i];
      i += 1;
    }
  }
}
