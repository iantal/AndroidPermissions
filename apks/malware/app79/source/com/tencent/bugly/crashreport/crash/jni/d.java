package com.tencent.bugly.crashreport.crash.jni;

import android.content.Context;
import com.tencent.bugly.a.bf;
import com.tencent.bugly.crashreport.common.info.c;
import com.tencent.bugly.crashreport.crash.CrashDetailBean;
import java.io.File;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;

public class d
{
  /* Error */
  public static CrashDetailBean a(Context paramContext, String paramString, b paramB)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 5
    //   3: aload_0
    //   4: ifnull +11 -> 15
    //   7: aload_1
    //   8: ifnull +7 -> 15
    //   11: aload_2
    //   12: ifnonnull +18 -> 30
    //   15: ldc 10
    //   17: iconst_0
    //   18: anewarray 4	java/lang/Object
    //   21: invokestatic 16	com/tencent/bugly/a/bf:e	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   24: pop
    //   25: aload 5
    //   27: astore_1
    //   28: aload_1
    //   29: areturn
    //   30: new 18	java/io/File
    //   33: dup
    //   34: aload_1
    //   35: ldc 20
    //   37: invokespecial 24	java/io/File:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   40: astore_3
    //   41: aload 5
    //   43: astore_1
    //   44: aload_3
    //   45: invokevirtual 28	java/io/File:exists	()Z
    //   48: ifeq -20 -> 28
    //   51: aload 5
    //   53: astore_1
    //   54: aload_3
    //   55: invokevirtual 31	java/io/File:canRead	()Z
    //   58: ifeq -30 -> 28
    //   61: new 33	java/io/FileInputStream
    //   64: dup
    //   65: aload_3
    //   66: invokespecial 36	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   69: astore 4
    //   71: aload 4
    //   73: astore_1
    //   74: aload 4
    //   76: invokestatic 39	com/tencent/bugly/crashreport/crash/jni/d:a	(Ljava/io/InputStream;)Ljava/lang/String;
    //   79: astore_3
    //   80: aload_3
    //   81: ifnull +15 -> 96
    //   84: aload 4
    //   86: astore_1
    //   87: aload_3
    //   88: ldc 41
    //   90: invokevirtual 47	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   93: ifne +42 -> 135
    //   96: aload 4
    //   98: astore_1
    //   99: ldc 49
    //   101: iconst_1
    //   102: anewarray 4	java/lang/Object
    //   105: dup
    //   106: iconst_0
    //   107: aload_3
    //   108: aastore
    //   109: invokestatic 16	com/tencent/bugly/a/bf:e	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   112: pop
    //   113: aload 5
    //   115: astore_1
    //   116: aload 4
    //   118: ifnull -90 -> 28
    //   121: aload 4
    //   123: invokevirtual 53	java/io/FileInputStream:close	()V
    //   126: aconst_null
    //   127: areturn
    //   128: astore_0
    //   129: aload_0
    //   130: invokevirtual 56	java/io/IOException:printStackTrace	()V
    //   133: aconst_null
    //   134: areturn
    //   135: aload 4
    //   137: astore_1
    //   138: new 58	java/util/HashMap
    //   141: dup
    //   142: invokespecial 60	java/util/HashMap:<init>	()V
    //   145: astore 7
    //   147: aconst_null
    //   148: astore_3
    //   149: aload 4
    //   151: astore_1
    //   152: aload 4
    //   154: invokestatic 39	com/tencent/bugly/crashreport/crash/jni/d:a	(Ljava/io/InputStream;)Ljava/lang/String;
    //   157: astore 6
    //   159: aload 6
    //   161: ifnull +32 -> 193
    //   164: aload_3
    //   165: ifnonnull +9 -> 174
    //   168: aload 6
    //   170: astore_3
    //   171: goto -22 -> 149
    //   174: aload 4
    //   176: astore_1
    //   177: aload 7
    //   179: aload_3
    //   180: aload 6
    //   182: invokeinterface 66 3 0
    //   187: pop
    //   188: aconst_null
    //   189: astore_3
    //   190: goto -41 -> 149
    //   193: aload_3
    //   194: ifnull +42 -> 236
    //   197: aload 4
    //   199: astore_1
    //   200: ldc 68
    //   202: iconst_1
    //   203: anewarray 4	java/lang/Object
    //   206: dup
    //   207: iconst_0
    //   208: aload_3
    //   209: aastore
    //   210: invokestatic 16	com/tencent/bugly/a/bf:e	(Ljava/lang/String;[Ljava/lang/Object;)Z
    //   213: pop
    //   214: aload 5
    //   216: astore_1
    //   217: aload 4
    //   219: ifnull -191 -> 28
    //   222: aload 4
    //   224: invokevirtual 53	java/io/FileInputStream:close	()V
    //   227: aconst_null
    //   228: areturn
    //   229: astore_0
    //   230: aload_0
    //   231: invokevirtual 56	java/io/IOException:printStackTrace	()V
    //   234: aconst_null
    //   235: areturn
    //   236: aload 4
    //   238: astore_1
    //   239: aload_0
    //   240: aload 7
    //   242: aload_2
    //   243: invokestatic 71	com/tencent/bugly/crashreport/crash/jni/d:a	(Landroid/content/Context;Ljava/util/Map;Lcom/tencent/bugly/crashreport/crash/jni/b;)Lcom/tencent/bugly/crashreport/crash/CrashDetailBean;
    //   246: astore_0
    //   247: aload_0
    //   248: astore_1
    //   249: aload 4
    //   251: ifnull -223 -> 28
    //   254: aload 4
    //   256: invokevirtual 53	java/io/FileInputStream:close	()V
    //   259: aload_0
    //   260: areturn
    //   261: astore_1
    //   262: aload_1
    //   263: invokevirtual 56	java/io/IOException:printStackTrace	()V
    //   266: aload_0
    //   267: areturn
    //   268: astore_2
    //   269: aconst_null
    //   270: astore_0
    //   271: aload_0
    //   272: astore_1
    //   273: aload_2
    //   274: invokevirtual 56	java/io/IOException:printStackTrace	()V
    //   277: aload 5
    //   279: astore_1
    //   280: aload_0
    //   281: ifnull -253 -> 28
    //   284: aload_0
    //   285: invokevirtual 53	java/io/FileInputStream:close	()V
    //   288: aconst_null
    //   289: areturn
    //   290: astore_0
    //   291: aload_0
    //   292: invokevirtual 56	java/io/IOException:printStackTrace	()V
    //   295: aconst_null
    //   296: areturn
    //   297: astore_0
    //   298: aconst_null
    //   299: astore_1
    //   300: aload_1
    //   301: ifnull +7 -> 308
    //   304: aload_1
    //   305: invokevirtual 53	java/io/FileInputStream:close	()V
    //   308: aload_0
    //   309: athrow
    //   310: astore_1
    //   311: aload_1
    //   312: invokevirtual 56	java/io/IOException:printStackTrace	()V
    //   315: goto -7 -> 308
    //   318: astore_0
    //   319: goto -19 -> 300
    //   322: astore_2
    //   323: aload 4
    //   325: astore_0
    //   326: goto -55 -> 271
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	329	0	paramContext	Context
    //   0	329	1	paramString	String
    //   0	329	2	paramB	b
    //   40	169	3	localObject1	Object
    //   69	255	4	localFileInputStream	java.io.FileInputStream
    //   1	277	5	localObject2	Object
    //   157	24	6	str	String
    //   145	96	7	localHashMap	HashMap
    // Exception table:
    //   from	to	target	type
    //   121	126	128	java/io/IOException
    //   222	227	229	java/io/IOException
    //   254	259	261	java/io/IOException
    //   61	71	268	java/io/IOException
    //   284	288	290	java/io/IOException
    //   61	71	297	finally
    //   304	308	310	java/io/IOException
    //   74	80	318	finally
    //   87	96	318	finally
    //   99	113	318	finally
    //   138	147	318	finally
    //   152	159	318	finally
    //   177	188	318	finally
    //   200	214	318	finally
    //   239	247	318	finally
    //   273	277	318	finally
    //   74	80	322	java/io/IOException
    //   87	96	322	java/io/IOException
    //   99	113	322	java/io/IOException
    //   138	147	322	java/io/IOException
    //   152	159	322	java/io/IOException
    //   177	188	322	java/io/IOException
    //   200	214	322	java/io/IOException
    //   239	247	322	java/io/IOException
  }
  
  protected static CrashDetailBean a(Context paramContext, Map<String, String> paramMap, b paramB)
  {
    if (paramMap == null)
    {
      paramContext = null;
      return paramContext;
    }
    if (c.a(paramContext) == null)
    {
      bf.e("abnormal com info not created", new Object[0]);
      return null;
    }
    paramContext = (String)paramMap.get("intStateStr");
    if ((paramContext == null) || (paramContext.trim().length() <= 0))
    {
      bf.e("no intStateStr", new Object[0]);
      return null;
    }
    paramContext = a(paramContext);
    if (paramContext == null)
    {
      bf.e("parse intSateMap fail", new Object[] { Integer.valueOf(paramMap.size()) });
      return null;
    }
    for (;;)
    {
      try
      {
        i = ((Integer)paramContext.get("ep")).intValue();
        j = ((Integer)paramContext.get("et")).intValue();
        ((Integer)paramContext.get("sino")).intValue();
        k = ((Integer)paramContext.get("sico")).intValue();
        ((Integer)paramContext.get("spd")).intValue();
        ((Integer)paramContext.get("sud")).intValue();
        l1 = ((Integer)paramContext.get("ets")).intValue();
        l2 = ((Integer)paramContext.get("etms")).intValue();
        str5 = (String)paramMap.get("soVersion");
        if (str5 == null)
        {
          bf.e("error format at version", new Object[0]);
          return null;
        }
        str3 = (String)paramMap.get("errorAddr");
        if (str3 != null) {
          break label599;
        }
        str3 = "unknown2";
        paramContext = (String)paramMap.get("codeMsg");
        if (paramContext != null) {
          break label602;
        }
        paramContext = "unknown2";
        str4 = (String)paramMap.get("tombPath");
        if (str4 != null) {
          break label605;
        }
        str4 = "unknown2";
        str1 = (String)paramMap.get("signalName");
        if (str1 != null) {
          break label608;
        }
        str1 = "unknown2";
        str2 = (String)paramMap.get("errnoMsg");
        str2 = (String)paramMap.get("stack");
        if (str2 != null) {
          break label611;
        }
        str2 = "unknown2";
        str6 = (String)paramMap.get("jstack");
        paramMap = str2;
        if (str6 == null) {
          break label614;
        }
        paramMap = str2 + "java:\n" + str6;
      }
      catch (Throwable paramContext)
      {
        int i;
        int j;
        int k;
        long l1;
        long l2;
        String str5;
        String str3;
        String str4;
        String str1;
        String str2;
        String str7;
        bf.e("error format", new Object[0]);
        paramContext.printStackTrace();
        return null;
      }
      l2 /= 1000L;
      String str6 = b(paramMap);
      str7 = "UNKNOWN(" + i + ")";
      str2 = str1;
      paramMap = paramContext;
      if (k > 0)
      {
        str2 = str1 + "(" + paramContext + ")";
        paramMap = "KERNEL";
      }
      paramMap = paramB.a("unknown(" + j + ")", l1 * 1000L + l2, str2, str3, str6, paramMap, str7, str4, str5, false);
      paramContext = paramMap;
      if (paramMap == null) {
        break;
      }
      paramMap.y = null;
      paramMap.k = true;
      return paramMap;
      label599:
      continue;
      label602:
      continue;
      label605:
      continue;
      label608:
      continue;
      label611:
      continue;
      label614:
      if (str6 != null) {}
    }
  }
  
  protected static String a(InputStream paramInputStream)
  {
    if (paramInputStream == null) {
      return null;
    }
    StringBuilder localStringBuilder = new StringBuilder();
    for (;;)
    {
      int i = paramInputStream.read();
      if (i == -1) {
        break;
      }
      if (i == 0) {
        return localStringBuilder.toString();
      }
      localStringBuilder.append((char)i);
    }
  }
  
  protected static Map<String, Integer> a(String paramString)
  {
    if (paramString == null) {
      return null;
    }
    for (;;)
    {
      int i;
      String[] arrayOfString2;
      try
      {
        HashMap localHashMap = new HashMap();
        String[] arrayOfString1 = paramString.split(",");
        int j = arrayOfString1.length;
        i = 0;
        if (i >= j) {
          break;
        }
        String str = arrayOfString1[i];
        arrayOfString2 = str.split(":");
        if (arrayOfString2.length != 2)
        {
          bf.e("error format at %s", new Object[] { str });
          return null;
        }
      }
      catch (Exception localException)
      {
        bf.e("error format intStateStr %s", new Object[] { paramString });
        localException.printStackTrace();
        return null;
      }
      int k = Integer.parseInt(arrayOfString2[1]);
      localException.put(arrayOfString2[0], Integer.valueOf(k));
      i += 1;
    }
    return localException;
  }
  
  protected static String b(String paramString)
  {
    if (paramString == null) {
      paramString = "";
    }
    String[] arrayOfString;
    do
    {
      return paramString;
      arrayOfString = paramString.split("\n");
    } while ((arrayOfString == null) && (arrayOfString.length == 0));
    paramString = new StringBuilder();
    int j = arrayOfString.length;
    int i = 0;
    while (i < j)
    {
      String str = arrayOfString[i];
      if (!str.contains("java.lang.Thread.getStackTrace(")) {
        paramString.append(str).append("\n");
      }
      i += 1;
    }
    return paramString.toString();
  }
  
  public static void c(String paramString)
  {
    paramString = new File(paramString, "rqd_record.eup");
    if ((!paramString.exists()) || (!paramString.canWrite())) {
      return;
    }
    paramString.delete();
    bf.c("delete record file %s", new Object[] { paramString.getAbsoluteFile() });
  }
}
