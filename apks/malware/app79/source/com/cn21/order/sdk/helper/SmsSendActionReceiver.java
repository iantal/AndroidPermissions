package com.cn21.order.sdk.helper;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.util.Log;

public class SmsSendActionReceiver
  extends BroadcastReceiver
{
  public static final String SMS_SEND_ACTIOIN = "SMS_SEND_ACTIOIN";
  private static SmsSendActionReceiver smsReceiver = null;
  private String TAG = SmsSendActionReceiver.class.getSimpleName();
  private boolean isRegisterReceiver = false;
  
  private SmsSendActionReceiver() {}
  
  public static SmsSendActionReceiver getSingleInstance()
  {
    try
    {
      if (smsReceiver == null) {
        smsReceiver = new SmsSendActionReceiver();
      }
      SmsSendActionReceiver localSmsSendActionReceiver = smsReceiver;
      return localSmsSendActionReceiver;
    }
    finally {}
  }
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    paramIntent = paramIntent.getAction();
    Log.i(this.TAG, "=====>>>onReceive:" + paramIntent);
    if (paramIntent.equals("SMS_SEND_ACTIOIN"))
    {
      paramIntent = new Intent();
      paramIntent.setAction("com.cn21.android.paycenter.sdk.action");
      switch (getResultCode())
      {
      }
    }
    for (;;)
    {
      paramIntent.putExtra("result", -2);
      paramIntent.putExtra("message", "支付请求发送结果未知！");
      for (;;)
      {
        unRegisterSmsSendActionReceiver(paramContext);
        paramContext.sendBroadcast(paramIntent);
        return;
        paramIntent.putExtra("result", 1);
        paramIntent.putExtra("message", "支付请求发送成功！");
      }
      paramIntent.putExtra("result", -1);
      paramIntent.putExtra("message", "支付请求发送失败！");
    }
  }
  
  public void registerSmsSendActionReceiver(Context paramContext)
  {
    Log.i(this.TAG, "=====>>>registerSmsSendActionReceiver");
    if (!this.isRegisterReceiver)
    {
      this.isRegisterReceiver = true;
      IntentFilter localIntentFilter = new IntentFilter();
      localIntentFilter.addAction("SMS_SEND_ACTIOIN");
      paramContext.registerReceiver(getSingleInstance(), localIntentFilter);
    }
  }
  
  public void unRegisterSmsSendActionReceiver(Context paramContext)
  {
    Log.i(this.TAG, "=====>>>unRegisterSmsSendActionReceiver");
    if (this.isRegisterReceiver)
    {
      this.isRegisterReceiver = false;
      paramContext.unregisterReceiver(getSingleInstance());
    }
  }
}
