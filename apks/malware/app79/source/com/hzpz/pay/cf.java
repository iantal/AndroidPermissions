package com.hzpz.pay;

import java.math.BigInteger;

final class cf
  implements ak.a
{
  cf(PzPay paramPzPay, U paramU, boolean paramBoolean) {}
  
  public final void a(String paramString, boolean paramBoolean)
  {
    if ((!PzPay.1.1.d(paramString)) && (!paramBoolean))
    {
      localObject = this.b.d.split(",");
      str1 = this.b.c;
      if ("4".equals(this.b.k)) {
        if (!PzPay.1.1.d(this.b.p))
        {
          paramString = this.b.p.split(",");
          if (paramString.length < 3) {
            break label517;
          }
          if (PzPay.1.1.d(PzPay.t)) {
            if (this.c)
            {
              PzPay.a(this.a, PzPay.f(this.a), false, this.a.l, 21);
              PzPay.a(this.a, 21);
            }
          }
        }
      }
    }
    label517:
    while (!this.c)
    {
      do
      {
        Object localObject;
        String str1;
        return;
        new Thread(new cg(this, paramString, this.b, this.c)).start();
        return;
        if (localObject.length >= 3)
        {
          String str2 = localObject[0];
          String str3 = localObject[1];
          str1 = this.b.c;
          localObject = localObject[2];
          localObject = aL.a(str2, str3, PzPay.r, (String)localObject);
          PzPay.a(this.a, this.a.l, str1, (String)localObject, this.c);
          this.b.w = paramString;
          return;
          if (localObject.length >= 2)
          {
            str2 = localObject[0];
            localObject = localObject[1];
            try
            {
              str3 = PzPay.r;
              paramString = new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(aN.a(2L))).append("&").toString())).append(aN.a(new BigInteger((String)localObject, 16))).append("&").toString())).append(aN.a()).append("&").toString())).append(aN.a(new BigInteger(paramString, 10))).append("&").toString())).append(aN.a(123L)).append("&").toString() + aN.a(new BigInteger(str3, 10));
              paramString = paramString + "&" + aN.a(paramString, str2);
              aP.a("TAG", str1 + "###" + paramString);
              PzPay.a(this.a, this.a.l, str1, paramString, this.c);
              return;
            }
            catch (Exception paramString)
            {
              paramString.printStackTrace();
            }
          }
        }
      } while (!this.c);
      PzPay.a(this.a, 21);
      PzPay.a(this.a, PzPay.f(this.a), false, this.a.l, 21);
      return;
    }
    PzPay.a(this.a, PzPay.f(this.a), false, this.a.l, 20);
    PzPay.a(this.a, 20);
  }
}
