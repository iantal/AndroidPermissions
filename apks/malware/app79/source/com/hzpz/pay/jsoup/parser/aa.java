package com.hzpz.pay.jsoup.parser;

import com.hzpz.pay.jsoup.helper.StringUtil;
import com.hzpz.pay.jsoup.nodes.Attributes;
import com.hzpz.pay.jsoup.nodes.Element;

 enum aa
{
  aa()
  {
    super(str, i, null);
  }
  
  final boolean a(ad paramAd, b paramB)
  {
    boolean bool = true;
    if (paramAd.k())
    {
      paramB.q();
      paramB.b();
      paramB.a(j);
      bool = paramB.a(paramAd);
    }
    label403:
    do
    {
      Object localObject;
      String str;
      do
      {
        return bool;
        if (paramAd.i())
        {
          paramB.a(paramAd.j());
          return true;
        }
        if (paramAd.c())
        {
          paramB.b(this);
          return false;
        }
        if (!paramAd.e()) {
          break label403;
        }
        localObject = paramAd.f();
        str = ((ak)localObject).q();
        if (str.equals("caption"))
        {
          paramB.j();
          paramB.x();
          paramB.a((ak)localObject);
          paramB.a(k);
          return true;
        }
        if (str.equals("colgroup"))
        {
          paramB.j();
          paramB.a((ak)localObject);
          paramB.a(l);
          return true;
        }
        if (str.equals("col"))
        {
          paramB.l("colgroup");
          return paramB.a(paramAd);
        }
        if (StringUtil.a(str, new String[] { "tbody", "tfoot", "thead" }))
        {
          paramB.j();
          paramB.a((ak)localObject);
          paramB.a(m);
          return true;
        }
        if (StringUtil.a(str, new String[] { "td", "th", "tr" }))
        {
          paramB.l("tbody");
          return paramB.a(paramAd);
        }
        if (!str.equals("table")) {
          break;
        }
        paramB.b(this);
      } while (!paramB.m("table"));
      return paramB.a(paramAd);
      if (StringUtil.a(str, new String[] { "style", "script" })) {
        return paramB.a(paramAd, d);
      }
      if (str.equals("input"))
      {
        if (!((ak)localObject).d.a("type").equalsIgnoreCase("hidden")) {
          return b(paramAd, paramB);
        }
        paramB.b((ak)localObject);
        return true;
      }
      if (str.equals("form"))
      {
        paramB.b(this);
        if (paramB.p() != null) {
          return false;
        }
        paramB.a((ak)localObject, false);
        return true;
      }
      return b(paramAd, paramB);
      if (paramAd.g())
      {
        localObject = paramAd.h().q();
        if (((String)localObject).equals("table"))
        {
          if (!paramB.h((String)localObject))
          {
            paramB.b(this);
            return false;
          }
          paramB.c("table");
          paramB.m();
          return true;
        }
        if (StringUtil.a((String)localObject, new String[] { "body", "caption", "col", "colgroup", "html", "tbody", "td", "tfoot", "th", "thead", "tr" }))
        {
          paramB.b(this);
          return false;
        }
        return b(paramAd, paramB);
      }
      if (!paramAd.m()) {
        break;
      }
    } while (!paramB.z().a().equals("html"));
    paramB.b(this);
    return true;
    return b(paramAd, paramB);
  }
  
  final boolean b(ad paramAd, b paramB)
  {
    paramB.b(this);
    if (StringUtil.a(paramB.z().a(), new String[] { "table", "tbody", "tfoot", "thead", "tr" }))
    {
      paramB.b(true);
      boolean bool = paramB.a(paramAd, g);
      paramB.b(false);
      return bool;
    }
    return paramB.a(paramAd, g);
  }
}
