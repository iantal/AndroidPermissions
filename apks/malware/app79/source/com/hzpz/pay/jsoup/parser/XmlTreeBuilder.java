package com.hzpz.pay.jsoup.parser;

import com.hzpz.pay.jsoup.helper.Validate;
import com.hzpz.pay.jsoup.nodes.Comment;
import com.hzpz.pay.jsoup.nodes.Document;
import com.hzpz.pay.jsoup.nodes.Document.OutputSettings;
import com.hzpz.pay.jsoup.nodes.Document.OutputSettings.Syntax;
import com.hzpz.pay.jsoup.nodes.DocumentType;
import com.hzpz.pay.jsoup.nodes.Element;
import com.hzpz.pay.jsoup.nodes.Node;
import com.hzpz.pay.jsoup.nodes.TextNode;
import com.hzpz.pay.jsoup.nodes.XmlDeclaration;
import java.util.ArrayList;

public class XmlTreeBuilder
  extends de
{
  public XmlTreeBuilder() {}
  
  private void a(Node paramNode)
  {
    z().a(paramNode);
  }
  
  private void a(aj paramAj)
  {
    Object localObject = paramAj.q();
    int i = this.f.size() - 1;
    if (i >= 0)
    {
      paramAj = (Element)this.f.get(i);
      if (!paramAj.a().equals(localObject)) {}
    }
    for (;;)
    {
      if (paramAj == null) {}
      label99:
      for (;;)
      {
        return;
        i -= 1;
        break;
        i = this.f.size() - 1;
        for (;;)
        {
          if (i < 0) {
            break label99;
          }
          localObject = (Element)this.f.get(i);
          this.f.remove(i);
          if (localObject == paramAj) {
            break;
          }
          i -= 1;
        }
      }
      paramAj = null;
    }
  }
  
  Element a(ak paramAk)
  {
    Tag localTag = Tag.a(paramAk.q());
    Element localElement = new Element(localTag, this.g, paramAk.d);
    a(localElement);
    if (paramAk.r())
    {
      this.d.b();
      if (!localTag.f()) {
        localTag.i();
      }
      return localElement;
    }
    this.f.add(localElement);
    return localElement;
  }
  
  void a(af paramAf)
  {
    a(new TextNode(paramAf.n(), this.g));
  }
  
  void a(ag paramAg)
  {
    Comment localComment = new Comment(paramAg.n(), this.g);
    Object localObject = localComment;
    if (paramAg.c)
    {
      paramAg = localComment.b();
      localObject = localComment;
      if (paramAg.length() > 1) {
        if (!paramAg.startsWith("!"))
        {
          localObject = localComment;
          if (!paramAg.startsWith("?")) {}
        }
        else
        {
          localObject = new XmlDeclaration(paramAg.substring(1), localComment.x(), paramAg.startsWith("!"));
        }
      }
    }
    a((Node)localObject);
  }
  
  void a(ah paramAh)
  {
    a(new DocumentType(paramAh.n(), paramAh.o(), paramAh.p(), this.g));
  }
  
  protected boolean a(ad paramAd)
  {
    switch (df.a[paramAd.a.ordinal()])
    {
    default: 
      Validate.b("Unexpected token type: " + paramAd.a);
    }
    for (;;)
    {
      return true;
      a(paramAd.f());
      continue;
      a(paramAd.h());
      continue;
      a(paramAd.j());
      continue;
      a(paramAd.l());
      continue;
      a(paramAd.d());
    }
  }
  
  protected void b(String paramString1, String paramString2, ac paramAc)
  {
    super.b(paramString1, paramString2, paramAc);
    this.f.add(this.e);
    this.e.e().a(Document.OutputSettings.Syntax.b);
  }
}
