package com.hzpz.pay.jsoup.parser;

import com.hzpz.pay.jsoup.helper.Validate;
import com.hzpz.pay.jsoup.nodes.Entities;
import java.util.Arrays;

final class an
{
  private static final char[] h;
  StringBuilder a = new StringBuilder(1024);
  al b;
  ak c = new ak();
  aj d = new aj();
  af e = new af();
  ah f = new ah();
  ag g = new ag();
  private a i;
  private ac j;
  private ao k = ao.a;
  private ad l;
  private boolean m = false;
  private String n = null;
  private StringBuilder o = new StringBuilder(1024);
  private String p;
  private boolean q = true;
  private final char[] r = new char[1];
  
  static
  {
    char[] arrayOfChar = new char[7];
    arrayOfChar[0] = 9;
    arrayOfChar[1] = 10;
    arrayOfChar[2] = 13;
    arrayOfChar[3] = 12;
    arrayOfChar[4] = 32;
    arrayOfChar[5] = 60;
    arrayOfChar[6] = 38;
    arrayOfChar;
    h = arrayOfChar;
    Arrays.sort(arrayOfChar);
  }
  
  an(a paramA, ac paramAc)
  {
    this.i = paramA;
    this.j = paramAc;
  }
  
  private void b(String paramString)
  {
    if (this.j.a()) {
      this.j.add(new ParseError(this.i.a(), "Invalid character reference: %s", new Object[] { paramString }));
    }
  }
  
  private void c(String paramString)
  {
    if (this.j.a()) {
      this.j.add(new ParseError(this.i.a(), paramString));
    }
  }
  
  final ad a()
  {
    if (!this.q)
    {
      c("Self closing flag not acknowledged");
      this.q = true;
    }
    while (!this.m) {
      this.k.a(this, this.i);
    }
    Object localObject;
    if (this.o.length() > 0)
    {
      localObject = this.o.toString();
      this.o.delete(0, this.o.length());
      this.n = null;
      return this.e.a((String)localObject);
    }
    if (this.n != null)
    {
      localObject = this.e.a(this.n);
      this.n = null;
      return localObject;
    }
    this.m = false;
    return this.l;
  }
  
  final al a(boolean paramBoolean)
  {
    if (paramBoolean) {}
    for (al localAl = this.c.n();; localAl = this.d.n())
    {
      this.b = localAl;
      return this.b;
    }
  }
  
  final void a(char paramChar)
  {
    a(String.valueOf(paramChar));
  }
  
  final void a(ad paramAd)
  {
    Validate.b(this.m, "There is an unread token pending!");
    this.l = paramAd;
    this.m = true;
    if (paramAd.a == am.b)
    {
      paramAd = (ak)paramAd;
      this.p = paramAd.b;
      if (paramAd.c) {
        this.q = false;
      }
    }
    while ((paramAd.a != am.c) || (((aj)paramAd).d == null)) {
      return;
    }
    c("Attributes incorrectly present on end tag");
  }
  
  final void a(ao paramAo)
  {
    this.k = paramAo;
  }
  
  final void a(String paramString)
  {
    if (this.n == null)
    {
      this.n = paramString;
      return;
    }
    if (this.o.length() == 0) {
      this.o.append(this.n);
    }
    this.o.append(paramString);
  }
  
  final void a(char[] paramArrayOfChar)
  {
    a(String.valueOf(paramArrayOfChar));
  }
  
  final char[] a(Character paramCharacter, boolean paramBoolean)
  {
    if (this.i.b()) {
      return null;
    }
    if ((paramCharacter != null) && (paramCharacter.charValue() == this.i.c())) {
      return null;
    }
    if (this.i.d(h)) {
      return null;
    }
    char[] arrayOfChar = this.r;
    this.i.g();
    if (this.i.d("#"))
    {
      paramBoolean = this.i.e("X");
      if (paramBoolean) {}
      for (paramCharacter = this.i.n(); paramCharacter.length() == 0; paramCharacter = this.i.o())
      {
        b("numeric reference with no numerals");
        this.i.h();
        return null;
      }
      if (!this.i.d(";")) {
        b("missing semicolon");
      }
      if (paramBoolean) {
        i1 = 16;
      }
      try
      {
        for (;;)
        {
          i1 = Integer.valueOf(paramCharacter, i1).intValue();
          if ((i1 != -1) && ((i1 < 55296) || (i1 > 57343)) && (i1 <= 1114111)) {
            break;
          }
          b("character outside of valid range");
          arrayOfChar[0] = 65533;
          return arrayOfChar;
          i1 = 10;
        }
      }
      catch (NumberFormatException paramCharacter)
      {
        for (;;)
        {
          i1 = -1;
        }
        if (i1 < 65536)
        {
          arrayOfChar[0] = ((char)i1);
          return arrayOfChar;
        }
        return Character.toChars(i1);
      }
    }
    paramCharacter = this.i.m();
    boolean bool = this.i.c(';');
    if ((Entities.b(paramCharacter)) || ((Entities.a(paramCharacter)) && (bool))) {}
    for (int i1 = 1; i1 == 0; i1 = 0)
    {
      this.i.h();
      if (bool) {
        b(String.format("invalid named referenece '%s'", new Object[] { paramCharacter }));
      }
      return null;
    }
    if (paramBoolean) {
      if ((!this.i.p()) && (!this.i.q()))
      {
        if (!this.i.c(new char[] { 61, 45, 95 })) {}
      }
      else
      {
        this.i.h();
        return null;
      }
    }
    if (!this.i.d(";")) {
      b("missing semicolon");
    }
    arrayOfChar[0] = Entities.c(paramCharacter).charValue();
    return arrayOfChar;
  }
  
  final void b()
  {
    this.q = true;
  }
  
  final void b(ao paramAo)
  {
    this.i.f();
    this.k = paramAo;
  }
  
  final void c()
  {
    this.b.p();
    a(this.b);
  }
  
  final void c(ao paramAo)
  {
    if (this.j.a()) {
      this.j.add(new ParseError(this.i.a(), "Unexpected character '%s' in input state [%s]", new Object[] { Character.valueOf(this.i.c()), paramAo }));
    }
  }
  
  final void d()
  {
    this.g.b();
  }
  
  final void d(ao paramAo)
  {
    if (this.j.a()) {
      this.j.add(new ParseError(this.i.a(), "Unexpectedly reached end of file (EOF) in input state [%s]", new Object[] { paramAo }));
    }
  }
  
  final void e()
  {
    a(this.g);
  }
  
  final void f()
  {
    this.f.b();
  }
  
  final void g()
  {
    a(this.f);
  }
  
  final void h()
  {
    ad.a(this.a);
  }
  
  final boolean i()
  {
    return (this.p != null) && (this.b.b.equals(this.p));
  }
  
  final String j()
  {
    if (this.p == null) {
      return null;
    }
    return this.p;
  }
}
