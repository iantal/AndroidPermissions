package com.lepeng.utils;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Build;
import android.os.Build.VERSION;
import android.telephony.TelephonyManager;
import com.lepeng.data.UtilApplication;

public class TelephonyUtil
{
  private static long a;
  public static final TelephonyManager tm = (TelephonyManager)UtilApplication.getInstance().ctx.getSystemService("phone");
  
  public TelephonyUtil() {}
  
  public static int getCalState()
  {
    return tm.getCallState();
  }
  
  public static String getICCID()
  {
    return tm.getSimSerialNumber();
  }
  
  public static String getIMEI()
  {
    return tm.getDeviceId();
  }
  
  public static String getIMSI()
  {
    return tm.getSubscriberId();
  }
  
  public static int getNetworkType()
  {
    return tm.getNetworkType();
  }
  
  public static String getOperatorName()
  {
    String str = tm.getSimOperator();
    if ((str.equals("46000")) || (str.equals("46002"))) {
      return "中国移动";
    }
    if (str.equals("46001")) {
      return "中国联通";
    }
    return "中国电信";
  }
  
  public static String getOsInfo()
  {
    String str = Build.VERSION.RELEASE;
    if ((str != null) && (str.trim().length() > 0)) {
      return str;
    }
    return "";
  }
  
  public static String getOsModel()
  {
    String str = Build.MODEL.replace(" ", "");
    if ((str != null) && (str.trim().length() > 0)) {
      return str;
    }
    return "";
  }
  
  public static String getPhoneNumber()
  {
    return tm.getLine1Number();
  }
  
  public static int getPhoneType()
  {
    return tm.getPhoneType();
  }
  
  public static int getSimState()
  {
    return tm.getSimState();
  }
  
  public static boolean isFastDoubleClick()
  {
    long l1 = System.currentTimeMillis();
    long l2 = l1 - a;
    if ((0L < l2) && (l2 < 500L)) {
      return true;
    }
    a = l1;
    return false;
  }
  
  public static boolean isNetworkAvailable(Context paramContext)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    return (paramContext != null) && (paramContext.isAvailable());
  }
  
  public static boolean isRoaming()
  {
    if (getPhoneType() == 1) {
      return tm.isNetworkRoaming();
    }
    return false;
  }
}
