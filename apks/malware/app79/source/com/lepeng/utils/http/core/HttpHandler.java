package com.lepeng.utils.http.core;

import android.os.SystemClock;
import com.lepeng.utils.L;
import com.lepeng.utils.base.AsyncTask;
import com.lepeng.utils.http.core.entityhandler.EntityCallBack;
import com.lepeng.utils.http.core.entityhandler.FileEntityHandler;
import com.lepeng.utils.http.core.entityhandler.StringEntityHandler;
import java.io.File;
import java.io.IOException;
import java.net.UnknownHostException;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpRequestRetryHandler;
import org.apache.http.client.HttpResponseException;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.conn.ConnectTimeoutException;
import org.apache.http.impl.client.AbstractHttpClient;
import org.apache.http.protocol.HttpContext;

public class HttpHandler<T>
  extends AsyncTask<Object, Object, Object>
  implements EntityCallBack
{
  private static final int D = 1;
  private static final int E = 2;
  private static final int F = 3;
  private static final int G = 4;
  private int C = 0;
  private final RequestCallBack<T> jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack;
  private final FileEntityHandler jdField_a_of_type_ComLepengUtilsHttpCoreEntityhandlerFileEntityHandler = new FileEntityHandler();
  private final StringEntityHandler jdField_a_of_type_ComLepengUtilsHttpCoreEntityhandlerStringEntityHandler = new StringEntityHandler();
  private final AbstractHttpClient jdField_a_of_type_OrgApacheHttpImplClientAbstractHttpClient;
  private final HttpContext b;
  private boolean k = false;
  private String path = null;
  private long time;
  
  public HttpHandler(AbstractHttpClient paramAbstractHttpClient, HttpContext paramHttpContext, RequestCallBack<T> paramRequestCallBack)
  {
    this.jdField_a_of_type_OrgApacheHttpImplClientAbstractHttpClient = paramAbstractHttpClient;
    this.b = paramHttpContext;
    this.jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack = paramRequestCallBack;
  }
  
  private void a(HttpResponse paramHttpResponse)
  {
    StatusLine localStatusLine = paramHttpResponse.getStatusLine();
    Object localObject;
    if (localStatusLine.getStatusCode() >= 300)
    {
      localObject = "response status error code:" + localStatusLine.getStatusCode();
      paramHttpResponse = (HttpResponse)localObject;
      if (localStatusLine.getStatusCode() == 416)
      {
        paramHttpResponse = (HttpResponse)localObject;
        if (this.k) {
          paramHttpResponse = localObject + " \n maybe you have download complete.";
        }
      }
      publishProgress(new Object[] { Integer.valueOf(3), new HttpResponseException(localStatusLine.getStatusCode(), localStatusLine.getReasonPhrase()), paramHttpResponse });
      return;
    }
    for (;;)
    {
      try
      {
        localObject = paramHttpResponse.getEntity();
        paramHttpResponse = null;
        if (localObject != null)
        {
          this.time = SystemClock.uptimeMillis();
          if (this.path != null) {
            paramHttpResponse = this.jdField_a_of_type_ComLepengUtilsHttpCoreEntityhandlerFileEntityHandler.handleEntity((HttpEntity)localObject, this, this.path, this.k);
          }
        }
        else
        {
          if (paramHttpResponse != null) {
            break;
          }
          publishProgress(new Object[] { Integer.valueOf(3), new Exception("do not have data"), "do not have data" });
          return;
        }
      }
      catch (IOException paramHttpResponse)
      {
        publishProgress(new Object[] { Integer.valueOf(3), paramHttpResponse, paramHttpResponse.getMessage() });
        return;
      }
      paramHttpResponse = this.jdField_a_of_type_ComLepengUtilsHttpCoreEntityhandlerStringEntityHandler.handleEntity((HttpEntity)localObject, this);
    }
    publishProgress(new Object[] { Integer.valueOf(4), paramHttpResponse });
  }
  
  private void a(HttpUriRequest paramHttpUriRequest)
  {
    Object localObject;
    if ((this.k) && (this.path != null))
    {
      localObject = new File(this.path);
      if ((!((File)localObject).exists()) || (!((File)localObject).isFile())) {
        break label289;
      }
    }
    label289:
    for (long l = ((File)localObject).length();; l = 0L)
    {
      if (l > 0L) {
        paramHttpUriRequest.setHeader("RANGE", "bytes=" + l + "-");
      }
      localObject = null;
      HttpRequestRetryHandler localHttpRequestRetryHandler = this.jdField_a_of_type_OrgApacheHttpImplClientAbstractHttpClient.getHttpRequestRetryHandler();
      boolean bool = true;
      for (;;)
      {
        if (!bool) {
          throw ((Throwable)localObject);
        }
        try
        {
          if (!isCancelled())
          {
            localObject = this.jdField_a_of_type_OrgApacheHttpImplClientAbstractHttpClient.execute(paramHttpUriRequest, this.b);
            if (!isCancelled()) {
              a((HttpResponse)localObject);
            }
          }
          return;
        }
        catch (UnknownHostException paramHttpUriRequest)
        {
          publishProgress(new Object[] { Integer.valueOf(3), paramHttpUriRequest, "unknownHostExceptionï¼šcan't resolve host" });
          return;
        }
        catch (ConnectTimeoutException paramHttpUriRequest)
        {
          publishProgress(new Object[] { Integer.valueOf(3), paramHttpUriRequest, "Time out" });
          return;
        }
        catch (IOException localIOException1)
        {
          i = this.C + 1;
          this.C = i;
          bool = localHttpRequestRetryHandler.retryRequest(localIOException1, i, this.b);
        }
        catch (NullPointerException localNullPointerException)
        {
          IOException localIOException2 = new IOException("NPE in HttpClient " + localNullPointerException.getMessage());
          int i = this.C + 1;
          this.C = i;
          bool = localHttpRequestRetryHandler.retryRequest(localIOException2, i, this.b);
        }
      }
    }
  }
  
  public void callBack(long paramLong1, long paramLong2, boolean paramBoolean)
  {
    if ((this.jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack != null) && (this.jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack.isProgress()))
    {
      if (!paramBoolean) {
        break label52;
      }
      publishProgress(new Object[] { Integer.valueOf(2), Long.valueOf(paramLong1), Long.valueOf(paramLong2) });
    }
    label52:
    long l;
    do
    {
      return;
      l = SystemClock.uptimeMillis();
    } while (l - this.time < this.jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack.getRate());
    this.time = l;
    publishProgress(new Object[] { Integer.valueOf(2), Long.valueOf(paramLong1), Long.valueOf(paramLong2) });
  }
  
  protected Object doInBackground(Object... paramVarArgs)
  {
    if ((paramVarArgs != null) && (paramVarArgs.length == 3))
    {
      this.path = String.valueOf(paramVarArgs[1]);
      this.k = ((Boolean)paramVarArgs[2]).booleanValue();
      L.i("download file path = " + this.path);
    }
    try
    {
      publishProgress(new Object[] { Integer.valueOf(1) });
      a((HttpUriRequest)paramVarArgs[0]);
      return null;
    }
    catch (IOException paramVarArgs)
    {
      for (;;)
      {
        publishProgress(new Object[] { Integer.valueOf(3), paramVarArgs, paramVarArgs.getMessage() });
      }
    }
  }
  
  public boolean isStop()
  {
    return this.jdField_a_of_type_ComLepengUtilsHttpCoreEntityhandlerFileEntityHandler.isStop();
  }
  
  protected void onProgressUpdate(Object... paramVarArgs)
  {
    switch (Integer.valueOf(String.valueOf(paramVarArgs[0])).intValue())
    {
    }
    for (;;)
    {
      super.onProgressUpdate(paramVarArgs);
      return;
      if (this.jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack != null)
      {
        this.jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack.onStart();
        continue;
        if (this.jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack != null)
        {
          this.jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack.onLoading(Long.valueOf(String.valueOf(paramVarArgs[1])).longValue(), Long.valueOf(String.valueOf(paramVarArgs[2])).longValue());
          continue;
          if (this.jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack != null)
          {
            this.jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack.onFailure((Throwable)paramVarArgs[1], (String)paramVarArgs[2]);
            continue;
            if (this.jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack != null) {
              this.jdField_a_of_type_ComLepengUtilsHttpCoreRequestCallBack.onSuccess(paramVarArgs[1]);
            }
          }
        }
      }
    }
  }
  
  public void stop()
  {
    this.jdField_a_of_type_ComLepengUtilsHttpCoreEntityhandlerFileEntityHandler.setStop(true);
  }
}
