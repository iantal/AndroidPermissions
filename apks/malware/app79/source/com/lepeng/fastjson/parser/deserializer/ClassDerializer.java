package com.lepeng.fastjson.parser.deserializer;

import com.lepeng.fastjson.JSONException;
import com.lepeng.fastjson.parser.DefaultJSONParser;
import com.lepeng.fastjson.parser.JSONLexer;
import com.lepeng.fastjson.util.TypeUtils;
import java.lang.reflect.Type;

public class ClassDerializer
  implements ObjectDeserializer
{
  public static final ClassDerializer instance = new ClassDerializer();
  
  public ClassDerializer() {}
  
  public <T> T deserialze(DefaultJSONParser paramDefaultJSONParser, Type paramType, Object paramObject)
  {
    paramDefaultJSONParser = paramDefaultJSONParser.getLexer();
    if (paramDefaultJSONParser.token() == 8)
    {
      paramDefaultJSONParser.nextToken();
      return null;
    }
    if (paramDefaultJSONParser.token() != 4) {
      throw new JSONException("expect className");
    }
    paramType = paramDefaultJSONParser.stringVal();
    paramDefaultJSONParser.nextToken(16);
    return TypeUtils.loadClass(paramType);
  }
  
  public int getFastMatchToken()
  {
    return 4;
  }
}
