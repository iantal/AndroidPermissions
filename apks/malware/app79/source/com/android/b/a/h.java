package com.android.b.a;

import android.os.Build;
import android.text.TextUtils;
import android.util.Log;
import com.android.a.a.c;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.params.HttpParams;
import org.apache.http.util.EntityUtils;

public abstract class h
  extends a
{
  private String m;
  private String n;
  private Map o;
  private b p;
  private boolean q;
  private boolean r;
  
  public h() {}
  
  private HttpUriRequest a(String paramString, Map paramMap, b paramB)
  {
    Iterator localIterator;
    if (paramB.equals(b.b))
    {
      paramB = new ArrayList();
      if (paramMap != null) {
        localIterator = paramMap.keySet().iterator();
      }
      for (;;)
      {
        if (!localIterator.hasNext()) {}
        try
        {
          paramMap = new UrlEncodedFormEntity(paramB);
          com.android.e.a.a.a("url", "post url=" + paramString);
          paramString = new HttpPost(paramString);
          paramString.setHeader(com.android.a.a.a.N, b(com.android.a.a.a.t + com.android.a.a.a.B));
          paramString.setHeader(com.android.a.a.a.H, com.android.a.a.a.t);
          paramString.setEntity(paramMap);
          return paramString;
        }
        catch (UnsupportedEncodingException paramString)
        {
          String str;
          throw new RuntimeException(paramString.getMessage(), paramString);
        }
        str = (String)localIterator.next();
        com.android.e.a.a.a("url", "post canshu=" + str + " - " + (String)paramMap.get(str));
        paramB.add(new BasicNameValuePair(str, (String)paramMap.get(str)));
      }
    }
    if (paramString.indexOf("?") < 0) {
      paramString = paramString + "?";
    }
    for (;;)
    {
      if (paramMap != null)
      {
        localIterator = paramMap.keySet().iterator();
        if (!localIterator.hasNext()) {
          label286:
          paramString = paramString.replace("?&", "?").replace("+", "");
        }
      }
      for (;;)
      {
        try
        {
          if (!TextUtils.isEmpty(com.android.a.a.a.s))
          {
            com.android.a.a.a.s = URLEncoder.encode(com.android.a.a.a.s, "utf-8");
            if (com.android.a.a.a.s.length() > 15000) {
              com.android.a.a.a.s = com.android.a.a.a.s.substring(0, 15000);
            }
          }
          paramB = Build.MODEL;
          paramMap = paramB;
          if (TextUtils.isEmpty(paramB)) {
            paramMap = "";
          }
          com.android.e.a.a.a("url", "url=" + paramString + "    TData.IMSI=" + com.android.a.a.a.g + "    TData.UID=" + com.android.a.a.a.e + "    TData.errorMessage=" + com.android.a.a.a.s + "\tpno=" + com.android.a.a.a.b + "  TData.imei = " + com.android.a.a.a.h + " TData.V=" + com.android.a.a.a.a + "  TData.Ip = " + com.android.a.a.a.m);
          Log.d("fmz", "wifi = " + com.android.a.a.a.l);
          paramString = new HttpGet(paramString);
          paramString.setHeader("V", com.android.a.a.a.a);
          paramString.setHeader("H", com.android.a.a.a.d);
          paramString.setHeader("cid", com.android.a.a.a.k);
          paramString.setHeader("wf", com.android.a.a.a.l);
          paramString.setHeader("cip", com.android.a.a.a.m);
          paramString.setHeader(com.android.a.a.a.C, com.android.a.a.a.b);
          paramString.setHeader(com.android.a.a.a.D, com.android.a.a.a.g);
          paramString.setHeader(com.android.a.a.a.E, com.android.a.a.a.f);
          paramString.setHeader(com.android.a.a.a.F, com.android.a.a.a.e);
          paramString.setHeader(com.android.a.a.a.G, com.android.a.a.a.s);
          paramString.setHeader(com.android.a.a.a.H, com.android.a.a.a.t);
          paramString.setHeader(com.android.a.a.a.I, b(com.android.a.a.a.t + com.android.a.a.a.A));
          paramString.setHeader(com.android.a.a.a.J, paramMap);
          paramString.setHeader(com.android.a.a.a.K, com.android.a.a.a.h);
          paramString.setHeader(com.android.a.a.a.L, com.android.a.a.a.i);
          paramString.setHeader(com.android.a.a.a.M, com.android.a.a.a.j);
          return paramString;
          paramB = (String)localIterator.next();
          try
          {
            if (paramMap.get(paramB) == null) {
              break label286;
            }
            paramB = paramString + "&" + paramB + "=" + URLEncoder.encode((String)paramMap.get(paramB), "utf-8");
            paramString = paramB;
          }
          catch (Exception paramB)
          {
            paramB.printStackTrace();
          }
        }
        catch (UnsupportedEncodingException paramMap)
        {
          paramMap.printStackTrace();
        }
      }
    }
  }
  
  /* Error */
  private static String b(String paramString)
  {
    // Byte code:
    //   0: ldc -31
    //   2: new 67	java/lang/StringBuilder
    //   5: dup
    //   6: ldc_w 308
    //   9: invokespecial 72	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   12: aload_0
    //   13: invokevirtual 76	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16: invokevirtual 80	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   19: invokestatic 85	com/android/e/a/a:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   22: ldc -93
    //   24: astore_2
    //   25: aload_2
    //   26: astore_1
    //   27: ldc_w 310
    //   30: invokestatic 316	java/security/MessageDigest:getInstance	(Ljava/lang/String;)Ljava/security/MessageDigest;
    //   33: astore_3
    //   34: aload_2
    //   35: astore_1
    //   36: aload_3
    //   37: aload_0
    //   38: invokevirtual 320	java/lang/String:getBytes	()[B
    //   41: invokevirtual 324	java/security/MessageDigest:update	([B)V
    //   44: aload_2
    //   45: astore_1
    //   46: new 326	java/math/BigInteger
    //   49: dup
    //   50: iconst_1
    //   51: aload_3
    //   52: invokevirtual 329	java/security/MessageDigest:digest	()[B
    //   55: invokespecial 332	java/math/BigInteger:<init>	(I[B)V
    //   58: bipush 16
    //   60: invokevirtual 335	java/math/BigInteger:toString	(I)Ljava/lang/String;
    //   63: astore_0
    //   64: aload_0
    //   65: astore_1
    //   66: aload_0
    //   67: invokevirtual 338	java/lang/String:toUpperCase	()Ljava/lang/String;
    //   70: astore_0
    //   71: aload_0
    //   72: astore_1
    //   73: ldc -31
    //   75: new 67	java/lang/StringBuilder
    //   78: dup
    //   79: ldc_w 340
    //   82: invokespecial 72	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   85: aload_1
    //   86: invokevirtual 76	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   89: invokevirtual 80	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   92: invokestatic 85	com/android/e/a/a:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   95: aload_1
    //   96: areturn
    //   97: astore_0
    //   98: aload_0
    //   99: invokevirtual 303	java/lang/Exception:printStackTrace	()V
    //   102: aload_1
    //   103: areturn
    //   104: astore_0
    //   105: goto -7 -> 98
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	108	0	paramString	String
    //   26	77	1	str1	String
    //   24	21	2	str2	String
    //   33	19	3	localMessageDigest	java.security.MessageDigest
    // Exception table:
    //   from	to	target	type
    //   27	34	97	java/lang/Exception
    //   36	44	97	java/lang/Exception
    //   46	64	97	java/lang/Exception
    //   66	71	97	java/lang/Exception
    //   73	95	104	java/lang/Exception
  }
  
  public final String a(String paramString1, String paramString2, Map paramMap, b paramB)
  {
    String str = paramString1.trim();
    paramString1 = null;
    try
    {
      paramString2 = new DefaultHttpClient();
      paramString2.getParams().setIntParameter("http.socket.timeout", 200000);
      paramString2.getParams().setIntParameter("http.connection.timeout", 20000);
      paramMap = a(str, paramMap, paramB);
      paramString2.getParams().setParameter("http.protocol.cookie-policy", "best-match");
      paramString2 = paramString2.execute(paramMap);
      if (paramString2.getStatusLine().getStatusCode() == 200)
      {
        paramString1 = new StringBuilder(EntityUtils.toString(paramString2.getEntity()));
        this.r = false;
        paramString1 = paramString1.toString().replaceAll("<BR>", "\r\n");
      }
      return paramString1;
    }
    catch (Exception paramString1)
    {
      paramString1 = paramString1;
      c.b(l, false);
      this.r = true;
      paramString1.printStackTrace();
      return null;
    }
    finally {}
  }
  
  public abstract void a(String paramString);
  
  public final void a(String paramString1, String paramString2, Map paramMap, boolean paramBoolean, b paramB)
  {
    this.m = paramString1;
    this.n = paramString2;
    this.o = paramMap;
    this.p = paramB;
    this.q = paramBoolean;
    new e(this, null).execute(new String[0]);
  }
  
  public abstract void a(boolean paramBoolean, String paramString);
}
