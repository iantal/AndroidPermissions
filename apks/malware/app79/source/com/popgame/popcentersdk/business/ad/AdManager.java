package com.popgame.popcentersdk.business.ad;

import android.app.Activity;
import android.view.WindowManager.LayoutParams;
import android.webkit.WebView;
import com.popgame.popcentersdk.N0Run;
import com.popgame.popcentersdk.util.XPUtils;
import org.json.JSONObject;

public class AdManager
{
  public static String ADSName = null;
  public static String Key1 = null;
  public static String Key2 = null;
  public static JSONObject ViewParamJson = null;
  private WindowManager.LayoutParams WMParams = null;
  private Activity activity;
  private String alertUrl = null;
  private adView announcementView = null;
  private adView appWallView = null;
  private adView appWallViewCP = null;
  private adView bannerView = null;
  private adView bannerViewCP = null;
  private adView bigImgeView = null;
  private adView bigImgeViewCP = null;
  
  public AdManager(Activity paramActivity)
  {
    this.activity = paramActivity;
  }
  
  private String getInfo(JSONObject paramJSONObject, String paramString)
  {
    try
    {
      paramJSONObject = paramJSONObject.get(paramString).toString();
      return paramJSONObject;
    }
    catch (Throwable paramJSONObject)
    {
      if (N0Run.N0RunDebug) {
        paramJSONObject.printStackTrace();
      }
    }
    return null;
  }
  
  private void initAnnouncementView(JSONObject paramJSONObject)
  {
    try
    {
      if (this.announcementView == null)
      {
        XPUtils.xpPrint("ok");
        this.announcementView = new adView(this.activity);
      }
      if (getInfo(paramJSONObject, "type2").equals("Announcement"))
      {
        this.announcementView.setVisibility(4);
        this.announcementView.initial(this.activity, paramJSONObject);
        this.announcementView.loadView();
        this.announcementView.showView();
        return;
      }
      this.announcementView.initial(this.activity, paramJSONObject);
      this.announcementView.DownWebView.loadUrl(getInfo(paramJSONObject, "url"));
      return;
    }
    catch (Exception paramJSONObject)
    {
      paramJSONObject.printStackTrace();
      XPUtils.xpPrint(paramJSONObject.toString());
    }
  }
  
  private void initAppWallView(JSONObject paramJSONObject)
  {
    if (this.appWallView == null) {
      this.appWallView = new adView(this.activity);
    }
    this.appWallView.setVisibility(4);
    this.appWallView.initial(this.activity, paramJSONObject);
    this.appWallView.loadView();
    if (N0Run.N0RunDebug) {
      XPUtils.xpPrint("initAppWallView");
    }
  }
  
  private void initAppWallViewCP(JSONObject paramJSONObject)
  {
    if (this.appWallViewCP == null) {
      this.appWallViewCP = new adView(this.activity);
    }
    this.appWallViewCP.setVisibility(4);
    this.appWallViewCP.initial(this.activity, paramJSONObject);
    this.appWallViewCP.loadView();
  }
  
  private void initBannerView(JSONObject paramJSONObject)
  {
    if (this.bannerView == null) {
      this.bannerView = new adView(this.activity);
    }
    this.bannerView.setVisibility(4);
    this.bannerView.initial(this.activity, paramJSONObject);
    this.bannerView.loadView();
  }
  
  private void initBannerViewCP(JSONObject paramJSONObject)
  {
    if (this.bannerViewCP == null) {
      this.bannerViewCP = new adView(this.activity);
    }
    this.bannerViewCP.setVisibility(4);
    this.bannerViewCP.initial(this.activity, paramJSONObject);
    this.bannerViewCP.loadView();
  }
  
  private void initBigImgeView(JSONObject paramJSONObject)
  {
    if (this.bigImgeView == null) {
      this.bigImgeView = new adView(this.activity);
    }
    this.bigImgeView.setVisibility(4);
    this.bigImgeView.initial(this.activity, paramJSONObject);
  }
  
  private void initBigImgeViewCP(JSONObject paramJSONObject)
  {
    if (this.bigImgeViewCP == null) {
      this.bigImgeViewCP = new adView(this.activity);
    }
    this.bigImgeViewCP.setVisibility(4);
    this.bigImgeViewCP.initial(this.activity, paramJSONObject);
    this.bigImgeViewCP.loadView();
  }
  
  private boolean parseData(String paramString)
  {
    boolean bool2 = true;
    for (;;)
    {
      int i;
      boolean bool1;
      try
      {
        paramString = new JSONObject(paramString);
        i = 1;
        Object localObject = getInfo(paramString, "ad" + String.valueOf(i));
        bool1 = bool2;
        if (localObject != null)
        {
          localObject = new JSONObject((String)localObject);
          String str1 = getInfo((JSONObject)localObject, "type1");
          String str2 = getInfo((JSONObject)localObject, "type2");
          if ((str1 != null) || (str2.equalsIgnoreCase("AdControl")) || (str2.equalsIgnoreCase("Version")) || (str2.equalsIgnoreCase("Custom"))) {
            break label185;
          }
          if (str2.equalsIgnoreCase("Announcement")) {
            initAnnouncementView((JSONObject)localObject);
          } else if (str2.equalsIgnoreCase("download")) {
            initAnnouncementView((JSONObject)localObject);
          }
        }
      }
      catch (Exception paramString)
      {
        if (N0Run.N0RunDebug) {
          XPUtils.xpPrint(" AdManager parseData Error:" + paramString.toString());
        }
        bool1 = false;
      }
      return bool1;
      label185:
      i += 1;
    }
  }
  
  public void closeView()
  {
    if (this.appWallView != null) {
      this.appWallView.closeView();
    }
    if (N0Run.N0RunDebug) {
      XPUtils.xpPrint("close View");
    }
  }
  
  public void hideView()
  {
    if ((this.appWallView != null) && (this.appWallView.status == 1)) {
      this.appWallView.hideView();
    }
  }
  
  public void initialAdView(String paramString)
  {
    try
    {
      if (this.WMParams == null)
      {
        this.WMParams = new WindowManager.LayoutParams();
        this.WMParams.type = 2003;
        this.WMParams.format = 1;
        this.WMParams.gravity = 51;
      }
      parseData(paramString);
      return;
    }
    catch (Throwable paramString)
    {
      while (!N0Run.N0RunDebug) {}
      paramString.printStackTrace();
      XPUtils.xpPrint(paramString.toString());
    }
  }
  
  public void showView()
  {
    if ((this.appWallView != null) && (this.appWallView.status == 1)) {
      this.appWallView.showView();
    }
  }
}
