package com.popgame.popcentersdk.business.ad;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.res.AssetManager;
import android.content.res.Resources;
import android.graphics.BitmapFactory;
import android.graphics.Paint;
import android.graphics.PorterDuff.Mode;
import android.graphics.PorterDuffXfermode;
import android.graphics.drawable.BitmapDrawable;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.widget.Button;
import com.popgame.popcentersdk.AppInfo;
import com.popgame.popcentersdk.N0Run;
import com.popgame.popcentersdk.util.XPUtils;
import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import org.json.JSONObject;

@SuppressLint({"SetJavaScriptEnabled"})
public class adView
  extends ViewGroup
{
  private InputStream ClosePicture = null;
  public WebView DownWebView = null;
  private Activity activity = null;
  private BufferedInputStream bis = null;
  private Button closeBtn = null;
  private int closeBtnH = 0;
  private int closeBtnW = 0;
  private int closeBtnX = 0;
  private int closeBtnY = 0;
  private int hValue = 0;
  private int height;
  private boolean isFirst = true;
  private int loadStatus = 0;
  private float m_radius;
  private String newUrl = "";
  private Paint paint1;
  private Paint paint2;
  private int screenHeight = 0;
  private int screenWidth = 0;
  public int status = 0;
  public String url = null;
  private int wValue = 0;
  private WebView webView = null;
  private int webViewH = 0;
  private int webViewW = 0;
  private int webViewX = 0;
  private int webViewY = 0;
  private int width;
  private int x;
  private int xValue = 0;
  private int y;
  private int yValue = 0;
  
  public adView(Context paramContext)
  {
    super(paramContext);
  }
  
  private String getInfo(JSONObject paramJSONObject, String paramString)
  {
    try
    {
      paramJSONObject = paramJSONObject.get(paramString).toString();
      return paramJSONObject;
    }
    catch (Throwable paramJSONObject)
    {
      if (N0Run.N0RunDebug) {
        paramJSONObject.printStackTrace();
      }
    }
    return null;
  }
  
  public static String replaceUrl(String paramString)
  {
    if (AppInfo.m_imei.length() == 0) {
      AppInfo.m_imei = "0";
    }
    if (AppInfo.m_userId.length() == 0) {
      AppInfo.m_userId = "0";
    }
    if (AppInfo.m_macAddress.length() == 0) {
      AppInfo.m_macAddress = "0";
    }
    if (AppInfo.m_gameServer.length() == 0) {
      AppInfo.m_gameServer = "0";
    }
    if (AppInfo.m_gameVersion.length() == 0) {
      AppInfo.m_gameVersion = "0";
    }
    if (AppInfo.m_channelId.length() == 0) {
      AppInfo.m_channelId = "0";
    }
    return paramString.replaceAll("##odivice##", AppInfo.m_imei).replaceAll("##uid##", AppInfo.m_userId).replaceAll("##mac##", AppInfo.m_macAddress).replaceAll("##gserver##", AppInfo.m_gameServer).replaceAll("##version##", AppInfo.m_gameVersion).replaceAll("##cid##", AppInfo.m_channelId);
  }
  
  public void closeView()
  {
    try
    {
      removeAllViews();
      setVisibility(4);
      JSONObject localJSONObject = new JSONObject();
      localJSONObject.put("status", "3");
      localJSONObject.put("action", "2");
      localJSONObject.put("state", "0");
      localJSONObject.put("msg", "");
      localJSONObject.put("channelid", N0Run.getChannelNum());
      this.ClosePicture.close();
      return;
    }
    catch (Throwable localThrowable)
    {
      while (!N0Run.N0RunDebug) {}
      localThrowable.printStackTrace();
    }
  }
  
  public void hideView()
  {
    setVisibility(4);
  }
  
  public void initial(Activity paramActivity, JSONObject paramJSONObject)
  {
    this.activity = paramActivity;
    paramActivity = new DisplayMetrics();
    this.activity.getWindowManager().getDefaultDisplay().getMetrics(paramActivity);
    int i = paramActivity.widthPixels;
    int j = paramActivity.heightPixels;
    this.status = 0;
    this.isFirst = true;
    try
    {
      if ((!getInfo(paramJSONObject, "type2").equals("Announcement")) && (getInfo(paramJSONObject, "type1") == null)) {
        break label1038;
      }
      if ((paramJSONObject.has("phonex")) && (paramJSONObject.has("phoney")) && (paramJSONObject.has("phonew")) && (paramJSONObject.has("phoneh"))) {
        break label843;
      }
      if (!paramJSONObject.has("x")) {
        return;
      }
      if (!paramJSONObject.has("y")) {
        return;
      }
      this.xValue = Integer.valueOf(paramJSONObject.getString("x")).intValue();
      this.yValue = Integer.valueOf(paramJSONObject.getString("y")).intValue();
      this.webViewW = (i - this.xValue * i / 100);
      this.webViewH = (j - this.yValue * j / 100);
      if (this.xValue != -1) {
        break label786;
      }
      this.xValue = 0;
    }
    catch (Throwable paramActivity)
    {
      try
      {
        for (;;)
        {
          this.ClosePicture = getResources().getAssets().open("close.png");
          this.bis = new BufferedInputStream(this.ClosePicture);
          paramActivity = BitmapFactory.decodeStream(this.bis);
          this.closeBtn.setBackgroundDrawable(new BitmapDrawable(paramActivity));
          this.closeBtn.setWidth(this.closeBtnW);
          this.closeBtn.setHeight(this.closeBtnH);
          this.closeBtn.setGravity(48);
          this.closeBtn.setVisibility(4);
          this.closeBtn.setOnClickListener(new adView.5(this));
          if (!getInfo(paramJSONObject, "type2").equals("Announcement")) {
            break;
          }
          addView(this.closeBtn);
          return;
          label786:
          if (this.xValue == 101)
          {
            this.xValue = (i - this.webViewW);
            continue;
            paramActivity = paramActivity;
            if (!N0Run.N0RunDebug) {
              break;
            }
            paramActivity.printStackTrace();
            return;
            if (this.yValue == 101)
            {
              this.yValue = (j - this.webViewH);
              continue;
              label843:
              this.wValue = Integer.valueOf(paramJSONObject.getString("phonew")).intValue();
              this.hValue = Integer.valueOf(paramJSONObject.getString("phoneh")).intValue();
              this.webViewW = (this.wValue * i / 100);
              this.webViewH = (this.hValue * j / 100);
              XPUtils.xpPrint(String.valueOf(this.wValue));
              XPUtils.xpPrint(String.valueOf(i));
              XPUtils.xpPrint(String.valueOf(this.webViewW));
              this.xValue = Integer.valueOf(paramJSONObject.getString("phonex")).intValue();
              if (this.xValue <= 0) {
                this.xValue = 0;
              }
              for (;;)
              {
                this.yValue = Integer.valueOf(paramJSONObject.getString("phoney")).intValue();
                if (this.yValue > 0) {
                  break label1015;
                }
                this.yValue = 100;
                break;
                if (this.xValue >= 100) {
                  this.xValue = (i - this.webViewW);
                }
              }
              label1015:
              if (this.yValue >= 100) {
                this.yValue = (j - this.webViewH);
              }
            }
          }
        }
        label1038:
        XPUtils.xpPrint("ok");
        this.url = paramJSONObject.getString("url");
        this.url = replaceUrl(this.url);
        this.newUrl = "";
      }
      catch (IOException paramActivity)
      {
        for (;;)
        {
          XPUtils.xpPrint(paramActivity.toString());
          paramActivity.printStackTrace();
        }
      }
    }
    if (this.yValue == -1)
    {
      this.yValue = 100;
      if (getInfo(paramJSONObject, "type2").equals("Announcement"))
      {
        this.url = paramJSONObject.getString("url");
        this.url = replaceUrl(this.url);
        this.newUrl = "";
      }
      this.webViewX = (i * this.xValue / 100);
      this.webViewY = (j * this.yValue / 100);
      this.closeBtnW = ((int)Math.sqrt(this.webViewW * this.webViewH / 84));
      this.closeBtnH = ((int)Math.sqrt(this.webViewW * this.webViewH / 84));
      this.closeBtnX = (this.webViewX + this.webViewW - this.closeBtnW);
      this.closeBtnY = this.webViewY;
      this.paint1 = new Paint();
      this.paint1.setColor(-1);
      this.paint1.setAntiAlias(true);
      this.paint1.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_OUT));
      this.paint2 = new Paint();
      this.paint2.setXfermode(null);
      setRadius(this.webViewW, this.webViewH, 20.0F);
      if (this.webView == null)
      {
        this.webView = new adView.1(this, this.activity);
        this.webView.getSettings().setJavaScriptEnabled(true);
        this.webView.setVisibility(0);
        this.webView.setId(1);
        this.webView.setWebViewClient(new adView.2(this));
      }
      if (getInfo(paramJSONObject, "type2").equals("Announcement")) {
        addView(this.webView);
      }
      if (this.DownWebView == null)
      {
        this.DownWebView = new WebView(this.activity);
        this.DownWebView.getSettings().setJavaScriptEnabled(true);
        this.DownWebView.setVisibility(0);
        this.DownWebView.setId(1);
        this.DownWebView.setDownloadListener(new adView.3(this));
        this.DownWebView.setWebViewClient(new adView.4(this));
      }
      if (this.closeBtn == null)
      {
        this.closeBtn = new Button(this.activity);
        this.closeBtn.setId(2);
      }
    }
  }
  
  public void loadView()
  {
    if ((this.webView != null) && (this.url != null)) {
      this.webView.loadUrl(this.url);
    }
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    paramInt2 = getChildCount();
    paramInt1 = 0;
    if (paramInt1 >= paramInt2) {
      return;
    }
    View localView = getChildAt(paramInt1);
    switch (localView.getId())
    {
    }
    for (;;)
    {
      paramInt1 += 1;
      break;
      localView.setVisibility(0);
      localView.measure(this.webViewW, this.webViewH);
      localView.layout(this.webViewX, this.webViewY, this.webViewX + this.webViewW, this.webViewY + this.webViewH);
      continue;
      localView.setVisibility(0);
      localView.measure(this.closeBtnW, this.closeBtnH);
      localView.layout(this.webViewX + this.webViewW - this.closeBtnW, this.webViewY, this.webViewX + this.webViewW, this.webViewY + this.closeBtnH);
    }
  }
  
  public void setRadius(int paramInt1, int paramInt2, float paramFloat)
  {
    this.m_radius = paramFloat;
    this.width = paramInt1;
    this.height = paramInt2;
  }
  
  public void showView()
  {
    setVisibility(0);
  }
}
