package android.support.v4.app;

import android.content.Context;
import android.os.Parcelable;
import android.widget.TabHost;
import android.widget.TabHost.OnTabChangeListener;
import java.util.ArrayList;

public class FragmentTabHost
  extends TabHost
  implements TabHost.OnTabChangeListener
{
  private final ArrayList<y> a;
  private Context b;
  private o c;
  private int d;
  private TabHost.OnTabChangeListener e;
  private y f;
  private boolean g;
  
  private z a(String paramString, z paramZ)
  {
    Object localObject = null;
    int i = 0;
    if (i < this.a.size())
    {
      y localY = (y)this.a.get(i);
      if (!y.b(localY).equals(paramString)) {
        break label217;
      }
      localObject = localY;
    }
    label204:
    label217:
    for (;;)
    {
      i += 1;
      break;
      if (localObject == null) {
        throw new IllegalStateException("No tab known for tag " + paramString);
      }
      paramString = paramZ;
      if (this.f != localObject)
      {
        paramString = paramZ;
        if (paramZ == null) {
          paramString = this.c.a();
        }
        if ((this.f != null) && (y.a(this.f) != null)) {
          paramString.b(y.a(this.f));
        }
        if (localObject != null)
        {
          if (y.a(localObject) != null) {
            break label204;
          }
          y.a(localObject, Fragment.a(this.b, y.c(localObject).getName(), y.d(localObject)));
          paramString.a(this.d, y.a(localObject), y.b(localObject));
        }
      }
      for (;;)
      {
        this.f = localObject;
        return paramString;
        paramString.c(y.a(localObject));
      }
    }
  }
  
  protected void onAttachedToWindow()
  {
    super.onAttachedToWindow();
    String str = getCurrentTabTag();
    Object localObject1 = null;
    int i = 0;
    if (i < this.a.size())
    {
      y localY = (y)this.a.get(i);
      y.a(localY, this.c.a(y.b(localY)));
      Object localObject2 = localObject1;
      if (y.a(localY) != null)
      {
        localObject2 = localObject1;
        if (!y.a(localY).j())
        {
          if (!y.b(localY).equals(str)) {
            break label109;
          }
          this.f = localY;
          localObject2 = localObject1;
        }
      }
      for (;;)
      {
        i += 1;
        localObject1 = localObject2;
        break;
        label109:
        localObject2 = localObject1;
        if (localObject1 == null) {
          localObject2 = this.c.a();
        }
        ((z)localObject2).b(y.a(localY));
      }
    }
    this.g = true;
    localObject1 = a(str, (z)localObject1);
    if (localObject1 != null)
    {
      ((z)localObject1).a();
      this.c.b();
    }
  }
  
  protected void onDetachedFromWindow()
  {
    super.onDetachedFromWindow();
    this.g = false;
  }
  
  protected void onRestoreInstanceState(Parcelable paramParcelable)
  {
    paramParcelable = (FragmentTabHost.SavedState)paramParcelable;
    super.onRestoreInstanceState(paramParcelable.getSuperState());
    setCurrentTabByTag(paramParcelable.a);
  }
  
  protected Parcelable onSaveInstanceState()
  {
    FragmentTabHost.SavedState localSavedState = new FragmentTabHost.SavedState(super.onSaveInstanceState());
    localSavedState.a = getCurrentTabTag();
    return localSavedState;
  }
  
  public void onTabChanged(String paramString)
  {
    if (this.g)
    {
      z localZ = a(paramString, null);
      if (localZ != null) {
        localZ.a();
      }
    }
    if (this.e != null) {
      this.e.onTabChanged(paramString);
    }
  }
  
  public void setOnTabChangedListener(TabHost.OnTabChangeListener paramOnTabChangeListener)
  {
    this.e = paramOnTabChangeListener;
  }
  
  @Deprecated
  public void setup()
  {
    throw new IllegalStateException("Must call setup() that takes a Context and FragmentManager");
  }
}
