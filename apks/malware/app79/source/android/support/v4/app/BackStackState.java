package android.support.v4.app;

import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import android.text.TextUtils;
import android.util.Log;
import java.util.ArrayList;

final class BackStackState
  implements Parcelable
{
  public static final Parcelable.Creator<BackStackState> CREATOR = new f();
  final int[] a;
  final int b;
  final int c;
  final String d;
  final int e;
  final int f;
  final CharSequence g;
  final int h;
  final CharSequence i;
  
  public BackStackState(Parcel paramParcel)
  {
    this.a = paramParcel.createIntArray();
    this.b = paramParcel.readInt();
    this.c = paramParcel.readInt();
    this.d = paramParcel.readString();
    this.e = paramParcel.readInt();
    this.f = paramParcel.readInt();
    this.g = ((CharSequence)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(paramParcel));
    this.h = paramParcel.readInt();
    this.i = ((CharSequence)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(paramParcel));
  }
  
  public BackStackState(q paramQ, d paramD)
  {
    paramQ = paramD.b;
    int k;
    for (int j = 0; paramQ != null; j = k)
    {
      k = j;
      if (paramQ.i != null) {
        k = j + paramQ.i.size();
      }
      paramQ = paramQ.a;
    }
    this.a = new int[j + paramD.d * 7];
    if (!paramD.k) {
      throw new IllegalStateException("Not on back stack");
    }
    paramQ = paramD.b;
    j = 0;
    if (paramQ != null)
    {
      int[] arrayOfInt = this.a;
      k = j + 1;
      arrayOfInt[j] = paramQ.c;
      arrayOfInt = this.a;
      int m = k + 1;
      if (paramQ.d != null) {}
      for (j = paramQ.d.o;; j = -1)
      {
        arrayOfInt[k] = j;
        arrayOfInt = this.a;
        j = m + 1;
        arrayOfInt[m] = paramQ.e;
        arrayOfInt = this.a;
        k = j + 1;
        arrayOfInt[j] = paramQ.f;
        arrayOfInt = this.a;
        j = k + 1;
        arrayOfInt[k] = paramQ.g;
        arrayOfInt = this.a;
        k = j + 1;
        arrayOfInt[j] = paramQ.h;
        if (paramQ.i == null) {
          break label311;
        }
        m = paramQ.i.size();
        arrayOfInt = this.a;
        j = k + 1;
        arrayOfInt[k] = m;
        k = 0;
        while (k < m)
        {
          this.a[j] = ((Fragment)paramQ.i.get(k)).o;
          k += 1;
          j += 1;
        }
      }
      for (;;)
      {
        paramQ = paramQ.a;
        break;
        label311:
        arrayOfInt = this.a;
        j = k + 1;
        arrayOfInt[k] = 0;
      }
    }
    this.b = paramD.i;
    this.c = paramD.j;
    this.d = paramD.m;
    this.e = paramD.o;
    this.f = paramD.p;
    this.g = paramD.q;
    this.h = paramD.r;
    this.i = paramD.s;
  }
  
  public d a(q paramQ)
  {
    d localD = new d(paramQ);
    int m = 0;
    int j = 0;
    while (j < this.a.length)
    {
      e localE = new e();
      Object localObject = this.a;
      int k = j + 1;
      localE.c = localObject[j];
      if (q.a) {
        Log.v("FragmentManager", "Instantiate " + localD + " op #" + m + " base fragment #" + this.a[k]);
      }
      localObject = this.a;
      j = k + 1;
      k = localObject[k];
      if (k >= 0) {}
      for (localE.d = ((Fragment)paramQ.f.get(k));; localE.d = null)
      {
        localObject = this.a;
        k = j + 1;
        localE.e = localObject[j];
        localObject = this.a;
        j = k + 1;
        localE.f = localObject[k];
        localObject = this.a;
        k = j + 1;
        localE.g = localObject[j];
        localObject = this.a;
        j = k + 1;
        localE.h = localObject[k];
        localObject = this.a;
        k = j + 1;
        int i1 = localObject[j];
        j = k;
        if (i1 <= 0) {
          break;
        }
        localE.i = new ArrayList(i1);
        int n = 0;
        for (;;)
        {
          j = k;
          if (n >= i1) {
            break;
          }
          if (q.a) {
            Log.v("FragmentManager", "Instantiate " + localD + " set remove fragment #" + this.a[k]);
          }
          localObject = (Fragment)paramQ.f.get(this.a[k]);
          localE.i.add(localObject);
          n += 1;
          k += 1;
        }
      }
      localD.a(localE);
      m += 1;
    }
    localD.i = this.b;
    localD.j = this.c;
    localD.m = this.d;
    localD.o = this.e;
    localD.k = true;
    localD.p = this.f;
    localD.q = this.g;
    localD.r = this.h;
    localD.s = this.i;
    localD.a(1);
    return localD;
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    paramParcel.writeIntArray(this.a);
    paramParcel.writeInt(this.b);
    paramParcel.writeInt(this.c);
    paramParcel.writeString(this.d);
    paramParcel.writeInt(this.e);
    paramParcel.writeInt(this.f);
    TextUtils.writeToParcel(this.g, paramParcel, 0);
    paramParcel.writeInt(this.h);
    TextUtils.writeToParcel(this.i, paramParcel, 0);
  }
}
