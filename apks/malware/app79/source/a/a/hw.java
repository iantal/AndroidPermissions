package a.a;

public class hw
{
  private static int a = Integer.MAX_VALUE;
  
  public static void a(ht paramHt, byte paramByte)
  {
    a(paramHt, paramByte, a);
  }
  
  public static void a(ht paramHt, byte paramByte, int paramInt)
  {
    byte b2 = 0;
    byte b3 = 0;
    byte b1 = 0;
    if (paramInt <= 0) {
      throw new gv("Maximum skip depth exceeded");
    }
    switch (paramByte)
    {
    case 5: 
    case 7: 
    case 9: 
    default: 
      return;
    case 2: 
      paramHt.p();
      return;
    case 3: 
      paramHt.q();
      return;
    case 6: 
      paramHt.r();
      return;
    case 8: 
      paramHt.s();
      return;
    case 10: 
      paramHt.t();
      return;
    case 4: 
      paramHt.u();
      return;
    case 11: 
      paramHt.w();
      return;
    case 12: 
      paramHt.f();
      for (;;)
      {
        localObject = paramHt.h();
        if (((hq)localObject).b == 0)
        {
          paramHt.g();
          return;
        }
        a(paramHt, ((hq)localObject).b, paramInt - 1);
        paramHt.i();
      }
    case 13: 
      localObject = paramHt.j();
      paramByte = b1;
      while (paramByte < ((hs)localObject).c)
      {
        a(paramHt, ((hs)localObject).a, paramInt - 1);
        a(paramHt, ((hs)localObject).b, paramInt - 1);
        paramByte += 1;
      }
      paramHt.k();
      return;
    case 14: 
      localObject = paramHt.n();
      paramByte = b2;
      while (paramByte < ((hx)localObject).b)
      {
        a(paramHt, ((hx)localObject).a, paramInt - 1);
        paramByte += 1;
      }
      paramHt.o();
      return;
    }
    Object localObject = paramHt.l();
    paramByte = b3;
    while (paramByte < ((hr)localObject).b)
    {
      a(paramHt, ((hr)localObject).a, paramInt - 1);
      paramByte += 1;
    }
    paramHt.m();
  }
}
