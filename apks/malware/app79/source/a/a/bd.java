package a.a;

import java.io.Serializable;
import java.util.Collections;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.Map;

public class bd
  implements gq<bd, bj>, Serializable, Cloneable
{
  public static final Map<bj, hf> d;
  private static final hy e = new hy("Error");
  private static final hq f = new hq("ts", (byte)10, (short)1);
  private static final hq g = new hq("context", (byte)11, (short)2);
  private static final hq h = new hq("source", (byte)8, (short)3);
  private static final Map<Class<? extends ia>, ib> i = new HashMap();
  public long a;
  public String b;
  public bk c;
  private byte j = 0;
  private bj[] k = { bj.c };
  
  static
  {
    i.put(ic.class, new bg(null));
    i.put(id.class, new bi(null));
    EnumMap localEnumMap = new EnumMap(bj.class);
    localEnumMap.put(bj.a, new hf("ts", (byte)1, new hg((byte)10)));
    localEnumMap.put(bj.b, new hf("context", (byte)1, new hg((byte)11)));
    localEnumMap.put(bj.c, new hf("source", (byte)2, new he((byte)16, bk.class)));
    d = Collections.unmodifiableMap(localEnumMap);
    hf.a(bd.class, d);
  }
  
  public bd() {}
  
  public bd a(long paramLong)
  {
    this.a = paramLong;
    b(true);
    return this;
  }
  
  public bd a(bk paramBk)
  {
    this.c = paramBk;
    return this;
  }
  
  public bd a(String paramString)
  {
    this.b = paramString;
    return this;
  }
  
  public void a(ht paramHt)
  {
    ((ib)i.get(paramHt.y())).b().b(paramHt, this);
  }
  
  public boolean a()
  {
    return go.a(this.j, 0);
  }
  
  public void b(ht paramHt)
  {
    ((ib)i.get(paramHt.y())).b().a(paramHt, this);
  }
  
  public void b(boolean paramBoolean)
  {
    this.j = go.a(this.j, 0, paramBoolean);
  }
  
  public boolean b()
  {
    return this.c != null;
  }
  
  public void c()
  {
    if (this.b == null) {
      throw new hu("Required field 'context' was not present! Struct: " + toString());
    }
  }
  
  public void c(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.b = null;
    }
  }
  
  public void d(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.c = null;
    }
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder("Error(");
    localStringBuilder.append("ts:");
    localStringBuilder.append(this.a);
    localStringBuilder.append(", ");
    localStringBuilder.append("context:");
    if (this.b == null)
    {
      localStringBuilder.append("null");
      if (b())
      {
        localStringBuilder.append(", ");
        localStringBuilder.append("source:");
        if (this.c != null) {
          break label113;
        }
        localStringBuilder.append("null");
      }
    }
    for (;;)
    {
      localStringBuilder.append(")");
      return localStringBuilder.toString();
      localStringBuilder.append(this.b);
      break;
      label113:
      localStringBuilder.append(this.c);
    }
  }
}
