package a.a;

import java.util.Collections;
import java.util.EnumMap;
import java.util.Map;

public class em
  extends gy<em, eo>
{
  public static final Map<eo, hf> a;
  private static final hy d = new hy("PropertyValue");
  private static final hq e = new hq("string_value", (byte)11, (short)1);
  private static final hq f = new hq("long_value", (byte)10, (short)2);
  
  static
  {
    EnumMap localEnumMap = new EnumMap(eo.class);
    localEnumMap.put(eo.a, new hf("string_value", (byte)3, new hg((byte)11)));
    localEnumMap.put(eo.b, new hf("long_value", (byte)3, new hg((byte)10)));
    a = Collections.unmodifiableMap(localEnumMap);
    hf.a(em.class, a);
  }
  
  public em() {}
  
  protected eo a(short paramShort)
  {
    return eo.b(paramShort);
  }
  
  protected hq a(eo paramEo)
  {
    switch (en.a[paramEo.ordinal()])
    {
    default: 
      throw new IllegalArgumentException("Unknown field id " + paramEo);
    case 1: 
      return e;
    }
    return f;
  }
  
  protected hy a()
  {
    return d;
  }
  
  protected Object a(ht paramHt, hq paramHq)
  {
    String str = null;
    eo localEo = eo.a(paramHq.c);
    if (localEo != null) {}
    switch (en.a[localEo.ordinal()])
    {
    default: 
      throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
    case 1: 
      if (paramHq.b == e.b)
      {
        str = paramHt.v();
        return str;
      }
      hw.a(paramHt, paramHq.b);
      return null;
    }
    if (paramHq.b == f.b) {
      return Long.valueOf(paramHt.t());
    }
    hw.a(paramHt, paramHq.b);
    return null;
  }
  
  protected Object a(ht paramHt, short paramShort)
  {
    eo localEo = eo.a(paramShort);
    if (localEo != null)
    {
      switch (en.a[localEo.ordinal()])
      {
      default: 
        throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      case 1: 
        return paramHt.v();
      }
      return Long.valueOf(paramHt.t());
    }
    throw new hu("Couldn't find a field with field id " + paramShort);
  }
  
  public void a(long paramLong)
  {
    this.c = eo.b;
    this.b = Long.valueOf(paramLong);
  }
  
  public void a(String paramString)
  {
    if (paramString == null) {
      throw new NullPointerException();
    }
    this.c = eo.a;
    this.b = paramString;
  }
  
  public boolean a(em paramEm)
  {
    return (paramEm != null) && (b() == paramEm.b()) && (c().equals(paramEm.c()));
  }
  
  protected void c(ht paramHt)
  {
    switch (en.a[((eo)this.c).ordinal()])
    {
    default: 
      throw new IllegalStateException("Cannot write union with unknown field " + this.c);
    case 1: 
      paramHt.a((String)this.b);
      return;
    }
    paramHt.a(((Long)this.b).longValue());
  }
  
  protected void d(ht paramHt)
  {
    switch (en.a[((eo)this.c).ordinal()])
    {
    default: 
      throw new IllegalStateException("Cannot write union with unknown field " + this.c);
    case 1: 
      paramHt.a((String)this.b);
      return;
    }
    paramHt.a(((Long)this.b).longValue());
  }
  
  public boolean equals(Object paramObject)
  {
    if ((paramObject instanceof em)) {
      return a((em)paramObject);
    }
    return false;
  }
  
  public int hashCode()
  {
    return 0;
  }
}
