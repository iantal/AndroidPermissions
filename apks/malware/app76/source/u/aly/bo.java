package u.aly;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.BitSet;
import java.util.Collections;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public class bo
  implements Serializable, Cloneable, ch<bo, e>
{
  public static final Map<e, ct> e;
  private static final dl f = new dl("UserInfo");
  private static final db g = new db("gender", (byte)8, (short)1);
  private static final db h = new db("age", (byte)8, (short)2);
  private static final db i = new db("id", (byte)11, (short)3);
  private static final db j = new db("source", (byte)11, (short)4);
  private static final Map<Class<? extends do>, dp> k = new HashMap();
  private static final int l = 0;
  public aw a;
  public int b;
  public String c;
  public String d;
  private byte m = 0;
  private e[] n = { e.a, e.b, e.c, e.d };
  
  static
  {
    k.put(dq.class, new b(null));
    k.put(dr.class, new d(null));
    EnumMap localEnumMap = new EnumMap(e.class);
    localEnumMap.put(e.a, new ct("gender", (byte)2, new cs((byte)16, aw.class)));
    localEnumMap.put(e.b, new ct("age", (byte)2, new cu((byte)8)));
    localEnumMap.put(e.c, new ct("id", (byte)2, new cu((byte)11)));
    localEnumMap.put(e.d, new ct("source", (byte)2, new cu((byte)11)));
    e = Collections.unmodifiableMap(localEnumMap);
    ct.a(bo.class, e);
  }
  
  public bo() {}
  
  public bo(bo paramBo)
  {
    this.m = paramBo.m;
    if (paramBo.e()) {
      this.a = paramBo.a;
    }
    this.b = paramBo.b;
    if (paramBo.l()) {
      this.c = paramBo.c;
    }
    if (paramBo.o()) {
      this.d = paramBo.d;
    }
  }
  
  private void a(ObjectInputStream paramObjectInputStream)
    throws IOException, ClassNotFoundException
  {
    try
    {
      this.m = 0;
      a(new da(new ds(paramObjectInputStream)));
      return;
    }
    catch (cn paramObjectInputStream)
    {
      throw new IOException(paramObjectInputStream.getMessage());
    }
  }
  
  private void a(ObjectOutputStream paramObjectOutputStream)
    throws IOException
  {
    try
    {
      b(new da(new ds(paramObjectOutputStream)));
      return;
    }
    catch (cn paramObjectOutputStream)
    {
      throw new IOException(paramObjectOutputStream.getMessage());
    }
  }
  
  public bo a()
  {
    return new bo(this);
  }
  
  public bo a(int paramInt)
  {
    this.b = paramInt;
    b(true);
    return this;
  }
  
  public bo a(String paramString)
  {
    this.c = paramString;
    return this;
  }
  
  public bo a(aw paramAw)
  {
    this.a = paramAw;
    return this;
  }
  
  public void a(dg paramDg)
    throws cn
  {
    ((dp)k.get(paramDg.D())).b().b(paramDg, this);
  }
  
  public void a(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.a = null;
    }
  }
  
  public bo b(String paramString)
  {
    this.d = paramString;
    return this;
  }
  
  public void b()
  {
    this.a = null;
    b(false);
    this.b = 0;
    this.c = null;
    this.d = null;
  }
  
  public void b(dg paramDg)
    throws cn
  {
    ((dp)k.get(paramDg.D())).b().a(paramDg, this);
  }
  
  public void b(boolean paramBoolean)
  {
    this.m = ce.a(this.m, 0, paramBoolean);
  }
  
  public aw c()
  {
    return this.a;
  }
  
  public e c(int paramInt)
  {
    return e.a(paramInt);
  }
  
  public void c(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.c = null;
    }
  }
  
  public void d()
  {
    this.a = null;
  }
  
  public void d(boolean paramBoolean)
  {
    if (!paramBoolean) {
      this.d = null;
    }
  }
  
  public boolean e()
  {
    return this.a != null;
  }
  
  public int f()
  {
    return this.b;
  }
  
  public void h()
  {
    this.m = ce.b(this.m, 0);
  }
  
  public boolean i()
  {
    return ce.a(this.m, 0);
  }
  
  public String j()
  {
    return this.c;
  }
  
  public void k()
  {
    this.c = null;
  }
  
  public boolean l()
  {
    return this.c != null;
  }
  
  public String m()
  {
    return this.d;
  }
  
  public void n()
  {
    this.d = null;
  }
  
  public boolean o()
  {
    return this.d != null;
  }
  
  public void p()
    throws cn
  {}
  
  public String toString()
  {
    int i3 = 0;
    StringBuilder localStringBuilder = new StringBuilder("UserInfo(");
    int i1 = 1;
    int i2;
    if (e())
    {
      localStringBuilder.append("gender:");
      if (this.a == null)
      {
        localStringBuilder.append("null");
        i1 = 0;
      }
    }
    else
    {
      i2 = i1;
      if (i())
      {
        if (i1 == 0) {
          localStringBuilder.append(", ");
        }
        localStringBuilder.append("age:");
        localStringBuilder.append(this.b);
        i2 = 0;
      }
      if (!l()) {
        break label241;
      }
      if (i2 == 0) {
        localStringBuilder.append(", ");
      }
      localStringBuilder.append("id:");
      if (this.c != null) {
        break label213;
      }
      localStringBuilder.append("null");
      i1 = i3;
    }
    for (;;)
    {
      label140:
      if (o())
      {
        if (i1 == 0) {
          localStringBuilder.append(", ");
        }
        localStringBuilder.append("source:");
        if (this.d != null) {
          break label228;
        }
        localStringBuilder.append("null");
      }
      for (;;)
      {
        localStringBuilder.append(")");
        return localStringBuilder.toString();
        localStringBuilder.append(this.a);
        break;
        label213:
        localStringBuilder.append(this.c);
        i1 = i3;
        break label140;
        label228:
        localStringBuilder.append(this.d);
      }
      label241:
      i1 = i2;
    }
  }
  
  private static class a
    extends dq<bo>
  {
    private a() {}
    
    public void a(dg paramDg, bo paramBo)
      throws cn
    {
      paramDg.j();
      db localDb = paramDg.l();
      if (localDb.b == 0)
      {
        paramDg.k();
        paramBo.p();
        return;
      }
      switch (localDb.c)
      {
      default: 
        dj.a(paramDg, localDb.b);
      }
      for (;;)
      {
        paramDg.m();
        break;
        if (localDb.b == 8)
        {
          paramBo.a = aw.a(paramDg.w());
          paramBo.a(true);
        }
        else
        {
          dj.a(paramDg, localDb.b);
          continue;
          if (localDb.b == 8)
          {
            paramBo.b = paramDg.w();
            paramBo.b(true);
          }
          else
          {
            dj.a(paramDg, localDb.b);
            continue;
            if (localDb.b == 11)
            {
              paramBo.c = paramDg.z();
              paramBo.c(true);
            }
            else
            {
              dj.a(paramDg, localDb.b);
              continue;
              if (localDb.b == 11)
              {
                paramBo.d = paramDg.z();
                paramBo.d(true);
              }
              else
              {
                dj.a(paramDg, localDb.b);
              }
            }
          }
        }
      }
    }
    
    public void b(dg paramDg, bo paramBo)
      throws cn
    {
      paramBo.p();
      paramDg.a(bo.q());
      if ((paramBo.a != null) && (paramBo.e()))
      {
        paramDg.a(bo.r());
        paramDg.a(paramBo.a.a());
        paramDg.c();
      }
      if (paramBo.i())
      {
        paramDg.a(bo.s());
        paramDg.a(paramBo.b);
        paramDg.c();
      }
      if ((paramBo.c != null) && (paramBo.l()))
      {
        paramDg.a(bo.t());
        paramDg.a(paramBo.c);
        paramDg.c();
      }
      if ((paramBo.d != null) && (paramBo.o()))
      {
        paramDg.a(bo.u());
        paramDg.a(paramBo.d);
        paramDg.c();
      }
      paramDg.d();
      paramDg.b();
    }
  }
  
  private static class b
    implements dp
  {
    private b() {}
    
    public bo.a a()
    {
      return new bo.a(null);
    }
  }
  
  private static class c
    extends dr<bo>
  {
    private c() {}
    
    public void a(dg paramDg, bo paramBo)
      throws cn
    {
      paramDg = (dm)paramDg;
      BitSet localBitSet = new BitSet();
      if (paramBo.e()) {
        localBitSet.set(0);
      }
      if (paramBo.i()) {
        localBitSet.set(1);
      }
      if (paramBo.l()) {
        localBitSet.set(2);
      }
      if (paramBo.o()) {
        localBitSet.set(3);
      }
      paramDg.a(localBitSet, 4);
      if (paramBo.e()) {
        paramDg.a(paramBo.a.a());
      }
      if (paramBo.i()) {
        paramDg.a(paramBo.b);
      }
      if (paramBo.l()) {
        paramDg.a(paramBo.c);
      }
      if (paramBo.o()) {
        paramDg.a(paramBo.d);
      }
    }
    
    public void b(dg paramDg, bo paramBo)
      throws cn
    {
      paramDg = (dm)paramDg;
      BitSet localBitSet = paramDg.b(4);
      if (localBitSet.get(0))
      {
        paramBo.a = aw.a(paramDg.w());
        paramBo.a(true);
      }
      if (localBitSet.get(1))
      {
        paramBo.b = paramDg.w();
        paramBo.b(true);
      }
      if (localBitSet.get(2))
      {
        paramBo.c = paramDg.z();
        paramBo.c(true);
      }
      if (localBitSet.get(3))
      {
        paramBo.d = paramDg.z();
        paramBo.d(true);
      }
    }
  }
  
  private static class d
    implements dp
  {
    private d() {}
    
    public bo.c a()
    {
      return new bo.c(null);
    }
  }
  
  public static enum e
    implements co
  {
    private static final Map<String, e> e;
    private final short f;
    private final String g;
    
    static
    {
      e = new HashMap();
      Iterator localIterator = EnumSet.allOf(e.class).iterator();
      while (localIterator.hasNext())
      {
        e localE = (e)localIterator.next();
        e.put(localE.b(), localE);
      }
    }
    
    private e(short paramShort, String paramString)
    {
      this.f = paramShort;
      this.g = paramString;
    }
    
    public static e a(int paramInt)
    {
      switch (paramInt)
      {
      default: 
        return null;
      case 1: 
        return a;
      case 2: 
        return b;
      case 3: 
        return c;
      }
      return d;
    }
    
    public static e a(String paramString)
    {
      return (e)e.get(paramString);
    }
    
    public static e b(int paramInt)
    {
      e localE = a(paramInt);
      if (localE == null) {
        throw new IllegalArgumentException("Field " + paramInt + " doesn't exist!");
      }
      return localE;
    }
    
    public short a()
    {
      return this.f;
    }
    
    public String b()
    {
      return this.g;
    }
  }
}
