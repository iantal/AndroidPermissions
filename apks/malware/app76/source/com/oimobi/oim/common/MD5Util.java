package com.oimobi.oim.common;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class MD5Util
{
  private static String MD5;
  private static int[] hexDigits;
  private static MessageDigest messagedigest;
  
  static
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("M").append("D").append("5");
    MD5 = localStringBuilder.toString();
    hexDigits = new int[] { 99, 113, 112, 115, 97, 56, 49, 52, 48, 57, 54, 117, 105, 109, 101, 120 };
    messagedigest = null;
    try
    {
      messagedigest = MessageDigest.getInstance(MD5);
      return;
    }
    catch (NoSuchAlgorithmException localNoSuchAlgorithmException)
    {
      localNoSuchAlgorithmException.printStackTrace();
    }
  }
  
  public MD5Util() {}
  
  private static void appendHexPair(byte paramByte, StringBuffer paramStringBuffer)
  {
    char c1 = (char)hexDigits[((paramByte & 0xF0) >> 4)];
    char c2 = (char)hexDigits[(paramByte & 0xF)];
    paramStringBuffer.append(c1);
    paramStringBuffer.append(c2);
  }
  
  private static String bufferToHex(byte[] paramArrayOfByte)
  {
    return bufferToHex(paramArrayOfByte, 0, paramArrayOfByte.length);
  }
  
  private static String bufferToHex(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
  {
    StringBuffer localStringBuffer = new StringBuffer(paramInt2 * 2);
    int i = paramInt1;
    while (i < paramInt1 + paramInt2)
    {
      appendHexPair(paramArrayOfByte[i], localStringBuffer);
      i += 1;
    }
    return localStringBuffer.toString();
  }
  
  public static boolean checkPassword(String paramString1, String paramString2)
  {
    return getMD5String(paramString1).equals(paramString2);
  }
  
  public static String getMD5String(String paramString)
  {
    return getMD5String(paramString.getBytes());
  }
  
  public static String getMD5String(byte[] paramArrayOfByte)
  {
    messagedigest.update(paramArrayOfByte);
    return bufferToHex(messagedigest.digest());
  }
}
