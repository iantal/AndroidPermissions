.class public Lcom/oimobi/oim/common/DESFileUtils;
.super Ljava/lang/Object;
.source "DESFileUtils.java"


# static fields
.field private static DES:Ljava/lang/String;


# direct methods
.method static constructor <clinit>()V
    .locals 3

    .prologue
    .line 20
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 21
    .local v0, "des":Ljava/lang/StringBuilder;
    const-string v1, "D"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "E"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "S"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    sput-object v1, Lcom/oimobi/oim/common/DESFileUtils;->DES:Ljava/lang/String;

    .line 23
    return-void
.end method

.method public constructor <init>()V
    .locals 0

    .prologue
    .line 16
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static decrypt(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    .locals 12
    .param p0, "srcFile"    # Ljava/lang/String;
    .param p1, "destFile"    # Ljava/lang/String;

    .prologue
    .line 76
    const-string v4, ""

    .line 78
    .local v4, "key":Ljava/lang/String;
    new-instance v9, Ljava/io/File;

    invoke-direct {v9, p0}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 79
    .local v9, "src":Ljava/io/File;
    invoke-virtual {v9}, Ljava/io/File;->exists()Z

    move-result v11

    if-nez v11, :cond_0

    move-object v5, v4

    .line 118
    .end local v4    # "key":Ljava/lang/String;
    .local v5, "key":Ljava/lang/String;
    :goto_0
    return-object v5

    .line 83
    .end local v5    # "key":Ljava/lang/String;
    .restart local v4    # "key":Ljava/lang/String;
    :cond_0
    new-instance v0, Ljava/io/File;

    invoke-direct {v0, p1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 84
    .local v0, "dest":Ljava/io/File;
    invoke-virtual {v0}, Ljava/io/File;->delete()Z

    .line 86
    const/4 v2, 0x0

    .line 87
    .local v2, "is":Ljava/io/InputStream;
    const/4 v7, 0x0

    .line 90
    .local v7, "out":Ljava/io/OutputStream;
    :try_start_0
    new-instance v3, Ljava/io/FileInputStream;

    invoke-direct {v3, p0}, Ljava/io/FileInputStream;-><init>(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 91
    .end local v2    # "is":Ljava/io/InputStream;
    .local v3, "is":Ljava/io/InputStream;
    :try_start_1
    new-instance v8, Ljava/io/FileOutputStream;

    invoke-direct {v8, p1}, Ljava/io/FileOutputStream;-><init>(Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_7
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 94
    .end local v7    # "out":Ljava/io/OutputStream;
    .local v8, "out":Ljava/io/OutputStream;
    :try_start_2
    invoke-static {v3, v8}, Lcom/oimobi/oim/common/DESFileUtils;->split(Ljava/io/InputStream;Ljava/io/OutputStream;)Ljava/lang/String;

    move-result-object v10

    .line 98
    .local v10, "tempKey":Ljava/lang/String;
    sget-object v11, Lcom/oimobi/oim/common/Constants;->KEYDES:Ljava/lang/String;

    invoke-static {v11}, Lcom/oimobi/oim/common/MD5Util;->getMD5String(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    .line 99
    .local v6, "md5":Ljava/lang/String;
    if-eqz v6, :cond_1

    const-string v11, ""

    invoke-virtual {v11, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v11

    if-nez v11, :cond_1

    invoke-virtual {v6, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_8
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    move-result v11

    if-eqz v11, :cond_1

    .line 101
    move-object v4, v10

    .line 107
    :cond_1
    if-eqz v8, :cond_2

    :try_start_3
    invoke-virtual {v8}, Ljava/io/OutputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    .line 112
    :cond_2
    :goto_1
    if-eqz v3, :cond_3

    :try_start_4
    invoke-virtual {v3}, Ljava/io/InputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_1

    :cond_3
    move-object v7, v8

    .end local v8    # "out":Ljava/io/OutputStream;
    .restart local v7    # "out":Ljava/io/OutputStream;
    move-object v2, v3

    .end local v3    # "is":Ljava/io/InputStream;
    .end local v6    # "md5":Ljava/lang/String;
    .end local v10    # "tempKey":Ljava/lang/String;
    .restart local v2    # "is":Ljava/io/InputStream;
    :cond_4
    :goto_2
    move-object v5, v4

    .line 118
    .end local v4    # "key":Ljava/lang/String;
    .restart local v5    # "key":Ljava/lang/String;
    goto :goto_0

    .line 108
    .end local v2    # "is":Ljava/io/InputStream;
    .end local v5    # "key":Ljava/lang/String;
    .end local v7    # "out":Ljava/io/OutputStream;
    .restart local v3    # "is":Ljava/io/InputStream;
    .restart local v4    # "key":Ljava/lang/String;
    .restart local v6    # "md5":Ljava/lang/String;
    .restart local v8    # "out":Ljava/io/OutputStream;
    .restart local v10    # "tempKey":Ljava/lang/String;
    :catch_0
    move-exception v1

    .line 109
    .local v1, "e":Ljava/io/IOException;
    invoke-virtual {v1}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1

    .line 113
    .end local v1    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v1

    .line 114
    .restart local v1    # "e":Ljava/io/IOException;
    invoke-virtual {v1}, Ljava/io/IOException;->printStackTrace()V

    move-object v7, v8

    .end local v8    # "out":Ljava/io/OutputStream;
    .restart local v7    # "out":Ljava/io/OutputStream;
    move-object v2, v3

    .line 116
    .end local v3    # "is":Ljava/io/InputStream;
    .restart local v2    # "is":Ljava/io/InputStream;
    goto :goto_2

    .line 103
    .end local v1    # "e":Ljava/io/IOException;
    .end local v6    # "md5":Ljava/lang/String;
    .end local v10    # "tempKey":Ljava/lang/String;
    :catch_2
    move-exception v1

    .line 104
    .local v1, "e":Ljava/lang/Exception;
    :goto_3
    :try_start_5
    invoke-virtual {v1}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 107
    if-eqz v7, :cond_5

    :try_start_6
    invoke-virtual {v7}, Ljava/io/OutputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_4

    .line 112
    .end local v1    # "e":Ljava/lang/Exception;
    :cond_5
    :goto_4
    if-eqz v2, :cond_4

    :try_start_7
    invoke-virtual {v2}, Ljava/io/InputStream;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_3

    goto :goto_2

    .line 113
    :catch_3
    move-exception v1

    .line 114
    .local v1, "e":Ljava/io/IOException;
    invoke-virtual {v1}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_2

    .line 108
    .local v1, "e":Ljava/lang/Exception;
    :catch_4
    move-exception v1

    .line 109
    .local v1, "e":Ljava/io/IOException;
    invoke-virtual {v1}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_4

    .line 106
    .end local v1    # "e":Ljava/io/IOException;
    :catchall_0
    move-exception v11

    .line 107
    :goto_5
    if-eqz v7, :cond_6

    :try_start_8
    invoke-virtual {v7}, Ljava/io/OutputStream;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_5

    .line 112
    :cond_6
    :goto_6
    if-eqz v2, :cond_7

    :try_start_9
    invoke-virtual {v2}, Ljava/io/InputStream;->close()V
    :try_end_9
    .catch Ljava/io/IOException; {:try_start_9 .. :try_end_9} :catch_6

    .line 115
    :cond_7
    :goto_7
    throw v11

    .line 108
    :catch_5
    move-exception v1

    .line 109
    .restart local v1    # "e":Ljava/io/IOException;
    invoke-virtual {v1}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_6

    .line 113
    .end local v1    # "e":Ljava/io/IOException;
    :catch_6
    move-exception v1

    .line 114
    .restart local v1    # "e":Ljava/io/IOException;
    invoke-virtual {v1}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_7

    .line 106
    .end local v1    # "e":Ljava/io/IOException;
    .end local v2    # "is":Ljava/io/InputStream;
    .restart local v3    # "is":Ljava/io/InputStream;
    :catchall_1
    move-exception v11

    move-object v2, v3

    .end local v3    # "is":Ljava/io/InputStream;
    .restart local v2    # "is":Ljava/io/InputStream;
    goto :goto_5

    .end local v2    # "is":Ljava/io/InputStream;
    .end local v7    # "out":Ljava/io/OutputStream;
    .restart local v3    # "is":Ljava/io/InputStream;
    .restart local v8    # "out":Ljava/io/OutputStream;
    :catchall_2
    move-exception v11

    move-object v7, v8

    .end local v8    # "out":Ljava/io/OutputStream;
    .restart local v7    # "out":Ljava/io/OutputStream;
    move-object v2, v3

    .end local v3    # "is":Ljava/io/InputStream;
    .restart local v2    # "is":Ljava/io/InputStream;
    goto :goto_5

    .line 103
    .end local v2    # "is":Ljava/io/InputStream;
    .restart local v3    # "is":Ljava/io/InputStream;
    :catch_7
    move-exception v1

    move-object v2, v3

    .end local v3    # "is":Ljava/io/InputStream;
    .restart local v2    # "is":Ljava/io/InputStream;
    goto :goto_3

    .end local v2    # "is":Ljava/io/InputStream;
    .end local v7    # "out":Ljava/io/OutputStream;
    .restart local v3    # "is":Ljava/io/InputStream;
    .restart local v8    # "out":Ljava/io/OutputStream;
    :catch_8
    move-exception v1

    move-object v7, v8

    .end local v8    # "out":Ljava/io/OutputStream;
    .restart local v7    # "out":Ljava/io/OutputStream;
    move-object v2, v3

    .end local v3    # "is":Ljava/io/InputStream;
    .restart local v2    # "is":Ljava/io/InputStream;
    goto :goto_3
.end method

.method private static decryptCipher(Ljava/security/Key;)Ljavax/crypto/Cipher;
    .locals 2
    .param p0, "key"    # Ljava/security/Key;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .prologue
    .line 211
    sget-object v1, Lcom/oimobi/oim/common/DESFileUtils;->DES:Ljava/lang/String;

    invoke-static {v1}, Ljavax/crypto/Cipher;->getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;

    move-result-object v0

    .line 212
    .local v0, "cipher":Ljavax/crypto/Cipher;
    const/4 v1, 0x2

    invoke-virtual {v0, v1, p0}, Ljavax/crypto/Cipher;->init(ILjava/security/Key;)V

    .line 213
    return-object v0
.end method

.method public static encrypt(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    .locals 11
    .param p0, "srcFile"    # Ljava/lang/String;
    .param p1, "destFile"    # Ljava/lang/String;

    .prologue
    .line 31
    new-instance v4, Ljava/io/File;

    invoke-direct {v4, p0}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 32
    .local v4, "file":Ljava/io/File;
    invoke-virtual {v4}, Ljava/io/File;->exists()Z

    move-result v10

    if-nez v10, :cond_1

    const-string v7, ""

    .line 67
    :cond_0
    :goto_0
    return-object v7

    .line 35
    :cond_1
    sget-object v10, Lcom/oimobi/oim/common/Constants;->KEYDES:Ljava/lang/String;

    invoke-static {v10}, Lcom/oimobi/oim/common/MD5Util;->getMD5String(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    .line 36
    .local v7, "key":Ljava/lang/String;
    invoke-static {v7}, Lcom/oimobi/oim/common/DESFileUtils;->getKey(Ljava/lang/String;)Ljava/security/Key;

    move-result-object v2

    .line 37
    .local v2, "desKey":Ljava/security/Key;
    if-eqz v2, :cond_0

    .line 39
    const/4 v5, 0x0

    .line 40
    .local v5, "is":Ljava/io/InputStream;
    const/4 v8, 0x0

    .line 41
    .local v8, "out":Ljava/io/OutputStream;
    const/4 v0, 0x0

    .line 43
    .local v0, "cis":Ljavax/crypto/CipherInputStream;
    :try_start_0
    new-instance v6, Ljava/io/FileInputStream;

    invoke-direct {v6, p0}, Ljava/io/FileInputStream;-><init>(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_3
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 44
    .end local v5    # "is":Ljava/io/InputStream;
    .local v6, "is":Ljava/io/InputStream;
    :try_start_1
    new-instance v9, Ljava/io/FileOutputStream;

    invoke-direct {v9, p1}, Ljava/io/FileOutputStream;-><init>(Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_a
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 45
    .end local v8    # "out":Ljava/io/OutputStream;
    .local v9, "out":Ljava/io/OutputStream;
    :try_start_2
    new-instance v1, Ljavax/crypto/CipherInputStream;

    invoke-static {v2}, Lcom/oimobi/oim/common/DESFileUtils;->encryptCipher(Ljava/security/Key;)Ljavax/crypto/Cipher;

    move-result-object v10

    invoke-direct {v1, v6, v10}, Ljavax/crypto/CipherInputStream;-><init>(Ljava/io/InputStream;Ljavax/crypto/Cipher;)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_b
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 46
    .end local v0    # "cis":Ljavax/crypto/CipherInputStream;
    .local v1, "cis":Ljavax/crypto/CipherInputStream;
    :try_start_3
    invoke-static {v7, v1, v9}, Lcom/oimobi/oim/common/DESFileUtils;->merger(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/OutputStream;)V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_c
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    .line 51
    if-eqz v1, :cond_2

    :try_start_4
    invoke-virtual {v1}, Ljavax/crypto/CipherInputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_0

    .line 56
    :cond_2
    :goto_1
    if-eqz v6, :cond_3

    :try_start_5
    invoke-virtual {v6}, Ljava/io/InputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_1

    .line 61
    :cond_3
    :goto_2
    if-eqz v9, :cond_4

    :try_start_6
    invoke-virtual {v9}, Ljava/io/OutputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_2

    :cond_4
    move-object v0, v1

    .end local v1    # "cis":Ljavax/crypto/CipherInputStream;
    .restart local v0    # "cis":Ljavax/crypto/CipherInputStream;
    move-object v8, v9

    .end local v9    # "out":Ljava/io/OutputStream;
    .restart local v8    # "out":Ljava/io/OutputStream;
    move-object v5, v6

    .line 64
    .end local v6    # "is":Ljava/io/InputStream;
    .restart local v5    # "is":Ljava/io/InputStream;
    goto :goto_0

    .line 52
    .end local v0    # "cis":Ljavax/crypto/CipherInputStream;
    .end local v5    # "is":Ljava/io/InputStream;
    .end local v8    # "out":Ljava/io/OutputStream;
    .restart local v1    # "cis":Ljavax/crypto/CipherInputStream;
    .restart local v6    # "is":Ljava/io/InputStream;
    .restart local v9    # "out":Ljava/io/OutputStream;
    :catch_0
    move-exception v3

    .line 53
    .local v3, "e":Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1

    .line 57
    .end local v3    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v3

    .line 58
    .restart local v3    # "e":Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_2

    .line 62
    .end local v3    # "e":Ljava/io/IOException;
    :catch_2
    move-exception v3

    .line 63
    .restart local v3    # "e":Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    move-object v0, v1

    .end local v1    # "cis":Ljavax/crypto/CipherInputStream;
    .restart local v0    # "cis":Ljavax/crypto/CipherInputStream;
    move-object v8, v9

    .end local v9    # "out":Ljava/io/OutputStream;
    .restart local v8    # "out":Ljava/io/OutputStream;
    move-object v5, v6

    .line 65
    .end local v6    # "is":Ljava/io/InputStream;
    .restart local v5    # "is":Ljava/io/InputStream;
    goto :goto_0

    .line 47
    .end local v3    # "e":Ljava/io/IOException;
    :catch_3
    move-exception v3

    .line 48
    .local v3, "e":Ljava/lang/Exception;
    :goto_3
    :try_start_7
    invoke-virtual {v3}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 51
    if-eqz v0, :cond_5

    :try_start_8
    invoke-virtual {v0}, Ljavax/crypto/CipherInputStream;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_5

    .line 56
    .end local v3    # "e":Ljava/lang/Exception;
    :cond_5
    :goto_4
    if-eqz v5, :cond_6

    :try_start_9
    invoke-virtual {v5}, Ljava/io/InputStream;->close()V
    :try_end_9
    .catch Ljava/io/IOException; {:try_start_9 .. :try_end_9} :catch_6

    .line 61
    :cond_6
    :goto_5
    if-eqz v8, :cond_0

    :try_start_a
    invoke-virtual {v8}, Ljava/io/OutputStream;->close()V
    :try_end_a
    .catch Ljava/io/IOException; {:try_start_a .. :try_end_a} :catch_4

    goto :goto_0

    .line 62
    :catch_4
    move-exception v3

    .line 63
    .local v3, "e":Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_0

    .line 52
    .local v3, "e":Ljava/lang/Exception;
    :catch_5
    move-exception v3

    .line 53
    .local v3, "e":Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_4

    .line 57
    .end local v3    # "e":Ljava/io/IOException;
    :catch_6
    move-exception v3

    .line 58
    .restart local v3    # "e":Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_5

    .line 50
    .end local v3    # "e":Ljava/io/IOException;
    :catchall_0
    move-exception v10

    .line 51
    :goto_6
    if-eqz v0, :cond_7

    :try_start_b
    invoke-virtual {v0}, Ljavax/crypto/CipherInputStream;->close()V
    :try_end_b
    .catch Ljava/io/IOException; {:try_start_b .. :try_end_b} :catch_7

    .line 56
    :cond_7
    :goto_7
    if-eqz v5, :cond_8

    :try_start_c
    invoke-virtual {v5}, Ljava/io/InputStream;->close()V
    :try_end_c
    .catch Ljava/io/IOException; {:try_start_c .. :try_end_c} :catch_8

    .line 61
    :cond_8
    :goto_8
    if-eqz v8, :cond_9

    :try_start_d
    invoke-virtual {v8}, Ljava/io/OutputStream;->close()V
    :try_end_d
    .catch Ljava/io/IOException; {:try_start_d .. :try_end_d} :catch_9

    .line 64
    :cond_9
    :goto_9
    throw v10

    .line 52
    :catch_7
    move-exception v3

    .line 53
    .restart local v3    # "e":Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_7

    .line 57
    .end local v3    # "e":Ljava/io/IOException;
    :catch_8
    move-exception v3

    .line 58
    .restart local v3    # "e":Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_8

    .line 62
    .end local v3    # "e":Ljava/io/IOException;
    :catch_9
    move-exception v3

    .line 63
    .restart local v3    # "e":Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_9

    .line 50
    .end local v3    # "e":Ljava/io/IOException;
    .end local v5    # "is":Ljava/io/InputStream;
    .restart local v6    # "is":Ljava/io/InputStream;
    :catchall_1
    move-exception v10

    move-object v5, v6

    .end local v6    # "is":Ljava/io/InputStream;
    .restart local v5    # "is":Ljava/io/InputStream;
    goto :goto_6

    .end local v5    # "is":Ljava/io/InputStream;
    .end local v8    # "out":Ljava/io/OutputStream;
    .restart local v6    # "is":Ljava/io/InputStream;
    .restart local v9    # "out":Ljava/io/OutputStream;
    :catchall_2
    move-exception v10

    move-object v8, v9

    .end local v9    # "out":Ljava/io/OutputStream;
    .restart local v8    # "out":Ljava/io/OutputStream;
    move-object v5, v6

    .end local v6    # "is":Ljava/io/InputStream;
    .restart local v5    # "is":Ljava/io/InputStream;
    goto :goto_6

    .end local v0    # "cis":Ljavax/crypto/CipherInputStream;
    .end local v5    # "is":Ljava/io/InputStream;
    .end local v8    # "out":Ljava/io/OutputStream;
    .restart local v1    # "cis":Ljavax/crypto/CipherInputStream;
    .restart local v6    # "is":Ljava/io/InputStream;
    .restart local v9    # "out":Ljava/io/OutputStream;
    :catchall_3
    move-exception v10

    move-object v0, v1

    .end local v1    # "cis":Ljavax/crypto/CipherInputStream;
    .restart local v0    # "cis":Ljavax/crypto/CipherInputStream;
    move-object v8, v9

    .end local v9    # "out":Ljava/io/OutputStream;
    .restart local v8    # "out":Ljava/io/OutputStream;
    move-object v5, v6

    .end local v6    # "is":Ljava/io/InputStream;
    .restart local v5    # "is":Ljava/io/InputStream;
    goto :goto_6

    .line 47
    .end local v5    # "is":Ljava/io/InputStream;
    .restart local v6    # "is":Ljava/io/InputStream;
    :catch_a
    move-exception v3

    move-object v5, v6

    .end local v6    # "is":Ljava/io/InputStream;
    .restart local v5    # "is":Ljava/io/InputStream;
    goto :goto_3

    .end local v5    # "is":Ljava/io/InputStream;
    .end local v8    # "out":Ljava/io/OutputStream;
    .restart local v6    # "is":Ljava/io/InputStream;
    .restart local v9    # "out":Ljava/io/OutputStream;
    :catch_b
    move-exception v3

    move-object v8, v9

    .end local v9    # "out":Ljava/io/OutputStream;
    .restart local v8    # "out":Ljava/io/OutputStream;
    move-object v5, v6

    .end local v6    # "is":Ljava/io/InputStream;
    .restart local v5    # "is":Ljava/io/InputStream;
    goto :goto_3

    .end local v0    # "cis":Ljavax/crypto/CipherInputStream;
    .end local v5    # "is":Ljava/io/InputStream;
    .end local v8    # "out":Ljava/io/OutputStream;
    .restart local v1    # "cis":Ljavax/crypto/CipherInputStream;
    .restart local v6    # "is":Ljava/io/InputStream;
    .restart local v9    # "out":Ljava/io/OutputStream;
    :catch_c
    move-exception v3

    move-object v0, v1

    .end local v1    # "cis":Ljavax/crypto/CipherInputStream;
    .restart local v0    # "cis":Ljavax/crypto/CipherInputStream;
    move-object v8, v9

    .end local v9    # "out":Ljava/io/OutputStream;
    .restart local v8    # "out":Ljava/io/OutputStream;
    move-object v5, v6

    .end local v6    # "is":Ljava/io/InputStream;
    .restart local v5    # "is":Ljava/io/InputStream;
    goto :goto_3
.end method

.method private static encryptCipher(Ljava/security/Key;)Ljavax/crypto/Cipher;
    .locals 2
    .param p0, "key"    # Ljava/security/Key;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .prologue
    .line 205
    sget-object v1, Lcom/oimobi/oim/common/DESFileUtils;->DES:Ljava/lang/String;

    invoke-static {v1}, Ljavax/crypto/Cipher;->getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;

    move-result-object v0

    .line 206
    .local v0, "cipher":Ljavax/crypto/Cipher;
    const/4 v1, 0x1

    invoke-virtual {v0, v1, p0}, Ljavax/crypto/Cipher;->init(ILjava/security/Key;)V

    .line 207
    return-object v0
.end method

.method private static getKey(Ljava/lang/String;)Ljava/security/Key;
    .locals 6
    .param p0, "key"    # Ljava/lang/String;

    .prologue
    .line 188
    :try_start_0
    invoke-virtual {p0}, Ljava/lang/String;->getBytes()[B

    move-result-object v3

    .line 190
    .local v3, "keyByte":[B
    const/16 v4, 0x8

    new-array v0, v4, [B

    .line 192
    .local v0, "byteTemp":[B
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    array-length v4, v0

    if-ge v2, v4, :cond_0

    array-length v4, v3

    if-ge v2, v4, :cond_0

    .line 193
    aget-byte v4, v3, v2

    aput-byte v4, v0, v2

    .line 192
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 196
    :cond_0
    new-instance v4, Ljavax/crypto/spec/SecretKeySpec;

    sget-object v5, Lcom/oimobi/oim/common/DESFileUtils;->DES:Ljava/lang/String;

    invoke-direct {v4, v0, v5}, Ljavax/crypto/spec/SecretKeySpec;-><init>([BLjava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 201
    .end local v0    # "byteTemp":[B
    .end local v2    # "i":I
    .end local v3    # "keyByte":[B
    :goto_1
    return-object v4

    .line 197
    :catch_0
    move-exception v1

    .line 198
    .local v1, "e":Ljava/lang/Exception;
    invoke-virtual {v1}, Ljava/lang/Exception;->printStackTrace()V

    .line 201
    const/4 v4, 0x0

    goto :goto_1
.end method

.method public static main([Ljava/lang/String;)V
    .locals 2
    .param p0, "args"    # [Ljava/lang/String;

    .prologue
    .line 217
    const-string v0, "d:/tmp/fox.jar"

    const-string v1, "d:/tmp/fox"

    invoke-static {v0, v1}, Lcom/oimobi/oim/common/DESFileUtils;->encrypt(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 218
    return-void
.end method

.method private static merger(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/OutputStream;)V
    .locals 4
    .param p0, "key"    # Ljava/lang/String;
    .param p1, "is"    # Ljava/io/InputStream;
    .param p2, "os"    # Ljava/io/OutputStream;

    .prologue
    .line 124
    const/16 v3, 0x400

    :try_start_0
    new-array v0, v3, [B
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1

    .line 125
    .local v0, "buffer":[B
    const/4 v2, 0x0

    .line 128
    .local v2, "len":I
    :try_start_1
    invoke-virtual {p0}, Ljava/lang/String;->getBytes()[B

    move-result-object v3

    invoke-virtual {p2, v3}, Ljava/io/OutputStream;->write([B)V

    .line 131
    :goto_0
    invoke-virtual {p1, v0}, Ljava/io/InputStream;->read([B)I

    move-result v2

    const/4 v3, -0x1

    if-eq v2, v3, :cond_0

    .line 132
    const/4 v3, 0x0

    invoke-virtual {p2, v0, v3, v2}, Ljava/io/OutputStream;->write([BII)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    goto :goto_0

    .line 136
    :catch_0
    move-exception v1

    .line 137
    .local v1, "e":Ljava/io/IOException;
    :try_start_2
    invoke-virtual {v1}, Ljava/io/IOException;->printStackTrace()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    .line 142
    .end local v0    # "buffer":[B
    .end local v1    # "e":Ljava/io/IOException;
    .end local v2    # "len":I
    :goto_1
    return-void

    .line 135
    .restart local v0    # "buffer":[B
    .restart local v2    # "len":I
    :cond_0
    :try_start_3
    invoke-virtual {p2}, Ljava/io/OutputStream;->flush()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_1

    goto :goto_1

    .line 139
    .end local v0    # "buffer":[B
    .end local v2    # "len":I
    :catch_1
    move-exception v1

    .line 140
    .local v1, "e":Ljava/lang/Exception;
    invoke-virtual {v1}, Ljava/lang/Exception;->printStackTrace()V

    goto :goto_1
.end method

.method private static split(Ljava/io/InputStream;Ljava/io/OutputStream;)Ljava/lang/String;
    .locals 11
    .param p0, "is"    # Ljava/io/InputStream;
    .param p1, "os"    # Ljava/io/OutputStream;

    .prologue
    const/4 v10, -0x1

    .line 146
    const-string v5, ""

    .line 148
    .local v5, "key":Ljava/lang/String;
    const/4 v1, 0x0

    .line 150
    .local v1, "cos":Ljavax/crypto/CipherOutputStream;
    const/16 v9, 0x20

    :try_start_0
    new-array v7, v9, [B

    .line 151
    .local v7, "keyBuffer":[B
    const/16 v9, 0x400

    new-array v0, v9, [B

    .line 152
    .local v0, "buffer":[B
    const/4 v8, 0x0

    .line 155
    .local v8, "len":I
    invoke-virtual {p0, v7}, Ljava/io/InputStream;->read([B)I

    move-result v9

    if-eq v9, v10, :cond_0

    .line 156
    new-instance v6, Ljava/lang/String;

    invoke-direct {v6, v7}, Ljava/lang/String;-><init>([B)V

    .end local v5    # "key":Ljava/lang/String;
    .local v6, "key":Ljava/lang/String;
    move-object v5, v6

    .line 159
    .end local v6    # "key":Ljava/lang/String;
    .restart local v5    # "key":Ljava/lang/String;
    :cond_0
    invoke-static {v5}, Lcom/oimobi/oim/common/DESFileUtils;->getKey(Ljava/lang/String;)Ljava/security/Key;

    move-result-object v3

    .line 160
    .local v3, "desKey":Ljava/security/Key;
    new-instance v2, Ljavax/crypto/CipherOutputStream;

    invoke-static {v3}, Lcom/oimobi/oim/common/DESFileUtils;->decryptCipher(Ljava/security/Key;)Ljavax/crypto/Cipher;

    move-result-object v9

    invoke-direct {v2, p1, v9}, Ljavax/crypto/CipherOutputStream;-><init>(Ljava/io/OutputStream;Ljavax/crypto/Cipher;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_4
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 162
    .end local v1    # "cos":Ljavax/crypto/CipherOutputStream;
    .local v2, "cos":Ljavax/crypto/CipherOutputStream;
    if-eqz v2, :cond_3

    .line 164
    :goto_0
    :try_start_1
    invoke-virtual {p0, v0}, Ljava/io/InputStream;->read([B)I

    move-result v8

    if-eq v8, v10, :cond_2

    .line 165
    const/4 v9, 0x0

    invoke-virtual {v2, v0, v9, v8}, Ljavax/crypto/CipherOutputStream;->write([BII)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_0

    .line 170
    :catch_0
    move-exception v4

    move-object v1, v2

    .line 171
    .end local v0    # "buffer":[B
    .end local v2    # "cos":Ljavax/crypto/CipherOutputStream;
    .end local v3    # "desKey":Ljava/security/Key;
    .end local v7    # "keyBuffer":[B
    .end local v8    # "len":I
    .restart local v1    # "cos":Ljavax/crypto/CipherOutputStream;
    .local v4, "e":Ljava/lang/Exception;
    :goto_1
    :try_start_2
    invoke-virtual {v4}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 173
    if-eqz v1, :cond_1

    .line 175
    :try_start_3
    invoke-virtual {v1}, Ljavax/crypto/CipherOutputStream;->close()V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_2

    .line 181
    .end local v4    # "e":Ljava/lang/Exception;
    :cond_1
    :goto_2
    return-object v5

    .line 168
    .end local v1    # "cos":Ljavax/crypto/CipherOutputStream;
    .restart local v0    # "buffer":[B
    .restart local v2    # "cos":Ljavax/crypto/CipherOutputStream;
    .restart local v3    # "desKey":Ljava/security/Key;
    .restart local v7    # "keyBuffer":[B
    .restart local v8    # "len":I
    :cond_2
    :try_start_4
    invoke-virtual {v2}, Ljavax/crypto/CipherOutputStream;->flush()V
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 173
    :cond_3
    if-eqz v2, :cond_5

    .line 175
    :try_start_5
    invoke-virtual {v2}, Ljavax/crypto/CipherOutputStream;->close()V
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_1

    move-object v1, v2

    .line 177
    .end local v2    # "cos":Ljavax/crypto/CipherOutputStream;
    .restart local v1    # "cos":Ljavax/crypto/CipherOutputStream;
    goto :goto_2

    .line 176
    .end local v1    # "cos":Ljavax/crypto/CipherOutputStream;
    .restart local v2    # "cos":Ljavax/crypto/CipherOutputStream;
    :catch_1
    move-exception v9

    move-object v1, v2

    .line 177
    .end local v2    # "cos":Ljavax/crypto/CipherOutputStream;
    .restart local v1    # "cos":Ljavax/crypto/CipherOutputStream;
    goto :goto_2

    .line 173
    .end local v0    # "buffer":[B
    .end local v3    # "desKey":Ljava/security/Key;
    .end local v7    # "keyBuffer":[B
    .end local v8    # "len":I
    :catchall_0
    move-exception v9

    :goto_3
    if-eqz v1, :cond_4

    .line 175
    :try_start_6
    invoke-virtual {v1}, Ljavax/crypto/CipherOutputStream;->close()V
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_3

    .line 177
    :cond_4
    :goto_4
    throw v9

    .line 176
    .restart local v4    # "e":Ljava/lang/Exception;
    :catch_2
    move-exception v9

    goto :goto_2

    .end local v4    # "e":Ljava/lang/Exception;
    :catch_3
    move-exception v10

    goto :goto_4

    .line 173
    .end local v1    # "cos":Ljavax/crypto/CipherOutputStream;
    .restart local v0    # "buffer":[B
    .restart local v2    # "cos":Ljavax/crypto/CipherOutputStream;
    .restart local v3    # "desKey":Ljava/security/Key;
    .restart local v7    # "keyBuffer":[B
    .restart local v8    # "len":I
    :catchall_1
    move-exception v9

    move-object v1, v2

    .end local v2    # "cos":Ljavax/crypto/CipherOutputStream;
    .restart local v1    # "cos":Ljavax/crypto/CipherOutputStream;
    goto :goto_3

    .line 170
    .end local v0    # "buffer":[B
    .end local v3    # "desKey":Ljava/security/Key;
    .end local v7    # "keyBuffer":[B
    .end local v8    # "len":I
    :catch_4
    move-exception v4

    goto :goto_1

    .end local v1    # "cos":Ljavax/crypto/CipherOutputStream;
    .restart local v0    # "buffer":[B
    .restart local v2    # "cos":Ljavax/crypto/CipherOutputStream;
    .restart local v3    # "desKey":Ljava/security/Key;
    .restart local v7    # "keyBuffer":[B
    .restart local v8    # "len":I
    :cond_5
    move-object v1, v2

    .end local v2    # "cos":Ljavax/crypto/CipherOutputStream;
    .restart local v1    # "cos":Ljavax/crypto/CipherOutputStream;
    goto :goto_2
.end method
