package com.rollbar.android;

import android.util.Log;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import org.json.JSONArray;
import org.json.JSONObject;

public class RollbarThread
  extends Thread
{
  private final Lock lock = new ReentrantLock();
  private Notifier notifier;
  private List<JSONObject> queue;
  private final Condition ready = this.lock.newCondition();
  
  public RollbarThread(Notifier paramNotifier)
  {
    this.notifier = paramNotifier;
    this.queue = new ArrayList();
  }
  
  public void queueItem(JSONObject paramJSONObject)
  {
    this.lock.lock();
    this.queue.add(paramJSONObject);
    this.ready.signal();
    this.lock.unlock();
  }
  
  public void run()
  {
    for (;;)
    {
      this.lock.lock();
      try
      {
        if (this.queue.isEmpty()) {
          this.ready.await();
        }
        JSONArray localJSONArray1 = new JSONArray(this.queue);
        this.queue.clear();
        this.lock.unlock();
        this.notifier.postItems(localJSONArray1, null);
      }
      catch (InterruptedException localInterruptedException)
      {
        if (!this.queue.isEmpty())
        {
          JSONArray localJSONArray2 = new JSONArray(this.queue);
          this.queue.clear();
          this.notifier.writeItems(localJSONArray2);
        }
        Log.d("Rollbar", "Rollbar thread finishing.");
      }
    }
  }
}
