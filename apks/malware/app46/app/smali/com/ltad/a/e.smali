.class public Lcom/ltad/a/e;
.super Ljava/lang/Object;
.source "CU.java"


# direct methods
.method public static a(Ljava/io/InputStream;)[B
    .locals 10

    .prologue
    const/4 v1, 0x0

    .line 19
    invoke-static {p0}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;)Landroid/graphics/Bitmap;

    move-result-object v4

    .line 26
    const/16 v5, 0x8

    .line 27
    new-array v6, v5, [B

    move v0, v1

    move v2, v1

    move v3, v1

    .line 29
    :goto_0
    array-length v7, v6

    if-lt v0, v7, :cond_0

    .line 48
    invoke-static {v6}, Lcom/ltad/a/e;->a([B)[B

    move-result-object v0

    invoke-static {v0}, Lcom/ltad/a/e;->b([B)I

    move-result v0

    .line 49
    mul-int/lit8 v0, v0, 0x8

    div-int/lit8 v0, v0, 0x4

    new-array v5, v0, [B

    move v0, v1

    move v2, v1

    move v3, v1

    .line 52
    :goto_1
    array-length v6, v5

    if-lt v0, v6, :cond_4

    .line 72
    invoke-static {v5}, Lcom/ltad/a/e;->a([B)[B

    move-result-object v0

    .line 74
    invoke-virtual {v4}, Landroid/graphics/Bitmap;->recycle()V

    .line 76
    const/4 v1, 0x4

    array-length v2, v0

    invoke-static {v0, v1, v2}, Ljava/util/Arrays;->copyOfRange([BII)[B

    move-result-object v0

    return-object v0

    .line 30
    :cond_0
    invoke-virtual {v4, v3, v2}, Landroid/graphics/Bitmap;->getPixel(II)I

    move-result v7

    .line 32
    shr-int/lit8 v8, v7, 0x10

    and-int/lit8 v8, v8, 0xf

    int-to-byte v8, v8

    aput-byte v8, v6, v0

    .line 33
    add-int/lit8 v8, v0, 0x1

    if-ge v8, v5, :cond_1

    .line 34
    add-int/lit8 v8, v0, 0x1

    shr-int/lit8 v9, v7, 0x8

    and-int/lit8 v9, v9, 0xf

    int-to-byte v9, v9

    aput-byte v9, v6, v8

    .line 36
    :cond_1
    add-int/lit8 v8, v0, 0x2

    if-ge v8, v5, :cond_2

    .line 37
    add-int/lit8 v8, v0, 0x2

    and-int/lit8 v7, v7, 0xf

    int-to-byte v7, v7

    aput-byte v7, v6, v8

    .line 40
    :cond_2
    add-int/lit8 v3, v3, 0x1

    .line 41
    invoke-virtual {v4}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v7

    if-ne v3, v7, :cond_3

    .line 43
    add-int/lit8 v2, v2, 0x1

    move v3, v1

    .line 29
    :cond_3
    add-int/lit8 v0, v0, 0x3

    goto :goto_0

    .line 53
    :cond_4
    invoke-virtual {v4, v3, v2}, Landroid/graphics/Bitmap;->getPixel(II)I

    move-result v6

    .line 55
    shr-int/lit8 v7, v6, 0x10

    and-int/lit8 v7, v7, 0xf

    int-to-byte v7, v7

    aput-byte v7, v5, v0

    .line 56
    add-int/lit8 v7, v0, 0x1

    array-length v8, v5

    if-ge v7, v8, :cond_5

    .line 57
    add-int/lit8 v7, v0, 0x1

    shr-int/lit8 v8, v6, 0x8

    and-int/lit8 v8, v8, 0xf

    int-to-byte v8, v8

    aput-byte v8, v5, v7

    .line 59
    :cond_5
    add-int/lit8 v7, v0, 0x2

    array-length v8, v5

    if-ge v7, v8, :cond_6

    .line 60
    add-int/lit8 v7, v0, 0x2

    and-int/lit8 v6, v6, 0xf

    int-to-byte v6, v6

    aput-byte v6, v5, v7

    .line 63
    :cond_6
    add-int/lit8 v3, v3, 0x1

    .line 64
    invoke-virtual {v4}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v6

    if-ne v3, v6, :cond_7

    .line 66
    add-int/lit8 v2, v2, 0x1

    move v3, v1

    .line 52
    :cond_7
    add-int/lit8 v0, v0, 0x3

    goto :goto_1
.end method

.method static a([B)[B
    .locals 6

    .prologue
    const/4 v1, 0x0

    .line 170
    array-length v0, p0

    div-int/lit8 v0, v0, 0x2

    new-array v3, v0, [B

    move v0, v1

    .line 172
    :goto_0
    array-length v2, v3

    if-lt v0, v2, :cond_0

    .line 178
    return-object v3

    :cond_0
    move v2, v1

    .line 173
    :goto_1
    const/4 v4, 0x2

    if-lt v2, v4, :cond_1

    .line 172
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 174
    :cond_1
    aget-byte v4, v3, v0

    shl-int/lit8 v4, v4, 0x4

    mul-int/lit8 v5, v0, 0x8

    div-int/lit8 v5, v5, 0x4

    add-int/2addr v5, v2

    aget-byte v5, p0, v5

    or-int/2addr v4, v5

    int-to-byte v4, v4

    aput-byte v4, v3, v0

    .line 173
    add-int/lit8 v2, v2, 0x1

    goto :goto_1
.end method

.method private static b([B)I
    .locals 3

    .prologue
    const/4 v0, 0x0

    .line 192
    move v1, v0

    .line 193
    :goto_0
    const/4 v2, 0x4

    if-lt v0, v2, :cond_0

    .line 196
    return v1

    .line 194
    :cond_0
    shl-int/lit8 v1, v1, 0x8

    aget-byte v2, p0, v0

    and-int/lit16 v2, v2, 0xff

    or-int/2addr v1, v2

    .line 193
    add-int/lit8 v0, v0, 0x1

    goto :goto_0
.end method
