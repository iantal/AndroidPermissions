package com.inmobi.commons.core.utilities;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import com.inmobi.commons.a.a;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Locale;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public class d
{
  public static String a(String paramString)
  {
    try
    {
      paramString = URLEncoder.encode(paramString, "UTF-8");
      return paramString;
    }
    catch (UnsupportedEncodingException paramString)
    {
      paramString.printStackTrace();
    }
    return "";
  }
  
  public static String a(Map paramMap, String paramString)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    Iterator localIterator = paramMap.keySet().iterator();
    while (localIterator.hasNext())
    {
      String str = (String)localIterator.next();
      if (localStringBuilder.length() > 0) {
        localStringBuilder.append(paramString);
      }
      localStringBuilder.append(String.format(Locale.US, "%s=%s", new Object[] { a(str), a(paramMap.get(str).toString()) }));
    }
    return localStringBuilder.toString();
  }
  
  public static void a(Map paramMap)
  {
    if (paramMap != null)
    {
      Iterator localIterator = paramMap.entrySet().iterator();
      HashMap localHashMap = new HashMap();
      while (localIterator.hasNext())
      {
        Map.Entry localEntry = (Map.Entry)localIterator.next();
        if ((localEntry.getValue() == null) || (((String)localEntry.getValue()).trim().length() == 0) || (localEntry.getKey() == null) || (((String)localEntry.getKey()).trim().length() == 0))
        {
          localIterator.remove();
        }
        else if (!((String)localEntry.getKey()).equals(((String)localEntry.getKey()).trim()))
        {
          localIterator.remove();
          localHashMap.put(((String)localEntry.getKey()).trim(), ((String)localEntry.getValue()).trim());
        }
        else
        {
          localHashMap.put(localEntry.getKey(), ((String)localEntry.getValue()).trim());
        }
      }
      paramMap.putAll(localHashMap);
    }
  }
  
  public static boolean a()
  {
    NetworkInfo localNetworkInfo = ((ConnectivityManager)a.b().getSystemService("connectivity")).getActiveNetworkInfo();
    return (localNetworkInfo != null) && (localNetworkInfo.isConnected());
  }
}
