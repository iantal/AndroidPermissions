package com.inmobi.ads;

import android.view.View;
import com.inmobi.commons.a.a;
import com.inmobi.commons.core.utilities.Logger;
import com.inmobi.commons.core.utilities.Logger.InternalLogLevel;
import java.util.Map;
import java.util.WeakHashMap;

public class InMobiNative
{
  private static final String TAG = InMobiNative.class.getSimpleName();
  protected static WeakHashMap sMappedAdUnits = new WeakHashMap();
  private InMobiNative.a mClientCallbackHandler;
  private final AdUnit.a mListener = new InMobiNative.1(this);
  private InMobiNative.NativeAdListener mNativeAdListener;
  protected n mNativeAdUnit;
  
  public InMobiNative(long paramLong, InMobiNative.NativeAdListener paramNativeAdListener)
  {
    if (!a.a())
    {
      Logger.a(Logger.InternalLogLevel.ERROR, TAG, "Please initialize the SDK before trying to create an ad.");
      return;
    }
    if (paramNativeAdListener == null)
    {
      Logger.a(Logger.InternalLogLevel.ERROR, TAG, "The Ad unit cannot be created as no event listener was supplied. Please attach a listener to proceed");
      return;
    }
    this.mNativeAdListener = paramNativeAdListener;
    this.mNativeAdUnit = new n(paramLong, this.mListener);
    this.mClientCallbackHandler = new InMobiNative.a(this, paramNativeAdListener);
  }
  
  public static void bind(View paramView, InMobiNative paramInMobiNative)
  {
    if ((paramView == null) || (paramInMobiNative == null)) {
      Logger.a(Logger.InternalLogLevel.ERROR, TAG, "Please pass non-null instances of a view and InMobiNative to bind.");
    }
    do
    {
      return;
      if ((n)sMappedAdUnits.get(paramView) != null) {
        unbind(paramView);
      }
      paramInMobiNative = paramInMobiNative.mNativeAdUnit;
    } while (paramInMobiNative == null);
    sMappedAdUnits.remove(paramView);
    sMappedAdUnits.put(paramView, paramInMobiNative);
    paramInMobiNative.a(paramView, null, null);
  }
  
  public static void unbind(View paramView)
  {
    if (paramView == null) {
      Logger.a(Logger.InternalLogLevel.ERROR, TAG, "Please pass a non-null view object to bind.");
    }
    n localN;
    do
    {
      return;
      localN = (n)sMappedAdUnits.remove(paramView);
    } while (localN == null);
    localN.a(paramView);
  }
  
  public final Object getAdContent()
  {
    if (this.mNativeAdUnit == null) {
      return null;
    }
    return this.mNativeAdUnit.x();
  }
  
  public final void load()
  {
    if (this.mNativeAdUnit != null) {
      this.mNativeAdUnit.n();
    }
  }
  
  public final void pause()
  {
    if (this.mNativeAdUnit != null) {
      this.mNativeAdUnit.w();
    }
  }
  
  public final void reportAdClick(Map paramMap)
  {
    if (this.mNativeAdUnit != null) {
      this.mNativeAdUnit.a(paramMap, null, null);
    }
  }
  
  public final void reportAdClickAndOpenLandingPage(Map paramMap)
  {
    if (this.mNativeAdUnit != null)
    {
      this.mNativeAdUnit.a(paramMap, null, null);
      this.mNativeAdUnit.z();
    }
  }
  
  public final void resume()
  {
    if (this.mNativeAdUnit != null) {
      this.mNativeAdUnit.v();
    }
  }
  
  public final void setExtras(Map paramMap)
  {
    if (this.mNativeAdUnit != null) {
      this.mNativeAdUnit.a(paramMap);
    }
  }
  
  public final void setKeywords(String paramString)
  {
    if (this.mNativeAdUnit != null) {
      this.mNativeAdUnit.a(paramString);
    }
  }
}
