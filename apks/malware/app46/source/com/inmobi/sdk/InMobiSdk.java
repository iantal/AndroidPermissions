package com.inmobi.sdk;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.location.Location;
import com.inmobi.commons.core.utilities.Logger;
import com.inmobi.commons.core.utilities.Logger.InternalLogLevel;
import com.inmobi.commons.core.utilities.info.e;
import com.inmobi.rendering.mraid.i;
import com.inmobi.signals.p;
import java.io.File;
import java.util.Arrays;
import java.util.List;
import java.util.Locale;

public final class InMobiSdk
{
  private static final String TAG = InMobiSdk.class.getSimpleName();
  
  public InMobiSdk() {}
  
  public static final void addIdType(InMobiSdk.ImIdType paramImIdType, String paramString)
  {
    if (paramImIdType == InMobiSdk.ImIdType.LOGIN) {
      e.n(paramString);
    }
    while (paramImIdType != InMobiSdk.ImIdType.SESSION) {
      return;
    }
    e.o(paramString);
  }
  
  @SuppressLint({"SdCardPath"})
  private static void clearCachedData(Context paramContext)
  {
    Object localObject = Arrays.asList(new String[] { "carbpreference", "IMAdMLtvpRuleCache", "inmobiAppAnalyticsSession", "aeskeygenerate", "impref", "IMAdTrackerStatusUpload", "IMAdMMediationCache", "inmobiAppAnalyticsAppId", "inmobiAppAnalyticsSession", "inmobisdkaid", "IMAdTrackerStatusUpload", "testAppPref" });
    List localList = Arrays.asList(new String[] { com.inmobi.signals.a.a(), com.inmobi.commons.core.configs.c.a(), com.inmobi.commons.core.utilities.a.a.a(), i.a() });
    int i = 0;
    while (i < ((List)localObject).size())
    {
      File localFile = new File("/data/data/" + paramContext.getPackageName() + "/shared_prefs/" + (String)((List)localObject).get(i) + ".xml");
      if (localFile.exists()) {
        localFile.delete();
      }
      i += 1;
    }
    i = 0;
    while (i < localList.size())
    {
      localObject = new File("/data/data/" + paramContext.getPackageName() + "/shared_prefs/" + (String)localList.get(i) + ".xml");
      if (((File)localObject).exists()) {
        ((File)localObject).delete();
      }
      i += 1;
    }
    localList = Arrays.asList(new String[] { "inmobi.cache", "inmobi.cache.data", "inmobi.cache.data.events.number", "inmobi.cache.data.events.timestamp" });
    i = 0;
    while (i < localList.size())
    {
      if (paramContext.getCacheDir() != null)
      {
        localObject = new File(paramContext.getCacheDir(), (String)localList.get(i));
        if (((File)localObject).exists()) {
          ((File)localObject).delete();
        }
      }
      i += 1;
    }
    localList = Arrays.asList(new String[] { "eventlog", "imai_click_events" });
    i = 0;
    while (i < localList.size())
    {
      if (paramContext.getDir("data", 0) != null)
      {
        localObject = new File(paramContext.getDir("data", 0), (String)localList.get(i));
        if (((File)localObject).exists()) {
          ((File)localObject).delete();
        }
      }
      i += 1;
    }
    paramContext.deleteDatabase("adcache.db");
    paramContext.deleteDatabase("appengage.db");
    paramContext.deleteDatabase("im.db");
    paramContext.deleteDatabase("ltvp.db");
    paramContext.deleteDatabase("analytics.db");
    paramContext.deleteDatabase("com.im.db");
  }
  
  private static void deInitComponents()
  {
    com.inmobi.commons.core.configs.b.a().c();
    com.inmobi.commons.core.c.a.a().c();
    p.a().c();
  }
  
  public static String getVersion()
  {
    return com.inmobi.commons.a.b.b();
  }
  
  private static boolean hasSdkVersionChanged(Context paramContext)
  {
    return (com.inmobi.commons.a.b.a(paramContext) == null) || (!com.inmobi.commons.a.b.a(paramContext).equals(com.inmobi.commons.a.b.b()));
  }
  
  public static void init(Context paramContext, String paramString)
  {
    if (paramContext == null) {
      Logger.a(Logger.InternalLogLevel.ERROR, TAG, "Context supplied as null, SDK could not be initialized.");
    }
    do
    {
      return;
      if ((paramString == null) || (paramString.trim().length() == 0))
      {
        Logger.a(Logger.InternalLogLevel.ERROR, TAG, "Account ID cannot be null or empty. Please provide a valid Account ID.");
        return;
      }
      Intent localIntent = new Intent();
      localIntent.setClassName(paramContext.getPackageName(), "com.inmobi.rendering.InMobiAdActivity");
      if (paramContext.getPackageManager().resolveActivity(localIntent, 65536) == null)
      {
        Logger.a(Logger.InternalLogLevel.ERROR, TAG, "The activity com.inmobi.rendering.InMobiAdActivity not present in AndroidManifest. SDK could not be initialized.");
        return;
      }
      paramString = paramString.trim();
      if ((paramString.length() != 32) && (paramString.length() != 36)) {
        Logger.a(Logger.InternalLogLevel.DEBUG, TAG, "Invalid account id passed to init. Please provide a valid account id");
      }
      if (com.inmobi.commons.a.a.a())
      {
        Logger.a(Logger.InternalLogLevel.INTERNAL, TAG, "SDK already initialized");
        return;
      }
      if (hasSdkVersionChanged(paramContext))
      {
        clearCachedData(paramContext);
        com.inmobi.commons.a.b.a(paramContext, com.inmobi.commons.a.b.b());
      }
      com.inmobi.commons.a.a.a(paramContext, paramString);
      initComponents();
      com.inmobi.commons.core.configs.b.a().d();
      paramContext = com.inmobi.commons.core.utilities.a.a();
    } while (paramContext == null);
    paramContext.a(new InMobiSdk.1());
  }
  
  private static void initComponents()
  {
    com.inmobi.commons.core.utilities.uid.c.a().b();
    com.inmobi.commons.core.utilities.uid.c.a().d();
    com.inmobi.commons.core.configs.b.a().b();
    com.inmobi.rendering.a.c.a().b();
    com.inmobi.commons.core.a.c.a();
    com.inmobi.commons.core.c.a.a().b();
    p.a().b();
  }
  
  public static final void removeIdType(InMobiSdk.ImIdType paramImIdType)
  {
    if (paramImIdType == InMobiSdk.ImIdType.LOGIN) {
      e.n(null);
    }
    while (paramImIdType != InMobiSdk.ImIdType.SESSION) {
      return;
    }
    e.o(null);
  }
  
  public static final void setAge(int paramInt)
  {
    e.a(paramInt);
  }
  
  public static final void setAgeGroup(InMobiSdk.AgeGroup paramAgeGroup)
  {
    e.a(paramAgeGroup.toString().toLowerCase(Locale.ENGLISH));
  }
  
  public static final void setAreaCode(String paramString)
  {
    e.b(paramString);
  }
  
  public static final void setEducation(InMobiSdk.Education paramEducation)
  {
    e.i(paramEducation.toString().toLowerCase(Locale.ENGLISH));
  }
  
  public static final void setEthnicity(InMobiSdk.Ethnicity paramEthnicity)
  {
    e.h(paramEthnicity.toString().toLowerCase(Locale.ENGLISH));
  }
  
  public static final void setGender(InMobiSdk.Gender paramGender)
  {
    e.g(paramGender.toString().toLowerCase(Locale.ENGLISH));
  }
  
  public static final void setHouseHoldIncome(InMobiSdk.HouseHoldIncome paramHouseHoldIncome)
  {
    e.k(paramHouseHoldIncome.toString().toLowerCase(Locale.ENGLISH));
  }
  
  public static final void setIncome(int paramInt)
  {
    e.c(paramInt);
  }
  
  public static final void setInterests(String paramString)
  {
    e.l(paramString);
  }
  
  public static final void setLanguage(String paramString)
  {
    e.j(paramString);
  }
  
  public static final void setLocation(Location paramLocation)
  {
    e.a(paramLocation);
  }
  
  public static final void setLocationWithCityStateCountry(String paramString1, String paramString2, String paramString3)
  {
    e.d(paramString1);
    e.e(paramString2);
    e.f(paramString3);
  }
  
  public static void setLogLevel(InMobiSdk.LogLevel paramLogLevel)
  {
    switch (InMobiSdk.2.a[paramLogLevel.ordinal()])
    {
    default: 
      return;
    case 1: 
      Logger.a(Logger.InternalLogLevel.NONE);
      return;
    case 2: 
      Logger.a(Logger.InternalLogLevel.ERROR);
      return;
    }
    Logger.a(Logger.InternalLogLevel.DEBUG);
  }
  
  public static final void setNationality(String paramString)
  {
    e.m(paramString);
  }
  
  public static final void setPostalCode(String paramString)
  {
    e.c(paramString);
  }
  
  public static final void setYearOfBirth(int paramInt)
  {
    e.b(paramInt);
  }
}
