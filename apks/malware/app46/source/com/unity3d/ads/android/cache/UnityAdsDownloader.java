package com.unity3d.ads.android.cache;

import android.annotation.TargetApi;
import com.unity3d.ads.android.UnityAdsDeviceLog;
import com.unity3d.ads.android.UnityAdsUtils;
import com.unity3d.ads.android.campaign.UnityAdsCampaign;
import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;

@TargetApi(9)
public class UnityAdsDownloader
{
  private static ArrayList a = null;
  private static ArrayList b = null;
  private static boolean c = false;
  private static Vector d = null;
  
  public UnityAdsDownloader() {}
  
  public static void addDownload(UnityAdsCampaign paramUnityAdsCampaign)
  {
    if (a == null) {
      a = new ArrayList();
    }
    if (!b(paramUnityAdsCampaign.getVideoUrl())) {
      a.add(paramUnityAdsCampaign);
    }
    if (!c)
    {
      c = true;
      b();
    }
  }
  
  public static void addListener(IUnityAdsDownloadListener paramIUnityAdsDownloadListener)
  {
    if (b == null) {
      b = new ArrayList();
    }
    if (!b.contains(paramIUnityAdsDownloadListener)) {
      b.add(paramIUnityAdsDownloadListener);
    }
  }
  
  private static void b()
  {
    if ((a != null) && (a.size() > 0))
    {
      localUnityAdsCampaign = (UnityAdsCampaign)a.get(0);
      UnityAdsDeviceLog.debug("Starting download for: " + localUnityAdsCampaign.getVideoFilename());
      if ((localUnityAdsCampaign != null) && (localUnityAdsCampaign.getVideoUrl() != null) && (localUnityAdsCampaign.getVideoUrl().length() > 0))
      {
        localB = new b(localUnityAdsCampaign);
        if (d == null) {
          d = new Vector();
        }
        d.add(localB);
        localB.execute(new String[] { localUnityAdsCampaign.getVideoUrl() });
      }
    }
    while (a == null)
    {
      UnityAdsCampaign localUnityAdsCampaign;
      b localB;
      return;
      b(localUnityAdsCampaign);
      return;
    }
    c = false;
    UnityAdsDeviceLog.debug("All downloads completed.");
  }
  
  private static void b(UnityAdsCampaign paramUnityAdsCampaign)
  {
    if (a == null) {}
    label59:
    for (;;)
    {
      return;
      int i = 0;
      if (i < a.size()) {
        if (!((UnityAdsCampaign)a.get(i)).equals(paramUnityAdsCampaign)) {}
      }
      for (;;)
      {
        if (i < 0) {
          break label59;
        }
        a.remove(i);
        return;
        i += 1;
        break;
        i = -1;
      }
    }
  }
  
  private static boolean b(String paramString)
  {
    if (a != null)
    {
      Iterator localIterator = a.iterator();
      while (localIterator.hasNext())
      {
        UnityAdsCampaign localUnityAdsCampaign = (UnityAdsCampaign)localIterator.next();
        if ((localUnityAdsCampaign != null) && (localUnityAdsCampaign.getVideoUrl() != null) && (localUnityAdsCampaign.getVideoUrl().equals(paramString))) {
          return true;
        }
        if ((localUnityAdsCampaign == null) || (localUnityAdsCampaign.getVideoUrl() == null)) {
          a.remove(localUnityAdsCampaign);
        }
      }
    }
    return false;
  }
  
  private static FileOutputStream c(String paramString)
  {
    Object localObject = new File(UnityAdsUtils.createCacheDir(), paramString);
    try
    {
      localObject = new FileOutputStream((File)localObject);
      return localObject;
    }
    catch (Exception localException)
    {
      UnityAdsDeviceLog.error("Problems creating FOS: " + paramString);
    }
    return null;
  }
  
  public static void clearData()
  {
    if (d != null)
    {
      d.clear();
      d = null;
    }
    c = false;
    if (b != null)
    {
      b.clear();
      b = null;
    }
  }
  
  public static void removeListener(IUnityAdsDownloadListener paramIUnityAdsDownloadListener)
  {
    if (b == null) {}
    while (!b.contains(paramIUnityAdsDownloadListener)) {
      return;
    }
    b.remove(paramIUnityAdsDownloadListener);
  }
  
  public static void stopAllDownloads()
  {
    
    if (d != null)
    {
      Iterator localIterator = d.iterator();
      while (localIterator.hasNext()) {
        ((b)localIterator.next()).cancel(true);
      }
    }
  }
}
