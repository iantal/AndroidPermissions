package com.unity3d.ads.android.video;

import android.content.Context;
import android.os.PowerManager;
import android.widget.VideoView;
import com.unity3d.ads.android.UnityAdsDeviceLog;
import com.unity3d.ads.android.UnityAdsUtils;
import com.unity3d.ads.android.webapp.UnityAdsWebData.UnityAdsVideoPosition;
import java.util.Map;
import java.util.TimerTask;

final class l
  extends TimerTask
{
  private Float b = Float.valueOf(0.0F);
  private Float c = Float.valueOf(0.0F);
  private Float d = Float.valueOf(0.01F);
  private int e = 1;
  private boolean f = false;
  private boolean g = false;
  
  private l(UnityAdsVideoPlayView paramUnityAdsVideoPlayView) {}
  
  public final void run()
  {
    if ((UnityAdsVideoPlayView.b(this.a) == null) || (UnityAdsVideoPlayView.w(this.a) == null)) {
      UnityAdsVideoPlayView.x(this.a);
    }
    for (;;)
    {
      return;
      if (!((PowerManager)this.a.getContext().getSystemService("power")).isScreenOn()) {
        this.a.pauseVideo();
      }
      this.c = this.b;
      try
      {
        this.b = Float.valueOf(UnityAdsVideoPlayView.b(this.a).getCurrentPosition());
        localObject = Boolean.valueOf(true);
      }
      catch (Exception localException2)
      {
        try
        {
          i = UnityAdsVideoPlayView.b(this.a).getDuration();
          if (((Boolean)localObject).booleanValue()) {
            this.e = i;
          }
          Object localObject = Float.valueOf(this.b.floatValue() / this.e);
          if (this.b.floatValue() > this.c.floatValue())
          {
            this.f = true;
            this.g = false;
            UnityAdsVideoPlayView localUnityAdsVideoPlayView1 = this.a;
            UnityAdsVideoPlayView localUnityAdsVideoPlayView2 = this.a;
            boolean bool2 = UnityAdsVideoPlayView.a();
            if (this.d.floatValue() <= 0.0F)
            {
              bool1 = true;
              UnityAdsVideoPlayView.a(localUnityAdsVideoPlayView1, 4, bool2, bool1);
              UnityAdsUtils.runOnUiThread(new m(this));
              localUnityAdsVideoPlayView1 = this.a;
              if ((!UnityAdsVideoPlayView.a()) || (UnityAdsVideoPlayView.y(this.a) <= 0L) || (this.d.floatValue() <= 0.0F) || (this.e / 1000 <= UnityAdsVideoPlayView.y(this.a))) {
                break label721;
              }
              this.d = Float.valueOf((float)(UnityAdsVideoPlayView.y(this.a) * 1000L) - this.b.floatValue());
              if (this.d.floatValue() < 0.0F) {
                this.d = Float.valueOf(0.0F);
              }
              if (this.d.floatValue() != 0.0F) {
                break label707;
              }
              UnityAdsUtils.runOnUiThread(new n(this));
              if ((((Float)localObject).floatValue() > 0.25D) && (!UnityAdsVideoPlayView.A(this.a).containsKey(UnityAdsWebData.UnityAdsVideoPosition.FirstQuartile)))
              {
                UnityAdsVideoPlayView.e(this.a).onEventPositionReached(UnityAdsWebData.UnityAdsVideoPosition.FirstQuartile);
                UnityAdsVideoPlayView.A(this.a).put(UnityAdsWebData.UnityAdsVideoPosition.FirstQuartile, Boolean.valueOf(true));
              }
              if ((((Float)localObject).floatValue() > 0.5D) && (!UnityAdsVideoPlayView.A(this.a).containsKey(UnityAdsWebData.UnityAdsVideoPosition.MidPoint)))
              {
                UnityAdsVideoPlayView.e(this.a).onEventPositionReached(UnityAdsWebData.UnityAdsVideoPosition.MidPoint);
                UnityAdsVideoPlayView.A(this.a).put(UnityAdsWebData.UnityAdsVideoPosition.MidPoint, Boolean.valueOf(true));
              }
              if ((((Float)localObject).floatValue() > 0.75D) && (!UnityAdsVideoPlayView.A(this.a).containsKey(UnityAdsWebData.UnityAdsVideoPosition.ThirdQuartile)))
              {
                UnityAdsVideoPlayView.e(this.a).onEventPositionReached(UnityAdsWebData.UnityAdsVideoPosition.ThirdQuartile);
                UnityAdsVideoPlayView.A(this.a).put(UnityAdsWebData.UnityAdsVideoPosition.ThirdQuartile, Boolean.valueOf(true));
              }
            }
          }
        }
        catch (Exception localException2)
        {
          try
          {
            label707:
            label721:
            do
            {
              for (;;)
              {
                int i;
                boolean bool1;
                UnityAdsVideoPlayView.b(this.a).getBufferPercentage();
                if ((!this.f) && (UnityAdsVideoPlayView.B(this.a) > 0L) && (System.currentTimeMillis() - UnityAdsVideoPlayView.B(this.a) > 20000L))
                {
                  cancel();
                  UnityAdsUtils.runOnUiThread(new q(this));
                }
                if ((!UnityAdsVideoPlayView.m(this.a)) || (!this.f)) {
                  break;
                }
                UnityAdsUtils.runOnUiThread(new r(this));
                return;
                localException1 = localException1;
                UnityAdsDeviceLog.error("Could not get videoView currentPosition");
                if (this.c.floatValue() > 0.0F)
                {
                  this.b = this.c;
                }
                else
                {
                  this.b = Float.valueOf(0.01F);
                  continue;
                  localException2 = localException2;
                  UnityAdsDeviceLog.error("Could not get videoView duration");
                  Boolean localBoolean = Boolean.valueOf(false);
                  i = 1;
                  continue;
                  bool1 = false;
                  continue;
                  this.g = true;
                  UnityAdsVideoPlayView.a(this.a, 0, true, true);
                  continue;
                  UnityAdsUtils.runOnUiThread(new o(this));
                }
              }
            } while ((!this.f) || (this.e / 1000 > UnityAdsVideoPlayView.y(this.a)));
            UnityAdsUtils.runOnUiThread(new p(this));
          }
          catch (Exception localException3)
          {
            for (;;)
            {
              UnityAdsDeviceLog.error("Could not get videoView buffering percentage");
            }
          }
        }
      }
    }
  }
}
