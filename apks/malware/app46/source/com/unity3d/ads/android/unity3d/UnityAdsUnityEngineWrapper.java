package com.unity3d.ads.android.unity3d;

import android.annotation.TargetApi;
import android.app.Activity;
import com.unity3d.ads.android.IUnityAdsListener;
import com.unity3d.ads.android.UnityAds;
import com.unity3d.ads.android.UnityAdsDeviceLog;
import com.unity3d.ads.android.UnityAdsUtils;
import com.unity3d.ads.android.webapp.UnityAdsWebData;
import com.unity3d.ads.android.zone.UnityAdsZoneManager;
import java.util.HashMap;
import java.util.Map;

@TargetApi(9)
public class UnityAdsUnityEngineWrapper
  implements IUnityAdsListener
{
  private static Boolean a = Boolean.valueOf(false);
  
  public UnityAdsUnityEngineWrapper() {}
  
  private static native void UnityAdsOnFetchCompleted();
  
  private static native void UnityAdsOnFetchFailed();
  
  private static native void UnityAdsOnHide();
  
  private static native void UnityAdsOnShow();
  
  private static native void UnityAdsOnVideoCompleted(String paramString, int paramInt);
  
  private static native void UnityAdsOnVideoStarted();
  
  public boolean canShowAds(String paramString)
  {
    boolean bool2 = false;
    if ((paramString != null) && (paramString.length() > 0))
    {
      UnityAdsZoneManager localUnityAdsZoneManager = UnityAdsWebData.getZoneManager();
      boolean bool1 = bool2;
      if (localUnityAdsZoneManager != null)
      {
        bool1 = bool2;
        if (localUnityAdsZoneManager.getZone(paramString) != null) {
          bool1 = UnityAds.canShow();
        }
      }
      return bool1;
    }
    return UnityAds.canShow();
  }
  
  public void init(Activity paramActivity, String paramString1, boolean paramBoolean, int paramInt, String paramString2)
  {
    if (!a.booleanValue()) {
      a = Boolean.valueOf(true);
    }
    try
    {
      UnityAdsUtils.runOnUiThread(new a(this, paramInt, paramBoolean, paramString2, paramActivity, paramString1, this));
      return;
    }
    catch (Exception paramActivity)
    {
      UnityAdsDeviceLog.error("Error occured while initializing Unity Ads");
    }
  }
  
  public void onFetchCompleted() {}
  
  public void onFetchFailed() {}
  
  public void onHide() {}
  
  public void onShow() {}
  
  public void onVideoCompleted(String paramString, boolean paramBoolean)
  {
    String str;
    if (paramString != null)
    {
      str = paramString;
      if (!paramString.isEmpty()) {}
    }
    else
    {
      str = "null";
    }
    if (paramBoolean) {}
    for (int i = 1;; i = 0)
    {
      UnityAdsOnVideoCompleted(str, i);
      return;
    }
  }
  
  public void onVideoStarted() {}
  
  public void setCampaignDataURL(String paramString)
  {
    UnityAds.setCampaignDataURL(paramString);
  }
  
  public void setLogLevel(int paramInt)
  {
    UnityAdsDeviceLog.setLogLevel(paramInt);
  }
  
  public boolean show(String paramString1, String paramString2, String paramString3)
  {
    if (UnityAds.canShowAds())
    {
      Object localObject = null;
      if (paramString3.length() > 0)
      {
        HashMap localHashMap = new HashMap();
        paramString3 = paramString3.split(",");
        int j = paramString3.length;
        int i = 0;
        for (;;)
        {
          localObject = localHashMap;
          if (i >= j) {
            break;
          }
          localObject = paramString3[i].split(":");
          localHashMap.put(localObject[0], localObject[1]);
          i += 1;
        }
      }
      if (canShowAds(paramString1))
      {
        if (paramString2.length() > 0) {
          UnityAds.setZone(paramString1, paramString2);
        }
        for (;;)
        {
          return UnityAds.show((Map)localObject);
          if (paramString1.length() > 0) {
            UnityAds.setZone(paramString1);
          }
        }
      }
      return false;
    }
    return false;
  }
}
