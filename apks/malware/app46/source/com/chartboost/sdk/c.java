package com.chartboost.sdk;

import android.app.Activity;
import android.view.ViewGroup;
import android.widget.FrameLayout.LayoutParams;
import com.chartboost.sdk.Libraries.CBLogging;
import com.chartboost.sdk.Libraries.e.a;
import com.chartboost.sdk.Model.CBError.CBImpressionError;
import com.chartboost.sdk.Model.a;
import com.chartboost.sdk.Model.a.b;
import com.chartboost.sdk.Model.a.c;
import com.chartboost.sdk.impl.be;
import com.chartboost.sdk.impl.be.b;
import com.chartboost.sdk.impl.bf;
import com.chartboost.sdk.impl.bn;

public final class c
{
  private static c e;
  protected boolean a = false;
  private Chartboost b;
  private CBPreferences c;
  private bn d = null;
  
  private c(Chartboost paramChartboost)
  {
    this.b = paramChartboost;
    this.c = CBPreferences.getInstance();
  }
  
  protected static c a(Chartboost paramChartboost)
  {
    if (e == null) {
      e = new c(paramChartboost);
    }
    return e;
  }
  
  private void d()
  {
    CBLogging.b("CBViewController", "###### Closeingimpression ");
    Activity localActivity = this.b.c();
    if ((localActivity != null) && ((localActivity instanceof CBImpressionActivity)))
    {
      this.b.d();
      localActivity.finish();
    }
  }
  
  private void d(a paramA)
  {
    if ((this.d != null) && (this.d.h() != paramA)) {
      paramA.a(CBError.CBImpressionError.IMPRESSION_ALREADY_VISIBLE);
    }
    int i;
    label93:
    label98:
    do
    {
      return;
      Activity localActivity;
      if (paramA.c != a.b.c)
      {
        i = 1;
        paramA.c = a.b.c;
        localActivity = this.b.c();
        if (localActivity != null) {
          break label93;
        }
      }
      for (localObject1 = CBError.CBImpressionError.NO_HOST_ACTIVITY;; localObject1 = null)
      {
        localObject2 = localObject1;
        if (localObject1 == null) {
          localObject2 = paramA.h();
        }
        if (localObject2 == null) {
          break label98;
        }
        paramA.a((CBError.CBImpressionError)localObject2);
        return;
        i = 0;
        break;
      }
      if (this.d == null)
      {
        this.d = new bn(localActivity, paramA);
        localActivity.addContentView(this.d, new FrameLayout.LayoutParams(-1, -1));
      }
      this.d.a();
      paramA.i = this.d;
    } while (i == 0);
    this.d.e().a();
    Object localObject1 = be.b.a;
    if (paramA.d == a.c.b) {
      localObject1 = be.b.c;
    }
    Object localObject2 = be.b.a(paramA.a.f("animation"));
    if (localObject2 != null) {
      localObject1 = localObject2;
    }
    if (this.c.getAnimationsOff()) {
      localObject1 = be.b.g;
    }
    paramA.k();
    be.a((be.b)localObject1, paramA, new c.1(this));
    paramA.n().b().e(paramA);
  }
  
  private void e(a paramA)
  {
    Activity localActivity = this.b.c();
    if (localActivity == null)
    {
      CBLogging.d(this, "No host activity to display loading view");
      return;
    }
    if (this.d == null)
    {
      this.d = new bn(localActivity, paramA);
      localActivity.addContentView(this.d, new FrameLayout.LayoutParams(-1, -1));
    }
    this.d.b();
  }
  
  protected void a(a paramA)
  {
    switch (c.3.a[paramA.c.ordinal()])
    {
    default: 
      d(paramA);
      return;
    case 1: 
    case 2: 
      if ((paramA.j) && (!paramA.k))
      {
        e(paramA);
        return;
      }
      d(paramA);
      return;
    }
    e(paramA);
  }
  
  public void a(a paramA, boolean paramBoolean)
  {
    CBLogging.b("CBViewController", "###### dismiss impressiony");
    c.2 local2 = new c.2(this, paramBoolean, paramA);
    if (paramA.l)
    {
      paramA.b(local2);
      return;
    }
    local2.run();
  }
  
  public void a(boolean paramBoolean)
  {
    CBLogging.b("CBViewController", "###### dismiss loading view");
    if (a())
    {
      this.d.c();
      if ((paramBoolean) && (this.d != null) && (this.d.h() != null)) {
        c(this.d.h());
      }
    }
  }
  
  public boolean a()
  {
    return (this.d != null) && (this.d.g());
  }
  
  public void b(a paramA)
  {
    CBLogging.b("CBViewController", "###### removing impression silently");
    if (a()) {
      a(false);
    }
    paramA.g();
    try
    {
      ((ViewGroup)this.d.getParent()).removeView(this.d);
      this.d = null;
      return;
    }
    catch (Exception paramA)
    {
      for (;;)
      {
        CBLogging.b("CBViewController", "Exception removing impression silently", paramA);
      }
    }
  }
  
  public boolean b()
  {
    return this.d != null;
  }
  
  public bn c()
  {
    return this.d;
  }
  
  public void c(a paramA)
  {
    CBLogging.b("CBViewController", "###### removing impression ");
    paramA.c = a.b.g;
    if (this.d == null) {
      if (this.c.getImpressionsUseActivities()) {
        d();
      }
    }
    for (;;)
    {
      return;
      try
      {
        ((ViewGroup)this.d.getParent()).removeView(this.d);
        paramA.f();
        this.d = null;
        this.a = false;
        if (!this.c.getImpressionsUseActivities()) {
          continue;
        }
        d();
        return;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          CBLogging.b("CBViewController", "Exception removing impression ", localException);
        }
      }
    }
  }
}
