package com.chartboost.sdk.Libraries;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Locale;

public final class b
{
  public static byte[] a(String paramString)
  {
    paramString = paramString.getBytes();
    int m = paramString.length;
    byte[] arrayOfByte = new byte[m / 2];
    int k = 0;
    int n;
    int i1;
    int i;
    if (k < m)
    {
      n = paramString[k];
      i1 = paramString[(k + 1)];
      if ((48 <= n) && (n <= 57)) {
        i = (byte)((n - 48) * 16 + 0);
      }
    }
    for (;;)
    {
      label63:
      int j;
      if ((48 <= i1) && (i1 <= 57)) {
        j = (byte)(i + (i1 - 48));
      }
      for (;;)
      {
        arrayOfByte[(k / 2)] = j;
        k += 2;
        break;
        if ((97 <= n) && (n <= 102))
        {
          i = (byte)((n - 97 + 10) * 16 + 0);
          break label63;
        }
        if ((65 > n) || (n > 70)) {
          break label229;
        }
        i = (byte)((n - 65 + 10) * 16 + 0);
        break label63;
        if ((97 <= i1) && (i1 <= 102))
        {
          j = (byte)(i + (i1 - 97 + 10));
        }
        else
        {
          j = i;
          if (65 <= i1)
          {
            j = i;
            if (i1 <= 70) {
              j = (byte)(i + (i1 - 65 + 10));
            }
          }
        }
      }
      return arrayOfByte;
      label229:
      i = 0;
    }
  }
  
  public static byte[] a(byte[] paramArrayOfByte)
  {
    Object localObject = null;
    if (paramArrayOfByte != null) {}
    try
    {
      localObject = MessageDigest.getInstance("SHA-1");
      ((MessageDigest)localObject).update(paramArrayOfByte);
      localObject = ((MessageDigest)localObject).digest();
      return localObject;
    }
    catch (NoSuchAlgorithmException paramArrayOfByte) {}
    return null;
  }
  
  public static String b(byte[] paramArrayOfByte)
  {
    if (paramArrayOfByte == null) {
      return null;
    }
    BigInteger localBigInteger = new BigInteger(1, paramArrayOfByte);
    return String.format(Locale.US, "%0" + (paramArrayOfByte.length << 1) + "x", new Object[] { localBigInteger });
  }
}
