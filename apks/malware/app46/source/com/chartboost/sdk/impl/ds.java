package com.chartboost.sdk.impl;

import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;

public final class ds
{
  public static final ds a = a(new byte[0]);
  private static final char[] c = { 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102 };
  final byte[] b;
  private transient int d;
  private transient String e;
  
  ds(byte[] paramArrayOfByte)
  {
    this.b = paramArrayOfByte;
  }
  
  public static ds a(String paramString)
  {
    try
    {
      ds localDs = new ds(paramString.getBytes("UTF-8"));
      localDs.e = paramString;
      return localDs;
    }
    catch (UnsupportedEncodingException paramString)
    {
      throw new AssertionError(paramString);
    }
  }
  
  public static ds a(byte... paramVarArgs)
  {
    return new ds((byte[])paramVarArgs.clone());
  }
  
  public String a()
  {
    String str = this.e;
    if (str != null) {
      return str;
    }
    try
    {
      str = new String(this.b, "UTF-8");
      this.e = str;
      return str;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      throw new AssertionError(localUnsupportedEncodingException);
    }
  }
  
  public String b()
  {
    return dp.a(this.b);
  }
  
  public boolean b(String paramString)
  {
    if ((paramString == null) || (this.b.length != paramString.length())) {
      return false;
    }
    if (paramString == this.e) {
      return true;
    }
    int i = 0;
    for (;;)
    {
      if (i >= this.b.length) {
        break label60;
      }
      if (this.b[i] != paramString.charAt(i)) {
        break;
      }
      i += 1;
    }
    label60:
    return true;
  }
  
  public String c()
  {
    int i = 0;
    char[] arrayOfChar = new char[this.b.length * 2];
    byte[] arrayOfByte = this.b;
    int k = arrayOfByte.length;
    int j = 0;
    while (i < k)
    {
      int m = arrayOfByte[i];
      int n = j + 1;
      arrayOfChar[j] = c[(m >> 4 & 0xF)];
      j = n + 1;
      arrayOfChar[n] = c[(m & 0xF)];
      i += 1;
    }
    return new String(arrayOfChar);
  }
  
  public ds d()
  {
    int i = 0;
    int j;
    for (;;)
    {
      localObject = this;
      if (i >= this.b.length) {
        return localObject;
      }
      j = this.b[i];
      if ((j >= 65) && (j <= 90)) {
        break;
      }
      i += 1;
    }
    Object localObject = (byte[])this.b.clone();
    localObject[i] = ((byte)(j + 32));
    i += 1;
    if (i < localObject.length)
    {
      j = localObject[i];
      if ((j < 65) || (j > 90)) {}
      for (;;)
      {
        i += 1;
        break;
        localObject[i] = ((byte)(j + 32));
      }
    }
    localObject = new ds((byte[])localObject);
    return localObject;
  }
  
  public int e()
  {
    return this.b.length;
  }
  
  public boolean equals(Object paramObject)
  {
    return (paramObject == this) || (((paramObject instanceof ds)) && (Arrays.equals(((ds)paramObject).b, this.b)));
  }
  
  public byte[] f()
  {
    return (byte[])this.b.clone();
  }
  
  public int hashCode()
  {
    int i = this.d;
    if (i != 0) {
      return i;
    }
    i = Arrays.hashCode(this.b);
    this.d = i;
    return i;
  }
  
  public String toString()
  {
    if (this.b.length == 0) {
      return "ByteString[size=0]";
    }
    if (this.b.length <= 16) {
      return String.format("ByteString[size=%s data=%s]", new Object[] { Integer.valueOf(this.b.length), c() });
    }
    try
    {
      String str = String.format("ByteString[size=%s md5=%s]", new Object[] { Integer.valueOf(this.b.length), a(MessageDigest.getInstance("MD5").digest(this.b)).c() });
      return str;
    }
    catch (NoSuchAlgorithmException localNoSuchAlgorithmException)
    {
      throw new AssertionError();
    }
  }
}
