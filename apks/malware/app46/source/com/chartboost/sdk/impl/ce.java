package com.chartboost.sdk.impl;

import java.net.SocketException;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

public class ce
{
  private static final ce a;
  private final int b;
  private final long c;
  private final LinkedList d = new LinkedList();
  private final ExecutorService e = new ThreadPoolExecutor(0, 1, 60L, TimeUnit.SECONDS, new LinkedBlockingQueue(), cs.a("OkHttp ConnectionPool", true));
  private final Runnable f = new ce.1(this);
  
  static
  {
    String str1 = System.getProperty("http.keepAlive");
    String str2 = System.getProperty("http.keepAliveDuration");
    String str3 = System.getProperty("http.maxConnections");
    if (str2 != null) {}
    for (long l = Long.parseLong(str2); (str1 != null) && (!Boolean.parseBoolean(str1)); l = 300000L)
    {
      a = new ce(0, l);
      return;
    }
    if (str3 != null)
    {
      a = new ce(Integer.parseInt(str3), l);
      return;
    }
    a = new ce(5, l);
  }
  
  public ce(int paramInt, long paramLong)
  {
    this.b = paramInt;
    this.c = (paramLong * 1000L * 1000L);
  }
  
  public static ce a()
  {
    return a;
  }
  
  public cd a(cb paramCb)
  {
    for (;;)
    {
      try
      {
        ListIterator localListIterator = this.d.listIterator(this.d.size());
        if (localListIterator.hasPrevious())
        {
          cd localCd2 = (cd)localListIterator.previous();
          if ((localCd2.b().a().equals(paramCb)) && (localCd2.d()) && (System.nanoTime() - localCd2.h() < this.c))
          {
            localListIterator.remove();
            boolean bool = localCd2.j();
            cd localCd1 = localCd2;
            if (!bool) {}
            try
            {
              cr.a().a(localCd2.c());
              localCd1 = localCd2;
              if ((localCd1 != null) && (localCd1.j())) {
                this.d.addFirst(localCd1);
              }
              this.e.execute(this.f);
              return localCd1;
            }
            catch (SocketException localSocketException)
            {
              cs.a(localCd2);
              cr.a().a("Unable to tagSocket(): " + localSocketException);
            }
          }
        }
        else
        {
          Object localObject = null;
        }
      }
      finally {}
    }
  }
  
  /* Error */
  public void a(cd paramCd)
  {
    // Byte code:
    //   0: aload_1
    //   1: invokevirtual 158	com/chartboost/sdk/impl/cd:j	()Z
    //   4: ifeq +4 -> 8
    //   7: return
    //   8: aload_1
    //   9: invokevirtual 145	com/chartboost/sdk/impl/cd:d	()Z
    //   12: ifne +8 -> 20
    //   15: aload_1
    //   16: invokestatic 182	com/chartboost/sdk/impl/cs:a	(Ljava/io/Closeable;)V
    //   19: return
    //   20: invokestatic 163	com/chartboost/sdk/impl/cr:a	()Lcom/chartboost/sdk/impl/cr;
    //   23: aload_1
    //   24: invokevirtual 166	com/chartboost/sdk/impl/cd:c	()Ljava/net/Socket;
    //   27: invokevirtual 204	com/chartboost/sdk/impl/cr:b	(Ljava/net/Socket;)V
    //   30: aload_0
    //   31: monitorenter
    //   32: aload_0
    //   33: getfield 64	com/chartboost/sdk/impl/ce:d	Ljava/util/LinkedList;
    //   36: aload_1
    //   37: invokevirtual 173	java/util/LinkedList:addFirst	(Ljava/lang/Object;)V
    //   40: aload_1
    //   41: invokevirtual 207	com/chartboost/sdk/impl/cd:m	()V
    //   44: aload_1
    //   45: invokevirtual 209	com/chartboost/sdk/impl/cd:f	()V
    //   48: aload_0
    //   49: monitorexit
    //   50: aload_0
    //   51: getfield 89	com/chartboost/sdk/impl/ce:e	Ljava/util/concurrent/ExecutorService;
    //   54: aload_0
    //   55: getfield 96	com/chartboost/sdk/impl/ce:f	Ljava/lang/Runnable;
    //   58: invokeinterface 179 2 0
    //   63: return
    //   64: astore_2
    //   65: invokestatic 163	com/chartboost/sdk/impl/cr:a	()Lcom/chartboost/sdk/impl/cr;
    //   68: new 184	java/lang/StringBuilder
    //   71: dup
    //   72: invokespecial 185	java/lang/StringBuilder:<init>	()V
    //   75: ldc -45
    //   77: invokevirtual 191	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   80: aload_2
    //   81: invokevirtual 194	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   84: invokevirtual 198	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   87: invokevirtual 201	com/chartboost/sdk/impl/cr:a	(Ljava/lang/String;)V
    //   90: aload_1
    //   91: invokestatic 182	com/chartboost/sdk/impl/cs:a	(Ljava/io/Closeable;)V
    //   94: return
    //   95: astore_1
    //   96: aload_0
    //   97: monitorexit
    //   98: aload_1
    //   99: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	100	0	this	ce
    //   0	100	1	paramCd	cd
    //   64	17	2	localSocketException	SocketException
    // Exception table:
    //   from	to	target	type
    //   20	30	64	java/net/SocketException
    //   32	50	95	finally
    //   96	98	95	finally
  }
  
  public void b(cd paramCd)
  {
    if (!paramCd.j()) {
      throw new IllegalArgumentException();
    }
    this.e.execute(this.f);
    if (paramCd.d()) {
      try
      {
        this.d.addFirst(paramCd);
        return;
      }
      finally {}
    }
  }
}
