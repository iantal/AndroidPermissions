package com.chartboost.sdk.impl;

import android.os.Process;
import java.util.concurrent.BlockingQueue;

public class c
  extends Thread
{
  private static final boolean a = s.b;
  private final BlockingQueue b;
  private final BlockingQueue c;
  private final b d;
  private final n e;
  private volatile boolean f = false;
  
  public c(BlockingQueue paramBlockingQueue1, BlockingQueue paramBlockingQueue2, b paramB, n paramN)
  {
    this.b = paramBlockingQueue1;
    this.c = paramBlockingQueue2;
    this.d = paramB;
    this.e = paramN;
  }
  
  public void a()
  {
    this.f = true;
    interrupt();
  }
  
  public void run()
  {
    if (a) {
      s.a("start new dispatcher", new Object[0]);
    }
    Process.setThreadPriority(10);
    this.d.a();
    for (;;)
    {
      try
      {
        k localK = (k)this.b.take();
        localK.a("cache-queue-take");
        if (!localK.h()) {
          break label73;
        }
        localK.b("cache-discard-canceled");
        continue;
        if (!this.f) {
          continue;
        }
      }
      catch (InterruptedException localInterruptedException) {}
      return;
      label73:
      b.a localA = this.d.a(localInterruptedException.e());
      if (localA == null)
      {
        localInterruptedException.a("cache-miss");
        this.c.put(localInterruptedException);
      }
      else if (localA.a())
      {
        localInterruptedException.a("cache-hit-expired");
        localInterruptedException.a(localA);
        this.c.put(localInterruptedException);
      }
      else
      {
        localInterruptedException.a("cache-hit");
        m localM = localInterruptedException.a(new i(localA.a, localA.f));
        localInterruptedException.a("cache-hit-parsed");
        if (!localA.b())
        {
          this.e.a(localInterruptedException, localM);
        }
        else
        {
          localInterruptedException.a("cache-hit-refresh-needed");
          localInterruptedException.a(localA);
          localM.d = true;
          this.e.a(localInterruptedException, localM, new c.1(this, localInterruptedException));
        }
      }
    }
  }
}
