package com.chartboost.sdk.impl;

import com.chartboost.sdk.Libraries.CBLogging;
import com.chartboost.sdk.Libraries.NaCl;
import com.chartboost.sdk.Libraries.b;
import com.chartboost.sdk.Libraries.e;
import com.chartboost.sdk.Libraries.e.a;
import com.chartboost.sdk.Libraries.e.b;
import com.chartboost.sdk.Libraries.j;
import com.chartboost.sdk.Model.CBError;
import com.chartboost.sdk.Model.CBError.a;
import java.util.Map;
import org.apache.http.entity.ByteArrayEntity;

public class bc
  extends av
{
  private static final String v = bc.class.getSimpleName();
  private static byte[] y = null;
  private e.a A = null;
  private byte[] w = NaCl.randombytes(24);
  private j x = NaCl.keypair();
  private boolean z = false;
  
  public bc(String paramString1, String paramString2, String paramString3)
  {
    super(paramString1, paramString2, paramString3);
    this.j = true;
  }
  
  public static bc b(e.a paramA)
  {
    try
    {
      bc localBc = new bc(paramA.e("path"), paramA.e("endpoint"), paramA.e("identifier"));
      localBc.g = paramA.e("method");
      localBc.d = paramA.a("query").f();
      localBc.c = paramA.a("body");
      localBc.e = paramA.a("headers").f();
      localBc.l = paramA.i("ensureDelivery");
      localBc.b = paramA.e("eventType");
      localBc.o = paramA.e("endPoint");
      localBc.a = paramA.e("path");
      localBc.p = paramA.e("identifier");
      localBc.f = paramA.a("entity");
      localBc.A = paramA.a("preEncrypt");
      localBc.j = paramA.i("isEncryptedCBRequest");
      localBc.r = paramA.f("retryCount");
      return localBc;
    }
    catch (Exception paramA)
    {
      CBLogging.d(v, "Unable to deserialize failed request", paramA);
    }
    return null;
  }
  
  public static byte[] l()
  {
    if (y == null) {
      y = NaCl.a();
    }
    return y;
  }
  
  public e.a a()
  {
    e.a localA = super.a();
    localA.a("preEncrypt", this.A);
    localA.a("isEncryptedCBRequest", Boolean.valueOf(this.j));
    return localA;
  }
  
  protected void b()
  {
    super.b();
    this.e.put("Content-Type", "application/x-chartboost-encrypted");
    this.e.put("Accept", "application/x-chartboost-encrypted");
    e.a localA = c(this.z);
    try
    {
      this.f = new ByteArrayEntity(localA.e("body").getBytes());
      this.e.put("X-Chartboost-Crypto-Nonce", localA.e("nonce"));
      this.e.put("X-Chartboost-Crypto-Public-Key", localA.e("publicKey"));
      return;
    }
    catch (Exception localException)
    {
      new CBError(CBError.a.a, "failed to decrypt request data").a(false);
    }
  }
  
  public e.a c(boolean paramBoolean)
  {
    if (this.A != null) {
      return this.A;
    }
    if ((this.A == null) && (!paramBoolean))
    {
      byte[] arrayOfByte = NaCl.encrypt(g().toString().getBytes(), k(), l(), m().b);
      String str1 = b.b(k());
      String str2 = b.b(m().a);
      return e.a(new e.b[] { e.a("body", new String(arrayOfByte)), e.a("nonce", str1), e.a("publicKey", str2) });
    }
    return null;
  }
  
  public byte[] k()
  {
    return this.w;
  }
  
  protected j m()
  {
    return this.x;
  }
}
