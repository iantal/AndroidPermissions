package com.chartboost.sdk.impl;

import android.content.Context;
import android.view.MotionEvent;
import android.view.OrientationEventListener;
import android.view.View;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import com.chartboost.sdk.CBPreferences;
import com.chartboost.sdk.Libraries.CBOrientation;
import com.chartboost.sdk.Libraries.CBOrientation.Difference;
import com.chartboost.sdk.Model.a;

public final class bn
  extends RelativeLayout
{
  private bn.a a;
  private bf b;
  private bf c;
  private bm d;
  private OrientationEventListener e;
  private CBOrientation.Difference f = null;
  private a g = null;
  
  public bn(Context paramContext, a paramA)
  {
    super(paramContext);
    this.g = paramA;
    this.b = new bf(paramContext);
    addView(this.b, new RelativeLayout.LayoutParams(-1, -1));
    this.c = new bf(paramContext);
    addView(this.c, new RelativeLayout.LayoutParams(-1, -1));
    this.c.setVisibility(8);
    paramA = CBPreferences.getInstance();
    if ((paramA.getOrientation() != null) && (paramA.getOrientation() != CBOrientation.UNSPECIFIED))
    {
      this.f = paramA.getForcedOrientationDifference();
      this.e = new bn.1(this, paramContext, 1, paramA);
      this.e.enable();
    }
  }
  
  public void a()
  {
    if (this.a == null)
    {
      this.a = this.g.i();
      addView(this.a.b(), new RelativeLayout.LayoutParams(-1, -1));
      this.a.a();
    }
    c();
  }
  
  public void b()
  {
    int i;
    if (!this.g.k)
    {
      i = 1;
      this.g.k = true;
      if (this.d != null) {
        break label108;
      }
      this.d = new bm(getContext());
      this.d.setVisibility(8);
      addView(this.d, new RelativeLayout.LayoutParams(-1, -1));
    }
    for (;;)
    {
      if (!g())
      {
        this.d.setVisibility(0);
        if (i != 0)
        {
          e().a();
          be.a(true, this.d);
        }
      }
      return;
      i = 0;
      break;
      label108:
      this.c.bringToFront();
      this.c.setVisibility(0);
      this.c.a();
      be.a(false, this.b);
      this.d.bringToFront();
      this.d.a();
    }
  }
  
  public void c()
  {
    if (this.d != null)
    {
      this.d.clearAnimation();
      this.d.setVisibility(8);
    }
  }
  
  public void d()
  {
    if (this.e != null)
    {
      this.e.disable();
      this.e = null;
    }
  }
  
  public bf e()
  {
    return this.b;
  }
  
  public View f()
  {
    if (this.a == null) {
      return null;
    }
    return this.a.b();
  }
  
  public boolean g()
  {
    return (this.d != null) && (this.d.getVisibility() == 0);
  }
  
  public a h()
  {
    return this.g;
  }
  
  public boolean onTouchEvent(MotionEvent paramMotionEvent)
  {
    return true;
  }
}
