package com.chartboost.sdk.impl;

import android.content.Context;
import android.content.res.Resources;
import android.os.Handler;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.TranslateAnimation;
import android.widget.ImageView.ScaleType;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.TextView;
import com.chartboost.sdk.Libraries.CBUtility;
import com.chartboost.sdk.Libraries.i;
import com.chartboost.sdk.d;
import java.util.List;

public final class aj
  extends RelativeLayout
  implements bn.a
{
  private ak a;
  private LinearLayout b;
  private bg c;
  private TextView d;
  private ae e;
  private aj.a f;
  
  public aj(Context paramContext, ae paramAe)
  {
    super(paramContext);
    this.e = paramAe;
    this.f = aj.a.b;
    a(paramContext);
  }
  
  private void a(Context paramContext)
  {
    paramContext = getContext();
    int i = Math.round(getContext().getResources().getDisplayMetrics().density * 8.0F);
    setGravity(17);
    this.a = new ak(paramContext);
    this.a.a(-1);
    this.a.setBackgroundColor(-855638017);
    addView(this.a, new RelativeLayout.LayoutParams(-1, -1));
    this.b = new LinearLayout(paramContext);
    this.b.setOrientation(0);
    this.b.setGravity(17);
    int j = CBUtility.a(36, paramContext);
    this.c = new bg(paramContext);
    this.c.setPadding(i, i, i, i);
    paramContext = new LinearLayout.LayoutParams(j, j);
    this.c.setScaleType(ImageView.ScaleType.FIT_CENTER);
    this.d = new TextView(getContext());
    this.d.setPadding(i / 2, i, i, i);
    this.d.setTextColor(-15264491);
    this.d.setTextSize(2, 13.0F);
    this.d.setTypeface(null, 1);
    this.d.setGravity(17);
    this.b.addView(this.c, paramContext);
    this.b.addView(this.d, new LinearLayout.LayoutParams(-2, -1));
    addView(this.b, new RelativeLayout.LayoutParams(-1, -1));
    a();
  }
  
  private void a(boolean paramBoolean, long paramLong)
  {
    this.e.y = paramBoolean;
    if (((paramBoolean) && (getVisibility() == 0)) || ((!paramBoolean) && (getVisibility() == 8))) {
      return;
    }
    aj.1 local1 = new aj.1(this, paramBoolean);
    if (paramBoolean) {
      setVisibility(0);
    }
    float f1 = CBUtility.b(48, getContext());
    Object localObject;
    switch (aj.2.a[this.f.ordinal()])
    {
    default: 
      localObject = null;
      ((Animation)localObject).setDuration(paramLong);
      if (!paramBoolean) {
        break;
      }
    }
    for (paramBoolean = false;; paramBoolean = true)
    {
      ((Animation)localObject).setFillAfter(paramBoolean);
      startAnimation((Animation)localObject);
      this.e.g.add(local1);
      d.a.postDelayed(local1, paramLong);
      return;
      if (paramBoolean)
      {
        f2 = -f1;
        label166:
        if (!paramBoolean) {
          break label197;
        }
      }
      label197:
      for (f1 = 0.0F;; f1 = -f1)
      {
        localObject = new TranslateAnimation(0.0F, 0.0F, f2, f1);
        break;
        f2 = 0.0F;
        break label166;
      }
      if (paramBoolean) {}
      for (float f2 = f1;; f2 = 0.0F)
      {
        if (paramBoolean) {
          f1 = 0.0F;
        }
        localObject = new TranslateAnimation(0.0F, 0.0F, f2, f1);
        break;
      }
      if (paramBoolean)
      {
        f2 = -f1;
        label253:
        if (!paramBoolean) {
          break label284;
        }
      }
      label284:
      for (f1 = 0.0F;; f1 = -f1)
      {
        localObject = new TranslateAnimation(f2, f1, 0.0F, 0.0F);
        break;
        f2 = 0.0F;
        break label253;
      }
      if (paramBoolean) {}
      for (f2 = f1;; f2 = 0.0F)
      {
        if (paramBoolean) {
          f1 = 0.0F;
        }
        localObject = new TranslateAnimation(f2, f1, 0.0F, 0.0F);
        break;
      }
    }
  }
  
  public void a() {}
  
  public void a(i paramI)
  {
    this.c.a(paramI);
    this.c.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
  }
  
  public void a(aj.a paramA)
  {
    if (paramA == null) {
      throw new IllegalArgumentException("the given side cannot be null");
    }
    this.f = paramA;
    paramA = null;
    setClickable(false);
    switch (aj.2.a[this.f.ordinal()])
    {
    }
    for (;;)
    {
      setLayoutParams(paramA);
      return;
      paramA = new RelativeLayout.LayoutParams(-1, CBUtility.a(48, getContext()));
      paramA.addRule(10);
      this.a.b(1);
      continue;
      paramA = new RelativeLayout.LayoutParams(-1, CBUtility.a(48, getContext()));
      paramA.addRule(12);
      this.a.b(4);
      continue;
      paramA = new RelativeLayout.LayoutParams(CBUtility.a(48, getContext()), -1);
      paramA.addRule(9);
      this.a.b(8);
      continue;
      paramA = new RelativeLayout.LayoutParams(CBUtility.a(48, getContext()), -1);
      paramA.addRule(11);
      this.a.b(2);
    }
  }
  
  public void a(String paramString)
  {
    this.d.setText(paramString);
  }
  
  public void a(boolean paramBoolean)
  {
    a(paramBoolean, 510L);
  }
  
  public View b()
  {
    return this;
  }
}
