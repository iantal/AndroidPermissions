package com.chartboost.sdk.impl;

import java.io.IOException;
import java.io.InputStream;
import java.net.CacheRequest;
import java.net.CookieHandler;
import java.net.ProtocolException;
import java.net.URL;
import java.net.UnknownHostException;
import java.security.cert.CertificateException;
import java.util.Map;
import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.SSLHandshakeException;
import javax.net.ssl.SSLSocketFactory;

public class da
{
  final ch a;
  long b = -1L;
  public final boolean c;
  private cd d;
  private dl e;
  private cl f;
  private do g;
  private boolean h;
  private dg i;
  private dg j;
  private ed k;
  private dq l;
  private ck m;
  private di n;
  private ee o;
  private ee p;
  private InputStream q;
  private di r;
  private CacheRequest s;
  
  public da(ch paramCh, dg paramDg, boolean paramBoolean, cd paramCd, dl paramDl, dk paramDk)
  {
    this.a = paramCh;
    this.i = paramDg;
    this.j = paramDg;
    this.c = paramBoolean;
    this.d = paramCd;
    this.e = paramDl;
    if (paramCd != null) {}
    for (paramCh = paramCd.b();; paramCh = null)
    {
      this.f = paramCh;
      this.k = paramDk;
      return;
    }
  }
  
  private static di a(di paramDi1, di paramDi2)
  {
    int i2 = 0;
    cw.a localA = new cw.a();
    Object localObject = paramDi1.g();
    int i1 = 0;
    if (i1 < ((cw)localObject).a())
    {
      String str1 = ((cw)localObject).a(i1);
      String str2 = ((cw)localObject).b(i1);
      if (("Warning".equals(str1)) && (str2.startsWith("1"))) {}
      for (;;)
      {
        i1 += 1;
        break;
        if ((!a(str1)) || (paramDi2.a(str1) == null)) {
          localA.a(str1, str2);
        }
      }
    }
    paramDi2 = paramDi2.g();
    i1 = i2;
    while (i1 < paramDi2.a())
    {
      localObject = paramDi2.a(i1);
      if (a((String)localObject)) {
        localA.a((String)localObject, paramDi2.b(i1));
      }
      i1 += 1;
    }
    return paramDi1.i().a(localA.a()).a();
  }
  
  public static String a(URL paramURL)
  {
    if (cs.a(paramURL) != cs.a(paramURL.getProtocol())) {
      return paramURL.getHost() + ":" + paramURL.getPort();
    }
    return paramURL.getHost();
  }
  
  private void a(ee paramEe)
  {
    this.o = paramEe;
    if ((this.h) && ("gzip".equalsIgnoreCase(this.n.a("Content-Encoding"))))
    {
      this.n = this.n.i().b("Content-Encoding").b("Content-Length").a();
      this.p = new dv(paramEe);
      return;
    }
    this.p = paramEe;
  }
  
  private static boolean a(String paramString)
  {
    return (!"Connection".equalsIgnoreCase(paramString)) && (!"Keep-Alive".equalsIgnoreCase(paramString)) && (!"Proxy-Authenticate".equalsIgnoreCase(paramString)) && (!"Proxy-Authorization".equalsIgnoreCase(paramString)) && (!"TE".equalsIgnoreCase(paramString)) && (!"Trailers".equalsIgnoreCase(paramString)) && (!"Transfer-Encoding".equalsIgnoreCase(paramString)) && (!"Upgrade".equalsIgnoreCase(paramString));
  }
  
  private boolean b(IOException paramIOException)
  {
    if (((paramIOException instanceof SSLHandshakeException)) && ((paramIOException.getCause() instanceof CertificateException))) {}
    for (int i1 = 1;; i1 = 0)
    {
      boolean bool = paramIOException instanceof ProtocolException;
      if ((i1 != 0) || (bool)) {
        break;
      }
      return true;
    }
    return false;
  }
  
  public static String p()
  {
    String str = System.getProperty("http.agent");
    if (str != null) {
      return str;
    }
    return "Java" + System.getProperty("java.version");
  }
  
  private di r()
  {
    return this.n.i().a(null).a();
  }
  
  private void s()
  {
    HostnameVerifier localHostnameVerifier = null;
    if (this.d != null) {
      throw new IllegalStateException();
    }
    String str;
    SSLSocketFactory localSSLSocketFactory;
    if (this.e == null)
    {
      str = this.j.a().getHost();
      if ((str == null) || (str.length() == 0)) {
        throw new UnknownHostException(this.j.a().toString());
      }
      if (!this.j.k()) {
        break label306;
      }
      localSSLSocketFactory = this.a.g();
      localHostnameVerifier = this.a.h();
    }
    for (;;)
    {
      this.e = new dl(new cb(str, cs.a(this.j.a()), localSSLSocketFactory, localHostnameVerifier, this.a.i(), this.a.c(), this.a.m()), this.j.b(), this.a.d(), this.a.j(), cp.a, this.a.l());
      this.d = this.e.a(this.j.c());
      if (!this.d.a())
      {
        this.d.a(this.a.a(), this.a.b(), v());
        if (this.d.j()) {
          this.a.j().b(this.d);
        }
        this.a.l().b(this.d.b());
      }
      for (;;)
      {
        this.f = this.d.b();
        return;
        if (!this.d.j()) {
          this.d.b(this.a.b());
        }
      }
      label306:
      localSSLSocketFactory = null;
    }
  }
  
  private void t()
  {
    ci localCi = this.a.f();
    if (localCi == null) {
      return;
    }
    if (!ct.a(this.n, this.j))
    {
      localCi.b(this.j);
      return;
    }
    this.s = localCi.a(r());
  }
  
  private void u()
  {
    dg.b localB = this.j.f();
    if (this.j.h() == null) {
      localB.a(p());
    }
    if (this.j.a("Host") == null) {
      localB.a("Host", a(this.j.a()));
    }
    if (((this.d == null) || (this.d.k() != 0)) && (this.j.a("Connection") == null)) {
      localB.a("Connection", "Keep-Alive");
    }
    if (this.j.a("Accept-Encoding") == null)
    {
      this.h = true;
      localB.a("Accept-Encoding", "gzip");
    }
    if ((c()) && (this.j.a("Content-Type") == null)) {
      localB.a("Content-Type", "application/x-www-form-urlencoded");
    }
    CookieHandler localCookieHandler = this.a.e();
    if (localCookieHandler != null)
    {
      Map localMap = df.a(localB.a().d(), null);
      df.a(localB, localCookieHandler.get(this.j.b(), localMap));
    }
    this.j = localB.a();
  }
  
  private cn v()
  {
    if (!this.j.k()) {
      return null;
    }
    Object localObject2 = this.j.h();
    Object localObject1 = localObject2;
    if (localObject2 == null) {
      localObject1 = p();
    }
    localObject2 = this.j.a();
    return new cn(((URL)localObject2).getHost(), cs.a((URL)localObject2), (String)localObject1, this.j.i());
  }
  
  public da a(IOException paramIOException)
  {
    if ((this.e != null) && (this.d != null)) {
      this.e.a(this.d, paramIOException);
    }
    if ((this.k == null) || ((this.k instanceof dk))) {}
    for (int i1 = 1; ((this.e == null) && (this.d == null)) || ((this.e != null) && (!this.e.a())) || (!b(paramIOException)) || (i1 == 0); i1 = 0) {
      return null;
    }
    paramIOException = n();
    return new da(this.a, this.i, this.c, paramIOException, this.e, (dk)this.k);
  }
  
  public final void a()
  {
    if (this.m != null) {}
    label211:
    do
    {
      return;
      if (this.g != null) {
        throw new IllegalStateException();
      }
      u();
      ci localCi = this.a.f();
      if (localCi != null) {}
      for (di localDi = localCi.a(this.j);; localDi = null)
      {
        ct localCt = new ct.a(System.currentTimeMillis(), this.j, localDi).a();
        this.m = localCt.c;
        this.j = localCt.a;
        if (localCi != null) {
          localCi.a(this.m);
        }
        if (this.m != ck.c) {
          this.r = localCt.b;
        }
        if ((localDi != null) && (!this.m.b())) {
          cs.a(localDi.h());
        }
        if (!this.m.a()) {
          break label211;
        }
        if (this.d == null) {
          s();
        }
        this.g = ((do)this.d.a(this));
        if ((!c()) || (this.k != null)) {
          break;
        }
        this.k = this.g.a(this.j);
        return;
      }
      if (this.d != null)
      {
        this.a.j().a(this.d);
        this.d = null;
      }
      this.n = this.r;
    } while (this.r.h() == null);
    a(this.r.h().b());
  }
  
  public void a(cw paramCw)
  {
    CookieHandler localCookieHandler = this.a.e();
    if (localCookieHandler != null) {
      localCookieHandler.put(this.j.b(), df.a(paramCw, null));
    }
  }
  
  public void b()
  {
    if (this.b != -1L) {
      throw new IllegalStateException();
    }
    this.b = System.currentTimeMillis();
  }
  
  boolean c()
  {
    return db.a(this.j.c());
  }
  
  public final ed d()
  {
    if (this.m == null) {
      throw new IllegalStateException();
    }
    return this.k;
  }
  
  public final dq e()
  {
    Object localObject = this.l;
    if (localObject != null) {
      return localObject;
    }
    localObject = d();
    if (localObject != null)
    {
      localObject = dy.a((ed)localObject);
      this.l = ((dq)localObject);
      return localObject;
    }
    return null;
  }
  
  public final boolean f()
  {
    return this.n != null;
  }
  
  public final dg g()
  {
    return this.j;
  }
  
  public final di h()
  {
    if (this.n == null) {
      throw new IllegalStateException();
    }
    return this.n;
  }
  
  public final ee i()
  {
    if (this.n == null) {
      throw new IllegalStateException();
    }
    return this.p;
  }
  
  public final InputStream j()
  {
    InputStream localInputStream = this.q;
    if (localInputStream != null) {
      return localInputStream;
    }
    localInputStream = dy.a(i()).k();
    this.q = localInputStream;
    return localInputStream;
  }
  
  public final cd k()
  {
    return this.d;
  }
  
  public cl l()
  {
    return this.f;
  }
  
  public final void m()
  {
    if ((this.g != null) && (this.d != null)) {
      this.g.c();
    }
    this.d = null;
  }
  
  public final cd n()
  {
    if (this.l != null) {
      cs.a(this.l);
    }
    while (this.p == null)
    {
      cs.a(this.d);
      this.d = null;
      return null;
      if (this.k != null) {
        cs.a(this.k);
      }
    }
    cs.a(this.p);
    cs.a(this.q);
    if ((this.g != null) && (!this.g.d()))
    {
      cs.a(this.d);
      this.d = null;
      return null;
    }
    cd localCd = this.d;
    this.d = null;
    return localCd;
  }
  
  public final boolean o()
  {
    if (this.j.c().equals("HEAD")) {}
    do
    {
      return false;
      int i1 = this.n.c();
      if (((i1 < 100) || (i1 >= 200)) && (i1 != 204) && (i1 != 304)) {
        return true;
      }
    } while ((df.a(this.n) == -1L) && (!"chunked".equalsIgnoreCase(this.n.a("Transfer-Encoding"))));
    return true;
  }
  
  public final void q()
  {
    if (this.n != null) {}
    do
    {
      return;
      if (this.m == null) {
        throw new IllegalStateException("call sendRequest() first!");
      }
    } while (!this.m.a());
    if ((this.l != null) && (this.l.b().l() > 0L)) {
      this.l.a();
    }
    if (this.b == -1L)
    {
      if ((df.a(this.j) == -1L) && ((this.k instanceof dk)))
      {
        long l1 = ((dk)this.k).b();
        this.j = this.j.f().a("Content-Length", Long.toString(l1)).a();
      }
      this.g.b(this.j);
    }
    if (this.k != null)
    {
      if (this.l == null) {
        break label404;
      }
      this.l.close();
    }
    for (;;)
    {
      if ((this.k instanceof dk)) {
        this.g.a((dk)this.k);
      }
      this.g.a();
      this.n = this.g.b().a(this.j).a(this.d.i()).a(df.b, Long.toString(this.b)).a(df.c, Long.toString(System.currentTimeMillis())).a(this.m).a();
      this.d.a(this.n.e());
      a(this.n.g());
      if (this.m != ck.b) {
        break label426;
      }
      if (!this.r.a(this.n)) {
        break label416;
      }
      this.g.e();
      m();
      this.n = a(this.r, this.n);
      ci localCi = this.a.f();
      localCi.a();
      localCi.a(this.r, r());
      if (this.r.h() == null) {
        break;
      }
      a(this.r.h().b());
      return;
      label404:
      this.k.close();
    }
    label416:
    cs.a(this.r.h());
    label426:
    if (!o())
    {
      this.o = this.g.a(this.s);
      this.p = this.o;
      return;
    }
    t();
    a(this.g.a(this.s));
  }
}
