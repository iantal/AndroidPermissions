package com.chartboost.sdk.impl;

import java.io.EOFException;
import java.io.IOException;
import java.util.zip.DataFormatException;
import java.util.zip.Inflater;

public final class dw
  implements ee
{
  private final dr a;
  private final Inflater b;
  private int c;
  private boolean d;
  
  dw(dr paramDr, Inflater paramInflater)
  {
    if (paramDr == null) {
      throw new IllegalArgumentException("source == null");
    }
    if (paramInflater == null) {
      throw new IllegalArgumentException("inflater == null");
    }
    this.a = paramDr;
    this.b = paramInflater;
  }
  
  public dw(ee paramEe, Inflater paramInflater)
  {
    this(dy.a(paramEe), paramInflater);
  }
  
  private void b()
  {
    if (this.c == 0) {
      return;
    }
    int i = this.c - this.b.getRemaining();
    this.c -= i;
    this.a.b(i);
  }
  
  public boolean a()
  {
    if (!this.b.needsInput()) {
      return false;
    }
    b();
    if (this.b.getRemaining() != 0) {
      throw new IllegalStateException("?");
    }
    if (this.a.e()) {
      return true;
    }
    eb localEb = this.a.b().a;
    this.c = (localEb.c - localEb.b);
    this.b.setInput(localEb.a, localEb.b, this.c);
    return false;
  }
  
  public long b(dx paramDx, long paramLong)
  {
    if (paramLong < 0L) {
      throw new IllegalArgumentException("byteCount < 0: " + paramLong);
    }
    if (this.d) {
      throw new IllegalStateException("closed");
    }
    if (paramLong == 0L) {
      return 0L;
    }
    for (;;)
    {
      boolean bool = a();
      try
      {
        localObject = paramDx.f(1);
        int i = this.b.inflate(((eb)localObject).a, ((eb)localObject).c, 2048 - ((eb)localObject).c);
        if (i > 0)
        {
          ((eb)localObject).c += i;
          paramDx.b += i;
          return i;
        }
        if ((this.b.finished()) || (this.b.needsDictionary()))
        {
          b();
          return -1L;
        }
        if (!bool) {
          continue;
        }
        throw new EOFException("source exhausted prematurely");
      }
      catch (DataFormatException paramDx)
      {
        Object localObject = new IOException();
        ((IOException)localObject).initCause(paramDx);
        throw ((Throwable)localObject);
      }
    }
  }
  
  public void close()
  {
    if (this.d) {
      return;
    }
    this.b.end();
    this.d = true;
    this.a.close();
  }
}
