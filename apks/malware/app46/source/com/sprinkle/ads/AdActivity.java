package com.sprinkle.ads;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.graphics.Matrix;
import android.os.Bundle;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.view.animation.Animation;
import android.view.animation.ScaleAnimation;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import com.sprinkle.ads.util.FrxUtil;
import com.sprinkle.ads.util.ResourceUtil;

public class AdActivity
  extends Activity
{
  protected static final String TAG = "Sprinkle_AdActivity";
  private static Bitmap mBitmap;
  private String mAdPackname;
  private int mAdType;
  private Context mAppContext;
  private float mDensity;
  private int mHeightPixels;
  private int mWidthPixels;
  private RelativeLayout mainLayout;
  
  public AdActivity() {}
  
  private RelativeLayout getFullScreen()
  {
    RelativeLayout localRelativeLayout = new RelativeLayout(getApplicationContext());
    localRelativeLayout.setBackgroundColor(-16777216);
    Object localObject;
    int i;
    int j;
    label70:
    int k;
    int m;
    if (this.mWidthPixels > this.mHeightPixels)
    {
      localObject = "landscape";
      if (!"landscape".equals(localObject)) {
        break label272;
      }
      i = this.mHeightPixels;
      j = (int)(this.mWidthPixels - this.mDensity * 50.0F + 0.5D);
      k = mBitmap.getWidth();
      m = mBitmap.getHeight();
      if (k / j <= m / i) {
        break label300;
      }
      i = (int)(m * j / k + 0.5D);
    }
    for (;;)
    {
      localObject = new ImageButton(getApplicationContext());
      ((ImageButton)localObject).setBackgroundColor(-16777216);
      ((ImageButton)localObject).setImageBitmap(scaleBitmap(mBitmap, j, i));
      ((ImageButton)localObject).setOnClickListener(new AdActivity.3(this));
      RelativeLayout.LayoutParams localLayoutParams = new RelativeLayout.LayoutParams(-2, -2);
      localLayoutParams.addRule(13, -1);
      localRelativeLayout.addView((View)localObject, localLayoutParams);
      localObject = new ImageButton(getApplicationContext());
      ((ImageButton)localObject).setBackgroundColor(0);
      ((ImageButton)localObject).setImageResource(17301527);
      localRelativeLayout.addView((View)localObject, new RelativeLayout.LayoutParams((int)(this.mDensity * 25.0F), (int)(this.mDensity * 25.0F)));
      ((ImageButton)localObject).setOnClickListener(new AdActivity.4(this));
      return localRelativeLayout;
      localObject = "portrait";
      break;
      label272:
      j = this.mWidthPixels;
      i = (int)(this.mHeightPixels - this.mDensity * 50.0F + 0.5D);
      break label70;
      label300:
      j = (int)(k * i / m + 0.5D);
    }
  }
  
  private RelativeLayout getHalfScreen()
  {
    Object localObject1;
    int i;
    int j;
    if (this.mWidthPixels > this.mHeightPixels)
    {
      localObject1 = "landscape";
      if (!"landscape".equals(localObject1)) {
        break label439;
      }
      i = (int)(this.mHeightPixels * 0.7F + 0.5D);
      j = (int)(i * 16.0D / 9.0D + 0.5D);
    }
    for (;;)
    {
      localObject1 = new RelativeLayout(getApplicationContext());
      int k = (int)(5.0F * this.mDensity + 0.5D);
      Object localObject3 = new RelativeLayout(getApplicationContext());
      ((RelativeLayout)localObject3).setId(65537);
      ((RelativeLayout)localObject3).setBackgroundDrawable(ResourceUtil.getResourceDrawable(getApplicationContext(), "sprinkle_halfscreen_bg_1"));
      ((RelativeLayout)localObject3).setPadding(k, k, k, k);
      Object localObject2 = new RelativeLayout.LayoutParams(-2, -2);
      ((RelativeLayout.LayoutParams)localObject2).addRule(13, -1);
      ((RelativeLayout)localObject1).addView((View)localObject3, (ViewGroup.LayoutParams)localObject2);
      localObject2 = new RelativeLayout(getApplicationContext());
      ((RelativeLayout)localObject2).setBackgroundDrawable(ResourceUtil.getResourceDrawable(getApplicationContext(), "sprinkle_halfscreen_bg_2"));
      RelativeLayout.LayoutParams localLayoutParams = new RelativeLayout.LayoutParams(-2, -2);
      ((RelativeLayout)localObject2).setPadding(k, k, k, k);
      ((RelativeLayout)localObject3).addView((View)localObject2, localLayoutParams);
      localObject3 = new ImageButton(getApplicationContext());
      ((ImageButton)localObject3).setImageBitmap(scaleBitmap(mBitmap, j, i));
      ((ImageButton)localObject3).setOnClickListener(new AdActivity.5(this));
      localLayoutParams = new RelativeLayout.LayoutParams(j, i);
      localLayoutParams.addRule(13, -1);
      ((RelativeLayout)localObject2).addView((View)localObject3, localLayoutParams);
      localObject2 = new ImageButton(getApplicationContext());
      ((ImageButton)localObject2).setBackgroundDrawable(ResourceUtil.getResourceDrawable(getApplicationContext(), "sprinkle_close_btn_1"));
      localObject3 = new RelativeLayout.LayoutParams((int)(20.0F * this.mDensity), (int)(20.0F * this.mDensity));
      ((RelativeLayout.LayoutParams)localObject3).addRule(1, 65537);
      ((RelativeLayout.LayoutParams)localObject3).addRule(2, 65537);
      i = (int)(5.0F * this.mDensity + 0.5D);
      ((RelativeLayout.LayoutParams)localObject3).setMargins(i, 0, 0, i);
      ((RelativeLayout)localObject1).addView((View)localObject2, (ViewGroup.LayoutParams)localObject3);
      ((ImageButton)localObject2).setOnClickListener(new AdActivity.6(this));
      localObject2 = new ScaleAnimation(0.0F, 1.0F, 0.0F, 1.0F, 1, 0.5F, 1, 0.5F);
      ((ScaleAnimation)localObject2).setDuration(400L);
      ((RelativeLayout)localObject1).startAnimation((Animation)localObject2);
      return localObject1;
      localObject1 = "portrait";
      break;
      label439:
      j = (int)(this.mWidthPixels * 0.7F + 0.5D);
      i = (int)(j * 16.0D / 9.0D + 0.5D);
    }
  }
  
  private void init()
  {
    this.mAppContext = getApplicationContext();
    Object localObject = getResources().getDisplayMetrics();
    this.mDensity = ((DisplayMetrics)localObject).density;
    this.mWidthPixels = ((DisplayMetrics)localObject).widthPixels;
    this.mHeightPixels = ((DisplayMetrics)localObject).heightPixels;
    localObject = getIntent();
    this.mAdType = ((Intent)localObject).getIntExtra("adType", 0);
    this.mAdPackname = ((Intent)localObject).getStringExtra("adPackname");
  }
  
  private Bitmap scaleBitmap(Bitmap paramBitmap, int paramInt1, int paramInt2)
  {
    int i = paramBitmap.getWidth();
    int j = paramBitmap.getHeight();
    float f1 = paramInt1 / i;
    float f2 = paramInt2 / j;
    Matrix localMatrix = new Matrix();
    localMatrix.postScale(f1, f2);
    return Bitmap.createBitmap(paramBitmap, 0, 0, i, j, localMatrix, true);
  }
  
  public static void setBitmap(Bitmap paramBitmap)
  {
    mBitmap = paramBitmap;
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    init();
    this.mainLayout = new RelativeLayout(this);
    addContentView(this.mainLayout, new RelativeLayout.LayoutParams(-1, -1));
    RelativeLayout localRelativeLayout;
    switch (this.mAdType)
    {
    default: 
      this.mainLayout.setBackgroundColor(Color.argb(130, 0, 0, 0));
      localRelativeLayout = getHalfScreen();
      paramBundle = localRelativeLayout;
      if (FrxUtil.isNetworkAvaliable(this.mAppContext))
      {
        new Thread(new AdActivity.2(this)).start();
        paramBundle = localRelativeLayout;
      }
      break;
    }
    for (;;)
    {
      this.mainLayout.addView(paramBundle, new RelativeLayout.LayoutParams(-1, -1));
      return;
      this.mainLayout.setBackgroundColor(-16777216);
      localRelativeLayout = getFullScreen();
      paramBundle = localRelativeLayout;
      if (FrxUtil.isNetworkAvaliable(this.mAppContext))
      {
        new Thread(new AdActivity.1(this)).start();
        paramBundle = localRelativeLayout;
      }
    }
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
    this.mainLayout.removeAllViews();
    if ((mBitmap != null) && (!mBitmap.isRecycled()))
    {
      mBitmap.recycle();
      mBitmap = null;
    }
  }
}
