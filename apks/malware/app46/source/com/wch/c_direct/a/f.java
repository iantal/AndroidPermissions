package com.wch.c_direct.a;

import android.content.Context;
import android.content.res.AssetManager;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.NetworkInfo.State;
import android.util.Log;
import com.wch.c_direct.logic.a;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.util.Properties;

public final class f
{
  private static String a(InputStream paramInputStream)
  {
    ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
    for (;;)
    {
      int i = paramInputStream.read();
      if (i == -1) {
        return localByteArrayOutputStream.toString();
      }
      localByteArrayOutputStream.write(i);
    }
  }
  
  public static Properties a(String paramString1, String paramString2, Context paramContext)
  {
    Properties localProperties = new Properties();
    try
    {
      paramString1 = paramContext.getAssets().open(paramString1);
      localProperties.load(new ByteArrayInputStream(c.a(paramString2, a(paramString1)).getBytes()));
      paramString1.close();
      return localProperties;
    }
    catch (Exception paramString1)
    {
      paramString1.printStackTrace();
    }
    return null;
  }
  
  public static boolean a(Context paramContext)
  {
    try
    {
      paramContext = (ConnectivityManager)paramContext.getSystemService("connectivity");
      if (paramContext != null)
      {
        paramContext = paramContext.getActiveNetworkInfo();
        if ((paramContext != null) && (paramContext.isConnected()))
        {
          paramContext = paramContext.getState();
          NetworkInfo.State localState = NetworkInfo.State.CONNECTED;
          if (paramContext == localState) {
            return true;
          }
        }
      }
    }
    catch (Exception paramContext)
    {
      Log.v("error", paramContext.toString());
    }
    return false;
  }
  
  public static Properties b(String paramString1, String paramString2, Context paramContext)
  {
    a.a(false, paramString1);
    Properties localProperties = new Properties();
    try
    {
      paramString1 = paramContext.getAssets().open(paramString1);
      localProperties.load(new ByteArrayInputStream(c.a(paramString2, a(paramString1).split("\n        e")[0]).getBytes()));
      paramString1.close();
      return localProperties;
    }
    catch (Exception paramString1)
    {
      paramString1.printStackTrace();
    }
    return null;
  }
}
