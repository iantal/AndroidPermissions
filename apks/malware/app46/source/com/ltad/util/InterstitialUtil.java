package com.ltad.util;

import android.content.Context;
import android.util.Log;
import com.ltad.a.i;
import com.ltad.interstitial.InterstitialAdapter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import org.json.JSONObject;

public class InterstitialUtil
{
  private static final String TAG = "Joy_InterstitialUtil";
  private static InterstitialUtil mInstance = new InterstitialUtil();
  private Context mAppContext = null;
  private ArrayList mInterstitialList = new ArrayList();
  private HashMap mInterstitialMap = new HashMap();
  
  private InterstitialUtil() {}
  
  public static InterstitialUtil getInstance(Context paramContext)
  {
    if ((mInstance.mAppContext == null) || (mInstance.mAppContext != paramContext.getApplicationContext())) {
      mInstance.mAppContext = paramContext.getApplicationContext();
    }
    return mInstance;
  }
  
  public void addSupportInterstitial(String paramString, InterstitialAdapter paramInterstitialAdapter)
  {
    this.mInterstitialMap.put(paramString, paramInterstitialAdapter);
    if (paramInterstitialAdapter != null) {
      this.mInterstitialList.add(paramInterstitialAdapter);
    }
  }
  
  public void destroy()
  {
    Iterator localIterator = this.mInterstitialMap.keySet().iterator();
    for (;;)
    {
      if (!localIterator.hasNext())
      {
        this.mInterstitialMap.clear();
        Log.i("Joy_InterstitialUtil", "destroy complete");
        return;
      }
      Object localObject = (String)localIterator.next();
      localObject = (InterstitialAdapter)this.mInterstitialMap.get(localObject);
      if (localObject != null) {
        ((InterstitialAdapter)localObject).destroy();
      }
    }
  }
  
  public InterstitialAdapter getNewSupportInterstitial(String paramString)
  {
    if (paramString.startsWith(i.a(720935))) {}
    for (;;)
    {
      Object localObject2;
      int i;
      try
      {
        localObject2 = new HashMap();
        localObject1 = new JSONObject(paramString);
        Iterator localIterator = ((JSONObject)localObject1).keys();
        if (!localIterator.hasNext())
        {
          localObject1 = ((Map)localObject2).keySet().iterator();
          if (!((Iterator)localObject1).hasNext()) {
            break label307;
          }
          localObject1 = (String)((Iterator)localObject1).next();
          i = ((Integer)((Map)localObject2).get(localObject1)).intValue();
          paramString = (String)localObject1;
          Log.i("Joy_InterstitialUtil", "get support interstitial ad: " + paramString + "=== probability:" + i);
          localObject1 = (InterstitialAdapter)this.mInterstitialMap.get(paramString);
          paramString = (String)localObject1;
          if (localObject1 == null)
          {
            paramString = (String)localObject1;
            if (this.mInterstitialList != null)
            {
              paramString = (String)localObject1;
              if (!this.mInterstitialList.isEmpty())
              {
                paramString = (InterstitialAdapter)this.mInterstitialList.get(0);
                Log.i("Joy_InterstitialUtil", "real get interstitial ad:    new  adpater!");
              }
            }
          }
          if (paramString != null) {
            paramString.showProbability = i;
          }
          return paramString;
        }
        str2 = (String)localIterator.next();
      }
      catch (Exception localException1)
      {
        try
        {
          Object localObject1;
          String str2;
          i = Integer.parseInt(((JSONObject)localObject1).getString(str2));
          ((Map)localObject2).put(str2, Integer.valueOf(i));
          continue;
          localException1 = localException1;
          i = -1;
        }
        catch (Exception localException2)
        {
          i = 0;
          continue;
        }
      }
      if (paramString.contains(":"))
      {
        String str1 = paramString;
        try
        {
          localObject2 = paramString.split(":");
          if (localObject2 == null) {
            break label307;
          }
          str1 = paramString;
          if (localObject2.length != 2) {
            break label307;
          }
          paramString = localObject2[0];
          str1 = paramString;
          i = Integer.parseInt(localObject2[1]);
        }
        catch (Exception paramString)
        {
          i = -1;
          paramString = str1;
        }
      }
      else
      {
        label307:
        i = -1;
      }
    }
  }
  
  public ArrayList getSupportAdapterList()
  {
    return this.mInterstitialList;
  }
  
  @Deprecated
  public InterstitialAdapter getSupportInterstitial(String paramString)
  {
    if (paramString.startsWith(i.a(720935))) {}
    for (int j = 1;; j = 0)
    {
      try
      {
        localObject2 = new HashMap();
        localObject1 = new JSONObject(paramString);
        Iterator localIterator = ((JSONObject)localObject1).keys();
        if (!localIterator.hasNext())
        {
          localObject1 = ((Map)localObject2).keySet().iterator();
          if (!((Iterator)localObject1).hasNext()) {
            break label314;
          }
          localObject1 = (String)((Iterator)localObject1).next();
          i = ((Integer)((Map)localObject2).get(localObject1)).intValue();
          paramString = (String)localObject1;
          Log.i("Joy_InterstitialUtil", "get support interstitial ad: " + paramString);
          localObject1 = (InterstitialAdapter)this.mInterstitialMap.get(paramString);
          paramString = (String)localObject1;
          k = j;
          if (localObject1 == null)
          {
            localObject2 = this.mInterstitialMap.keySet().iterator();
            paramString = (String)localObject1;
            if (!((Iterator)localObject2).hasNext()) {
              k = j;
            }
          }
          else
          {
            if (k == 0) {
              break label302;
            }
            paramString.showProbability = i;
            return paramString;
          }
        }
        else
        {
          str = (String)localIterator.next();
        }
      }
      catch (Exception localException1)
      {
        for (;;)
        {
          Object localObject2;
          int k;
          try
          {
            Object localObject1;
            String str;
            i = Integer.parseInt(((JSONObject)localObject1).getString(str));
            ((Map)localObject2).put(str, Integer.valueOf(i));
            continue;
            localException1 = localException1;
            i = 0;
          }
          catch (Exception localException2)
          {
            i = 0;
            continue;
          }
          paramString = (String)((Iterator)localObject2).next();
          Log.i("Joy_InterstitialUtil", "real get interstitial ad: " + paramString);
          paramString = (InterstitialAdapter)this.mInterstitialMap.get(paramString);
          if (paramString != null)
          {
            k = 0;
            continue;
            label302:
            paramString.showProbability = -1;
            return paramString;
          }
          else
          {
            j = 0;
            continue;
            label314:
            i = 0;
          }
        }
      }
      int i = 0;
    }
  }
  
  public void initAd()
  {
    Log.e("Joy_InterstitialUtil", ">>>>>>>>>> Init interstitial ad <<<<<<<<<<");
    Object localObject1 = this.mInterstitialMap.keySet().iterator();
    Object localObject2;
    int i;
    if (!((Iterator)localObject1).hasNext())
    {
      this.mInterstitialMap.clear();
      localObject2 = PropertyUtil.getPropertyDefault(this.mAppContext, i.a(720933), i.a(458757) + i.a(720897) + i.a(458758) + i.a(720897) + i.a(458759));
      localObject1 = localObject2;
      if (!((String)localObject2).contains(i.a(458756))) {
        localObject1 = localObject2 + i.a(720897) + i.a(458756);
      }
      Log.i("Joy_InterstitialUtil", "init ad type: " + (String)localObject1);
      localObject1 = ((String)localObject1).split(i.a(720897));
      if (localObject1.length > 0) {
        i = 0;
      }
    }
    for (;;)
    {
      if (i >= localObject1.length)
      {
        return;
        localObject2 = (String)((Iterator)localObject1).next();
        localObject2 = (InterstitialAdapter)this.mInterstitialMap.get(localObject2);
        if (localObject2 == null) {
          break;
        }
        ((InterstitialAdapter)localObject2).destroy();
        break;
      }
      localObject2 = localObject1[i].substring(0, 1).toUpperCase() + localObject1[i].substring(1).toLowerCase();
      localObject2 = i.a(720934) + (String)localObject2;
      try
      {
        ((InterstitialAdapter)Class.forName((String)localObject2).newInstance()).init(this.mAppContext);
        i += 1;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          Log.w("Joy_InterstitialUtil", "Exception:" + localException.getMessage());
        }
      }
    }
  }
  
  public void stopLoading()
  {
    Iterator localIterator = this.mInterstitialMap.keySet().iterator();
    for (;;)
    {
      if (!localIterator.hasNext())
      {
        Log.i("Joy_InterstitialUtil", "close complete");
        return;
      }
      Object localObject = (String)localIterator.next();
      localObject = (InterstitialAdapter)this.mInterstitialMap.get(localObject);
      if (localObject != null) {
        ((InterstitialAdapter)localObject).setAdClosed(true);
      }
    }
  }
}
