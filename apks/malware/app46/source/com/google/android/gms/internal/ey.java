package com.google.android.gms.internal;

import android.net.Uri;
import android.os.Handler;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public class ey
  extends WebViewClient
{
  protected final ex lN;
  private final Object ls = new Object();
  private ba mS;
  private bf nc;
  private bd nd;
  private ey.a pN;
  private final HashMap sH = new HashMap();
  private t sI;
  private ci sJ;
  private boolean sK = false;
  private boolean sL;
  private cl sM;
  
  public ey(ex paramEx, boolean paramBoolean)
  {
    this.lN = paramEx;
    this.sL = paramBoolean;
  }
  
  private static boolean d(Uri paramUri)
  {
    paramUri = paramUri.getScheme();
    return ("http".equalsIgnoreCase(paramUri)) || ("https".equalsIgnoreCase(paramUri));
  }
  
  private void e(Uri paramUri)
  {
    Object localObject = paramUri.getPath();
    bc localBc = (bc)this.sH.get(localObject);
    if (localBc != null)
    {
      paramUri = eo.c(paramUri);
      if (eu.p(2))
      {
        eu.C("Received GMSG: " + (String)localObject);
        localObject = paramUri.keySet().iterator();
        while (((Iterator)localObject).hasNext())
        {
          String str = (String)((Iterator)localObject).next();
          eu.C("  " + str + ": " + (String)paramUri.get(str));
        }
      }
      localBc.b(this.lN, paramUri);
      return;
    }
    eu.C("No GMSG handler found for GMSG: " + paramUri);
  }
  
  public final void a(ce paramCe)
  {
    ci localCi = null;
    boolean bool = this.lN.ce();
    t localT;
    if ((bool) && (!this.lN.V().mf))
    {
      localT = null;
      if (!bool) {
        break label69;
      }
    }
    for (;;)
    {
      a(new ch(paramCe, localT, localCi, this.sM, this.lN.cd()));
      return;
      localT = this.sI;
      break;
      label69:
      localCi = this.sJ;
    }
  }
  
  protected void a(ch paramCh)
  {
    cf.a(this.lN.getContext(), paramCh);
  }
  
  public final void a(ey.a paramA)
  {
    this.pN = paramA;
  }
  
  public void a(t paramT, ci paramCi, ba paramBa, cl paramCl, boolean paramBoolean, bd paramBd)
  {
    a("/appEvent", new az(paramBa));
    a("/canOpenURLs", bb.mU);
    a("/click", bb.mV);
    a("/close", bb.mW);
    a("/customClose", bb.mX);
    a("/httpTrack", bb.mY);
    a("/log", bb.mZ);
    a("/open", new bg(paramBd));
    a("/touch", bb.na);
    a("/video", bb.nb);
    this.sI = paramT;
    this.sJ = paramCi;
    this.mS = paramBa;
    this.nd = paramBd;
    this.sM = paramCl;
    r(paramBoolean);
  }
  
  public void a(t paramT, ci paramCi, ba paramBa, cl paramCl, boolean paramBoolean, bd paramBd, bf paramBf)
  {
    a(paramT, paramCi, paramBa, paramCl, paramBoolean, paramBd);
    a("/setInterstitialProperties", new be(paramBf));
    this.nc = paramBf;
  }
  
  public final void a(String paramString, bc paramBc)
  {
    this.sH.put(paramString, paramBc);
  }
  
  public final void a(boolean paramBoolean, int paramInt)
  {
    if ((this.lN.ce()) && (!this.lN.V().mf)) {}
    for (t localT = null;; localT = this.sI)
    {
      a(new ch(localT, this.sJ, this.sM, this.lN, paramBoolean, paramInt, this.lN.cd()));
      return;
    }
  }
  
  public final void a(boolean paramBoolean, int paramInt, String paramString)
  {
    ci localCi = null;
    boolean bool = this.lN.ce();
    t localT;
    if ((bool) && (!this.lN.V().mf))
    {
      localT = null;
      if (!bool) {
        break label89;
      }
    }
    for (;;)
    {
      a(new ch(localT, localCi, this.mS, this.sM, this.lN, paramBoolean, paramInt, paramString, this.lN.cd(), this.nd));
      return;
      localT = this.sI;
      break;
      label89:
      localCi = this.sJ;
    }
  }
  
  public final void a(boolean paramBoolean, int paramInt, String paramString1, String paramString2)
  {
    boolean bool = this.lN.ce();
    t localT;
    if ((bool) && (!this.lN.V().mf))
    {
      localT = null;
      if (!bool) {
        break label91;
      }
    }
    label91:
    for (ci localCi = null;; localCi = this.sJ)
    {
      a(new ch(localT, localCi, this.mS, this.sM, this.lN, paramBoolean, paramInt, paramString1, paramString2, this.lN.cd(), this.nd));
      return;
      localT = this.sI;
      break;
    }
  }
  
  public final void aS()
  {
    synchronized (this.ls)
    {
      this.sK = false;
      this.sL = true;
      cf localCf = this.lN.ca();
      if (localCf != null)
      {
        if (!et.bW()) {
          et.sv.post(new ey.1(this, localCf));
        }
      }
      else {
        return;
      }
      localCf.aS();
    }
  }
  
  public boolean cj()
  {
    synchronized (this.ls)
    {
      boolean bool = this.sL;
      return bool;
    }
  }
  
  public final void onLoadResource(WebView paramWebView, String paramString)
  {
    eu.C("Loading resource: " + paramString);
    paramWebView = Uri.parse(paramString);
    if (("gmsg".equalsIgnoreCase(paramWebView.getScheme())) && ("mobileads.google.com".equalsIgnoreCase(paramWebView.getHost()))) {
      e(paramWebView);
    }
  }
  
  public final void onPageFinished(WebView paramWebView, String paramString)
  {
    if (this.pN != null)
    {
      this.pN.a(this.lN);
      this.pN = null;
    }
  }
  
  public final void r(boolean paramBoolean)
  {
    this.sK = paramBoolean;
  }
  
  public final void reset()
  {
    synchronized (this.ls)
    {
      this.sH.clear();
      this.sI = null;
      this.sJ = null;
      this.pN = null;
      this.mS = null;
      this.sK = false;
      this.sL = false;
      this.nd = null;
      this.sM = null;
      return;
    }
  }
  
  public final boolean shouldOverrideUrlLoading(WebView paramWebView, String paramString)
  {
    eu.C("AdWebView shouldOverrideUrlLoading: " + paramString);
    Uri localUri = Uri.parse(paramString);
    if (("gmsg".equalsIgnoreCase(localUri.getScheme())) && ("mobileads.google.com".equalsIgnoreCase(localUri.getHost()))) {
      e(localUri);
    }
    for (;;)
    {
      return true;
      if ((this.sK) && (paramWebView == this.lN) && (d(localUri))) {
        return super.shouldOverrideUrlLoading(paramWebView, paramString);
      }
      if (!this.lN.willNotDraw())
      {
        try
        {
          k localK = this.lN.cc();
          paramWebView = localUri;
          if (localK != null)
          {
            paramWebView = localUri;
            if (localK.b(localUri)) {
              paramWebView = localK.a(localUri, this.lN.getContext());
            }
          }
        }
        catch (l paramWebView)
        {
          for (;;)
          {
            eu.D("Unable to append parameter to URL: " + paramString);
            paramWebView = localUri;
          }
        }
        a(new ce("android.intent.action.VIEW", paramWebView.toString(), null, null, null, null, null));
      }
      else
      {
        eu.D("AdWebView unable to handle URL: " + paramString);
      }
    }
  }
}
