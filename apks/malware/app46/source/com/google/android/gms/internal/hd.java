package com.google.android.gms.internal;

import android.content.Context;
import android.content.Intent;
import android.os.Handler;
import android.os.Handler.Callback;
import android.os.Message;
import java.util.HashMap;

public final class hd
  implements Handler.Callback
{
  private static final Object Gv = new Object();
  private static hd Gw;
  private final HashMap Gx = new HashMap();
  private final Context lz;
  private final Handler mHandler = new Handler(paramContext.getMainLooper(), this);
  
  private hd(Context paramContext)
  {
    this.lz = paramContext.getApplicationContext();
  }
  
  public static hd E(Context paramContext)
  {
    synchronized (Gv)
    {
      if (Gw == null) {
        Gw = new hd(paramContext.getApplicationContext());
      }
      return Gw;
    }
  }
  
  public boolean a(String paramString, hb.f paramF)
  {
    for (;;)
    {
      hd.a localA;
      synchronized (this.Gx)
      {
        localA = (hd.a)this.Gx.get(paramString);
        if (localA == null)
        {
          localA = new hd.a(this, paramString);
          localA.a(paramF);
          paramF = new Intent(paramString).setPackage("com.google.android.gms");
          localA.B(this.lz.bindService(paramF, localA.fx(), 129));
          this.Gx.put(paramString, localA);
          paramString = localA;
          boolean bool = paramString.isBound();
          return bool;
        }
        this.mHandler.removeMessages(0, localA);
        if (localA.c(paramF)) {
          throw new IllegalStateException("Trying to bind a GmsServiceConnection that was already connected before.  startServiceAction=" + paramString);
        }
      }
      localA.a(paramF);
      switch (localA.getState())
      {
      case 1: 
        paramF.onServiceConnected(localA.getComponentName(), localA.getBinder());
        paramString = localA;
        break;
      case 2: 
        paramString = new Intent(paramString).setPackage("com.google.android.gms");
        localA.B(this.lz.bindService(paramString, localA.fx(), 129));
        paramString = localA;
        break;
      default: 
        paramString = localA;
      }
    }
  }
  
  public void b(String paramString, hb.f paramF)
  {
    hd.a localA;
    synchronized (this.Gx)
    {
      localA = (hd.a)this.Gx.get(paramString);
      if (localA == null) {
        throw new IllegalStateException("Nonexistent connection status for service action: " + paramString);
      }
    }
    if (!localA.c(paramF)) {
      throw new IllegalStateException("Trying to unbind a GmsServiceConnection  that was not bound before.  startServiceAction=" + paramString);
    }
    localA.b(paramF);
    if (localA.fz())
    {
      paramString = this.mHandler.obtainMessage(0, localA);
      this.mHandler.sendMessageDelayed(paramString, 5000L);
    }
  }
  
  public boolean handleMessage(Message arg1)
  {
    switch (???.what)
    {
    default: 
      return false;
    }
    hd.a localA = (hd.a)???.obj;
    synchronized (this.Gx)
    {
      if (localA.fz())
      {
        this.lz.unbindService(localA.fx());
        this.Gx.remove(localA.fy());
      }
      return true;
    }
  }
}
