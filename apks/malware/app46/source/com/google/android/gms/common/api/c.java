package com.google.android.gms.common.api;

import android.content.Context;
import android.os.Bundle;
import android.os.DeadObjectException;
import android.os.Handler;
import android.os.Looper;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.util.Log;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.internal.gy;
import com.google.android.gms.internal.hc;
import com.google.android.gms.internal.hc.b;
import com.google.android.gms.internal.hm;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

final class c
  implements GoogleApiClient
{
  private final Looper DF;
  private final Lock DQ = new ReentrantLock();
  private final Condition DR = this.DQ.newCondition();
  private final hc DS = new hc(paramContext, paramLooper, this.Ej);
  private final Fragment DT;
  final Queue DU = new LinkedList();
  private ConnectionResult DV;
  private int DW;
  private int DX = 4;
  private int DY = 0;
  private boolean DZ = false;
  private final c.a Dy = new c.1(this);
  private int Ea;
  private long Eb = 5000L;
  final Handler Ec;
  private final Bundle Ed = new Bundle();
  private final Map Ee = new HashMap();
  private final List Ef;
  private boolean Eg;
  final Set Eh = Collections.newSetFromMap(new ConcurrentHashMap());
  final GoogleApiClient.ConnectionCallbacks Ei = new c.2(this);
  private final hc.b Ej = new c.3(this);
  
  public c(Context paramContext, Looper paramLooper, gy paramGy, Map paramMap, Fragment paramFragment, Set paramSet1, Set paramSet2)
  {
    this.DT = paramFragment;
    this.DF = paramLooper;
    this.Ec = new c.b(this, paramLooper);
    paramFragment = paramSet1.iterator();
    while (paramFragment.hasNext())
    {
      paramSet1 = (GoogleApiClient.ConnectionCallbacks)paramFragment.next();
      this.DS.registerConnectionCallbacks(paramSet1);
    }
    paramFragment = paramSet2.iterator();
    while (paramFragment.hasNext())
    {
      paramSet1 = (GoogleApiClient.OnConnectionFailedListener)paramFragment.next();
      this.DS.registerConnectionFailedListener(paramSet1);
    }
    paramFragment = paramMap.keySet().iterator();
    while (paramFragment.hasNext())
    {
      paramSet1 = (Api)paramFragment.next();
      paramSet2 = paramSet1.ez();
      Object localObject = paramMap.get(paramSet1);
      this.Ee.put(paramSet1.eB(), a(paramSet2, localObject, paramContext, paramLooper, paramGy, this.Ei, new c.4(this, paramSet2)));
    }
    this.Ef = Collections.unmodifiableList(paramGy.fl());
  }
  
  private static Api.a a(Api.b paramB, Object paramObject, Context paramContext, Looper paramLooper, gy paramGy, GoogleApiClient.ConnectionCallbacks paramConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener paramOnConnectionFailedListener)
  {
    return paramB.a(paramContext, paramLooper, paramGy, paramObject, paramConnectionCallbacks, paramOnConnectionFailedListener);
  }
  
  private void a(c.c paramC)
  {
    boolean bool2 = true;
    this.DQ.lock();
    for (;;)
    {
      try
      {
        if (!isConnected())
        {
          if (eM())
          {
            break label152;
            hm.a(bool1, "GoogleApiClient is not connected yet.");
            if (paramC.eB() != null)
            {
              bool1 = bool2;
              hm.b(bool1, "This task can not be executed or enqueued (it's probably a Batch or malformed)");
              this.Eh.add(paramC);
              paramC.a(this.Dy);
              if (!eM()) {
                continue;
              }
              paramC.m(new Status(8));
            }
          }
          else
          {
            bool1 = false;
            continue;
          }
          bool1 = false;
          continue;
          paramC.b(a(paramC.eB()));
          return;
        }
      }
      finally
      {
        this.DQ.unlock();
      }
      label152:
      boolean bool1 = true;
    }
  }
  
  private void aa(int paramInt)
  {
    this.DQ.lock();
    Object localObject2;
    try
    {
      if (this.DX == 3) {
        break label328;
      }
      if (paramInt != -1) {
        break label195;
      }
      if (isConnecting())
      {
        Iterator localIterator1 = this.DU.iterator();
        while (localIterator1.hasNext())
        {
          localObject2 = (c.c)localIterator1.next();
          if (((c.c)localObject2).eG() != 1)
          {
            ((c.c)localObject2).cancel();
            localIterator1.remove();
          }
        }
      }
      this.DU.clear();
    }
    finally
    {
      this.DQ.unlock();
    }
    Iterator localIterator2 = this.Eh.iterator();
    while (localIterator2.hasNext()) {
      ((c.c)localIterator2.next()).cancel();
    }
    this.Eh.clear();
    if ((this.DV == null) && (!this.DU.isEmpty()))
    {
      this.DZ = true;
      this.DQ.unlock();
      return;
    }
    label195:
    boolean bool1 = isConnecting();
    boolean bool2 = isConnected();
    this.DX = 3;
    if (bool1)
    {
      if (paramInt == -1) {
        this.DV = null;
      }
      this.DR.signalAll();
    }
    this.Eg = false;
    localIterator2 = this.Ee.values().iterator();
    while (localIterator2.hasNext())
    {
      localObject2 = (Api.a)localIterator2.next();
      if (((Api.a)localObject2).isConnected()) {
        ((Api.a)localObject2).disconnect();
      }
    }
    this.Eg = true;
    this.DX = 4;
    if (bool2)
    {
      if (paramInt != -1) {
        this.DS.ao(paramInt);
      }
      this.Eg = false;
    }
    label328:
    this.DQ.unlock();
  }
  
  private void eK()
  {
    this.DQ.lock();
    for (;;)
    {
      try
      {
        this.Ea -= 1;
        if (this.Ea == 0)
        {
          if (this.DV == null) {
            break label128;
          }
          this.DZ = false;
          aa(3);
          if (eM()) {
            this.DY -= 1;
          }
          if (eM())
          {
            this.Ec.sendMessageDelayed(this.Ec.obtainMessage(1), this.Eb);
            this.Eg = false;
          }
        }
        else
        {
          return;
        }
        this.DS.a(this.DV);
        continue;
        this.DX = 2;
      }
      finally
      {
        this.DQ.unlock();
      }
      label128:
      eN();
      this.DR.signalAll();
      eL();
      if (!this.DZ) {
        break;
      }
      this.DZ = false;
      aa(-1);
    }
    if (this.Ed.isEmpty()) {}
    for (Bundle localBundle = null;; localBundle = this.Ed)
    {
      this.DS.c(localBundle);
      break;
    }
  }
  
  private void eL()
  {
    boolean bool;
    if ((isConnected()) || (eM())) {
      bool = true;
    }
    for (;;)
    {
      hm.a(bool, "GoogleApiClient is not connected yet.");
      this.DQ.lock();
      try
      {
        for (;;)
        {
          bool = this.DU.isEmpty();
          if (bool) {
            break;
          }
          try
          {
            a((c.c)this.DU.remove());
          }
          catch (DeadObjectException localDeadObjectException)
          {
            Log.w("GoogleApiClientImpl", "Service died while flushing queue", localDeadObjectException);
          }
        }
        bool = false;
      }
      finally
      {
        this.DQ.unlock();
      }
    }
    this.DQ.unlock();
  }
  
  /* Error */
  private boolean eM()
  {
    // Byte code:
    //   0: aload_0
    //   1: getfield 56	com/google/android/gms/common/api/c:DQ	Ljava/util/concurrent/locks/Lock;
    //   4: invokeinterface 222 1 0
    //   9: aload_0
    //   10: getfield 73	com/google/android/gms/common/api/c:DY	I
    //   13: istore_1
    //   14: iload_1
    //   15: ifeq +16 -> 31
    //   18: iconst_1
    //   19: istore_2
    //   20: aload_0
    //   21: getfield 56	com/google/android/gms/common/api/c:DQ	Ljava/util/concurrent/locks/Lock;
    //   24: invokeinterface 262 1 0
    //   29: iload_2
    //   30: ireturn
    //   31: iconst_0
    //   32: istore_2
    //   33: goto -13 -> 20
    //   36: astore_3
    //   37: aload_0
    //   38: getfield 56	com/google/android/gms/common/api/c:DQ	Ljava/util/concurrent/locks/Lock;
    //   41: invokeinterface 262 1 0
    //   46: aload_3
    //   47: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	48	0	this	c
    //   13	2	1	i	int
    //   19	14	2	bool	boolean
    //   36	11	3	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   9	14	36	finally
  }
  
  private void eN()
  {
    this.DQ.lock();
    try
    {
      this.DY = 0;
      this.Ec.removeMessages(1);
      return;
    }
    finally
    {
      this.DQ.unlock();
    }
  }
  
  public Api.a a(Api.c paramC)
  {
    paramC = (Api.a)this.Ee.get(paramC);
    hm.b(paramC, "Appropriate Api was not requested.");
    return paramC;
  }
  
  /* Error */
  public a.b a(a.b paramB)
  {
    // Byte code:
    //   0: aload_0
    //   1: getfield 56	com/google/android/gms/common/api/c:DQ	Ljava/util/concurrent/locks/Lock;
    //   4: invokeinterface 222 1 0
    //   9: aload_0
    //   10: invokevirtual 225	com/google/android/gms/common/api/c:isConnected	()Z
    //   13: ifeq +20 -> 33
    //   16: aload_0
    //   17: aload_1
    //   18: invokevirtual 387	com/google/android/gms/common/api/c:b	(Lcom/google/android/gms/common/api/a$b;)Lcom/google/android/gms/common/api/a$b;
    //   21: pop
    //   22: aload_0
    //   23: getfield 56	com/google/android/gms/common/api/c:DQ	Ljava/util/concurrent/locks/Lock;
    //   26: invokeinterface 262 1 0
    //   31: aload_1
    //   32: areturn
    //   33: aload_0
    //   34: getfield 69	com/google/android/gms/common/api/c:DU	Ljava/util/Queue;
    //   37: aload_1
    //   38: invokeinterface 388 2 0
    //   43: pop
    //   44: goto -22 -> 22
    //   47: astore_1
    //   48: aload_0
    //   49: getfield 56	com/google/android/gms/common/api/c:DQ	Ljava/util/concurrent/locks/Lock;
    //   52: invokeinterface 262 1 0
    //   57: aload_1
    //   58: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	59	0	this	c
    //   0	59	1	paramB	a.b
    // Exception table:
    //   from	to	target	type
    //   9	22	47	finally
    //   33	44	47	finally
  }
  
  public a.b b(a.b paramB)
  {
    if ((isConnected()) || (eM())) {}
    for (boolean bool = true;; bool = false)
    {
      hm.a(bool, "GoogleApiClient is not connected yet.");
      eL();
      try
      {
        a(paramB);
        return paramB;
      }
      catch (DeadObjectException localDeadObjectException)
      {
        aa(1);
      }
    }
    return paramB;
  }
  
  public ConnectionResult blockingConnect()
  {
    boolean bool;
    if (Looper.myLooper() != Looper.getMainLooper()) {
      bool = true;
    }
    for (;;)
    {
      hm.a(bool, "blockingConnect must not be called on the UI thread");
      this.DQ.lock();
      try
      {
        connect();
        for (;;)
        {
          bool = isConnecting();
          if (!bool) {
            break label86;
          }
          try
          {
            this.DR.await();
          }
          catch (InterruptedException localInterruptedException)
          {
            Thread.currentThread().interrupt();
            localConnectionResult = new ConnectionResult(15, null);
            return localConnectionResult;
          }
        }
        bool = false;
        continue;
        label86:
        if (isConnected())
        {
          localConnectionResult = ConnectionResult.CS;
          return localConnectionResult;
        }
        if (this.DV != null)
        {
          localConnectionResult = this.DV;
          return localConnectionResult;
        }
        ConnectionResult localConnectionResult = new ConnectionResult(13, null);
        return localConnectionResult;
      }
      finally
      {
        this.DQ.unlock();
      }
    }
  }
  
  public ConnectionResult blockingConnect(long paramLong, TimeUnit paramTimeUnit)
  {
    boolean bool;
    if (Looper.myLooper() != Looper.getMainLooper()) {
      bool = true;
    }
    for (;;)
    {
      hm.a(bool, "blockingConnect must not be called on the UI thread");
      this.DQ.lock();
      try
      {
        connect();
        paramLong = paramTimeUnit.toNanos(paramLong);
        for (;;)
        {
          bool = isConnecting();
          if (!bool) {
            break;
          }
          try
          {
            long l = this.DR.awaitNanos(paramLong);
            paramLong = l;
            if (l <= 0L)
            {
              paramTimeUnit = new ConnectionResult(14, null);
              return paramTimeUnit;
            }
          }
          catch (InterruptedException paramTimeUnit)
          {
            Thread.currentThread().interrupt();
            paramTimeUnit = new ConnectionResult(15, null);
            return paramTimeUnit;
          }
        }
        bool = false;
        continue;
        if (isConnected())
        {
          paramTimeUnit = ConnectionResult.CS;
          return paramTimeUnit;
        }
        if (this.DV != null)
        {
          paramTimeUnit = this.DV;
          return paramTimeUnit;
        }
        paramTimeUnit = new ConnectionResult(13, null);
        return paramTimeUnit;
      }
      finally
      {
        this.DQ.unlock();
      }
    }
  }
  
  public void connect()
  {
    this.DQ.lock();
    try
    {
      this.DZ = false;
      if (!isConnected())
      {
        boolean bool = isConnecting();
        if (!bool) {}
      }
      else
      {
        return;
      }
      this.Eg = true;
      this.DV = null;
      this.DX = 1;
      this.Ed.clear();
      this.Ea = this.Ee.size();
      Iterator localIterator = this.Ee.values().iterator();
      while (localIterator.hasNext()) {
        ((Api.a)localIterator.next()).connect();
      }
    }
    finally
    {
      this.DQ.unlock();
    }
  }
  
  public void disconnect()
  {
    eN();
    aa(-1);
  }
  
  public Looper getLooper()
  {
    return this.DF;
  }
  
  /* Error */
  public boolean isConnected()
  {
    // Byte code:
    //   0: aload_0
    //   1: getfield 56	com/google/android/gms/common/api/c:DQ	Ljava/util/concurrent/locks/Lock;
    //   4: invokeinterface 222 1 0
    //   9: aload_0
    //   10: getfield 71	com/google/android/gms/common/api/c:DX	I
    //   13: istore_1
    //   14: iload_1
    //   15: iconst_2
    //   16: if_icmpne +16 -> 32
    //   19: iconst_1
    //   20: istore_2
    //   21: aload_0
    //   22: getfield 56	com/google/android/gms/common/api/c:DQ	Ljava/util/concurrent/locks/Lock;
    //   25: invokeinterface 262 1 0
    //   30: iload_2
    //   31: ireturn
    //   32: iconst_0
    //   33: istore_2
    //   34: goto -13 -> 21
    //   37: astore_3
    //   38: aload_0
    //   39: getfield 56	com/google/android/gms/common/api/c:DQ	Ljava/util/concurrent/locks/Lock;
    //   42: invokeinterface 262 1 0
    //   47: aload_3
    //   48: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	49	0	this	c
    //   13	4	1	i	int
    //   20	14	2	bool	boolean
    //   37	11	3	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   9	14	37	finally
  }
  
  /* Error */
  public boolean isConnecting()
  {
    // Byte code:
    //   0: iconst_1
    //   1: istore_2
    //   2: aload_0
    //   3: getfield 56	com/google/android/gms/common/api/c:DQ	Ljava/util/concurrent/locks/Lock;
    //   6: invokeinterface 222 1 0
    //   11: aload_0
    //   12: getfield 71	com/google/android/gms/common/api/c:DX	I
    //   15: istore_1
    //   16: iload_1
    //   17: iconst_1
    //   18: if_icmpne +14 -> 32
    //   21: aload_0
    //   22: getfield 56	com/google/android/gms/common/api/c:DQ	Ljava/util/concurrent/locks/Lock;
    //   25: invokeinterface 262 1 0
    //   30: iload_2
    //   31: ireturn
    //   32: iconst_0
    //   33: istore_2
    //   34: goto -13 -> 21
    //   37: astore_3
    //   38: aload_0
    //   39: getfield 56	com/google/android/gms/common/api/c:DQ	Ljava/util/concurrent/locks/Lock;
    //   42: invokeinterface 262 1 0
    //   47: aload_3
    //   48: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	49	0	this	c
    //   15	4	1	i	int
    //   1	33	2	bool	boolean
    //   37	11	3	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   11	16	37	finally
  }
  
  public boolean isConnectionCallbacksRegistered(GoogleApiClient.ConnectionCallbacks paramConnectionCallbacks)
  {
    return this.DS.isConnectionCallbacksRegistered(paramConnectionCallbacks);
  }
  
  public boolean isConnectionFailedListenerRegistered(GoogleApiClient.OnConnectionFailedListener paramOnConnectionFailedListener)
  {
    return this.DS.isConnectionFailedListenerRegistered(paramOnConnectionFailedListener);
  }
  
  public void reconnect()
  {
    disconnect();
    connect();
  }
  
  public void registerConnectionCallbacks(GoogleApiClient.ConnectionCallbacks paramConnectionCallbacks)
  {
    this.DS.registerConnectionCallbacks(paramConnectionCallbacks);
  }
  
  public void registerConnectionFailedListener(GoogleApiClient.OnConnectionFailedListener paramOnConnectionFailedListener)
  {
    this.DS.registerConnectionFailedListener(paramOnConnectionFailedListener);
  }
  
  public void stopAutoManage()
  {
    if (this.DT != null) {}
    for (boolean bool = true;; bool = false)
    {
      hm.a(bool, "Called stopAutoManage but automatic lifecycle management is not enabled.");
      if (this.DT.getActivity() != null)
      {
        this.DT.getActivity().getSupportFragmentManager().beginTransaction().remove(this.DT).commit();
        disconnect();
      }
      return;
    }
  }
  
  public void unregisterConnectionCallbacks(GoogleApiClient.ConnectionCallbacks paramConnectionCallbacks)
  {
    this.DS.unregisterConnectionCallbacks(paramConnectionCallbacks);
  }
  
  public void unregisterConnectionFailedListener(GoogleApiClient.OnConnectionFailedListener paramOnConnectionFailedListener)
  {
    this.DS.unregisterConnectionFailedListener(paramOnConnectionFailedListener);
  }
}
