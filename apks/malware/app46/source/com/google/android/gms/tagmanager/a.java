package com.google.android.gms.tagmanager;

import android.content.Context;
import android.os.Process;
import com.google.android.gms.ads.identifier.AdvertisingIdClient.Info;
import com.google.android.gms.internal.ij;
import com.google.android.gms.internal.il;

class a
{
  private static a aeh;
  private static Object tq = new Object();
  private volatile long aec = 900000L;
  private volatile long aed = 30000L;
  private volatile long aee;
  private final ij aef;
  private a.a aeg = new a.1(this);
  private volatile boolean mClosed = false;
  private final Context mContext;
  private final Thread sf;
  private volatile AdvertisingIdClient.Info ts;
  
  private a(Context paramContext)
  {
    this(paramContext, null, il.gb());
  }
  
  a(Context paramContext, a.a paramA, ij paramIj)
  {
    this.aef = paramIj;
    if (paramContext != null) {}
    for (this.mContext = paramContext.getApplicationContext();; this.mContext = paramContext)
    {
      if (paramA != null) {
        this.aeg = paramA;
      }
      this.sf = new Thread(new a.2(this));
      return;
    }
  }
  
  static a M(Context paramContext)
  {
    if (aeh == null) {}
    synchronized (tq)
    {
      if (aeh == null)
      {
        aeh = new a(paramContext);
        aeh.start();
      }
      return aeh;
    }
  }
  
  private void le()
  {
    Process.setThreadPriority(10);
    while (!this.mClosed) {
      try
      {
        this.ts = this.aeg.lg();
        Thread.sleep(this.aec);
      }
      catch (InterruptedException localInterruptedException)
      {
        bh.B("sleep interrupted in AdvertiserDataPoller thread; continuing");
      }
    }
  }
  
  private void lf()
  {
    if (this.aef.currentTimeMillis() - this.aee < this.aed) {
      return;
    }
    interrupt();
    this.aee = this.aef.currentTimeMillis();
  }
  
  void interrupt()
  {
    this.sf.interrupt();
  }
  
  public boolean isLimitAdTrackingEnabled()
  {
    lf();
    if (this.ts == null) {
      return true;
    }
    return this.ts.isLimitAdTrackingEnabled();
  }
  
  public String ld()
  {
    lf();
    if (this.ts == null) {
      return null;
    }
    return this.ts.getId();
  }
  
  void start()
  {
    this.sf.start();
  }
}
