package com.google.android.gms.dynamic;

import java.lang.reflect.Field;

public final class e
  extends d.a
{
  private final Object Mk;
  
  private e(Object paramObject)
  {
    this.Mk = paramObject;
  }
  
  public static Object e(d paramD)
  {
    if ((paramD instanceof e)) {
      return ((e)paramD).Mk;
    }
    paramD = paramD.asBinder();
    Object localObject = paramD.getClass().getDeclaredFields();
    if (localObject.length == 1)
    {
      localObject = localObject[0];
      if (!((Field)localObject).isAccessible())
      {
        ((Field)localObject).setAccessible(true);
        try
        {
          paramD = ((Field)localObject).get(paramD);
          return paramD;
        }
        catch (NullPointerException paramD)
        {
          throw new IllegalArgumentException("Binder object is null.", paramD);
        }
        catch (IllegalArgumentException paramD)
        {
          throw new IllegalArgumentException("remoteBinder is the wrong class.", paramD);
        }
        catch (IllegalAccessException paramD)
        {
          throw new IllegalArgumentException("Could not access the field in remoteBinder.", paramD);
        }
      }
      throw new IllegalArgumentException("The concrete class implementing IObjectWrapper must have exactly one declared *private* field for the wrapped object. Preferably, this is an instance of the ObjectWrapper<T> class.");
    }
    throw new IllegalArgumentException("The concrete class implementing IObjectWrapper must have exactly *one* declared private field for the wrapped object.  Preferably, this is an instance of the ObjectWrapper<T> class.");
  }
  
  public static d h(Object paramObject)
  {
    return new e(paramObject);
  }
}
