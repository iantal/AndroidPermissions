package gqq.wwvrslwg.tnyijqWfo.a.d;

import android.content.Context;
import android.content.res.AssetManager;
import gqq.wwvrslwg.tnyijqWfo.a.h;
import gqq.wwvrslwg.tnyijqWfo.a.s;
import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.Properties;

public final class b
{
  private static HashMap a = new HashMap();
  
  private static String a(String paramString1, String paramString2)
  {
    return new StringBuilder().append(paramString1).append("_").append(paramString2).toString().hashCode();
  }
  
  public static Properties a(Context paramContext, String paramString, boolean paramBoolean)
  {
    long l = System.currentTimeMillis();
    a localA = b(paramContext, paramString);
    String str;
    if (localA.b)
    {
      str = s.a(paramContext, localA.a, new String(new byte[] { 10, 32, 32, 32, 32, 32, 32, 32, 32, 101 }));
      if (str.equals(""))
      {
        new StringBuilder("readAst4endTag（）结果为空，for:").append(localA.a);
        throw new RuntimeException();
      }
      paramContext = str;
    }
    for (;;)
    {
      try
      {
        if (h.a(str.getBytes())) {
          paramContext = h.a(new String(new byte[] { 97, 98, 99, 49, 50, 51, 52, 53 }), str);
        }
        paramContext = s.a(paramContext.getBytes());
        new StringBuilder("test -- >readPtyOrObfus ").append(paramString).append(" , takes ").append(System.currentTimeMillis() - l);
        return paramContext;
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
        throw new RuntimeException();
      }
      if (paramBoolean) {
        paramContext = s.a(paramString, paramContext);
      } else {
        paramContext = s.c(paramString, paramContext);
      }
    }
  }
  
  public static boolean a(Context paramContext, String paramString)
  {
    boolean bool = false;
    if (a.containsKey(paramString)) {
      return ((Boolean)a.get(paramString)).booleanValue();
    }
    try
    {
      paramContext.getAssets().open(paramString);
      bool = true;
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
    catch (FileNotFoundException paramContext)
    {
      for (;;) {}
    }
    a.put(paramString, Boolean.valueOf(bool));
    return bool;
  }
  
  public static a b(Context paramContext, String paramString)
  {
    long l = System.currentTimeMillis();
    Object localObject = paramString.split("\\/");
    if (localObject.length > 2) {
      throw new RuntimeException();
    }
    String str1;
    label51:
    String str2;
    if (localObject.length == 1)
    {
      str1 = "";
      if (localObject.length != 1) {
        break label147;
      }
      localObject = localObject[0];
      str2 = a(g.b(), (String)localObject);
      if (!str1.equals("")) {
        break label156;
      }
      label71:
      if (!str1.equals("")) {
        break label192;
      }
    }
    for (;;)
    {
      if (!a(paramContext, str2)) {
        break label222;
      }
      new StringBuilder("getExistFiles in:").append(paramString).append(" , out:").append(str2).append(" , takes ").append(System.currentTimeMillis() - l);
      return new a(str2, true);
      str1 = localObject[0];
      break;
      label147:
      localObject = localObject[1];
      break label51;
      label156:
      str2 = a(g.b(), str1) + "/" + str2;
      break label71;
      label192:
      localObject = str1 + "/" + (String)localObject;
    }
    label222:
    if (a(paramContext, (String)localObject))
    {
      new StringBuilder("getExistFiles in:").append(paramString).append(" , out:").append((String)localObject).append(" , takes ").append(System.currentTimeMillis() - l);
      return new a((String)localObject, false);
    }
    throw new RuntimeException();
  }
}
