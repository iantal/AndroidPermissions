package gqq.wwvrslwg.tnyijqWfo.a;

import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;

public final class u
{
  private static String a = "ecode";
  
  public static InputStream a(InputStream paramInputStream, int paramInt)
  {
    BufferedInputStream localBufferedInputStream = new BufferedInputStream(paramInputStream);
    localBufferedInputStream.mark(100);
    ByteArrayOutputStream localByteArrayOutputStream;
    try
    {
      if (!a(localBufferedInputStream))
      {
        localBufferedInputStream.reset();
        return localBufferedInputStream;
      }
      localBufferedInputStream.reset();
      localBufferedInputStream.skip(a.getBytes().length);
      localByteArrayOutputStream = new ByteArrayOutputStream();
      for (;;)
      {
        int i = localBufferedInputStream.read();
        if (i < 0) {
          break;
        }
        localByteArrayOutputStream.write(i ^ paramInt);
      }
      arrayOfByte = localByteArrayOutputStream.toByteArray();
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
      return paramInputStream;
    }
    byte[] arrayOfByte;
    localException.close();
    localByteArrayOutputStream.close();
    ByteArrayInputStream localByteArrayInputStream = new ByteArrayInputStream(arrayOfByte);
    return localByteArrayInputStream;
  }
  
  private static boolean a(InputStream paramInputStream)
  {
    try
    {
      paramInputStream = new BufferedInputStream(paramInputStream);
      byte[] arrayOfByte = new byte[a.getBytes().length];
      paramInputStream.read(arrayOfByte);
      boolean bool = new String(arrayOfByte).equals(a);
      return bool;
    }
    catch (IOException paramInputStream)
    {
      paramInputStream.printStackTrace();
    }
    return false;
  }
}
