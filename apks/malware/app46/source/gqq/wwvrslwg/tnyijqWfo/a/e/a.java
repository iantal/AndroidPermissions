package gqq.wwvrslwg.tnyijqWfo.a.e;

import gqq.wwvrslwg.tnyijqWfo.a.v;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public final class a
{
  private Map a = new HashMap();
  private Map b = new HashMap();
  private Map c = new HashMap();
  
  public a(String paramString)
  {
    paramString = v.a(paramString);
    if (!v.a(paramString, new String[] { "installList", "unInstallList", "failedList" })) {}
    for (;;)
    {
      return;
      try
      {
        Object localObject = paramString.getJSONArray("installList");
        int i = 0;
        b localB;
        while (i < ((JSONArray)localObject).length())
        {
          localB = new b(((JSONArray)localObject).getJSONObject(i));
          this.a.put(localB.a(), localB);
          i += 1;
        }
        localObject = paramString.getJSONArray("unInstallList");
        i = 0;
        while (i < ((JSONArray)localObject).length())
        {
          localB = new b(((JSONArray)localObject).getJSONObject(i));
          this.b.put(localB.a(), localB);
          i += 1;
        }
        paramString = paramString.getJSONArray("failedList");
        i = j;
        while (i < paramString.length())
        {
          localObject = new b(paramString.getJSONObject(i));
          this.c.put(((b)localObject).a(), localObject);
          i += 1;
        }
        return;
      }
      catch (Exception paramString)
      {
        paramString.printStackTrace();
      }
    }
  }
  
  private static b c(i paramI)
  {
    b localB = new b();
    localB.a(paramI.a());
    localB.b(paramI.k());
    localB.c(paramI.b());
    return localB;
  }
  
  public final a a(String paramString)
  {
    paramString = new a(v.a(v.a(paramString), "dynamicData", ""));
    if (paramString.a()) {
      return this;
    }
    try
    {
      h.a(paramString, false);
      return paramString;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
    return this;
  }
  
  public final void a(i paramI)
  {
    paramI = c(paramI);
    this.c.put(paramI.a(), paramI);
    h.a(this, true);
  }
  
  public final boolean a()
  {
    return this.a.size() + this.b.size() + this.c.size() <= 0;
  }
  
  public final Map b()
  {
    return this.b;
  }
  
  public final void b(i paramI)
  {
    paramI = c(paramI);
    this.a.put(paramI.a(), paramI);
    h.a(this, true);
    this.b.remove(paramI.a());
    this.c.remove(paramI.a());
  }
  
  public final Map c()
  {
    return this.a;
  }
  
  public final String toString()
  {
    if (a()) {
      return "";
    }
    JSONArray localJSONArray;
    Object localObject1;
    try
    {
      JSONObject localJSONObject = new JSONObject();
      localJSONArray = new JSONArray();
      localObject1 = this.a.keySet().iterator();
      while (((Iterator)localObject1).hasNext())
      {
        localObject2 = (String)((Iterator)localObject1).next();
        localJSONArray.put(new JSONObject(((b)this.a.get(localObject2)).toString()));
      }
      localObject1 = new JSONArray();
    }
    catch (JSONException localJSONException)
    {
      localJSONException.printStackTrace();
      return "";
    }
    Object localObject2 = this.b.keySet().iterator();
    while (((Iterator)localObject2).hasNext())
    {
      localObject3 = (String)((Iterator)localObject2).next();
      ((JSONArray)localObject1).put(new JSONObject(((b)this.b.get(localObject3)).toString()));
    }
    localObject2 = new JSONArray();
    Object localObject3 = this.c.keySet().iterator();
    while (((Iterator)localObject3).hasNext())
    {
      String str2 = (String)((Iterator)localObject3).next();
      ((JSONArray)localObject2).put(new JSONObject(((b)this.c.get(str2)).toString()));
    }
    localJSONException.putOpt("installList", localJSONArray).putOpt("unInstallList", localObject1).putOpt("failedList", localObject2);
    String str1 = localJSONException.toString();
    return str1;
  }
}
