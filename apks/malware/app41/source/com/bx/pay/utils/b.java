package com.bx.pay.utils;

final class b
  extends a
{
  private static final byte[] f;
  private static final byte[] g;
  int a;
  public final boolean b;
  public final boolean c;
  public final boolean d;
  private final byte[] h;
  private int i;
  private final byte[] j;
  
  static
  {
    if (!Base64Util.class.desiredAssertionStatus()) {}
    for (boolean bool = true;; bool = false)
    {
      e = bool;
      f = new byte[] { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47 };
      g = new byte[] { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95 };
      return;
    }
  }
  
  public b(int paramInt)
  {
    this.output = null;
    boolean bool1;
    label32:
    label45:
    byte[] arrayOfByte;
    if ((paramInt & 0x1) == 0)
    {
      bool1 = true;
      this.b = bool1;
      if ((paramInt & 0x2) != 0) {
        break label101;
      }
      bool1 = true;
      this.c = bool1;
      if ((paramInt & 0x4) == 0) {
        break label106;
      }
      bool1 = bool2;
      this.d = bool1;
      if ((paramInt & 0x8) != 0) {
        break label111;
      }
      arrayOfByte = f;
      label62:
      this.j = arrayOfByte;
      this.h = new byte[2];
      this.a = 0;
      if (!this.c) {
        break label119;
      }
    }
    label101:
    label106:
    label111:
    label119:
    for (paramInt = 19;; paramInt = -1)
    {
      this.i = paramInt;
      return;
      bool1 = false;
      break;
      bool1 = false;
      break label32;
      bool1 = false;
      break label45;
      arrayOfByte = g;
      break label62;
    }
  }
  
  public final int maxOutputSize(int paramInt)
  {
    return paramInt * 8 / 5 + 10;
  }
  
  public final boolean process(byte[] paramArrayOfByte, int paramInt1, int paramInt2, boolean paramBoolean)
  {
    byte[] arrayOfByte1 = this.j;
    byte[] arrayOfByte2 = this.output;
    int m = this.i;
    int i3 = paramInt2 + paramInt1;
    int k;
    label59:
    label164:
    int i1;
    int n;
    switch (this.a)
    {
    default: 
      paramInt2 = -1;
      k = paramInt1;
      paramInt1 = paramInt2;
      if (paramInt1 == -1) {
        break label1215;
      }
      arrayOfByte2[0] = arrayOfByte1[(paramInt1 >> 18 & 0x3F)];
      arrayOfByte2[1] = arrayOfByte1[(paramInt1 >> 12 & 0x3F)];
      arrayOfByte2[2] = arrayOfByte1[(paramInt1 >> 6 & 0x3F)];
      paramInt2 = 4;
      arrayOfByte2[3] = arrayOfByte1[(paramInt1 & 0x3F)];
      m -= 1;
      if (m != 0) {
        break label1207;
      }
      paramInt1 = paramInt2;
      if (this.d)
      {
        paramInt1 = 5;
        arrayOfByte2[4] = 13;
      }
      m = paramInt1 + 1;
      arrayOfByte2[paramInt1] = 10;
      paramInt2 = 19;
      paramInt1 = m;
      if (k + 3 > i3)
      {
        if (!paramBoolean) {
          break label1066;
        }
        if (k - this.a != i3 - 1) {
          break label709;
        }
        if (this.a <= 0) {
          break label687;
        }
        paramArrayOfByte = this.h;
        i1 = 1;
        n = paramArrayOfByte[0];
        m = k;
        k = i1;
        label220:
        n = (n & 0xFF) << 4;
        this.a -= k;
        k = paramInt1 + 1;
        arrayOfByte2[paramInt1] = arrayOfByte1[(n >> 6 & 0x3F)];
        paramInt1 = k + 1;
        arrayOfByte2[k] = arrayOfByte1[(n & 0x3F)];
        k = paramInt1;
        if (this.b)
        {
          n = paramInt1 + 1;
          arrayOfByte2[paramInt1] = 61;
          k = n + 1;
          arrayOfByte2[n] = 61;
        }
        paramInt1 = k;
        n = m;
        if (this.c)
        {
          paramInt1 = k;
          if (this.d)
          {
            arrayOfByte2[k] = 13;
            paramInt1 = k + 1;
          }
          arrayOfByte2[paramInt1] = 10;
          paramInt1 += 1;
          n = m;
        }
      }
      break;
    }
    for (;;)
    {
      label363:
      if ((!e) && (this.a != 0))
      {
        throw new AssertionError();
        paramInt2 = -1;
        k = paramInt1;
        paramInt1 = paramInt2;
        break label59;
        if (paramInt1 + 2 > i3) {
          break;
        }
        k = this.h[0];
        paramInt2 = paramInt1 + 1;
        paramInt1 = paramArrayOfByte[paramInt1];
        n = paramArrayOfByte[paramInt2];
        this.a = 0;
        paramInt1 = (k & 0xFF) << 16 | (paramInt1 & 0xFF) << 8 | n & 0xFF;
        k = paramInt2 + 1;
        break label59;
        if (paramInt1 + 1 > i3) {
          break;
        }
        paramInt2 = this.h[0];
        n = this.h[1];
        k = paramInt1 + 1;
        paramInt1 = paramArrayOfByte[paramInt1];
        this.a = 0;
        paramInt1 = (paramInt2 & 0xFF) << 16 | (n & 0xFF) << 8 | paramInt1 & 0xFF;
        break label59;
        m = (paramArrayOfByte[k] & 0xFF) << 16 | (paramArrayOfByte[(k + 1)] & 0xFF) << 8 | paramArrayOfByte[(k + 2)] & 0xFF;
        arrayOfByte2[paramInt1] = arrayOfByte1[(m >> 18 & 0x3F)];
        arrayOfByte2[(paramInt1 + 1)] = arrayOfByte1[(m >> 12 & 0x3F)];
        arrayOfByte2[(paramInt1 + 2)] = arrayOfByte1[(m >> 6 & 0x3F)];
        arrayOfByte2[(paramInt1 + 3)] = arrayOfByte1[(m & 0x3F)];
        k += 3;
        paramInt1 += 4;
        paramInt2 -= 1;
        if (paramInt2 != 0) {
          break label1204;
        }
        if (!this.d) {
          break label1201;
        }
        paramInt2 = paramInt1 + 1;
        arrayOfByte2[paramInt1] = 13;
        paramInt1 = paramInt2;
        label665:
        paramInt2 = paramInt1 + 1;
        arrayOfByte2[paramInt1] = 10;
        m = 19;
        paramInt1 = paramInt2;
        paramInt2 = m;
        break label164;
        label687:
        n = paramArrayOfByte[k];
        i1 = 0;
        m = k + 1;
        k = i1;
        break label220;
        label709:
        if (k - this.a == i3 - 2) {
          if (this.a > 1)
          {
            byte[] arrayOfByte3 = this.h;
            i1 = 1;
            n = arrayOfByte3[0];
            m = k;
            k = i1;
            label754:
            if (this.a <= 0) {
              break label973;
            }
            paramArrayOfByte = this.h;
            i1 = k + 1;
            int i2 = paramArrayOfByte[k];
            k = i1;
            i1 = i2;
            label786:
            n = (i1 & 0xFF) << 2 | (n & 0xFF) << 10;
            this.a -= k;
            k = paramInt1 + 1;
            arrayOfByte2[paramInt1] = arrayOfByte1[(n >> 12 & 0x3F)];
            paramInt1 = k + 1;
            arrayOfByte2[k] = arrayOfByte1[(n >> 6 & 0x3F)];
            k = paramInt1 + 1;
            arrayOfByte2[paramInt1] = arrayOfByte1[(n & 0x3F)];
            if (!this.b) {
              break label1198;
            }
            paramInt1 = k + 1;
            arrayOfByte2[k] = 61;
            k = paramInt1;
            label897:
            paramInt1 = k;
            n = m;
            if (!this.c) {
              continue;
            }
            if (!this.d) {
              break label1236;
            }
            paramInt1 = k + 1;
            arrayOfByte2[k] = 13;
          }
        }
      }
    }
    for (;;)
    {
      k = paramInt1 + 1;
      arrayOfByte2[paramInt1] = 10;
      paramInt1 = k;
      n = m;
      break label363;
      n = paramArrayOfByte[k];
      i1 = 0;
      m = k + 1;
      k = i1;
      break label754;
      label973:
      i1 = paramArrayOfByte[m];
      m += 1;
      break label786;
      if ((this.c) && (paramInt1 > 0) && (paramInt2 != 19))
      {
        m = paramInt1;
        if (this.d)
        {
          arrayOfByte2[paramInt1] = 13;
          m = paramInt1 + 1;
        }
        paramInt1 = m + 1;
        arrayOfByte2[m] = 10;
        n = k;
        break label363;
        if ((!e) && (n != i3))
        {
          throw new AssertionError();
          label1066:
          if (k == i3 - 1)
          {
            arrayOfByte1 = this.h;
            m = this.a;
            this.a = (m + 1);
            arrayOfByte1[m] = paramArrayOfByte[k];
            m = paramInt1;
          }
        }
        for (;;)
        {
          this.op = m;
          this.i = paramInt2;
          return true;
          m = paramInt1;
          if (k == i3 - 2)
          {
            arrayOfByte1 = this.h;
            m = this.a;
            this.a = (m + 1);
            arrayOfByte1[m] = paramArrayOfByte[k];
            arrayOfByte1 = this.h;
            m = this.a;
            this.a = (m + 1);
            arrayOfByte1[m] = paramArrayOfByte[(k + 1)];
            m = paramInt1;
            continue;
            label1198:
            break label897;
            label1201:
            break label665;
            label1204:
            break;
            label1207:
            paramInt1 = 4;
            paramInt2 = m;
            break;
            label1215:
            paramInt1 = 0;
            paramInt2 = m;
            break;
            m = paramInt1;
          }
        }
      }
      n = k;
      break label363;
      label1236:
      paramInt1 = k;
    }
  }
}
