package com.umpay.huafubao.a.a;

public final class k
  extends b
{
  public k(a paramA)
  {
    this.d = paramA;
    this.a = new byte[paramA.a()];
    this.b = 0;
  }
  
  public final int a(int paramInt)
  {
    paramInt = this.b + paramInt;
    int i = paramInt % this.a.length;
    if (i == 0) {
      return paramInt - this.a.length;
    }
    return paramInt - i;
  }
  
  public final int a(byte[] paramArrayOfByte, int paramInt)
  {
    int k = this.d.a();
    int j;
    if (this.c)
    {
      if (this.b != k) {
        break label248;
      }
      if (k * 2 + paramInt > paramArrayOfByte.length) {
        throw new g("output buffer too short");
      }
      j = this.d.a(this.a, 0, paramArrayOfByte, paramInt);
      this.b = 0;
    }
    for (;;)
    {
      int i = (byte)(k - this.b);
      while (this.b < k)
      {
        this.a[this.b] = i;
        this.b += 1;
      }
      for (paramInt = j + this.d.a(this.a, 0, paramArrayOfByte, paramInt + j);; paramInt = j)
      {
        b();
        return paramInt;
        int m;
        if (this.b == k)
        {
          j = this.d.a(this.a, 0, this.a, 0);
          this.b = 0;
          m = this.a[(k - 1)] & 0xFF;
          if ((m < 0) || (m > k)) {
            throw new i("pad block corrupted");
          }
        }
        else
        {
          throw new g("last block incomplete in decryption");
        }
        j -= m;
        System.arraycopy(this.a, 0, paramArrayOfByte, paramInt, j);
      }
      label248:
      j = 0;
    }
  }
  
  public final int a(byte[] paramArrayOfByte1, int paramInt1, int paramInt2, byte[] paramArrayOfByte2)
  {
    if (paramInt2 < 0) {
      throw new IllegalArgumentException("Can't have a negative input length!");
    }
    int n = a();
    int i = a(paramInt2);
    if ((i > 0) && (i + 0 > paramArrayOfByte2.length)) {
      throw new g("output buffer too short");
    }
    int j = this.a.length - this.b;
    if (paramInt2 > j)
    {
      System.arraycopy(paramArrayOfByte1, 0, this.a, this.b, j);
      i = this.d.a(this.a, 0, paramArrayOfByte2, 0) + 0;
      this.b = 0;
      paramInt2 -= j;
      paramInt1 = j + 0;
      for (;;)
      {
        m = i;
        k = paramInt2;
        j = paramInt1;
        if (paramInt2 <= this.a.length) {
          break;
        }
        i += this.d.a(paramArrayOfByte1, paramInt1, paramArrayOfByte2, i + 0);
        paramInt2 -= n;
        paramInt1 += n;
      }
    }
    int m = 0;
    j = paramInt1;
    int k = paramInt2;
    System.arraycopy(paramArrayOfByte1, j, this.a, this.b, k);
    this.b = (k + this.b);
    return m;
  }
  
  public final int b(int paramInt)
  {
    int i = this.b + paramInt;
    paramInt = i % this.a.length;
    if (paramInt == 0)
    {
      paramInt = i;
      if (this.c) {
        paramInt = i + this.a.length;
      }
      return paramInt;
    }
    return i - paramInt + this.a.length;
  }
}
