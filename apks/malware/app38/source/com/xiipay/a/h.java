package com.xiipay.a;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Handler;
import com.umpay.huafubao.Huafubao;
import com.umpay.huafubao.HuafubaoListener;
import com.umpay.huafubao.PayType;
import com.xiipay.Bill;
import com.xiipay.Payment.Listener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public final class h
  implements HuafubaoListener
{
  public static List<h> a = new ArrayList();
  public static i b;
  private List<Bill> c;
  private boolean d = false;
  private Bill e = null;
  private String f = "PAY.FAILED";
  private Activity g;
  private int h;
  private Payment.Listener i;
  private Handler j;
  private l k;
  private d l;
  private boolean m = true;
  private boolean n = false;
  private boolean o = false;
  private boolean p = false;
  private boolean q = false;
  private boolean r = false;
  private boolean s = false;
  private int t = 1;
  private int u = 60;
  private Object v;
  private Thread w;
  private boolean x = false;
  private int y;
  private int z;
  
  private h(Activity paramActivity, int paramInt, Payment.Listener paramListener, Object paramObject)
  {
    this.g = paramActivity;
    this.h = paramInt;
    this.i = paramListener;
    this.d = false;
    this.e = null;
    this.v = paramObject;
    this.f = "PAY.FAILED";
    this.j = new Handler();
    this.k = new l(this);
    this.l = new d(this.g);
    this.k.c();
    this.w = new Thread(new Runnable()
    {
      public final void run()
      {
        if (!h.a(h.this).d())
        {
          h.b(h.this).post(new Runnable()
          {
            public final void run()
            {
              h.c(h.this).a("SIM卡状态有误，请检测SIM卡！", "PAY.SIM_NOT_READY");
            }
          });
          return;
        }
        if (!h.a(h.this).c())
        {
          h.b(h.this).post(new Runnable()
          {
            public final void run()
            {
              h.c(h.this).a("网络不可用，请检测网络设置", "PAY.NO_NETWORK");
            }
          });
          return;
        }
        new f(h.this.b()).run();
        for (;;)
        {
          try
          {
            h.a(h.this, c.a(h.a(h.this), h.d(h.this), h.this));
            h.a(h.this, 0);
            localIterator = h.e(h.this).iterator();
            boolean bool = localIterator.hasNext();
            if (bool) {
              continue;
            }
          }
          catch (Exception localException)
          {
            Iterator localIterator;
            int i;
            h localH;
            localException.printStackTrace();
            continue;
          }
          if (h.g(h.this)) {
            break;
          }
          h.b(h.this).post(new Runnable()
          {
            public final void run()
            {
              if (h.h(h.this))
              {
                h.this.a("PAY.SUCCESSED");
                return;
              }
              if ((h.e(h.this) != null) && (h.e(h.this).size() > 0))
              {
                if (((Bill)h.e(h.this).get(0)).getType().intValue() == 2)
                {
                  HashMap localHashMap = new HashMap();
                  localHashMap.put("merId", ((a)h.e(h.this).get(0)).a());
                  localHashMap.put("goodsId", ((a)h.e(h.this).get(0)).b());
                  localHashMap.put("amount", ((a)h.e(h.this).get(0)).getAmount());
                  localHashMap.put("orderId", ((a)h.e(h.this).get(0)).c());
                  localHashMap.put("merDate", ((a)h.e(h.this).get(0)).d());
                  localHashMap.put("merPriv", "");
                  localHashMap.put("expand", "");
                  localHashMap.put("goodsInf", "");
                  new Huafubao(h.i(h.this), h.this).setRequest(localHashMap, PayType.HFB);
                  return;
                }
                h.c(h.this);
                l.a();
                if (h.j(h.this))
                {
                  h.c(h.this).b();
                  return;
                }
                h.this.c();
                return;
              }
              if (h.k(h.this))
              {
                h.this.a("PAY.SUCCESSED");
                return;
              }
              h.c(h.this).a("服务不可用，请稍后再试。", "PAY.NO_SERVICE");
            }
          });
          return;
          i = k.d(((Bill)localIterator.next()).getAmount());
          localH = h.this;
          h.a(localH, i + h.f(localH));
        }
      }
    });
    this.w.start();
  }
  
  public static void a(Activity paramActivity, int paramInt, Payment.Listener paramListener, Object paramObject)
  {
    if ((paramActivity == null) || (paramListener == null) || (paramInt < 0)) {
      throw new RuntimeException("Payment Request Parameter Error");
    }
    a.add(new h(paramActivity, paramInt, paramListener, paramObject));
  }
  
  public static void a(Context paramContext)
  {
    if (b == null)
    {
      i localI = new i();
      b = localI;
      localI.a(paramContext);
    }
  }
  
  public static void a(Context paramContext, Intent paramIntent, BroadcastReceiver paramBroadcastReceiver)
  {
    if ("android.net.conn.CONNECTIVITY_CHANGE".equals(paramIntent.getAction())) {
      a(paramContext);
    }
    if (b == null) {}
    while (!b.a(paramIntent)) {
      return;
    }
    paramBroadcastReceiver.abortBroadcast();
  }
  
  public final List<Bill> a()
  {
    return this.c;
  }
  
  public final void a(int paramInt)
  {
    this.t = paramInt;
  }
  
  public final void a(String paramString)
  {
    if (("PAY.SUCCESSED".equals(paramString)) && (this.d)) {}
    try
    {
      c.a(this.g, ((Bill)this.c.get(0)).getParams0());
      this.x = true;
      if (this.k != null)
      {
        l localL = this.k;
        l.a();
      }
      if (this.i != null)
      {
        if (!"PAY.SUCCESSED".equals(paramString)) {
          break label137;
        }
        i1 = this.y;
        if (this.q)
        {
          if (this.h > this.z) {
            i1 = this.z;
          }
        }
        else {
          this.i.onStatus(paramString, i1, this.v);
        }
      }
      else
      {
        return;
      }
    }
    catch (Exception localException)
    {
      for (;;)
      {
        localException.printStackTrace();
        continue;
        int i1 = this.h;
      }
      label137:
      this.i.onStatus(paramString, 0, this.v);
    }
  }
  
  public final void a(boolean paramBoolean)
  {
    this.m = paramBoolean;
  }
  
  public final boolean a(String paramString1, String paramString2)
  {
    if (this.e == null) {}
    while (paramString1 == null) {
      return false;
    }
    return this.e.onSmsIn(paramString1, paramString2);
  }
  
  public final Activity b()
  {
    return this.g;
  }
  
  public final void b(int paramInt)
  {
    this.u = paramInt;
  }
  
  public final void b(boolean paramBoolean)
  {
    this.n = paramBoolean;
  }
  
  public final void c()
  {
    this.k.d();
    if (this.q)
    {
      this.f = "PAY.SUCCESSED";
      this.k.f();
    }
    new Thread(new Runnable()
    {
      public final void run()
      {
        h.b(h.this, 0);
        int i = 0;
        for (;;)
        {
          if (i >= h.e(h.this).size()) {}
          int j;
          do
          {
            if ((!h.g(h.this)) && (!h.o(h.this))) {
              break;
            }
            h.p(h.this);
            return;
            h.a(h.this, (Bill)h.e(h.this).get(i));
            j = k.d(h.l(h.this).getAmount());
            h.l(h.this).checkout();
          } while ((!h.m(h.this)) && (h.n(h.this) >= h.d(h.this)));
          if (((h.m(h.this)) || (h.n(h.this) + j <= h.d(h.this) + 200)) && ("PAY.SUCCESSED".equals(h.l(h.this).getStatus())))
          {
            h localH = h.this;
            h.b(localH, j + h.n(localH));
            h.a(h.this, "PAY.SUCCESSED");
          }
          i += 1;
        }
        if (h.q(h.this)) {
          h.a(h.this, "PAY.SUCCESSED");
        }
        h.b(h.this).post(new Runnable()
        {
          public final void run()
          {
            if ("PAY.SUCCESSED".equals(h.r(h.this)))
            {
              h.c(h.this).f();
              return;
            }
            h.c(h.this).e();
          }
        });
        h.p(h.this);
      }
    }).start();
  }
  
  public final void c(boolean paramBoolean)
  {
    this.o = paramBoolean;
  }
  
  public final void d(boolean paramBoolean)
  {
    this.p = paramBoolean;
  }
  
  public final boolean d()
  {
    return this.x;
  }
  
  public final void e(boolean paramBoolean)
  {
    this.q = paramBoolean;
  }
  
  public final boolean e()
  {
    return this.s;
  }
  
  public final d f()
  {
    return this.l;
  }
  
  public final void f(boolean paramBoolean)
  {
    this.r = paramBoolean;
  }
  
  public final void g(boolean paramBoolean)
  {
    this.s = paramBoolean;
  }
  
  public final boolean onError(int paramInt, String paramString)
  {
    return false;
  }
  
  public final void onResult(String paramString1, String paramString2)
  {
    if ("0".equals(paramString1))
    {
      a("PAY.SUCCESSED");
      return;
    }
    a("PAY.FAILED");
  }
}
