package org.cocos2dx.cpp;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.NetworkInfo.State;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.Window;
import com.QYUtils.Const;
import com.QYUtils.DoRequest;
import com.dataeye.DCAgent;
import com.xiipay.Payment;
import com.xiipay.Payment.Listener;
import java.io.PrintStream;
import org.cocos2dx.lib.Cocos2dxActivity;
import org.cocos2dx.lib.Cocos2dxGLSurfaceView;

public class AppActivity
  extends Cocos2dxActivity
{
  private static String DaoJu;
  private static StringBuffer DaoJuIMSI;
  private static StringBuffer YingYongICCID;
  public static AppActivity instance = null;
  public int call_num1 = 0;
  private Context context;
  private Handler mHandler = new Handler()
  {
    public void handleMessage(Message paramAnonymousMessage)
    {
      Payment.pay(AppActivity.this, Integer.valueOf(Const.FEE).intValue(), new Payment.Listener()new Object
      {
        public void onStatus(String paramAnonymous2String, int paramAnonymous2Int, Object paramAnonymous2Object)
        {
          if (paramAnonymous2String.equals("PAY.SUCCESSED")) {
            AppActivity.this.callBackSuccess();
          }
        }
      }, new Object());
    }
  };
  int order = 0;
  
  public AppActivity() {}
  
  public static native void acerGifts();
  
  public static native void acerGiftsLose();
  
  public static native void deblock();
  
  public static native void deblocking();
  
  public static native void dispelGifts();
  
  public static native void dispelGiftsLose();
  
  public static native void draw();
  
  public static native void drawLose();
  
  public static Object getInstance()
  {
    if (instance == null) {
      instance = new AppActivity();
    }
    return instance;
  }
  
  public static native void gratefulGifts();
  
  public static native void gratefulGiftsLose();
  
  public static boolean isNetworkAvailable(Context paramContext)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getAllNetworkInfo();
    int i;
    if (paramContext != null) {
      i = 0;
    }
    for (;;)
    {
      if (i >= paramContext.length) {
        return false;
      }
      if (paramContext[i].getState() == NetworkInfo.State.CONNECTED) {
        return true;
      }
      i += 1;
    }
  }
  
  public static native void noviceGifts();
  
  public static native void noviceGiftsLose();
  
  public static native void recharge(int paramInt);
  
  public static native void rechargeGifts();
  
  public static native void rechargeGiftsLose();
  
  public static native void rechargeGiftsLoseWithE();
  
  public static native void rechargeGiftsLoseWithLose();
  
  public static native void rechargeGiftsWithE();
  
  public static native void rechargeGiftsWithE01();
  
  public static native void rechargeGiftsWithLose();
  
  public static native void rechargeLose(int paramInt);
  
  public static native void rechargeLoseWithLose(int paramInt);
  
  public static native void rechargeWithLose(int paramInt);
  
  public static native void supriseGifts();
  
  public static native void supriseGiftsLose();
  
  public static native void timeLimitGifts();
  
  public static native void timeLimitGiftsLose();
  
  public void buyStone(String paramString)
  {
    Log.e("buyStone", "buyStone");
  }
  
  public void buyStoneSend(int paramInt)
  {
    this.call_num1 = paramInt;
    Singleton.getTest().setPayCodeNum(paramInt);
    Const.DataBSNum = String.valueOf(paramInt);
    int i;
    if ((paramInt == 122) || (paramInt == 22))
    {
      Const.DataBSNum = String.valueOf(19);
      i = 19;
    }
    for (;;)
    {
      paramInt = i;
      if (i > 100) {
        paramInt = i - 100;
      }
      statisticsData(paramInt);
      System.out.println("SDKbegin");
      System.out.println("activity线程name:" + Thread.currentThread().getId());
      Message localMessage = new Message();
      localMessage.what = Integer.parseInt(Const.FEE);
      this.mHandler.sendMessage(localMessage);
      return;
      if ((paramInt == 20) || (paramInt == 119))
      {
        Const.DataBSNum = String.valueOf(20);
        i = 20;
      }
      else if ((paramInt == 19) || (paramInt == 120))
      {
        Const.DataBSNum = String.valueOf(21);
        i = 21;
      }
      else if (paramInt != 21)
      {
        i = paramInt;
        if (paramInt != 121) {}
      }
      else
      {
        Const.DataBSNum = String.valueOf(22);
        i = 22;
      }
    }
  }
  
  void callBackSuccess()
  {
    switch (this.call_num1)
    {
    default: 
      return;
    case 1: 
    case 2: 
      rechargeGiftsWithE();
      return;
    case 3: 
    case 4: 
    case 5: 
    case 6: 
    case 7: 
    case 8: 
    case 9: 
    case 10: 
    case 11: 
    case 12: 
    case 13: 
    case 14: 
    case 15: 
      rechargeGifts();
      return;
    case 16: 
      rechargeGiftsWithLose();
      return;
    case 17: 
      dispelGifts();
      return;
    case 18: 
    case 19: 
    case 20: 
    case 21: 
    case 22: 
      deblocking();
      return;
    case 23: 
    case 24: 
    case 25: 
      timeLimitGifts();
      return;
    case 26: 
    case 27: 
    case 28: 
    case 29: 
    case 30: 
    case 31: 
      acerGifts();
      return;
    case 32: 
      draw();
      return;
    case 118: 
    case 119: 
    case 120: 
    case 121: 
    case 122: 
      deblock();
      return;
    }
    rechargeGiftsWithE01();
  }
  
  public int getSimOperatorInfo()
  {
    if (Const.IMSI == null) {}
    do
    {
      do
      {
        return 0;
      } while ("".equals(Const.IMSI));
      if ((Const.IMSI.startsWith("46000")) || (Const.IMSI.startsWith("46002")) || (Const.IMSI.startsWith("46007"))) {
        return 1;
      }
      if ((Const.IMSI.startsWith("46001")) || (Const.IMSI.startsWith("46006"))) {
        return 2;
      }
    } while ((!Const.IMSI.startsWith("46003")) && (!Const.IMSI.startsWith("46011")) && (!Const.IMSI.startsWith("46005")));
    return 3;
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    instance = this;
  }
  
  public Cocos2dxGLSurfaceView onCreateView()
  {
    Cocos2dxGLSurfaceView localCocos2dxGLSurfaceView = new Cocos2dxGLSurfaceView(this);
    localCocos2dxGLSurfaceView.setEGLConfigChooser(5, 6, 5, 0, 16, 8);
    getWindow().setFlags(128, 128);
    DCAgent.setDebugMode(true);
    DCAgent.setVersion(Const.VERSION_CODE);
    this.context = this;
    Const.initConst(this, "xbbmx005");
    DoRequest.HttpInitOrPayingUsers();
    Payment.init(this);
    return localCocos2dxGLSurfaceView;
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
  }
  
  public void onPause()
  {
    super.onPause();
    DCAgent.onPause(this);
  }
  
  public void onResume()
  {
    super.onResume();
    DCAgent.onResume(this);
  }
  
  public void statisticsData(int paramInt)
  {
    DaoJuIMSI = new StringBuffer();
    YingYongICCID = new StringBuffer();
    YingYongICCID.append("宝石大冒险");
    DaoJu = "";
    if ((paramInt == 1) || (paramInt == 2) || (paramInt == 33) || (paramInt == 34))
    {
      DaoJuIMSI.append("购买金币80");
      DaoJu = "购买金币80";
      Const.PROD = "BSDMX001";
      Const.FEE = "800";
    }
    do
    {
      return;
      if ((paramInt > 2) && (paramInt <= 16))
      {
        DaoJuIMSI.append("限时大礼包");
        DaoJu = "限时大礼包";
        Const.PROD = "BSDMX003";
        Const.FEE = "1000";
        return;
      }
      if (paramInt == 17)
      {
        DaoJuIMSI.append("解锁大礼包");
        DaoJu = "解锁大礼包";
        Const.PROD = "BSDMX002";
        Const.FEE = "1200";
        return;
      }
      if (paramInt == 18)
      {
        DaoJuIMSI.append("蓝色图腾");
        DaoJu = "蓝色图腾";
        Const.PROD = "BSDMX007";
        Const.FEE = "800";
        return;
      }
      if (paramInt == 19)
      {
        DaoJuIMSI.append("绿色图腾");
        DaoJu = "绿色图腾";
        Const.PROD = "BSDMX011";
        Const.FEE = "600";
        return;
      }
      if (paramInt == 20)
      {
        DaoJuIMSI.append("白色图腾");
        DaoJu = "白色图腾";
        Const.PROD = "BSDMX008";
        Const.FEE = "800";
        return;
      }
      if (paramInt == 21)
      {
        DaoJuIMSI.append("紫色图腾");
        DaoJu = "紫色图腾";
        Const.PROD = "BSDMX009";
        Const.FEE = "800";
        return;
      }
      if (paramInt == 22)
      {
        DaoJuIMSI.append("黄色图腾");
        DaoJu = "黄色图腾";
        Const.PROD = "BSDMX010";
        Const.FEE = "600";
        return;
      }
      if ((paramInt > 22) && (paramInt <= 25))
      {
        DaoJuIMSI.append("无限体力礼包");
        DaoJu = "无限体力礼包";
        Const.PROD = "BSDMX004";
        Const.FEE = "1200";
        return;
      }
      if ((paramInt > 25) && (paramInt <= 31))
      {
        DaoJuIMSI.append("土豪金礼包");
        DaoJu = "土豪金礼包";
        Const.PROD = "BSDMX005";
        Const.FEE = "1200";
        return;
      }
    } while (paramInt != 32);
    DaoJuIMSI.append("翻牌");
    DaoJu = "翻牌";
    Const.PROD = "BSDMX006";
    Const.FEE = "1200";
  }
}
