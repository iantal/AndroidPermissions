package org.cocos2dx.lib;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Bundle;
import android.os.Message;
import android.preference.PreferenceManager.OnActivityResultListener;
import android.util.Log;
import android.view.ViewGroup.LayoutParams;
import android.widget.FrameLayout;
import java.util.Iterator;
import java.util.Set;

public abstract class Cocos2dxActivity
  extends Activity
  implements Cocos2dxHelper.Cocos2dxHelperListener
{
  private static final String TAG = Cocos2dxActivity.class.getSimpleName();
  private static Cocos2dxActivity sContext = null;
  protected FrameLayout mFrameLayout = null;
  private Cocos2dxGLSurfaceView mGLSurfaceView;
  private Cocos2dxHandler mHandler;
  private Cocos2dxVideoHelper mVideoHelper = null;
  
  public Cocos2dxActivity() {}
  
  public static Context getContext()
  {
    return sContext;
  }
  
  private static final boolean isAndroidEmulator()
  {
    String str = Build.MODEL;
    Log.d(TAG, "model=" + str);
    str = Build.PRODUCT;
    Log.d(TAG, "product=" + str);
    boolean bool = false;
    if (str != null) {
      if ((str.equals("sdk")) || (str.contains("_sdk")) || (str.contains("sdk_"))) {
        break label114;
      }
    }
    label114:
    for (bool = false;; bool = true)
    {
      Log.d(TAG, "isEmulator=" + bool);
      return bool;
    }
  }
  
  public void init()
  {
    ViewGroup.LayoutParams localLayoutParams = new ViewGroup.LayoutParams(-1, -1);
    this.mFrameLayout = new FrameLayout(this);
    this.mFrameLayout.setLayoutParams(localLayoutParams);
    localLayoutParams = new ViewGroup.LayoutParams(-1, -2);
    Cocos2dxEditText localCocos2dxEditText = new Cocos2dxEditText(this);
    localCocos2dxEditText.setLayoutParams(localLayoutParams);
    this.mFrameLayout.addView(localCocos2dxEditText);
    this.mGLSurfaceView = onCreateView();
    this.mFrameLayout.addView(this.mGLSurfaceView);
    if (isAndroidEmulator()) {
      this.mGLSurfaceView.setEGLConfigChooser(8, 8, 8, 8, 16, 0);
    }
    this.mGLSurfaceView.setCocos2dxRenderer(new Cocos2dxRenderer());
    this.mGLSurfaceView.setCocos2dxEditText(localCocos2dxEditText);
    setContentView(this.mFrameLayout);
  }
  
  protected void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    Iterator localIterator = Cocos2dxHelper.getOnActivityResultListeners().iterator();
    for (;;)
    {
      if (!localIterator.hasNext())
      {
        super.onActivityResult(paramInt1, paramInt2, paramIntent);
        return;
      }
      ((PreferenceManager.OnActivityResultListener)localIterator.next()).onActivityResult(paramInt1, paramInt2, paramIntent);
    }
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    onLoadNativeLibraries();
    sContext = this;
    this.mHandler = new Cocos2dxHandler(this);
    Cocos2dxHelper.init(this);
    init();
    if (this.mVideoHelper == null) {
      this.mVideoHelper = new Cocos2dxVideoHelper(this, this.mFrameLayout);
    }
  }
  
  public Cocos2dxGLSurfaceView onCreateView()
  {
    return new Cocos2dxGLSurfaceView(this);
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
  }
  
  protected void onLoadNativeLibraries()
  {
    try
    {
      System.loadLibrary(getPackageManager().getApplicationInfo(getPackageName(), 128).metaData.getString("android.app.lib_name"));
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  protected void onPause()
  {
    super.onPause();
    Cocos2dxHelper.onPause();
    this.mGLSurfaceView.onPause();
  }
  
  protected void onResume()
  {
    super.onResume();
    Cocos2dxHelper.onResume();
    this.mGLSurfaceView.onResume();
  }
  
  public void runOnGLThread(Runnable paramRunnable)
  {
    this.mGLSurfaceView.queueEvent(paramRunnable);
  }
  
  public void showDialog(String paramString1, String paramString2)
  {
    Message localMessage = new Message();
    localMessage.what = 1;
    localMessage.obj = new Cocos2dxHandler.DialogMessage(paramString1, paramString2);
    this.mHandler.sendMessage(localMessage);
  }
  
  public void showEditTextDialog(String paramString1, String paramString2, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    Message localMessage = new Message();
    localMessage.what = 2;
    localMessage.obj = new Cocos2dxHandler.EditBoxMessage(paramString1, paramString2, paramInt1, paramInt2, paramInt3, paramInt4);
    this.mHandler.sendMessage(localMessage);
  }
}
