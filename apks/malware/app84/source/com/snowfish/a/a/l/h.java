package com.snowfish.a.a.l;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.lang.reflect.Method;

public class h
{
  private static byte[] a = { 67, 79, 77, 80, 46, 86, 69, 82 };
  
  public h() {}
  
  public static long a(File paramFile)
  {
    try
    {
      long l = b(new FileInputStream(paramFile));
      return l;
    }
    catch (Exception paramFile)
    {
      paramFile.printStackTrace();
    }
    return -1L;
  }
  
  /* Error */
  private static long a(InputStream paramInputStream)
  {
    // Byte code:
    //   0: sipush 4096
    //   3: newarray byte
    //   5: astore 4
    //   7: lconst_0
    //   8: lstore_2
    //   9: aload_0
    //   10: aload 4
    //   12: invokevirtual 45	java/io/InputStream:read	([B)I
    //   15: istore_1
    //   16: iload_1
    //   17: ifge +13 -> 30
    //   20: aload_0
    //   21: ifnull +7 -> 28
    //   24: aload_0
    //   25: invokevirtual 48	java/io/InputStream:close	()V
    //   28: lload_2
    //   29: lreturn
    //   30: lload_2
    //   31: iload_1
    //   32: i2l
    //   33: ladd
    //   34: lstore_2
    //   35: goto -26 -> 9
    //   38: astore 4
    //   40: aload_0
    //   41: ifnull +7 -> 48
    //   44: aload_0
    //   45: invokevirtual 48	java/io/InputStream:close	()V
    //   48: ldc2_w 38
    //   51: lreturn
    //   52: astore 4
    //   54: aload_0
    //   55: ifnull +7 -> 62
    //   58: aload_0
    //   59: invokevirtual 48	java/io/InputStream:close	()V
    //   62: aload 4
    //   64: athrow
    //   65: astore_0
    //   66: lload_2
    //   67: lreturn
    //   68: astore_0
    //   69: goto -21 -> 48
    //   72: astore_0
    //   73: goto -11 -> 62
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	76	0	paramInputStream	InputStream
    //   15	17	1	i	int
    //   8	59	2	l	long
    //   5	6	4	arrayOfByte	byte[]
    //   38	1	4	localException	Exception
    //   52	11	4	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   9	16	38	java/lang/Exception
    //   9	16	52	finally
    //   24	28	65	java/lang/Exception
    //   44	48	68	java/lang/Exception
    //   58	62	72	java/lang/Exception
  }
  
  public static long a(String paramString1, String paramString2, String paramString3, File paramFile)
  {
    long l2;
    int i;
    try
    {
      str = paramString2 + paramString1;
      paramString3 = new File(paramFile, paramString3);
      paramString2 = h.class.getResourceAsStream(str);
      paramString1 = paramString2;
      if (paramString2 != null) {
        break label216;
      }
      paramString1 = b();
    }
    catch (Exception paramString1)
    {
      String str;
      int j;
      long l3;
      Object localObject1;
      label116:
      long l5;
      Object localObject2;
      label186:
      return -1L;
    }
    j = 0;
    if (paramString3.exists())
    {
      l3 = a(paramString3);
      l2 = l3;
      if (localObject1 > l3) {
        break label240;
      }
      l2 = l3;
      i = j;
      if (localObject1 == l3)
      {
        paramString2 = h.class.getResourceAsStream(str);
        paramString1 = paramString2;
        if (paramString2 != null) {
          break label228;
        }
        paramString1 = b();
        break label228;
        l5 = paramString3.length();
        l2 = l3;
        if (localObject2 != l5) {
          break label240;
        }
        l2 = l3;
        if (l5 <= 0L) {
          break label240;
        }
        l2 = l3;
        i = j;
        if (localObject2 < 0L)
        {
          l2 = l3;
          break label240;
        }
      }
    }
    for (;;)
    {
      if (i != 0) {
        a(str, paramString3);
      }
      return Math.max(localObject1, l2);
      long l1 = b(paramString1);
      break;
      label216:
      label228:
      do
      {
        l4 = a(paramString1);
        break label116;
        l2 = l1;
        break label240;
        if (paramString1 != null) {
          break label186;
        }
        l1 = -1L;
        break;
      } while (paramString1 != null);
      long l4 = -1L;
      break label116;
      label240:
      i = 1;
    }
  }
  
  /* Error */
  private static void a(String paramString, File paramFile)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 5
    //   3: aconst_null
    //   4: astore 8
    //   6: aconst_null
    //   7: astore 7
    //   9: aload_1
    //   10: invokevirtual 108	java/io/File:isDirectory	()Z
    //   13: ifeq +8 -> 21
    //   16: aload_1
    //   17: invokevirtual 111	java/io/File:delete	()Z
    //   20: pop
    //   21: aload_1
    //   22: invokevirtual 115	java/io/File:getParentFile	()Ljava/io/File;
    //   25: invokevirtual 118	java/io/File:mkdirs	()Z
    //   28: pop
    //   29: ldc 2
    //   31: aload_0
    //   32: invokevirtual 79	java/lang/Class:getResourceAsStream	(Ljava/lang/String;)Ljava/io/InputStream;
    //   35: astore 4
    //   37: aload 4
    //   39: astore_0
    //   40: aload 4
    //   42: ifnonnull +14 -> 56
    //   45: aload 4
    //   47: astore_3
    //   48: aload 8
    //   50: astore 5
    //   52: invokestatic 82	com/snowfish/a/a/l/h:b	()Ljava/io/InputStream;
    //   55: astore_0
    //   56: aload_0
    //   57: astore_3
    //   58: aload 8
    //   60: astore 5
    //   62: aload_0
    //   63: astore 4
    //   65: new 70	java/io/File
    //   68: dup
    //   69: new 51	java/lang/StringBuilder
    //   72: dup
    //   73: aload_1
    //   74: invokevirtual 121	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   77: invokestatic 57	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   80: invokespecial 60	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   83: ldc 123
    //   85: invokevirtual 64	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   88: invokevirtual 68	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   91: invokespecial 124	java/io/File:<init>	(Ljava/lang/String;)V
    //   94: astore 9
    //   96: aload_0
    //   97: astore_3
    //   98: aload 8
    //   100: astore 5
    //   102: aload_0
    //   103: astore 4
    //   105: new 126	java/io/FileOutputStream
    //   108: dup
    //   109: aload 9
    //   111: invokespecial 127	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   114: astore 6
    //   116: sipush 4096
    //   119: newarray byte
    //   121: astore_3
    //   122: aload_0
    //   123: aload_3
    //   124: iconst_0
    //   125: aload_3
    //   126: arraylength
    //   127: invokevirtual 130	java/io/InputStream:read	([BII)I
    //   130: istore_2
    //   131: iload_2
    //   132: iflt +52 -> 184
    //   135: iload_2
    //   136: ifle -14 -> 122
    //   139: aload 6
    //   141: aload_3
    //   142: iconst_0
    //   143: iload_2
    //   144: invokevirtual 134	java/io/FileOutputStream:write	([BII)V
    //   147: goto -25 -> 122
    //   150: astore_1
    //   151: aload 6
    //   153: astore 4
    //   155: aload_0
    //   156: astore_3
    //   157: aload 4
    //   159: astore 5
    //   161: aload_1
    //   162: invokevirtual 135	java/lang/Throwable:printStackTrace	()V
    //   165: aload_0
    //   166: ifnull +7 -> 173
    //   169: aload_0
    //   170: invokevirtual 48	java/io/InputStream:close	()V
    //   173: aload 4
    //   175: ifnull +8 -> 183
    //   178: aload 4
    //   180: invokevirtual 136	java/io/FileOutputStream:close	()V
    //   183: return
    //   184: aload 6
    //   186: invokevirtual 136	java/io/FileOutputStream:close	()V
    //   189: aload_0
    //   190: astore_3
    //   191: aload 8
    //   193: astore 5
    //   195: aload_0
    //   196: astore 4
    //   198: aload_1
    //   199: invokevirtual 111	java/io/File:delete	()Z
    //   202: pop
    //   203: aload_0
    //   204: astore_3
    //   205: aload 8
    //   207: astore 5
    //   209: aload_0
    //   210: astore 4
    //   212: aload 9
    //   214: aload_1
    //   215: invokevirtual 140	java/io/File:renameTo	(Ljava/io/File;)Z
    //   218: pop
    //   219: aload_0
    //   220: ifnull -37 -> 183
    //   223: aload_0
    //   224: invokevirtual 48	java/io/InputStream:close	()V
    //   227: return
    //   228: astore_1
    //   229: aconst_null
    //   230: astore_0
    //   231: aload_0
    //   232: ifnull +7 -> 239
    //   235: aload_0
    //   236: invokevirtual 48	java/io/InputStream:close	()V
    //   239: aload 5
    //   241: ifnull +8 -> 249
    //   244: aload 5
    //   246: invokevirtual 136	java/io/FileOutputStream:close	()V
    //   249: aload_1
    //   250: athrow
    //   251: astore_1
    //   252: aload_3
    //   253: astore_0
    //   254: goto -23 -> 231
    //   257: astore_1
    //   258: aload 6
    //   260: astore 5
    //   262: goto -31 -> 231
    //   265: astore_1
    //   266: aconst_null
    //   267: astore_0
    //   268: aload 7
    //   270: astore 4
    //   272: goto -117 -> 155
    //   275: astore_1
    //   276: aload 4
    //   278: astore_0
    //   279: aload 7
    //   281: astore 4
    //   283: goto -128 -> 155
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	286	0	paramString	String
    //   0	286	1	paramFile	File
    //   130	14	2	i	int
    //   47	206	3	localObject1	Object
    //   35	247	4	localObject2	Object
    //   1	260	5	localObject3	Object
    //   114	145	6	localFileOutputStream	java.io.FileOutputStream
    //   7	273	7	localObject4	Object
    //   4	202	8	localObject5	Object
    //   94	119	9	localFile	File
    // Exception table:
    //   from	to	target	type
    //   116	122	150	java/lang/Throwable
    //   122	131	150	java/lang/Throwable
    //   139	147	150	java/lang/Throwable
    //   184	189	150	java/lang/Throwable
    //   29	37	228	finally
    //   52	56	251	finally
    //   65	96	251	finally
    //   105	116	251	finally
    //   161	165	251	finally
    //   198	203	251	finally
    //   212	219	251	finally
    //   116	122	257	finally
    //   122	131	257	finally
    //   139	147	257	finally
    //   184	189	257	finally
    //   29	37	265	java/lang/Throwable
    //   52	56	275	java/lang/Throwable
    //   65	96	275	java/lang/Throwable
    //   105	116	275	java/lang/Throwable
    //   198	203	275	java/lang/Throwable
    //   212	219	275	java/lang/Throwable
  }
  
  private static byte[] a()
  {
    try
    {
      byte[] arrayOfByte = (byte[])Class.forName("com.snowfish.a.a.l.RR.resccmm").getMethod("DATA", new Class[0]).invoke(null, new Object[0]);
      return arrayOfByte;
    }
    catch (Exception localException) {}
    return null;
  }
  
  /* Error */
  private static long b(InputStream paramInputStream)
  {
    // Byte code:
    //   0: getstatic 18	com/snowfish/a/a/l/h:a	[B
    //   3: invokestatic 165	com/snowfish/a/a/l/e:a	([B)Ljava/lang/String;
    //   6: astore 5
    //   8: new 167	java/util/zip/ZipInputStream
    //   11: dup
    //   12: aload_0
    //   13: invokespecial 170	java/util/zip/ZipInputStream:<init>	(Ljava/io/InputStream;)V
    //   16: astore 4
    //   18: aload 4
    //   20: astore_0
    //   21: aload 4
    //   23: invokevirtual 174	java/util/zip/ZipInputStream:getNextEntry	()Ljava/util/zip/ZipEntry;
    //   26: astore 6
    //   28: aload 6
    //   30: ifnull +133 -> 163
    //   33: aload 4
    //   35: astore_0
    //   36: aload 6
    //   38: invokevirtual 179	java/util/zip/ZipEntry:getName	()Ljava/lang/String;
    //   41: aload 5
    //   43: invokevirtual 183	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   46: ifeq +77 -> 123
    //   49: aload 4
    //   51: astore_0
    //   52: aload 6
    //   54: invokevirtual 186	java/util/zip/ZipEntry:getSize	()J
    //   57: lstore_2
    //   58: lload_2
    //   59: ldc2_w 187
    //   62: lcmp
    //   63: ifle +12 -> 75
    //   66: aload 4
    //   68: invokevirtual 189	java/util/zip/ZipInputStream:close	()V
    //   71: ldc2_w 38
    //   74: lreturn
    //   75: lload_2
    //   76: l2i
    //   77: istore_1
    //   78: aload 4
    //   80: astore_0
    //   81: iload_1
    //   82: newarray byte
    //   84: astore 5
    //   86: aload 4
    //   88: astore_0
    //   89: aload 4
    //   91: aload 5
    //   93: invokevirtual 190	java/util/zip/ZipInputStream:read	([B)I
    //   96: pop
    //   97: aload 4
    //   99: astore_0
    //   100: new 53	java/lang/String
    //   103: dup
    //   104: aload 5
    //   106: invokespecial 193	java/lang/String:<init>	([B)V
    //   109: invokestatic 199	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   112: lstore_2
    //   113: aload 4
    //   115: invokevirtual 189	java/util/zip/ZipInputStream:close	()V
    //   118: lload_2
    //   119: lreturn
    //   120: astore_0
    //   121: lload_2
    //   122: lreturn
    //   123: aload 4
    //   125: astore_0
    //   126: aload 4
    //   128: invokevirtual 202	java/util/zip/ZipInputStream:closeEntry	()V
    //   131: goto -113 -> 18
    //   134: astore 5
    //   136: aload 4
    //   138: astore_0
    //   139: aload 5
    //   141: invokevirtual 37	java/lang/Exception:printStackTrace	()V
    //   144: aload 4
    //   146: ifnull -75 -> 71
    //   149: aload 4
    //   151: invokevirtual 189	java/util/zip/ZipInputStream:close	()V
    //   154: ldc2_w 38
    //   157: lreturn
    //   158: astore_0
    //   159: ldc2_w 38
    //   162: lreturn
    //   163: aload 4
    //   165: invokevirtual 189	java/util/zip/ZipInputStream:close	()V
    //   168: ldc2_w 38
    //   171: lreturn
    //   172: astore_0
    //   173: ldc2_w 38
    //   176: lreturn
    //   177: astore 4
    //   179: aconst_null
    //   180: astore_0
    //   181: aload_0
    //   182: ifnull +7 -> 189
    //   185: aload_0
    //   186: invokevirtual 189	java/util/zip/ZipInputStream:close	()V
    //   189: aload 4
    //   191: athrow
    //   192: astore_0
    //   193: ldc2_w 38
    //   196: lreturn
    //   197: astore_0
    //   198: goto -9 -> 189
    //   201: astore 4
    //   203: goto -22 -> 181
    //   206: astore 5
    //   208: aconst_null
    //   209: astore 4
    //   211: goto -75 -> 136
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	214	0	paramInputStream	InputStream
    //   77	5	1	i	int
    //   57	65	2	l	long
    //   16	148	4	localZipInputStream	java.util.zip.ZipInputStream
    //   177	13	4	localObject1	Object
    //   201	1	4	localObject2	Object
    //   209	1	4	localObject3	Object
    //   6	99	5	localObject4	Object
    //   134	6	5	localException1	Exception
    //   206	1	5	localException2	Exception
    //   26	27	6	localZipEntry	java.util.zip.ZipEntry
    // Exception table:
    //   from	to	target	type
    //   113	118	120	java/lang/Exception
    //   21	28	134	java/lang/Exception
    //   36	49	134	java/lang/Exception
    //   52	58	134	java/lang/Exception
    //   81	86	134	java/lang/Exception
    //   89	97	134	java/lang/Exception
    //   100	113	134	java/lang/Exception
    //   126	131	134	java/lang/Exception
    //   149	154	158	java/lang/Exception
    //   163	168	172	java/lang/Exception
    //   8	18	177	finally
    //   66	71	192	java/lang/Exception
    //   185	189	197	java/lang/Exception
    //   21	28	201	finally
    //   36	49	201	finally
    //   52	58	201	finally
    //   81	86	201	finally
    //   89	97	201	finally
    //   100	113	201	finally
    //   126	131	201	finally
    //   139	144	201	finally
    //   8	18	206	java/lang/Exception
  }
  
  private static InputStream b()
  {
    byte[] arrayOfByte = a();
    if (arrayOfByte == null) {
      return null;
    }
    return new ByteArrayInputStream(arrayOfByte);
  }
}
