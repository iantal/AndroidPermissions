package com.snowfish.cn.ganga.offline.b;

import java.util.Random;

public final class a
{
  private static final byte[] a = { -91, 71, 90, 56, 85, 105, -86, 34, -81, 51, 95, -127, -11, -19, -6, -68 };
  
  public static byte[] a(byte[] paramArrayOfByte, int paramInt)
  {
    int j = 0;
    int k = paramArrayOfByte[0];
    int i2 = (k >> 4 & 0xF) % 3;
    int m = (k & 0xF) % 3 + paramInt;
    int n = i2 + 1 + m;
    int i1 = paramArrayOfByte.length - n;
    i2 += 1;
    byte[] arrayOfByte = new byte[i1];
    paramInt = j;
    for (;;)
    {
      if (paramInt >= i1) {
        return arrayOfByte;
      }
      int i = (byte)(paramArrayOfByte[(paramInt % m + i2)] ^ a[(paramInt & 0xF)]);
      paramArrayOfByte[(paramInt % m + i2)] = i;
      j = k + paramInt + a[(paramInt & 0xF)] + paramArrayOfByte[(paramInt % m + i2)] & 0x7;
      int i3 = (byte)(i ^ paramArrayOfByte[(paramInt + n)]);
      arrayOfByte[paramInt] = ((byte)(i3 << 8 - j | (i3 & 0xFF) >> j));
      paramInt += 1;
    }
  }
  
  public static byte[] a(byte[] paramArrayOfByte, int paramInt, Random paramRandom)
  {
    int k = 0;
    int i = (byte)paramRandom.nextInt();
    int m = (i >> 4 & 0xF) % 3;
    paramInt = (i & 0xF) % 3 + paramInt;
    byte[] arrayOfByte1 = new byte[paramArrayOfByte.length + m + 1 + paramInt];
    byte[] arrayOfByte2 = new byte[paramInt];
    byte[] arrayOfByte3 = new byte[m];
    paramRandom.nextBytes(arrayOfByte3);
    paramRandom.nextBytes(arrayOfByte2);
    arrayOfByte1[0] = i;
    System.arraycopy(arrayOfByte3, 0, arrayOfByte1, 1, arrayOfByte3.length);
    System.arraycopy(arrayOfByte2, 0, arrayOfByte1, arrayOfByte3.length + 1, arrayOfByte2.length);
    m = arrayOfByte3.length + 1 + arrayOfByte2.length;
    System.arraycopy(paramArrayOfByte, 0, arrayOfByte1, m, paramArrayOfByte.length);
    int n = paramArrayOfByte.length;
    int i1 = arrayOfByte2.length;
    paramInt = k;
    for (;;)
    {
      if (paramInt >= n) {
        return arrayOfByte1;
      }
      int j = (byte)(arrayOfByte2[(paramInt % i1)] ^ a[(paramInt & 0xF)]);
      arrayOfByte2[(paramInt % i1)] = j;
      k = i + paramInt + a[(paramInt & 0xF)] + arrayOfByte2[(paramInt % i1)] & 0x7;
      int i2 = arrayOfByte1[(paramInt + m)];
      arrayOfByte1[(paramInt + m)] = ((byte)(j ^ (byte)((i2 & 0xFF) >> 8 - k | i2 << k)));
      paramInt += 1;
    }
  }
}
