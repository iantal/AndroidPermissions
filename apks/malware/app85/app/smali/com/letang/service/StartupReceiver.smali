.class public Lcom/letang/service/StartupReceiver;
.super Landroid/content/BroadcastReceiver;
.source "StartupReceiver.java"


# static fields
.field private static START_INTERVAL:J


# instance fields
.field intervalADTime:J

.field intervalTime:J

.field mCtx:Landroid/content/Context;

.field sp:Landroid/content/SharedPreferences;


# direct methods
.method static constructor <clinit>()V
    .locals 2

    .prologue
    .line 25
    const-wide/32 v0, 0x2932e00

    sput-wide v0, Lcom/letang/service/StartupReceiver;->START_INTERVAL:J

    .line 23
    return-void
.end method

.method public constructor <init>()V
    .locals 0

    .prologue
    .line 23
    invoke-direct {p0}, Landroid/content/BroadcastReceiver;-><init>()V

    return-void
.end method

.method static synthetic access$0()J
    .locals 2

    .prologue
    .line 25
    sget-wide v0, Lcom/letang/service/StartupReceiver;->START_INTERVAL:J

    return-wide v0
.end method

.method static synthetic access$1(Lcom/letang/service/StartupReceiver;Landroid/content/Context;)Z
    .locals 1

    .prologue
    .line 167
    invoke-direct {p0, p1}, Lcom/letang/service/StartupReceiver;->checServiceRunningOrNot(Landroid/content/Context;)Z

    move-result v0

    return v0
.end method

.method static synthetic access$2(Lcom/letang/service/StartupReceiver;Landroid/content/Context;)Landroid/net/NetworkInfo;
    .locals 1

    .prologue
    .line 151
    invoke-direct {p0, p1}, Lcom/letang/service/StartupReceiver;->getNetworkInfo(Landroid/content/Context;)Landroid/net/NetworkInfo;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$3(Lcom/letang/service/StartupReceiver;Landroid/net/NetworkInfo;)Z
    .locals 1

    .prologue
    .line 160
    invoke-direct {p0, p1}, Lcom/letang/service/StartupReceiver;->isNetworkAvaliable(Landroid/net/NetworkInfo;)Z

    move-result v0

    return v0
.end method

.method private checServiceRunningOrNot(Landroid/content/Context;)Z
    .locals 10
    .param p1, "ctx"    # Landroid/content/Context;

    .prologue
    const/4 v7, 0x0

    .line 169
    const-string v8, "activity"

    invoke-virtual {p1, v8}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/ActivityManager;

    .line 170
    .local v1, "am":Landroid/app/ActivityManager;
    const v8, 0x7fffffff

    invoke-virtual {v1, v8}, Landroid/app/ActivityManager;->getRunningServices(I)Ljava/util/List;

    move-result-object v6

    .line 171
    .local v6, "serviceList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningServiceInfo;>;"
    invoke-interface {v6}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "iterator":Ljava/util/Iterator;
    :cond_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v8

    if-nez v8, :cond_1

    .line 193
    :goto_0
    return v7

    .line 173
    :cond_1
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/app/ActivityManager$RunningServiceInfo;

    .line 174
    .local v3, "runningServiceInfo":Landroid/app/ActivityManager$RunningServiceInfo;
    iget-object v5, v3, Landroid/app/ActivityManager$RunningServiceInfo;->service:Landroid/content/ComponentName;

    .line 176
    .local v5, "serviceCMP":Landroid/content/ComponentName;
    invoke-virtual {v5}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v8

    sget-object v9, Lcom/letang/JoyConstants;->DEAMON_SERVICE:Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_0

    .line 179
    :try_start_0
    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {p1}, Landroid/content/Context;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;

    move-result-object v9

    iget-object v9, v9, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_2

    .line 182
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0}, Landroid/content/Intent;-><init>()V

    .line 183
    .local v0, "_intent":Landroid/content/Intent;
    invoke-virtual {v0, v5}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 184
    invoke-virtual {p1, v0}, Landroid/content/Context;->stopService(Landroid/content/Intent;)Z
    :try_end_0
    .catch Ljava/lang/SecurityException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 187
    .end local v0    # "_intent":Landroid/content/Intent;
    :catch_0
    move-exception v4

    .line 188
    .local v4, "sEx":Ljava/lang/SecurityException;
    invoke-virtual {v4}, Ljava/lang/SecurityException;->printStackTrace()V

    .line 190
    .end local v4    # "sEx":Ljava/lang/SecurityException;
    :cond_2
    const/4 v7, 0x1

    goto :goto_0
.end method

.method private getNetworkInfo(Landroid/content/Context;)Landroid/net/NetworkInfo;
    .locals 4
    .param p1, "ctx"    # Landroid/content/Context;

    .prologue
    .line 152
    invoke-virtual {p1}, Landroid/content/Context;->getApplicationContext()Landroid/content/Context;

    move-result-object v2

    .line 153
    const-string v3, "connectivity"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    .line 152
    check-cast v0, Landroid/net/ConnectivityManager;

    .line 155
    .local v0, "connManager":Landroid/net/ConnectivityManager;
    invoke-virtual {v0}, Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;

    move-result-object v1

    .line 157
    .local v1, "networkInfo":Landroid/net/NetworkInfo;
    return-object v1
.end method

.method private isNetworkAvaliable(Landroid/net/NetworkInfo;)Z
    .locals 2
    .param p1, "ni"    # Landroid/net/NetworkInfo;

    .prologue
    const/4 v0, 0x0

    .line 161
    if-nez p1, :cond_1

    .line 164
    :cond_0
    :goto_0
    return v0

    :cond_1
    invoke-virtual {p1}, Landroid/net/NetworkInfo;->isConnected()Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-virtual {p1}, Landroid/net/NetworkInfo;->isAvailable()Z

    move-result v1

    if-eqz v1, :cond_0

    const/4 v0, 0x1

    goto :goto_0
.end method


# virtual methods
.method public onReceive(Landroid/content/Context;Landroid/content/Intent;)V
    .locals 3
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "intent"    # Landroid/content/Intent;

    .prologue
    .line 35
    iput-object p1, p0, Lcom/letang/service/StartupReceiver;->mCtx:Landroid/content/Context;

    .line 40
    :try_start_0
    new-instance v2, Lcom/letang/service/StartupReceiver$1;

    invoke-direct {v2, p0}, Lcom/letang/service/StartupReceiver$1;-><init>(Lcom/letang/service/StartupReceiver;)V

    .line 140
    invoke-virtual {v2}, Lcom/letang/service/StartupReceiver$1;->start()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/lang/Error; {:try_start_0 .. :try_end_0} :catch_1

    .line 148
    :goto_0
    return-void

    .line 143
    :catch_0
    move-exception v1

    .line 144
    .local v1, "ex":Ljava/lang/Exception;
    invoke-virtual {v1}, Ljava/lang/Exception;->printStackTrace()V

    goto :goto_0

    .line 145
    .end local v1    # "ex":Ljava/lang/Exception;
    :catch_1
    move-exception v0

    .line 146
    .local v0, "er":Ljava/lang/Error;
    invoke-virtual {v0}, Ljava/lang/Error;->printStackTrace()V

    goto :goto_0
.end method
