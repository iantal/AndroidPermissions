package org.scribe.builder.api;

import org.scribe.model.OAuthConfig;
import org.scribe.utils.Preconditions;
import org.scribe.utils.URLUtils;

public class FacebookApi
  extends DefaultApi20
{
  private static final String AUTHORIZE_URL = "https://www.facebook.com/dialog/oauth?client_id=%s&redirect_uri=%s";
  private static final String SCOPED_AUTHORIZE_URL = "https://www.facebook.com/dialog/oauth?client_id=%s&redirect_uri=%s&scope=%s";
  
  public FacebookApi() {}
  
  public String getAccessTokenEndpoint()
  {
    return "https://graph.facebook.com/oauth/access_token";
  }
  
  public String getAuthorizationUrl(OAuthConfig paramOAuthConfig)
  {
    Preconditions.checkValidUrl(paramOAuthConfig.getCallback(), "Must provide a valid url as callback. Facebook does not support OOB");
    if (paramOAuthConfig.hasScope()) {
      return String.format("https://www.facebook.com/dialog/oauth?client_id=%s&redirect_uri=%s&scope=%s", new Object[] { paramOAuthConfig.getApiKey(), URLUtils.formURLEncode(paramOAuthConfig.getCallback()), URLUtils.formURLEncode(paramOAuthConfig.getScope()) });
    }
    return String.format("https://www.facebook.com/dialog/oauth?client_id=%s&redirect_uri=%s", new Object[] { paramOAuthConfig.getApiKey(), URLUtils.formURLEncode(paramOAuthConfig.getCallback()) });
  }
}
