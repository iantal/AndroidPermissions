package cn.domob.android.ads;

import android.app.Activity;
import android.content.Context;
import android.util.AttributeSet;
import android.util.Log;
import android.view.View;
import android.view.ViewParent;
import android.view.animation.AnimationSet;
import android.webkit.WebView;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;

public class DomobAdView
  extends RelativeLayout
{
  public static final String INLINE_SIZE_300X250 = "300x250";
  public static final String INLINE_SIZE_320X50 = "320x50";
  public static final String INLINE_SIZE_600X500 = "600x500";
  public static final String INLINE_SIZE_600X94 = "600x94";
  public static final String INLINE_SIZE_728X90 = "728x90";
  protected static final String q = "banner1";
  protected static final String r = "banner2";
  protected static final String s = "ex1";
  protected static final String t = "ex2";
  private static H u = new H(DomobAdView.class.getSimpleName());
  protected f a = null;
  protected int b;
  protected Context c;
  protected boolean d = false;
  protected boolean e = true;
  protected B f;
  protected m g;
  protected m h;
  protected m i;
  protected String j;
  protected int k;
  protected int l;
  protected boolean m = true;
  protected boolean n = false;
  protected boolean o = false;
  protected DomobAdListener p;
  
  @Deprecated
  public DomobAdView(Context paramContext, AttributeSet paramAttributeSet)
  {
    this(paramContext, null, "320x50", paramAttributeSet);
  }
  
  public DomobAdView(Context paramContext, String paramString1, String paramString2)
  {
    this(paramContext, paramString1, paramString2, null);
  }
  
  private DomobAdView(Context paramContext, String paramString1, String paramString2, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    Log.i("DomobSDK", "Current SDK version is " + A.a() + " built at " + A.b());
    this.c = paramContext;
    this.f = new B(paramContext);
    this.f.setVisibility(8);
    this.g = new m(this.c, "banner1", "ex1");
    this.h = new m(this.c, "banner2", "ex2");
    this.f.addView(this.g.a());
    this.f.addView(this.h.a());
    a(paramString1);
    n.e(paramContext);
    addView(this.f);
    if (paramString2 != null) {}
    for (this.j = paramString2;; this.j = null)
    {
      this.b = b.b.ordinal();
      return;
    }
  }
  
  public DomobAdView(Context paramContext, String paramString1, String paramString2, boolean paramBoolean)
  {
    this(paramContext, paramString1, paramString2, null);
    if ((this.a != null) && (!paramBoolean))
    {
      this.a.a(false);
      this.a.b(false);
    }
  }
  
  private void m()
  {
    if ((this.a != null) && (!this.a.t())) {
      requestRefreshAd();
    }
  }
  
  protected Context a()
  {
    return this.c;
  }
  
  protected void a(int paramInt1, int paramInt2)
  {
    this.k = paramInt1;
    this.l = paramInt2;
  }
  
  protected void a(final C paramC, final AnimationSet[] paramArrayOfAnimationSet)
  {
    u.b("Switch AD with/without animation.");
    ((Activity)this.c).runOnUiThread(new Runnable()
    {
      public void run()
      {
        if (DomobAdView.this.f.getLayoutParams() != null)
        {
          DomobAdView.l().a("AdView's layoutParams is not null.");
          DomobAdView.this.f.getLayoutParams().width = DomobAdView.this.k;
          DomobAdView.this.f.getLayoutParams().height = DomobAdView.this.l;
          if (paramArrayOfAnimationSet == null) {
            break label232;
          }
          DomobAdView.l().b("Show ad with animation.");
          AnimationSet localAnimationSet1 = paramArrayOfAnimationSet[0];
          AnimationSet localAnimationSet2 = paramArrayOfAnimationSet[1];
          DomobAdView.this.f.setInAnimation(localAnimationSet1);
          DomobAdView.this.f.setOutAnimation(localAnimationSet2);
          label112:
          DomobAdView.this.f.setVisibility(0);
          if (!DomobAdView.this.m) {
            break label265;
          }
          DomobAdView.this.m = false;
        }
        for (;;)
        {
          paramC.loadUrl("javascript:domobjs.onViewable()");
          DomobAdView.this.a.a(System.currentTimeMillis());
          if (DomobAdView.this.p != null) {
            DomobAdView.this.p.onReceivedFreshAd(DomobAdView.this);
          }
          return;
          DomobAdView.l().a("AdView's layoutParams is null.");
          DomobAdView.this.f.setLayoutParams(new RelativeLayout.LayoutParams(DomobAdView.this.k, DomobAdView.this.l));
          break;
          label232:
          DomobAdView.l().b("Show ad without animation.");
          DomobAdView.this.f.setInAnimation(null);
          DomobAdView.this.f.setOutAnimation(null);
          break label112;
          label265:
          DomobAdView.this.f.showNext();
        }
      }
    });
    j();
    this.a.x();
  }
  
  protected void a(String paramString)
  {
    this.a = new f(this, paramString);
  }
  
  protected boolean b()
  {
    return this.d;
  }
  
  protected boolean c()
  {
    return this.e;
  }
  
  protected int d()
  {
    return this.b;
  }
  
  protected DomobAdListener e()
  {
    return this.p;
  }
  
  protected m f()
  {
    if (this.m)
    {
      this.i = this.g;
      return this.g;
    }
    if (((C)this.f.getChildAt(this.f.getDisplayedChild())).a().equals("banner1"))
    {
      this.i = this.h;
      return this.h;
    }
    this.i = this.g;
    return this.g;
  }
  
  protected m g()
  {
    return this.i;
  }
  
  protected String h()
  {
    return this.j;
  }
  
  protected boolean i()
  {
    for (ViewParent localViewParent = getParent(); localViewParent != null; localViewParent = localViewParent.getParent())
    {
      if (!(localViewParent instanceof View)) {
        return true;
      }
      if (((View)localViewParent).getVisibility() != 0) {
        return false;
      }
    }
    return true;
  }
  
  protected void j()
  {
    this.a.a("s", "s", 0L);
  }
  
  protected void k() {}
  
  protected void onAttachedToWindow()
  {
    super.onAttachedToWindow();
    u.a("onAttachedToWindow");
    u.b("Start to load AD.");
    m();
  }
  
  protected void onDetachedFromWindow()
  {
    super.onDetachedFromWindow();
    u.a("onDetachedFromWindow");
    this.a.b();
  }
  
  public void onWindowFocusChanged(boolean paramBoolean)
  {
    super.onWindowFocusChanged(paramBoolean);
    u.a("onWindowFocusChanged:" + paramBoolean);
    this.e = paramBoolean;
    if (this.a != null)
    {
      if ((!this.e) || (!this.d)) {
        break label83;
      }
      if (!this.a.t()) {
        break label75;
      }
      this.a.d();
    }
    label75:
    label83:
    while ((this.e) && (this.d))
    {
      return;
      this.a.h();
      return;
    }
    this.a.c();
  }
  
  protected void onWindowVisibilityChanged(int paramInt)
  {
    super.onWindowVisibilityChanged(paramInt);
    u.a("onWindowVisibilityChanged:" + paramInt);
    if (paramInt == 0) {}
    for (boolean bool = true;; bool = false)
    {
      this.d = bool;
      return;
    }
  }
  
  public void requestAdForAggregationPlatform()
  {
    if (this.a != null)
    {
      this.a.a(false);
      this.a.b(false);
    }
    requestRefreshAd();
  }
  
  public void requestRefreshAd()
  {
    if ((this.a != null) && (this.a.g())) {
      this.a.v();
    }
  }
  
  public void setKeyword(String paramString)
  {
    this.a.b(paramString);
  }
  
  public void setOnAdListener(DomobAdListener paramDomobAdListener)
  {
    this.p = paramDomobAdListener;
  }
  
  public void setRefreshable(boolean paramBoolean)
  {
    if (this.a != null) {
      this.a.a(paramBoolean);
    }
  }
  
  public void setSpots(String paramString)
  {
    if (this.a != null) {
      this.a.f(paramString);
    }
  }
  
  public void setUserBirthdayStr(String paramString)
  {
    this.a.e(paramString);
  }
  
  public void setUserGender(String paramString)
  {
    this.a.d(paramString);
  }
  
  public void setUserPostcode(String paramString)
  {
    this.a.c(paramString);
  }
  
  class a
    extends D
  {
    a(D.a paramA)
    {
      super();
    }
    
    public boolean shouldOverrideUrlLoading(WebView paramWebView, String paramString)
    {
      return super.shouldOverrideUrlLoading(paramWebView, paramString);
    }
  }
  
  protected static enum b
  {
    private b() {}
  }
}
