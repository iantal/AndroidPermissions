package com.flurry.android;

import android.os.Handler;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

final class af
{
  private List a = new ArrayList();
  private Handler b;
  private Handler c;
  private int d;
  private Runnable e;
  
  af(Handler paramHandler, int paramInt)
  {
    this.b = paramHandler;
    this.c = new Handler();
    this.d = paramInt;
    this.e = new r(this);
    b();
  }
  
  private void a()
  {
    try
    {
      ArrayList localArrayList = new ArrayList();
      Iterator localIterator = this.a.iterator();
      while (localIterator.hasNext())
      {
        ad localAd = (ad)((WeakReference)localIterator.next()).get();
        if (localAd != null) {
          localArrayList.add(localAd);
        }
      }
      this.c.post(new p(localList));
    }
    finally {}
    b();
  }
  
  private void b()
  {
    try
    {
      Iterator localIterator = this.a.iterator();
      while (localIterator.hasNext()) {
        if (((WeakReference)localIterator.next()).get() == null) {
          localIterator.remove();
        }
      }
      this.b.removeCallbacks(this.e);
    }
    finally {}
    this.b.postDelayed(this.e, this.d);
  }
  
  final void a(ad paramAd)
  {
    try
    {
      paramAd.a();
      this.a.add(new WeakReference(paramAd));
      return;
    }
    finally
    {
      paramAd = finally;
      throw paramAd;
    }
  }
}
