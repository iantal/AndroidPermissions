package com.prime31;

import android.app.Activity;
import android.util.Log;
import android.view.ViewGroup.LayoutParams;
import android.widget.FrameLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import com.google.ads.Ad;
import com.google.ads.AdListener;
import com.google.ads.AdRequest;
import com.google.ads.AdRequest.ErrorCode;
import com.google.ads.AdSize;
import com.google.ads.AdView;
import com.google.ads.InterstitialAd;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.HashSet;
import java.util.Set;

public class AdMobPlugin
  implements AdListener
{
  public static Activity _activity;
  private static AdMobPlugin _instance;
  private static Field _unityPlayerActivityField;
  private static Class<?> _unityPlayerClass;
  private static Method _unitySendMessageMethod;
  private String _adUnitId;
  private AdView _adView;
  private InterstitialAd _interstitial;
  private RelativeLayout _layout;
  private Set<String> _testDevices = new HashSet();
  
  public AdMobPlugin() {}
  
  private void UnitySendMessage(String paramString1, String paramString2, String paramString3)
  {
    if (_unitySendMessageMethod != null) {
      try
      {
        _unitySendMessageMethod.invoke(null, new Object[] { paramString1, paramString2, paramString3 });
        return;
      }
      catch (IllegalArgumentException paramString1)
      {
        Log.i("Prime31", "could not find UnitySendMessage method: " + paramString1.getMessage());
        return;
      }
      catch (IllegalAccessException paramString1)
      {
        Log.i("Prime31", "could not find UnitySendMessage method: " + paramString1.getMessage());
        return;
      }
      catch (InvocationTargetException paramString1)
      {
        Log.i("Prime31", "could not find UnitySendMessage method: " + paramString1.getMessage());
        return;
      }
    }
    Log.i("Prime31", "UnitySendMessage: " + paramString1 + ", " + paramString2 + ", " + paramString3);
  }
  
  private static Activity getActivity()
  {
    if (_unityPlayerActivityField != null) {
      try
      {
        Activity localActivity = (Activity)_unityPlayerActivityField.get(_unityPlayerClass);
        return localActivity;
      }
      catch (Exception localException)
      {
        Log.i("Prime31", "error getting currentActivity: " + localException.getMessage());
      }
    }
    return _activity;
  }
  
  public static AdMobPlugin instance()
  {
    if (_instance == null) {}
    try
    {
      _unityPlayerClass = Class.forName("com.unity3d.player.UnityPlayer");
      _unityPlayerActivityField = _unityPlayerClass.getField("currentActivity");
      _unitySendMessageMethod = _unityPlayerClass.getMethod("UnitySendMessage", new Class[] { String.class, String.class, String.class });
      _instance = new AdMobPlugin();
      return _instance;
    }
    catch (ClassNotFoundException localClassNotFoundException)
    {
      for (;;)
      {
        Log.i("Prime31", "could not find UnityPlayer class: " + localClassNotFoundException.getMessage());
      }
    }
    catch (NoSuchFieldException localNoSuchFieldException)
    {
      for (;;)
      {
        Log.i("Prime31", "could not find currentActivity field: " + localNoSuchFieldException.getMessage());
      }
    }
    catch (Exception localException)
    {
      for (;;)
      {
        Log.i("Prime31", "unkown exception occurred locating getActivity(): " + localException.getMessage());
      }
    }
  }
  
  public void createBanner(final int paramInt1, final int paramInt2, final int paramInt3)
  {
    if (this._adUnitId == null)
    {
      Log.i("Prime31", "You cannot request a banner without first calling init!");
      return;
    }
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        if (AdMobPlugin.this._adView != null) {
          AdMobPlugin.this.destroyBanner();
        }
        Log.d("Prime31", "creating ad banner with leftMargin:topMargin: " + String.valueOf(paramInt2) + ":" + String.valueOf(paramInt3));
        Object localObject1 = null;
        switch (paramInt1)
        {
        default: 
          if (AdMobPlugin.this._layout == null) {
            AdMobPlugin.this._layout = new RelativeLayout(AdMobPlugin.access$2());
          }
          break;
        }
        for (;;)
        {
          AdMobPlugin.access$2().addContentView(AdMobPlugin.this._layout, new LinearLayout.LayoutParams(-1, -2));
          ((RelativeLayout.LayoutParams)localObject1).leftMargin = paramInt2;
          ((RelativeLayout.LayoutParams)localObject1).topMargin = paramInt3;
          AdMobPlugin.this._layout.addView(AdMobPlugin.this._adView, (ViewGroup.LayoutParams)localObject1);
          AdMobPlugin.this._layout.setVisibility(0);
          AdMobPlugin.this.refreshAd();
          AdMobPlugin.this._adView.setAdListener(AdMobPlugin.this);
          return;
          localObject1 = new RelativeLayout.LayoutParams(-2, -2);
          AdMobPlugin.this._adView = new AdView(AdMobPlugin.access$2(), AdSize.BANNER, AdMobPlugin.this._adUnitId);
          break;
          localObject1 = new RelativeLayout.LayoutParams(300, 250);
          AdMobPlugin.this._adView = new AdView(AdMobPlugin.access$2(), AdSize.IAB_MRECT, AdMobPlugin.this._adUnitId);
          break;
          localObject1 = new RelativeLayout.LayoutParams(468, 60);
          AdMobPlugin.this._adView = new AdView(AdMobPlugin.access$2(), AdSize.IAB_BANNER, AdMobPlugin.this._adUnitId);
          break;
          localObject1 = new RelativeLayout.LayoutParams(728, 90);
          AdMobPlugin.this._adView = new AdView(AdMobPlugin.access$2(), AdSize.IAB_LEADERBOARD, AdMobPlugin.this._adUnitId);
          break;
          Object localObject2 = new RelativeLayout.LayoutParams(-1, -2);
          AdMobPlugin.this._adView = new AdView(AdMobPlugin.access$2(), AdSize.SMART_BANNER, AdMobPlugin.this._adUnitId);
          localObject1 = localObject2;
          if (paramInt3 <= 0) {
            break;
          }
          ((RelativeLayout.LayoutParams)localObject2).addRule(12);
          localObject1 = localObject2;
          break;
          localObject2 = (FrameLayout)AdMobPlugin.this._layout.getParent();
          if (localObject2 != null) {
            ((FrameLayout)localObject2).removeView(AdMobPlugin.this._layout);
          }
        }
      }
    });
  }
  
  public void destroyBanner()
  {
    if (this._adView == null) {
      return;
    }
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        AdMobPlugin.this._layout.removeAllViews();
        AdMobPlugin.this._layout.setVisibility(8);
        AdMobPlugin.this._adView = null;
      }
    });
  }
  
  public void displayInterstital()
  {
    if (this._interstitial == null) {
      return;
    }
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        if (AdMobPlugin.this._interstitial.isReady()) {
          AdMobPlugin.this._interstitial.show();
        }
      }
    });
  }
  
  public void hideBanner(final boolean paramBoolean)
  {
    if (this._adView == null) {
      return;
    }
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        if (paramBoolean)
        {
          AdMobPlugin.this._adView.setVisibility(8);
          return;
        }
        AdMobPlugin.this._adView.setVisibility(0);
      }
    });
  }
  
  public boolean isInterstitalReady()
  {
    if (this._interstitial == null) {
      return false;
    }
    return this._interstitial.isReady();
  }
  
  public void onDismissScreen(Ad paramAd)
  {
    UnitySendMessage("AdMobAndroidManager", "dismissingScreen", "");
    Log.d("Prime31", "adView: onDismissScreen");
  }
  
  public void onFailedToReceiveAd(Ad paramAd, AdRequest.ErrorCode paramErrorCode)
  {
    UnitySendMessage("AdMobAndroidManager", "failedToReceiveAd", String.valueOf(paramErrorCode));
    Log.d("Prime31", "onFailedToReceiveAd. errorCode: " + String.valueOf(paramErrorCode));
  }
  
  public void onLeaveApplication(Ad paramAd)
  {
    UnitySendMessage("AdMobAndroidManager", "leavingApplication", "");
    Log.d("Prime31", "adView: onLeaveApplication");
  }
  
  public void onPresentScreen(Ad paramAd)
  {
    UnitySendMessage("AdMobAndroidManager", "presentingScreen", "");
    Log.d("Prime31", "adView: presentingScreen");
  }
  
  public void onReceiveAd(Ad paramAd)
  {
    UnitySendMessage("AdMobAndroidManager", "receivedAd", "");
    Log.d("Prime31", "adView: onReceiveAd");
  }
  
  public void refreshAd()
  {
    if (this._adView == null) {
      return;
    }
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        AdRequest localAdRequest = new AdRequest();
        localAdRequest.setTestDevices(AdMobPlugin.this._testDevices);
        AdMobPlugin.this._adView.loadAd(localAdRequest);
      }
    });
  }
  
  public void requestInterstital(final String paramString)
  {
    getActivity().runOnUiThread(new Runnable()
    {
      public void run()
      {
        if (AdMobPlugin.this._interstitial == null)
        {
          AdMobPlugin.this._interstitial = new InterstitialAd(AdMobPlugin.access$2(), paramString);
          AdMobPlugin.this._interstitial.setAdListener(new AdMobPlugin.InterstitialListener(AdMobPlugin.this, null));
        }
        AdRequest localAdRequest = new AdRequest();
        localAdRequest.setTestDevices(AdMobPlugin.this._testDevices);
        AdMobPlugin.this._interstitial.loadAd(localAdRequest);
      }
    });
  }
  
  public void setPublisherId(String paramString)
  {
    this._adUnitId = paramString;
  }
  
  public void setTestDevices(String[] paramArrayOfString)
  {
    Log.i("Prime31", "setting: " + String.valueOf(paramArrayOfString.length) + " test devices");
    int i = 0;
    for (;;)
    {
      if (i >= paramArrayOfString.length)
      {
        Log.i("Prime31", "total test devices: " + this._testDevices.size());
        return;
      }
      if (!this._testDevices.contains(paramArrayOfString[i])) {
        this._testDevices.add(paramArrayOfString[i]);
      }
      i += 1;
    }
  }
  
  private final class InterstitialListener
    implements AdListener
  {
    private InterstitialListener() {}
    
    public void onDismissScreen(Ad paramAd)
    {
      AdMobPlugin.this.UnitySendMessage("AdMobAndroidManager", "interstitialDismissingScreen", "");
      Log.d("Prime31", "interstitial: onDismissScreen");
    }
    
    public void onFailedToReceiveAd(Ad paramAd, AdRequest.ErrorCode paramErrorCode)
    {
      AdMobPlugin.this.UnitySendMessage("AdMobAndroidManager", "interstitialFailedToReceiveAd", String.valueOf(paramErrorCode));
      Log.d("Prime31", "interstitial onFailedToReceiveAd. errorCode: " + String.valueOf(paramErrorCode));
    }
    
    public void onLeaveApplication(Ad paramAd)
    {
      AdMobPlugin.this.UnitySendMessage("AdMobAndroidManager", "interstitialLeavingApplication", "");
      Log.d("Prime31", "interstitial: onLeaveApplication");
    }
    
    public void onPresentScreen(Ad paramAd)
    {
      AdMobPlugin.this.UnitySendMessage("AdMobAndroidManager", "interstitialPresentingScreen", "");
      Log.d("Prime31", "interstitial: presentingScreen");
    }
    
    public void onReceiveAd(Ad paramAd)
    {
      AdMobPlugin.this.UnitySendMessage("AdMobAndroidManager", "interstitialReceivedAd", "");
      Log.d("Prime31", "interstitial: onReceiveAd");
    }
  }
}
