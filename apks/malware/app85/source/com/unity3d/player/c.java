package com.unity3d.player;

import android.app.Activity;
import android.content.ContextWrapper;
import android.graphics.RectF;
import android.hardware.Camera;
import android.hardware.Camera.CameraInfo;
import android.view.InputDevice;
import android.view.InputDevice.MotionRange;
import android.view.MotionEvent;
import android.view.MotionEvent.PointerCoords;
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;

public final class c
  implements e
{
  protected final ContextWrapper a;
  private Activity b;
  private Queue c = new ConcurrentLinkedQueue();
  private Runnable d = new d(this);
  
  public c(ContextWrapper paramContextWrapper)
  {
    this.a = paramContextWrapper;
    if ((paramContextWrapper instanceof Activity)) {}
    for (paramContextWrapper = (Activity)paramContextWrapper;; paramContextWrapper = null)
    {
      this.b = paramContextWrapper;
      return;
    }
  }
  
  private static int a(MotionEvent.PointerCoords[] paramArrayOfPointerCoords, float[] paramArrayOfFloat, int paramInt)
  {
    int j = 0;
    int i = paramInt;
    paramInt = j;
    while (paramInt < paramArrayOfPointerCoords.length)
    {
      MotionEvent.PointerCoords localPointerCoords = new MotionEvent.PointerCoords();
      paramArrayOfPointerCoords[paramInt] = localPointerCoords;
      j = i + 1;
      localPointerCoords.orientation = paramArrayOfFloat[i];
      i = j + 1;
      localPointerCoords.pressure = paramArrayOfFloat[j];
      j = i + 1;
      localPointerCoords.size = paramArrayOfFloat[i];
      i = j + 1;
      localPointerCoords.toolMajor = paramArrayOfFloat[j];
      j = i + 1;
      localPointerCoords.toolMinor = paramArrayOfFloat[i];
      i = j + 1;
      localPointerCoords.touchMajor = paramArrayOfFloat[j];
      j = i + 1;
      localPointerCoords.touchMinor = paramArrayOfFloat[i];
      int k = j + 1;
      localPointerCoords.x = paramArrayOfFloat[j];
      i = k + 1;
      localPointerCoords.y = paramArrayOfFloat[k];
      paramInt += 1;
    }
    return i;
  }
  
  public final int a()
  {
    return Camera.getNumberOfCameras();
  }
  
  public final int a(MotionEvent paramMotionEvent)
  {
    return paramMotionEvent.getSource();
  }
  
  public final void a(long paramLong1, long paramLong2, int paramInt1, int paramInt2, int[] paramArrayOfInt, float[] paramArrayOfFloat1, int paramInt3, float paramFloat1, float paramFloat2, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long[] paramArrayOfLong, float[] paramArrayOfFloat2)
  {
    if (this.b != null)
    {
      MotionEvent.PointerCoords[] arrayOfPointerCoords = new MotionEvent.PointerCoords[paramInt2];
      a(arrayOfPointerCoords, paramArrayOfFloat1, 0);
      paramArrayOfInt = MotionEvent.obtain(paramLong1, paramLong2, paramInt1, paramInt2, paramArrayOfInt, arrayOfPointerCoords, paramInt3, paramFloat1, paramFloat2, paramInt4, paramInt5, paramInt6, paramInt7);
      paramInt4 = 0;
      paramInt1 = 0;
      while (paramInt1 < paramInt8)
      {
        paramArrayOfFloat1 = new MotionEvent.PointerCoords[paramInt2];
        paramInt4 = a(paramArrayOfFloat1, paramArrayOfFloat2, paramInt4);
        paramArrayOfInt.addBatch(paramArrayOfLong[paramInt1], paramArrayOfFloat1, paramInt3);
        paramInt1 += 1;
      }
      this.c.add(paramArrayOfInt);
      this.b.runOnUiThread(this.d);
    }
  }
  
  public final boolean a(int paramInt)
  {
    Camera.CameraInfo localCameraInfo = new Camera.CameraInfo();
    Camera.getCameraInfo(paramInt, localCameraInfo);
    return localCameraInfo.facing == 1;
  }
  
  public final RectF b()
  {
    int[] arrayOfInt = InputDevice.getDeviceIds();
    int i = 0;
    while (i < arrayOfInt.length)
    {
      Object localObject = InputDevice.getDevice(arrayOfInt[i]);
      if ((localObject != null) && ((((InputDevice)localObject).getSources() & 0x100008) == 1048584))
      {
        InputDevice.MotionRange localMotionRange = ((InputDevice)localObject).getMotionRange(0);
        localObject = ((InputDevice)localObject).getMotionRange(1);
        if ((localMotionRange != null) && (localObject != null)) {
          return new RectF(0.0F, 0.0F, localMotionRange.getRange(), ((InputDevice.MotionRange)localObject).getRange());
        }
      }
      i += 1;
    }
    return null;
  }
}
