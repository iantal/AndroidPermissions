package com.unity3d.player.a;

import android.os.Binder;
import android.os.IBinder;
import android.os.IInterface;
import android.os.Parcel;

public abstract interface d
  extends IInterface
{
  public abstract void a(long paramLong, String paramString, c paramC);
  
  public static abstract class a
    extends Binder
    implements d
  {
    public a()
    {
      attachInterface(this, new String(e.b));
    }
    
    public static d a(IBinder paramIBinder)
    {
      if (paramIBinder == null) {
        return null;
      }
      IInterface localIInterface = paramIBinder.queryLocalInterface(new String(e.b));
      if ((localIInterface != null) && ((localIInterface instanceof d))) {
        return (d)localIInterface;
      }
      return new a(paramIBinder);
    }
    
    public boolean onTransact(int paramInt1, Parcel paramParcel1, Parcel paramParcel2, int paramInt2)
    {
      switch (paramInt1)
      {
      default: 
        return super.onTransact(paramInt1, paramParcel1, paramParcel2, paramInt2);
      case 1598968902: 
        paramParcel2.writeString(new String(e.b));
        return true;
      }
      paramParcel1.enforceInterface(new String(e.b));
      a(paramParcel1.readLong(), paramParcel1.readString(), c.a.a(paramParcel1.readStrongBinder()));
      return true;
    }
    
    static final class a
      implements d
    {
      private IBinder a;
      
      a(IBinder paramIBinder)
      {
        this.a = paramIBinder;
      }
      
      public final void a(long paramLong, String paramString, c paramC)
      {
        Object localObject = null;
        Parcel localParcel = Parcel.obtain();
        try
        {
          localParcel.writeInterfaceToken(new String(e.b));
          localParcel.writeLong(paramLong);
          localParcel.writeString(paramString);
          paramString = localObject;
          if (paramC != null) {
            paramString = paramC.asBinder();
          }
          localParcel.writeStrongBinder(paramString);
          this.a.transact(1, localParcel, null, 1);
          return;
        }
        finally
        {
          localParcel.recycle();
        }
      }
      
      public final IBinder asBinder()
      {
        return this.a;
      }
    }
  }
}
