package com.unity3d.player;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.res.AssetManager;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.graphics.Rect;
import android.graphics.RectF;
import android.hardware.Camera;
import android.hardware.Camera.PreviewCallback;
import android.hardware.SensorManager;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Uri;
import android.opengl.GLSurfaceView.Renderer;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Environment;
import android.os.PowerManager;
import android.os.PowerManager.WakeLock;
import android.os.Process;
import android.os.Vibrator;
import android.provider.Settings.Secure;
import android.provider.Settings.System;
import android.telephony.TelephonyManager;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.view.inputmethod.InputMethodManager;
import android.webkit.MimeTypeMap;
import android.widget.FrameLayout;
import android.widget.ProgressBar;
import com.unity3d.player.a.i;
import java.io.File;
import java.io.InputStream;
import java.lang.reflect.Method;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.concurrent.Semaphore;
import java.util.concurrent.TimeUnit;
import javax.microedition.khronos.egl.EGLConfig;
import javax.microedition.khronos.opengles.GL10;
import org.fmod.FMODAudioDevice;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserFactory;

public class UnityPlayer
  extends FrameLayout
  implements Camera.PreviewCallback, GLSurfaceView.Renderer
{
  private static b Q = new b();
  public static Activity currentActivity = null;
  private static boolean o = false;
  private static boolean p = true;
  private int A;
  private String B;
  private NetworkInfo C;
  private com.unity3d.player.a.e D;
  private boolean E;
  private boolean F;
  private boolean G;
  private Bundle H;
  private Map I;
  private boolean J;
  private boolean K;
  private boolean L;
  private Runnable M;
  private ProgressBar N;
  private Runnable O;
  private Runnable P;
  private float R;
  private float S;
  private Method T;
  private LinkedHashMap U;
  private BroadcastReceiver V;
  private boolean W;
  private int Z;
  p a;
  private boolean aa;
  private boolean b;
  private boolean c;
  private final e d;
  private Bundle e;
  private SharedPreferences f;
  private ContextWrapper g;
  private boolean h;
  private UnityGL i;
  private PowerManager.WakeLock j;
  private SensorManager k;
  private WindowManager l;
  private FMODAudioDevice m;
  private Vibrator n;
  private boolean q;
  private boolean r;
  private int s;
  private int t;
  private int u;
  private int v;
  private boolean w;
  private int x;
  private boolean y;
  private final h z;
  
  static
  {
    Q = null;
  }
  
  /* Error */
  public UnityPlayer(ContextWrapper paramContextWrapper)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aload_0
    //   4: aload_1
    //   5: invokespecial 161	android/widget/FrameLayout:<init>	(Landroid/content/Context;)V
    //   8: aload_0
    //   9: iconst_0
    //   10: putfield 163	com/unity3d/player/UnityPlayer:b	Z
    //   13: aload_0
    //   14: iconst_0
    //   15: putfield 165	com/unity3d/player/UnityPlayer:c	Z
    //   18: aload_0
    //   19: aconst_null
    //   20: putfield 167	com/unity3d/player/UnityPlayer:e	Landroid/os/Bundle;
    //   23: aload_0
    //   24: aconst_null
    //   25: putfield 169	com/unity3d/player/UnityPlayer:f	Landroid/content/SharedPreferences;
    //   28: aload_0
    //   29: aconst_null
    //   30: putfield 171	com/unity3d/player/UnityPlayer:n	Landroid/os/Vibrator;
    //   33: aload_0
    //   34: iconst_0
    //   35: putfield 173	com/unity3d/player/UnityPlayer:q	Z
    //   38: aload_0
    //   39: iconst_1
    //   40: putfield 175	com/unity3d/player/UnityPlayer:r	Z
    //   43: aload_0
    //   44: iconst_0
    //   45: putfield 177	com/unity3d/player/UnityPlayer:u	I
    //   48: aload_0
    //   49: iconst_0
    //   50: putfield 179	com/unity3d/player/UnityPlayer:v	I
    //   53: aload_0
    //   54: iconst_0
    //   55: putfield 181	com/unity3d/player/UnityPlayer:w	Z
    //   58: aload_0
    //   59: iconst_m1
    //   60: putfield 183	com/unity3d/player/UnityPlayer:x	I
    //   63: aload_0
    //   64: iconst_0
    //   65: putfield 185	com/unity3d/player/UnityPlayer:y	Z
    //   68: aload_0
    //   69: iconst_0
    //   70: putfield 187	com/unity3d/player/UnityPlayer:A	I
    //   73: aload_0
    //   74: aconst_null
    //   75: putfield 189	com/unity3d/player/UnityPlayer:B	Ljava/lang/String;
    //   78: aload_0
    //   79: aconst_null
    //   80: putfield 191	com/unity3d/player/UnityPlayer:C	Landroid/net/NetworkInfo;
    //   83: aload_0
    //   84: aconst_null
    //   85: putfield 193	com/unity3d/player/UnityPlayer:D	Lcom/unity3d/player/a/e;
    //   88: aload_0
    //   89: iconst_0
    //   90: putfield 195	com/unity3d/player/UnityPlayer:E	Z
    //   93: aload_0
    //   94: iconst_0
    //   95: putfield 197	com/unity3d/player/UnityPlayer:F	Z
    //   98: aload_0
    //   99: iconst_0
    //   100: putfield 199	com/unity3d/player/UnityPlayer:G	Z
    //   103: aload_0
    //   104: new 201	android/os/Bundle
    //   107: dup
    //   108: invokespecial 202	android/os/Bundle:<init>	()V
    //   111: putfield 204	com/unity3d/player/UnityPlayer:H	Landroid/os/Bundle;
    //   114: aload_0
    //   115: new 206	java/util/HashMap
    //   118: dup
    //   119: invokespecial 207	java/util/HashMap:<init>	()V
    //   122: putfield 209	com/unity3d/player/UnityPlayer:I	Ljava/util/Map;
    //   125: aload_0
    //   126: aconst_null
    //   127: putfield 211	com/unity3d/player/UnityPlayer:a	Lcom/unity3d/player/p;
    //   130: aload_0
    //   131: iconst_1
    //   132: putfield 213	com/unity3d/player/UnityPlayer:J	Z
    //   135: aload_0
    //   136: iconst_0
    //   137: putfield 215	com/unity3d/player/UnityPlayer:K	Z
    //   140: aload_0
    //   141: iconst_0
    //   142: putfield 217	com/unity3d/player/UnityPlayer:L	Z
    //   145: aload_0
    //   146: new 58	com/unity3d/player/r
    //   149: dup
    //   150: aload_0
    //   151: invokespecial 220	com/unity3d/player/r:<init>	(Lcom/unity3d/player/UnityPlayer;)V
    //   154: putfield 222	com/unity3d/player/UnityPlayer:M	Ljava/lang/Runnable;
    //   157: aload_0
    //   158: aconst_null
    //   159: putfield 224	com/unity3d/player/UnityPlayer:N	Landroid/widget/ProgressBar;
    //   162: aload_0
    //   163: new 60	com/unity3d/player/s
    //   166: dup
    //   167: aload_0
    //   168: invokespecial 225	com/unity3d/player/s:<init>	(Lcom/unity3d/player/UnityPlayer;)V
    //   171: putfield 227	com/unity3d/player/UnityPlayer:O	Ljava/lang/Runnable;
    //   174: aload_0
    //   175: new 62	com/unity3d/player/t
    //   178: dup
    //   179: aload_0
    //   180: invokespecial 228	com/unity3d/player/t:<init>	(Lcom/unity3d/player/UnityPlayer;)V
    //   183: putfield 230	com/unity3d/player/UnityPlayer:P	Ljava/lang/Runnable;
    //   186: aload_0
    //   187: fconst_0
    //   188: putfield 232	com/unity3d/player/UnityPlayer:R	F
    //   191: aload_0
    //   192: fconst_0
    //   193: putfield 234	com/unity3d/player/UnityPlayer:S	F
    //   196: aload_0
    //   197: aconst_null
    //   198: putfield 236	com/unity3d/player/UnityPlayer:T	Ljava/lang/reflect/Method;
    //   201: aload_0
    //   202: new 28	com/unity3d/player/UnityPlayer$18
    //   205: dup
    //   206: aload_0
    //   207: invokespecial 237	com/unity3d/player/UnityPlayer$18:<init>	(Lcom/unity3d/player/UnityPlayer;)V
    //   210: putfield 239	com/unity3d/player/UnityPlayer:V	Landroid/content/BroadcastReceiver;
    //   213: aload_0
    //   214: iconst_0
    //   215: putfield 241	com/unity3d/player/UnityPlayer:W	Z
    //   218: aload_0
    //   219: iconst_1
    //   220: putfield 243	com/unity3d/player/UnityPlayer:Z	I
    //   223: aload_0
    //   224: iconst_1
    //   225: putfield 245	com/unity3d/player/UnityPlayer:aa	Z
    //   228: aload_0
    //   229: aload_1
    //   230: putfield 247	com/unity3d/player/UnityPlayer:g	Landroid/content/ContextWrapper;
    //   233: aload_0
    //   234: ldc -7
    //   236: invokestatic 255	java/lang/Class:forName	(Ljava/lang/String;)Ljava/lang/Class;
    //   239: aload_0
    //   240: getfield 247	com/unity3d/player/UnityPlayer:g	Landroid/content/ContextWrapper;
    //   243: invokevirtual 261	java/lang/Object:getClass	()Ljava/lang/Class;
    //   246: invokevirtual 265	java/lang/Class:isAssignableFrom	(Ljava/lang/Class;)Z
    //   249: putfield 267	com/unity3d/player/UnityPlayer:h	Z
    //   252: getstatic 272	android/os/Build$VERSION:SDK_INT	I
    //   255: bipush 9
    //   257: if_icmplt +13 -> 270
    //   260: new 274	com/unity3d/player/c
    //   263: dup
    //   264: aload_1
    //   265: invokespecial 276	com/unity3d/player/c:<init>	(Landroid/content/ContextWrapper;)V
    //   268: astore 4
    //   270: aload_0
    //   271: aload 4
    //   273: putfield 278	com/unity3d/player/UnityPlayer:d	Lcom/unity3d/player/e;
    //   276: aload_0
    //   277: getfield 247	com/unity3d/player/UnityPlayer:g	Landroid/content/ContextWrapper;
    //   280: invokevirtual 284	android/content/ContextWrapper:getPackageName	()Ljava/lang/String;
    //   283: astore 4
    //   285: aload_1
    //   286: instanceof 286
    //   289: ifeq +52 -> 341
    //   292: aload_1
    //   293: checkcast 286	android/app/Activity
    //   296: putstatic 141	com/unity3d/player/UnityPlayer:currentActivity	Landroid/app/Activity;
    //   299: aload_0
    //   300: getstatic 141	com/unity3d/player/UnityPlayer:currentActivity	Landroid/app/Activity;
    //   303: invokevirtual 290	android/app/Activity:getIntent	()Landroid/content/Intent;
    //   306: invokevirtual 296	android/content/Intent:getExtras	()Landroid/os/Bundle;
    //   309: putfield 167	com/unity3d/player/UnityPlayer:e	Landroid/os/Bundle;
    //   312: aload_1
    //   313: iconst_3
    //   314: anewarray 298	java/lang/String
    //   317: dup
    //   318: iconst_0
    //   319: ldc_w 300
    //   322: aastore
    //   323: dup
    //   324: iconst_1
    //   325: ldc_w 302
    //   328: aastore
    //   329: dup
    //   330: iconst_2
    //   331: getstatic 141	com/unity3d/player/UnityPlayer:currentActivity	Landroid/app/Activity;
    //   334: invokevirtual 305	android/app/Activity:getLocalClassName	()Ljava/lang/String;
    //   337: aastore
    //   338: invokestatic 311	com/unity3d/player/UnityPlayerProxyActivity:copyPlayerPrefs	(Landroid/content/Context;[Ljava/lang/String;)V
    //   341: aload_0
    //   342: aload_1
    //   343: aload 4
    //   345: iconst_0
    //   346: invokevirtual 315	android/content/ContextWrapper:getSharedPreferences	(Ljava/lang/String;I)Landroid/content/SharedPreferences;
    //   349: putfield 169	com/unity3d/player/UnityPlayer:f	Landroid/content/SharedPreferences;
    //   352: aload_0
    //   353: invokespecial 317	com/unity3d/player/UnityPlayer:b	()V
    //   356: ldc_w 319
    //   359: aload_0
    //   360: getfield 247	com/unity3d/player/UnityPlayer:g	Landroid/content/ContextWrapper;
    //   363: invokevirtual 322	android/content/ContextWrapper:getPackageCodePath	()Ljava/lang/String;
    //   366: invokestatic 328	java/lang/System:setProperty	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   369: pop
    //   370: ldc_w 330
    //   373: invokestatic 334	java/lang/System:loadLibrary	(Ljava/lang/String;)V
    //   376: getstatic 147	com/unity3d/player/UnityPlayer:Q	Lcom/unity3d/player/b;
    //   379: invokevirtual 337	com/unity3d/player/b:a	()I
    //   382: istore_2
    //   383: iload_2
    //   384: iconst_2
    //   385: iand
    //   386: ifeq +85 -> 471
    //   389: iload_2
    //   390: sipush 128
    //   393: iand
    //   394: ifeq +10 -> 404
    //   397: iload_2
    //   398: bipush 8
    //   400: iand
    //   401: ifne +70 -> 471
    //   404: bipush 6
    //   406: ldc_w 339
    //   409: invokestatic 345	com/unity3d/player/f:Log	(ILjava/lang/String;)V
    //   412: aload_0
    //   413: aload_0
    //   414: getfield 247	com/unity3d/player/UnityPlayer:g	Landroid/content/ContextWrapper;
    //   417: invokevirtual 322	android/content/ContextWrapper:getPackageCodePath	()Ljava/lang/String;
    //   420: invokespecial 348	com/unity3d/player/UnityPlayer:nativeFile	(Ljava/lang/String;)V
    //   423: aload_0
    //   424: new 350	com/unity3d/player/h
    //   427: dup
    //   428: aload_1
    //   429: aload_0
    //   430: invokespecial 353	com/unity3d/player/h:<init>	(Landroid/content/Context;Lcom/unity3d/player/UnityPlayer;)V
    //   433: putfield 355	com/unity3d/player/UnityPlayer:z	Lcom/unity3d/player/h;
    //   436: iconst_m1
    //   437: aload_0
    //   438: getfield 247	com/unity3d/player/UnityPlayer:g	Landroid/content/ContextWrapper;
    //   441: new 298	java/lang/String
    //   444: dup
    //   445: ldc_w 357
    //   448: invokevirtual 361	java/lang/String:getBytes	()[B
    //   451: invokestatic 366	com/unity3d/player/b/a:b	([B)[B
    //   454: invokespecial 369	java/lang/String:<init>	([B)V
    //   457: invokevirtual 373	android/content/ContextWrapper:checkCallingOrSelfPermission	(Ljava/lang/String;)I
    //   460: if_icmpne +58 -> 518
    //   463: iconst_1
    //   464: istore_3
    //   465: aload_0
    //   466: iload_3
    //   467: putfield 199	com/unity3d/player/UnityPlayer:G	Z
    //   470: return
    //   471: iconst_1
    //   472: putstatic 143	com/unity3d/player/UnityPlayer:o	Z
    //   475: ldc_w 375
    //   478: invokestatic 334	java/lang/System:loadLibrary	(Ljava/lang/String;)V
    //   481: goto -69 -> 412
    //   484: astore 4
    //   486: iconst_5
    //   487: new 377	java/lang/StringBuilder
    //   490: dup
    //   491: invokespecial 378	java/lang/StringBuilder:<init>	()V
    //   494: ldc_w 380
    //   497: invokevirtual 384	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   500: aload 4
    //   502: invokevirtual 387	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   505: invokevirtual 390	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   508: invokestatic 345	com/unity3d/player/f:Log	(ILjava/lang/String;)V
    //   511: iconst_0
    //   512: putstatic 143	com/unity3d/player/UnityPlayer:o	Z
    //   515: goto -103 -> 412
    //   518: iconst_0
    //   519: istore_3
    //   520: goto -55 -> 465
    //   523: astore_1
    //   524: aload_0
    //   525: iconst_1
    //   526: putfield 199	com/unity3d/player/UnityPlayer:G	Z
    //   529: return
    //   530: astore 5
    //   532: goto -280 -> 252
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	535	0	this	UnityPlayer
    //   0	535	1	paramContextWrapper	ContextWrapper
    //   382	19	2	i1	int
    //   464	56	3	bool	boolean
    //   1	343	4	localObject	Object
    //   484	17	4	localUnsatisfiedLinkError	UnsatisfiedLinkError
    //   530	1	5	localException	Exception
    // Exception table:
    //   from	to	target	type
    //   475	481	484	java/lang/UnsatisfiedLinkError
    //   436	463	523	java/lang/Exception
    //   465	470	523	java/lang/Exception
    //   233	252	530	java/lang/Exception
  }
  
  public static native void UnitySendMessage(String paramString1, String paramString2, String paramString3);
  
  private String a(String paramString, File paramFile)
  {
    Object localObject = Environment.getExternalStorageState();
    if ((this.g.checkCallingOrSelfPermission("android.permission.WRITE_EXTERNAL_STORAGE") == 0) && ("mounted".equals(localObject)))
    {
      localObject = Environment.getExternalStorageDirectory();
      paramString = new File(((File)localObject).getPath() + "/Android/data/" + this.g.getPackageName() + paramString);
      if ((paramString.exists()) || (paramString.mkdirs())) {
        return paramString.getPath();
      }
    }
    return paramFile.getPath();
  }
  
  private void a(final int paramInt, boolean paramBoolean)
  {
    if (this.h) {
      nativeForwardEventsToDalvik(new g((Activity)this.g).a());
    }
    initJni();
    this.j = ((PowerManager)this.g.getSystemService("power")).newWakeLock(26, "DoNotDimScreen");
    new PlayerPrefs(this.f);
    nativeInitWWW(WWW.class);
    Object localObject;
    if (this.i == null)
    {
      localObject = new q(this.g, paramInt, paramBoolean, false)
      {
        protected final void init(int paramAnonymousInt1, boolean paramAnonymousBoolean, int paramAnonymousInt2, int paramAnonymousInt3, int paramAnonymousInt4, int paramAnonymousInt5)
        {
          if (UnityPlayer.b(UnityPlayer.this) == -1) {
            UnityPlayer.a(UnityPlayer.this, UnityPlayer.c(UnityPlayer.this).getInt("default_aa", 0));
          }
          boolean bool;
          if (!UnityPlayer.d(UnityPlayer.this))
          {
            UnityPlayer localUnityPlayer = UnityPlayer.this;
            if (UnityPlayer.this.canUse32bitDisplayBuffer())
            {
              bool = UnityPlayer.c(UnityPlayer.this).getBoolean("32bit_display", false);
              UnityPlayer.a(localUnityPlayer, bool);
            }
          }
          else
          {
            if (!UnityPlayer.d(UnityPlayer.this)) {
              break label138;
            }
            paramAnonymousInt2 = 32;
            label94:
            if (!UnityPlayer.c(UnityPlayer.this).getBoolean("24bit_depth", false)) {
              break label144;
            }
          }
          label138:
          label144:
          for (paramAnonymousInt3 = 24;; paramAnonymousInt3 = 16)
          {
            super.init(paramAnonymousInt1, paramAnonymousBoolean, paramAnonymousInt2, paramAnonymousInt3, 0, UnityPlayer.b(UnityPlayer.this));
            return;
            bool = false;
            break;
            paramAnonymousInt2 = 16;
            break label94;
          }
        }
        
        public final boolean onGenericMotionEvent(MotionEvent paramAnonymousMotionEvent)
        {
          return jdField_this.onTouchEvent(paramAnonymousMotionEvent);
        }
        
        public final boolean onKeyPreIme(int paramAnonymousInt, KeyEvent paramAnonymousKeyEvent)
        {
          return (jdField_this.onKeyPreIme(paramAnonymousInt, paramAnonymousKeyEvent)) || (super.onKeyPreIme(paramAnonymousInt, paramAnonymousKeyEvent));
        }
      };
      ((q)localObject).setFocusable(true);
      ((q)localObject).setFocusableInTouchMode(true);
      this.i = ((UnityGL)localObject);
    }
    this.i.setRenderer(this);
    this.k = ((SensorManager)this.g.getSystemService("sensor"));
    this.l = ((WindowManager)this.g.getSystemService("window"));
    final int i1 = getSettings().getInt("splash_mode");
    this.i.queueEvent(new Runnable()
    {
      public final void run()
      {
        UnityPlayer.a(UnityPlayer.this, paramInt, i1);
      }
    });
    nativeSetExtras(this.e);
    if ((this.d != null) && (this.h))
    {
      localObject = this.d.b();
      if (localObject != null) {
        nativeEnableTouchpad(((RectF)localObject).width(), ((RectF)localObject).height());
      }
    }
    resume();
    windowFocusChanged(true);
  }
  
  private void a(Runnable paramRunnable)
  {
    if ((this.g instanceof Activity))
    {
      ((Activity)this.g).runOnUiThread(paramRunnable);
      return;
    }
    f.Log(5, "Not running Unity from an Activity; ignored...");
  }
  
  private void a(boolean paramBoolean)
  {
    if (!this.W) {
      return;
    }
    if (paramBoolean)
    {
      this.k.registerListener(this.z, this.k.getDefaultSensor(4), this.Z);
      this.k.registerListener(this.z, this.k.getDefaultSensor(9), this.Z);
      this.k.registerListener(this.z, this.k.getDefaultSensor(10), this.Z);
      this.k.registerListener(this.z, this.k.getDefaultSensor(11), this.Z);
      return;
    }
    this.k.unregisterListener(this.z, this.k.getDefaultSensor(4));
    this.k.unregisterListener(this.z, this.k.getDefaultSensor(9));
    this.k.unregisterListener(this.z, this.k.getDefaultSensor(10));
    this.k.unregisterListener(this.z, this.k.getDefaultSensor(11));
  }
  
  private boolean a(final int paramInt, KeyEvent paramKeyEvent)
  {
    final boolean bool = false;
    if (!this.q) {
      return true;
    }
    if (this.w) {
      return false;
    }
    if ((paramInt == 25) || (paramInt == 24))
    {
      if (paramKeyEvent.getAction() == 0) {
        return super.onKeyDown(paramInt, paramKeyEvent);
      }
      return super.onKeyUp(paramInt, paramKeyEvent);
    }
    if ((paramInt == 4) && (paramKeyEvent.getMetaState() == 2)) {
      paramInt = 101;
    }
    for (;;)
    {
      final int i1 = paramKeyEvent.getUnicodeChar(paramKeyEvent.getMetaState());
      if (paramKeyEvent.getAction() == 0) {
        bool = true;
      }
      queueEvent(new Runnable()
      {
        public final void run()
        {
          UnityPlayer.a(UnityPlayer.this, paramInt, i1, bool, this.d, this.e);
        }
      });
      return true;
    }
  }
  
  private boolean a(MotionEvent paramMotionEvent)
  {
    int i3 = paramMotionEvent.getPointerCount();
    int i1 = 0;
    final int i2;
    label49:
    final float f2;
    final float f3;
    final float f4;
    final float f5;
    if (i1 < i3) {
      if (i1 == 0)
      {
        i2 = paramMotionEvent.getAction();
        if (i1 != (i2 & 0xFF) >> 8) {
          break label206;
        }
        i2 &= 0xFF;
        f2 = paramMotionEvent.getX(i1);
        f3 = paramMotionEvent.getY(i1);
        f4 = this.R;
        f5 = this.S;
        if (Build.VERSION.SDK_INT < 12) {
          break label214;
        }
      }
    }
    for (;;)
    {
      label206:
      try
      {
        if (this.T == null) {
          this.T = paramMotionEvent.getClass().getDeclaredMethod("getAxisValue", new Class[] { Integer.TYPE, Integer.TYPE });
        }
        if (this.T == null) {
          break label221;
        }
        f1 = ((Float)this.T.invoke(paramMotionEvent, new Object[] { Integer.valueOf(9), Integer.valueOf(i1) })).floatValue();
        queueEvent(new Runnable()
        {
          public final void run()
          {
            int i;
            int j;
            float f1;
            switch (i2)
            {
            case 3: 
            case 4: 
            case 5: 
            case 6: 
            default: 
              i = 0;
              j = 0;
              UnityPlayer.a(UnityPlayer.this, j, f2, f3, i);
              float f2 = UnityPlayer.n(UnityPlayer.this);
              float f3 = f2;
              float f4 = f3;
              float f5 = f2;
              float f6 = f4;
              float f7 = -(f3 - f5);
              if (i2 == 8)
              {
                f1 = f1;
                label135:
                UnityPlayer.a(UnityPlayer.this, f5 - f6, f7, f1);
                UnityPlayer.a(UnityPlayer.this, f3, f2 - f4);
                if (i2 != 0) {
                  break label225;
                }
                UnityPlayer.d(UnityPlayer.this, true);
              }
              break;
            }
            label225:
            while (i2 != 1)
            {
              return;
              i = this.b;
              j = 0;
              break;
              i = this.b;
              j = 1;
              break;
              j = 2;
              i = 0;
              break;
              j = 3;
              i = 0;
              break;
              f1 = 0.0F;
              break label135;
            }
            UnityPlayer.d(UnityPlayer.this, false);
          }
        });
        this.R = f2;
        this.S = f3;
        i1 += 1;
      }
      catch (Exception localException) {}
      i2 = 2;
      break label49;
      label214:
      final float f1 = 0.0F;
      continue;
      return true;
      label221:
      f1 = 0.0F;
    }
  }
  
  private void b()
  {
    for (;;)
    {
      XmlPullParser localXmlPullParser;
      try
      {
        localObject1 = this.g.getAssets().open("bin/Data/settings.xml");
        localObject2 = XmlPullParserFactory.newInstance();
        ((XmlPullParserFactory)localObject2).setNamespaceAware(true);
        localXmlPullParser = ((XmlPullParserFactory)localObject2).newPullParser();
        localXmlPullParser.setInput((InputStream)localObject1, null);
        i1 = localXmlPullParser.getEventType();
        localObject1 = null;
        localObject4 = null;
        if (i1 == 1) {
          break label244;
        }
        if (i1 != 2) {
          break label321;
        }
        localObject3 = localXmlPullParser.getName();
        i1 = 0;
        if (i1 >= localXmlPullParser.getAttributeCount()) {
          break label316;
        }
        if (!localXmlPullParser.getAttributeName(i1).equalsIgnoreCase("name")) {
          break label309;
        }
        localObject1 = localXmlPullParser.getAttributeValue(i1);
      }
      catch (Exception localException)
      {
        Object localObject1;
        f.Log(6, "Unable to locate player settings. " + localException.getLocalizedMessage());
        c();
      }
      int i1 = localXmlPullParser.next();
      localObject1 = localObject2;
      Object localObject4 = localObject3;
      continue;
      Object localObject2 = localObject1;
      Object localObject3 = localObject4;
      if (i1 == 4)
      {
        localObject2 = localObject1;
        localObject3 = localObject4;
        if (localObject1 != null)
        {
          if (localObject4.equalsIgnoreCase("integer")) {
            this.H.putInt((String)localObject1, Integer.parseInt(localXmlPullParser.getText()));
          } else if (localObject4.equalsIgnoreCase("string")) {
            this.H.putString((String)localObject1, localXmlPullParser.getText());
          } else {
            label244:
            if (localObject4.equalsIgnoreCase("bool"))
            {
              this.H.putBoolean(localException, Boolean.parseBoolean(localXmlPullParser.getText()));
            }
            else if (localObject4.equalsIgnoreCase("float"))
            {
              this.H.putFloat(localException, Float.parseFloat(localXmlPullParser.getText()));
              break label334;
              label309:
              i1 += 1;
              continue;
              label316:
              localObject2 = localException;
              continue;
              label321:
              if (i1 != 3) {
                continue;
              }
              localObject3 = null;
              localObject2 = localException;
              continue;
            }
          }
          label334:
          localObject2 = null;
          localObject3 = localObject4;
        }
      }
    }
  }
  
  private void b(boolean paramBoolean)
  {
    if (!this.aa) {
      return;
    }
    if (paramBoolean)
    {
      this.k.registerListener(this.z, this.k.getDefaultSensor(2), 1);
      return;
    }
    this.k.unregisterListener(this.z, this.k.getDefaultSensor(2));
  }
  
  private boolean b(final MotionEvent paramMotionEvent)
  {
    if (Build.VERSION.SDK_INT < 12) {
      return true;
    }
    if (this.T == null) {}
    try
    {
      this.T = paramMotionEvent.getClass().getDeclaredMethod("getAxisValue", new Class[] { Integer.TYPE, Integer.TYPE });
      queueEvent(new Runnable()
      {
        public final void run()
        {
          int k = paramMotionEvent.getPointerCount();
          int i = 0;
          while (i < k)
          {
            int j = paramMotionEvent.getDeviceId();
            Integer[] arrayOfInteger = UnityPlayer.b(UnityPlayer.this, j);
            if (arrayOfInteger != null)
            {
              int m = arrayOfInteger[0].intValue();
              j = 1;
              for (;;)
              {
                if (j < arrayOfInteger.length) {
                  try
                  {
                    float f = ((Float)UnityPlayer.o(UnityPlayer.this).invoke(paramMotionEvent, new Object[] { arrayOfInteger[j], Integer.valueOf(i) })).floatValue();
                    UnityPlayer.a(UnityPlayer.this, m + 1, j - 1, f);
                    j += 1;
                  }
                  catch (Exception localException)
                  {
                    for (;;)
                    {
                      localException.printStackTrace();
                    }
                  }
                }
              }
            }
            i += 1;
          }
        }
      });
      return true;
    }
    catch (Exception paramMotionEvent)
    {
      paramMotionEvent.printStackTrace();
    }
    return true;
  }
  
  private void c()
  {
    if (((this.g instanceof Activity)) && (!((Activity)this.g).isFinishing())) {
      ((Activity)this.g).finish();
    }
  }
  
  private void d()
  {
    if ((!this.L) || (this.J) || (this.K)) {}
    do
    {
      return;
      this.K = true;
      if ((this.i instanceof q)) {
        addView((View)this.i);
      }
      if (this.q) {
        this.i.queueEvent(new Runnable()
        {
          public final void run()
          {
            UnityPlayer.g(UnityPlayer.this);
          }
        });
      }
    } while ((!p) || (this.m != null));
    this.m = new FMODAudioDevice();
    this.m.start();
  }
  
  private final native void initJni();
  
  private final native int nativeActivityIndicatorStyle();
  
  private final native void nativeDone();
  
  private final native void nativeEnableTouchpad(float paramFloat1, float paramFloat2);
  
  private final native void nativeFile(String paramString);
  
  private final native void nativeFocusChanged(boolean paramBoolean);
  
  private final native String nativeGetGLContext();
  
  private final native String nativeGetGLScreen();
  
  private final native int nativeGetLicensePolicy();
  
  private final native void nativeInit(int paramInt1, int paramInt2);
  
  private final native void nativeInitWWW(Class paramClass);
  
  private final native boolean nativeIsAutorotationOn();
  
  private final native void nativeJoyButtonState(int paramInt1, int paramInt2, boolean paramBoolean);
  
  private final native void nativeKeyState(int paramInt1, int paramInt2, boolean paramBoolean, int paramInt3, int paramInt4);
  
  private final native boolean nativePause();
  
  private final native void nativeQueueGUIEvent(int paramInt1, float paramFloat1, float paramFloat2, int paramInt2);
  
  private final native void nativeRecreateGfxState();
  
  private final native boolean nativeRender();
  
  private final native boolean nativeRequested32bitDisplayBuffer();
  
  private final native int nativeRequestedAA();
  
  private final native void nativeResize(int paramInt1, int paramInt2, int paramInt3, int paramInt4);
  
  private final native void nativeResume();
  
  private final native void nativeSetExtras(Bundle paramBundle);
  
  private final native void nativeSetInputString(String paramString);
  
  private final native void nativeSetJoystickPosition(int paramInt1, int paramInt2, float paramFloat);
  
  private final native void nativeSetMouseButton(int paramInt, boolean paramBoolean);
  
  private final native void nativeSetMouseDelta(float paramFloat1, float paramFloat2, float paramFloat3);
  
  private final native void nativeSetMousePosition(float paramFloat1, float paramFloat2);
  
  private final native void nativeSetTouchDeltaY(float paramFloat);
  
  private final native void nativeSoftInputClosed();
  
  private final native void nativeTouch(int paramInt1, float paramFloat1, float paramFloat2, int paramInt2, long paramLong, int paramInt3);
  
  private final native void nativeVideoFrameCallback(int paramInt1, byte[] paramArrayOfByte, int paramInt2, int paramInt3);
  
  private final native void unityAndroidInit(String paramString1, String paramString2);
  
  private final native void unityAndroidPrepareGameLoop();
  
  protected boolean Location_IsServiceEnabledByUser()
  {
    return this.z.a();
  }
  
  protected void Location_SetDesiredAccuracy(float paramFloat)
  {
    this.z.b(paramFloat);
  }
  
  protected void Location_SetDistanceFilter(float paramFloat)
  {
    this.z.a(paramFloat);
  }
  
  protected void Location_StartUpdatingLocation()
  {
    this.z.b();
  }
  
  protected void Location_StopUpdatingLocation()
  {
    this.z.c();
  }
  
  protected boolean canUse32bitDisplayBuffer()
  {
    return q.b();
  }
  
  protected void closeCamera(int paramInt)
  {
    Iterator localIterator = this.I.values().iterator();
    while (localIterator.hasNext())
    {
      a localA = (a)localIterator.next();
      if (localA.e() == paramInt)
      {
        localA.f();
        this.I.remove(localA.a());
      }
    }
  }
  
  public void configurationChanged(Configuration paramConfiguration)
  {
    if ((this.i instanceof SurfaceView)) {
      ((SurfaceView)this.i).getHolder().setSizeFromLayout();
    }
    if ((this.c) && (paramConfiguration.hardKeyboardHidden == 2)) {
      ((InputMethodManager)this.g.getSystemService("input_method")).toggleSoftInput(0, 1);
    }
  }
  
  protected boolean dispatchTouchEvent(final int paramInt1, int paramInt2, final int paramInt3, final float paramFloat1, final float paramFloat2, final long paramLong, int paramInt4)
  {
    if (!this.q) {
      return true;
    }
    int i1;
    if (!this.h)
    {
      i1 = paramInt2 & 0xFF;
      if (paramInt1 != (0xFF00 & paramInt2) >> 8) {
        break label62;
      }
    }
    label62:
    for (paramInt1 = i1;; paramInt1 = 2)
    {
      queueEvent(new Runnable()
      {
        public final void run()
        {
          UnityPlayer.a(UnityPlayer.this, paramInt3, paramFloat1, paramFloat2, paramInt1, paramLong, this.f);
        }
      });
      return true;
    }
  }
  
  protected void forwardMotionEventToDalvik(long paramLong1, long paramLong2, int paramInt1, int paramInt2, int[] paramArrayOfInt, float[] paramArrayOfFloat1, int paramInt3, float paramFloat1, float paramFloat2, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long[] paramArrayOfLong, float[] paramArrayOfFloat2)
  {
    if (this.d != null) {
      this.d.a(paramLong1, paramLong2, paramInt1, paramInt2, paramArrayOfInt, paramArrayOfFloat1, paramInt3, paramFloat1, paramFloat2, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramArrayOfLong, paramArrayOfFloat2);
    }
  }
  
  protected String getCPUType()
  {
    return Q.b();
  }
  
  protected String getCacheDir()
  {
    return a("/cache", this.g.getCacheDir());
  }
  
  protected int[] getConnectedJoysticks()
  {
    if (Build.VERSION.SDK_INT < 9) {
      return null;
    }
    int i2;
    int[] arrayOfInt2;
    label330:
    for (;;)
    {
      Object localObject1;
      Object localObject2;
      int i3;
      try
      {
        localObject1 = Class.forName("android.view.InputDevice");
        int[] arrayOfInt1 = (int[])((Class)localObject1).getDeclaredMethod("getDeviceIds", new Class[0]).invoke(localObject1, new Object[0]);
        Arrays.sort(arrayOfInt1);
        i2 = 0;
        i1 = 0;
        if (i2 < arrayOfInt1.length)
        {
          localObject2 = ((Class)localObject1).getMethod("getDevice", new Class[] { Integer.TYPE }).invoke(localObject1, new Object[] { Integer.valueOf(arrayOfInt1[i2]) });
          if (localObject2 == null) {
            break label348;
          }
          if ((((Integer)localObject2.getClass().getMethod("getSources", new Class[0]).invoke(localObject2, new Object[0])).intValue() & 0x1000010) != 16777232) {
            break label340;
          }
          i1 += 1;
          break;
        }
        localObject1 = new int[i1];
        i2 = 0;
        i1 = 0;
        if (i2 < arrayOfInt1.length)
        {
          if (arrayOfInt1[i2] == -1) {
            break label330;
          }
          i3 = i1 + 1;
          localObject1[i1] = arrayOfInt1[i2];
          i1 = i3;
          i2 += 1;
          continue;
        }
        this.U = new LinkedHashMap();
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
        return null;
      }
      int i4 = localObject1.length;
      int i1 = 0;
      for (i2 = 0; i1 < i4; i2 = i3)
      {
        int i5 = localObject1[i1];
        arrayOfInt2 = getJoystickAxes(i5);
        i3 = i2;
        if (arrayOfInt2 != null)
        {
          localObject2 = new Integer[arrayOfInt2.length + 1];
          localObject2[0] = Integer.valueOf(i2);
          i3 = 0;
          while (i3 < arrayOfInt2.length)
          {
            localObject2[(i3 + 1)] = Integer.valueOf(arrayOfInt2[i3]);
            i3 += 1;
          }
          this.U.put(Integer.valueOf(i5), localObject2);
          i3 = i2 + 1;
        }
        i1 += 1;
      }
      return localObject1;
    }
    for (;;)
    {
      i2 += 1;
      break;
      label340:
      arrayOfInt2[i2] = -1;
      continue;
      label348:
      arrayOfInt2[i2] = -1;
    }
  }
  
  protected int getDeviceOrientation()
  {
    int i3 = 9;
    int i4 = 1;
    int i5 = this.l.getDefaultDisplay().getOrientation();
    int i1;
    int i2;
    if (getResources().getConfiguration().orientation == 2)
    {
      i1 = 1;
      if (Build.VERSION.SDK_INT < 9) {
        break label76;
      }
      i2 = 8;
      label47:
      if (Build.VERSION.SDK_INT < 9) {
        break label81;
      }
      label55:
      if (i5 != 0) {
        break label86;
      }
      i2 = i4;
      if (i1 != 0) {
        i2 = 0;
      }
    }
    label76:
    label81:
    label86:
    do
    {
      do
      {
        return i2;
        i1 = 0;
        break;
        i2 = 0;
        break label47;
        i3 = 1;
        break label55;
        if (i5 == 1)
        {
          if (i1 != 0) {
            return 0;
          }
          return i3;
        }
        if (i5 == 2)
        {
          if (i1 != 0) {
            return i2;
          }
          return i3;
        }
        i2 = i4;
      } while (i5 != 3);
      i2 = i4;
    } while (i1 == 0);
    return i3;
  }
  
  protected String getDeviceUniqueIdentifier()
  {
    try
    {
      if (this.B == null) {
        this.B = ((TelephonyManager)this.g.getSystemService("phone")).getDeviceId();
      }
      String str = this.B;
      if (str != null)
      {
        int i1 = str.length();
        if (i1 != 0) {
          return str;
        }
      }
    }
    catch (Exception localException)
    {
      f.Log(5, "android.permission.READ_PHONE_STATE not available?");
    }
    return Settings.Secure.getString(this.g.getContentResolver(), "android_id");
  }
  
  protected String getFilesDir()
  {
    return a("/files", this.g.getFilesDir());
  }
  
  protected int getGyroUpdateDelay()
  {
    return this.Z;
  }
  
  protected int getInternetReachability()
  {
    try
    {
      if (this.C == null) {
        this.C = ((ConnectivityManager)this.g.getSystemService("connectivity")).getActiveNetworkInfo();
      }
      NetworkInfo localNetworkInfo = this.C;
      if (localNetworkInfo == null) {
        return 0;
      }
      if (!localNetworkInfo.isConnected()) {
        return 0;
      }
      int i1 = localNetworkInfo.getType();
      return i1 + 1;
    }
    catch (Exception localException)
    {
      f.Log(5, "android.permission.ACCESS_NETWORK_STATE not available?");
    }
    return 0;
  }
  
  protected boolean getIsGyroAvailable()
  {
    return this.g.getPackageManager().hasSystemFeature("android.hardware.sensor.gyroscope");
  }
  
  protected boolean getIsGyroEnabled()
  {
    return this.W;
  }
  
  protected int[] getJoystickAxes(int paramInt)
  {
    int i1 = 0;
    if (Build.VERSION.SDK_INT < 9) {
      return null;
    }
    for (;;)
    {
      int[] arrayOfInt;
      try
      {
        localObject1 = Class.forName("android.view.InputDevice");
        localObject1 = ((Class)localObject1).getMethod("getDevice", new Class[] { Integer.TYPE }).invoke(localObject1, new Object[] { Integer.valueOf(paramInt) });
        if (localObject1 == null) {
          break label219;
        }
        localObject1 = (List)localObject1.getClass().getMethod("getMotionRanges", new Class[0]).invoke(localObject1, new Object[0]);
        arrayOfInt = new int[((List)localObject1).size()];
        localObject1 = ((List)localObject1).iterator();
        paramInt = 0;
        if (((Iterator)localObject1).hasNext())
        {
          Object localObject3 = ((Iterator)localObject1).next();
          if ((((Integer)localObject3.getClass().getMethod("getSource", new Class[0]).invoke(localObject3, new Object[0])).intValue() & 0x1000010) != 16777232) {
            continue;
          }
          arrayOfInt[paramInt] = ((Integer)localObject3.getClass().getMethod("getAxis", new Class[0]).invoke(localObject3, new Object[0])).intValue();
          paramInt += 1;
          continue;
        }
        localObject1 = new int[paramInt];
      }
      catch (Exception localException)
      {
        Object localObject1;
        localException.printStackTrace();
        return null;
      }
      Arrays.sort((int[])localObject1);
      return localObject1;
      label219:
      Object localObject2 = null;
      continue;
      while (i1 < paramInt)
      {
        localObject2[i1] = arrayOfInt[i1];
        i1 += 1;
      }
    }
  }
  
  protected String getJoystickName(int paramInt)
  {
    if (Build.VERSION.SDK_INT < 9) {
      return null;
    }
    for (;;)
    {
      try
      {
        Object localObject1 = Class.forName("android.view.InputDevice");
        localObject1 = ((Class)localObject1).getMethod("getDevice", new Class[] { Integer.TYPE }).invoke(localObject1, new Object[] { Integer.valueOf(paramInt) });
        if (localObject1 != null)
        {
          localObject1 = (String)localObject1.getClass().getMethod("getName", new Class[0]).invoke(localObject1, new Object[0]);
          return localObject1;
        }
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
        return null;
      }
      Object localObject2 = null;
    }
  }
  
  protected int getNumCameras()
  {
    if (this.d != null) {
      return this.d.a();
    }
    return 1;
  }
  
  protected int getOrientation()
  {
    if (!(this.g instanceof Activity)) {
      return 1;
    }
    return ((Activity)this.g).getRequestedOrientation();
  }
  
  protected String getPackageName()
  {
    return this.g.getPackageName();
  }
  
  protected float getScreenDPI()
  {
    if (!(this.g instanceof Activity)) {
      return 0.0F;
    }
    Activity localActivity = (Activity)this.g;
    DisplayMetrics localDisplayMetrics = new DisplayMetrics();
    localActivity.getWindowManager().getDefaultDisplay().getMetrics(localDisplayMetrics);
    return (localDisplayMetrics.xdpi + localDisplayMetrics.ydpi) * 0.5F;
  }
  
  protected int getScreenTimeout()
  {
    return Settings.System.getInt(this.g.getContentResolver(), "screen_off_timeout", 15000) / 1000;
  }
  
  public Bundle getSettings()
  {
    return this.H;
  }
  
  protected int getTotalMemory()
  {
    return Q.c();
  }
  
  public View getView()
  {
    return this;
  }
  
  protected boolean hasWakeLock()
  {
    return this.j.isHeld();
  }
  
  protected void hideSoftInput()
  {
    a(new Runnable()
    {
      public final void run()
      {
        if (UnityPlayer.q(UnityPlayer.this))
        {
          ((InputMethodManager)UnityPlayer.m(UnityPlayer.this).getSystemService("input_method")).toggleSoftInput(1, 0);
          UnityPlayer.e(UnityPlayer.this, false);
        }
        while (UnityPlayer.this.a == null) {
          return;
        }
        UnityPlayer.this.a.dismiss();
        UnityPlayer.this.a = null;
      }
    });
  }
  
  public void init(final int paramInt, final boolean paramBoolean)
  {
    AlertDialog localAlertDialog;
    if (!o)
    {
      localAlertDialog = new AlertDialog.Builder(this.g).setTitle("Failure to initialize!").setPositiveButton("OK", new DialogInterface.OnClickListener()
      {
        public final void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
        {
          UnityPlayer.a(UnityPlayer.this);
        }
      }).setMessage("Your hardware does not support this application, sorry!").create();
      localAlertDialog.setCancelable(false);
      localAlertDialog.show();
      return;
    }
    if ((Build.MANUFACTURER.equalsIgnoreCase("samsung")) && (Build.VERSION.SDK_INT < 8) && ((Q.a() & 0x10) != 0))
    {
      o = false;
      localAlertDialog = new AlertDialog.Builder(this.g).setTitle("Old Android OS detected!").setPositiveButton("OK", new DialogInterface.OnClickListener()
      {
        public final void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
        {
          UnityPlayer.a();
          UnityPlayer.a(UnityPlayer.this, paramInt, paramBoolean);
        }
      }).setMessage("This application requires at least Android OS version 2.2 on Samsung devices. Your device seems to be running an older OS version.\nPlease contact your carrier or the hardware vendor and ask them how to install a more recent version. It is a simple process that your provider's customer service can help you with.").create();
      localAlertDialog.setCancelable(false);
      localAlertDialog.show();
      return;
    }
    a(paramInt, paramBoolean);
  }
  
  protected int[] initCamera(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    try
    {
      a localA = new a(paramInt1, paramInt2, paramInt3, paramInt4);
      this.I.put(localA.a(), localA);
      localA.a(this);
      localA.a().startPreview();
      return new int[] { localA.c(), localA.d() };
    }
    catch (Exception localException)
    {
      f.Log(6, "Camera failed to open: " + localException.getLocalizedMessage());
    }
    return null;
  }
  
  protected boolean isCameraFrontFacing(int paramInt)
  {
    if (this.d != null) {
      return this.d.a(paramInt);
    }
    return false;
  }
  
  protected boolean isCompassAvailable()
  {
    return this.g.getPackageManager().hasSystemFeature("android.hardware.sensor.compass");
  }
  
  protected boolean isCompassEnabled()
  {
    return this.aa;
  }
  
  protected boolean loadLibrary(String paramString)
  {
    try
    {
      System.loadLibrary(paramString);
      return true;
    }
    catch (UnsatisfiedLinkError localUnsatisfiedLinkError)
    {
      f.Log(6, "Unable to find " + paramString);
      return false;
    }
    catch (Exception paramString)
    {
      f.Log(6, "Unknown error " + paramString);
    }
    return false;
  }
  
  final native void nativeAttitude(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, long paramLong);
  
  final native void nativeCompass(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, double paramDouble);
  
  final native void nativeDeviceOrientation(int paramInt);
  
  final native void nativeForwardEventsToDalvik(boolean paramBoolean);
  
  final native void nativeGravity(float paramFloat1, float paramFloat2, float paramFloat3, long paramLong);
  
  final native void nativeGyro(float paramFloat1, float paramFloat2, float paramFloat3, long paramLong);
  
  final native void nativeJoystickRemoved();
  
  final native void nativeLinearAcc(float paramFloat1, float paramFloat2, float paramFloat3, long paramLong);
  
  final native void nativeSensor(float paramFloat1, float paramFloat2, float paramFloat3, long paramLong);
  
  protected native void nativeSetLocation(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, double paramDouble);
  
  protected native void nativeSetLocationStatus(int paramInt);
  
  public void onDrawFrame(GL10 paramGL10)
  {
    int i1 = 0;
    int i2 = 1;
    if (this.w) {}
    label356:
    label357:
    for (;;)
    {
      return;
      Object localObject;
      if ((!this.G) && (this.D == null))
      {
        paramGL10 = nativeGetGLContext();
        if (paramGL10 != null)
        {
          localObject = new String("android.opengl.GLSurfaceView$GLWrapper");
          localObject = new i(this.g, new com.unity3d.player.a.a(((String)localObject).getBytes(), this.g.getPackageName(), nativeGetGLScreen()));
        }
      }
      try
      {
        this.D = new com.unity3d.player.a.e(this.g, (i)localObject, paramGL10);
        this.D.a(new com.unity3d.player.a.f()
        {
          public final void a()
          {
            UnityPlayer.c(UnityPlayer.this, true);
            UnityPlayer.j(UnityPlayer.this);
          }
          
          public final void b()
          {
            UnityPlayer.c(UnityPlayer.this, false);
            UnityPlayer.j(UnityPlayer.this);
          }
        });
        if (!nativeRender())
        {
          this.w = true;
          c();
          return;
        }
      }
      catch (Exception paramGL10)
      {
        for (;;)
        {
          this.G = true;
        }
        this.A += 1;
        if (!this.q)
        {
          if (this.r)
          {
            this.r = false;
            return;
          }
          unityAndroidInit("assets/bin/", this.g.getApplicationInfo().dataDir + "/lib");
          this.q = true;
          unityAndroidPrepareGameLoop();
          nativeResize(this.s, this.t, this.s, this.t);
          nativeResume();
          windowFocusChanged(true);
        }
      }
      if ((this.i instanceof q))
      {
        boolean bool;
        if (canUse32bitDisplayBuffer())
        {
          bool = nativeRequested32bitDisplayBuffer();
          int i3 = nativeRequestedAA();
          if (this.x != i3)
          {
            this.x = i3;
            ((q)this.i).a(this.x);
            i1 = 1;
          }
          if (this.y == bool) {
            break label356;
          }
          this.y = bool;
          ((q)this.i).a(this.y);
          i1 = i2;
        }
        for (;;)
        {
          if (i1 == 0) {
            break label357;
          }
          a(this.M);
          return;
          bool = false;
          break;
        }
      }
    }
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    return a(paramInt, paramKeyEvent);
  }
  
  public boolean onKeyPreIme(int paramInt, KeyEvent paramKeyEvent)
  {
    if ((this.c) && (paramInt == 4)) {
      return a(paramInt, paramKeyEvent);
    }
    return super.onKeyPreIme(paramInt, paramKeyEvent);
  }
  
  public boolean onKeyUp(int paramInt, KeyEvent paramKeyEvent)
  {
    return a(paramInt, paramKeyEvent);
  }
  
  protected boolean onNativeKey(long paramLong1, long paramLong2, int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, boolean paramBoolean)
  {
    return a(paramInt2, new KeyEvent(paramLong1, paramLong2, paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7));
  }
  
  public void onPreviewFrame(final byte[] paramArrayOfByte, Camera paramCamera)
  {
    if (this.w) {}
    a localA;
    do
    {
      do
      {
        return;
        localA = (a)this.I.get(paramCamera);
      } while (localA == null);
      final int i1 = localA.c();
      final int i2 = localA.d();
      queueEvent(new Runnable()
      {
        public final void run()
        {
          UnityPlayer.a(UnityPlayer.this, this.a, paramArrayOfByte, i1, i2);
        }
      });
    } while (Build.VERSION.SDK_INT < 8);
    paramCamera.addCallbackBuffer(localA.b());
  }
  
  public void onSurfaceChanged(GL10 paramGL10, int paramInt1, int paramInt2)
  {
    if (((this.i instanceof SurfaceView)) && ((this.u != 0) || (this.v != 0)) && ((this.u != paramInt1) || (this.v != paramInt2))) {
      setScreenSize(this.u, this.v);
    }
    int i2;
    int i1;
    if ((this.i instanceof View))
    {
      i2 = ((View)this.i).getWidth();
      i1 = ((View)this.i).getHeight();
    }
    for (;;)
    {
      this.s = paramInt1;
      this.t = paramInt2;
      nativeResize(paramInt1, paramInt2, i2, i1);
      if ((this.g instanceof Activity))
      {
        float f1 = 0.0F;
        if (!getSettings().getBoolean("hide_status_bar", true))
        {
          paramGL10 = (Activity)this.g;
          Rect localRect = new Rect();
          paramGL10.getWindow().getDecorView().getWindowVisibleDisplayFrame(localRect);
          f1 = localRect.top;
        }
        nativeSetTouchDeltaY(f1);
      }
      return;
      i1 = paramInt2;
      i2 = paramInt1;
    }
  }
  
  public void onSurfaceCreated(GL10 paramGL10, EGLConfig paramEGLConfig)
  {
    nativeRecreateGfxState();
  }
  
  public boolean onTouchEvent(MotionEvent paramMotionEvent)
  {
    if (!this.q) {
      return true;
    }
    if (this.d != null) {}
    for (int i1 = this.d.a(paramMotionEvent); i1 == 8194; i1 = 4098) {
      return a(paramMotionEvent);
    }
    if (i1 == 16777232) {
      return b(paramMotionEvent);
    }
    int i4 = paramMotionEvent.getPointerCount();
    int i2 = 0;
    while (i2 < i4)
    {
      int i5 = paramMotionEvent.getPointerId(i2);
      int i6 = paramMotionEvent.getHistorySize();
      int i3 = 0;
      while (i3 < i6)
      {
        dispatchTouchEvent(i2, 2, i5, paramMotionEvent.getHistoricalX(i2, i3), paramMotionEvent.getHistoricalY(i2, i3), paramMotionEvent.getHistoricalEventTime(i3), i1);
        i3 += 1;
      }
      dispatchTouchEvent(i2, paramMotionEvent.getAction(), i5, paramMotionEvent.getX(i2), paramMotionEvent.getY(i2), paramMotionEvent.getEventTime(), i1);
      i2 += 1;
    }
    return true;
  }
  
  protected void openURL(String paramString)
  {
    Intent localIntent = new Intent("android.intent.action.VIEW");
    Uri localUri = Uri.parse(paramString);
    localIntent.setData(localUri);
    if (localUri.isRelative()) {
      localIntent.setDataAndType(Uri.fromFile(new File(paramString)), MimeTypeMap.getSingleton().getMimeTypeFromExtension(MimeTypeMap.getFileExtensionFromUrl(paramString)));
    }
    this.g.startActivity(localIntent);
  }
  
  public void pause()
  {
    if (this.J) {}
    while (!o) {
      return;
    }
    this.J = true;
    this.K = false;
    Object localObject;
    if (!this.w)
    {
      localObject = this.I.entrySet().iterator();
      while (((Iterator)localObject).hasNext()) {
        ((a)((Map.Entry)((Iterator)localObject).next()).getValue()).f();
      }
    }
    if (this.m != null)
    {
      this.m.stop();
      this.m = null;
    }
    if (this.q)
    {
      localObject = new Semaphore(0);
      if (!this.w) {
        break label235;
      }
      this.i.queueEvent(new Runnable()
      {
        public final void run()
        {
          UnityPlayer.e(UnityPlayer.this);
          this.a.release();
        }
      });
    }
    try
    {
      for (;;)
      {
        ((Semaphore)localObject).tryAcquire(10L, TimeUnit.SECONDS);
        if (((Semaphore)localObject).drainPermits() > 0) {
          quit();
        }
        this.g.unregisterReceiver(this.V);
        if ((this.i instanceof q)) {
          removeView((View)this.i);
        }
        this.i.onPause();
        setWakeLock(false);
        a(false);
        b(false);
        this.k.unregisterListener(this.z);
        this.z.d();
        return;
        label235:
        this.i.queueEvent(new Runnable()
        {
          public final void run()
          {
            if (UnityPlayer.f(UnityPlayer.this))
            {
              UnityPlayer.e(UnityPlayer.this);
              this.a.release(2);
              return;
            }
            this.a.release();
          }
        });
      }
    }
    catch (InterruptedException localInterruptedException)
    {
      for (;;) {}
    }
  }
  
  protected void queueEvent(final Runnable paramRunnable)
  {
    if (!this.q) {}
    while (this.w) {
      return;
    }
    this.i.queueEvent(new Runnable()
    {
      public final void run()
      {
        if (!UnityPlayer.s(UnityPlayer.this)) {
          paramRunnable.run();
        }
      }
    });
  }
  
  public void quit()
  {
    if (o)
    {
      removeAllViews();
      this.i.a();
    }
    if (this.D != null) {
      this.D.a();
    }
    this.D = null;
    Process.killProcess(Process.myPid());
  }
  
  protected void reportSoftInputStr(final String paramString, final int paramInt)
  {
    if (paramInt == 1) {
      hideSoftInput();
    }
    queueEvent(new Runnable()
    {
      public final void run()
      {
        if (paramString != null) {
          UnityPlayer.a(UnityPlayer.this, paramString);
        }
        if (paramInt == 1) {
          UnityPlayer.r(UnityPlayer.this);
        }
      }
    });
  }
  
  public void resume()
  {
    if (!this.J) {}
    while (!o) {
      return;
    }
    this.J = false;
    Iterator localIterator = this.I.entrySet().iterator();
    HashMap localHashMap = new HashMap();
    while (localIterator.hasNext())
    {
      a localA = (a)((Map.Entry)localIterator.next()).getValue();
      localA.b(this);
      localHashMap.put(localA.a(), localA);
    }
    this.I = localHashMap;
    this.i.onResume();
    this.g.registerReceiver(this.V, new IntentFilter("android.hardware.usb.action.USB_DEVICE_DETACHED"));
    this.k.registerListener(this.z, this.k.getDefaultSensor(1), 1);
    a(true);
    b(true);
    d();
    this.z.e();
    this.B = null;
    this.C = null;
  }
  
  protected void setCompassEnabled(boolean paramBoolean)
  {
    boolean bool2 = false;
    if (this.aa == paramBoolean) {
      return;
    }
    if (paramBoolean)
    {
      boolean bool1 = bool2;
      if (paramBoolean)
      {
        bool1 = bool2;
        if (isCompassAvailable()) {
          bool1 = true;
        }
      }
      this.aa = bool1;
      b(true);
      return;
    }
    b(false);
    this.aa = paramBoolean;
    queueEvent(new Runnable()
    {
      public final void run()
      {
        UnityPlayer.this.nativeCompass(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -1.0D);
      }
    });
  }
  
  protected void setGyroEnabled(boolean paramBoolean)
  {
    boolean bool2 = false;
    if (this.W == paramBoolean) {
      return;
    }
    if (paramBoolean)
    {
      boolean bool1 = bool2;
      if (paramBoolean)
      {
        bool1 = bool2;
        if (getIsGyroAvailable()) {
          bool1 = true;
        }
      }
      this.W = bool1;
      a(true);
      return;
    }
    a(false);
    this.W = paramBoolean;
    queueEvent(new Runnable()
    {
      public final void run()
      {
        UnityPlayer.this.nativeGyro(0.0F, 0.0F, 0.0F, -1L);
      }
    });
  }
  
  protected void setGyroUpdateDelay(int paramInt)
  {
    this.Z = paramInt;
  }
  
  protected void setHideInputField(boolean paramBoolean)
  {
    this.b = paramBoolean;
  }
  
  protected void setOrientation(int paramInt)
  {
    if (!(this.g instanceof Activity)) {}
    Activity localActivity;
    do
    {
      return;
      localActivity = (Activity)this.g;
    } while ((paramInt == localActivity.getRequestedOrientation()) || ((Build.VERSION.SDK_INT < 9) && ((paramInt == 9) || (paramInt == 8))));
    localActivity.setRequestedOrientation(paramInt);
  }
  
  protected void setScreenSize(final int paramInt1, final int paramInt2)
  {
    if (!(this.i instanceof SurfaceView))
    {
      f.Log(5, "setScreenSize: Unable to retrieve surface holder");
      return;
    }
    final SurfaceView localSurfaceView = (SurfaceView)this.i;
    localSurfaceView.getHolder().getSurfaceFrame();
    boolean bool;
    if (((localSurfaceView.getWidth() == paramInt1) && (localSurfaceView.getHeight() == paramInt2)) || ((paramInt1 == -1) && (paramInt2 == -1)))
    {
      bool = true;
      if (!bool) {
        break label104;
      }
      this.u = 0;
    }
    for (this.v = 0;; this.v = paramInt2)
    {
      a(new Runnable()
      {
        public final void run()
        {
          if (this.a) {
            localSurfaceView.getHolder().setSizeFromLayout();
          }
          for (;;)
          {
            localSurfaceView.invalidate();
            return;
            localSurfaceView.getHolder().setFixedSize(paramInt1, paramInt2);
          }
        }
      });
      return;
      bool = false;
      break;
      label104:
      this.u = paramInt1;
    }
  }
  
  protected void setWakeLock(boolean paramBoolean)
  {
    if (paramBoolean == hasWakeLock()) {}
    do
    {
      return;
      if (paramBoolean)
      {
        this.j.acquire();
        return;
      }
    } while (paramBoolean);
    this.j.release();
  }
  
  protected boolean showBuildSetup()
  {
    return this.E;
  }
  
  protected boolean showRuntimeSetup()
  {
    return this.F;
  }
  
  protected void showSoftInput(final String paramString1, final int paramInt, final boolean paramBoolean1, final boolean paramBoolean2, final boolean paramBoolean3, final boolean paramBoolean4, final String paramString2)
  {
    a(new Runnable()
    {
      public final void run()
      {
        if (UnityPlayer.p(UnityPlayer.this))
        {
          ((InputMethodManager)UnityPlayer.m(jdField_this).getSystemService("input_method")).toggleSoftInput(0, 1);
          UnityPlayer.e(UnityPlayer.this, true);
          return;
        }
        UnityPlayer localUnityPlayer1 = UnityPlayer.this;
        ContextWrapper localContextWrapper = UnityPlayer.m(UnityPlayer.this);
        UnityPlayer localUnityPlayer2 = jdField_this;
        String str = paramString1;
        int j = paramInt;
        boolean bool1 = paramBoolean1;
        boolean bool2 = paramBoolean2;
        boolean bool3 = paramBoolean3;
        boolean bool4 = paramBoolean4;
        localUnityPlayer1.a = new p(localContextWrapper, localUnityPlayer2, str, j, bool1, bool2, bool3, paramString2);
        UnityPlayer.this.a.show();
      }
    });
  }
  
  protected void showVideoPlayer(String paramString, int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean)
  {
    final Intent localIntent = new Intent(this.g, VideoPlayer.class);
    localIntent.putExtra("fileName", paramString);
    localIntent.putExtra("backgroundColor", paramInt1);
    localIntent.putExtra("controlMode", paramInt2);
    localIntent.putExtra("scalingMode", paramInt3);
    localIntent.putExtra("isURL", paramBoolean);
    if ((this.g instanceof Activity))
    {
      localIntent.putExtra("screenOrientation", ((Activity)this.g).getRequestedOrientation());
      localIntent.putExtra("autorotationOn", nativeIsAutorotationOn());
    }
    for (;;)
    {
      localIntent.putExtra("wakeLock", hasWakeLock());
      localIntent.addFlags(65536);
      a(new Runnable()
      {
        public final void run()
        {
          UnityPlayer.m(UnityPlayer.this).startActivity(localIntent);
        }
      });
      return;
      localIntent.putExtra("screenOrientation", 1);
      localIntent.putExtra("autorotationOn", false);
    }
  }
  
  protected void startActivityIndicator()
  {
    a(this.O);
  }
  
  protected void stopActivityIndicator()
  {
    a(this.P);
  }
  
  protected void vibrate(int paramInt)
  {
    if (this.n == null) {
      this.n = ((Vibrator)this.g.getSystemService("vibrator"));
    }
    if (paramInt == 0) {}
    try
    {
      this.n.cancel();
      return;
    }
    catch (Exception localException)
    {
      f.Log(5, "android.permission.VIBRATE not available?");
    }
    this.n.vibrate(paramInt);
    return;
  }
  
  public void windowFocusChanged(boolean paramBoolean)
  {
    this.L = paramBoolean;
    if (this.q) {
      this.i.queueEvent(new Runnable()
      {
        public final void run()
        {
          UnityPlayer.b(UnityPlayer.this, UnityPlayer.h(UnityPlayer.this));
        }
      });
    }
    d();
  }
}
