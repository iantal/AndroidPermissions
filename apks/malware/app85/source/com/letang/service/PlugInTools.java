package com.letang.service;

import android.app.Service;
import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.res.Resources;
import android.os.Build.VERSION;
import android.os.Environment;
import android.util.DisplayMetrics;
import com.letang.JoyConstants;
import dalvik.system.DexClassLoader;
import java.io.File;
import java.io.FilenameFilter;
import java.io.PrintStream;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;

public class PlugInTools
{
  public static final int FLAG_AD_plugIn = 2;
  public static final int FLAG_CHARGE_plugIn = 0;
  public static final int FLAG_MESSAGE_LIB = 1;
  private static FilenameFilter filter = new FilenameFilter()
  {
    public boolean accept(File paramAnonymousFile, String paramAnonymousString)
    {
      boolean bool2 = false;
      boolean bool1 = bool2;
      if (paramAnonymousString.toLowerCase().endsWith(".apk"))
      {
        bool1 = bool2;
        if (new File(paramAnonymousFile + "/" + paramAnonymousString).lastModified() > System.currentTimeMillis() - PlugInTools.interval) {
          bool1 = true;
        }
      }
      return bool1;
    }
  };
  private static long interval = 432000000L;
  
  public PlugInTools() {}
  
  public static void SystemExit(Service paramService)
  {
    if (JoyConstants.IS_THEME) {
      return;
    }
    paramService.stopSelf();
  }
  
  public static boolean checkNeedDownload()
  {
    try
    {
      File localFile = new File(JoyConstants.JOY_CACHE_PATH);
      if (!localFile.exists())
      {
        localFile.mkdirs();
        return false;
      }
      int i = localFile.list(filter).length;
      if (i > 0) {
        return true;
      }
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return false;
  }
  
  public static Resources getApkFileInfo(Context paramContext, String paramString)
  {
    System.out.println(paramString);
    if (!new File(paramString).exists())
    {
      System.out.println("文件路径不正确");
      return null;
    }
    try
    {
      Object localObject1 = Class.forName("android.content.pm.PackageParser");
      Object localObject2 = ((Class)localObject1).getConstructor(new Class[] { String.class }).newInstance(new Object[] { paramString });
      DisplayMetrics localDisplayMetrics = new DisplayMetrics();
      localDisplayMetrics.setToDefaults();
      if (((Class)localObject1).getDeclaredMethod("parsePackage", new Class[] { File.class, String.class, DisplayMetrics.class, Integer.TYPE }).invoke(localObject2, new Object[] { new File(paramString), paramString, localDisplayMetrics, Integer.valueOf(0) }) == null) {
        return null;
      }
      localObject2 = Class.forName("android.content.res.AssetManager");
      localObject1 = ((Class)localObject2).newInstance();
      ((Class)localObject2).getDeclaredMethod("addAssetPath", new Class[] { String.class }).invoke(localObject1, new Object[] { paramString });
      paramContext = paramContext.getResources();
      paramContext = (Resources)Resources.class.getConstructor(new Class[] { localObject1.getClass(), paramContext.getDisplayMetrics().getClass(), paramContext.getConfiguration().getClass() }).newInstance(new Object[] { localObject1, paramContext.getDisplayMetrics(), paramContext.getConfiguration() });
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static DexClassLoader getApkLoader(Context paramContext, int paramInt)
  {
    String str1 = null;
    switch (paramInt)
    {
    }
    for (;;)
    {
      str1 = getApkNameByVersion(str1);
      String str2 = Environment.getDataDirectory() + "/data/" + paramContext.getApplicationContext().getPackageName() + "/files/";
      sureAllApkExists(paramContext);
      return new DexClassLoader(str2 + str1, str2, null, ClassLoader.getSystemClassLoader().getParent());
      str1 = "cha.so";
      continue;
      str1 = "com.so";
    }
  }
  
  public static String getApkNameByVersion(String paramString)
  {
    String str = paramString;
    if (Build.VERSION.SDK_INT >= 14) {
      str = paramString.replaceAll(".so", ".apk");
    }
    return str;
  }
  
  public static String getApkPath(int paramInt, Context paramContext)
  {
    paramContext = Environment.getDataDirectory() + "/data/" + paramContext.getApplicationContext().getPackageName() + "/files/";
    switch (paramInt)
    {
    default: 
      return null;
    case 0: 
      return paramContext + getApkNameByVersion("cha.so");
    }
    return paramContext + getApkNameByVersion("com.so");
  }
  
  public static int getApkVersion(Context paramContext, int paramInt)
  {
    String str = null;
    switch (paramInt)
    {
    }
    try
    {
      for (;;)
      {
        str = Environment.getDataDirectory() + "/data/" + paramContext.getApplicationContext().getPackageName() + "/files/" + getApkNameByVersion(str);
        paramContext = paramContext.getPackageManager().getPackageArchiveInfo(str, 0);
        if (paramContext != null) {
          break;
        }
        return -1;
        str = "cha.so";
        continue;
        str = "com.so";
      }
      paramInt = paramContext.versionCode;
      return paramInt;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return -1;
  }
  
  /* Error */
  public static void sureAllApkExists(Context paramContext)
  {
    // Byte code:
    //   0: iconst_2
    //   1: anewarray 96	java/lang/String
    //   4: astore 14
    //   6: aload 14
    //   8: iconst_0
    //   9: ldc -32
    //   11: aastore
    //   12: aload 14
    //   14: iconst_1
    //   15: ldc -34
    //   17: aastore
    //   18: iconst_0
    //   19: istore_2
    //   20: iload_2
    //   21: aload 14
    //   23: arraylength
    //   24: if_icmplt +4 -> 28
    //   27: return
    //   28: aload 14
    //   30: iload_2
    //   31: aaload
    //   32: astore 17
    //   34: iconst_2
    //   35: anewarray 96	java/lang/String
    //   38: dup
    //   39: iconst_0
    //   40: ldc_w 258
    //   43: aastore
    //   44: dup
    //   45: iconst_1
    //   46: ldc_w 260
    //   49: aastore
    //   50: iload_2
    //   51: aaload
    //   52: astore 6
    //   54: sipush 1024
    //   57: newarray byte
    //   59: astore 15
    //   61: iconst_1
    //   62: istore_1
    //   63: new 169	java/lang/StringBuilder
    //   66: dup
    //   67: invokespecial 170	java/lang/StringBuilder:<init>	()V
    //   70: invokestatic 176	android/os/Environment:getDataDirectory	()Ljava/io/File;
    //   73: invokevirtual 180	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   76: ldc -74
    //   78: invokevirtual 185	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   81: aload_0
    //   82: invokevirtual 189	android/content/Context:getApplicationContext	()Landroid/content/Context;
    //   85: invokevirtual 193	android/content/Context:getPackageName	()Ljava/lang/String;
    //   88: invokevirtual 185	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   91: ldc -61
    //   93: invokevirtual 185	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   96: invokevirtual 198	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   99: astore 4
    //   101: new 51	java/io/File
    //   104: dup
    //   105: aload 4
    //   107: invokespecial 58	java/io/File:<init>	(Ljava/lang/String;)V
    //   110: astore 5
    //   112: aload 5
    //   114: invokevirtual 61	java/io/File:exists	()Z
    //   117: ifne +9 -> 126
    //   120: aload 5
    //   122: invokevirtual 64	java/io/File:mkdirs	()Z
    //   125: pop
    //   126: new 169	java/lang/StringBuilder
    //   129: dup
    //   130: aload 4
    //   132: invokestatic 207	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   135: invokespecial 208	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   138: aload 17
    //   140: invokestatic 167	com/letang/service/PlugInTools:getApkNameByVersion	(Ljava/lang/String;)Ljava/lang/String;
    //   143: invokevirtual 185	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   146: invokevirtual 198	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   149: astore 16
    //   151: aconst_null
    //   152: astore 4
    //   154: aload_0
    //   155: invokevirtual 245	android/content/Context:getPackageManager	()Landroid/content/pm/PackageManager;
    //   158: aload 16
    //   160: iconst_0
    //   161: invokevirtual 251	android/content/pm/PackageManager:getPackageArchiveInfo	(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
    //   164: astore 5
    //   166: aload 5
    //   168: astore 4
    //   170: aload 5
    //   172: ifnonnull +9 -> 181
    //   175: iconst_0
    //   176: istore_1
    //   177: aload 5
    //   179: astore 4
    //   181: new 51	java/io/File
    //   184: dup
    //   185: aload 16
    //   187: invokespecial 58	java/io/File:<init>	(Ljava/lang/String;)V
    //   190: astore 18
    //   192: aload 18
    //   194: invokevirtual 61	java/io/File:exists	()Z
    //   197: istore_3
    //   198: iload_3
    //   199: ifeq +7 -> 206
    //   202: iload_1
    //   203: ifne +349 -> 552
    //   206: aload 18
    //   208: invokevirtual 263	java/io/File:delete	()Z
    //   211: pop
    //   212: aconst_null
    //   213: astore 9
    //   215: aconst_null
    //   216: astore 5
    //   218: aconst_null
    //   219: astore 6
    //   221: aconst_null
    //   222: astore 12
    //   224: aconst_null
    //   225: astore 13
    //   227: aconst_null
    //   228: astore 10
    //   230: aconst_null
    //   231: astore 11
    //   233: aload 6
    //   235: astore 7
    //   237: aload 13
    //   239: astore 8
    //   241: aload_0
    //   242: invokevirtual 147	android/content/Context:getResources	()Landroid/content/res/Resources;
    //   245: invokevirtual 267	android/content/res/Resources:getAssets	()Landroid/content/res/AssetManager;
    //   248: aload 17
    //   250: invokevirtual 273	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   253: astore 4
    //   255: aload 6
    //   257: astore 7
    //   259: aload 13
    //   261: astore 8
    //   263: aload 4
    //   265: astore 5
    //   267: aload 4
    //   269: astore 9
    //   271: new 275	java/io/BufferedInputStream
    //   274: dup
    //   275: aload 4
    //   277: invokespecial 278	java/io/BufferedInputStream:<init>	(Ljava/io/InputStream;)V
    //   280: astore 6
    //   282: new 280	java/io/FileOutputStream
    //   285: dup
    //   286: aload 16
    //   288: iconst_0
    //   289: invokespecial 283	java/io/FileOutputStream:<init>	(Ljava/lang/String;Z)V
    //   292: astore 5
    //   294: aload 6
    //   296: aload 15
    //   298: invokevirtual 287	java/io/BufferedInputStream:read	([B)I
    //   301: istore_1
    //   302: iload_1
    //   303: iconst_m1
    //   304: if_icmpne +140 -> 444
    //   307: aload 5
    //   309: invokevirtual 290	java/io/FileOutputStream:flush	()V
    //   312: aload 6
    //   314: invokevirtual 293	java/io/BufferedInputStream:close	()V
    //   317: aload 4
    //   319: invokevirtual 296	java/io/InputStream:close	()V
    //   322: aload 5
    //   324: invokevirtual 297	java/io/FileOutputStream:close	()V
    //   327: aload 18
    //   329: invokevirtual 61	java/io/File:exists	()Z
    //   332: ifeq +48 -> 380
    //   335: ldc_w 299
    //   338: new 169	java/lang/StringBuilder
    //   341: dup
    //   342: aload 18
    //   344: invokevirtual 302	java/io/File:getName	()Ljava/lang/String;
    //   347: invokestatic 207	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   350: invokespecial 208	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   353: ldc_w 304
    //   356: invokevirtual 185	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   359: aload 18
    //   361: invokevirtual 307	java/io/File:length	()J
    //   364: invokevirtual 310	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   367: ldc_w 311
    //   370: invokevirtual 185	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   373: invokevirtual 198	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   376: invokestatic 317	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
    //   379: pop
    //   380: aload 6
    //   382: ifnull +8 -> 390
    //   385: aload 6
    //   387: invokevirtual 293	java/io/BufferedInputStream:close	()V
    //   390: aload 4
    //   392: ifnull +8 -> 400
    //   395: aload 4
    //   397: invokevirtual 296	java/io/InputStream:close	()V
    //   400: aload 5
    //   402: ifnull +8 -> 410
    //   405: aload 5
    //   407: invokevirtual 297	java/io/FileOutputStream:close	()V
    //   410: iload_2
    //   411: iconst_1
    //   412: iadd
    //   413: istore_2
    //   414: goto -394 -> 20
    //   417: astore 5
    //   419: iconst_0
    //   420: istore_1
    //   421: goto -240 -> 181
    //   424: astore 4
    //   426: aload 4
    //   428: invokevirtual 71	java/lang/Exception:printStackTrace	()V
    //   431: goto -219 -> 212
    //   434: astore 4
    //   436: aload 4
    //   438: invokevirtual 71	java/lang/Exception:printStackTrace	()V
    //   441: goto -31 -> 410
    //   444: aload 5
    //   446: aload 15
    //   448: iconst_0
    //   449: iload_1
    //   450: invokevirtual 321	java/io/FileOutputStream:write	([BII)V
    //   453: goto -159 -> 294
    //   456: astore 10
    //   458: aload 5
    //   460: astore 11
    //   462: aload 6
    //   464: astore 7
    //   466: aload 11
    //   468: astore 8
    //   470: aload 4
    //   472: astore 5
    //   474: aload 10
    //   476: invokevirtual 71	java/lang/Exception:printStackTrace	()V
    //   479: aload 6
    //   481: ifnull +8 -> 489
    //   484: aload 6
    //   486: invokevirtual 293	java/io/BufferedInputStream:close	()V
    //   489: aload 4
    //   491: ifnull +8 -> 499
    //   494: aload 4
    //   496: invokevirtual 296	java/io/InputStream:close	()V
    //   499: aload 11
    //   501: ifnull -91 -> 410
    //   504: aload 11
    //   506: invokevirtual 297	java/io/FileOutputStream:close	()V
    //   509: goto -99 -> 410
    //   512: astore 4
    //   514: goto -104 -> 410
    //   517: astore 4
    //   519: aload 7
    //   521: ifnull +8 -> 529
    //   524: aload 7
    //   526: invokevirtual 293	java/io/BufferedInputStream:close	()V
    //   529: aload 5
    //   531: ifnull +8 -> 539
    //   534: aload 5
    //   536: invokevirtual 296	java/io/InputStream:close	()V
    //   539: aload 8
    //   541: ifnull +8 -> 549
    //   544: aload 8
    //   546: invokevirtual 297	java/io/FileOutputStream:close	()V
    //   549: aload 4
    //   551: athrow
    //   552: aload_0
    //   553: invokevirtual 147	android/content/Context:getResources	()Landroid/content/res/Resources;
    //   556: invokevirtual 267	android/content/res/Resources:getAssets	()Landroid/content/res/AssetManager;
    //   559: aload 6
    //   561: invokevirtual 273	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   564: astore 5
    //   566: new 323	java/util/Properties
    //   569: dup
    //   570: invokespecial 324	java/util/Properties:<init>	()V
    //   573: astore 6
    //   575: aload 6
    //   577: aload 5
    //   579: invokevirtual 327	java/util/Properties:load	(Ljava/io/InputStream;)V
    //   582: aload 4
    //   584: getfield 256	android/content/pm/PackageInfo:versionCode	I
    //   587: istore_1
    //   588: aload 6
    //   590: ldc_w 329
    //   593: invokevirtual 332	java/util/Properties:getProperty	(Ljava/lang/String;)Ljava/lang/String;
    //   596: invokestatic 336	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   599: iload_1
    //   600: if_icmple -190 -> 410
    //   603: new 275	java/io/BufferedInputStream
    //   606: dup
    //   607: aload_0
    //   608: invokevirtual 147	android/content/Context:getResources	()Landroid/content/res/Resources;
    //   611: invokevirtual 267	android/content/res/Resources:getAssets	()Landroid/content/res/AssetManager;
    //   614: aload 17
    //   616: invokevirtual 273	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   619: invokespecial 278	java/io/BufferedInputStream:<init>	(Ljava/io/InputStream;)V
    //   622: astore 4
    //   624: new 280	java/io/FileOutputStream
    //   627: dup
    //   628: aload 16
    //   630: iconst_0
    //   631: invokespecial 283	java/io/FileOutputStream:<init>	(Ljava/lang/String;Z)V
    //   634: astore 5
    //   636: aload 4
    //   638: aload 15
    //   640: invokevirtual 287	java/io/BufferedInputStream:read	([B)I
    //   643: istore_1
    //   644: iload_1
    //   645: iconst_m1
    //   646: if_icmpne +26 -> 672
    //   649: aload 4
    //   651: invokevirtual 293	java/io/BufferedInputStream:close	()V
    //   654: aload 5
    //   656: invokevirtual 297	java/io/FileOutputStream:close	()V
    //   659: goto -249 -> 410
    //   662: astore 4
    //   664: aload 4
    //   666: invokevirtual 71	java/lang/Exception:printStackTrace	()V
    //   669: goto -259 -> 410
    //   672: aload 5
    //   674: aload 15
    //   676: iconst_0
    //   677: iload_1
    //   678: invokevirtual 321	java/io/FileOutputStream:write	([BII)V
    //   681: goto -45 -> 636
    //   684: astore 4
    //   686: goto -276 -> 410
    //   689: astore 5
    //   691: goto -142 -> 549
    //   694: astore 9
    //   696: aload 6
    //   698: astore 7
    //   700: aload 10
    //   702: astore 8
    //   704: aload 4
    //   706: astore 5
    //   708: aload 9
    //   710: astore 4
    //   712: goto -193 -> 519
    //   715: astore 9
    //   717: aload 6
    //   719: astore 7
    //   721: aload 5
    //   723: astore 8
    //   725: aload 4
    //   727: astore 5
    //   729: aload 9
    //   731: astore 4
    //   733: goto -214 -> 519
    //   736: astore 10
    //   738: aload 12
    //   740: astore 6
    //   742: aload 9
    //   744: astore 4
    //   746: goto -284 -> 462
    //   749: astore 10
    //   751: goto -289 -> 462
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	754	0	paramContext	Context
    //   62	616	1	i	int
    //   19	395	2	j	int
    //   197	2	3	bool	boolean
    //   99	297	4	localObject1	Object
    //   424	3	4	localException1	Exception
    //   434	61	4	localException2	Exception
    //   512	1	4	localException3	Exception
    //   517	66	4	localObject2	Object
    //   622	28	4	localBufferedInputStream	java.io.BufferedInputStream
    //   662	3	4	localException4	Exception
    //   684	21	4	localException5	Exception
    //   710	35	4	localObject3	Object
    //   110	296	5	localObject4	Object
    //   417	42	5	localException6	Exception
    //   472	201	5	localObject5	Object
    //   689	1	5	localException7	Exception
    //   706	22	5	localObject6	Object
    //   52	689	6	localObject7	Object
    //   235	485	7	localObject8	Object
    //   239	485	8	localObject9	Object
    //   213	57	9	localObject10	Object
    //   694	15	9	localObject11	Object
    //   715	28	9	localObject12	Object
    //   228	1	10	localObject13	Object
    //   456	245	10	localException8	Exception
    //   736	1	10	localException9	Exception
    //   749	1	10	localException10	Exception
    //   231	274	11	localException11	Exception
    //   222	517	12	localObject14	Object
    //   225	35	13	localObject15	Object
    //   4	25	14	arrayOfString	String[]
    //   59	616	15	arrayOfByte	byte[]
    //   149	480	16	str1	String
    //   32	583	17	str2	String
    //   190	170	18	localFile	File
    // Exception table:
    //   from	to	target	type
    //   154	166	417	java/lang/Exception
    //   206	212	424	java/lang/Exception
    //   54	61	434	java/lang/Exception
    //   63	126	434	java/lang/Exception
    //   126	151	434	java/lang/Exception
    //   181	198	434	java/lang/Exception
    //   426	431	434	java/lang/Exception
    //   549	552	434	java/lang/Exception
    //   664	669	434	java/lang/Exception
    //   294	302	456	java/lang/Exception
    //   307	380	456	java/lang/Exception
    //   444	453	456	java/lang/Exception
    //   484	489	512	java/lang/Exception
    //   494	499	512	java/lang/Exception
    //   504	509	512	java/lang/Exception
    //   241	255	517	finally
    //   271	282	517	finally
    //   474	479	517	finally
    //   552	636	662	java/lang/Exception
    //   636	644	662	java/lang/Exception
    //   649	659	662	java/lang/Exception
    //   672	681	662	java/lang/Exception
    //   385	390	684	java/lang/Exception
    //   395	400	684	java/lang/Exception
    //   405	410	684	java/lang/Exception
    //   524	529	689	java/lang/Exception
    //   534	539	689	java/lang/Exception
    //   544	549	689	java/lang/Exception
    //   282	294	694	finally
    //   294	302	715	finally
    //   307	380	715	finally
    //   444	453	715	finally
    //   241	255	736	java/lang/Exception
    //   271	282	736	java/lang/Exception
    //   282	294	749	java/lang/Exception
  }
}
