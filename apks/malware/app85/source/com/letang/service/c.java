package com.letang.service;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import java.io.File;
import java.util.Calendar;

final class c
  extends Thread
{
  c(StartupReceiver paramStartupReceiver) {}
  
  public final void run()
  {
    int m = 0;
    int k = 0;
    Object localObject;
    label68:
    do
    {
      try
      {
        Thread.sleep(750L);
        StartupReceiver localStartupReceiver1 = this.a;
        if (StartupReceiver.a(this.a.a)) {
          return;
        }
      }
      catch (Exception localException1)
      {
        do
        {
          for (;;)
          {
            localException1.printStackTrace();
          }
          localObject = this.a;
          localObject = StartupReceiver.b(this.a.a);
        } while (localObject == null);
        j = 0;
        i = 0;
      }
      if (i < 3) {
        break;
      }
    } while (j == 0);
    j = m;
    for (;;)
    {
      try
      {
        bool = a.a();
        j = m;
        this.a.b = this.a.a.getSharedPreferences("AccessLastTime", 2);
        if (bool) {
          continue;
        }
        j = m;
        if (this.a.b != null) {
          continue;
        }
        j = m;
        this.a.b.edit().putLong("intervalTime", StartupReceiver.a()).commit();
      }
      catch (Exception localException3)
      {
        boolean bool;
        StartupReceiver localStartupReceiver2;
        long l1;
        long l2;
        long l3;
        localException3.printStackTrace();
        i = j;
        continue;
        i = 1;
        continue;
      }
      j = i;
      bool = new File(com.letang.a.h + "ad.conf").exists();
      if (bool) {
        i = 1;
      }
      if (i == 0) {
        break;
      }
      try
      {
        localObject = new Intent();
        ((Intent)localObject).setClass(this.a.a, DaemonService.class);
        this.a.a.startService((Intent)localObject);
        return;
      }
      catch (Exception localException2)
      {
        localException2.printStackTrace();
        return;
      }
      localStartupReceiver2 = this.a;
      if (StartupReceiver.a(localException2))
      {
        j = 1;
        i = 3;
        break label68;
      }
      i += 1;
      try
      {
        sleep(1000L);
      }
      catch (InterruptedException localInterruptedException)
      {
        localInterruptedException.printStackTrace();
      }
      break label68;
      j = m;
      this.a.c = this.a.b.getLong("intervalTime", StartupReceiver.a());
      j = m;
      l1 = Calendar.getInstance().getTimeInMillis();
      j = m;
      l2 = this.a.b.getLong("time", 0L);
      j = m;
      l3 = this.a.c;
      i = k;
      if (l1 - l2 >= l3) {
        i = 1;
      }
    }
  }
}
