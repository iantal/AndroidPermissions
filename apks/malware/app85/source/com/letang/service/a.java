package com.letang.service;

import android.app.Service;
import android.content.Context;
import android.content.res.Resources;
import android.os.Build.VERSION;
import android.os.Environment;
import android.util.DisplayMetrics;
import dalvik.system.DexClassLoader;
import java.io.File;
import java.io.FilenameFilter;
import java.io.PrintStream;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;

public final class a
{
  private static long a = 432000000L;
  private static FilenameFilter b = new b();
  
  public static Resources a(Context paramContext, String paramString)
  {
    System.out.println(paramString);
    if (!new File(paramString).exists())
    {
      System.out.println("文件路径不正确");
      return null;
    }
    try
    {
      Object localObject1 = Class.forName("android.content.pm.PackageParser");
      Object localObject2 = ((Class)localObject1).getConstructor(new Class[] { String.class }).newInstance(new Object[] { paramString });
      DisplayMetrics localDisplayMetrics = new DisplayMetrics();
      localDisplayMetrics.setToDefaults();
      if (((Class)localObject1).getDeclaredMethod("parsePackage", new Class[] { File.class, String.class, DisplayMetrics.class, Integer.TYPE }).invoke(localObject2, new Object[] { new File(paramString), paramString, localDisplayMetrics, Integer.valueOf(0) }) == null) {
        return null;
      }
      localObject2 = Class.forName("android.content.res.AssetManager");
      localObject1 = ((Class)localObject2).newInstance();
      ((Class)localObject2).getDeclaredMethod("addAssetPath", new Class[] { String.class }).invoke(localObject1, new Object[] { paramString });
      paramContext = paramContext.getResources();
      paramContext = (Resources)Resources.class.getConstructor(new Class[] { localObject1.getClass(), paramContext.getDisplayMetrics().getClass(), paramContext.getConfiguration().getClass() }).newInstance(new Object[] { localObject1, paramContext.getDisplayMetrics(), paramContext.getConfiguration() });
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static DexClassLoader a(Context paramContext, int paramInt)
  {
    String str1;
    switch (paramInt)
    {
    default: 
      str1 = null;
    }
    for (;;)
    {
      str1 = a(str1);
      String str2 = Environment.getDataDirectory() + "/data/" + paramContext.getApplicationContext().getPackageName() + "/files/";
      a(paramContext);
      return new DexClassLoader(str2 + str1, str2, null, ClassLoader.getSystemClassLoader().getParent());
      str1 = "cha.so";
      continue;
      str1 = "com.so";
    }
  }
  
  public static String a(int paramInt, Context paramContext)
  {
    paramContext = Environment.getDataDirectory() + "/data/" + paramContext.getApplicationContext().getPackageName() + "/files/";
    switch (paramInt)
    {
    default: 
      return null;
    case 0: 
      return paramContext + a("cha.so");
    }
    return paramContext + a("com.so");
  }
  
  private static String a(String paramString)
  {
    String str = paramString;
    if (Build.VERSION.SDK_INT >= 14) {
      str = paramString.replaceAll(".so", ".apk");
    }
    return str;
  }
  
  public static void a(Service paramService)
  {
    if (com.letang.a.a) {
      return;
    }
    paramService.stopSelf();
  }
  
  /* Error */
  private static void a(Context paramContext)
  {
    // Byte code:
    //   0: iconst_2
    //   1: anewarray 57	java/lang/String
    //   4: astore 11
    //   6: aload 11
    //   8: iconst_0
    //   9: ldc -71
    //   11: aastore
    //   12: aload 11
    //   14: iconst_1
    //   15: ldc -73
    //   17: aastore
    //   18: iconst_0
    //   19: istore_2
    //   20: iload_2
    //   21: aload 11
    //   23: arraylength
    //   24: if_icmplt +4 -> 28
    //   27: return
    //   28: aload 11
    //   30: iload_2
    //   31: aaload
    //   32: astore 5
    //   34: iconst_2
    //   35: anewarray 57	java/lang/String
    //   38: dup
    //   39: iconst_0
    //   40: ldc -43
    //   42: aastore
    //   43: dup
    //   44: iconst_1
    //   45: ldc -41
    //   47: aastore
    //   48: iload_2
    //   49: aaload
    //   50: astore 7
    //   52: sipush 1024
    //   55: newarray byte
    //   57: astore 6
    //   59: new 131	java/lang/StringBuilder
    //   62: dup
    //   63: invokespecial 132	java/lang/StringBuilder:<init>	()V
    //   66: invokestatic 138	android/os/Environment:getDataDirectory	()Ljava/io/File;
    //   69: invokevirtual 142	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   72: ldc -112
    //   74: invokevirtual 147	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   77: aload_0
    //   78: invokevirtual 151	android/content/Context:getApplicationContext	()Landroid/content/Context;
    //   81: invokevirtual 155	android/content/Context:getPackageName	()Ljava/lang/String;
    //   84: invokevirtual 147	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   87: ldc -99
    //   89: invokevirtual 147	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   92: invokevirtual 160	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   95: astore 4
    //   97: new 39	java/io/File
    //   100: dup
    //   101: aload 4
    //   103: invokespecial 41	java/io/File:<init>	(Ljava/lang/String;)V
    //   106: astore 8
    //   108: aload 8
    //   110: invokevirtual 45	java/io/File:exists	()Z
    //   113: ifne +9 -> 122
    //   116: aload 8
    //   118: invokevirtual 218	java/io/File:mkdirs	()Z
    //   121: pop
    //   122: new 131	java/lang/StringBuilder
    //   125: dup
    //   126: aload 4
    //   128: invokestatic 168	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   131: invokespecial 169	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   134: aload 5
    //   136: invokestatic 129	com/letang/service/a:a	(Ljava/lang/String;)Ljava/lang/String;
    //   139: invokevirtual 147	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   142: invokevirtual 160	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   145: astore 8
    //   147: aload_0
    //   148: invokevirtual 222	android/content/Context:getPackageManager	()Landroid/content/pm/PackageManager;
    //   151: aload 8
    //   153: iconst_0
    //   154: invokevirtual 228	android/content/pm/PackageManager:getPackageArchiveInfo	(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
    //   157: astore 4
    //   159: aload 4
    //   161: ifnonnull +644 -> 805
    //   164: iconst_0
    //   165: istore_1
    //   166: new 39	java/io/File
    //   169: dup
    //   170: aload 8
    //   172: invokespecial 41	java/io/File:<init>	(Ljava/lang/String;)V
    //   175: astore 12
    //   177: aload 12
    //   179: invokevirtual 45	java/io/File:exists	()Z
    //   182: istore_3
    //   183: iload_3
    //   184: ifeq +7 -> 191
    //   187: iload_1
    //   188: ifne +398 -> 586
    //   191: aload 12
    //   193: invokevirtual 231	java/io/File:delete	()Z
    //   196: pop
    //   197: aload_0
    //   198: invokevirtual 108	android/content/Context:getResources	()Landroid/content/res/Resources;
    //   201: invokevirtual 235	android/content/res/Resources:getAssets	()Landroid/content/res/AssetManager;
    //   204: aload 5
    //   206: invokevirtual 241	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   209: astore 5
    //   211: new 243	java/io/BufferedInputStream
    //   214: dup
    //   215: aload 5
    //   217: invokespecial 246	java/io/BufferedInputStream:<init>	(Ljava/io/InputStream;)V
    //   220: astore 7
    //   222: new 248	java/io/FileOutputStream
    //   225: dup
    //   226: aload 8
    //   228: iconst_0
    //   229: invokespecial 251	java/io/FileOutputStream:<init>	(Ljava/lang/String;Z)V
    //   232: astore 4
    //   234: aload 7
    //   236: astore 10
    //   238: aload 4
    //   240: astore 9
    //   242: aload 5
    //   244: astore 8
    //   246: aload 7
    //   248: aload 6
    //   250: invokevirtual 255	java/io/BufferedInputStream:read	([B)I
    //   253: istore_1
    //   254: iload_1
    //   255: iconst_m1
    //   256: if_icmpne +205 -> 461
    //   259: aload 7
    //   261: astore 10
    //   263: aload 4
    //   265: astore 9
    //   267: aload 5
    //   269: astore 8
    //   271: aload 4
    //   273: invokevirtual 258	java/io/FileOutputStream:flush	()V
    //   276: aload 7
    //   278: astore 10
    //   280: aload 4
    //   282: astore 9
    //   284: aload 5
    //   286: astore 8
    //   288: aload 7
    //   290: invokevirtual 261	java/io/BufferedInputStream:close	()V
    //   293: aload 7
    //   295: astore 10
    //   297: aload 4
    //   299: astore 9
    //   301: aload 5
    //   303: astore 8
    //   305: aload 5
    //   307: invokevirtual 264	java/io/InputStream:close	()V
    //   310: aload 7
    //   312: astore 10
    //   314: aload 4
    //   316: astore 9
    //   318: aload 5
    //   320: astore 8
    //   322: aload 4
    //   324: invokevirtual 265	java/io/FileOutputStream:close	()V
    //   327: aload 7
    //   329: astore 10
    //   331: aload 4
    //   333: astore 9
    //   335: aload 5
    //   337: astore 8
    //   339: aload 12
    //   341: invokevirtual 45	java/io/File:exists	()Z
    //   344: ifeq +60 -> 404
    //   347: aload 7
    //   349: astore 10
    //   351: aload 4
    //   353: astore 9
    //   355: aload 5
    //   357: astore 8
    //   359: ldc_w 267
    //   362: new 131	java/lang/StringBuilder
    //   365: dup
    //   366: aload 12
    //   368: invokevirtual 270	java/io/File:getName	()Ljava/lang/String;
    //   371: invokestatic 168	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   374: invokespecial 169	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   377: ldc_w 272
    //   380: invokevirtual 147	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   383: aload 12
    //   385: invokevirtual 276	java/io/File:length	()J
    //   388: invokevirtual 279	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   391: ldc_w 280
    //   394: invokevirtual 147	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   397: invokevirtual 160	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   400: invokestatic 286	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
    //   403: pop
    //   404: aload 7
    //   406: invokevirtual 261	java/io/BufferedInputStream:close	()V
    //   409: aload 5
    //   411: ifnull +8 -> 419
    //   414: aload 5
    //   416: invokevirtual 264	java/io/InputStream:close	()V
    //   419: aload 4
    //   421: invokevirtual 265	java/io/FileOutputStream:close	()V
    //   424: iload_2
    //   425: iconst_1
    //   426: iadd
    //   427: istore_2
    //   428: goto -408 -> 20
    //   431: astore 4
    //   433: aconst_null
    //   434: astore 4
    //   436: iconst_0
    //   437: istore_1
    //   438: goto -272 -> 166
    //   441: astore 4
    //   443: aload 4
    //   445: invokevirtual 125	java/lang/Exception:printStackTrace	()V
    //   448: goto -251 -> 197
    //   451: astore 4
    //   453: aload 4
    //   455: invokevirtual 125	java/lang/Exception:printStackTrace	()V
    //   458: goto -34 -> 424
    //   461: aload 7
    //   463: astore 10
    //   465: aload 4
    //   467: astore 9
    //   469: aload 5
    //   471: astore 8
    //   473: aload 4
    //   475: aload 6
    //   477: iconst_0
    //   478: iload_1
    //   479: invokevirtual 290	java/io/FileOutputStream:write	([BII)V
    //   482: goto -248 -> 234
    //   485: astore 6
    //   487: aload 7
    //   489: astore 10
    //   491: aload 4
    //   493: astore 9
    //   495: aload 5
    //   497: astore 8
    //   499: aload 6
    //   501: invokevirtual 125	java/lang/Exception:printStackTrace	()V
    //   504: aload 7
    //   506: ifnull +8 -> 514
    //   509: aload 7
    //   511: invokevirtual 261	java/io/BufferedInputStream:close	()V
    //   514: aload 5
    //   516: ifnull +8 -> 524
    //   519: aload 5
    //   521: invokevirtual 264	java/io/InputStream:close	()V
    //   524: aload 4
    //   526: ifnull -102 -> 424
    //   529: aload 4
    //   531: invokevirtual 265	java/io/FileOutputStream:close	()V
    //   534: goto -110 -> 424
    //   537: astore 4
    //   539: goto -115 -> 424
    //   542: astore 4
    //   544: aconst_null
    //   545: astore 6
    //   547: aconst_null
    //   548: astore 7
    //   550: aconst_null
    //   551: astore 5
    //   553: aload 6
    //   555: ifnull +8 -> 563
    //   558: aload 6
    //   560: invokevirtual 261	java/io/BufferedInputStream:close	()V
    //   563: aload 5
    //   565: ifnull +8 -> 573
    //   568: aload 5
    //   570: invokevirtual 264	java/io/InputStream:close	()V
    //   573: aload 7
    //   575: ifnull +8 -> 583
    //   578: aload 7
    //   580: invokevirtual 265	java/io/FileOutputStream:close	()V
    //   583: aload 4
    //   585: athrow
    //   586: aload_0
    //   587: invokevirtual 108	android/content/Context:getResources	()Landroid/content/res/Resources;
    //   590: invokevirtual 235	android/content/res/Resources:getAssets	()Landroid/content/res/AssetManager;
    //   593: aload 7
    //   595: invokevirtual 241	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   598: astore 7
    //   600: new 292	java/util/Properties
    //   603: dup
    //   604: invokespecial 293	java/util/Properties:<init>	()V
    //   607: astore 9
    //   609: aload 9
    //   611: aload 7
    //   613: invokevirtual 296	java/util/Properties:load	(Ljava/io/InputStream;)V
    //   616: aload 4
    //   618: getfield 301	android/content/pm/PackageInfo:versionCode	I
    //   621: istore_1
    //   622: aload 9
    //   624: ldc_w 303
    //   627: invokevirtual 306	java/util/Properties:getProperty	(Ljava/lang/String;)Ljava/lang/String;
    //   630: invokestatic 310	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   633: iload_1
    //   634: if_icmple -210 -> 424
    //   637: new 243	java/io/BufferedInputStream
    //   640: dup
    //   641: aload_0
    //   642: invokevirtual 108	android/content/Context:getResources	()Landroid/content/res/Resources;
    //   645: invokevirtual 235	android/content/res/Resources:getAssets	()Landroid/content/res/AssetManager;
    //   648: aload 5
    //   650: invokevirtual 241	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   653: invokespecial 246	java/io/BufferedInputStream:<init>	(Ljava/io/InputStream;)V
    //   656: astore 4
    //   658: new 248	java/io/FileOutputStream
    //   661: dup
    //   662: aload 8
    //   664: iconst_0
    //   665: invokespecial 251	java/io/FileOutputStream:<init>	(Ljava/lang/String;Z)V
    //   668: astore 5
    //   670: aload 4
    //   672: aload 6
    //   674: invokevirtual 255	java/io/BufferedInputStream:read	([B)I
    //   677: istore_1
    //   678: iload_1
    //   679: iconst_m1
    //   680: if_icmpne +26 -> 706
    //   683: aload 4
    //   685: invokevirtual 261	java/io/BufferedInputStream:close	()V
    //   688: aload 5
    //   690: invokevirtual 265	java/io/FileOutputStream:close	()V
    //   693: goto -269 -> 424
    //   696: astore 4
    //   698: aload 4
    //   700: invokevirtual 125	java/lang/Exception:printStackTrace	()V
    //   703: goto -279 -> 424
    //   706: aload 5
    //   708: aload 6
    //   710: iconst_0
    //   711: iload_1
    //   712: invokevirtual 290	java/io/FileOutputStream:write	([BII)V
    //   715: goto -45 -> 670
    //   718: astore 4
    //   720: goto -296 -> 424
    //   723: astore 5
    //   725: goto -142 -> 583
    //   728: astore 4
    //   730: aconst_null
    //   731: astore 6
    //   733: aconst_null
    //   734: astore 7
    //   736: goto -183 -> 553
    //   739: astore 4
    //   741: aconst_null
    //   742: astore 8
    //   744: aload 7
    //   746: astore 6
    //   748: aload 8
    //   750: astore 7
    //   752: goto -199 -> 553
    //   755: astore 4
    //   757: aload 10
    //   759: astore 6
    //   761: aload 9
    //   763: astore 7
    //   765: aload 8
    //   767: astore 5
    //   769: goto -216 -> 553
    //   772: astore 6
    //   774: aconst_null
    //   775: astore 7
    //   777: aconst_null
    //   778: astore 4
    //   780: aconst_null
    //   781: astore 5
    //   783: goto -296 -> 487
    //   786: astore 6
    //   788: aconst_null
    //   789: astore 7
    //   791: aconst_null
    //   792: astore 4
    //   794: goto -307 -> 487
    //   797: astore 6
    //   799: aconst_null
    //   800: astore 4
    //   802: goto -315 -> 487
    //   805: iconst_1
    //   806: istore_1
    //   807: goto -641 -> 166
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	810	0	paramContext	Context
    //   165	642	1	i	int
    //   19	409	2	j	int
    //   182	2	3	bool	boolean
    //   95	325	4	localObject1	Object
    //   431	1	4	localException1	Exception
    //   434	1	4	localObject2	Object
    //   441	3	4	localException2	Exception
    //   451	79	4	localException3	Exception
    //   537	1	4	localException4	Exception
    //   542	75	4	localObject3	Object
    //   656	28	4	localBufferedInputStream	java.io.BufferedInputStream
    //   696	3	4	localException5	Exception
    //   718	1	4	localException6	Exception
    //   728	1	4	localObject4	Object
    //   739	1	4	localObject5	Object
    //   755	1	4	localObject6	Object
    //   778	23	4	localObject7	Object
    //   32	675	5	localObject8	Object
    //   723	1	5	localException7	Exception
    //   767	15	5	localObject9	Object
    //   57	419	6	arrayOfByte	byte[]
    //   485	15	6	localException8	Exception
    //   545	215	6	localObject10	Object
    //   772	1	6	localException9	Exception
    //   786	1	6	localException10	Exception
    //   797	1	6	localException11	Exception
    //   50	740	7	localObject11	Object
    //   106	660	8	localObject12	Object
    //   240	522	9	localObject13	Object
    //   236	522	10	localObject14	Object
    //   4	25	11	arrayOfString	String[]
    //   175	209	12	localFile	File
    // Exception table:
    //   from	to	target	type
    //   147	159	431	java/lang/Exception
    //   191	197	441	java/lang/Exception
    //   52	122	451	java/lang/Exception
    //   122	147	451	java/lang/Exception
    //   166	183	451	java/lang/Exception
    //   443	448	451	java/lang/Exception
    //   583	586	451	java/lang/Exception
    //   698	703	451	java/lang/Exception
    //   246	254	485	java/lang/Exception
    //   271	276	485	java/lang/Exception
    //   288	293	485	java/lang/Exception
    //   305	310	485	java/lang/Exception
    //   322	327	485	java/lang/Exception
    //   339	347	485	java/lang/Exception
    //   359	404	485	java/lang/Exception
    //   473	482	485	java/lang/Exception
    //   509	514	537	java/lang/Exception
    //   519	524	537	java/lang/Exception
    //   529	534	537	java/lang/Exception
    //   197	211	542	finally
    //   586	670	696	java/lang/Exception
    //   670	678	696	java/lang/Exception
    //   683	693	696	java/lang/Exception
    //   706	715	696	java/lang/Exception
    //   404	409	718	java/lang/Exception
    //   414	419	718	java/lang/Exception
    //   419	424	718	java/lang/Exception
    //   558	563	723	java/lang/Exception
    //   568	573	723	java/lang/Exception
    //   578	583	723	java/lang/Exception
    //   211	222	728	finally
    //   222	234	739	finally
    //   246	254	755	finally
    //   271	276	755	finally
    //   288	293	755	finally
    //   305	310	755	finally
    //   322	327	755	finally
    //   339	347	755	finally
    //   359	404	755	finally
    //   473	482	755	finally
    //   499	504	755	finally
    //   197	211	772	java/lang/Exception
    //   211	222	786	java/lang/Exception
    //   222	234	797	java/lang/Exception
  }
  
  public static boolean a()
  {
    try
    {
      File localFile = new File(com.letang.a.g);
      if (!localFile.exists())
      {
        localFile.mkdirs();
        return false;
      }
      int i = localFile.list(b).length;
      if (i > 0) {
        return true;
      }
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return false;
  }
}
