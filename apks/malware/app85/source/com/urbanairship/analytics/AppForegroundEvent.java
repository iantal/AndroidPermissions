package com.urbanairship.analytics;

import com.urbanairship.Logger;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

class AppForegroundEvent
  extends Event
{
  static final String TYPE = "app_foreground";
  
  AppForegroundEvent() {}
  
  JSONObject getData()
  {
    JSONObject localJSONObject = new JSONObject();
    Event.Environment localEnvironment = getEnvironment();
    try
    {
      localJSONObject.put("connection_type", localEnvironment.getConnectionType());
      String str = localEnvironment.getConnectionSubType();
      if (str.length() > 0) {
        localJSONObject.put("connection_subtype", str);
      }
      localJSONObject.put("carrier", localEnvironment.getCarrier());
      localJSONObject.put("time_zone", localEnvironment.getTimezone());
      localJSONObject.put("daylight_savings", localEnvironment.isDaylightSavingsTime());
      localJSONObject.put("notification_types", new JSONArray(localEnvironment.getNotificationTypes()));
      localJSONObject.put("os_version", localEnvironment.getOsVersion());
      localJSONObject.put("lib_version", localEnvironment.getLibVersion());
      localJSONObject.put("package_version", localEnvironment.getPackageVersion());
      localJSONObject.put("session_id", localEnvironment.getSessionId());
      localJSONObject.put("push_id", localEnvironment.getPushId());
      return localJSONObject;
    }
    catch (JSONException localJSONException)
    {
      Logger.error("Error constructing JSON data for " + getType());
    }
    return localJSONObject;
  }
  
  String getType()
  {
    return "app_foreground";
  }
}
