package com.urbanairship.push;

import com.urbanairship.Logger;
import com.urbanairship.Preferences;
import com.urbanairship.UAirship;
import com.urbanairship.analytics.Analytics;
import com.urbanairship.analytics.PushPreferencesChangedEvent;
import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.json.JSONArray;
import org.json.JSONException;

public class PushPreferences
  extends Preferences
{
  private static final String ALIAS_KEY = "com.urbanairship.push.ALIAS";
  private static final String APID_KEY = "com.urbanairship.push.APID";
  private static final String APID_READY_KEY = "com.urbanairship.push.APID_READY";
  private static final String APID_UPDATE_NEEDED_KEY = "com.urbanairship.push.APID_UPDATE_NEEDED";
  private static final String BOX_OFFICE_SECRET_KEY = "com.urbanairship.push.BOX_OFFICE_SECRET";
  private static final String C2DM_ID_KEY = "com.urbanairship.push.C2DM_KEY";
  private static final String PUSH_ENABLED_KEY = "com.urbanairship.push.PUSH_ENABLED";
  private static final String RETRY_AFTER_KEY = "com.urbanairship.push.RETRY_AFTER";
  private static final String SOUND_ENABLED_KEY = "com.urbanairship.push.SOUND_ENABLED";
  private static final String TAGS_KEY = "com.urbanairship.push.TAGS";
  private static final String VIBRATE_ENABLED_KEY = "com.urbanairship.push.VIBRATE_ENABLED";
  
  public PushPreferences()
  {
    super("com.urbanairship.push");
  }
  
  private void sendPrefsChangedEvent()
  {
    UAirship.shared().getAnalytics().addEvent(new PushPreferencesChangedEvent());
  }
  
  public String getAlias()
  {
    return getString("com.urbanairship.push.ALIAS", null);
  }
  
  public String getC2DMId()
  {
    return getString("com.urbanairship.push.C2DM_KEY", null);
  }
  
  public String getPushId()
  {
    return getString("com.urbanairship.push.APID", null);
  }
  
  public String getPushSecret()
  {
    return getString("com.urbanairship.push.BOX_OFFICE_SECRET", null);
  }
  
  public Date[] getQuietTimeInterval()
  {
    int i = getInt("com.urbanairship.push.QuietTime.START_HOUR", -1);
    int j = getInt("com.urbanairship.push.QuietTime.START_MINUTE", -1);
    int k = getInt("com.urbanairship.push.QuietTime.END_HOUR", -1);
    int m = getInt("com.urbanairship.push.QuietTime.END_MINUTE", -1);
    if ((i == -1) || (j == -1) || (k == -1) || (m == -1)) {
      return null;
    }
    Object localObject = Calendar.getInstance();
    ((Calendar)localObject).set(11, i);
    ((Calendar)localObject).set(12, j);
    ((Calendar)localObject).set(13, 0);
    localObject = ((Calendar)localObject).getTime();
    Calendar localCalendar = Calendar.getInstance();
    localCalendar.set(11, k);
    localCalendar.set(12, m);
    localCalendar.set(13, 0);
    if (k < i) {
      localCalendar.add(5, 1);
    }
    return new Date[] { localObject, localCalendar.getTime() };
  }
  
  public long getRetryAfter()
  {
    return getLong("com.urbanairship.push.RETRY_AFTER", 0L);
  }
  
  public Set<String> getTags()
  {
    localHashSet = new HashSet();
    Object localObject = getString("com.urbanairship.push.TAGS", "[]");
    if (localObject != null) {
      try
      {
        localObject = new JSONArray((String)localObject);
        int j = ((JSONArray)localObject).length();
        int i = 0;
        while (i < j)
        {
          localHashSet.add(((JSONArray)localObject).getString(i));
          i += 1;
        }
        return localHashSet;
      }
      catch (JSONException localJSONException) {}
    }
  }
  
  boolean isAPIDReady()
  {
    return getBoolean("com.urbanairship.push.APID_READY", false);
  }
  
  boolean isApidUpdateNeeded()
  {
    return getBoolean("com.urbanairship.push.APID_UPDATE_NEEDED", true);
  }
  
  public boolean isInQuietTime()
  {
    boolean bool = true;
    if (!isQuietTimeEnabled()) {}
    Calendar localCalendar1;
    int i;
    int j;
    int k;
    int m;
    do
    {
      return false;
      localCalendar1 = Calendar.getInstance();
      i = getInt("com.urbanairship.push.QuietTime.START_HOUR", -1);
      j = getInt("com.urbanairship.push.QuietTime.START_MINUTE", -1);
      k = getInt("com.urbanairship.push.QuietTime.END_HOUR", -1);
      m = getInt("com.urbanairship.push.QuietTime.END_MINUTE", -1);
    } while ((-1 == i) || (-1 == j) || (-1 == k) || (-1 == m));
    Calendar localCalendar2 = Calendar.getInstance();
    localCalendar2.set(11, i);
    localCalendar2.set(12, j);
    localCalendar2.set(13, 0);
    Calendar localCalendar3 = Calendar.getInstance();
    localCalendar3.set(11, k);
    localCalendar3.set(12, m);
    localCalendar3.set(13, 0);
    if ((localCalendar2.after(localCalendar1)) && (localCalendar3.before(localCalendar2))) {
      localCalendar2.add(6, -1);
    }
    if (localCalendar3.before(localCalendar2)) {
      localCalendar3.add(6, 1);
    }
    if ((localCalendar1.after(localCalendar2)) && (localCalendar1.before(localCalendar3))) {}
    for (;;)
    {
      return bool;
      bool = false;
    }
  }
  
  public boolean isPushEnabled()
  {
    return getBoolean("com.urbanairship.push.PUSH_ENABLED", false);
  }
  
  public boolean isQuietTimeEnabled()
  {
    return getBoolean("com.urbanairship.push.QuietTime.ENABLED", false);
  }
  
  public boolean isSoundEnabled()
  {
    return getBoolean("com.urbanairship.push.SOUND_ENABLED", true);
  }
  
  public boolean isVibrateEnabled()
  {
    return getBoolean("com.urbanairship.push.VIBRATE_ENABLED", true);
  }
  
  boolean setAPIDReady(boolean paramBoolean)
  {
    if (isAPIDReady() != paramBoolean) {
      return putBoolean("com.urbanairship.push.APID_READY", paramBoolean);
    }
    return true;
  }
  
  public boolean setAlias(String paramString)
  {
    return putString("com.urbanairship.push.ALIAS", paramString);
  }
  
  boolean setApidUpdateNeeded(boolean paramBoolean)
  {
    return putBoolean("com.urbanairship.push.APID_UPDATE_NEEDED", paramBoolean);
  }
  
  public boolean setC2DMId(String paramString)
  {
    return putString("com.urbanairship.push.C2DM_KEY", paramString);
  }
  
  boolean setPushEnabled(boolean paramBoolean)
  {
    if (isPushEnabled() != paramBoolean)
    {
      paramBoolean = putBoolean("com.urbanairship.push.PUSH_ENABLED", paramBoolean);
      if (paramBoolean) {
        sendPrefsChangedEvent();
      }
      return paramBoolean;
    }
    return true;
  }
  
  public boolean setPushId(String paramString)
  {
    Pattern localPattern = Pattern.compile("[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}");
    if ((paramString == null) || (localPattern.matcher(paramString).matches())) {
      return putString("com.urbanairship.push.APID", paramString);
    }
    Logger.warn("PushPreferences - attempted to save malformed APID.");
    return false;
  }
  
  public boolean setPushSecret(String paramString)
  {
    if ((paramString == null) || (paramString.length() > 0)) {
      return putString("com.urbanairship.push.BOX_OFFICE_SECRET", paramString);
    }
    Logger.warn("PushPreferences - attempted to save malformed secret.");
    return false;
  }
  
  public boolean setQuietTimeEnabled(boolean paramBoolean)
  {
    if (isQuietTimeEnabled() != paramBoolean)
    {
      paramBoolean = putBoolean("com.urbanairship.push.QuietTime.ENABLED", paramBoolean);
      if (paramBoolean) {
        sendPrefsChangedEvent();
      }
      return paramBoolean;
    }
    return true;
  }
  
  public boolean setQuietTimeInterval(Date paramDate1, Date paramDate2)
  {
    boolean bool2 = true;
    boolean bool1 = true;
    int i = getInt("com.urbanairship.push.QuietTime.START_HOUR", -1);
    int j = getInt("com.urbanairship.push.QuietTime.START_MINUTE", -1);
    int k = getInt("com.urbanairship.push.QuietTime.END_HOUR", -1);
    int m = getInt("com.urbanairship.push.QuietTime.END_MINUTE", -1);
    Calendar localCalendar = Calendar.getInstance();
    localCalendar.setTime(paramDate1);
    int n = localCalendar.get(11);
    int i1 = localCalendar.get(12);
    paramDate1 = Calendar.getInstance();
    paramDate1.setTime(paramDate2);
    int i2 = paramDate1.get(11);
    int i3 = paramDate1.get(12);
    if ((i != n) || (j != i1) || (k != i2) || (m != i3)) {
      if ((!putInt("com.urbanairship.push.QuietTime.START_HOUR", n)) || (!putInt("com.urbanairship.push.QuietTime.START_MINUTE", i1)) || (!putInt("com.urbanairship.push.QuietTime.END_HOUR", i2)) || (!putInt("com.urbanairship.push.QuietTime.END_MINUTE", i3))) {
        break label186;
      }
    }
    for (;;)
    {
      bool2 = bool1;
      if (bool1)
      {
        sendPrefsChangedEvent();
        bool2 = bool1;
      }
      return bool2;
      label186:
      bool1 = false;
    }
  }
  
  public boolean setRetryAfter(long paramLong)
  {
    return putLong("com.urbanairship.push.RETRY_AFTER", paramLong);
  }
  
  public boolean setSoundEnabled(boolean paramBoolean)
  {
    if (isSoundEnabled() != paramBoolean)
    {
      paramBoolean = putBoolean("com.urbanairship.push.SOUND_ENABLED", paramBoolean);
      if (paramBoolean) {
        sendPrefsChangedEvent();
      }
      return paramBoolean;
    }
    return true;
  }
  
  public boolean setTags(Set<String> paramSet)
  {
    if (paramSet == null) {
      return false;
    }
    return putString("com.urbanairship.push.TAGS", new JSONArray(paramSet).toString());
  }
  
  public boolean setVibrateEnabled(boolean paramBoolean)
  {
    if (isVibrateEnabled() != paramBoolean)
    {
      paramBoolean = putBoolean("com.urbanairship.push.VIBRATE_ENABLED", paramBoolean);
      if (paramBoolean) {
        sendPrefsChangedEvent();
      }
      return paramBoolean;
    }
    return true;
  }
  
  private static final class QuietTime
  {
    public static final String ENABLED = "com.urbanairship.push.QuietTime.ENABLED";
    public static final String END_HOUR_KEY = "com.urbanairship.push.QuietTime.END_HOUR";
    public static final String END_MIN_KEY = "com.urbanairship.push.QuietTime.END_MINUTE";
    public static final int NOT_SET_VAL = -1;
    public static final String START_HOUR_KEY = "com.urbanairship.push.QuietTime.START_HOUR";
    public static final String START_MIN_KEY = "com.urbanairship.push.QuietTime.START_MINUTE";
    
    private QuietTime() {}
  }
}
