package com.google.ads;

import android.app.Activity;
import android.content.ActivityNotFoundException;
import android.content.ComponentName;
import android.content.Intent;
import android.content.res.Resources;
import android.net.Uri;
import android.os.Bundle;
import android.os.SystemClock;
import android.util.TypedValue;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.Window;
import android.webkit.WebViewClient;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import com.google.ads.internal.AdVideoView;
import com.google.ads.internal.AdWebView;
import com.google.ads.internal.a;
import com.google.ads.internal.d;
import com.google.ads.internal.e;
import com.google.ads.internal.i;
import com.google.ads.util.AdUtil;
import com.google.ads.util.b;
import com.google.ads.util.f;
import com.google.ads.util.g;
import com.google.ads.util.i.d;
import java.util.HashMap;
import java.util.Map;

public class AdActivity
  extends Activity
  implements View.OnClickListener
{
  public static final String BASE_URL_PARAM = "baseurl";
  public static final String HTML_PARAM = "html";
  public static final String INTENT_ACTION_PARAM = "i";
  public static final String ORIENTATION_PARAM = "o";
  public static final String TYPE_PARAM = "m";
  public static final String URL_PARAM = "u";
  private static final a a = (a)a.a.b();
  private static final Object b = new Object();
  private static AdActivity c = null;
  private static d d = null;
  private static AdActivity e = null;
  private static AdActivity f = null;
  private static final StaticMethodWrapper g = new StaticMethodWrapper();
  private AdWebView h;
  private ViewGroup i = null;
  private boolean j;
  private long k;
  private RelativeLayout l;
  private AdActivity m = null;
  private boolean n;
  private boolean o;
  private AdVideoView p;
  
  public AdActivity() {}
  
  private RelativeLayout.LayoutParams a(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    RelativeLayout.LayoutParams localLayoutParams = new RelativeLayout.LayoutParams(paramInt3, paramInt4);
    localLayoutParams.setMargins(paramInt1, paramInt2, 0, 0);
    localLayoutParams.addRule(10);
    localLayoutParams.addRule(9);
    return localLayoutParams;
  }
  
  private void a(String paramString)
  {
    b.b(paramString);
    finish();
  }
  
  private void a(String paramString, Throwable paramThrowable)
  {
    b.b(paramString, paramThrowable);
    finish();
  }
  
  private void d()
  {
    if (!this.j)
    {
      if (this.h != null)
      {
        a.b(this.h);
        this.h.setAdActivity(null);
        if ((!this.o) && (this.l != null) && (this.i != null))
        {
          this.h.setIsExpandedMraid(false);
          this.l.removeView(this.h);
          this.i.addView(this.h);
        }
      }
      if (this.p != null)
      {
        this.p.e();
        this.p = null;
      }
      if (this == c) {
        c = null;
      }
      f = this.m;
    }
    synchronized (b)
    {
      if ((d != null) && (this.o) && (this.h != null))
      {
        if (this.h == d.j()) {
          d.a();
        }
        this.h.stopLoading();
      }
      if (this == e)
      {
        e = null;
        if (d != null)
        {
          d.s();
          d = null;
        }
      }
      else
      {
        this.j = true;
        b.a("AdActivity is closing.");
        return;
      }
      b.e("currentAdManager is null while trying to destroy AdActivity.");
    }
  }
  
  public static boolean isShowing()
  {
    return g.isShowing();
  }
  
  public static void launchAdActivity(d paramD, e paramE)
  {
    g.launchAdActivity(paramD, paramE);
  }
  
  protected View a(int paramInt)
  {
    ImageButton localImageButton = new ImageButton(getApplicationContext());
    localImageButton.setImageResource(17301527);
    localImageButton.setBackgroundColor(0);
    localImageButton.setOnClickListener(this);
    localImageButton.setPadding(0, 0, 0, 0);
    paramInt = (int)TypedValue.applyDimension(1, paramInt, getResources().getDisplayMetrics());
    FrameLayout localFrameLayout = new FrameLayout(getApplicationContext());
    localFrameLayout.addView(localImageButton, paramInt, paramInt);
    return localFrameLayout;
  }
  
  protected AdVideoView a(Activity paramActivity)
  {
    return new AdVideoView(paramActivity, this.h);
  }
  
  protected void a(AdWebView paramAdWebView, boolean paramBoolean1, int paramInt, boolean paramBoolean2)
  {
    requestWindowFeature(1);
    Object localObject = getWindow();
    ((Window)localObject).setFlags(1024, 1024);
    if (AdUtil.a >= 14) {
      g.a((Window)localObject);
    }
    for (;;)
    {
      localObject = paramAdWebView.getParent();
      if (localObject != null)
      {
        if (!paramBoolean2) {
          break label115;
        }
        if (!(localObject instanceof ViewGroup)) {
          break;
        }
        this.i = ((ViewGroup)localObject);
        this.i.removeView(paramAdWebView);
      }
      if (paramAdWebView.b() == null) {
        break label123;
      }
      a("Interstitial created with an AdWebView that is already in use by another AdActivity.");
      return;
      if (AdUtil.a >= 11) {
        g.a(paramAdWebView);
      }
    }
    a("MRAID banner was not a child of a ViewGroup.");
    return;
    label115:
    a("Interstitial created with an AdWebView that has a parent.");
    return;
    label123:
    setRequestedOrientation(paramInt);
    paramAdWebView.setAdActivity(this);
    label141:
    RelativeLayout.LayoutParams localLayoutParams;
    if (paramBoolean2)
    {
      paramInt = 50;
      localObject = a(paramInt);
      this.l.addView(paramAdWebView, -1, -1);
      localLayoutParams = new RelativeLayout.LayoutParams(-2, -2);
      if (!paramBoolean2) {
        break label248;
      }
      localLayoutParams.addRule(10);
      localLayoutParams.addRule(11);
    }
    for (;;)
    {
      this.l.addView((View)localObject, localLayoutParams);
      this.l.setKeepScreenOn(true);
      setContentView(this.l);
      this.l.getRootView().setBackgroundColor(-16777216);
      if (!paramBoolean1) {
        break;
      }
      a.a(paramAdWebView);
      return;
      paramInt = 32;
      break label141;
      label248:
      localLayoutParams.addRule(10);
      localLayoutParams.addRule(9);
    }
  }
  
  protected void a(d paramD)
  {
    this.h = null;
    this.k = SystemClock.elapsedRealtime();
    this.n = true;
    synchronized (b)
    {
      if (c == null)
      {
        c = this;
        paramD.u();
      }
      return;
    }
  }
  
  protected void a(HashMap<String, String> paramHashMap, d paramD)
  {
    Intent localIntent = new Intent();
    localIntent.setComponent(new ComponentName("com.google.android.apps.plus", "com.google.android.apps.circles.platform.PlusOneActivity"));
    localIntent.addCategory("android.intent.category.LAUNCHER");
    localIntent.putExtras(getIntent().getExtras());
    localIntent.putExtra("com.google.circles.platform.intent.extra.ENTITY", (String)paramHashMap.get("u"));
    localIntent.putExtra("com.google.circles.platform.intent.extra.ENTITY_TYPE", ag.b.a.c);
    localIntent.putExtra("com.google.circles.platform.intent.extra.ACTION", (String)paramHashMap.get("a"));
    a(paramD);
    try
    {
      b.a("Launching Google+ intent from AdActivity.");
      startActivityForResult(localIntent, 0);
      return;
    }
    catch (ActivityNotFoundException paramHashMap)
    {
      a(paramHashMap.getMessage(), paramHashMap);
    }
  }
  
  protected void b(HashMap<String, String> paramHashMap, d paramD)
  {
    if (paramHashMap == null)
    {
      a("Could not get the paramMap in launchIntent()");
      return;
    }
    Object localObject = (String)paramHashMap.get("u");
    if (localObject == null)
    {
      a("Could not get the URL parameter in launchIntent().");
      return;
    }
    String str2 = (String)paramHashMap.get("i");
    String str1 = (String)paramHashMap.get("m");
    localObject = Uri.parse((String)localObject);
    if (str2 == null) {}
    for (paramHashMap = new Intent("android.intent.action.VIEW", (Uri)localObject);; paramHashMap = new Intent(str2, (Uri)localObject))
    {
      if (str1 != null) {
        paramHashMap.setDataAndType((Uri)localObject, str1);
      }
      a(paramD);
      try
      {
        b.a("Launching an intent from AdActivity: " + paramHashMap.getAction() + " - " + localObject);
        startActivity(paramHashMap);
        return;
      }
      catch (ActivityNotFoundException paramHashMap)
      {
        a(paramHashMap.getMessage(), paramHashMap);
        return;
      }
    }
  }
  
  public AdVideoView getAdVideoView()
  {
    return this.p;
  }
  
  public AdWebView getOpeningAdWebView()
  {
    if (this.m != null) {
      return this.m.h;
    }
    synchronized (b)
    {
      if (d == null)
      {
        b.e("currentAdManager was null while trying to get the opening AdWebView.");
        return null;
      }
    }
    AdWebView localAdWebView = d.j();
    if (localAdWebView != this.h) {
      return localAdWebView;
    }
    return null;
  }
  
  public void moveAdVideoView(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    if (this.p != null)
    {
      this.p.setLayoutParams(a(paramInt1, paramInt2, paramInt3, paramInt4));
      this.p.requestLayout();
    }
  }
  
  public void newAdVideoView(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    if (this.p == null)
    {
      this.p = a(this);
      this.l.addView(this.p, 0, a(paramInt1, paramInt2, paramInt3, paramInt4));
      synchronized (b)
      {
        if (d == null)
        {
          b.e("currentAdManager was null while trying to get the opening AdWebView.");
          return;
        }
        d.k().b(false);
        return;
      }
    }
  }
  
  public void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    super.onActivityResult(paramInt1, paramInt2, paramIntent);
    if ((getOpeningAdWebView() != null) && (paramIntent != null) && (paramIntent.getExtras() != null) && (paramIntent.getExtras().getString("com.google.circles.platform.result.extra.CONFIRMATION") != null) && (paramIntent.getExtras().getString("com.google.circles.platform.result.extra.ACTION") != null))
    {
      String str = paramIntent.getExtras().getString("com.google.circles.platform.result.extra.CONFIRMATION");
      paramIntent = paramIntent.getExtras().getString("com.google.circles.platform.result.extra.ACTION");
      if (str.equals("yes"))
      {
        if (!paramIntent.equals("insert")) {
          break label108;
        }
        ae.a(getOpeningAdWebView(), true);
      }
    }
    for (;;)
    {
      finish();
      return;
      label108:
      if (paramIntent.equals("delete")) {
        ae.a(getOpeningAdWebView(), false);
      }
    }
  }
  
  public void onClick(View paramView)
  {
    finish();
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    this.j = false;
    boolean bool2;
    synchronized (b)
    {
      if (d != null)
      {
        paramBundle = d;
        if (e == null)
        {
          e = this;
          paramBundle.t();
        }
        if ((this.m == null) && (f != null)) {
          this.m = f;
        }
        f = this;
        if (((paramBundle.g().a()) && (e == this)) || ((paramBundle.g().b()) && (this.m == e))) {
          paramBundle.v();
        }
        bool2 = d.p();
        this.l = null;
        this.n = false;
        this.o = true;
        this.p = null;
        ??? = getIntent().getBundleExtra("com.google.ads.AdOpener");
        if (??? == null) {
          a("Could not get the Bundle used to create AdActivity.");
        }
      }
      else
      {
        a("Could not get currentAdManager.");
        return;
      }
    }
    ??? = new e((Bundle)???);
    Object localObject2 = ((e)???).b();
    ??? = ((e)???).c();
    if (((String)localObject2).equals("plusone"))
    {
      a((HashMap)???, paramBundle);
      return;
    }
    if (((String)localObject2).equals("intent"))
    {
      b((HashMap)???, paramBundle);
      return;
    }
    this.l = new RelativeLayout(getApplicationContext());
    label383:
    int i1;
    if (((String)localObject2).equals("webapp"))
    {
      this.h = new AdWebView(paramBundle.g(), null);
      localObject2 = a.c;
      boolean bool1;
      String str1;
      String str2;
      if (!bool2)
      {
        bool1 = true;
        localObject2 = i.a(paramBundle, (Map)localObject2, true, bool1);
        ((i)localObject2).d(true);
        if (bool2) {
          ((i)localObject2).a(true);
        }
        this.h.setWebViewClient((WebViewClient)localObject2);
        localObject2 = (String)((HashMap)???).get("u");
        str1 = (String)((HashMap)???).get("baseurl");
        str2 = (String)((HashMap)???).get("html");
        if (localObject2 == null) {
          break label428;
        }
        this.h.loadUrl((String)localObject2);
        ??? = (String)((HashMap)???).get("o");
        if (!"p".equals(???)) {
          break label462;
        }
        i1 = AdUtil.b();
      }
      for (;;)
      {
        a(this.h, false, i1, bool2);
        return;
        bool1 = false;
        break;
        label428:
        if (str2 != null)
        {
          this.h.loadDataWithBaseURL(str1, str2, "text/html", "utf-8", null);
          break label383;
        }
        a("Could not get the URL or HTML parameter to show a web app.");
        return;
        label462:
        if ("l".equals(???)) {
          i1 = AdUtil.a();
        } else if (this == e) {
          i1 = paramBundle.m();
        } else {
          i1 = -1;
        }
      }
    }
    if ((((String)localObject2).equals("interstitial")) || (((String)localObject2).equals("expand")))
    {
      this.h = paramBundle.j();
      i1 = paramBundle.m();
      if (((String)localObject2).equals("expand"))
      {
        this.h.setIsExpandedMraid(true);
        this.o = false;
      }
      a(this.h, true, i1, bool2);
      return;
    }
    a("Unknown AdOpener, <action: " + (String)localObject2 + ">");
  }
  
  public void onDestroy()
  {
    if (this.l != null) {
      this.l.removeAllViews();
    }
    if (isFinishing())
    {
      d();
      if ((this.o) && (this.h != null))
      {
        this.h.stopLoading();
        this.h.destroy();
        this.h = null;
      }
    }
    super.onDestroy();
  }
  
  public void onPause()
  {
    if (isFinishing()) {
      d();
    }
    super.onPause();
  }
  
  public void onWindowFocusChanged(boolean paramBoolean)
  {
    if ((this.n) && (paramBoolean) && (SystemClock.elapsedRealtime() - this.k > 250L))
    {
      b.d("Launcher AdActivity got focus and is closing.");
      finish();
    }
    super.onWindowFocusChanged(paramBoolean);
  }
  
  public static class StaticMethodWrapper
  {
    public StaticMethodWrapper() {}
    
    public boolean isShowing()
    {
      for (;;)
      {
        synchronized ()
        {
          if (AdActivity.b() != null)
          {
            bool = true;
            return bool;
          }
        }
        boolean bool = false;
      }
    }
    
    public void launchAdActivity(d paramD, e paramE)
    {
      synchronized ()
      {
        if (AdActivity.c() == null) {
          AdActivity.b(paramD);
        }
        while (AdActivity.c() == paramD)
        {
          paramD = (Activity)paramD.g().c.a();
          if (paramD != null) {
            break;
          }
          b.e("activity was null while launching an AdActivity.");
          return;
        }
        b.b("Tried to launch a new AdActivity with a different AdManager.");
        return;
      }
      ??? = new Intent(paramD.getApplicationContext(), AdActivity.class);
      ((Intent)???).putExtra("com.google.ads.AdOpener", paramE.a());
      try
      {
        b.a("Launching AdActivity.");
        paramD.startActivity((Intent)???);
        return;
      }
      catch (ActivityNotFoundException paramD)
      {
        b.b("Activity not found.", paramD);
      }
    }
  }
}
