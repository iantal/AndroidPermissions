package com.waterwest.mmlog;

import android.content.Context;
import android.content.res.Resources;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.os.Build.VERSION;
import android.telephony.TelephonyManager;
import android.util.DisplayMetrics;
import android.util.Log;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Enumeration;

public final class d
{
  public static int a = -1;
  private static long i = 0L;
  private static long j = 0L;
  
  public static long a()
  {
    return j;
  }
  
  private static String a(Context paramContext, int paramInt)
  {
    String str6 = TrustInfo.appId;
    String str7 = TrustInfo.paycode;
    String str10 = TrustInfo.tid;
    String str1 = TrustInfo.packageName;
    if (str1 == null) {
      str1 = TrustInfo.packageName;
    }
    for (;;)
    {
      String str8 = TrustInfo.version;
      String str9 = TrustInfo.channelID;
      String str2 = ((TelephonyManager)paramContext.getSystemService("phone")).getSubscriberId();
      if (str2 == null) {
        str2 = "10086";
      }
      for (;;)
      {
        String str3 = ((TelephonyManager)paramContext.getSystemService("phone")).getDeviceId();
        if ((str3 == null) || (str3.equals(""))) {
          str3 = "10086";
        }
        for (;;)
        {
          String str15 = Build.MODEL;
          String str11 = TrustInfo.programID;
          String str16 = Build.VERSION.RELEASE;
          String str17 = n(paramContext).widthPixels + "*" + n(paramContext).heightPixels;
          String str12 = d();
          Object localObject = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
          if (localObject == null) {
            localObject = "";
          }
          label1336:
          for (;;)
          {
            String str4 = "";
            if (((String)localObject).compareTo("GPRS") != 0) {
              str4 = ((WifiManager)paramContext.getSystemService("wifi")).getConnectionInfo().getSSID();
            }
            String str13 = String.valueOf(i);
            String str14 = String.valueOf(j);
            String str5 = "unknown";
            Calendar.getInstance().getTimeInMillis();
            String str18 = f();
            paramContext = str5;
            switch (a)
            {
            default: 
              paramContext = str5;
            }
            for (;;)
            {
              if (a == 5)
              {
                paramContext = TrustInfo.esm;
                str5 = TrustInfo.mdh;
                str10 = TrustInfo.pkm;
                paramContext = paramContext + "@@" + str5 + "@@" + str10 + "@@" + str6 + "@@" + str7 + "@@" + "1" + "@@" + "0" + "@@" + str1 + "@@" + str8 + "@@" + str9 + "@@" + str11 + "@@" + str2 + "@@" + str3 + "@@" + (String)localObject + "@@" + str12 + "@@" + str4 + "@@" + str13 + "@@" + str14;
              }
              return paramContext;
              localObject = ((NetworkInfo)localObject).getTypeName();
              if ((((String)localObject).compareTo("MOBILE") != 0) && (((String)localObject).compareTo("mobile") != 0)) {
                break label1336;
              }
              localObject = "GPRS";
              break;
              if (paramInt == 0)
              {
                paramContext = "2@@" + str6 + "@@" + str1 + "@@" + str8 + "@@" + str9 + "@@" + str2 + "@@" + str3 + "@@" + str15 + "@@" + str16 + "@@" + str17 + "@@" + (String)localObject + "@@" + str12 + "@@" + str4 + "@@" + "3.1.3" + "@@" + str13 + "@@" + str14;
              }
              else if (paramInt == 1)
              {
                paramContext = "2@@" + str6 + "@@" + str1 + "@@" + str8 + "@@" + str9 + "@@" + str11 + "@@" + str2 + "@@" + str3 + "@@" + str15 + "@@" + str16 + "@@" + str17 + "@@" + (String)localObject + "@@" + str12 + "@@" + str4 + "@@" + "3.1.3" + "@@" + str13 + "@@" + str14 + "@@3";
              }
              else
              {
                paramContext = "2@@" + str6 + "@@" + str7 + "@@" + "1" + "@@" + null + "@@" + "0" + "@@" + str1 + "@@" + str8 + "@@" + str9 + "@@" + str11 + "@@" + str2 + "@@" + str3 + "@@" + (String)localObject + "@@" + str12 + "@@" + str4 + "@@" + "3.1.3" + "@@" + str13 + "@@" + str14 + "@@3";
                continue;
                paramContext = "2@@" + str6 + "@@" + str7 + "@@" + "1" + "@@" + str10 + "@@" + "0" + "@@" + str1 + "@@" + str8 + "@@" + str9 + "@@" + str11 + "@@" + str2 + "@@" + str3 + "@@" + (String)localObject + "@@" + str12 + "@@" + str4 + "@@" + "3.1.3" + "@@" + str13 + "@@" + str14 + "@@3";
                continue;
                paramContext = str6 + "@@" + str1 + "@@" + str8 + "@@" + str9 + "@@" + str11 + "@@" + str2 + "@@" + str3 + "@@" + "3.1.3" + "@@" + str18 + "@@" + "" + "@@3";
              }
            }
          }
        }
      }
    }
  }
  
  public static void a(long paramLong)
  {
    j = paramLong;
  }
  
  public static void a(Context paramContext)
  {
    switch (a)
    {
    default: 
      g.c(paramContext, e(), a(paramContext, 0));
      return;
    }
    g.c(paramContext, e(), a(paramContext, 0));
    g.c(paramContext, e(), a(paramContext, 1));
  }
  
  public static void a(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7)
  {
    g.a(paramContext, paramString1, paramString2, paramString3, paramString4, paramString5, paramString6, paramString7);
  }
  
  public static void b()
  {
    i = Calendar.getInstance().getTimeInMillis() / 1000L;
  }
  
  public static void b(long paramLong)
  {
    i = paramLong;
  }
  
  public static void c()
  {
    j = Calendar.getInstance().getTimeInMillis() / 1000L;
  }
  
  private static String d()
  {
    try
    {
      localObject = NetworkInterface.getNetworkInterfaces();
      boolean bool = ((Enumeration)localObject).hasMoreElements();
      if (bool) {
        break label18;
      }
    }
    catch (SocketException localSocketException)
    {
      for (;;)
      {
        Object localObject;
        label18:
        Enumeration localEnumeration;
        InetAddress localInetAddress;
        Log.e("WifiPreference IpAddress", localSocketException.toString());
      }
    }
    return "";
    localEnumeration = ((NetworkInterface)((Enumeration)localObject).nextElement()).getInetAddresses();
    do
    {
      if (!localEnumeration.hasMoreElements()) {
        break;
      }
      localInetAddress = (InetAddress)localEnumeration.nextElement();
    } while (localInetAddress.isLoopbackAddress());
    localObject = localInetAddress.getHostAddress().toString();
    return localObject;
  }
  
  private static String e()
  {
    switch (a)
    {
    case 4: 
    default: 
      return "_pay_logaction";
    case 1: 
      return "_pay_init";
    case 2: 
      return "_pay_auth";
    case 3: 
      return "_pay_pay";
    case 5: 
      return "_security_check";
    }
    return "_pay_remain";
  }
  
  private static String f()
  {
    Object localObject = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    Date localDate = new Date();
    try
    {
      localObject = ((SimpleDateFormat)localObject).parse("2010-01-01 0:0:0");
      return Long.toString((new Date().getTime() - ((Date)localObject).getTime()) / 1000L);
    }
    catch (ParseException localParseException)
    {
      localParseException.printStackTrace();
    }
    return Long.toString((new Date().getTime() - localDate.getTime()) / 1000L);
  }
  
  private static DisplayMetrics n(Context paramContext)
  {
    new DisplayMetrics();
    return paramContext.getResources().getDisplayMetrics();
  }
}
