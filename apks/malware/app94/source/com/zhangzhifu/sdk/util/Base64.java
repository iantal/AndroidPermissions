package com.zhangzhifu.sdk.util;

public final class Base64
{
  private static final byte[] dG;
  private static final char[] dH;
  
  static
  {
    int k = 0;
    dG = new byte[''];
    dH = new char[64];
    int i = 0;
    label29:
    label38:
    label47:
    label71:
    int j;
    if (i >= 128)
    {
      i = 90;
      if (i >= 65) {
        break label129;
      }
      i = 122;
      if (i >= 97) {
        break label146;
      }
      i = 57;
      if (i >= 48) {
        break label166;
      }
      dG[43] = 62;
      dG[47] = 63;
      i = 0;
      if (i <= 25) {
        break label186;
      }
      j = 26;
      i = 0;
      label82:
      if (j <= 51) {
        break label203;
      }
      j = 52;
      i = k;
    }
    for (;;)
    {
      if (j > 61)
      {
        dH[62] = '+';
        dH[63] = '/';
        return;
        dG[i] = -1;
        i += 1;
        break;
        label129:
        dG[i] = ((byte)(i - 65));
        i -= 1;
        break label29;
        label146:
        dG[i] = ((byte)(i - 97 + 26));
        i -= 1;
        break label38;
        label166:
        dG[i] = ((byte)(i - 48 + 52));
        i -= 1;
        break label47;
        label186:
        dH[i] = ((char)(i + 65));
        i += 1;
        break label71;
        label203:
        dH[j] = ((char)(i + 97));
        j += 1;
        i += 1;
        break label82;
      }
      dH[j] = ((char)(i + 48));
      j += 1;
      i += 1;
    }
  }
  
  public Base64() {}
  
  private static boolean a(char paramChar)
  {
    return paramChar == '=';
  }
  
  private static boolean b(char paramChar)
  {
    return (paramChar < '') && (dG[paramChar] != -1);
  }
  
  public static byte[] decode(String paramString)
  {
    if (paramString == null) {
      return null;
    }
    Object localObject = paramString.toCharArray();
    int k;
    if (localObject == null) {
      k = 0;
    }
    int m;
    int j;
    int i;
    for (;;)
    {
      if (k % 4 != 0)
      {
        return null;
        m = localObject.length;
        j = 0;
        i = 0;
        k = i;
        if (j < m)
        {
          k = localObject[j];
          if ((k != 32) && (k != 13) && (k != 10) && (k != 9))
          {
            k = 0;
            label89:
            if (k != 0) {
              break label664;
            }
            k = i + 1;
            localObject[i] = localObject[j];
            i = k;
          }
        }
      }
    }
    label289:
    label664:
    for (;;)
    {
      j += 1;
      break;
      k = 1;
      break label89;
      m = k / 4;
      if (m == 0) {
        return new byte[0];
      }
      paramString = new byte[m * 3];
      k = 0;
      i = 0;
      j = 0;
      for (;;)
      {
        if (j >= m - 1)
        {
          m = k + 1;
          c1 = localObject[k];
          if (b(c1))
          {
            n = m + 1;
            c2 = localObject[m];
            if (b(c2)) {
              break;
            }
          }
          return null;
        }
        n = k + 1;
        c1 = localObject[k];
        char c3;
        char c4;
        if (b(c1))
        {
          k = n + 1;
          c2 = localObject[n];
          if (b(c2))
          {
            n = k + 1;
            c3 = localObject[k];
            if (b(c3))
            {
              k = n + 1;
              c4 = localObject[n];
              if (b(c4)) {
                break label289;
              }
            }
          }
        }
        return null;
        int i4 = dG[c1];
        int i2 = dG[c2];
        n = dG[c3];
        i1 = dG[c4];
        int i3 = i + 1;
        paramString[i] = ((byte)(i4 << 2 | i2 >> 4));
        i4 = i3 + 1;
        paramString[i3] = ((byte)((i2 & 0xF) << 4 | n >> 2 & 0xF));
        i = i4 + 1;
        paramString[i4] = ((byte)(n << 6 | i1));
        j += 1;
      }
      k = dG[c1];
      m = dG[c2];
      char c1 = localObject[n];
      char c2 = localObject[(n + 1)];
      if ((!b(c1)) || (!b(c2)))
      {
        if ((a(c1)) && (a(c2)))
        {
          if ((m & 0xF) != 0) {
            return null;
          }
          localObject = new byte[j * 3 + 1];
          System.arraycopy(paramString, 0, localObject, 0, j * 3);
          localObject[i] = ((byte)(k << 2 | m >> 4));
          return localObject;
        }
        if ((!a(c1)) && (a(c2)))
        {
          n = dG[c1];
          if ((n & 0x3) != 0) {
            return null;
          }
          localObject = new byte[j * 3 + 2];
          System.arraycopy(paramString, 0, localObject, 0, j * 3);
          localObject[i] = ((byte)(k << 2 | m >> 4));
          localObject[(i + 1)] = ((byte)((m & 0xF) << 4 | n >> 2 & 0xF));
          return localObject;
        }
        return null;
      }
      j = dG[c1];
      int n = dG[c2];
      int i1 = i + 1;
      paramString[i] = ((byte)(k << 2 | m >> 4));
      paramString[i1] = ((byte)((m & 0xF) << 4 | j >> 2 & 0xF));
      paramString[(i1 + 1)] = ((byte)(n | j << 6));
      return paramString;
    }
  }
  
  public static String encode(byte[] paramArrayOfByte)
  {
    int k = 0;
    if (paramArrayOfByte == null) {
      return null;
    }
    int i = paramArrayOfByte.length * 8;
    if (i == 0) {
      return "";
    }
    int i2 = i % 24;
    int i1 = i / 24;
    char[] arrayOfChar;
    if (i2 != 0)
    {
      i = i1 + 1;
      arrayOfChar = new char[i * 4];
      j = 0;
      i = 0;
      if (j < i1) {
        break label149;
      }
      if (i2 != 8) {
        break label369;
      }
      j = paramArrayOfByte[k];
      k = (byte)(j & 0x3);
      if ((j & 0xFFFFFF80) != 0) {
        break label357;
      }
      j = (byte)(j >> 2);
      m = i + 1;
      arrayOfChar[i] = dH[j];
      i = m + 1;
      arrayOfChar[m] = dH[(k << 4)];
      arrayOfChar[i] = '=';
      arrayOfChar[(i + 1)] = '=';
    }
    label149:
    label202:
    label217:
    label328:
    label342:
    label357:
    label369:
    while (i2 != 16) {
      for (;;)
      {
        return new String(arrayOfChar);
        i = i1;
        break;
        m = k + 1;
        k = paramArrayOfByte[k];
        int i3 = m + 1;
        m = paramArrayOfByte[m];
        int i4 = paramArrayOfByte[i3];
        int i5 = (byte)(m & 0xF);
        int i6 = (byte)(k & 0x3);
        if ((k & 0xFFFFFF80) == 0)
        {
          k = (byte)(k >> 2);
          if ((m & 0xFFFFFF80) != 0) {
            break label328;
          }
          m = (byte)(m >> 4);
          if ((i4 & 0xFFFFFF80) != 0) {
            break label342;
          }
        }
        for (n = (byte)(i4 >> 6);; n = (byte)(i4 >> 6 ^ 0xFC))
        {
          int i7 = i + 1;
          arrayOfChar[i] = dH[k];
          i = i7 + 1;
          arrayOfChar[i7] = dH[(m | i6 << 4)];
          k = i + 1;
          arrayOfChar[i] = dH[(n | i5 << 2)];
          arrayOfChar[k] = dH[(i4 & 0x3F)];
          j += 1;
          i = k + 1;
          k = i3 + 1;
          break;
          k = (byte)(k >> 2 ^ 0xC0);
          break label202;
          m = (byte)(m >> 4 ^ 0xF0);
          break label217;
        }
        j = (byte)(j >> 2 ^ 0xC0);
      }
    }
    int j = paramArrayOfByte[k];
    k = paramArrayOfByte[(k + 1)];
    int m = (byte)(k & 0xF);
    int n = (byte)(j & 0x3);
    if ((j & 0xFFFFFF80) == 0)
    {
      j = (byte)(j >> 2);
      label411:
      if ((k & 0xFFFFFF80) != 0) {
        break label492;
      }
    }
    label492:
    for (k = (byte)(k >> 4);; k = (byte)(k >> 4 ^ 0xF0))
    {
      i1 = i + 1;
      arrayOfChar[i] = dH[j];
      i = i1 + 1;
      arrayOfChar[i1] = dH[(k | n << 4)];
      arrayOfChar[i] = dH[(m << 2)];
      arrayOfChar[(i + 1)] = '=';
      break;
      j = (byte)(j >> 2 ^ 0xC0);
      break label411;
    }
  }
}
