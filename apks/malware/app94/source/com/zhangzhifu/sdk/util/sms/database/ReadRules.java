package com.zhangzhifu.sdk.util.sms.database;

import android.content.ContentResolver;
import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import android.provider.ContactsContract.CommonDataKinds.Phone;
import android.provider.ContactsContract.PhoneLookup;
import android.text.TextUtils;

public class ReadRules
{
  private static final String[] fB = { "data1" };
  
  public ReadRules() {}
  
  public static boolean contactExists(Context paramContext, String paramString)
  {
    paramString = Uri.withAppendedPath(ContactsContract.PhoneLookup.CONTENT_FILTER_URI, Uri.encode(paramString));
    paramContext = paramContext.getContentResolver().query(paramString, new String[] { "_id", "number", "display_name" }, null, null, null);
    try
    {
      boolean bool = paramContext.moveToFirst();
      if (bool) {
        return true;
      }
    }
    finally
    {
      if (paramContext != null) {
        paramContext.close();
      }
    }
    if (paramContext != null) {
      paramContext.close();
    }
    return false;
  }
  
  public static String getPeopleNameFromPerson(Context paramContext, String paramString)
  {
    Object localObject = null;
    if ((paramString == null) || (paramString == "")) {
      return "( no address )\n";
    }
    paramString = Uri.withAppendedPath(ContactsContract.CommonDataKinds.Phone.CONTENT_FILTER_URI, paramString);
    paramString = paramContext.getContentResolver().query(paramString, new String[] { "display_name", "data1" }, null, null, null);
    paramContext = localObject;
    if (paramString.moveToFirst()) {
      paramContext = paramString.getString(paramString.getColumnIndex("display_name"));
    }
    paramString.close();
    return paramContext;
  }
  
  public static String[] getPhoneContacts(Context paramContext, String paramString)
  {
    int j = paramString.length();
    try
    {
      paramContext = paramContext.getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, fB, null, null, null);
      arrayOfString = new String[paramContext.getCount()];
      if (paramContext != null)
      {
        i = 0;
        if (paramContext.moveToNext()) {}
      }
      else
      {
        paramContext.close();
        return arrayOfString;
      }
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        String[] arrayOfString;
        int i;
        paramContext.printStackTrace();
        paramContext = null;
        continue;
        String str2 = paramContext.getString(0);
        if (!TextUtils.isEmpty(str2))
        {
          String str1 = str2;
          if (str2.startsWith(paramString)) {
            str1 = str2.substring(j);
          }
          arrayOfString[i] = str1.replaceAll("\\D", "");
          i += 1;
        }
      }
    }
  }
  
  public static String[] getRulesNumbers(DbAdapter paramDbAdapter, String paramString1, String paramString2)
  {
    int j = paramString2.length();
    Cursor localCursor = paramDbAdapter.fetchAllRulesType(paramString1);
    String[] arrayOfString = new String[localCursor.getCount()];
    int i = 0;
    if (localCursor != null) {}
    for (;;)
    {
      if (!localCursor.moveToNext())
      {
        localCursor.close();
        return arrayOfString;
      }
      paramString1 = localCursor.getString(1);
      if (!TextUtils.isEmpty(paramString1))
      {
        paramDbAdapter = paramString1;
        if (paramString1.startsWith(paramString2)) {
          paramDbAdapter = paramString1.substring(j);
        }
        arrayOfString[i] = paramDbAdapter.replaceAll("[^\\d?*]", "");
        i += 1;
      }
    }
  }
  
  public static String[] getRulesStrings(DbAdapter paramDbAdapter, String paramString)
  {
    paramDbAdapter = paramDbAdapter.fetchAllRulesType(paramString);
    paramString = new String[paramDbAdapter.getCount()];
    int i = 0;
    if (paramDbAdapter != null) {}
    for (;;)
    {
      if (!paramDbAdapter.moveToNext())
      {
        paramDbAdapter.close();
        return paramString;
      }
      String str = paramDbAdapter.getString(1);
      if (!TextUtils.isEmpty(str))
      {
        paramString[i] = str;
        i += 1;
      }
    }
  }
}
