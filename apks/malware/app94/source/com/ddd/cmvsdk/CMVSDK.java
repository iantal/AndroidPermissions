package com.ddd.cmvsdk;

import android.app.PendingIntent;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.net.Uri;
import android.os.Build;
import android.os.Handler;
import android.telephony.SmsManager;
import android.telephony.TelephonyManager;
import android.util.Base64;
import com.loopj.android.http.AsyncHttpClient;
import com.loopj.android.http.PersistentCookieStore;
import com.loopj.android.http.RequestParams;
import com.qdzg.yqwzo.manager.SDKManager;
import com.qdzg.yqwzo.manager.SecurityManager;
import java.util.Map;
import java.util.Random;
import org.apache.http.cookie.Cookie;

public class CMVSDK
{
  private static String B = "CMVSDK_BROADCAST_KEY";
  private static boolean D = false;
  private static boolean E = false;
  public static String a = "SMS_SEND_ACTIOIN";
  public static String b = "SMS_DELIVERED_ACTION";
  private static String c = "3.0.0";
  private static int d = 217;
  private static CMVSDK e = null;
  private static Context f = null;
  private static PersistentCookieStore g = null;
  private static AsyncHttpClient h;
  private static String i = null;
  private static String j = null;
  private static int k = 0;
  private static String l = null;
  private static String m = null;
  private static String n = "samsung_samsung_GT-N7108";
  private static String o = "";
  private static String p = "ok";
  private static String q = "";
  private static String r = "";
  private static String s = null;
  private static String t;
  private static boolean u = false;
  private static boolean v = false;
  private static boolean w = false;
  private PendingIntent A;
  private Handler C = new b(this);
  private Map F = null;
  private String G = null;
  private int H = 0;
  private int I = 0;
  private CMVSDK.MyReceiver x;
  private j y = null;
  private PendingIntent z;
  
  private CMVSDK() {}
  
  public static void a(int paramInt, String paramString)
  {
    Intent localIntent = new Intent(B);
    localIntent.putExtra("cmvsdk_id", paramInt);
    if ((paramString != null) && (!"".equals(paramString.trim())))
    {
      localIntent.putExtra("cmvsdk_result", paramString);
      f.sendBroadcast(localIntent);
    }
  }
  
  public static void a(Context paramContext, String paramString)
  {
    if (D)
    {
      E = true;
      return;
    }
    D = true;
    E = true;
    a(paramContext, null, "ok");
  }
  
  public static void a(Context paramContext, String paramString1, String paramString2)
  {
    if (paramContext != null) {
      f = paramContext;
    }
    if (p != null) {
      p = paramString2;
    }
    v = false;
    u = false;
    w = false;
    SecurityManager.initLib(f);
    if (e == null) {
      e = new CMVSDK();
    }
    if ((paramString1 != null) && (!Const.setConfig(paramString1))) {
      a(2, "error");
    }
    paramContext = ((TelephonyManager)f.getSystemService("phone")).getSubscriberId();
    i = paramContext;
    j = l.a(paramContext);
    SecurityManager.init(i, k, 2);
    s = f.getPackageName();
    n = (Build.BRAND + "_" + Build.MANUFACTURER + "_" + Build.MODEL).replace(" ", "_");
    paramContext = f;
    if (paramContext != null)
    {
      paramContext = l.a(l.a(paramContext));
      t = l.a(paramContext);
      paramContext = e;
      paramString1 = new Intent(a);
      paramString2 = new Intent(b);
      paramContext.z = PendingIntent.getBroadcast(f.getApplicationContext(), 0, paramString1, 0);
      paramContext.A = PendingIntent.getBroadcast(f.getApplicationContext(), 0, paramString2, 0);
      paramString1 = new IntentFilter(a);
      paramContext.x = new CMVSDK.MyReceiver(paramContext);
      f.registerReceiver(paramContext.x, paramString1);
      paramContext.y = new j(paramContext, f.getApplicationContext(), paramContext.C);
      f.getContentResolver().registerContentObserver(Uri.parse("content://sms/"), true, paramContext.y);
      paramContext = e;
      paramContext = new AsyncHttpClient();
      paramContext.setTimeout(50000);
      g = new PersistentCookieStore(f);
      paramContext.setCookieStore(g);
      paramContext.addHeader("X_UP_CLIENT_CHANNEL_ID", Const.g);
      paramContext.addHeader("x-up-bear-type", "WLAN");
      paramContext.addHeader("WDAccept-Encoding", "gzip,deflate");
      paramContext.setUserAgent(n);
      h = paramContext;
      paramContext = e;
      int i1 = f.getSharedPreferences("CMVSDK_SHAREDPREFERENCES", 0).getInt("random", -1);
      paramString1 = h("imsi");
      paramString2 = h("mobile");
      String str1 = h("tokenString");
      String str2 = h("tokenValue");
      if ((paramString1 == null) || (!paramString1.equals(i)) || (i1 < 0) || (str1 == null) || (str1 == null)) {
        break label546;
      }
      i = paramString1;
      j = l.a(paramString1);
      k = i1;
      q = paramString2;
      l = str1;
      m = str2;
      SecurityManager.init(i, k, 2);
      D = false;
    }
    for (;;)
    {
      paramContext.g(null);
      paramContext.a("config");
      return;
      paramContext = null;
      break;
      label546:
      k = new Random().nextInt(9999);
      l = null;
      m = null;
    }
  }
  
  public static void a(String paramString, int paramInt)
  {
    SharedPreferences.Editor localEditor = f.getSharedPreferences("CMVSDK_SHAREDPREFERENCES", 0).edit();
    localEditor.putInt(paramString, paramInt);
    localEditor.commit();
  }
  
  public static boolean a(String paramString1, String paramString2)
  {
    return (paramString1 != null) && (paramString2 != null) && (paramString1.startsWith("10086")) && ((paramString2.contains("北方视讯")) || (paramString2.contains("中青")) || (paramString2.contains("成功订购")) || (paramString2.contains("10086901")));
  }
  
  public static String b(String paramString)
  {
    Object localObject3 = null;
    Object localObject1 = paramString;
    if (paramString != null)
    {
      localObject1 = paramString;
      if (paramString.contains("<![CDATA["))
      {
        localObject1 = paramString;
        if (paramString.contains("]]>")) {
          localObject1 = paramString.substring(paramString.indexOf("<![CDATA[") + 9, paramString.indexOf("]]>"));
        }
      }
    }
    int i1;
    Object localObject2;
    int i2;
    if (localObject1 != null)
    {
      paramString = "dfzyh";
      if (((String)localObject1).contains("dfzyh"))
      {
        paramString = "dfzyh";
        i1 = ((String)localObject1).indexOf(paramString);
        if (i1 <= 0) {
          break label351;
        }
        localObject2 = ((String)localObject1).substring(paramString.length() + i1).getBytes();
        i2 = 0;
        i1 = 0;
        paramString = null;
        if (i1 < localObject2.length) {
          break label191;
        }
        localObject1 = null;
      }
    }
    for (;;)
    {
      localObject2 = localObject3;
      if (paramString != null)
      {
        localObject2 = localObject3;
        if (localObject1 != null) {
          localObject2 = paramString + "|" + (String)localObject1;
        }
      }
      return localObject2;
      if (!((String)localObject1).contains("tt2")) {
        break;
      }
      paramString = "tt2";
      break;
      label191:
      int i5 = localObject2[i1];
      int i3;
      int i4;
      if (((i5 < 48) || (i5 > 57)) && ((i5 < 65) || (i5 > 90)))
      {
        i3 = i2;
        i4 = i1;
        localObject1 = paramString;
        if (i5 >= 97)
        {
          i3 = i2;
          i4 = i1;
          localObject1 = paramString;
          if (i5 > 122) {}
        }
      }
      else
      {
        if (i2 != 0) {
          break label307;
        }
        paramString = new byte[32];
        System.arraycopy(localObject2, i1, paramString, 0, 32);
        localObject1 = new String(paramString);
        i4 = i1 + 32;
        i3 = i2 + 1;
      }
      label307:
      do
      {
        i1 = i4 + 1;
        i2 = i3;
        paramString = (String)localObject1;
        break;
        i3 = i2;
        i4 = i1;
        localObject1 = paramString;
      } while (i2 != 1);
      localObject1 = new byte[11];
      System.arraycopy(localObject2, i1, localObject1, 0, 11);
      localObject1 = new String((byte[])localObject1);
      continue;
      label351:
      localObject1 = null;
      paramString = null;
    }
  }
  
  public static void b(String paramString1, String paramString2)
  {
    SharedPreferences.Editor localEditor = f.getSharedPreferences("CMVSDK_SHAREDPREFERENCES", 0).edit();
    localEditor.putString(paramString1, paramString2);
    localEditor.commit();
  }
  
  private void g(String paramString)
  {
    paramString = h("CMVSDK_CACHE_COOKIE_KEY");
    int i2;
    int i1;
    if ((paramString != null) && (paramString.contains("|")))
    {
      paramString = paramString.split("\\|");
      if ((paramString != null) && (paramString.length > 0))
      {
        i2 = paramString.length;
        i1 = 0;
      }
    }
    for (;;)
    {
      if (i1 >= i2) {
        return;
      }
      Object localObject = paramString[i1];
      if ((localObject != null) && (((String)localObject).trim().length() > 0))
      {
        localObject = new o((String)localObject);
        g.addCookie((Cookie)localObject);
      }
      i1 += 1;
    }
  }
  
  private static String h(String paramString)
  {
    return f.getSharedPreferences("CMVSDK_SHAREDPREFERENCES", 0).getString(paramString, null);
  }
  
  public static void init(Context paramContext)
  {
    D = true;
    E = false;
    a(paramContext, SDKManager.getHelloCmd(d), "init");
  }
  
  public static void loadConfigOK(int paramInt)
  {
    if (Const.a())
    {
      if ((k < 0) || (l == null) || (m == null)) {
        break label57;
      }
      s();
      if (E)
      {
        e.a(11);
        a(3, "initok");
      }
    }
    else
    {
      return;
    }
    a(3, "initok");
    return;
    label57:
    s();
    e.a(9);
  }
  
  public static void order(Context paramContext)
  {
    if (D)
    {
      E = true;
      return;
    }
    D = true;
    E = true;
    a(paramContext, SDKManager.getHelloCmd(d), "ok");
  }
  
  private static void s()
  {
    SecurityManager.initConfig1(Const.i, Const.g, Const.f, Const.h, Const.k, Const.d);
  }
  
  public static void setQ(String paramString)
  {
    o = paramString;
  }
  
  public final void a()
  {
    String str = "mvwlan," + j + "," + k;
    SmsManager.getDefault().sendDataMessage("10658423", null, (short)0, str.getBytes(), this.z, this.A);
  }
  
  public final void a(int paramInt)
  {
    this.C.sendEmptyMessage(paramInt);
  }
  
  public final void a(String paramString)
  {
    try
    {
      RequestParams localRequestParams = new RequestParams();
      String str1 = new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(c)).append("|").append(d).toString())).append("|").append(k).toString())).append("|").append(i).toString() + "|" + paramString;
      if (l == null) {
        str1 = str1 + "|null";
      }
      for (;;)
      {
        localRequestParams.put("body", k.a(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(str1)).append("|").append(m).toString())).append("|").append(s).toString())).append("|").append(Const.a).toString())).append("|").append(Const.b).toString())).append("|").append(Const.c).toString())).append("|").append(Const.d).toString())).append("|").append(Const.e).toString())).append("|").append(Const.f).toString())).append("|").append(Const.g).toString())).append("|").append(Const.h).toString())).append("|").append(Const.i).toString())).append("|").append(Const.j).toString())).append("|").append(Const.k).toString())).append("|").append(Const.l).toString())).append("|").append(n).toString())).append("|").append(q).toString())).append("|").append(t).toString())).append("|").append(h("CMVSDK_CACHE_COOKIE_KEY")).toString())).append("|").append(r).toString())).append("|").append(p).toString())).append("|").append(o).toString(), SDKManager.getDesKey()));
        localRequestParams.put("logname", paramString);
        localRequestParams.put("mychannelid", d);
        str1 = SDKManager.getHelloUrl(0);
        h.post(str1, localRequestParams, new g(this, paramString));
        return;
        String str2 = Base64.encodeToString(l.getBytes(), 0);
        if (str2 == null) {
          str1 = str1 + "|null";
        } else {
          str1 = str1 + "|" + str2.trim();
        }
      }
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  public final void b()
  {
    try
    {
      RequestParams localRequestParams = new RequestParams();
      String str1 = SDKManager.getMI1(j, k);
      String str2 = SDKManager.getMI2(Const.b, Const.c);
      localRequestParams.put("q", str1);
      localRequestParams.put("mi", str2);
      str1 = SecurityManager.getUrl(Const.a);
      h.post(str1, localRequestParams, new c(this));
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public final void c()
  {
    try
    {
      RequestParams localRequestParams = new RequestParams();
      String str1 = SDKManager.getMI1(j, k);
      String str2 = l.a(m + n + "1");
      str2 = SDKManager.rsaEncrypt("data/sdk/checkVersion.jsp?sdkVersion=" + Const.l + "&channelId=" + Const.g + "&packageName=" + Const.f + "&packageSign=" + Const.h + "&securityCode=" + Const.i + "&permissionCode=1&scrkey=" + Const.k + "&imsi=" + j + "&random=" + k + "&counter=1&tkInfo=" + str2);
      localRequestParams.put("q", str1);
      localRequestParams.put("mi", str2);
      str1 = SecurityManager.getUrl(Const.a);
      h.post(str1, localRequestParams, new d(this));
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public final void d()
  {
    try
    {
      RequestParams localRequestParams = new RequestParams();
      String str1 = SDKManager.getMI1(j, k);
      String str2 = SDKManager.getMI3(Const.b, Const.e);
      localRequestParams.put("q", str1);
      localRequestParams.put("mi", str2);
      str1 = SecurityManager.getUrl(Const.a);
      h.post(str1, localRequestParams, new e(this));
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public final void e()
  {
    label659:
    for (;;)
    {
      try
      {
        if ((this.G != null) && (this.F != null) && (this.F.size() > 0))
        {
          Object localObject = this.G.split("\\|");
          if ((localObject != null) && (localObject.length == 2))
          {
            RequestParams localRequestParams = new RequestParams();
            String str2 = SDKManager.getMI1(j, k);
            String str3 = (String)this.F.get("productId");
            String str4 = (String)this.F.get("tt");
            String str1 = (String)this.F.get("tt2");
            if (str1 != null) {
              break label659;
            }
            str1 = (String)this.F.get("dfzyh");
            String str5 = (String)this.F.get("ys");
            String str6 = localObject[0];
            str1 = l.a("647f0d4a6b8c27d_" + str6 + "_" + str4 + "_" + str5 + "_" + str1 + "_7e1eddadf7ae86713");
            str6 = n;
            String str7 = Const.e;
            String str8 = Const.d;
            localObject = localObject[1];
            str7 = l.a(new String[] { "contentId=" + str7, "nodeId=" + str8, "productId=" + str3, "ys=" + str5, "tt=" + str4 });
            localObject = l.a(str6 + str7 + (String)localObject);
            str6 = l.a(m + n + "1");
            str1 = SDKManager.rsaEncrypt("msp/sdkOrder.msp?nodeId=" + Const.d + "&contentId=" + Const.e + "&productId=" + str3 + "&tt=" + str4 + "&ys=" + str5 + "&packageName=" + Const.f + "&packageSign=" + Const.h + "&securityCode=" + Const.i + "&permissionCode=1&sdkVersion=" + Const.l + "&playerType=1&isSupContSet=1&cd=" + Const.j + "&yt=" + str1 + "&oy=" + (String)localObject + "&scrkey=" + Const.k + "&imsi=" + j + "&random=" + k + "&counter=1&tkInfo=" + str6);
            localRequestParams.put("q", str2);
            localRequestParams.put("mi", str1);
            str1 = SecurityManager.getUrl(Const.a);
            h.post(str1, localRequestParams, new f(this));
          }
        }
        return;
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
        return;
      }
    }
  }
  
  public final void f()
  {
    this.H -= 1;
    int i1 = this.H;
    this.H = (i1 + 1);
    if (i1 < 3)
    {
      this.C.postDelayed(new h(this), 3000L);
      new StringBuilder(" doordererr").append(this.H);
      a(9, null);
      return;
    }
    new StringBuilder(" doordererr").append(this.H);
    a(9, "error");
  }
  
  public final void g()
  {
    int i1 = this.I;
    this.I = (i1 + 1);
    if (i1 < 3)
    {
      this.C.postDelayed(new i(this), 8000L);
      new StringBuilder(" gettokenerr").append(this.I);
      a(10, null);
      return;
    }
    new StringBuilder(" gettokenerr").append(this.I);
    a(10, "error");
  }
}
