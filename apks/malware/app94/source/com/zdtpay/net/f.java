package com.zdtpay.net;

import android.content.Context;
import android.os.Handler;
import android.os.Message;
import com.zdtpay.ZDTPayParamInfo;
import com.zdtpay.ZDTPaySDK;
import com.zdtpay.a.d;
import com.zdtpay.tools.MyLogPrinter;
import com.zdtpay.tools.c;
import com.zdtpay.tools.g;
import java.io.IOException;
import java.util.HashMap;
import org.json.JSONException;
import org.json.JSONObject;

class f
  implements Runnable
{
  f(HashMap paramHashMap, Context paramContext, int paramInt, String paramString, Handler paramHandler) {}
  
  public void run()
  {
    Object localObject2 = this.a;
    Object localObject1 = localObject2;
    if (localObject2 == null) {
      localObject1 = new HashMap();
    }
    if (com.zdtpay.tools.b.d != null)
    {
      ((HashMap)localObject1).put(c.i, com.zdtpay.tools.b.d.getAppkey());
      ((HashMap)localObject1).put("appsecret", com.zdtpay.tools.b.d.getAppsecret());
      ((HashMap)localObject1).put(c.j, com.zdtpay.tools.b.d.getMobile());
      ((HashMap)localObject1).put(c.k, com.zdtpay.tools.b.d.getMobile_type());
      ((HashMap)localObject1).put(c.m, com.zdtpay.tools.b.d.getProvince());
    }
    ((HashMap)localObject1).put(c.e, g.f(this.b));
    ((HashMap)localObject1).put(c.f, g.d(this.b));
    ((HashMap)localObject1).put(c.g, g.e(this.b));
    ((HashMap)localObject1).put("version", ZDTPaySDK.getVersion());
    ((HashMap)localObject1).put("type", g.i(this.b));
    localObject2 = new b(this.c);
    try
    {
      localObject1 = ((b)localObject2).a(this.d, (HashMap)localObject1);
      MyLogPrinter.b(false, "response =" + (String)localObject1);
      if ((localObject1 == null) || (((String)localObject1).equals("")))
      {
        localObject1 = new d("DataRequestTask.request", "获取数据失败");
        localObject2 = this.e.obtainMessage();
        ((Message)localObject2).obj = localObject1;
        this.e.sendMessage((Message)localObject2);
        return;
      }
      Message localMessage;
      return;
    }
    catch (IOException localIOException)
    {
      try
      {
        new JSONObject((String)localObject1);
        localObject2 = new JSONObject((String)localObject1);
        if (((JSONObject)localObject2).has("error"))
        {
          localObject2 = ((JSONObject)localObject2).getJSONObject("error").getString("text");
          localObject1 = localObject2;
          if (localObject2 == null) {
            localObject1 = "未知错误";
          }
          localObject1 = new d("DataRequestTask.request", (String)localObject1);
        }
        localObject2 = this.e.obtainMessage();
        ((Message)localObject2).obj = localObject1;
        this.e.sendMessage((Message)localObject2);
        return;
      }
      catch (Exception localException2)
      {
        localMessage = this.e.obtainMessage();
        localMessage.obj = localIOException;
        this.e.sendMessage(localMessage);
        return;
      }
      localIOException = localIOException;
      localIOException.printStackTrace();
      localObject2 = this.e.obtainMessage();
      ((Message)localObject2).obj = new d(localIOException.getMessage(), "请求数据失败，初始化未完成");
      this.e.sendMessage((Message)localObject2);
      return;
    }
    catch (JSONException localJSONException)
    {
      localJSONException.printStackTrace();
      localMessage = this.e.obtainMessage();
      localMessage.obj = new d(localJSONException.getMessage(), "解析数据失败，请求未完成");
      this.e.sendMessage(localMessage);
      return;
    }
    catch (Exception localException1)
    {
      localException1.printStackTrace();
      localMessage = this.e.obtainMessage();
      localMessage.obj = new d(localException1.getMessage(), "请求数据失败，初始化未完成Exception");
      this.e.sendMessage(localMessage);
    }
  }
}
