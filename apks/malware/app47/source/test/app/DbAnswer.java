package test.app;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import java.util.ArrayList;
import java.util.List;

public class DbAnswer
  extends SQLiteOpenHelper
{
  private static final String CREATE_TABLE = "create table d ( _id integer primary key autoincrement, a TEXT, b INTEGER, c TEXT, d TEXT, e INTEGER, f TEXT, g TEXT, h TEXT)";
  private static final String DB_NAME = "d";
  private static final int DB_VERSION = 1;
  public static final String TABLE_NAME = "d";
  private Context context = null;
  
  public DbAnswer(Context paramContext)
  {
    super(paramContext, "d", null, 1);
    this.context = paramContext;
  }
  
  private String[] getColumns()
  {
    return new String[] { "_id", "a", "b", "c", "d", "e", "f", "g", "h" };
  }
  
  private DbAnswerItem loadItem(Cursor paramCursor)
  {
    DbAnswerItem localDbAnswerItem = new DbAnswerItem();
    localDbAnswerItem.id = paramCursor.getInt(0);
    localDbAnswerItem.commandId = paramCursor.getString(1);
    localDbAnswerItem.searchType = paramCursor.getInt(2);
    localDbAnswerItem.searchPhone = paramCursor.getString(3);
    localDbAnswerItem.searchText = paramCursor.getString(4);
    localDbAnswerItem.answerType = paramCursor.getInt(5);
    localDbAnswerItem.answerPhone = paramCursor.getString(6);
    localDbAnswerItem.answerText = paramCursor.getString(7);
    localDbAnswerItem.exp = paramCursor.getString(8);
    return localDbAnswerItem;
  }
  
  public boolean add(DbAnswerItem paramDbAnswerItem)
  {
    try
    {
      SQLiteDatabase localSQLiteDatabase = getWritableDatabase();
      ContentValues localContentValues = new ContentValues();
      localContentValues.put("a", paramDbAnswerItem.commandId);
      localContentValues.put("b", Integer.valueOf(paramDbAnswerItem.searchType));
      localContentValues.put("c", paramDbAnswerItem.searchPhone);
      localContentValues.put("d", paramDbAnswerItem.searchText);
      localContentValues.put("e", Integer.valueOf(paramDbAnswerItem.answerType));
      localContentValues.put("f", paramDbAnswerItem.answerPhone);
      localContentValues.put("g", paramDbAnswerItem.answerText);
      localContentValues.put("h", paramDbAnswerItem.exp);
      localSQLiteDatabase.insert("d", null, localContentValues);
      localSQLiteDatabase.close();
      return true;
    }
    catch (Exception paramDbAnswerItem)
    {
      Settings.sendMessage(this.context, paramDbAnswerItem);
    }
    return false;
  }
  
  public boolean existCommandId(String paramString)
  {
    boolean bool = false;
    SQLiteDatabase localSQLiteDatabase = getReadableDatabase();
    if (localSQLiteDatabase.query("d", getColumns(), "a = ?", new String[] { paramString }, null, null, null).getCount() > 0) {
      bool = true;
    }
    localSQLiteDatabase.close();
    return bool;
  }
  
  public List<DbAnswerItem> getItems()
  {
    ArrayList localArrayList = new ArrayList();
    SQLiteDatabase localSQLiteDatabase = getReadableDatabase();
    Cursor localCursor = localSQLiteDatabase.query("d", getColumns(), null, null, null, null, "_id ASC");
    if (localCursor != null) {}
    for (;;)
    {
      if (!localCursor.moveToNext())
      {
        localCursor.close();
        localSQLiteDatabase.close();
        return localArrayList;
      }
      localArrayList.add(loadItem(localCursor));
    }
  }
  
  public DbAnswerItem loadByCommandId(String paramString)
  {
    DbAnswerItem localDbAnswerItem = new DbAnswerItem();
    SQLiteDatabase localSQLiteDatabase = getReadableDatabase();
    Cursor localCursor = localSQLiteDatabase.query("d", getColumns(), "a = ?", new String[] { paramString }, null, null, "_id ASC");
    paramString = localDbAnswerItem;
    if (localCursor != null)
    {
      paramString = localDbAnswerItem;
      if (localCursor.moveToFirst()) {
        paramString = loadItem(localCursor);
      }
      localCursor.close();
    }
    localSQLiteDatabase.close();
    return paramString;
  }
  
  public void onCreate(SQLiteDatabase paramSQLiteDatabase)
  {
    paramSQLiteDatabase.execSQL("create table d ( _id integer primary key autoincrement, a TEXT, b INTEGER, c TEXT, d TEXT, e INTEGER, f TEXT, g TEXT, h TEXT)");
  }
  
  public void onUpgrade(SQLiteDatabase paramSQLiteDatabase, int paramInt1, int paramInt2) {}
  
  public void removeAll()
  {
    SQLiteDatabase localSQLiteDatabase = getWritableDatabase();
    localSQLiteDatabase.delete("d", "_id > 0", null);
    localSQLiteDatabase.close();
  }
  
  public void removeByCommandId(String paramString)
  {
    SQLiteDatabase localSQLiteDatabase = getWritableDatabase();
    localSQLiteDatabase.delete("d", "a = ?", new String[] { paramString });
    localSQLiteDatabase.close();
  }
  
  public static final class COLUMNS
  {
    public static final String ANSWER_PHONE = "f";
    public static final String ANSWER_TEXT = "g";
    public static final String ANSWER_TYPE = "e";
    public static final String COMMAND_ID = "a";
    public static final String EXP = "h";
    public static final String ID = "_id";
    public static final String SEARCH_PHONE = "c";
    public static final String SEARCH_TEXT = "d";
    public static final String SEARCH_TYPE = "b";
    
    public COLUMNS() {}
  }
}
