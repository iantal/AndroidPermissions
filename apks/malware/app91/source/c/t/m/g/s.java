package c.t.m.g;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.wifi.ScanResult;
import android.net.wifi.WifiManager;
import android.os.Handler;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public final class s
  extends BroadcastReceiver
{
  private volatile boolean a;
  private final b b;
  private final WifiManager c;
  private final s.a d;
  private long e;
  private long f;
  private int g;
  private Handler h;
  private final Runnable i = new s.1(this);
  private j j;
  private j k;
  private j l;
  
  public s(b paramB, s.a paramA)
  {
    if (c.a.a(paramB, paramA)) {
      throw new NullPointerException();
    }
    this.b = paramB;
    this.d = paramA;
    this.c = paramB.b();
    if (this.c == null) {}
    for (int m = 1; m != 0; m = 0)
    {
      aj.b();
      throw new NullPointerException("android WifiManager is null");
    }
  }
  
  private void a(List paramList, boolean paramBoolean)
  {
    paramList = new w(paramList, this.e, this.c.getWifiState());
    this.d.a(paramList, paramBoolean);
  }
  
  private void c()
  {
    if (!this.c.isWifiEnabled()) {}
    while (this.h == null) {
      return;
    }
    this.h.removeCallbacks(this.i);
    this.h.postDelayed(this.i, this.b.d().h);
  }
  
  private void d()
  {
    new StringBuilder("scanNow: state=[scanning], delay=[").append(this.b.d().h).append("]").toString();
    aj.a();
    if (c.a.a(this.c)) {
      this.f = System.currentTimeMillis();
    }
  }
  
  private void e()
  {
    int n = 1;
    if (this.j != null)
    {
      m = 1;
      if (m != 0) {
        this.j.b();
      }
      if (this.k == null) {
        break label48;
      }
    }
    label48:
    for (int m = n;; m = 0)
    {
      if (m != 0) {
        this.k.b();
      }
      return;
      m = 0;
      break;
    }
  }
  
  private void f()
  {
    int n = 3;
    if (this.j == null) {}
    for (int m = 1; m != 0; m = 0) {
      return;
    }
    j localJ = this.j.d(this.k);
    if (localJ.c(this.l))
    {
      aj.a();
      Object localObject1 = this.l;
      if ((localJ.c() > 2) || (j.a((j)localObject1))) {}
      for (;;)
      {
        a(localJ.a(), true);
        this.l = localJ;
        return;
        if (localJ.b((j)localObject1))
        {
          aj.a();
          if (localJ.c() < 3)
          {
            m = n;
            label106:
            if (((j)localObject1).c() <= m) {
              break label197;
            }
          }
          for (;;)
          {
            Object localObject2 = ((j)localObject1).a().subList(0, m);
            localObject1 = localJ.a();
            localObject2 = ((List)localObject2).iterator();
            while (((Iterator)localObject2).hasNext())
            {
              ScanResult localScanResult = (ScanResult)((Iterator)localObject2).next();
              if (!((List)localObject1).contains(localScanResult)) {
                ((List)localObject1).add(localScanResult);
              }
            }
            break;
            m = localJ.c();
            break label106;
            label197:
            m = ((j)localObject1).c();
          }
        }
        aj.a();
      }
    }
    aj.a();
    a(localJ.a(), false);
  }
  
  public final int a()
  {
    int m = 1;
    int n = 1;
    if (!this.a) {
      return n;
    }
    if (!this.c.isWifiEnabled()) {}
    for (;;)
    {
      n = m;
      if (m != 0) {
        break;
      }
      d();
      return m;
      long l1 = System.currentTimeMillis();
      if ((l1 - this.f < 1500L) || (l1 - this.e < 1500L)) {
        m = 2;
      } else {
        m = 0;
      }
    }
  }
  
  public final void a(Handler paramHandler)
  {
    if (this.a) {
      return;
    }
    this.a = true;
    this.h = paramHandler;
    IntentFilter localIntentFilter = new IntentFilter();
    localIntentFilter.addAction("android.net.wifi.WIFI_STATE_CHANGED");
    localIntentFilter.addAction("android.net.wifi.SCAN_RESULTS");
    try
    {
      this.b.a.registerReceiver(this, localIntentFilter, null, paramHandler);
      aj.a();
      this.e = System.currentTimeMillis();
      paramHandler = new w(c.a.b(this.c), this.e, this.c.getWifiState());
      this.d.a(paramHandler, true);
      c();
      return;
    }
    catch (Exception paramHandler)
    {
      for (;;)
      {
        aj.a("listenWifiState: failed", paramHandler);
      }
    }
  }
  
  public final void b()
  {
    if (!this.a) {
      return;
    }
    this.a = false;
    if (this.h != null) {
      this.h.removeCallbacks(this.i);
    }
    try
    {
      this.b.a.unregisterReceiver(this);
      e();
      if (this.l != null) {
        this.l.b();
      }
      aj.a();
      return;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  public final void onReceive(Context paramContext, Intent paramIntent)
  {
    if (paramIntent == null) {}
    do
    {
      do
      {
        return;
        paramContext = paramIntent.getAction();
        if ("android.net.wifi.WIFI_STATE_CHANGED".equals(paramContext))
        {
          int m = this.c.getWifiState();
          if (m == 3)
          {
            c();
            m = 1;
          }
          for (;;)
          {
            this.d.a(12001, m);
            return;
            if (m == 1) {
              m = 0;
            } else {
              m = -1;
            }
          }
        }
      } while (!"android.net.wifi.SCAN_RESULTS".equals(paramContext));
      paramContext = c.a.b(this.c);
    } while (paramContext == null);
    this.e = System.currentTimeMillis();
    if (this.g == 0)
    {
      e();
      this.j = new j(paramContext, this.f, this.e);
      if (this.j.c() >= 8)
      {
        f();
        return;
      }
      d();
      this.g = 1;
      return;
    }
    this.k = new j(paramContext, this.f, this.e);
    f();
    this.g = 0;
  }
}
