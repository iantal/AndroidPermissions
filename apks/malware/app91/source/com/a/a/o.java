package com.a.a;

import android.content.Context;
import android.os.Handler;
import android.os.HandlerThread;
import java.lang.ref.WeakReference;
import java.lang.reflect.Method;
import java.util.HashMap;
import org.json.JSONException;
import org.json.JSONObject;

class o
{
  static HashMap a = new HashMap();
  private static HandlerThread b = new HandlerThread("SessionAnalysisThread");
  private static Handler c;
  private static o j = new o();
  private long d = 0L;
  private long e = 0L;
  private long f = 0L;
  private long g = 0L;
  private WeakReference h;
  private m i = new m();
  private int k = -1;
  private boolean l = true;
  private boolean m = false;
  private boolean n = false;
  private boolean o = false;
  
  private o()
  {
    b.start();
    b.setPriority(10);
    c = new Handler(b.getLooper());
  }
  
  static Context a(Object paramObject)
  {
    try
    {
      paramObject = (Context)paramObject.getClass().getMethod("getActivity", new Class[0]).invoke(paramObject, new Object[0]);
      return paramObject;
    }
    catch (Throwable paramObject)
    {
      y.a(paramObject.getMessage());
    }
    return null;
  }
  
  private void a(Context paramContext)
  {
    if (paramContext == null)
    {
      y.a("sdkstat", "clearLastSession(Context context):context=null");
      return;
    }
    w.a(false, paramContext, "__local_last_session.json", "{}", false);
  }
  
  private void a(boolean paramBoolean)
  {
    this.l = paramBoolean;
  }
  
  public static o b()
  {
    return j;
  }
  
  private void c(Context paramContext, long paramLong)
  {
    y.a("sdkstat", "flush current session to last_session.json");
    new JSONObject();
    Object localObject = this.i.c();
    try
    {
      ((JSONObject)localObject).put("e", paramLong);
      localObject = ((JSONObject)localObject).toString();
      y.a("sdkstat", "cacheString=" + (String)localObject);
      w.a(false, paramContext, "__local_last_session.json", (String)localObject, false);
      return;
    }
    catch (JSONException localJSONException)
    {
      for (;;)
      {
        y.a("sdkstat", "StatSession.flushSession() failed");
      }
    }
  }
  
  private boolean e()
  {
    return this.l;
  }
  
  public int a()
  {
    if (this.k == -1) {
      this.k = 30000;
    }
    return this.k;
  }
  
  public void a(int paramInt)
  {
    this.k = (paramInt * 1000);
  }
  
  public void a(Context paramContext, long paramLong)
  {
    y.a("sdkstat", "AnalysisResume job");
    if (this.m) {
      y.b(new Object[] { "sdkstat", "遗漏StatService.onPause() || missing StatService.onPause()" });
    }
    this.m = true;
    if (e())
    {
      y.a("is_first_resume=true");
      a(false);
      c.post(new p(this));
    }
    for (;;)
    {
      s localS = new s(this, this.d, paramLong, paramContext, null, null, 1);
      c.post(localS);
      this.h = new WeakReference(paramContext);
      this.e = paramLong;
      return;
      y.a("sdkstat", " is_first_resume=false");
    }
  }
  
  void a(String paramString)
  {
    if (paramString == null) {
      y.b(new Object[] { "sdkstat", "page Object is null" });
    }
    q localQ;
    do
    {
      return;
      localQ = new q(this, paramString);
    } while (a.containsKey(paramString));
    a.put(paramString, localQ);
  }
  
  q b(String paramString)
  {
    if (paramString == null)
    {
      y.b(new Object[] { "sdkstat", "pageName is null" });
      return null;
    }
    if (!a.containsKey(paramString)) {
      a(paramString);
    }
    return (q)a.get(paramString);
  }
  
  public void b(Context paramContext, long paramLong)
  {
    y.a("sdkstat", "post pause job");
    if (!this.m)
    {
      y.b(new Object[] { "sdkstat", "遗漏StatService.onResume() || missing StatService.onResume()" });
      return;
    }
    this.m = false;
    paramContext = new r(this, paramLong, paramContext, null, this.e, (Context)this.h.get(), null, 1, null, null, null);
    c.post(paramContext);
    this.d = paramLong;
  }
  
  public void c()
  {
    this.i.a(this.i.d() + 1);
  }
  
  void c(String paramString)
  {
    if (paramString == null) {
      y.b(new Object[] { "sdkstat", "pageName is null" });
    }
    while (!a.containsKey(paramString)) {
      return;
    }
    a.remove(paramString);
  }
  
  public long d()
  {
    return this.i.a();
  }
}
