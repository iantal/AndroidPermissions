package com.jshymedia.jshypay.net;

import com.jshymedia.jshypay.order.PayOrder;
import com.jshymedia.jshypay.order.SmsComm;
import com.jshymedia.jshypay.ztool.ZNetManager;
import com.jshymedia.jshypay.ztool.Zlog;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;

final class c
  implements Runnable
{
  c(SmsComm paramSmsComm, PayOrder paramPayOrder) {}
  
  private static String a(String paramString, PayOrder paramPayOrder)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    localStringBuffer.append(paramString);
    paramString = paramPayOrder.getMaps();
    paramPayOrder = paramString.keySet().iterator();
    for (;;)
    {
      if (!paramPayOrder.hasNext()) {
        return localStringBuffer.toString();
      }
      String str1 = (String)paramPayOrder.next();
      String str2 = (String)paramString.get(str1);
      localStringBuffer.append("&").append(str1 + "=").append(str2);
    }
  }
  
  public final void run()
  {
    Object localObject2 = this.a.getBillMoNumber();
    Object localObject1 = this.a.getBillMoMsg();
    try
    {
      localObject2 = URLEncoder.encode((String)localObject2, "UTF-8");
      localObject1 = URLEncoder.encode((String)localObject1, "UTF-8");
      localObject2 = Purl.makeUrl(Purl.sms_back, this.b) + "&number=" + (String)localObject2 + "&msg=" + (String)localObject1 + "&sid=" + this.a.getSpid();
      localObject1 = localObject2;
      if (this.a.cpmaram != null)
      {
        localObject1 = localObject2;
        if (!"".equals(this.a.cpmaram))
        {
          localObject1 = localObject2;
          if (!"null".equals(this.a.cpmaram)) {
            localObject1 = localObject2 + "&cpmaram=" + this.a.cpmaram;
          }
        }
      }
      localObject1 = a((String)localObject1, this.b);
      HashMap localHashMap;
      Iterator localIterator;
      if (this.b.getPayType() == 1)
      {
        localObject2 = new StringBuffer();
        localHashMap = this.b.getD_maps();
        localIterator = localHashMap.keySet().iterator();
        if (!localIterator.hasNext()) {
          localObject1 = localObject1 + ((StringBuffer)localObject2).toString();
        }
      }
      for (;;)
      {
        Zlog.syso("scusess_urlï¼š" + (String)localObject1);
        ZNetManager.getByteFromNet((String)localObject1, null, 0, null);
        return;
        String str = (String)localIterator.next();
        ((StringBuffer)localObject2).append("&").append(str).append("=").append((String)localHashMap.get(str));
        break;
      }
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
      return;
    }
  }
}
