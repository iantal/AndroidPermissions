package com.jshymedia.jshypay.ztool;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

public class ZipTool
{
  public ZipTool() {}
  
  public static boolean openZipFile(File paramFile, String paramString, ProgressChangeListener paramProgressChangeListener)
  {
    int i;
    if (paramFile == null)
    {
      i = 1;
      if (paramString != null) {
        break label27;
      }
    }
    label27:
    for (int j = 1;; j = 0)
    {
      if ((j | i) == 0) {
        break label33;
      }
      return false;
      i = 0;
      break;
    }
    label33:
    new File(paramString).mkdir();
    try
    {
      paramFile = new ZipInputStream(new FileInputStream(paramFile));
      for (;;)
      {
        localObject1 = paramFile.getNextEntry();
        if (localObject1 == null) {
          return true;
        }
        localObject2 = ((ZipEntry)localObject1).getName();
        if (!((ZipEntry)localObject1).isDirectory()) {
          break;
        }
        localObject1 = ((String)localObject2).substring(0, ((String)localObject2).length() - 1);
        new File(paramString + File.separator + (String)localObject1).mkdir();
      }
    }
    catch (FileNotFoundException paramFile)
    {
      boolean bool;
      do
      {
        Object localObject1;
        paramFile.printStackTrace();
        return false;
        Object localObject2 = new File(paramString + File.separator + (String)localObject2);
        ((File)localObject2).createNewFile();
        bool = ZFileManager.writeFileFromStream(paramFile, (File)localObject2, ((ZipEntry)localObject1).getSize(), paramProgressChangeListener, true);
      } while (bool);
      return false;
    }
    catch (IOException paramFile)
    {
      for (;;)
      {
        paramFile.printStackTrace();
      }
    }
  }
}
