package com.videoclient.player;

import android.annotation.SuppressLint;
import android.app.ActionBar;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.PackageManager;
import android.content.res.Resources;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.provider.Settings.Secure;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.animation.AlphaAnimation;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.widget.RelativeLayout;
import com.b.a.h;
import com.slidingmenu.lib.SlidingMenu;
import com.slidingmenu.lib.app.SlidingFragmentActivity;
import com.videoclient.player.b.b;
import com.videoclient.player.e.a;
import com.videoclient.player.e.c;
import java.io.File;

public class MainActivity
  extends SlidingFragmentActivity
{
  SharedPreferences a;
  int b = Build.VERSION.SDK_INT;
  PackageManager c;
  Handler d = new e(this, Looper.getMainLooper());
  private AlphaAnimation e;
  private WebView f;
  private WebSettings g;
  private MainActivity.JsObject h;
  private RelativeLayout i;
  private View j;
  private String k = "http://" + c.a + ":8080/v/test.htm";
  
  public MainActivity() {}
  
  private void b()
  {
    if ((!this.a.getBoolean("pluginState", true)) || (a.a().a(this))) {}
    File localFile;
    do
    {
      return;
      localFile = a.a;
    } while (!localFile.exists());
    Intent localIntent = new Intent("android.intent.action.VIEW");
    localIntent.setDataAndType(Uri.fromFile(localFile), "application/vnd.android.package-archive");
    startActivity(localIntent);
  }
  
  @SuppressLint({"NewApi"})
  private void c()
  {
    SlidingMenu localSlidingMenu = getSlidingMenu();
    localSlidingMenu.setSlidingEnabled(false);
    localSlidingMenu.setBehindOffset(350);
    if (this.b >= 11) {
      getActionBar().setBackgroundDrawable(getResources().getDrawable(2130837591));
    }
  }
  
  private void d() {}
  
  public Handler a()
  {
    return this.d;
  }
  
  public void onClick(View paramView)
  {
    switch (paramView.getId())
    {
    }
    do
    {
      return;
      h.a("reload..onClick..");
    } while (this.f.getVisibility() != 8);
    this.f.loadUrl(this.k);
    this.f.setVisibility(0);
    this.i.removeView(this.j);
    this.j = null;
  }
  
  @SuppressLint({"SetJavaScriptEnabled", "NewApi", "InlinedApi"})
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setContentView(2130903065);
    c();
    paramBundle = Settings.Secure.getString(getContentResolver(), "android_id");
    this.k = (this.k + "?andid=" + paramBundle + "&v=" + 7);
    this.i = ((RelativeLayout)findViewById(2131165255));
    this.a = getSharedPreferences("pay_xml", 0);
    a.a().a(this);
    this.c = getPackageManager();
    this.e = new AlphaAnimation(0.0F, 1.0F);
    this.e.setDuration(2000L);
    this.h = new MainActivity.JsObject(this);
    this.f = ((WebView)findViewById(2131165256));
    this.f.setAnimation(this.e);
    this.f.setBackgroundColor(0);
    this.g = this.f.getSettings();
    this.g.setJavaScriptEnabled(true);
    this.f.setWebViewClient(new f(this));
    this.f.addJavascriptInterface(this.h, "JsObject");
    this.f.loadUrl(this.k);
    h.a("web_url:" + this.k);
    this.h.openVideo(null, 0, 0);
    this.h.downloadApk(null, null, null);
    d();
    c.a(this);
  }
  
  public boolean onCreateOptionsMenu(Menu paramMenu)
  {
    getMenuInflater().inflate(2131492864, paramMenu);
    return true;
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if (paramInt == 4)
    {
      paramKeyEvent = this.f.getUrl();
      if (paramKeyEvent != null)
      {
        if (paramKeyEvent.equals(this.k))
        {
          paramKeyEvent = new b();
          Bundle localBundle = new Bundle();
          localBundle.putString("info", "是否确定退出");
          localBundle.putInt("type", 1);
          paramKeyEvent.setArguments(localBundle);
          paramKeyEvent.show(getSupportFragmentManager(), "");
          return true;
        }
        this.f.goBack();
        return true;
      }
      finish();
      return true;
    }
    return super.onKeyDown(paramInt, paramKeyEvent);
  }
  
  public boolean onMenuItemSelected(int paramInt, MenuItem paramMenuItem)
  {
    switch (paramMenuItem.getItemId())
    {
    }
    for (;;)
    {
      return super.onMenuItemSelected(paramInt, paramMenuItem);
      b localB = new b();
      Bundle localBundle = new Bundle();
      String str = getResources().getString(2131034138);
      localBundle.putInt("type", 3);
      localBundle.putString("info", str);
      localB.setArguments(localBundle);
      localB.show(getSupportFragmentManager(), "about");
    }
  }
  
  protected void onPause()
  {
    super.onPause();
    a.a().a(false);
    com.a.a.f.b(this);
  }
  
  protected void onResume()
  {
    super.onResume();
    a.a().a(true);
    com.a.a.f.a(this);
  }
}
