package com.tencent.map.geolocation;

import android.os.SystemClock;
import java.util.Locale;

public class TencentGeofence
{
  private final double a;
  private final double b;
  private final float c;
  private final long d;
  private final String e;
  private final long f;
  
  private TencentGeofence(double paramDouble1, double paramDouble2, float paramFloat, long paramLong, String paramString)
  {
    this.a = paramDouble1;
    this.b = paramDouble2;
    this.c = paramFloat;
    this.f = paramLong;
    this.d = (SystemClock.elapsedRealtime() + paramLong);
    this.e = paramString;
  }
  
  public boolean equals(Object paramObject)
  {
    if (this == paramObject) {}
    do
    {
      do
      {
        return true;
        if (paramObject == null) {
          return false;
        }
        if (getClass() != paramObject.getClass()) {
          return false;
        }
        paramObject = (TencentGeofence)paramObject;
        if (Double.doubleToLongBits(this.a) != Double.doubleToLongBits(paramObject.a)) {
          return false;
        }
        if (Double.doubleToLongBits(this.b) != Double.doubleToLongBits(paramObject.b)) {
          return false;
        }
        if (this.e != null) {
          break;
        }
      } while (paramObject.e == null);
      return false;
    } while (this.e.equals(paramObject.e));
    return false;
  }
  
  public long getDuration()
  {
    return this.f;
  }
  
  public long getExpireAt()
  {
    return this.d;
  }
  
  public double getLatitude()
  {
    return this.a;
  }
  
  public double getLongitude()
  {
    return this.b;
  }
  
  public float getRadius()
  {
    return this.c;
  }
  
  public String getTag()
  {
    return this.e;
  }
  
  public int hashCode()
  {
    long l = Double.doubleToLongBits(this.a);
    int j = (int)(l ^ l >>> 32);
    l = Double.doubleToLongBits(this.b);
    int k = (int)(l ^ l >>> 32);
    if (this.e == null) {}
    for (int i = 0;; i = this.e.hashCode()) {
      return i + ((j + 31) * 31 + k) * 31;
    }
  }
  
  public String toString()
  {
    return String.format(Locale.US, "TencentGeofence[tag=%s, type=%s, loc=(%.6f, %.6f), radius=%.2fm life=%.2fs]", new Object[] { this.e, "CIRCLE", Double.valueOf(this.a), Double.valueOf(this.b), Float.valueOf(this.c), Double.valueOf((this.d - SystemClock.elapsedRealtime()) / 1000.0D) });
  }
}
