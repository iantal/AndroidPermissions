package com.waterwest.mmlog;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.text.TextUtils;
import android.util.Log;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public final class e
{
  private static volatile boolean A = false;
  private static String B = "";
  private static ExecutorService C = Executors.newSingleThreadExecutor();
  private static final String D = "mm.purchasesdk.iapservice.PurchaseService";
  public static final String a = "3.2.1.1";
  public static boolean b = false;
  public static final String c = "start";
  public static final String d = "activate";
  public static final String e = "login";
  public static final String f = "regist";
  public static final String g = "custom";
  private static String h = "lxd";
  private static int i;
  private static boolean j;
  private static boolean k;
  private static boolean l;
  private static int m;
  private static int n;
  private static final String o;
  private static final String p;
  private static final String q;
  private static final String r;
  private static final String s;
  private static String t;
  private static long u;
  private static volatile String v;
  private static Object w;
  private static Object x;
  private static Object y;
  private static boolean z;
  
  static
  {
    b = false;
    i = 1;
    j = true;
    k = false;
    l = true;
    m = 1;
    n = 0;
    o = "act" + h;
    p = "evn" + h;
    q = "esp" + h;
    r = "err" + h;
    s = "sys" + h;
    t = "";
    u = 0L;
    v = "";
    w = new Object();
    x = new Object();
    y = new Object();
    z = false;
  }
  
  public e() {}
  
  /* Error */
  private static int a(Context paramContext, String paramString, JSONObject paramJSONObject)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore 6
    //   3: iconst_0
    //   4: istore 7
    //   6: iconst_0
    //   7: istore_3
    //   8: iconst_0
    //   9: istore 8
    //   11: iconst_0
    //   12: istore 9
    //   14: iconst_0
    //   15: istore 4
    //   17: iconst_2
    //   18: istore 5
    //   20: getstatic 65	com/waterwest/mmlog/e:i	I
    //   23: iconst_1
    //   24: if_icmpeq +5 -> 29
    //   27: iconst_2
    //   28: ireturn
    //   29: ldc -107
    //   31: new 77	java/lang/StringBuilder
    //   34: dup
    //   35: ldc -105
    //   37: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   40: aload_1
    //   41: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44: ldc -103
    //   46: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   49: aload_0
    //   50: invokevirtual 157	java/lang/Object:getClass	()Ljava/lang/Class;
    //   53: invokevirtual 162	java/lang/Class:getName	()Ljava/lang/String;
    //   56: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   59: ldc -92
    //   61: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   64: aload_2
    //   65: invokevirtual 167	org/json/JSONObject:toString	()Ljava/lang/String;
    //   68: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   71: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   74: invokestatic 170	com/waterwest/mmlog/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   77: aconst_null
    //   78: astore 12
    //   80: aconst_null
    //   81: astore 13
    //   83: aconst_null
    //   84: astore 14
    //   86: aconst_null
    //   87: astore 11
    //   89: aload 14
    //   91: astore 10
    //   93: aload_0
    //   94: invokestatic 175	com/waterwest/mmlog/f:h	(Landroid/content/Context;)Ljava/lang/String;
    //   97: astore 15
    //   99: aload 14
    //   101: astore 10
    //   103: aload_0
    //   104: invokestatic 177	com/waterwest/mmlog/f:i	(Landroid/content/Context;)Ljava/lang/String;
    //   107: ldc -77
    //   109: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   112: astore 16
    //   114: aload 14
    //   116: astore 10
    //   118: new 77	java/lang/StringBuilder
    //   121: dup
    //   122: aload_1
    //   123: invokestatic 191	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   126: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   129: ldc -63
    //   131: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   134: aload 15
    //   136: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   139: ldc -61
    //   141: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   144: aload 16
    //   146: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   149: ldc -59
    //   151: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   154: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   157: astore_1
    //   158: aload 14
    //   160: astore 10
    //   162: ldc -107
    //   164: aload_2
    //   165: invokevirtual 167	org/json/JSONObject:toString	()Ljava/lang/String;
    //   168: invokestatic 170	com/waterwest/mmlog/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   171: aload 14
    //   173: astore 10
    //   175: ldc -107
    //   177: ldc -57
    //   179: invokestatic 170	com/waterwest/mmlog/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   182: aload 14
    //   184: astore 10
    //   186: new 201	java/net/URL
    //   189: dup
    //   190: aload_1
    //   191: invokespecial 202	java/net/URL:<init>	(Ljava/lang/String;)V
    //   194: invokevirtual 206	java/net/URL:openConnection	()Ljava/net/URLConnection;
    //   197: checkcast 208	java/net/HttpURLConnection
    //   200: astore_1
    //   201: iload_3
    //   202: istore 4
    //   204: iload 8
    //   206: istore 6
    //   208: iload 9
    //   210: istore 7
    //   212: aload_1
    //   213: sipush 10000
    //   216: invokevirtual 212	java/net/HttpURLConnection:setReadTimeout	(I)V
    //   219: iload_3
    //   220: istore 4
    //   222: iload 8
    //   224: istore 6
    //   226: iload 9
    //   228: istore 7
    //   230: aload_1
    //   231: iconst_1
    //   232: invokevirtual 216	java/net/HttpURLConnection:setDoOutput	(Z)V
    //   235: iload_3
    //   236: istore 4
    //   238: iload 8
    //   240: istore 6
    //   242: iload 9
    //   244: istore 7
    //   246: aload_1
    //   247: iconst_1
    //   248: invokevirtual 219	java/net/HttpURLConnection:setDoInput	(Z)V
    //   251: iload_3
    //   252: istore 4
    //   254: iload 8
    //   256: istore 6
    //   258: iload 9
    //   260: istore 7
    //   262: aload_1
    //   263: iconst_0
    //   264: invokevirtual 222	java/net/HttpURLConnection:setUseCaches	(Z)V
    //   267: iload_3
    //   268: istore 4
    //   270: iload 8
    //   272: istore 6
    //   274: iload 9
    //   276: istore 7
    //   278: aload_1
    //   279: ldc -32
    //   281: invokevirtual 227	java/net/HttpURLConnection:setRequestMethod	(Ljava/lang/String;)V
    //   284: iload_3
    //   285: istore 4
    //   287: iload 8
    //   289: istore 6
    //   291: iload 9
    //   293: istore 7
    //   295: invokestatic 232	com/waterwest/mmlog/a:a	()Lcom/waterwest/mmlog/a;
    //   298: aload_2
    //   299: invokevirtual 167	org/json/JSONObject:toString	()Ljava/lang/String;
    //   302: invokevirtual 235	com/waterwest/mmlog/a:a	(Ljava/lang/String;)[B
    //   305: astore 10
    //   307: iload_3
    //   308: istore 4
    //   310: iload 8
    //   312: istore 6
    //   314: iload 9
    //   316: istore 7
    //   318: aload_1
    //   319: ldc -19
    //   321: new 77	java/lang/StringBuilder
    //   324: dup
    //   325: invokespecial 238	java/lang/StringBuilder:<init>	()V
    //   328: aload 10
    //   330: arraylength
    //   331: invokevirtual 241	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   334: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   337: invokevirtual 244	java/net/HttpURLConnection:setRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   340: iload_3
    //   341: istore 4
    //   343: iload 8
    //   345: istore 6
    //   347: iload 9
    //   349: istore 7
    //   351: aload_1
    //   352: ldc -10
    //   354: ldc -8
    //   356: invokevirtual 244	java/net/HttpURLConnection:setRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   359: iload_3
    //   360: istore 4
    //   362: iload 8
    //   364: istore 6
    //   366: iload 9
    //   368: istore 7
    //   370: aload_1
    //   371: ldc -6
    //   373: ldc -77
    //   375: invokevirtual 244	java/net/HttpURLConnection:setRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   378: iload_3
    //   379: istore 4
    //   381: iload 8
    //   383: istore 6
    //   385: iload 9
    //   387: istore 7
    //   389: aload_1
    //   390: invokevirtual 254	java/net/HttpURLConnection:getOutputStream	()Ljava/io/OutputStream;
    //   393: astore 11
    //   395: iload_3
    //   396: istore 4
    //   398: iload 8
    //   400: istore 6
    //   402: iload 9
    //   404: istore 7
    //   406: aload 11
    //   408: aload 10
    //   410: invokevirtual 260	java/io/OutputStream:write	([B)V
    //   413: iload_3
    //   414: istore 4
    //   416: iload 8
    //   418: istore 6
    //   420: iload 9
    //   422: istore 7
    //   424: aload 11
    //   426: invokevirtual 263	java/io/OutputStream:close	()V
    //   429: iload_3
    //   430: istore 4
    //   432: iload 8
    //   434: istore 6
    //   436: iload 9
    //   438: istore 7
    //   440: aload_1
    //   441: invokevirtual 267	java/net/HttpURLConnection:getResponseCode	()I
    //   444: istore_3
    //   445: iload_3
    //   446: istore 4
    //   448: iload_3
    //   449: istore 6
    //   451: iload_3
    //   452: istore 7
    //   454: ldc -107
    //   456: ldc_w 269
    //   459: invokestatic 170	com/waterwest/mmlog/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   462: iload 5
    //   464: istore 6
    //   466: sipush 200
    //   469: iload_3
    //   470: if_icmpne +21 -> 491
    //   473: iload_3
    //   474: istore 6
    //   476: iload_3
    //   477: istore 7
    //   479: ldc_w 271
    //   482: ldc_w 273
    //   485: invokestatic 170	com/waterwest/mmlog/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   488: iconst_1
    //   489: istore 6
    //   491: iload 6
    //   493: istore 5
    //   495: iload_3
    //   496: istore 4
    //   498: aload_1
    //   499: ifnull +14 -> 513
    //   502: aload_1
    //   503: invokevirtual 276	java/net/HttpURLConnection:disconnect	()V
    //   506: iload_3
    //   507: istore 4
    //   509: iload 6
    //   511: istore 5
    //   513: iload 4
    //   515: istore_3
    //   516: iload 5
    //   518: istore 4
    //   520: ldc_w 278
    //   523: new 77	java/lang/StringBuilder
    //   526: dup
    //   527: ldc_w 280
    //   530: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   533: iload_3
    //   534: invokevirtual 241	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   537: ldc_w 282
    //   540: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   543: iload 4
    //   545: invokevirtual 241	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   548: ldc_w 284
    //   551: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   554: aload_2
    //   555: ldc_w 286
    //   558: invokevirtual 290	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   561: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   564: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   567: invokestatic 170	com/waterwest/mmlog/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   570: ldc -107
    //   572: new 77	java/lang/StringBuilder
    //   575: dup
    //   576: ldc_w 292
    //   579: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   582: aload_0
    //   583: invokevirtual 157	java/lang/Object:getClass	()Ljava/lang/Class;
    //   586: invokevirtual 162	java/lang/Class:getName	()Ljava/lang/String;
    //   589: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   592: ldc_w 294
    //   595: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   598: iload 4
    //   600: invokevirtual 241	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   603: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   606: invokestatic 170	com/waterwest/mmlog/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   609: iload 4
    //   611: ireturn
    //   612: astore 10
    //   614: iload 4
    //   616: istore_3
    //   617: aload 11
    //   619: astore_1
    //   620: aload 10
    //   622: astore 11
    //   624: aload_1
    //   625: astore 10
    //   627: ldc -107
    //   629: aload 11
    //   631: invokevirtual 295	org/apache/http/client/ClientProtocolException:toString	()Ljava/lang/String;
    //   634: invokestatic 170	com/waterwest/mmlog/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   637: aload_1
    //   638: astore 10
    //   640: aload 11
    //   642: invokevirtual 298	org/apache/http/client/ClientProtocolException:printStackTrace	()V
    //   645: iload_3
    //   646: istore 4
    //   648: aload_1
    //   649: ifnull -136 -> 513
    //   652: aload_1
    //   653: invokevirtual 276	java/net/HttpURLConnection:disconnect	()V
    //   656: iconst_2
    //   657: istore 4
    //   659: goto -139 -> 520
    //   662: astore 11
    //   664: iload 6
    //   666: istore_3
    //   667: aload 12
    //   669: astore_1
    //   670: aload_1
    //   671: astore 10
    //   673: ldc -107
    //   675: aload 11
    //   677: invokevirtual 299	java/io/IOException:toString	()Ljava/lang/String;
    //   680: invokestatic 170	com/waterwest/mmlog/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   683: aload_1
    //   684: astore 10
    //   686: aload 11
    //   688: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   691: iload_3
    //   692: istore 4
    //   694: aload_1
    //   695: ifnull -182 -> 513
    //   698: aload_1
    //   699: invokevirtual 276	java/net/HttpURLConnection:disconnect	()V
    //   702: iconst_2
    //   703: istore 4
    //   705: goto -185 -> 520
    //   708: astore 11
    //   710: iload 7
    //   712: istore_3
    //   713: aload 13
    //   715: astore_1
    //   716: iload 5
    //   718: istore 6
    //   720: aload_1
    //   721: astore 10
    //   723: ldc -107
    //   725: aload 11
    //   727: invokevirtual 301	java/lang/Exception:toString	()Ljava/lang/String;
    //   730: invokestatic 170	com/waterwest/mmlog/e:a	(Ljava/lang/String;Ljava/lang/String;)V
    //   733: aload_1
    //   734: astore 10
    //   736: aload 11
    //   738: invokevirtual 302	java/lang/Exception:printStackTrace	()V
    //   741: iload 6
    //   743: istore 5
    //   745: iload_3
    //   746: istore 4
    //   748: aload_1
    //   749: ifnull -236 -> 513
    //   752: aload_1
    //   753: invokevirtual 276	java/net/HttpURLConnection:disconnect	()V
    //   756: iload 6
    //   758: istore 4
    //   760: goto -240 -> 520
    //   763: astore_0
    //   764: aload 10
    //   766: astore_1
    //   767: aload_1
    //   768: ifnull +7 -> 775
    //   771: aload_1
    //   772: invokevirtual 276	java/net/HttpURLConnection:disconnect	()V
    //   775: aload_0
    //   776: athrow
    //   777: astore_1
    //   778: goto -208 -> 570
    //   781: astore_0
    //   782: goto -15 -> 767
    //   785: astore 11
    //   787: iload 5
    //   789: istore 6
    //   791: iload 4
    //   793: istore_3
    //   794: goto -74 -> 720
    //   797: astore 11
    //   799: iconst_1
    //   800: istore 6
    //   802: goto -82 -> 720
    //   805: astore 11
    //   807: iload 6
    //   809: istore_3
    //   810: goto -140 -> 670
    //   813: astore 11
    //   815: iload 7
    //   817: istore_3
    //   818: goto -194 -> 624
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	821	0	paramContext	Context
    //   0	821	1	paramString	String
    //   0	821	2	paramJSONObject	JSONObject
    //   7	811	3	i1	int
    //   15	777	4	i2	int
    //   18	770	5	i3	int
    //   1	807	6	i4	int
    //   4	812	7	i5	int
    //   9	424	8	i6	int
    //   12	425	9	i7	int
    //   91	318	10	localObject1	Object
    //   612	9	10	localClientProtocolException1	org.apache.http.client.ClientProtocolException
    //   625	140	10	str1	String
    //   87	554	11	localObject2	Object
    //   662	25	11	localIOException1	java.io.IOException
    //   708	29	11	localException1	Exception
    //   785	1	11	localException2	Exception
    //   797	1	11	localException3	Exception
    //   805	1	11	localIOException2	java.io.IOException
    //   813	1	11	localClientProtocolException2	org.apache.http.client.ClientProtocolException
    //   78	590	12	localObject3	Object
    //   81	633	13	localObject4	Object
    //   84	99	14	localObject5	Object
    //   97	38	15	str2	String
    //   112	33	16	str3	String
    // Exception table:
    //   from	to	target	type
    //   93	99	612	org/apache/http/client/ClientProtocolException
    //   103	114	612	org/apache/http/client/ClientProtocolException
    //   118	158	612	org/apache/http/client/ClientProtocolException
    //   162	171	612	org/apache/http/client/ClientProtocolException
    //   175	182	612	org/apache/http/client/ClientProtocolException
    //   186	201	612	org/apache/http/client/ClientProtocolException
    //   93	99	662	java/io/IOException
    //   103	114	662	java/io/IOException
    //   118	158	662	java/io/IOException
    //   162	171	662	java/io/IOException
    //   175	182	662	java/io/IOException
    //   186	201	662	java/io/IOException
    //   93	99	708	java/lang/Exception
    //   103	114	708	java/lang/Exception
    //   118	158	708	java/lang/Exception
    //   162	171	708	java/lang/Exception
    //   175	182	708	java/lang/Exception
    //   186	201	708	java/lang/Exception
    //   93	99	763	finally
    //   103	114	763	finally
    //   118	158	763	finally
    //   162	171	763	finally
    //   175	182	763	finally
    //   186	201	763	finally
    //   627	637	763	finally
    //   640	645	763	finally
    //   673	683	763	finally
    //   686	691	763	finally
    //   723	733	763	finally
    //   736	741	763	finally
    //   520	570	777	java/lang/Exception
    //   212	219	781	finally
    //   230	235	781	finally
    //   246	251	781	finally
    //   262	267	781	finally
    //   278	284	781	finally
    //   295	307	781	finally
    //   318	340	781	finally
    //   351	359	781	finally
    //   370	378	781	finally
    //   389	395	781	finally
    //   406	413	781	finally
    //   424	429	781	finally
    //   440	445	781	finally
    //   454	462	781	finally
    //   479	488	781	finally
    //   212	219	785	java/lang/Exception
    //   230	235	785	java/lang/Exception
    //   246	251	785	java/lang/Exception
    //   262	267	785	java/lang/Exception
    //   278	284	785	java/lang/Exception
    //   295	307	785	java/lang/Exception
    //   318	340	785	java/lang/Exception
    //   351	359	785	java/lang/Exception
    //   370	378	785	java/lang/Exception
    //   389	395	785	java/lang/Exception
    //   406	413	785	java/lang/Exception
    //   424	429	785	java/lang/Exception
    //   440	445	785	java/lang/Exception
    //   454	462	785	java/lang/Exception
    //   479	488	797	java/lang/Exception
    //   212	219	805	java/io/IOException
    //   230	235	805	java/io/IOException
    //   246	251	805	java/io/IOException
    //   262	267	805	java/io/IOException
    //   278	284	805	java/io/IOException
    //   295	307	805	java/io/IOException
    //   318	340	805	java/io/IOException
    //   351	359	805	java/io/IOException
    //   370	378	805	java/io/IOException
    //   389	395	805	java/io/IOException
    //   406	413	805	java/io/IOException
    //   424	429	805	java/io/IOException
    //   440	445	805	java/io/IOException
    //   454	462	805	java/io/IOException
    //   479	488	805	java/io/IOException
    //   212	219	813	org/apache/http/client/ClientProtocolException
    //   230	235	813	org/apache/http/client/ClientProtocolException
    //   246	251	813	org/apache/http/client/ClientProtocolException
    //   262	267	813	org/apache/http/client/ClientProtocolException
    //   278	284	813	org/apache/http/client/ClientProtocolException
    //   295	307	813	org/apache/http/client/ClientProtocolException
    //   318	340	813	org/apache/http/client/ClientProtocolException
    //   351	359	813	org/apache/http/client/ClientProtocolException
    //   370	378	813	org/apache/http/client/ClientProtocolException
    //   389	395	813	org/apache/http/client/ClientProtocolException
    //   406	413	813	org/apache/http/client/ClientProtocolException
    //   424	429	813	org/apache/http/client/ClientProtocolException
    //   440	445	813	org/apache/http/client/ClientProtocolException
    //   454	462	813	org/apache/http/client/ClientProtocolException
    //   479	488	813	org/apache/http/client/ClientProtocolException
  }
  
  private static String a(Context paramContext, String paramString, SharedPreferences paramSharedPreferences)
  {
    long l2 = 0L;
    t = "";
    String str = f.a(paramContext, paramString);
    SharedPreferences.Editor localEditor = paramSharedPreferences.edit();
    localEditor.putString("appKey", paramString);
    localEditor.putString("sessionId", str);
    localEditor.putLong("lastResumeTime", System.currentTimeMillis());
    localEditor.putString("activities", b("onResume", null));
    long l1 = paramSharedPreferences.getLong("readFlowRev", 0L);
    paramContext = f.o(paramContext);
    localEditor.putLong("readFlowRev", paramContext[0]);
    long l3 = paramContext[0] - l1;
    l1 = l3;
    if (l3 < 0L) {
      l1 = 0L;
    }
    localEditor.putLong("consumeFlowRev", l1);
    l1 = paramSharedPreferences.getLong("readFlowSnd", 0L);
    localEditor.putLong("readFlowSnd", paramContext[1]);
    l1 = paramContext[1] - l1;
    if (l1 < 0L) {
      l1 = l2;
    }
    for (;;)
    {
      localEditor.putLong("consumeFlowSnd", l1);
      localEditor.commit();
      v = str;
      return str;
    }
  }
  
  public static void a(Context paramContext)
  {
    if (i == 0)
    {
      Log.i("MobileAgent", "Du have not permission to collect data");
      return;
    }
    Object localObject = "";
    try
    {
      String str = paramContext.getClass().getName();
      localObject = str;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        a("MobileAgentAPI", localException.getMessage());
        continue;
        C.execute(new h(paramContext, 9, null, null));
      }
    }
    a("MobileAgentAPI", "run into onresume " + (String)localObject);
    if (paramContext == null)
    {
      try
      {
        Log.e("MobileAgent", "Exception occurent in onResume ,context cann't be null");
        return;
      }
      catch (Exception paramContext)
      {
        Log.e("MobileAgent", "Exception occurred in MobileAgent.onResume(). ");
        a("MobileAgentRun", paramContext.toString());
      }
      a("MobileAgentAPI", "run out onresume " + (String)localObject);
      return;
    }
  }
  
  private static void a(Context paramContext, String paramString, long paramLong)
  {
    synchronized (w)
    {
      SharedPreferences localSharedPreferences = l(paramContext);
      int i1 = localSharedPreferences.getInt("uploadcount", 0);
      paramString = localSharedPreferences.getString("uploadList", "") + paramString + "|";
      long l1 = paramLong;
      if (paramLong > 10000L) {
        l1 = 1L;
      }
      localSharedPreferences.edit().putString("uploadList", paramString).commit();
      localSharedPreferences.edit().putLong("uploadpopindex", l1).commit();
      if (paramString.split("\\|").length > 30000)
      {
        paramString = t(paramContext);
        paramContext.deleteFile(paramString);
        j(paramContext, paramString);
        return;
      }
      localSharedPreferences.edit().putInt("uploadcount", i1 + 1).commit();
    }
  }
  
  protected static void a(Context paramContext, String paramString1, String paramString2)
  {
    synchronized (x)
    {
      paramString1 = f.a(paramString1);
      paramString2 = f.a(paramString2);
      SharedPreferences localSharedPreferences = j(paramContext);
      StringBuffer localStringBuffer = new StringBuffer();
      localStringBuffer.append(localSharedPreferences.getString("eventlogs", ""));
      try
      {
        localStringBuffer.append(URLEncoder.encode(paramString1, "UTF-8"));
        localStringBuffer.append("|");
        localStringBuffer.append(URLEncoder.encode(paramString2, "UTF-8"));
        localStringBuffer.append("|");
        localStringBuffer.append(1);
        localStringBuffer.append("|");
        localStringBuffer.append(System.currentTimeMillis());
        localStringBuffer.append("\n");
        localSharedPreferences.edit().putString("eventlogs", localStringBuffer.toString()).commit();
        p(paramContext);
        b(paramContext, false);
        return;
      }
      catch (UnsupportedEncodingException paramContext)
      {
        a("MobileAgentRun", "unsupport utf-8,can't onEvent()");
        return;
      }
    }
  }
  
  public static void a(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8)
  {
    if (A)
    {
      Log.i("MobileAgent", "already init");
      return;
    }
    for (;;)
    {
      try
      {
        if (!paramContext.getSharedPreferences("MoblieAgent_debug", 0).getString("debug", "").equals("")) {
          continue;
        }
        bool = false;
        b = bool;
      }
      catch (Exception localException)
      {
        boolean bool;
        String str;
        continue;
      }
      a("MobileAgentAPI", "run in init[" + paramString1 + "," + paramString2 + "]");
      if (paramContext != null) {
        continue;
      }
      Log.e("MobileAgent", "Exception occurent in joinDu ,context cann't be null");
      return;
      bool = true;
    }
    if ((!TextUtils.isEmpty(paramString1)) && (!f.a(paramString1, 50)))
    {
      if (TextUtils.isEmpty(paramString2)) {
        str = "0";
      }
      for (;;)
      {
        paramString2 = paramContext.getSharedPreferences(h + "MoblieAgent_sys_config", 0);
        paramString2.edit().putString("MOBILE_APPKEY", paramString1).commit();
        paramString2.edit().putString("MOBILE_PROGRAM_ID", paramString3).commit();
        paramString2.edit().putString("MOBILE_VERSION", paramString4).commit();
        paramString2.edit().putString("MOBILE_PACKAGE_NAME", paramString5).commit();
        paramString2.edit().putString("MOBILE_CHANNEL", str).commit();
        paramString2.edit().putString("MOBILE_VERSION_CODE", paramString6).commit();
        paramString2.edit().putString("MOBILE_VERSION_NAME", paramString7).commit();
        paramString2.edit().putString("MOBILE_WW_CHANNEL", paramString8).commit();
        a(paramContext);
        b(paramContext);
        A = true;
        Log.i("MobileAgent", "finish init SUCCESS " + b);
        return;
        str = paramString2;
        if (f.a(paramString2, 100))
        {
          str = paramString2.substring(0, 99);
          Log.e("MobileAgent", "Exception occurent in joinDu ,channelID cann't be null or empty");
        }
      }
    }
    Log.e("MobileAgent", "Exception occurent in joinDu ,appID cann't be null or empty");
  }
  
  protected static void a(Context paramContext, boolean paramBoolean)
  {
    boolean bool = true;
    Object localObject1;
    if (paramBoolean)
    {
      a("MobileAgentRun", "run into pageact onresumep");
      a("MobileAgentRun", "run into onresumep :" + paramContext.getClass().getName());
      try
      {
        a("page pro", "do resume start: " + paramContext.getClass().getName());
        a("MobileAgentRun", "run into sessionpolicy");
        localObject1 = f.h(paramContext);
        localSharedPreferences = i(paramContext);
        localObject2 = localSharedPreferences.getString("sessionId", null);
        long l1 = localSharedPreferences.getLong("endTime", -1L);
        if (System.currentTimeMillis() - l1 <= 30000L) {
          break label543;
        }
        i1 = 1;
        if (i1 == 0) {
          break label548;
        }
        if (localObject2 != null)
        {
          a(paramContext, localSharedPreferences, true);
          localObject2 = localSharedPreferences.edit();
          l1 = localSharedPreferences.getLong("readFlowRev", 0L);
          l2 = localSharedPreferences.getLong("readFlowSnd", 0L);
          ((SharedPreferences.Editor)localObject2).clear();
          ((SharedPreferences.Editor)localObject2).putLong("readFlowRev", Long.valueOf(l1).longValue()).commit();
          ((SharedPreferences.Editor)localObject2).putLong("readFlowSnd", Long.valueOf(l2).longValue()).commit();
        }
        t = "";
        localObject2 = f.a(paramContext, (String)localObject1);
        SharedPreferences.Editor localEditor = localSharedPreferences.edit();
        localEditor.putString("appKey", (String)localObject1);
        localEditor.putString("sessionId", (String)localObject2);
        localEditor.putLong("lastResumeTime", System.currentTimeMillis());
        localEditor.putString("activities", b("onResume", null));
        l1 = localSharedPreferences.getLong("readFlowRev", 0L);
        localObject1 = f.o(paramContext);
        localEditor.putLong("readFlowRev", localObject1[0]);
        long l2 = localObject1[0] - l1;
        l1 = l2;
        if (l2 < 0L) {
          l1 = 0L;
        }
        localEditor.putLong("consumeFlowRev", l1);
        l1 = localSharedPreferences.getLong("readFlowSnd", 0L);
        localEditor.putLong("readFlowSnd", localObject1[1]);
        l2 = localObject1[1] - l1;
        l1 = l2;
        if (l2 < 0L) {
          l1 = 0L;
        }
        localEditor.putLong("consumeFlowSnd", l1);
        localEditor.commit();
        v = (String)localObject2;
        a(paramContext, localSharedPreferences, false);
        paramBoolean = bool;
        if (a(paramContext, 1))
        {
          o(paramContext);
          paramBoolean = bool;
        }
        label493:
        a("MobileAgentRun", "run out sessionpolicy");
        b(paramContext, paramBoolean);
      }
      catch (Exception localException)
      {
        for (;;)
        {
          SharedPreferences localSharedPreferences;
          Object localObject2;
          int i1;
          localException.printStackTrace();
        }
      }
      a("MobileAgentRun", "run out onresume :" + paramContext.getClass().getName());
    }
    for (;;)
    {
      a("MobileAgentRun", "run out pageact");
      return;
      label543:
      i1 = 0;
      break;
      label548:
      localObject1 = localSharedPreferences.getString("activities", null);
      localObject2 = localSharedPreferences.edit();
      ((SharedPreferences.Editor)localObject2).putString("activities", b("onResume", (String)localObject1));
      ((SharedPreferences.Editor)localObject2).putLong("lastResumeTime", System.currentTimeMillis());
      ((SharedPreferences.Editor)localObject2).commit();
      if ((m == 1) || (((String)localObject1).getBytes().length > 10000)) {
        a(paramContext, localSharedPreferences, false);
      }
      paramBoolean = false;
      break label493;
      a("MobileAgentRun", "run into pageact onpausep");
      a("MobileAgentRun", "run into onpausep :" + paramContext.getClass().getName());
      localObject1 = i(paramContext);
      String str = ((SharedPreferences)localObject1).getString("activities", null);
      localObject1 = ((SharedPreferences)localObject1).edit();
      ((SharedPreferences.Editor)localObject1).putLong("endTime", System.currentTimeMillis());
      ((SharedPreferences.Editor)localObject1).putString("activities", b("onPause", str));
      ((SharedPreferences.Editor)localObject1).commit();
      a("MobileAgentRun", "run out onpausep :" + paramContext.getClass().getName());
    }
  }
  
  private static void a(Boolean paramBoolean)
  {
    if (i != 0) {
      j = paramBoolean.booleanValue();
    }
  }
  
  public static void a(String paramString1, String paramString2)
  {
    if ((b) && (paramString2 != null)) {
      Log.e(paramString1, paramString2);
    }
  }
  
  public static boolean a()
  {
    return A;
  }
  
  private static boolean a(Context paramContext, int paramInt)
  {
    paramContext = h(paramContext);
    int i1;
    if (paramInt == 3)
    {
      paramInt = paramContext.getInt("actionmonth", 0);
      i1 = paramContext.getInt("actionday", 0);
    }
    for (;;)
    {
      paramContext = new Date();
      String str = new SimpleDateFormat("dd").format(paramContext);
      if ((Integer.valueOf(new SimpleDateFormat("M").format(paramContext)).intValue() != paramInt) || (Integer.valueOf(str).intValue() != i1)) {
        break;
      }
      return false;
      if (paramInt == 2)
      {
        paramInt = paramContext.getInt("eventmonth", 0);
        i1 = paramContext.getInt("eventday", 0);
      }
      else
      {
        paramInt = paramContext.getInt("sysmonth", 0);
        i1 = paramContext.getInt("sysday", 0);
      }
    }
    return true;
  }
  
  private static boolean a(Context paramContext, SharedPreferences paramSharedPreferences, boolean paramBoolean)
  {
    String str1 = paramSharedPreferences.getString("sessionId", "");
    String str2 = paramSharedPreferences.getString("activities", "");
    JSONObject localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("sid", str1);
      localJSONObject.put("logs", str2);
      if (paramBoolean)
      {
        localJSONObject.put("flowConsumpRev", paramSharedPreferences.getLong("consumeFlowRev", 0L));
        localJSONObject.put("flowConsumpSnd", paramSharedPreferences.getLong("consumeFlowSnd", 0L));
      }
      while (a(paramContext, localJSONObject.toString(), 3))
      {
        paramSharedPreferences.edit().putString("activities", "").commit();
        break;
        localJSONObject.put("flowConsumpRev", 0);
        localJSONObject.put("flowConsumpSnd", 0);
      }
      return true;
    }
    catch (JSONException paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  /* Error */
  protected static boolean a(Context paramContext, String paramString)
  {
    // Byte code:
    //   0: aload_0
    //   1: aload_1
    //   2: invokestatic 660	com/waterwest/mmlog/e:h	(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;
    //   5: astore_3
    //   6: aload_3
    //   7: ldc 111
    //   9: invokevirtual 481	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   12: ifne +377 -> 389
    //   15: aload_0
    //   16: invokestatic 663	com/waterwest/mmlog/e:n	(Landroid/content/Context;)Lorg/json/JSONObject;
    //   19: astore 4
    //   21: new 166	org/json/JSONObject
    //   24: dup
    //   25: aload_3
    //   26: invokespecial 664	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   29: astore 5
    //   31: aload 4
    //   33: ldc_w 637
    //   36: aload 5
    //   38: ldc_w 637
    //   41: invokevirtual 668	org/json/JSONObject:get	(Ljava/lang/String;)Ljava/lang/Object;
    //   44: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   47: pop
    //   48: aload 4
    //   50: ldc_w 670
    //   53: aload_0
    //   54: invokestatic 672	com/waterwest/mmlog/f:g	(Landroid/content/Context;)Ljava/lang/String;
    //   57: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   60: pop
    //   61: aload 4
    //   63: ldc_w 674
    //   66: invokestatic 676	com/waterwest/mmlog/f:a	()Ljava/lang/String;
    //   69: ldc -77
    //   71: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   74: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   77: pop
    //   78: aload 4
    //   80: ldc_w 678
    //   83: invokestatic 680	com/waterwest/mmlog/f:b	()Ljava/lang/String;
    //   86: ldc -77
    //   88: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   91: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   94: pop
    //   95: aload 4
    //   97: ldc_w 682
    //   100: invokestatic 684	com/waterwest/mmlog/f:c	()Ljava/lang/String;
    //   103: ldc -77
    //   105: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   108: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   111: pop
    //   112: aload 4
    //   114: ldc_w 686
    //   117: aload_0
    //   118: invokestatic 688	com/waterwest/mmlog/f:n	(Landroid/content/Context;)Ljava/lang/String;
    //   121: ldc -77
    //   123: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   126: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   129: pop
    //   130: aload 4
    //   132: ldc_w 690
    //   135: aload_0
    //   136: invokestatic 692	com/waterwest/mmlog/f:p	(Landroid/content/Context;)Ljava/lang/String;
    //   139: ldc -77
    //   141: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   144: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   147: pop
    //   148: aload 4
    //   150: ldc_w 694
    //   153: aload_0
    //   154: invokestatic 696	com/waterwest/mmlog/f:a	(Landroid/content/Context;)Ljava/lang/String;
    //   157: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   160: pop
    //   161: aload 4
    //   163: ldc_w 698
    //   166: invokestatic 700	com/waterwest/mmlog/f:f	()Ljava/lang/String;
    //   169: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   172: pop
    //   173: aload 4
    //   175: ldc_w 702
    //   178: invokestatic 704	com/waterwest/mmlog/f:g	()Ljava/lang/String;
    //   181: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   184: pop
    //   185: aload 4
    //   187: ldc_w 706
    //   190: invokestatic 708	com/waterwest/mmlog/f:h	()Ljava/lang/String;
    //   193: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   196: pop
    //   197: aload 4
    //   199: ldc_w 286
    //   202: new 710	org/json/JSONArray
    //   205: dup
    //   206: new 77	java/lang/StringBuilder
    //   209: dup
    //   210: ldc_w 712
    //   213: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   216: aload_3
    //   217: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   220: ldc_w 487
    //   223: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   226: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   229: invokespecial 713	org/json/JSONArray:<init>	(Ljava/lang/String;)V
    //   232: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   235: pop
    //   236: aload 4
    //   238: ldc_w 715
    //   241: getstatic 131	com/waterwest/mmlog/e:B	Ljava/lang/String;
    //   244: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   247: pop
    //   248: aload_0
    //   249: ldc_w 717
    //   252: aload 4
    //   254: invokestatic 719	com/waterwest/mmlog/e:a	(Landroid/content/Context;Ljava/lang/String;Lorg/json/JSONObject;)I
    //   257: istore_2
    //   258: goto +143 -> 401
    //   261: astore 5
    //   263: aload 4
    //   265: ldc_w 637
    //   268: ldc 111
    //   270: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   273: pop
    //   274: goto -226 -> 48
    //   277: astore_3
    //   278: aload_3
    //   279: invokevirtual 657	org/json/JSONException:printStackTrace	()V
    //   282: iconst_3
    //   283: istore_2
    //   284: goto +117 -> 401
    //   287: astore 5
    //   289: aload 4
    //   291: ldc_w 674
    //   294: ldc 111
    //   296: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   299: pop
    //   300: goto -222 -> 78
    //   303: astore 5
    //   305: aload 4
    //   307: ldc_w 678
    //   310: ldc 111
    //   312: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   315: pop
    //   316: goto -221 -> 95
    //   319: astore 5
    //   321: aload 4
    //   323: ldc_w 682
    //   326: ldc 111
    //   328: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   331: pop
    //   332: goto -220 -> 112
    //   335: astore 5
    //   337: aload 4
    //   339: ldc_w 686
    //   342: ldc 111
    //   344: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   347: pop
    //   348: goto -218 -> 130
    //   351: astore 5
    //   353: aload 4
    //   355: ldc_w 690
    //   358: ldc 111
    //   360: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   363: pop
    //   364: goto -216 -> 148
    //   367: aload_0
    //   368: iconst_3
    //   369: invokestatic 722	com/waterwest/mmlog/e:b	(Landroid/content/Context;I)V
    //   372: aload_0
    //   373: aload_1
    //   374: invokestatic 724	com/waterwest/mmlog/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   377: ldc_w 271
    //   380: ldc_w 726
    //   383: invokestatic 367	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   386: pop
    //   387: iconst_1
    //   388: ireturn
    //   389: aload_0
    //   390: iconst_3
    //   391: invokestatic 722	com/waterwest/mmlog/e:b	(Landroid/content/Context;I)V
    //   394: aload_0
    //   395: aload_1
    //   396: invokestatic 724	com/waterwest/mmlog/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   399: iconst_1
    //   400: ireturn
    //   401: iload_2
    //   402: iconst_1
    //   403: if_icmpeq -36 -> 367
    //   406: iload_2
    //   407: iconst_3
    //   408: if_icmpeq -41 -> 367
    //   411: iconst_0
    //   412: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	413	0	paramContext	Context
    //   0	413	1	paramString	String
    //   257	152	2	i1	int
    //   5	212	3	str	String
    //   277	2	3	localJSONException1	JSONException
    //   19	335	4	localJSONObject1	JSONObject
    //   29	8	5	localJSONObject2	JSONObject
    //   261	1	5	localJSONException2	JSONException
    //   287	1	5	localUnsupportedEncodingException1	UnsupportedEncodingException
    //   303	1	5	localUnsupportedEncodingException2	UnsupportedEncodingException
    //   319	1	5	localUnsupportedEncodingException3	UnsupportedEncodingException
    //   335	1	5	localUnsupportedEncodingException4	UnsupportedEncodingException
    //   351	1	5	localUnsupportedEncodingException5	UnsupportedEncodingException
    // Exception table:
    //   from	to	target	type
    //   31	48	261	org/json/JSONException
    //   21	31	277	org/json/JSONException
    //   48	61	277	org/json/JSONException
    //   61	78	277	org/json/JSONException
    //   78	95	277	org/json/JSONException
    //   95	112	277	org/json/JSONException
    //   112	130	277	org/json/JSONException
    //   130	148	277	org/json/JSONException
    //   148	258	277	org/json/JSONException
    //   263	274	277	org/json/JSONException
    //   289	300	277	org/json/JSONException
    //   305	316	277	org/json/JSONException
    //   321	332	277	org/json/JSONException
    //   337	348	277	org/json/JSONException
    //   353	364	277	org/json/JSONException
    //   61	78	287	java/io/UnsupportedEncodingException
    //   78	95	303	java/io/UnsupportedEncodingException
    //   95	112	319	java/io/UnsupportedEncodingException
    //   112	130	335	java/io/UnsupportedEncodingException
    //   130	148	351	java/io/UnsupportedEncodingException
  }
  
  /* Error */
  private static boolean a(Context paramContext, String paramString, int paramInt)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: iload_2
    //   4: iconst_3
    //   5: if_icmpne +271 -> 276
    //   8: getstatic 93	com/waterwest/mmlog/e:o	Ljava/lang/String;
    //   11: astore 8
    //   13: aload_1
    //   14: invokevirtual 731	java/lang/String:trim	()Ljava/lang/String;
    //   17: ldc 111
    //   19: invokevirtual 481	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   22: ifne +452 -> 474
    //   25: aload_0
    //   26: invokestatic 734	com/waterwest/mmlog/e:s	(Landroid/content/Context;)J
    //   29: lstore_3
    //   30: new 77	java/lang/StringBuilder
    //   33: dup
    //   34: aload 8
    //   36: invokestatic 191	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   39: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   42: astore 8
    //   44: lconst_1
    //   45: lload_3
    //   46: ladd
    //   47: lstore 5
    //   49: aload 8
    //   51: lload_3
    //   52: invokevirtual 737	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   55: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   58: astore 11
    //   60: aconst_null
    //   61: astore 8
    //   63: aload_0
    //   64: aload 11
    //   66: iconst_1
    //   67: invokevirtual 741	android/content/Context:openFileOutput	(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    //   70: astore 9
    //   72: aload 9
    //   74: astore 8
    //   76: aload 8
    //   78: astore 9
    //   80: getstatic 121	com/waterwest/mmlog/e:w	Ljava/lang/Object;
    //   83: astore 10
    //   85: aload 8
    //   87: astore 9
    //   89: aload 10
    //   91: monitorenter
    //   92: aload_0
    //   93: invokestatic 397	com/waterwest/mmlog/e:l	(Landroid/content/Context;)Landroid/content/SharedPreferences;
    //   96: astore 9
    //   98: aload 9
    //   100: ldc_w 399
    //   103: iconst_0
    //   104: invokeinterface 403 3 0
    //   109: istore_2
    //   110: new 77	java/lang/StringBuilder
    //   113: dup
    //   114: aload 9
    //   116: ldc_w 405
    //   119: ldc 111
    //   121: invokeinterface 407 3 0
    //   126: invokestatic 191	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   129: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   132: aload 11
    //   134: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   137: ldc_w 409
    //   140: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   143: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   146: astore 11
    //   148: lload 5
    //   150: lstore_3
    //   151: lload 5
    //   153: ldc2_w 410
    //   156: lcmp
    //   157: ifle +5 -> 162
    //   160: lconst_1
    //   161: lstore_3
    //   162: aload 9
    //   164: invokeinterface 312 1 0
    //   169: ldc_w 405
    //   172: aload 11
    //   174: invokeinterface 320 3 0
    //   179: invokeinterface 359 1 0
    //   184: pop
    //   185: aload 9
    //   187: invokeinterface 312 1 0
    //   192: ldc_w 413
    //   195: lload_3
    //   196: invokeinterface 334 4 0
    //   201: invokeinterface 359 1 0
    //   206: pop
    //   207: aload 11
    //   209: ldc_w 415
    //   212: invokevirtual 419	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   215: arraylength
    //   216: sipush 30000
    //   219: if_icmple +104 -> 323
    //   222: aload_0
    //   223: invokestatic 421	com/waterwest/mmlog/e:t	(Landroid/content/Context;)Ljava/lang/String;
    //   226: astore 9
    //   228: aload_0
    //   229: aload 9
    //   231: invokevirtual 427	android/content/Context:deleteFile	(Ljava/lang/String;)Z
    //   234: pop
    //   235: aload_0
    //   236: aload 9
    //   238: invokestatic 430	com/waterwest/mmlog/e:j	(Landroid/content/Context;Ljava/lang/String;)V
    //   241: aload 10
    //   243: monitorexit
    //   244: aload 8
    //   246: astore 9
    //   248: aload 8
    //   250: aload_1
    //   251: invokevirtual 582	java/lang/String:getBytes	()[B
    //   254: invokevirtual 744	java/io/FileOutputStream:write	([B)V
    //   257: aload 8
    //   259: ifnull +8 -> 267
    //   262: aload 8
    //   264: invokevirtual 745	java/io/FileOutputStream:close	()V
    //   267: iconst_1
    //   268: istore 7
    //   270: ldc 2
    //   272: monitorexit
    //   273: iload 7
    //   275: ireturn
    //   276: iload_2
    //   277: iconst_2
    //   278: if_icmpne +11 -> 289
    //   281: getstatic 97	com/waterwest/mmlog/e:p	Ljava/lang/String;
    //   284: astore 8
    //   286: goto -273 -> 13
    //   289: iload_2
    //   290: iconst_4
    //   291: if_icmpne +11 -> 302
    //   294: getstatic 105	com/waterwest/mmlog/e:r	Ljava/lang/String;
    //   297: astore 8
    //   299: goto -286 -> 13
    //   302: iload_2
    //   303: iconst_1
    //   304: if_icmpne +200 -> 504
    //   307: getstatic 109	com/waterwest/mmlog/e:s	Ljava/lang/String;
    //   310: astore 8
    //   312: goto -299 -> 13
    //   315: getstatic 101	com/waterwest/mmlog/e:q	Ljava/lang/String;
    //   318: astore 8
    //   320: goto -307 -> 13
    //   323: aload 9
    //   325: invokeinterface 312 1 0
    //   330: ldc_w 399
    //   333: iload_2
    //   334: iconst_1
    //   335: iadd
    //   336: invokeinterface 434 3 0
    //   341: invokeinterface 359 1 0
    //   346: pop
    //   347: goto -106 -> 241
    //   350: astore_0
    //   351: aload 10
    //   353: monitorexit
    //   354: aload 8
    //   356: astore 9
    //   358: aload_0
    //   359: athrow
    //   360: astore_0
    //   361: aload 8
    //   363: astore_0
    //   364: ldc -107
    //   366: ldc_w 747
    //   369: invokestatic 749	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
    //   372: pop
    //   373: aload_0
    //   374: ifnull +7 -> 381
    //   377: aload_0
    //   378: invokevirtual 745	java/io/FileOutputStream:close	()V
    //   381: iconst_0
    //   382: istore 7
    //   384: goto -114 -> 270
    //   387: astore_0
    //   388: aload_0
    //   389: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   392: goto -125 -> 267
    //   395: astore_0
    //   396: ldc 2
    //   398: monitorexit
    //   399: aload_0
    //   400: athrow
    //   401: astore_0
    //   402: aload_0
    //   403: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   406: goto -25 -> 381
    //   409: astore_0
    //   410: aconst_null
    //   411: astore 8
    //   413: aload 8
    //   415: astore 9
    //   417: ldc -107
    //   419: ldc_w 751
    //   422: invokestatic 749	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
    //   425: pop
    //   426: aload 8
    //   428: ifnull +8 -> 436
    //   431: aload 8
    //   433: invokevirtual 745	java/io/FileOutputStream:close	()V
    //   436: iconst_1
    //   437: istore 7
    //   439: goto -169 -> 270
    //   442: astore_0
    //   443: aload_0
    //   444: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   447: goto -11 -> 436
    //   450: astore_0
    //   451: aconst_null
    //   452: astore 9
    //   454: aload 9
    //   456: ifnull +8 -> 464
    //   459: aload 9
    //   461: invokevirtual 745	java/io/FileOutputStream:close	()V
    //   464: aload_0
    //   465: athrow
    //   466: astore_1
    //   467: aload_1
    //   468: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   471: goto -7 -> 464
    //   474: iconst_0
    //   475: istore 7
    //   477: goto -207 -> 270
    //   480: astore_0
    //   481: goto -27 -> 454
    //   484: astore_1
    //   485: aload_0
    //   486: astore 9
    //   488: aload_1
    //   489: astore_0
    //   490: goto -36 -> 454
    //   493: astore_0
    //   494: goto -81 -> 413
    //   497: astore_0
    //   498: aload 8
    //   500: astore_0
    //   501: goto -137 -> 364
    //   504: iload_2
    //   505: iconst_5
    //   506: if_icmpeq -191 -> 315
    //   509: iconst_0
    //   510: istore 7
    //   512: goto -242 -> 270
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	515	0	paramContext	Context
    //   0	515	1	paramString	String
    //   0	515	2	paramInt	int
    //   29	167	3	l1	long
    //   47	105	5	l2	long
    //   268	243	7	bool	boolean
    //   11	488	8	localObject1	Object
    //   70	417	9	localObject2	Object
    //   83	269	10	localObject3	Object
    //   58	150	11	str	String
    // Exception table:
    //   from	to	target	type
    //   92	148	350	finally
    //   162	241	350	finally
    //   241	244	350	finally
    //   323	347	350	finally
    //   351	354	350	finally
    //   80	85	360	java/io/FileNotFoundException
    //   89	92	360	java/io/FileNotFoundException
    //   248	257	360	java/io/FileNotFoundException
    //   358	360	360	java/io/FileNotFoundException
    //   262	267	387	java/io/IOException
    //   8	13	395	finally
    //   13	44	395	finally
    //   49	60	395	finally
    //   262	267	395	finally
    //   281	286	395	finally
    //   294	299	395	finally
    //   307	312	395	finally
    //   315	320	395	finally
    //   377	381	395	finally
    //   388	392	395	finally
    //   402	406	395	finally
    //   431	436	395	finally
    //   443	447	395	finally
    //   459	464	395	finally
    //   464	466	395	finally
    //   467	471	395	finally
    //   377	381	401	java/io/IOException
    //   63	72	409	java/io/IOException
    //   431	436	442	java/io/IOException
    //   63	72	450	finally
    //   459	464	466	java/io/IOException
    //   80	85	480	finally
    //   89	92	480	finally
    //   248	257	480	finally
    //   358	360	480	finally
    //   417	426	480	finally
    //   364	373	484	finally
    //   80	85	493	java/io/IOException
    //   89	92	493	java/io/IOException
    //   248	257	493	java/io/IOException
    //   358	360	493	java/io/IOException
    //   63	72	497	java/io/FileNotFoundException
  }
  
  /* Error */
  protected static boolean a(Context paramContext, String paramString1, String paramString2, long paramLong)
  {
    // Byte code:
    //   0: aload_2
    //   1: ifnonnull +469 -> 470
    //   4: aload_0
    //   5: aload_1
    //   6: invokestatic 660	com/waterwest/mmlog/e:h	(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;
    //   9: astore 6
    //   11: aload 6
    //   13: ldc 111
    //   15: invokevirtual 481	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   18: ifne +434 -> 452
    //   21: new 166	org/json/JSONObject
    //   24: dup
    //   25: aload 6
    //   27: invokespecial 664	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   30: astore 6
    //   32: aload_0
    //   33: invokestatic 754	com/waterwest/mmlog/f:b	(Landroid/content/Context;)Ljava/lang/String;
    //   36: astore 7
    //   38: aload 6
    //   40: ldc_w 756
    //   43: iconst_1
    //   44: invokevirtual 656	org/json/JSONObject:put	(Ljava/lang/String;I)Lorg/json/JSONObject;
    //   47: pop
    //   48: aload 6
    //   50: ldc_w 758
    //   53: ldc_w 760
    //   56: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   59: pop
    //   60: aload 6
    //   62: ldc_w 762
    //   65: ldc 17
    //   67: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   70: pop
    //   71: aload 6
    //   73: ldc_w 764
    //   76: aload 7
    //   78: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   81: pop
    //   82: aload 6
    //   84: ldc_w 314
    //   87: aload_0
    //   88: invokestatic 175	com/waterwest/mmlog/f:h	(Landroid/content/Context;)Ljava/lang/String;
    //   91: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   94: pop
    //   95: aload 6
    //   97: ldc_w 766
    //   100: getstatic 770	com/waterwest/mmlog/TrustInfo:packageName	Ljava/lang/String;
    //   103: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   106: pop
    //   107: aload 6
    //   109: ldc_w 772
    //   112: getstatic 774	com/waterwest/mmlog/TrustInfo:versionCode	Ljava/lang/String;
    //   115: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   118: pop
    //   119: aload 6
    //   121: ldc_w 776
    //   124: getstatic 778	com/waterwest/mmlog/TrustInfo:versionName	Ljava/lang/String;
    //   127: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   130: pop
    //   131: lload_3
    //   132: lconst_0
    //   133: lcmp
    //   134: ifne +178 -> 312
    //   137: invokestatic 330	java/lang/System:currentTimeMillis	()J
    //   140: lstore_3
    //   141: aload 6
    //   143: ldc_w 780
    //   146: lload_3
    //   147: invokevirtual 648	org/json/JSONObject:put	(Ljava/lang/String;J)Lorg/json/JSONObject;
    //   150: pop
    //   151: aload 6
    //   153: ldc_w 670
    //   156: aload_0
    //   157: invokestatic 672	com/waterwest/mmlog/f:g	(Landroid/content/Context;)Ljava/lang/String;
    //   160: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   163: pop
    //   164: aload 6
    //   166: ldc_w 674
    //   169: invokestatic 676	com/waterwest/mmlog/f:a	()Ljava/lang/String;
    //   172: ldc -77
    //   174: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   177: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   180: pop
    //   181: aload 6
    //   183: ldc_w 678
    //   186: invokestatic 680	com/waterwest/mmlog/f:b	()Ljava/lang/String;
    //   189: ldc -77
    //   191: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   194: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   197: pop
    //   198: aload 6
    //   200: ldc_w 682
    //   203: invokestatic 684	com/waterwest/mmlog/f:c	()Ljava/lang/String;
    //   206: ldc -77
    //   208: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   211: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   214: pop
    //   215: aload 6
    //   217: ldc_w 686
    //   220: aload_0
    //   221: invokestatic 688	com/waterwest/mmlog/f:n	(Landroid/content/Context;)Ljava/lang/String;
    //   224: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   227: pop
    //   228: aload 6
    //   230: ldc_w 694
    //   233: aload_0
    //   234: invokestatic 696	com/waterwest/mmlog/f:a	(Landroid/content/Context;)Ljava/lang/String;
    //   237: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   240: pop
    //   241: aload 6
    //   243: ldc_w 782
    //   246: aload_0
    //   247: invokestatic 177	com/waterwest/mmlog/f:i	(Landroid/content/Context;)Ljava/lang/String;
    //   250: ldc -77
    //   252: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   255: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   258: pop
    //   259: aload 6
    //   261: ldc_w 715
    //   264: getstatic 131	com/waterwest/mmlog/e:B	Ljava/lang/String;
    //   267: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   270: pop
    //   271: aload_0
    //   272: ldc_w 784
    //   275: aload 6
    //   277: invokestatic 719	com/waterwest/mmlog/e:a	(Landroid/content/Context;Ljava/lang/String;Lorg/json/JSONObject;)I
    //   280: istore 5
    //   282: iload 5
    //   284: iconst_1
    //   285: if_icmpeq +127 -> 412
    //   288: iload 5
    //   290: iconst_3
    //   291: if_icmpeq +121 -> 412
    //   294: iload 5
    //   296: iconst_2
    //   297: if_icmpne +179 -> 476
    //   300: ldc_w 271
    //   303: ldc_w 786
    //   306: invokestatic 749	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
    //   309: pop
    //   310: iconst_0
    //   311: ireturn
    //   312: new 788	java/util/Random
    //   315: dup
    //   316: invokestatic 330	java/lang/System:currentTimeMillis	()J
    //   319: invokespecial 791	java/util/Random:<init>	(J)V
    //   322: bipush 10
    //   324: invokevirtual 795	java/util/Random:nextInt	(I)I
    //   327: iconst_2
    //   328: iadd
    //   329: i2l
    //   330: lload_3
    //   331: ladd
    //   332: lstore_3
    //   333: goto -192 -> 141
    //   336: astore 7
    //   338: aload 6
    //   340: ldc_w 674
    //   343: ldc 111
    //   345: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   348: pop
    //   349: goto -168 -> 181
    //   352: astore_2
    //   353: aload_0
    //   354: aload_1
    //   355: invokestatic 724	com/waterwest/mmlog/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   358: aload_2
    //   359: invokevirtual 657	org/json/JSONException:printStackTrace	()V
    //   362: iconst_1
    //   363: ireturn
    //   364: astore 7
    //   366: aload 6
    //   368: ldc_w 678
    //   371: ldc 111
    //   373: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   376: pop
    //   377: goto -179 -> 198
    //   380: astore 7
    //   382: aload 6
    //   384: ldc_w 682
    //   387: ldc 111
    //   389: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   392: pop
    //   393: goto -178 -> 215
    //   396: astore 7
    //   398: aload 6
    //   400: ldc_w 782
    //   403: ldc 111
    //   405: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   408: pop
    //   409: goto -150 -> 259
    //   412: aload_2
    //   413: ifnonnull +26 -> 439
    //   416: aload_0
    //   417: iconst_3
    //   418: invokestatic 722	com/waterwest/mmlog/e:b	(Landroid/content/Context;I)V
    //   421: aload_0
    //   422: aload_1
    //   423: invokestatic 724	com/waterwest/mmlog/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   426: ldc_w 271
    //   429: ldc_w 797
    //   432: invokestatic 367	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   435: pop
    //   436: goto +42 -> 478
    //   439: ldc_w 271
    //   442: ldc_w 799
    //   445: invokestatic 367	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   448: pop
    //   449: goto +29 -> 478
    //   452: aload_2
    //   453: ifnonnull +15 -> 468
    //   456: aload_0
    //   457: iconst_3
    //   458: invokestatic 722	com/waterwest/mmlog/e:b	(Landroid/content/Context;I)V
    //   461: aload_0
    //   462: aload_1
    //   463: invokestatic 724	com/waterwest/mmlog/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   466: iconst_1
    //   467: ireturn
    //   468: iconst_0
    //   469: ireturn
    //   470: aload_2
    //   471: astore 6
    //   473: goto -462 -> 11
    //   476: iconst_0
    //   477: ireturn
    //   478: iconst_1
    //   479: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	480	0	paramContext	Context
    //   0	480	1	paramString1	String
    //   0	480	2	paramString2	String
    //   0	480	3	paramLong	long
    //   280	18	5	i1	int
    //   9	463	6	localObject	Object
    //   36	41	7	str	String
    //   336	1	7	localUnsupportedEncodingException1	UnsupportedEncodingException
    //   364	1	7	localUnsupportedEncodingException2	UnsupportedEncodingException
    //   380	1	7	localUnsupportedEncodingException3	UnsupportedEncodingException
    //   396	1	7	localUnsupportedEncodingException4	UnsupportedEncodingException
    // Exception table:
    //   from	to	target	type
    //   164	181	336	java/io/UnsupportedEncodingException
    //   21	131	352	org/json/JSONException
    //   137	141	352	org/json/JSONException
    //   141	164	352	org/json/JSONException
    //   164	181	352	org/json/JSONException
    //   181	198	352	org/json/JSONException
    //   198	215	352	org/json/JSONException
    //   215	241	352	org/json/JSONException
    //   241	259	352	org/json/JSONException
    //   259	282	352	org/json/JSONException
    //   300	310	352	org/json/JSONException
    //   312	333	352	org/json/JSONException
    //   338	349	352	org/json/JSONException
    //   366	377	352	org/json/JSONException
    //   382	393	352	org/json/JSONException
    //   398	409	352	org/json/JSONException
    //   416	436	352	org/json/JSONException
    //   439	449	352	org/json/JSONException
    //   181	198	364	java/io/UnsupportedEncodingException
    //   198	215	380	java/io/UnsupportedEncodingException
    //   241	259	396	java/io/UnsupportedEncodingException
  }
  
  private static boolean a(SharedPreferences paramSharedPreferences)
  {
    long l1 = paramSharedPreferences.getLong("endTime", -1L);
    return System.currentTimeMillis() - l1 > 30000L;
  }
  
  private static int b(Context paramContext, String paramString, JSONObject paramJSONObject)
  {
    return a(paramContext, paramString, paramJSONObject);
  }
  
  private static String b(String paramString1, String paramString2)
  {
    long l2 = 0L;
    long l4 = System.currentTimeMillis();
    long l1;
    if (paramString1.equals("onResume"))
    {
      u = l4;
      l1 = l2;
    }
    for (;;)
    {
      String str = paramString2;
      if (paramString2 == null) {
        str = "";
      }
      paramString2 = new StringBuffer();
      paramString2.append(str);
      paramString2.append(paramString1);
      paramString2.append("|");
      paramString2.append("mm.purchasesdk.iapservice.PurchaseService");
      paramString2.append("|");
      paramString2.append(l4);
      paramString2.append("|");
      paramString2.append(l1);
      paramString2.append("|");
      paramString2.append(t);
      paramString2.append("\n");
      t = "mm.purchasesdk.iapservice.PurchaseService";
      return paramString2.toString();
      l1 = l2;
      if (paramString1.equals("onPause"))
      {
        long l3 = l4 - u;
        if (l3 > 12000000L)
        {
          l1 = 300000L;
        }
        else
        {
          l1 = l2;
          if (l3 >= 0L) {
            l1 = l3;
          }
        }
      }
    }
  }
  
  public static void b()
  {
    A = false;
  }
  
  public static void b(Context paramContext)
  {
    if (i == 0)
    {
      Log.i("MobileAgent", "Du have not permission to collect data");
      return;
    }
    Object localObject = "";
    try
    {
      String str = paramContext.getClass().getName();
      localObject = str;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        a("MobileAgentAPI", localException.getMessage());
      }
      C.execute(new h(paramContext, 10));
      a("MobileAgentAPI", "run out onpause " + (String)localObject);
    }
    a("MobileAgentAPI", "run into onpause " + (String)localObject);
    if (paramContext == null)
    {
      Log.e("MobileAgent", "Exception occurent in onPause ,context cann't be null");
      return;
    }
  }
  
  private static void b(Context paramContext, int paramInt)
  {
    Date localDate = new Date();
    int i1 = Integer.parseInt(new SimpleDateFormat("dd").format(localDate));
    int i2 = Integer.parseInt(new SimpleDateFormat("M").format(localDate));
    paramContext = h(paramContext).edit();
    if (paramInt == 3)
    {
      paramContext.putInt("actionmonth", i2);
      paramContext.putInt("actionday", i1);
    }
    for (;;)
    {
      paramContext.commit();
      return;
      if (paramInt == 2)
      {
        paramContext.putInt("eventmonth", i2);
        paramContext.putInt("eventday", i1);
      }
      else
      {
        paramContext.putInt("sysmonth", i2);
        paramContext.putInt("sysday", i1);
      }
    }
  }
  
  protected static void b(Context paramContext, String paramString1, String paramString2)
  {
    synchronized (y)
    {
      paramString1 = f.a(paramString1);
      paramString2 = f.a(paramString2);
      SharedPreferences localSharedPreferences = k(paramContext);
      StringBuffer localStringBuffer = new StringBuffer();
      localStringBuffer.append(localSharedPreferences.getString("eventlogs", ""));
      try
      {
        localStringBuffer.append(URLEncoder.encode(paramString1, "UTF-8"));
        localStringBuffer.append("|");
        localStringBuffer.append(URLEncoder.encode(paramString2, "UTF-8"));
        localStringBuffer.append("|");
        localStringBuffer.append(1);
        localStringBuffer.append("|");
        localStringBuffer.append(System.currentTimeMillis());
        localStringBuffer.append("\n");
        localSharedPreferences.edit().putString("eventlogs", localStringBuffer.toString()).commit();
        if ((m == 1) || (localStringBuffer.toString().getBytes().length > 10000)) {
          q(paramContext);
        }
        b(paramContext, false);
        return;
      }
      catch (UnsupportedEncodingException paramContext)
      {
        a("MobileAgent", "unsupport utf-8,can't onEvent()");
        return;
      }
    }
  }
  
  public static void b(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, String paramString8)
  {
    paramContext = paramContext.getSharedPreferences(h + "MoblieAgent_sys_config", 0);
    paramContext.edit().putString("MOBILE_APPKEY", paramString1).commit();
    paramContext.edit().putString("MOBILE_PROGRAM_ID", paramString3).commit();
    paramContext.edit().putString("MOBILE_VERSION", paramString4).commit();
    paramContext.edit().putString("MOBILE_PACKAGE_NAME", paramString7).commit();
    paramContext.edit().putString("MOBILE_CHANNEL", paramString2).commit();
    paramContext.edit().putString("MOBILE_VERSION_CODE", paramString6).commit();
    paramContext.edit().putString("MOBILE_VERSION_NAME", paramString5).commit();
    paramContext.edit().putString("MOBILE_WW_CHANNEL", paramString8).commit();
  }
  
  private static void b(Context paramContext, boolean paramBoolean)
  {
    int i1;
    if (i == 1)
    {
      a("MobileAgentRun", "run into strategy");
      Object localObject;
      if (l)
      {
        if (!g(paramContext, "updateonlyonwifi").equals("1")) {
          break label181;
        }
        k = true;
        localObject = g(paramContext, "updatedelay");
        if (!((String)localObject).equals("0")) {
          n = Integer.parseInt((String)localObject) * 1000;
        }
        i1 = Integer.parseInt(g(paramContext, "send_policy"));
        m = i1;
        if (i1 == 0) {
          m = 1;
        }
      }
      if (k)
      {
        if (k)
        {
          localObject = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
          if ((localObject == null) || (((NetworkInfo)localObject).getType() != 1)) {
            break label188;
          }
          i1 = 1;
          label133:
          if (i1 == 0) {}
        }
      }
      else {
        switch (m)
        {
        }
      }
    }
    for (;;)
    {
      l = false;
      a("MobileAgentRun", "run out strategy");
      return;
      label181:
      k = false;
      break;
      label188:
      i1 = 0;
      break label133;
      new h(paramContext, 6).start();
      continue;
      if (paramBoolean)
      {
        new h(paramContext, 6).start();
        l = false;
        continue;
        if (a(paramContext, 3)) {
          new h(paramContext, 6).start();
        }
      }
    }
  }
  
  protected static boolean b(Context paramContext, String paramString)
  {
    String str = h(paramContext, paramString);
    try
    {
      if (a(paramContext, "http://da.mmarket.com/mmsdk/mmsdk?func=mmsdk:postsyslog", new JSONObject(str)) == 1)
      {
        i(paramContext, paramString);
        return true;
      }
    }
    catch (JSONException localJSONException)
    {
      i(paramContext, paramString);
      Log.i("MobileAgent", "SDK del a dirty data");
    }
    return false;
  }
  
  static String c()
  {
    return v;
  }
  
  public static void c(Context paramContext)
  {
    h(paramContext).edit().clear().commit();
    i(paramContext).edit().clear().commit();
    l(paramContext).edit().clear().commit();
    paramContext.getSharedPreferences("lxdMoblieAgent_sys_config", 0).edit().clear().commit();
  }
  
  public static void c(Context paramContext, String paramString1, String paramString2)
  {
    if (i == 0)
    {
      Log.i("MobileAgent", "Du have not permission to collect data");
      return;
    }
    a("MobileAgentAPI", "run in onEventRT [" + paramString1 + "," + paramString2 + "]");
    if (paramContext == null)
    {
      Log.e("MobileAgent", "Exception occurent in onEventRt() ,context cann't be null");
      return;
    }
    if ((TextUtils.isEmpty(paramString1)) || (f.a(paramString1, 100))) {
      Log.e("MobileAgent", "Exception occurent in onEventRt() ,channelID cann't be empty or length more than 100");
    }
    if (f.a(paramString2, 2000)) {
      Log.e("MobileAgent", "Exception occurent in onEventRt() , length more than 2000");
    }
    new Thread(new d(paramContext, paramString2, paramString1, c.a())).start();
  }
  
  protected static boolean c(Context paramContext, String paramString)
  {
    boolean bool = false;
    String str = h(paramContext, paramString);
    try
    {
      JSONObject localJSONObject = new JSONObject(str);
      localJSONObject.put("pid", 1);
      localJSONObject.put("protocolVersion", "3.1.4");
      localJSONObject.put("sdkVersion", "3.2.1.1");
      localJSONObject.put("cid", f.b(paramContext));
      localJSONObject.put("deviceId", f.a(paramContext));
      localJSONObject.put("appKey", f.h(paramContext));
      localJSONObject.put("packageName", TrustInfo.packageName);
      localJSONObject.put("versionCode", TrustInfo.versionCode);
      localJSONObject.put("versionName", TrustInfo.versionName);
      localJSONObject.put("sendTime", System.currentTimeMillis());
      localJSONObject.put("uuid", B);
      int i1 = a(paramContext, "http://da.mmarket.com/mmsdk/mmsdk?func=mmsdk:posterrlog", localJSONObject);
      if ((i1 == 1) || (i1 == 3))
      {
        b(paramContext, 3);
        i(paramContext, paramString);
        Log.i("MobileAgent", "erLog sd");
        a("MobileAgent", "send errlog success \n" + str);
        bool = true;
      }
      return bool;
    }
    catch (JSONException localJSONException)
    {
      i(paramContext, paramString);
      Log.i("MobileAgent", "SDK del a dirty data");
    }
    return false;
  }
  
  private static String d()
  {
    return B;
  }
  
  static void d(Context paramContext)
  {
    for (;;)
    {
      try
      {
        a("MobileAgentRun", "run into uploadlist :" + paramContext.getClass().getName());
        int i1 = m;
        if (i1 == 2) {}
        try
        {
          Thread.sleep(n);
          bool = true;
          System.currentTimeMillis();
          String str = t(paramContext);
          if ((str.equals("")) || (!bool))
          {
            a("MobileAgentRun", " finish uploadlist ");
            a("MobileAgentRun", "run out uploadlist :" + paramContext.getClass().getName());
            return;
          }
        }
        catch (InterruptedException localInterruptedException1)
        {
          localInterruptedException1.printStackTrace();
          continue;
        }
        if (!localInterruptedException1.substring(0, 6).equals(o)) {
          break label180;
        }
      }
      finally {}
      boolean bool = a(paramContext, localInterruptedException1);
      label147:
      if (bool) {}
      try
      {
        Thread.sleep(0L);
        a("MobileAgentRun", "finish a task : " + localInterruptedException1);
        continue;
        label180:
        if (localInterruptedException1.substring(0, 6).equals(p))
        {
          bool = a(paramContext, localInterruptedException1, null, 0L);
          break label147;
        }
        if (localInterruptedException1.substring(0, 6).equals(r))
        {
          bool = c(paramContext, localInterruptedException1);
          break label147;
        }
        if (localInterruptedException1.substring(0, 6).equals(s))
        {
          bool = b(paramContext, localInterruptedException1);
          break label147;
        }
        if (!localInterruptedException1.substring(0, 6).equals(q)) {
          break label147;
        }
        bool = f(paramContext, localInterruptedException1);
      }
      catch (InterruptedException localInterruptedException2)
      {
        for (;;)
        {
          localInterruptedException2.printStackTrace();
        }
      }
    }
  }
  
  protected static void d(Context paramContext, String paramString)
  {
    if (!paramString.trim().equals("")) {}
    try
    {
      JSONObject localJSONObject1 = new JSONObject();
      JSONArray localJSONArray = new JSONArray();
      JSONObject localJSONObject2 = new JSONObject();
      localJSONObject2.put("occurtime", System.currentTimeMillis());
      localJSONObject2.put("errmsg", URLEncoder.encode(paramString, "UTF-8"));
      localJSONArray.put(localJSONObject2);
      localJSONObject1.put("sid", v);
      localJSONObject1.put("errjsonary", localJSONArray);
      a("MobileAgentRun", "errJso" + localJSONObject1.toString());
      a(paramContext, localJSONObject1.toString(), 4);
      return;
    }
    catch (JSONException paramContext)
    {
      a("MobileAgentRun", "json exception,lost catch Exception");
      return;
    }
    catch (UnsupportedEncodingException paramContext)
    {
      a("MobileAgentRun", "unsupport utf-8,lost catch Exception");
    }
  }
  
  private static void d(Context paramContext, String paramString1, String paramString2)
  {
    if (i == 0)
    {
      Log.i("MobileAgent", "Du have not permission to collect data");
      return;
    }
    if (paramString1.contains("#"))
    {
      Log.w("MobileAgent", "the eventId contain illegal char");
      return;
    }
    a("MobileAgentAPI", "run in onEvent [" + paramString1 + "," + paramString2 + "]");
    if (paramContext == null)
    {
      Log.e("MobileAgent", "Exception occurent in onEvent ,context cann't be null");
      return;
    }
    if ((TextUtils.isEmpty(paramString1)) || (f.a(paramString1, 100))) {
      Log.e("MobileAgent", "Exception occurent in onEvent ,channelID cann't be empty or length more than 100");
    }
    if (f.a(paramString2, 900)) {
      Log.e("MobileAgent", "Exception occurent in onEvent ,channelID cann't be empty or length more than 100");
    }
    new h(paramContext, 11, paramString1, paramString2).start();
  }
  
  private static void e(Context paramContext)
  {
    boolean bool2 = true;
    a("MobileAgentRun", "run into onresumep :" + paramContext.getClass().getName());
    for (;;)
    {
      try
      {
        a("page pro", "do resume start: " + paramContext.getClass().getName());
        a("MobileAgentRun", "run into sessionpolicy");
        localObject1 = f.h(paramContext);
        localSharedPreferences = i(paramContext);
        localObject2 = localSharedPreferences.getString("sessionId", null);
        long l1 = localSharedPreferences.getLong("endTime", -1L);
        if (System.currentTimeMillis() - l1 <= 30000L) {
          continue;
        }
        i1 = 1;
        if (i1 == 0) {
          continue;
        }
        if (localObject2 != null)
        {
          a(paramContext, localSharedPreferences, true);
          localObject2 = localSharedPreferences.edit();
          l1 = localSharedPreferences.getLong("readFlowRev", 0L);
          l2 = localSharedPreferences.getLong("readFlowSnd", 0L);
          ((SharedPreferences.Editor)localObject2).clear();
          ((SharedPreferences.Editor)localObject2).putLong("readFlowRev", Long.valueOf(l1).longValue()).commit();
          ((SharedPreferences.Editor)localObject2).putLong("readFlowSnd", Long.valueOf(l2).longValue()).commit();
        }
        t = "";
        localObject2 = f.a(paramContext, (String)localObject1);
        SharedPreferences.Editor localEditor = localSharedPreferences.edit();
        localEditor.putString("appKey", (String)localObject1);
        localEditor.putString("sessionId", (String)localObject2);
        localEditor.putLong("lastResumeTime", System.currentTimeMillis());
        localEditor.putString("activities", b("onResume", null));
        l1 = localSharedPreferences.getLong("readFlowRev", 0L);
        localObject1 = f.o(paramContext);
        localEditor.putLong("readFlowRev", localObject1[0]);
        long l2 = localObject1[0] - l1;
        l1 = l2;
        if (l2 < 0L) {
          l1 = 0L;
        }
        localEditor.putLong("consumeFlowRev", l1);
        l1 = localSharedPreferences.getLong("readFlowSnd", 0L);
        localEditor.putLong("readFlowSnd", localObject1[1]);
        l2 = localObject1[1] - l1;
        l1 = l2;
        if (l2 < 0L) {
          l1 = 0L;
        }
        localEditor.putLong("consumeFlowSnd", l1);
        localEditor.commit();
        v = (String)localObject2;
        a(paramContext, localSharedPreferences, false);
        bool1 = bool2;
        if (a(paramContext, 1))
        {
          o(paramContext);
          bool1 = bool2;
        }
        a("MobileAgentRun", "run out sessionpolicy");
        b(paramContext, bool1);
      }
      catch (Exception localException)
      {
        Object localObject1;
        SharedPreferences localSharedPreferences;
        Object localObject2;
        int i1;
        boolean bool1;
        localException.printStackTrace();
        continue;
      }
      a("MobileAgentRun", "run out onresume :" + paramContext.getClass().getName());
      return;
      i1 = 0;
      continue;
      localObject1 = localSharedPreferences.getString("activities", null);
      localObject2 = localSharedPreferences.edit();
      ((SharedPreferences.Editor)localObject2).putString("activities", b("onResume", (String)localObject1));
      ((SharedPreferences.Editor)localObject2).putLong("lastResumeTime", System.currentTimeMillis());
      ((SharedPreferences.Editor)localObject2).commit();
      if ((m == 1) || (((String)localObject1).getBytes().length > 10000)) {
        a(paramContext, localSharedPreferences, false);
      }
      bool1 = false;
    }
  }
  
  private static void e(Context paramContext, String paramString)
  {
    if (i == 0)
    {
      Log.i("MobileAgent", "Du have not permission to collect data");
      return;
    }
    d(paramContext, paramString, paramString);
  }
  
  private static void e(Context paramContext, String paramString1, String paramString2)
  {
    a("MobileAgentAPI", "run in onEvent [" + paramString1 + "," + paramString2 + "]");
    if (paramContext == null)
    {
      Log.e("MobileAgent", "Exception occurent in onEvent ,context cann't be null");
      return;
    }
    if ((TextUtils.isEmpty(paramString1)) || (f.a(paramString1, 100))) {
      Log.e("MobileAgent", "Exception occurent in onEvent ,channelID cann't be empty or length more than 100");
    }
    if (f.a(paramString2, 900)) {
      Log.e("MobileAgent", "Exception occurent in onEvent ,channelID cann't be empty or length more than 100");
    }
    new h(paramContext, 11, paramString1, paramString2).start();
  }
  
  private static void f(Context paramContext)
  {
    a("MobileAgentRun", "run into onpausep :" + paramContext.getClass().getName());
    Object localObject = i(paramContext);
    String str = ((SharedPreferences)localObject).getString("activities", null);
    localObject = ((SharedPreferences)localObject).edit();
    ((SharedPreferences.Editor)localObject).putLong("endTime", System.currentTimeMillis());
    ((SharedPreferences.Editor)localObject).putString("activities", b("onPause", str));
    ((SharedPreferences.Editor)localObject).commit();
    a("MobileAgentRun", "run out onpausep :" + paramContext.getClass().getName());
  }
  
  private static void f(Context paramContext, String paramString1, String paramString2)
  {
    if (i == 0)
    {
      Log.i("MobileAgent", "Du have not permission to collect data");
      return;
    }
    if (paramContext == null)
    {
      Log.e("MobileAgent", "Exception occurent in listenUser() ,context cann't be null");
      return;
    }
    if ((TextUtils.isEmpty(paramString1)) || (f.a(paramString1, 100))) {
      Log.e("MobileAgent", "Exception occurent in listenUser() ,channelID cann't be empty or length more than 100");
    }
    StringBuffer localStringBuffer = new StringBuffer();
    if ((paramString1 != null) && (!paramString1.equals(""))) {
      localStringBuffer.append(paramString1);
    }
    for (;;)
    {
      localStringBuffer.append("@@");
      if (paramString2 == null)
      {
        localStringBuffer.append("other");
        localStringBuffer.append("@@");
      }
      try
      {
        localStringBuffer.append(URLEncoder.encode(f.i(paramContext), "UTF-8"));
        localStringBuffer.append("@@");
        localStringBuffer.append(f.c(paramContext));
        localStringBuffer.append("@@");
        localStringBuffer.append(f.a());
        localStringBuffer.append("@@");
        try
        {
          localStringBuffer.append(URLEncoder.encode(f.c(), "UTF-8"));
          localStringBuffer.append("@@");
          localStringBuffer.append(f.g(paramContext));
          localStringBuffer.append("@@");
          localStringBuffer.append(f.n(paramContext));
          d(paramContext, "userID", localStringBuffer.toString());
          return;
          localStringBuffer.append("guest");
          continue;
          localStringBuffer.append(paramString2);
        }
        catch (UnsupportedEncodingException paramString1)
        {
          for (;;) {}
        }
      }
      catch (Exception paramString1)
      {
        for (;;) {}
      }
    }
  }
  
  /* Error */
  private static boolean f(Context paramContext, String paramString)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore_3
    //   2: aload_0
    //   3: aload_1
    //   4: invokestatic 660	com/waterwest/mmlog/e:h	(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;
    //   7: astore 4
    //   9: aload 4
    //   11: ldc 111
    //   13: invokevirtual 481	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   16: ifne +382 -> 398
    //   19: new 166	org/json/JSONObject
    //   22: dup
    //   23: aload 4
    //   25: invokespecial 664	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   28: astore 4
    //   30: aload_0
    //   31: invokestatic 754	com/waterwest/mmlog/f:b	(Landroid/content/Context;)Ljava/lang/String;
    //   34: astore 5
    //   36: aload 4
    //   38: ldc_w 756
    //   41: iconst_1
    //   42: invokevirtual 656	org/json/JSONObject:put	(Ljava/lang/String;I)Lorg/json/JSONObject;
    //   45: pop
    //   46: aload 4
    //   48: ldc_w 758
    //   51: ldc_w 760
    //   54: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   57: pop
    //   58: aload 4
    //   60: ldc_w 762
    //   63: ldc 17
    //   65: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   68: pop
    //   69: aload 4
    //   71: ldc_w 764
    //   74: aload 5
    //   76: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   79: pop
    //   80: aload 4
    //   82: ldc_w 314
    //   85: aload_0
    //   86: invokestatic 175	com/waterwest/mmlog/f:h	(Landroid/content/Context;)Ljava/lang/String;
    //   89: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   92: pop
    //   93: aload 4
    //   95: ldc_w 766
    //   98: getstatic 770	com/waterwest/mmlog/TrustInfo:packageName	Ljava/lang/String;
    //   101: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   104: pop
    //   105: aload 4
    //   107: ldc_w 772
    //   110: getstatic 774	com/waterwest/mmlog/TrustInfo:versionCode	Ljava/lang/String;
    //   113: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   116: pop
    //   117: aload 4
    //   119: ldc_w 776
    //   122: getstatic 778	com/waterwest/mmlog/TrustInfo:versionName	Ljava/lang/String;
    //   125: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   128: pop
    //   129: aload 4
    //   131: ldc_w 780
    //   134: invokestatic 330	java/lang/System:currentTimeMillis	()J
    //   137: invokevirtual 648	org/json/JSONObject:put	(Ljava/lang/String;J)Lorg/json/JSONObject;
    //   140: pop
    //   141: aload 4
    //   143: ldc_w 670
    //   146: aload_0
    //   147: invokestatic 672	com/waterwest/mmlog/f:g	(Landroid/content/Context;)Ljava/lang/String;
    //   150: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   153: pop
    //   154: aload 4
    //   156: ldc_w 674
    //   159: invokestatic 676	com/waterwest/mmlog/f:a	()Ljava/lang/String;
    //   162: ldc -77
    //   164: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   167: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   170: pop
    //   171: aload 4
    //   173: ldc_w 678
    //   176: invokestatic 680	com/waterwest/mmlog/f:b	()Ljava/lang/String;
    //   179: ldc -77
    //   181: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   184: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   187: pop
    //   188: aload 4
    //   190: ldc_w 682
    //   193: invokestatic 684	com/waterwest/mmlog/f:c	()Ljava/lang/String;
    //   196: ldc -77
    //   198: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   201: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   204: pop
    //   205: aload 4
    //   207: ldc_w 686
    //   210: aload_0
    //   211: invokestatic 688	com/waterwest/mmlog/f:n	(Landroid/content/Context;)Ljava/lang/String;
    //   214: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   217: pop
    //   218: aload 4
    //   220: ldc_w 694
    //   223: aload_0
    //   224: invokestatic 696	com/waterwest/mmlog/f:a	(Landroid/content/Context;)Ljava/lang/String;
    //   227: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   230: pop
    //   231: aload 4
    //   233: ldc_w 782
    //   236: aload_0
    //   237: invokestatic 177	com/waterwest/mmlog/f:i	(Landroid/content/Context;)Ljava/lang/String;
    //   240: ldc -77
    //   242: invokestatic 185	java/net/URLEncoder:encode	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   245: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   248: pop
    //   249: aload 4
    //   251: ldc_w 715
    //   254: getstatic 131	com/waterwest/mmlog/e:B	Ljava/lang/String;
    //   257: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   260: pop
    //   261: aload_0
    //   262: ldc_w 957
    //   265: aload 4
    //   267: invokestatic 719	com/waterwest/mmlog/e:a	(Landroid/content/Context;Ljava/lang/String;Lorg/json/JSONObject;)I
    //   270: istore_2
    //   271: iload_2
    //   272: iconst_1
    //   273: if_icmpeq +103 -> 376
    //   276: iload_2
    //   277: iconst_3
    //   278: if_icmpeq +98 -> 376
    //   281: iload_2
    //   282: iconst_2
    //   283: if_icmpne +127 -> 410
    //   286: ldc_w 271
    //   289: ldc_w 786
    //   292: invokestatic 749	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
    //   295: pop
    //   296: iconst_0
    //   297: ireturn
    //   298: astore 5
    //   300: aload 4
    //   302: ldc_w 674
    //   305: ldc 111
    //   307: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   310: pop
    //   311: goto -140 -> 171
    //   314: astore 4
    //   316: aload_0
    //   317: aload_1
    //   318: invokestatic 724	com/waterwest/mmlog/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   321: aload 4
    //   323: invokevirtual 657	org/json/JSONException:printStackTrace	()V
    //   326: iconst_1
    //   327: ireturn
    //   328: astore 5
    //   330: aload 4
    //   332: ldc_w 678
    //   335: ldc 111
    //   337: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   340: pop
    //   341: goto -153 -> 188
    //   344: astore 5
    //   346: aload 4
    //   348: ldc_w 682
    //   351: ldc 111
    //   353: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   356: pop
    //   357: goto -152 -> 205
    //   360: astore 5
    //   362: aload 4
    //   364: ldc_w 782
    //   367: ldc 111
    //   369: invokevirtual 641	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   372: pop
    //   373: goto -124 -> 249
    //   376: aload_0
    //   377: iconst_3
    //   378: invokestatic 722	com/waterwest/mmlog/e:b	(Landroid/content/Context;I)V
    //   381: aload_0
    //   382: aload_1
    //   383: invokestatic 724	com/waterwest/mmlog/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   386: ldc_w 271
    //   389: ldc_w 797
    //   392: invokestatic 367	android/util/Log:i	(Ljava/lang/String;Ljava/lang/String;)I
    //   395: pop
    //   396: iconst_1
    //   397: ireturn
    //   398: aload_0
    //   399: iconst_3
    //   400: invokestatic 722	com/waterwest/mmlog/e:b	(Landroid/content/Context;I)V
    //   403: aload_0
    //   404: aload_1
    //   405: invokestatic 724	com/waterwest/mmlog/e:i	(Landroid/content/Context;Ljava/lang/String;)V
    //   408: iconst_1
    //   409: istore_3
    //   410: iload_3
    //   411: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	412	0	paramContext	Context
    //   0	412	1	paramString	String
    //   270	14	2	i1	int
    //   1	410	3	bool	boolean
    //   7	294	4	localObject	Object
    //   314	49	4	localJSONException	JSONException
    //   34	41	5	str	String
    //   298	1	5	localUnsupportedEncodingException1	UnsupportedEncodingException
    //   328	1	5	localUnsupportedEncodingException2	UnsupportedEncodingException
    //   344	1	5	localUnsupportedEncodingException3	UnsupportedEncodingException
    //   360	1	5	localUnsupportedEncodingException4	UnsupportedEncodingException
    // Exception table:
    //   from	to	target	type
    //   154	171	298	java/io/UnsupportedEncodingException
    //   19	154	314	org/json/JSONException
    //   154	171	314	org/json/JSONException
    //   171	188	314	org/json/JSONException
    //   188	205	314	org/json/JSONException
    //   205	231	314	org/json/JSONException
    //   231	249	314	org/json/JSONException
    //   249	271	314	org/json/JSONException
    //   286	296	314	org/json/JSONException
    //   300	311	314	org/json/JSONException
    //   330	341	314	org/json/JSONException
    //   346	357	314	org/json/JSONException
    //   362	373	314	org/json/JSONException
    //   376	396	314	org/json/JSONException
    //   171	188	328	java/io/UnsupportedEncodingException
    //   188	205	344	java/io/UnsupportedEncodingException
    //   231	249	360	java/io/UnsupportedEncodingException
  }
  
  private static String g(Context paramContext, String paramString)
  {
    return h(paramContext).getString(paramString, "0");
  }
  
  private static boolean g(Context paramContext)
  {
    a("MobileAgentRun", "run into sessionpolicy");
    Object localObject2 = f.h(paramContext);
    Object localObject1 = i(paramContext);
    Object localObject3 = ((SharedPreferences)localObject1).getString("sessionId", null);
    long l1 = ((SharedPreferences)localObject1).getLong("endTime", -1L);
    int i1;
    if (System.currentTimeMillis() - l1 > 30000L)
    {
      i1 = 1;
      if (i1 == 0) {
        break label806;
      }
      if (localObject3 != null)
      {
        a(paramContext, (SharedPreferences)localObject1, true);
        localObject3 = ((SharedPreferences)localObject1).edit();
        l1 = ((SharedPreferences)localObject1).getLong("readFlowRev", 0L);
        l2 = ((SharedPreferences)localObject1).getLong("readFlowSnd", 0L);
        ((SharedPreferences.Editor)localObject3).clear();
        ((SharedPreferences.Editor)localObject3).putLong("readFlowRev", Long.valueOf(l1).longValue()).commit();
        ((SharedPreferences.Editor)localObject3).putLong("readFlowSnd", Long.valueOf(l2).longValue()).commit();
      }
      t = "";
      localObject3 = f.a(paramContext, (String)localObject2);
      SharedPreferences.Editor localEditor = ((SharedPreferences)localObject1).edit();
      localEditor.putString("appKey", (String)localObject2);
      localEditor.putString("sessionId", (String)localObject3);
      localEditor.putLong("lastResumeTime", System.currentTimeMillis());
      localEditor.putString("activities", b("onResume", null));
      l1 = ((SharedPreferences)localObject1).getLong("readFlowRev", 0L);
      localObject2 = f.o(paramContext);
      localEditor.putLong("readFlowRev", localObject2[0]);
      long l2 = localObject2[0] - l1;
      l1 = l2;
      if (l2 < 0L) {
        l1 = 0L;
      }
      localEditor.putLong("consumeFlowRev", l1);
      l1 = ((SharedPreferences)localObject1).getLong("readFlowSnd", 0L);
      localEditor.putLong("readFlowSnd", localObject2[1]);
      l2 = localObject2[1] - l1;
      l1 = l2;
      if (l2 < 0L) {
        l1 = 0L;
      }
      localEditor.putLong("consumeFlowSnd", l1);
      localEditor.commit();
      v = (String)localObject3;
      a(paramContext, (SharedPreferences)localObject1, false);
      if (!a(paramContext, 1)) {
        break label902;
      }
      localObject1 = new JSONObject();
    }
    for (;;)
    {
      try
      {
        ((JSONObject)localObject1).put("pid", 1);
        ((JSONObject)localObject1).put("protocolVersion", "3.1.4");
        ((JSONObject)localObject1).put("sdkVersion", "3.2.1.1");
        ((JSONObject)localObject1).put("cid", f.b(paramContext));
        ((JSONObject)localObject1).put("deviceId", f.a(paramContext));
        ((JSONObject)localObject1).put("appKey", f.h(paramContext));
        ((JSONObject)localObject1).put("packageName", TrustInfo.packageName);
        ((JSONObject)localObject1).put("versionCode", TrustInfo.versionCode);
        ((JSONObject)localObject1).put("versionName", TrustInfo.versionName);
        if (TrustInfo.sysLogTime != 0L) {
          continue;
        }
        l1 = System.currentTimeMillis();
        ((JSONObject)localObject1).put("sendTime", l1);
        ((JSONObject)localObject1).put("imsi", f.c(paramContext));
        ((JSONObject)localObject1).put("mac", f.g(paramContext));
        ((JSONObject)localObject1).put("deviceDetail", URLEncoder.encode(f.a(), "UTF-8"));
        ((JSONObject)localObject1).put("manufacturer", URLEncoder.encode(f.b(), "UTF-8"));
        ((JSONObject)localObject1).put("phoneOS", URLEncoder.encode(f.c(), "UTF-8"));
        ((JSONObject)localObject1).put("screenWidth", f.d(paramContext));
        ((JSONObject)localObject1).put("screenHeight", f.e(paramContext));
        ((JSONObject)localObject1).put("screenDensity", f.f(paramContext));
        ((JSONObject)localObject1).put("carrierName", URLEncoder.encode(f.m(paramContext), "UTF-8"));
        ((JSONObject)localObject1).put("accessPoint", f.n(paramContext));
        ((JSONObject)localObject1).put("countryCode", f.d());
        ((JSONObject)localObject1).put("languageCode", f.e());
        ((JSONObject)localObject1).put("channel", URLEncoder.encode(f.i(paramContext), "UTF-8"));
        ((JSONObject)localObject1).put("uuid", B);
        if (!a(paramContext, ((JSONObject)localObject1).toString(), 1)) {
          continue;
        }
        b(paramContext, 1);
        bool = true;
      }
      catch (JSONException paramContext)
      {
        paramContext.printStackTrace();
        bool = true;
        continue;
      }
      catch (UnsupportedEncodingException paramContext)
      {
        paramContext.printStackTrace();
        bool = true;
        continue;
      }
      a("MobileAgentRun", "run out sessionpolicy");
      return bool;
      i1 = 0;
      break;
      l1 = TrustInfo.sysLogTime;
      continue;
      label806:
      localObject2 = ((SharedPreferences)localObject1).getString("activities", null);
      localObject3 = ((SharedPreferences)localObject1).edit();
      ((SharedPreferences.Editor)localObject3).putString("activities", b("onResume", (String)localObject2));
      ((SharedPreferences.Editor)localObject3).putLong("lastResumeTime", System.currentTimeMillis());
      ((SharedPreferences.Editor)localObject3).commit();
      if ((m == 1) || (((String)localObject2).getBytes().length > 10000)) {
        a(paramContext, (SharedPreferences)localObject1, false);
      }
      boolean bool = false;
      continue;
      label902:
      bool = true;
    }
  }
  
  private static SharedPreferences h(Context paramContext)
  {
    String str = paramContext.getPackageName();
    return paramContext.getSharedPreferences(h + "MoblieAgent_config_" + str, 0);
  }
  
  /* Error */
  private static String h(Context paramContext, String paramString)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: aload_0
    //   4: aload_1
    //   5: invokevirtual 999	android/content/Context:openFileInput	(Ljava/lang/String;)Ljava/io/FileInputStream;
    //   8: astore_1
    //   9: aload_1
    //   10: astore_3
    //   11: sipush 10000
    //   14: newarray byte
    //   16: astore 5
    //   18: ldc 111
    //   20: astore_0
    //   21: aload_1
    //   22: astore_3
    //   23: aload_1
    //   24: aload 5
    //   26: invokevirtual 1005	java/io/FileInputStream:read	([B)I
    //   29: istore_2
    //   30: iload_2
    //   31: iconst_m1
    //   32: if_icmpne +20 -> 52
    //   35: aload_0
    //   36: astore_3
    //   37: aload_1
    //   38: ifnull +9 -> 47
    //   41: aload_1
    //   42: invokevirtual 1006	java/io/FileInputStream:close	()V
    //   45: aload_0
    //   46: astore_3
    //   47: ldc 2
    //   49: monitorexit
    //   50: aload_3
    //   51: areturn
    //   52: aload_1
    //   53: astore_3
    //   54: new 77	java/lang/StringBuilder
    //   57: dup
    //   58: aload_0
    //   59: invokestatic 191	java/lang/String:valueOf	(Ljava/lang/Object;)Ljava/lang/String;
    //   62: invokespecial 83	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   65: new 187	java/lang/String
    //   68: dup
    //   69: aload 5
    //   71: iconst_0
    //   72: iload_2
    //   73: invokespecial 1009	java/lang/String:<init>	([BII)V
    //   76: invokevirtual 87	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   79: invokevirtual 91	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   82: astore 4
    //   84: aload 4
    //   86: astore_0
    //   87: goto -66 -> 21
    //   90: astore 4
    //   92: aconst_null
    //   93: astore_1
    //   94: ldc 111
    //   96: astore_0
    //   97: aload_1
    //   98: astore_3
    //   99: aload 4
    //   101: invokevirtual 1010	java/io/FileNotFoundException:printStackTrace	()V
    //   104: aload_0
    //   105: astore_3
    //   106: aload_1
    //   107: ifnull -60 -> 47
    //   110: aload_1
    //   111: invokevirtual 1006	java/io/FileInputStream:close	()V
    //   114: aload_0
    //   115: astore_3
    //   116: goto -69 -> 47
    //   119: astore_1
    //   120: aload_1
    //   121: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   124: aload_0
    //   125: astore_3
    //   126: goto -79 -> 47
    //   129: astore_0
    //   130: ldc 2
    //   132: monitorexit
    //   133: aload_0
    //   134: athrow
    //   135: astore 4
    //   137: aconst_null
    //   138: astore_1
    //   139: ldc 111
    //   141: astore_0
    //   142: aload_1
    //   143: astore_3
    //   144: aload 4
    //   146: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   149: aload_0
    //   150: astore_3
    //   151: aload_1
    //   152: ifnull -105 -> 47
    //   155: aload_1
    //   156: invokevirtual 1006	java/io/FileInputStream:close	()V
    //   159: aload_0
    //   160: astore_3
    //   161: goto -114 -> 47
    //   164: astore_1
    //   165: aload_1
    //   166: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   169: aload_0
    //   170: astore_3
    //   171: goto -124 -> 47
    //   174: astore_0
    //   175: aconst_null
    //   176: astore_3
    //   177: aload_3
    //   178: ifnull +7 -> 185
    //   181: aload_3
    //   182: invokevirtual 1006	java/io/FileInputStream:close	()V
    //   185: aload_0
    //   186: athrow
    //   187: astore_1
    //   188: aload_1
    //   189: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   192: goto -7 -> 185
    //   195: astore_1
    //   196: aload_1
    //   197: invokevirtual 300	java/io/IOException:printStackTrace	()V
    //   200: aload_0
    //   201: astore_3
    //   202: goto -155 -> 47
    //   205: astore_0
    //   206: goto -29 -> 177
    //   209: astore 4
    //   211: ldc 111
    //   213: astore_0
    //   214: goto -72 -> 142
    //   217: astore 4
    //   219: goto -77 -> 142
    //   222: astore 4
    //   224: ldc 111
    //   226: astore_0
    //   227: goto -130 -> 97
    //   230: astore 4
    //   232: goto -135 -> 97
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	235	0	paramContext	Context
    //   0	235	1	paramString	String
    //   29	44	2	i1	int
    //   10	192	3	localObject	Object
    //   82	3	4	str	String
    //   90	10	4	localFileNotFoundException1	java.io.FileNotFoundException
    //   135	10	4	localIOException1	java.io.IOException
    //   209	1	4	localIOException2	java.io.IOException
    //   217	1	4	localIOException3	java.io.IOException
    //   222	1	4	localFileNotFoundException2	java.io.FileNotFoundException
    //   230	1	4	localFileNotFoundException3	java.io.FileNotFoundException
    //   16	54	5	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   3	9	90	java/io/FileNotFoundException
    //   110	114	119	java/io/IOException
    //   41	45	129	finally
    //   110	114	129	finally
    //   120	124	129	finally
    //   155	159	129	finally
    //   165	169	129	finally
    //   181	185	129	finally
    //   185	187	129	finally
    //   188	192	129	finally
    //   196	200	129	finally
    //   3	9	135	java/io/IOException
    //   155	159	164	java/io/IOException
    //   3	9	174	finally
    //   181	185	187	java/io/IOException
    //   41	45	195	java/io/IOException
    //   11	18	205	finally
    //   23	30	205	finally
    //   54	84	205	finally
    //   99	104	205	finally
    //   144	149	205	finally
    //   11	18	209	java/io/IOException
    //   23	30	217	java/io/IOException
    //   54	84	217	java/io/IOException
    //   11	18	222	java/io/FileNotFoundException
    //   23	30	230	java/io/FileNotFoundException
    //   54	84	230	java/io/FileNotFoundException
  }
  
  private static SharedPreferences i(Context paramContext)
  {
    String str = paramContext.getPackageName();
    return paramContext.getSharedPreferences(h + "MoblieAgent_state_" + str, 0);
  }
  
  private static void i(Context paramContext, String paramString)
  {
    if (paramString != null)
    {
      paramContext.deleteFile(paramString);
      j(paramContext, paramString);
    }
  }
  
  private static SharedPreferences j(Context paramContext)
  {
    String str = paramContext.getPackageName();
    return paramContext.getSharedPreferences(h + "MoblieAgent_event_" + str, 0);
  }
  
  private static void j(Context paramContext, String paramString)
  {
    synchronized (w)
    {
      paramContext = l(paramContext);
      paramString = paramContext.getString("uploadList", "").replace(paramString + "|", "");
      paramContext.edit().putString("uploadList", paramString).commit();
      return;
    }
  }
  
  private static SharedPreferences k(Context paramContext)
  {
    String str = paramContext.getPackageName();
    return paramContext.getSharedPreferences(h + "MoblieAgent_event_sp" + str, 0);
  }
  
  private static void k(Context paramContext, String paramString)
  {
    h(paramContext).edit().putString(paramString, "record").commit();
  }
  
  private static SharedPreferences l(Context paramContext)
  {
    String str = paramContext.getPackageName();
    return paramContext.getSharedPreferences(h + "MoblieAgent_upload_" + str, 0);
  }
  
  private static boolean l(Context paramContext, String paramString)
  {
    return !h(paramContext).getString(paramString, "").equals("");
  }
  
  private static SharedPreferences m(Context paramContext)
  {
    return paramContext.getSharedPreferences("lxdMoblieAgent_sys_config", 0);
  }
  
  private static JSONObject n(Context paramContext)
  {
    localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("pid", 1);
      localJSONObject.put("protocolVersion", "3.1.4");
      localJSONObject.put("sdkVersion", "3.2.1.1");
      localJSONObject.put("cid", f.b(paramContext));
      localJSONObject.put("appKey", f.h(paramContext));
      localJSONObject.put("packageName", TrustInfo.packageName);
      localJSONObject.put("versionCode", TrustInfo.versionCode);
      localJSONObject.put("versionName", TrustInfo.versionName);
      if (TrustInfo.actLogTime == 0L) {}
      for (long l1 = System.currentTimeMillis();; l1 = TrustInfo.actLogTime)
      {
        localJSONObject.put("sendTime", l1);
        localJSONObject.put("deviceId", f.a(paramContext));
        localJSONObject.put("channel", f.i(paramContext));
        return localJSONObject;
      }
      return localJSONObject;
    }
    catch (JSONException paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  private static void o(Context paramContext)
  {
    JSONObject localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("pid", 1);
      localJSONObject.put("protocolVersion", "3.1.4");
      localJSONObject.put("sdkVersion", "3.2.1.1");
      localJSONObject.put("cid", f.b(paramContext));
      localJSONObject.put("deviceId", f.a(paramContext));
      localJSONObject.put("appKey", f.h(paramContext));
      localJSONObject.put("packageName", TrustInfo.packageName);
      localJSONObject.put("versionCode", TrustInfo.versionCode);
      localJSONObject.put("versionName", TrustInfo.versionName);
      if (TrustInfo.sysLogTime == 0L) {}
      for (long l1 = System.currentTimeMillis();; l1 = TrustInfo.sysLogTime)
      {
        localJSONObject.put("sendTime", l1);
        localJSONObject.put("imsi", f.c(paramContext));
        localJSONObject.put("mac", f.g(paramContext));
        localJSONObject.put("deviceDetail", URLEncoder.encode(f.a(), "UTF-8"));
        localJSONObject.put("manufacturer", URLEncoder.encode(f.b(), "UTF-8"));
        localJSONObject.put("phoneOS", URLEncoder.encode(f.c(), "UTF-8"));
        localJSONObject.put("screenWidth", f.d(paramContext));
        localJSONObject.put("screenHeight", f.e(paramContext));
        localJSONObject.put("screenDensity", f.f(paramContext));
        localJSONObject.put("carrierName", URLEncoder.encode(f.m(paramContext), "UTF-8"));
        localJSONObject.put("accessPoint", f.n(paramContext));
        localJSONObject.put("countryCode", f.d());
        localJSONObject.put("languageCode", f.e());
        localJSONObject.put("channel", URLEncoder.encode(f.i(paramContext), "UTF-8"));
        localJSONObject.put("uuid", B);
        if (!a(paramContext, localJSONObject.toString(), 1)) {
          break;
        }
        b(paramContext, 1);
        return;
      }
      return;
    }
    catch (JSONException paramContext)
    {
      paramContext.printStackTrace();
      return;
    }
    catch (UnsupportedEncodingException paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  private static boolean p(Context paramContext)
  {
    SharedPreferences localSharedPreferences = j(paramContext);
    String str1 = localSharedPreferences.getString("eventlogs", "");
    if (!str1.equals(""))
    {
      String str2 = i(paramContext).getString("sessionId", null);
      JSONObject localJSONObject = new JSONObject();
      try
      {
        localJSONObject.put("sid", str2);
        localJSONObject.put("logJsonAry", str1);
        if (a(paramContext, localJSONObject.toString(), 2)) {
          localSharedPreferences.edit().putString("eventlogs", "").commit();
        }
        return true;
      }
      catch (JSONException paramContext)
      {
        for (;;)
        {
          paramContext.printStackTrace();
        }
      }
    }
    return false;
  }
  
  private static boolean q(Context paramContext)
  {
    SharedPreferences localSharedPreferences = k(paramContext);
    String str1 = localSharedPreferences.getString("eventlogs", "");
    if (!str1.equals(""))
    {
      String str2 = i(paramContext).getString("sessionId", null);
      JSONObject localJSONObject = new JSONObject();
      try
      {
        localJSONObject.put("sid", str2);
        localJSONObject.put("logJsonAry", str1);
        if (a(paramContext, localJSONObject.toString(), 5)) {
          localSharedPreferences.edit().putString("eventlogs", "").commit();
        }
        return true;
      }
      catch (JSONException paramContext)
      {
        for (;;)
        {
          paramContext.printStackTrace();
        }
      }
    }
    return false;
  }
  
  private static void r(Context paramContext)
  {
    if (l) {
      if (!g(paramContext, "updateonlyonwifi").equals("1")) {
        break label79;
      }
    }
    label79:
    for (k = true;; k = false)
    {
      String str = g(paramContext, "updatedelay");
      if (!str.equals("0")) {
        n = Integer.parseInt(str) * 1000;
      }
      int i1 = Integer.parseInt(g(paramContext, "send_policy"));
      m = i1;
      if (i1 == 0) {
        m = 1;
      }
      return;
    }
  }
  
  private static long s(Context paramContext)
  {
    try
    {
      long l1 = l(paramContext).getLong("uploadpopindex", 0L);
      return l1;
    }
    finally
    {
      paramContext = finally;
      throw paramContext;
    }
  }
  
  private static String t(Context paramContext)
  {
    Object localObject = w;
    String str1 = "";
    try
    {
      String str2 = l(paramContext).getString("uploadList", "");
      paramContext = str1;
      if (!str2.equals("")) {
        paramContext = str2.substring(0, str2.indexOf("|"));
      }
      return paramContext;
    }
    finally {}
  }
  
  private static boolean u(Context paramContext)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    return (paramContext != null) && (paramContext.getType() == 1);
  }
}
