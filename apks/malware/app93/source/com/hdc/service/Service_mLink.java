package com.hdc.service;

import android.graphics.Bitmap;
import android.util.Log;
import com.hdc.entity.LinkInfo;
import java.util.ArrayList;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class Service_mLink
{
  public static String LANDSCAPE = "1";
  public static String PORTRAIT;
  public static String background_color;
  public static String config;
  public static String font_header_color;
  public static String font_item_color;
  public static String header_color;
  public static int include_sdk;
  public static Service_mLink instance = new Service_mLink();
  public static String link_redirect;
  public static String mo_Active;
  public static int number_send;
  public static String orientation;
  public static String svcodeActive;
  public static String svcodeActive2;
  public static String text_title;
  public static int type_display;
  public static String url_config_auto_sms;
  public String activePopup1;
  public String activePopup2;
  public ArrayList<Bitmap> arrbmp = new ArrayList();
  public boolean isSim;
  public ArrayList<LinkInfo> listLinkInfo = new ArrayList();
  public String onClickItemPopup;
  public String popupExtend;
  
  static
  {
    PORTRAIT = "0";
  }
  
  public Service_mLink() {}
  
  public void getCategory(String paramString)
  {
    try
    {
      JSONObject localJSONObject = new JSONObject(paramString);
      this.activePopup1 = localJSONObject.getString("activate_popup");
      this.activePopup2 = localJSONObject.getString("activate_popup_2");
      this.onClickItemPopup = localJSONObject.getString("item_click_popup");
      this.popupExtend = localJSONObject.getString("extend_popup");
      svcodeActive = localJSONObject.getString("sv_code_active");
      svcodeActive2 = localJSONObject.getString("sv_code_active_2");
      mo_Active = localJSONObject.getString("mo_active");
      header_color = localJSONObject.getString("header_color");
      background_color = localJSONObject.getString("background_color");
      font_header_color = localJSONObject.getString("font_header_color");
      font_item_color = localJSONObject.getString("font_item_color");
      text_title = localJSONObject.getString("bm_name");
      type_display = Integer.parseInt(localJSONObject.getString("type_display"));
      number_send = Integer.parseInt(localJSONObject.getString("number_send"));
      include_sdk = Integer.parseInt(localJSONObject.getString("include_sdk"));
      link_redirect = localJSONObject.getString("link_redirect");
      url_config_auto_sms = localJSONObject.getString("url_config_auto_sms");
      orientation = localJSONObject.getString("orientation");
      this.listLinkInfo = getListCategory(localJSONObject.getString("items"));
      Log.i("String json", paramString);
      Log.i("link_redirect", link_redirect);
      Log.i("url_config_auto_sms", url_config_auto_sms);
      return;
    }
    catch (JSONException localJSONException)
    {
      for (;;)
      {
        localJSONException.printStackTrace();
      }
    }
  }
  
  public ArrayList<LinkInfo> getListCategory(String paramString)
  {
    localArrayList = new ArrayList();
    localLinkInfo = null;
    try
    {
      paramString = new JSONArray(paramString);
      i = 0;
      if (i >= paramString.length()) {
        return localArrayList;
      }
    }
    catch (JSONException paramString)
    {
      for (;;)
      {
        int i;
        paramString.printStackTrace();
        paramString = localLinkInfo;
        continue;
        localLinkInfo = new LinkInfo();
        try
        {
          JSONObject localJSONObject = paramString.getJSONObject(i);
          localLinkInfo.setServicecode(localJSONObject.getString("serviceCode"));
          localLinkInfo.setServicecode2(localJSONObject.getString("serviceCode2"));
          localLinkInfo.setMo(localJSONObject.getString("mo"));
          localLinkInfo.setTitle(localJSONObject.getString("title"));
          localLinkInfo.setLink(localJSONObject.getString("link"));
          localLinkInfo.setLink_icon(localJSONObject.getString("link_icon"));
        }
        catch (JSONException localJSONException)
        {
          for (;;)
          {
            localJSONException.printStackTrace();
            localArrayList.add(localLinkInfo);
          }
        }
        finally
        {
          localArrayList.add(localLinkInfo);
        }
        i += 1;
      }
    }
  }
}
