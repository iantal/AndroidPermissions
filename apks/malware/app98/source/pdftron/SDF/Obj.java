package pdftron.SDF;

import pdftron.Common.Matrix2D;
import pdftron.Common.PDFNetException;
import pdftron.Filters.Filter;
import pdftron.Filters.FilterWriter;

public class Obj
{
  public static final int e_array = 6;
  public static final int e_bool = 1;
  public static final int e_dict = 5;
  public static final int e_name = 3;
  public static final int e_null = 0;
  public static final int e_number = 2;
  public static final int e_stream = 7;
  public static final int e_string = 4;
  long a;
  Object b;
  
  private Obj(long paramLong, Object paramObject)
  {
    this.a = paramLong;
    this.b = paramObject;
  }
  
  private static native void Erase(long paramLong1, long paramLong2);
  
  private static native void Erase(long paramLong, String paramString);
  
  private static native void EraseAt(long paramLong, int paramInt);
  
  private static native long Find(long paramLong, String paramString);
  
  private static native long FindObj(long paramLong, String paramString);
  
  private static native long Get(long paramLong, String paramString);
  
  private static native String GetAsPDFText(long paramLong);
  
  private static native long GetAt(long paramLong, int paramInt);
  
  private static native boolean GetBool(long paramLong);
  
  private static native byte[] GetBuffer(long paramLong);
  
  private static native long GetDecodedStream(long paramLong);
  
  private static native long GetDictIterator(long paramLong);
  
  private static native long GetDoc(long paramLong);
  
  private static native short GetGenNum(long paramLong);
  
  private static native String GetName(long paramLong);
  
  private static native double GetNumber(long paramLong);
  
  private static native long GetObjNum(long paramLong);
  
  private static native long GetOffset(long paramLong);
  
  private static native long GetRawStream(long paramLong, boolean paramBoolean);
  
  private static native long GetRawStreamLength(long paramLong);
  
  private static native int GetType(long paramLong);
  
  private static native long Insert(long paramLong1, int paramInt, long paramLong2);
  
  private static native long InsertArray(long paramLong, int paramInt);
  
  private static native long InsertBool(long paramLong, int paramInt, boolean paramBoolean);
  
  private static native long InsertDict(long paramLong, int paramInt);
  
  private static native long InsertMatrix(long paramLong1, int paramInt, long paramLong2);
  
  private static native long InsertName(long paramLong, int paramInt, String paramString);
  
  private static native long InsertNull(long paramLong, int paramInt);
  
  private static native long InsertNumber(long paramLong, int paramInt, double paramDouble);
  
  private static native long InsertRect(long paramLong, int paramInt, double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4);
  
  private static native long InsertString(long paramLong, int paramInt, String paramString);
  
  private static native long InsertString(long paramLong, int paramInt, byte[] paramArrayOfByte);
  
  private static native long InsertText(long paramLong, int paramInt, String paramString);
  
  private static native boolean IsArray(long paramLong);
  
  private static native boolean IsBool(long paramLong);
  
  private static native boolean IsContainer(long paramLong);
  
  private static native boolean IsDict(long paramLong);
  
  private static native boolean IsEqual(long paramLong1, long paramLong2);
  
  private static native boolean IsFree(long paramLong);
  
  private static native boolean IsIndirect(long paramLong);
  
  private static native boolean IsLoaded(long paramLong);
  
  private static native boolean IsMarked(long paramLong);
  
  private static native boolean IsName(long paramLong);
  
  private static native boolean IsNull(long paramLong);
  
  private static native boolean IsNumber(long paramLong);
  
  private static native boolean IsStream(long paramLong);
  
  private static native boolean IsString(long paramLong);
  
  private static native long PushBack(long paramLong1, long paramLong2);
  
  private static native long PushBackArray(long paramLong);
  
  private static native long PushBackBool(long paramLong, boolean paramBoolean);
  
  private static native long PushBackDict(long paramLong);
  
  private static native long PushBackMatrix(long paramLong1, long paramLong2);
  
  private static native long PushBackName(long paramLong, String paramString);
  
  private static native long PushBackNull(long paramLong);
  
  private static native long PushBackNumber(long paramLong, double paramDouble);
  
  private static native long PushBackRect(long paramLong, double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4);
  
  private static native long PushBackString(long paramLong, String paramString);
  
  private static native long PushBackString(long paramLong, byte[] paramArrayOfByte);
  
  private static native long PushBackText(long paramLong, String paramString);
  
  private static native long Put(long paramLong1, String paramString, long paramLong2);
  
  private static native long PutArray(long paramLong, String paramString);
  
  private static native long PutBool(long paramLong, String paramString, boolean paramBoolean);
  
  private static native long PutDict(long paramLong, String paramString);
  
  private static native long PutMatrix(long paramLong1, String paramString, long paramLong2);
  
  private static native long PutName(long paramLong, String paramString1, String paramString2);
  
  private static native void PutNull(long paramLong, String paramString);
  
  private static native long PutNumber(long paramLong, String paramString, double paramDouble);
  
  private static native long PutRect(long paramLong, String paramString, double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4);
  
  private static native long PutString(long paramLong, String paramString1, String paramString2);
  
  private static native long PutString(long paramLong, String paramString, byte[] paramArrayOfByte);
  
  private static native long PutText(long paramLong, String paramString1, String paramString2);
  
  private static native boolean Rename(long paramLong, String paramString1, String paramString2);
  
  private static native void SetBool(long paramLong, boolean paramBoolean);
  
  private static native void SetMark(long paramLong, boolean paramBoolean);
  
  private static native void SetName(long paramLong, String paramString);
  
  private static native void SetNumber(long paramLong, double paramDouble);
  
  private static native void SetStreamData(long paramLong1, byte[] paramArrayOfByte, long paramLong2);
  
  private static native void SetString(long paramLong, String paramString);
  
  private static native void SetString(long paramLong, byte[] paramArrayOfByte);
  
  private static native long Size(long paramLong);
  
  private static native void Write(long paramLong1, long paramLong2);
  
  public static Obj __Create(long paramLong, Object paramObject)
  {
    if (paramLong == 0L) {
      return null;
    }
    return new Obj(paramLong, paramObject);
  }
  
  public long __GetHandle()
  {
    return this.a;
  }
  
  public Object __GetRefHandle()
  {
    return this.b;
  }
  
  public void erase(String paramString)
    throws PDFNetException
  {
    Erase(this.a, paramString);
  }
  
  public void erase(DictIterator paramDictIterator)
    throws PDFNetException
  {
    Erase(this.a, paramDictIterator.__GetHandle());
  }
  
  public void eraseAt(int paramInt)
    throws PDFNetException
  {
    EraseAt(this.a, paramInt);
  }
  
  public DictIterator find(String paramString)
    throws PDFNetException
  {
    return new DictIterator(Find(this.a, paramString), this.b);
  }
  
  public Obj findObj(String paramString)
    throws PDFNetException
  {
    return __Create(FindObj(this.a, paramString), this.b);
  }
  
  public DictIterator get(String paramString)
    throws PDFNetException
  {
    return new DictIterator(Get(this.a, paramString), this.b);
  }
  
  public String getAsPDFText()
    throws PDFNetException
  {
    return GetAsPDFText(this.a);
  }
  
  public Obj getAt(int paramInt)
    throws PDFNetException
  {
    return __Create(GetAt(this.a, paramInt), this.b);
  }
  
  public boolean getBool()
    throws PDFNetException
  {
    return GetBool(this.a);
  }
  
  public byte[] getBuffer()
    throws PDFNetException
  {
    return GetBuffer(this.a);
  }
  
  public Filter getDecodedStream()
    throws PDFNetException
  {
    return Filter.__Create(GetDecodedStream(this.a), null);
  }
  
  public DictIterator getDictIterator()
    throws PDFNetException
  {
    return new DictIterator(GetDictIterator(this.a), this.b);
  }
  
  public SDFDoc getDoc()
    throws PDFNetException
  {
    return new SDFDoc(GetDoc(this.a), this.b);
  }
  
  public short getGenNum()
    throws PDFNetException
  {
    return GetGenNum(this.a);
  }
  
  public String getName()
    throws PDFNetException
  {
    return GetName(this.a);
  }
  
  public double getNumber()
    throws PDFNetException
  {
    return GetNumber(this.a);
  }
  
  public long getObjNum()
    throws PDFNetException
  {
    return GetObjNum(this.a);
  }
  
  public long getOffset()
    throws PDFNetException
  {
    return GetOffset(this.a);
  }
  
  public Filter getRawStream(boolean paramBoolean)
    throws PDFNetException
  {
    return Filter.__Create(GetRawStream(this.a, paramBoolean), null);
  }
  
  public long getRawStreamLength()
    throws PDFNetException
  {
    return GetRawStreamLength(this.a);
  }
  
  public int getType()
    throws PDFNetException
  {
    return GetType(this.a);
  }
  
  public Obj insert(int paramInt, Obj paramObj)
    throws PDFNetException
  {
    return __Create(Insert(this.a, paramInt, paramObj.a), this.b);
  }
  
  public Obj insertArray(int paramInt)
    throws PDFNetException
  {
    return __Create(InsertArray(this.a, paramInt), this.b);
  }
  
  public Obj insertBool(int paramInt, boolean paramBoolean)
    throws PDFNetException
  {
    return __Create(InsertBool(this.a, paramInt, paramBoolean), this.b);
  }
  
  public Obj insertDict(int paramInt)
    throws PDFNetException
  {
    return __Create(InsertDict(this.a, paramInt), this.b);
  }
  
  public Obj insertMatrix(int paramInt, Matrix2D paramMatrix2D)
    throws PDFNetException
  {
    return __Create(InsertMatrix(this.a, paramInt, paramMatrix2D.__GetHandle()), this.b);
  }
  
  public Obj insertName(int paramInt, String paramString)
    throws PDFNetException
  {
    return __Create(InsertName(this.a, paramInt, paramString), this.b);
  }
  
  public Obj insertNull(int paramInt)
    throws PDFNetException
  {
    return __Create(InsertNull(this.a, paramInt), this.b);
  }
  
  public Obj insertNumber(int paramInt, double paramDouble)
    throws PDFNetException
  {
    return __Create(InsertNumber(this.a, paramInt, paramDouble), this.b);
  }
  
  public Obj insertRect(int paramInt, double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4)
    throws PDFNetException
  {
    return __Create(InsertRect(this.a, paramInt, paramDouble1, paramDouble2, paramDouble3, paramDouble4), this.b);
  }
  
  public Obj insertString(int paramInt, String paramString)
    throws PDFNetException
  {
    return __Create(InsertString(this.a, paramInt, paramString), this.b);
  }
  
  public Obj insertString(int paramInt, byte[] paramArrayOfByte)
    throws PDFNetException
  {
    return __Create(InsertString(this.a, paramInt, paramArrayOfByte), this.b);
  }
  
  public Obj insertText(int paramInt, String paramString)
    throws PDFNetException
  {
    return __Create(InsertText(this.a, paramInt, paramString), this.b);
  }
  
  public boolean isArray()
    throws PDFNetException
  {
    return IsArray(this.a);
  }
  
  public boolean isBool()
    throws PDFNetException
  {
    return IsBool(this.a);
  }
  
  public boolean isContainer()
    throws PDFNetException
  {
    return IsContainer(this.a);
  }
  
  public boolean isDict()
    throws PDFNetException
  {
    return IsDict(this.a);
  }
  
  public boolean isEqual(Obj paramObj)
    throws PDFNetException
  {
    return IsEqual(this.a, paramObj.a);
  }
  
  public boolean isFree()
    throws PDFNetException
  {
    return IsFree(this.a);
  }
  
  public boolean isIndirect()
    throws PDFNetException
  {
    return IsIndirect(this.a);
  }
  
  public boolean isLoaded()
    throws PDFNetException
  {
    return IsLoaded(this.a);
  }
  
  public boolean isMarked()
    throws PDFNetException
  {
    return IsMarked(this.a);
  }
  
  public boolean isName()
    throws PDFNetException
  {
    return IsName(this.a);
  }
  
  public boolean isNull()
    throws PDFNetException
  {
    return IsNull(this.a);
  }
  
  public boolean isNumber()
    throws PDFNetException
  {
    return IsNumber(this.a);
  }
  
  public boolean isStream()
    throws PDFNetException
  {
    return IsStream(this.a);
  }
  
  public boolean isString()
    throws PDFNetException
  {
    return IsString(this.a);
  }
  
  public Obj pushBack(Obj paramObj)
    throws PDFNetException
  {
    return __Create(PushBack(this.a, paramObj.a), this.b);
  }
  
  public Obj pushBackArray()
    throws PDFNetException
  {
    return __Create(PushBackArray(this.a), this.b);
  }
  
  public Obj pushBackBool(boolean paramBoolean)
    throws PDFNetException
  {
    return __Create(PushBackBool(this.a, paramBoolean), this.b);
  }
  
  public Obj pushBackDict()
    throws PDFNetException
  {
    return __Create(PushBackDict(this.a), this.b);
  }
  
  public Obj pushBackMatrix(Matrix2D paramMatrix2D)
    throws PDFNetException
  {
    return __Create(PushBackMatrix(this.a, paramMatrix2D.__GetHandle()), this.b);
  }
  
  public Obj pushBackName(String paramString)
    throws PDFNetException
  {
    return __Create(PushBackName(this.a, paramString), this.b);
  }
  
  public Obj pushBackNull()
    throws PDFNetException
  {
    return __Create(PushBackNull(this.a), this.b);
  }
  
  public Obj pushBackNumber(double paramDouble)
    throws PDFNetException
  {
    return __Create(PushBackNumber(this.a, paramDouble), this.b);
  }
  
  public Obj pushBackRect(double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4)
    throws PDFNetException
  {
    return __Create(PushBackRect(this.a, paramDouble1, paramDouble2, paramDouble3, paramDouble4), this.b);
  }
  
  public Obj pushBackString(String paramString)
    throws PDFNetException
  {
    return __Create(PushBackString(this.a, paramString), this.b);
  }
  
  public Obj pushBackString(byte[] paramArrayOfByte)
    throws PDFNetException
  {
    return __Create(PushBackString(this.a, paramArrayOfByte), this.b);
  }
  
  public Obj pushBackText(String paramString)
    throws PDFNetException
  {
    return __Create(PushBackText(this.a, paramString), this.b);
  }
  
  public Obj put(String paramString, Obj paramObj)
    throws PDFNetException
  {
    return __Create(Put(this.a, paramString, paramObj.a), this.b);
  }
  
  public Obj putArray(String paramString)
    throws PDFNetException
  {
    return __Create(PutArray(this.a, paramString), this.b);
  }
  
  public Obj putBool(String paramString, boolean paramBoolean)
    throws PDFNetException
  {
    return __Create(PutBool(this.a, paramString, paramBoolean), this.b);
  }
  
  public Obj putDict(String paramString)
    throws PDFNetException
  {
    return __Create(PutDict(this.a, paramString), this.b);
  }
  
  public Obj putMatrix(String paramString, Matrix2D paramMatrix2D)
    throws PDFNetException
  {
    return __Create(PutMatrix(this.a, paramString, paramMatrix2D.__GetHandle()), this.b);
  }
  
  public Obj putName(String paramString1, String paramString2)
    throws PDFNetException
  {
    return __Create(PutName(this.a, paramString1, paramString2), this.b);
  }
  
  public void putNull(String paramString)
    throws PDFNetException
  {
    PutNull(this.a, paramString);
  }
  
  public Obj putNumber(String paramString, double paramDouble)
    throws PDFNetException
  {
    return __Create(PutNumber(this.a, paramString, paramDouble), this.b);
  }
  
  public Obj putRect(String paramString, double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4)
    throws PDFNetException
  {
    return __Create(PutRect(this.a, paramString, paramDouble1, paramDouble2, paramDouble3, paramDouble4), this.b);
  }
  
  public Obj putString(String paramString1, String paramString2)
    throws PDFNetException
  {
    return __Create(PutString(this.a, paramString1, paramString2), this.b);
  }
  
  public Obj putString(String paramString, byte[] paramArrayOfByte)
    throws PDFNetException
  {
    return __Create(PutString(this.a, paramString, paramArrayOfByte), this.b);
  }
  
  public Obj putText(String paramString1, String paramString2)
    throws PDFNetException
  {
    return __Create(PutText(this.a, paramString1, paramString2), this.b);
  }
  
  public boolean rename(String paramString1, String paramString2)
    throws PDFNetException
  {
    return Rename(this.a, paramString1, paramString2);
  }
  
  public void setBool(boolean paramBoolean)
    throws PDFNetException
  {
    SetBool(this.a, paramBoolean);
  }
  
  public void setMark(boolean paramBoolean)
    throws PDFNetException
  {
    SetMark(this.a, paramBoolean);
  }
  
  public void setName(String paramString)
    throws PDFNetException
  {
    SetName(this.a, paramString);
  }
  
  public void setNumber(double paramDouble)
    throws PDFNetException
  {
    SetNumber(this.a, paramDouble);
  }
  
  public void setStreamData(byte[] paramArrayOfByte, Filter paramFilter)
    throws PDFNetException
  {
    if (paramFilter != null) {
      paramFilter.__SetRefHandle(this);
    }
    SetStreamData(this.a, paramArrayOfByte, paramFilter.__GetHandle());
  }
  
  public void setString(String paramString)
    throws PDFNetException
  {
    SetString(this.a, paramString);
  }
  
  public void setString(byte[] paramArrayOfByte)
    throws PDFNetException
  {
    SetString(this.a, paramArrayOfByte);
  }
  
  public long size()
    throws PDFNetException
  {
    return Size(this.a);
  }
  
  public void write(FilterWriter paramFilterWriter)
    throws PDFNetException
  {
    Write(this.a, paramFilterWriter.__GetHandle());
  }
}
