package pdftron.PDF;

import pdftron.Common.PDFNetException;
import pdftron.SDF.Obj;

public class Action
{
  public static final int e_GoTo = 0;
  public static final int e_GoTo3DView = 17;
  public static final int e_GoToE = 2;
  public static final int e_GoToR = 1;
  public static final int e_Hide = 8;
  public static final int e_ImportData = 12;
  public static final int e_JavaScript = 13;
  public static final int e_Launch = 3;
  public static final int e_Movie = 7;
  public static final int e_Named = 9;
  public static final int e_Rendition = 15;
  public static final int e_ResetForm = 11;
  public static final int e_SetOCGState = 14;
  public static final int e_Sound = 6;
  public static final int e_SubmitForm = 10;
  public static final int e_Thread = 4;
  public static final int e_Trans = 16;
  public static final int e_URI = 5;
  public static final int e_Unknown = 18;
  public static final int e_canonical_format = 9;
  public static final int e_embed_form = 13;
  public static final int e_excl_F_key = 11;
  public static final int e_excl_non_user_annots = 10;
  public static final int e_exclude = 0;
  public static final int e_export_format = 2;
  public static final int e_get_method = 3;
  public static final int e_include_annotations = 7;
  public static final int e_include_append_saves = 6;
  public static final int e_include_no_value_fields = 1;
  public static final int e_submit_coordinates = 4;
  public static final int e_submit_pdf = 8;
  public static final int e_xfdf = 5;
  long a;
  private Object b;
  
  Action(long paramLong, Object paramObject)
  {
    this.a = paramLong;
    this.b = paramObject;
  }
  
  public Action(Obj paramObj)
    throws PDFNetException
  {
    this.a = paramObj.__GetHandle();
    this.b = paramObj.__GetRefHandle();
  }
  
  private static native long CreateGoto(long paramLong);
  
  private static native long CreateGoto(byte[] paramArrayOfByte, long paramLong);
  
  private static native long CreateGotoRemote(long paramLong, int paramInt);
  
  private static native long CreateGotoRemote(long paramLong, int paramInt, boolean paramBoolean);
  
  private static native long CreateHideField(long paramLong, String[] paramArrayOfString);
  
  private static native long CreateImportData(long paramLong, String paramString);
  
  private static native long CreateJavaScript(long paramLong, String paramString);
  
  private static native long CreateLaunch(long paramLong, String paramString);
  
  private static native long CreateResetForm(long paramLong);
  
  private static native long CreateSubmitForm(long paramLong);
  
  private static native long CreateURI(long paramLong, String paramString);
  
  private static native void Execute(long paramLong);
  
  private static native long GetDest(long paramLong);
  
  private static native int GetFormActionFlag(long paramLong, int paramInt);
  
  private static native long GetNext(long paramLong);
  
  private static native int GetType(long paramLong);
  
  private static native boolean IsValid(long paramLong);
  
  private static native void SetFormActionFlag(long paramLong, int paramInt, boolean paramBoolean);
  
  public static Action __Create(long paramLong, Object paramObject)
  {
    if (paramLong == 0L) {
      return null;
    }
    return new Action(paramLong, paramObject);
  }
  
  public static Action createGoto(Destination paramDestination)
    throws PDFNetException
  {
    return new Action(CreateGoto(paramDestination.a), paramDestination.b);
  }
  
  public static Action createGoto(byte[] paramArrayOfByte, Destination paramDestination)
    throws PDFNetException
  {
    return new Action(CreateGoto(paramArrayOfByte, paramDestination.a), paramDestination.b);
  }
  
  public static Action createGotoRemote(FileSpec paramFileSpec, int paramInt)
    throws PDFNetException
  {
    return new Action(CreateGotoRemote(paramFileSpec.a, paramInt), paramFileSpec.b);
  }
  
  public static Action createGotoRemote(FileSpec paramFileSpec, int paramInt, boolean paramBoolean)
    throws PDFNetException
  {
    return new Action(CreateGotoRemote(paramFileSpec.a, paramInt, paramBoolean), paramFileSpec.b);
  }
  
  public static Action createHideField(PDFDoc paramPDFDoc, String[] paramArrayOfString)
  {
    return new Action(CreateHideField(paramPDFDoc.__GetHandle(), paramArrayOfString), paramPDFDoc);
  }
  
  public static Action createImportData(PDFDoc paramPDFDoc, String paramString)
  {
    return new Action(CreateImportData(paramPDFDoc.__GetHandle(), paramString), paramPDFDoc);
  }
  
  public static Action createJavaScript(PDFDoc paramPDFDoc, String paramString)
  {
    return new Action(CreateJavaScript(paramPDFDoc.__GetHandle(), paramString), paramPDFDoc);
  }
  
  public static Action createLaunch(PDFDoc paramPDFDoc, String paramString)
  {
    return new Action(CreateLaunch(paramPDFDoc.__GetHandle(), paramString), paramPDFDoc);
  }
  
  public static Action createResetForm(PDFDoc paramPDFDoc)
  {
    return new Action(CreateResetForm(paramPDFDoc.__GetHandle()), paramPDFDoc);
  }
  
  public static Action createSubmitForm(FileSpec paramFileSpec)
    throws PDFNetException
  {
    return new Action(CreateSubmitForm(paramFileSpec.a), paramFileSpec.b);
  }
  
  public static Action createURI(PDFDoc paramPDFDoc, String paramString)
    throws PDFNetException
  {
    return new Action(CreateURI(paramPDFDoc.__GetHandle(), paramString), paramPDFDoc);
  }
  
  public void Execute()
    throws PDFNetException
  {
    Execute(this.a);
  }
  
  public Obj GetNext()
    throws PDFNetException
  {
    return Obj.__Create(GetNext(this.a), this.b);
  }
  
  public long __GetHandle()
  {
    return this.a;
  }
  
  public Object __GetRefHandle()
  {
    return this.b;
  }
  
  public boolean equals(Object paramObject)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (paramObject != null)
    {
      bool1 = bool2;
      if (paramObject.getClass().equals(getClass()))
      {
        bool1 = bool2;
        if (this.a == ((Action)paramObject).a) {
          bool1 = true;
        }
      }
    }
    return bool1;
  }
  
  public Destination getDest()
    throws PDFNetException
  {
    return new Destination(GetDest(this.a), this.b);
  }
  
  public int getFormActionFlag(int paramInt)
    throws PDFNetException
  {
    return GetFormActionFlag(this.a, paramInt);
  }
  
  public Obj getSDFObj()
  {
    return Obj.__Create(this.a, this.b);
  }
  
  public int getType()
    throws PDFNetException
  {
    return GetType(this.a);
  }
  
  public int hashCode()
  {
    return (int)this.a;
  }
  
  public boolean isValid()
    throws PDFNetException
  {
    return IsValid(this.a);
  }
  
  public void setFormActionFlag(int paramInt, boolean paramBoolean)
    throws PDFNetException
  {
    SetFormActionFlag(this.a, paramInt, paramBoolean);
  }
}
