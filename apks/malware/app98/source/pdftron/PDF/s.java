package pdftron.PDF;

import java.util.HashMap;
import java.util.LinkedList;
import pdftron.Common.PDFNetException;

abstract class s
  implements t
{
  static HashMap b = new HashMap();
  private Thread a;
  long c;
  
  s() {}
  
  protected void clearList()
    throws PDFNetException
  {
    this.a = Thread.currentThread();
    synchronized (b)
    {
      Object localObject1 = b.get(this.a);
      if (localObject1 == null) {
        break label72;
      }
      try
      {
        ??? = (LinkedList)localObject1;
        while (!((LinkedList)???).isEmpty())
        {
          ((t)((LinkedList)???).removeFirst()).destroy();
          continue;
          localObject2 = finally;
        }
      }
      finally {}
    }
    return;
    label72:
    LinkedList localLinkedList = new LinkedList();
    synchronized (b)
    {
      b.put(this.a, localLinkedList);
      return;
    }
  }
  
  public abstract void destroy()
    throws PDFNetException;
  
  protected void finalize()
    throws Throwable
  {
    if (this.c != 0L) {}
    Object localObject2;
    synchronized (b)
    {
      localObject2 = b.get(this.a);
      if (localObject2 == null) {}
    }
  }
}
