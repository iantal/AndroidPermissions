package pdftron.PDF.Tools;

import android.content.Context;
import android.content.SharedPreferences;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.graphics.PointF;
import android.graphics.RectF;
import android.view.MotionEvent;
import pdftron.PDF.PDFViewCtrl;
import pdftron.PDF.Rect;

abstract class r
  extends u
{
  protected PointF a = new PointF(0.0F, 0.0F);
  protected PointF b = new PointF(0.0F, 0.0F);
  protected Paint c = new Paint();
  protected int d;
  protected RectF e;
  protected float f;
  protected float g;
  protected int h;
  
  public r(PDFViewCtrl paramPDFViewCtrl)
  {
    super(paramPDFViewCtrl);
    this.c.setAntiAlias(true);
    this.c.setColor(-16776961);
    this.c.setStyle(Paint.Style.STROKE);
    this.f = 1.0F;
    this.g = 1.0F;
  }
  
  protected final Rect b()
  {
    Object localObject = this.i.convClientPtToPagePt(this.a.x - this.i.getScrollX(), this.a.y - this.i.getScrollY(), this.d);
    double[] arrayOfDouble = this.i.convClientPtToPagePt(this.b.x - this.i.getScrollX(), this.b.y - this.i.getScrollY(), this.d);
    try
    {
      localObject = new Rect(localObject[0], localObject[1], arrayOfDouble[0], arrayOfDouble[1]);
      return localObject;
    }
    catch (Exception localException) {}
    return null;
  }
  
  public boolean onDown(MotionEvent paramMotionEvent)
  {
    this.a.x = (paramMotionEvent.getX() + this.i.getScrollX());
    this.a.y = (paramMotionEvent.getY() + this.i.getScrollY());
    this.b.set(this.a);
    this.d = this.i.getPageNumberFromClientPt(paramMotionEvent.getX(), paramMotionEvent.getY());
    if (this.d <= 0) {
      this.d = this.i.getCurrentPage();
    }
    if (this.d > 0) {
      this.e = a(this.d);
    }
    paramMotionEvent = this.i.getContext().getSharedPreferences("com_pdftron_pdfnet_pdfviewctrl_prefs_file", 0);
    this.f = paramMotionEvent.getFloat("annotation_creation_thickness", 1.0F);
    this.g = ((float)this.i.getZoom() * this.f);
    this.c.setStrokeWidth(this.g);
    this.h = paramMotionEvent.getInt("annotation_creation_color", -65536);
    this.c.setColor(this.h);
    return false;
  }
  
  public boolean onMove(MotionEvent paramMotionEvent1, MotionEvent paramMotionEvent2, float paramFloat1, float paramFloat2)
  {
    float f1 = this.b.x;
    float f5 = this.b.y;
    this.b.x = (paramMotionEvent2.getX() + this.i.getScrollX());
    this.b.y = (paramMotionEvent2.getY() + this.i.getScrollY());
    if (this.e != null)
    {
      if (this.b.x >= this.e.left) {
        break label288;
      }
      this.b.x = this.e.left;
      if (this.b.y >= this.e.top) {
        break label323;
      }
      this.b.y = this.e.top;
    }
    for (;;)
    {
      paramFloat1 = Math.min(Math.min(f1, this.b.x), this.a.x);
      paramFloat2 = this.g;
      f1 = Math.max(Math.max(f1, this.b.x), this.a.x);
      float f2 = this.g;
      float f3 = Math.min(Math.min(f5, this.b.y), this.a.y);
      float f4 = this.g;
      f5 = Math.max(Math.max(f5, this.b.y), this.a.y);
      float f6 = this.g;
      this.i.invalidate((int)(paramFloat1 - paramFloat2), (int)(f3 - f4), (int)Math.ceil(f1 + f2), (int)Math.ceil(f5 + f6));
      return true;
      label288:
      if (this.b.x <= this.e.right) {
        break;
      }
      this.b.x = this.e.right;
      break;
      label323:
      if (this.b.y > this.e.bottom) {
        this.b.y = this.e.bottom;
      }
    }
  }
  
  public boolean onScaleBegin(float paramFloat1, float paramFloat2)
  {
    return true;
  }
  
  public boolean onUp(MotionEvent paramMotionEvent, int paramInt)
  {
    this.j = 2;
    float f1 = Math.min(this.a.x, this.b.x);
    float f2 = this.g;
    float f3 = Math.max(this.a.x, this.b.x);
    float f4 = this.g;
    float f5 = Math.min(this.a.y, this.b.y);
    float f6 = this.g;
    float f7 = Math.max(this.a.y, this.b.y);
    float f8 = this.g;
    this.i.postInvalidate((int)(f1 - f2), (int)(f5 - f6), (int)Math.ceil(f3 + f4), (int)Math.ceil(f7 + f8));
    return false;
  }
}
