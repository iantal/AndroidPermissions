package pdftron.PDF;

import pdftron.Common.PDFNetException;
import pdftron.SDF.ISignature;
import pdftron.SDF.Obj;

public class Field
  extends s
{
  public static final int e_button = 0;
  public static final int e_centered = 1;
  public static final int e_check = 1;
  public static final int e_choice = 4;
  public static final int e_comb = 12;
  public static final int e_combo = 14;
  public static final int e_commit_on_sel_change = 18;
  public static final int e_edit = 15;
  public static final int e_file_select = 9;
  public static final int e_left_justified = 0;
  public static final int e_multiline = 7;
  public static final int e_multiselect = 17;
  public static final int e_no_export = 2;
  public static final int e_no_scroll = 11;
  public static final int e_no_spellcheck = 10;
  public static final int e_null = 6;
  public static final int e_password = 8;
  public static final int e_pushbutton_flag = 3;
  public static final int e_radio = 2;
  public static final int e_radio_flag = 4;
  public static final int e_radios_in_unison = 6;
  public static final int e_read_only = 0;
  public static final int e_required = 1;
  public static final int e_rich_text = 13;
  public static final int e_right_justified = 2;
  public static final int e_signature = 5;
  public static final int e_sort = 16;
  public static final int e_text = 3;
  public static final int e_toggle_to_off = 5;
  long a;
  private Object d;
  
  Field(long paramLong, Object paramObject)
    throws PDFNetException
  {
    this.a = paramLong;
    this.d = paramObject;
    clearList();
  }
  
  public Field(Obj paramObj)
    throws PDFNetException
  {
    this.a = FieldCreate(paramObj.__GetHandle());
    this.d = paramObj.__GetRefHandle();
    clearList();
  }
  
  private static native void Destroy(long paramLong);
  
  private static native void EraseAppearance(long paramLong);
  
  private static native long FieldCreate(long paramLong);
  
  private static native long FindInheritedAttribute(long paramLong, String paramString);
  
  private static native void Flatten(long paramLong1, long paramLong2);
  
  private static native long GetDefaultAppearance(long paramLong);
  
  private static native long GetDefaultValue(long paramLong);
  
  private static native String GetDefaultValueAsString(long paramLong);
  
  private static native boolean GetFlag(long paramLong, int paramInt);
  
  private static native int GetJustification(long paramLong);
  
  private static native int GetMaxLen(long paramLong);
  
  private static native String GetName(long paramLong);
  
  private static native String GetPartialName(long paramLong);
  
  private static native long GetSDFObj(long paramLong);
  
  private static native int GetType(long paramLong);
  
  private static native long GetUpdateRect(long paramLong);
  
  private static native long GetValue(long paramLong);
  
  private static native boolean GetValueAsBool(long paramLong);
  
  private static native String GetValueAsString(long paramLong);
  
  private static native boolean IsAnnot(long paramLong);
  
  private static native boolean IsValid(long paramLong);
  
  private static native void RefreshAppearance(long paramLong);
  
  private static native void Rename(long paramLong, String paramString);
  
  private static native void SetFlag(long paramLong, int paramInt, boolean paramBoolean);
  
  private static native void SetJustification(long paramLong, int paramInt);
  
  private static native void SetMaxLen(long paramLong, int paramInt);
  
  private static native long SetValue(long paramLong, ISignature paramISignature);
  
  private static native void SetValue(long paramLong1, long paramLong2);
  
  private static native void SetValue(long paramLong, String paramString);
  
  private static native void SetValue(long paramLong, boolean paramBoolean);
  
  public static Field __Create(long paramLong, Object paramObject)
    throws PDFNetException
  {
    if (paramLong == 0L) {
      return null;
    }
    return new Field(paramLong, paramObject);
  }
  
  public long __GetHandle()
  {
    return this.a;
  }
  
  public Object __GetRefHandle()
  {
    return this.d;
  }
  
  public void destroy()
    throws PDFNetException
  {
    if ((this.a != 0L) && (!(this.d instanceof FieldIterator)))
    {
      Destroy(this.a);
      this.a = 0L;
    }
  }
  
  public void eraseAppearance()
    throws PDFNetException
  {
    EraseAppearance(this.a);
  }
  
  protected void finalize()
    throws Throwable
  {
    destroy();
  }
  
  public Obj findInheritedAttribute(String paramString)
    throws PDFNetException
  {
    return Obj.__Create(FindInheritedAttribute(this.a, paramString), this.d);
  }
  
  public void flatten(Page paramPage)
    throws PDFNetException
  {
    Flatten(this.a, paramPage.a);
  }
  
  public GState getDefaultAppearance()
    throws PDFNetException
  {
    return new GState(GetDefaultAppearance(this.a), this.d, null);
  }
  
  public Obj getDefaultValue()
    throws PDFNetException
  {
    return Obj.__Create(GetDefaultValue(this.a), this.d);
  }
  
  public String getDefaultValueAsString()
    throws PDFNetException
  {
    return GetDefaultValueAsString(this.a);
  }
  
  public boolean getFlag(int paramInt)
    throws PDFNetException
  {
    return GetFlag(this.a, paramInt);
  }
  
  public int getJustification()
    throws PDFNetException
  {
    return GetJustification(this.a);
  }
  
  public int getMaxLen()
    throws PDFNetException
  {
    return GetMaxLen(this.a);
  }
  
  public String getName()
    throws PDFNetException
  {
    return GetName(this.a);
  }
  
  public String getPartialName()
    throws PDFNetException
  {
    return GetPartialName(this.a);
  }
  
  public Obj getSDFObj()
    throws PDFNetException
  {
    return Obj.__Create(GetSDFObj(this.a), this.d);
  }
  
  public int getType()
    throws PDFNetException
  {
    return GetType(this.a);
  }
  
  public Rect getUpdateRect()
  {
    return new Rect(GetUpdateRect(this.a));
  }
  
  public Obj getValue()
    throws PDFNetException
  {
    return Obj.__Create(GetValue(this.a), this.d);
  }
  
  public boolean getValueAsBool()
    throws PDFNetException
  {
    return GetValueAsBool(this.a);
  }
  
  public String getValueAsString()
    throws PDFNetException
  {
    return GetValueAsString(this.a);
  }
  
  public boolean isAnnot()
    throws PDFNetException
  {
    return IsAnnot(this.a);
  }
  
  public boolean isValid()
    throws PDFNetException
  {
    return IsValid(this.a);
  }
  
  public void refreshAppearance()
    throws PDFNetException
  {
    RefreshAppearance(this.a);
  }
  
  public void rename(String paramString)
    throws PDFNetException
  {
    Rename(this.a, paramString);
  }
  
  public void setFlag(int paramInt, boolean paramBoolean)
    throws PDFNetException
  {
    SetFlag(this.a, paramInt, paramBoolean);
  }
  
  public void setJustification(int paramInt)
    throws PDFNetException
  {
    SetJustification(this.a, paramInt);
  }
  
  public void setMaxLen(int paramInt)
    throws PDFNetException
  {
    SetMaxLen(this.a, paramInt);
  }
  
  public Obj setValue(ISignature paramISignature)
    throws PDFNetException
  {
    return Obj.__Create(SetValue(this.a, paramISignature), this.d);
  }
  
  public void setValue(String paramString)
    throws PDFNetException
  {
    SetValue(this.a, paramString);
  }
  
  public void setValue(Obj paramObj)
    throws PDFNetException
  {
    SetValue(this.a, paramObj.__GetHandle());
  }
  
  public void setValue(boolean paramBoolean)
    throws PDFNetException
  {
    SetValue(this.a, paramBoolean);
  }
}
