package pdftron.PDF.Annots;

import pdftron.Common.PDFNetException;
import pdftron.PDF.Annot;
import pdftron.PDF.Point;
import pdftron.PDF.QuadPoint;
import pdftron.PDF.Rect;
import pdftron.SDF.Doc;
import pdftron.SDF.Obj;

public class Redaction
  extends Markup
{
  public static final int e_Centered = 1;
  public static final int e_LeftJustified = 0;
  public static final int e_None = 3;
  public static final int e_RightJustified = 2;
  
  public Redaction() {}
  
  private Redaction(long paramLong, Object paramObject)
  {
    super(paramLong, paramObject);
  }
  
  public Redaction(Annot paramAnnot)
    throws PDFNetException
  {
    super(paramAnnot.getSDFObj());
  }
  
  public Redaction(Obj paramObj)
  {
    super(paramObj);
  }
  
  private static native long Create(long paramLong1, long paramLong2);
  
  private static native long GetAppFormXO(long paramLong);
  
  private static native String GetOverlayText(long paramLong);
  
  private static native String GetOverlayTextAppearance(long paramLong);
  
  private static native int GetQuadForm(long paramLong);
  
  private static native int GetQuadPointCount(long paramLong);
  
  private static native double GetQuadPointp1x(long paramLong, int paramInt);
  
  private static native double GetQuadPointp1y(long paramLong, int paramInt);
  
  private static native double GetQuadPointp2x(long paramLong, int paramInt);
  
  private static native double GetQuadPointp2y(long paramLong, int paramInt);
  
  private static native double GetQuadPointp3x(long paramLong, int paramInt);
  
  private static native double GetQuadPointp3y(long paramLong, int paramInt);
  
  private static native double GetQuadPointp4x(long paramLong, int paramInt);
  
  private static native double GetQuadPointp4y(long paramLong, int paramInt);
  
  private static native boolean GetUseRepeat(long paramLong);
  
  private static native void SetAppFormXO(long paramLong1, long paramLong2);
  
  private static native void SetOverlayText(long paramLong, String paramString);
  
  private static native void SetOverlayTextAppearance(long paramLong, String paramString);
  
  private static native void SetQuadForm(long paramLong, int paramInt);
  
  private static native void SetQuadPoint(long paramLong, int paramInt, double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4, double paramDouble5, double paramDouble6, double paramDouble7, double paramDouble8);
  
  private static native void SetUseRepeat(long paramLong, boolean paramBoolean);
  
  public static Redaction create(Doc paramDoc, Rect paramRect)
    throws PDFNetException
  {
    return new Redaction(Create(paramDoc.__GetHandle(), paramRect.__GetHandle()), paramDoc);
  }
  
  public Obj getAppFormXO()
    throws PDFNetException
  {
    return Obj.__Create(GetAppFormXO(__GetHandle()), __GetRefHandle());
  }
  
  public String getOverlayText()
    throws PDFNetException
  {
    return GetOverlayText(__GetHandle());
  }
  
  public String getOverlayTextAppearance()
    throws PDFNetException
  {
    return GetOverlayTextAppearance(__GetHandle());
  }
  
  public int getQuadForm()
    throws PDFNetException
  {
    return GetQuadForm(__GetHandle());
  }
  
  public QuadPoint getQuadPoint(int paramInt)
    throws PDFNetException
  {
    return new QuadPoint(new Point(GetQuadPointp1x(__GetHandle(), paramInt), GetQuadPointp1y(__GetHandle(), paramInt)), new Point(GetQuadPointp2x(__GetHandle(), paramInt), GetQuadPointp2y(__GetHandle(), paramInt)), new Point(GetQuadPointp3x(__GetHandle(), paramInt), GetQuadPointp3y(__GetHandle(), paramInt)), new Point(GetQuadPointp4x(__GetHandle(), paramInt), GetQuadPointp4y(__GetHandle(), paramInt)));
  }
  
  public int getQuadPointCount()
    throws PDFNetException
  {
    return GetQuadPointCount(__GetHandle());
  }
  
  public boolean getUseRepeat()
    throws PDFNetException
  {
    return GetUseRepeat(__GetHandle());
  }
  
  public void setAppFormXO(Obj paramObj)
    throws PDFNetException
  {
    SetAppFormXO(__GetHandle(), paramObj.__GetHandle());
  }
  
  public void setOverlayText(String paramString)
    throws PDFNetException
  {
    SetOverlayText(__GetHandle(), paramString);
  }
  
  public void setOverlayTextAppearance(String paramString)
    throws PDFNetException
  {
    SetOverlayTextAppearance(__GetHandle(), paramString);
  }
  
  public void setQuadForm(int paramInt)
    throws PDFNetException
  {
    SetQuadForm(__GetHandle(), paramInt);
  }
  
  public void setQuadPoint(int paramInt, QuadPoint paramQuadPoint)
    throws PDFNetException
  {
    SetQuadPoint(__GetHandle(), paramInt, paramQuadPoint.p1.x, paramQuadPoint.p1.y, paramQuadPoint.p2.x, paramQuadPoint.p2.y, paramQuadPoint.p3.x, paramQuadPoint.p3.y, paramQuadPoint.p4.x, paramQuadPoint.p4.y);
  }
  
  public void setUseRepeat(boolean paramBoolean)
    throws PDFNetException
  {
    SetUseRepeat(__GetHandle(), paramBoolean);
  }
}
