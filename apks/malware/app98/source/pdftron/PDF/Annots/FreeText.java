package pdftron.PDF.Annots;

import pdftron.Common.PDFNetException;
import pdftron.PDF.Annot;
import pdftron.PDF.ColorPt;
import pdftron.PDF.Point;
import pdftron.PDF.Rect;
import pdftron.SDF.Doc;
import pdftron.SDF.Obj;

public class FreeText
  extends Markup
{
  public static final int e_FreeText = 0;
  public static final int e_FreeTextCallout = 1;
  public static final int e_FreeTextTypeWriter = 2;
  public static final int e_Unknown = 3;
  
  public FreeText() {}
  
  private FreeText(long paramLong, Object paramObject)
  {
    super(paramLong, paramObject);
  }
  
  public FreeText(Annot paramAnnot)
    throws PDFNetException
  {
    super(paramAnnot.getSDFObj());
  }
  
  public FreeText(Obj paramObj)
  {
    super(paramObj);
  }
  
  private static native long Create(long paramLong1, long paramLong2);
  
  private static native double GetCalloutLinePoint1x(long paramLong);
  
  private static native double GetCalloutLinePoint1y(long paramLong);
  
  private static native double GetCalloutLinePoint2x(long paramLong);
  
  private static native double GetCalloutLinePoint2y(long paramLong);
  
  private static native double GetCalloutLinePoint3x(long paramLong);
  
  private static native double GetCalloutLinePoint3y(long paramLong);
  
  private static native String GetDefaultAppearance(long paramLong);
  
  private static native int GetEndingStyle(long paramLong);
  
  private static native int GetIntentName(long paramLong);
  
  private static native long GetLineColor(long paramLong);
  
  private static native int GetLineColorCompNum(long paramLong);
  
  private static native int GetQuaddingFormat(long paramLong);
  
  private static native long GetTextColor(long paramLong);
  
  private static native int GetTextColorCompNum(long paramLong);
  
  private static native void SetCalloutLinePoints(long paramLong, double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4, double paramDouble5, double paramDouble6);
  
  private static native void SetDefaultAppearance(long paramLong, String paramString);
  
  private static native void SetIntentName(long paramLong, int paramInt);
  
  private static native void SetLineColor(long paramLong1, long paramLong2, int paramInt);
  
  private static native void SetQuaddingFormat(long paramLong, int paramInt);
  
  private static native void SetTextColor(long paramLong1, long paramLong2, int paramInt);
  
  public static FreeText create(Doc paramDoc, Rect paramRect)
    throws PDFNetException
  {
    return new FreeText(Create(paramDoc.__GetHandle(), paramRect.__GetHandle()), paramDoc);
  }
  
  public Point getCalloutLinePoint1()
    throws PDFNetException
  {
    return new Point(GetCalloutLinePoint1x(__GetHandle()), GetCalloutLinePoint1y(__GetHandle()));
  }
  
  public Point getCalloutLinePoint2()
    throws PDFNetException
  {
    return new Point(GetCalloutLinePoint2x(__GetHandle()), GetCalloutLinePoint2y(__GetHandle()));
  }
  
  public Point getCalloutLinePoint3()
    throws PDFNetException
  {
    return new Point(GetCalloutLinePoint3x(__GetHandle()), GetCalloutLinePoint3y(__GetHandle()));
  }
  
  public String getDefaultAppearance()
    throws PDFNetException
  {
    return GetDefaultAppearance(__GetHandle());
  }
  
  public int getEndingStyle()
    throws PDFNetException
  {
    return GetEndingStyle(__GetHandle());
  }
  
  public int getIntentName()
    throws PDFNetException
  {
    return GetIntentName(__GetHandle());
  }
  
  public ColorPt getLineColor()
    throws PDFNetException
  {
    return new ColorPt(GetLineColor(__GetHandle()));
  }
  
  public int getLineColorCompNum()
    throws PDFNetException
  {
    return GetLineColorCompNum(__GetHandle());
  }
  
  public int getQuaddingFormat()
    throws PDFNetException
  {
    return GetQuaddingFormat(__GetHandle());
  }
  
  public ColorPt getTextColor()
    throws PDFNetException
  {
    return new ColorPt(GetTextColor(__GetHandle()));
  }
  
  public int getTextColorCompNum()
    throws PDFNetException
  {
    return GetTextColorCompNum(__GetHandle());
  }
  
  public void setCalloutLinePoints(Point paramPoint1, Point paramPoint2, Point paramPoint3)
    throws PDFNetException
  {
    SetCalloutLinePoints(__GetHandle(), paramPoint1.x, paramPoint1.y, paramPoint2.x, paramPoint2.y, paramPoint3.x, paramPoint3.y);
  }
  
  public void setDefaultAppearance(String paramString)
    throws PDFNetException
  {
    SetDefaultAppearance(__GetHandle(), paramString);
  }
  
  public void setIntentName(int paramInt)
    throws PDFNetException
  {
    SetIntentName(__GetHandle(), paramInt);
  }
  
  public void setLineColor(ColorPt paramColorPt, int paramInt)
    throws PDFNetException
  {
    SetLineColor(__GetHandle(), paramColorPt.__GetHandle(), paramInt);
  }
  
  public void setQuaddingFormat(int paramInt)
    throws PDFNetException
  {
    SetQuaddingFormat(__GetHandle(), paramInt);
  }
  
  public void setTextColor(ColorPt paramColorPt, int paramInt)
    throws PDFNetException
  {
    SetTextColor(__GetHandle(), paramColorPt.__GetHandle(), paramInt);
  }
}
