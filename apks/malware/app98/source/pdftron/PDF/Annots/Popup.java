package pdftron.PDF.Annots;

import pdftron.Common.PDFNetException;
import pdftron.PDF.Annot;
import pdftron.PDF.Rect;
import pdftron.SDF.Doc;
import pdftron.SDF.Obj;

public class Popup
  extends Annot
{
  public Popup() {}
  
  Popup(long paramLong, Object paramObject)
  {
    super(paramLong, paramObject);
  }
  
  public Popup(Annot paramAnnot)
    throws PDFNetException
  {
    super(paramAnnot.getSDFObj());
  }
  
  public Popup(Obj paramObj)
  {
    super(paramObj);
  }
  
  private static native long Create(long paramLong1, long paramLong2);
  
  private static native long GetParent(long paramLong);
  
  private static native boolean IsOpen(long paramLong);
  
  private static native void SetOpen(long paramLong, boolean paramBoolean);
  
  private static native void SetParent(long paramLong1, long paramLong2);
  
  public static Popup create(Doc paramDoc, Rect paramRect)
    throws PDFNetException
  {
    return new Popup(Create(paramDoc.__GetHandle(), paramRect.__GetHandle()), paramDoc);
  }
  
  public Annot getParent()
    throws PDFNetException
  {
    return __Create(GetParent(__GetHandle()), __GetRefHandle());
  }
  
  public boolean isOpen()
    throws PDFNetException
  {
    return IsOpen(__GetHandle());
  }
  
  public void setOpen(boolean paramBoolean)
    throws PDFNetException
  {
    SetOpen(__GetHandle(), paramBoolean);
  }
  
  public void setParent(Annot paramAnnot)
    throws PDFNetException
  {
    SetParent(__GetHandle(), paramAnnot.__GetHandle());
  }
}
