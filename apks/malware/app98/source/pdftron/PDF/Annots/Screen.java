package pdftron.PDF.Annots;

import pdftron.Common.PDFNetException;
import pdftron.PDF.Action;
import pdftron.PDF.Annot;
import pdftron.PDF.ColorPt;
import pdftron.PDF.Rect;
import pdftron.SDF.Doc;
import pdftron.SDF.Obj;

public class Screen
  extends Annot
{
  public static final int e_Always = 0;
  public static final int e_Anamorphic = 0;
  public static final int e_CAboveI = 3;
  public static final int e_CBelowI = 2;
  public static final int e_CLeftIRight = 5;
  public static final int e_COverlayI = 6;
  public static final int e_CRightILeft = 4;
  public static final int e_Never = 3;
  public static final int e_NoCaption = 1;
  public static final int e_NoIcon = 0;
  public static final int e_Proportional = 1;
  public static final int e_WhenBigger = 1;
  public static final int e_WhenSmaller = 2;
  
  public Screen() {}
  
  private Screen(long paramLong, Object paramObject)
  {
    super(paramLong, paramObject);
  }
  
  public Screen(Annot paramAnnot)
    throws PDFNetException
  {
    super(paramAnnot.getSDFObj());
  }
  
  public Screen(Obj paramObj)
  {
    super(paramObj);
  }
  
  private static native long Create(long paramLong1, long paramLong2);
  
  private static native long GetAction(long paramLong);
  
  private static native long GetBackgroundColor(long paramLong);
  
  private static native int GetBackgroundColorCompNum(long paramLong);
  
  private static native long GetBorderColor(long paramLong);
  
  private static native int GetBorderColorCompNum(long paramLong);
  
  private static native boolean GetFitFull(long paramLong);
  
  private static native double GetHIconLeftOver(long paramLong);
  
  private static native int GetIconCaptionRelation(long paramLong);
  
  private static native String GetMouseDownCaptionText(long paramLong);
  
  private static native long GetMouseDownIcon(long paramLong);
  
  private static native String GetRolloverCaptionText(long paramLong);
  
  private static native long GetRolloverIcon(long paramLong);
  
  private static native int GetRotation(long paramLong);
  
  private static native int GetScaleCondition(long paramLong);
  
  private static native int GetScaleType(long paramLong);
  
  private static native String GetStaticCaptionText(long paramLong);
  
  private static native long GetStaticIcon(long paramLong);
  
  private static native String GetTitle(long paramLong);
  
  private static native long GetTriggerAction(long paramLong);
  
  private static native double GetVIconLeftOver(long paramLong);
  
  private static native void SetAction(long paramLong1, long paramLong2);
  
  private static native void SetBackgroundColor(long paramLong1, long paramLong2, int paramInt);
  
  private static native void SetBorderColor(long paramLong1, long paramLong2, int paramInt);
  
  private static native void SetFitFull(long paramLong, boolean paramBoolean);
  
  private static native void SetHIconLeftOver(long paramLong, double paramDouble);
  
  private static native void SetIconCaptionRelation(long paramLong, int paramInt);
  
  private static native void SetMouseDownCaptionText(long paramLong, String paramString);
  
  private static native void SetMouseDownIcon(long paramLong1, long paramLong2);
  
  private static native void SetRolloverCaptionText(long paramLong, String paramString);
  
  private static native void SetRolloverIcon(long paramLong1, long paramLong2);
  
  private static native void SetRotation(long paramLong, int paramInt);
  
  private static native void SetScaleCondition(long paramLong, int paramInt);
  
  private static native void SetScaleType(long paramLong, int paramInt);
  
  private static native void SetStaticCaptionText(long paramLong, String paramString);
  
  private static native void SetStaticIcon(long paramLong1, long paramLong2);
  
  private static native void SetTitle(long paramLong, String paramString);
  
  private static native void SetTriggerAction(long paramLong1, long paramLong2);
  
  private static native void SetVIconLeftOver(long paramLong, double paramDouble);
  
  public static Screen create(Doc paramDoc, Rect paramRect)
    throws PDFNetException
  {
    return new Screen(Create(paramDoc.__GetHandle(), paramRect.__GetHandle()), paramDoc);
  }
  
  public void SetScaleCondition(int paramInt)
    throws PDFNetException
  {
    SetScaleCondition(__GetHandle(), paramInt);
  }
  
  public Action getAction()
    throws PDFNetException
  {
    return Action.__Create(GetAction(__GetHandle()), __GetRefHandle());
  }
  
  public ColorPt getBackgroundColor()
    throws PDFNetException
  {
    return new ColorPt(GetBackgroundColor(__GetHandle()));
  }
  
  public int getBackgroundColorCompNum()
    throws PDFNetException
  {
    return GetBackgroundColorCompNum(__GetHandle());
  }
  
  public ColorPt getBorderColor()
    throws PDFNetException
  {
    return new ColorPt(GetBorderColor(__GetHandle()));
  }
  
  public int getBorderColorCompNum()
    throws PDFNetException
  {
    return GetBorderColorCompNum(__GetHandle());
  }
  
  public boolean getFitFull()
    throws PDFNetException
  {
    return GetFitFull(__GetHandle());
  }
  
  public double getHIconLeftOver()
    throws PDFNetException
  {
    return GetHIconLeftOver(__GetHandle());
  }
  
  public int getIconCaptionRelation()
    throws PDFNetException
  {
    return GetIconCaptionRelation(__GetHandle());
  }
  
  public String getMouseDownCaptionText()
    throws PDFNetException
  {
    return GetMouseDownCaptionText(__GetHandle());
  }
  
  public Obj getMouseDownIcon()
    throws PDFNetException
  {
    return Obj.__Create(GetMouseDownIcon(__GetHandle()), __GetRefHandle());
  }
  
  public String getRolloverCaptionText()
    throws PDFNetException
  {
    return GetRolloverCaptionText(__GetHandle());
  }
  
  public Obj getRolloverIcon()
    throws PDFNetException
  {
    return Obj.__Create(GetRolloverIcon(__GetHandle()), __GetRefHandle());
  }
  
  public int getRotation()
    throws PDFNetException
  {
    return GetRotation(__GetHandle());
  }
  
  public int getScaleCondition()
    throws PDFNetException
  {
    return GetScaleCondition(__GetHandle());
  }
  
  public int getScaleType()
    throws PDFNetException
  {
    return GetScaleType(__GetHandle());
  }
  
  public String getStaticCaptionText()
    throws PDFNetException
  {
    return GetStaticCaptionText(__GetHandle());
  }
  
  public Obj getStaticIcon()
    throws PDFNetException
  {
    return Obj.__Create(GetStaticIcon(__GetHandle()), __GetRefHandle());
  }
  
  public String getTitle()
    throws PDFNetException
  {
    return GetTitle(__GetHandle());
  }
  
  public Obj getTriggerAction()
    throws PDFNetException
  {
    return Obj.__Create(GetTriggerAction(__GetHandle()), __GetRefHandle());
  }
  
  public double getVIconLeftOver()
    throws PDFNetException
  {
    return GetVIconLeftOver(__GetHandle());
  }
  
  public void setAction(Action paramAction)
    throws PDFNetException
  {
    SetAction(__GetHandle(), paramAction.__GetHandle());
  }
  
  public void setBackgroundColor(ColorPt paramColorPt, int paramInt)
    throws PDFNetException
  {
    SetBackgroundColor(__GetHandle(), paramColorPt.__GetHandle(), paramInt);
  }
  
  public void setBorderColor(ColorPt paramColorPt, int paramInt)
    throws PDFNetException
  {
    SetBorderColor(__GetHandle(), paramColorPt.__GetHandle(), paramInt);
  }
  
  public void setFitFull(boolean paramBoolean)
    throws PDFNetException
  {
    SetFitFull(__GetHandle(), paramBoolean);
  }
  
  public void setHIconLeftOver(double paramDouble)
    throws PDFNetException
  {
    SetHIconLeftOver(__GetHandle(), paramDouble);
  }
  
  public void setIconCaptionRelation(int paramInt)
    throws PDFNetException
  {
    SetIconCaptionRelation(__GetHandle(), paramInt);
  }
  
  public void setMouseDownCaptionText(String paramString)
    throws PDFNetException
  {
    SetMouseDownCaptionText(__GetHandle(), paramString);
  }
  
  public void setMouseDownIcon(Obj paramObj)
    throws PDFNetException
  {
    SetMouseDownIcon(__GetHandle(), paramObj.__GetHandle());
  }
  
  public void setRolloverCaptionText(String paramString)
    throws PDFNetException
  {
    SetRolloverCaptionText(__GetHandle(), paramString);
  }
  
  public void setRolloverIcon(Obj paramObj)
    throws PDFNetException
  {
    SetRolloverIcon(__GetHandle(), paramObj.__GetHandle());
  }
  
  public void setRotation(int paramInt)
    throws PDFNetException
  {
    SetRotation(__GetHandle(), paramInt);
  }
  
  public void setScaleType(int paramInt)
    throws PDFNetException
  {
    SetScaleType(__GetHandle(), paramInt);
  }
  
  public void setStaticCaptionText(String paramString)
    throws PDFNetException
  {
    SetStaticCaptionText(__GetHandle(), paramString);
  }
  
  public void setStaticIcon(Obj paramObj)
    throws PDFNetException
  {
    SetStaticIcon(__GetHandle(), paramObj.__GetHandle());
  }
  
  public void setTitle(String paramString)
    throws PDFNetException
  {
    SetTitle(__GetHandle(), paramString);
  }
  
  public void setTriggerAction(Obj paramObj)
    throws PDFNetException
  {
    SetTriggerAction(__GetHandle(), paramObj.__GetHandle());
  }
  
  public void setVIconLeftOver(double paramDouble)
    throws PDFNetException
  {
    SetVIconLeftOver(__GetHandle(), paramDouble);
  }
}
