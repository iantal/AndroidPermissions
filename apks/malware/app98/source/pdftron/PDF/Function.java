package pdftron.PDF;

import pdftron.Common.PDFNetException;
import pdftron.SDF.Obj;

public class Function
{
  public static final int e_exponential = 2;
  public static final int e_postscript = 4;
  public static final int e_sampled = 0;
  public static final int e_stitching = 3;
  private long a;
  private Object b;
  
  private Function(long paramLong, Object paramObject)
  {
    this.a = paramLong;
    this.b = paramObject;
  }
  
  public Function(Obj paramObj)
  {
    this.a = FunctionCreateFromObj(paramObj.__GetHandle());
    this.b = paramObj.__GetRefHandle();
  }
  
  private static native void Destroy(long paramLong);
  
  private static native double[] Eval(long paramLong, double[] paramArrayOfDouble);
  
  private static native long FunctionCreateFromObj(long paramLong);
  
  private static native int GetInputCardinality(long paramLong);
  
  private static native int GetOutputCardinality(long paramLong);
  
  private static native long GetSDFObj(long paramLong);
  
  private static native int GetType(long paramLong);
  
  static Function a(long paramLong, Object paramObject)
  {
    if (paramLong == 0L) {
      return null;
    }
    return new Function(paramLong, paramObject);
  }
  
  public void destroy()
  {
    if (this.a != 0L)
    {
      Destroy(this.a);
      this.a = 0L;
    }
  }
  
  public double[] eval(double[] paramArrayOfDouble)
    throws PDFNetException
  {
    return Eval(this.a, paramArrayOfDouble);
  }
  
  protected void finalize()
    throws Throwable
  {
    destroy();
  }
  
  public int getInputCardinality()
    throws PDFNetException
  {
    return GetInputCardinality(this.a);
  }
  
  public int getOutputCardinality()
    throws PDFNetException
  {
    return GetOutputCardinality(this.a);
  }
  
  public Obj getSDFObj()
  {
    return Obj.__Create(GetSDFObj(this.a), this.b);
  }
  
  public int getType()
    throws PDFNetException
  {
    return GetType(this.a);
  }
}
