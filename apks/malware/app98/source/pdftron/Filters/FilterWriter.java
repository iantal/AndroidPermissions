package pdftron.Filters;

import pdftron.Common.PDFNetException;

public class FilterWriter
{
  private Filter a;
  private long b;
  
  public FilterWriter()
    throws PDFNetException
  {
    this.b = FilterWriterCreate();
    this.a = null;
  }
  
  public FilterWriter(Filter paramFilter)
    throws PDFNetException
  {
    this.b = FilterWriterCreate(paramFilter.impl);
    this.a = paramFilter;
  }
  
  private static native void AttachFilter(long paramLong1, long paramLong2);
  
  private static native long Count(long paramLong);
  
  private static native void Destroy(long paramLong);
  
  private static native long FilterWriterCreate();
  
  private static native long FilterWriterCreate(long paramLong);
  
  private static native void Flush(long paramLong);
  
  private static native void FlushAll(long paramLong);
  
  private static native void Seek(long paramLong1, long paramLong2, int paramInt);
  
  private static native long Tell(long paramLong);
  
  private static native long WriteBuffer(long paramLong, byte[] paramArrayOfByte);
  
  private static native void WriteFilter(long paramLong1, long paramLong2);
  
  private static native void WriteInt(long paramLong, int paramInt);
  
  private static native void WriteLine(long paramLong, String paramString);
  
  private static native void WriteString(long paramLong, String paramString);
  
  private static native void WriteUChar(long paramLong, byte paramByte);
  
  public long __GetHandle()
  {
    return this.b;
  }
  
  public void attachFilter(Filter paramFilter)
    throws PDFNetException
  {
    AttachFilter(this.b, paramFilter.impl);
    this.a = paramFilter;
  }
  
  public long count()
    throws PDFNetException
  {
    return Count(this.b);
  }
  
  public void destroy()
    throws PDFNetException
  {
    if (this.b != 0L)
    {
      Destroy(this.b);
      this.b = 0L;
    }
  }
  
  protected void finalize()
    throws PDFNetException
  {
    destroy();
  }
  
  public void flush()
    throws PDFNetException
  {
    Flush(this.b);
  }
  
  public void flushAll()
    throws PDFNetException
  {
    FlushAll(this.b);
  }
  
  public Filter getAttachedFilter()
    throws PDFNetException
  {
    return this.a;
  }
  
  public void seek(long paramLong, int paramInt)
    throws PDFNetException
  {
    Seek(this.b, paramLong, paramInt);
  }
  
  public long tell()
    throws PDFNetException
  {
    return Tell(this.b);
  }
  
  public long writeBuffer(byte[] paramArrayOfByte)
    throws PDFNetException
  {
    return WriteBuffer(this.b, paramArrayOfByte);
  }
  
  public void writeFilter(FilterReader paramFilterReader)
    throws PDFNetException
  {
    WriteFilter(this.b, paramFilterReader.a);
  }
  
  public void writeInt(int paramInt)
    throws PDFNetException
  {
    WriteInt(this.b, paramInt);
  }
  
  public void writeLine(String paramString)
    throws PDFNetException
  {
    WriteLine(this.b, paramString);
  }
  
  public void writeString(String paramString)
    throws PDFNetException
  {
    WriteString(this.b, paramString);
  }
  
  public void writeUChar(byte paramByte)
    throws PDFNetException
  {
    WriteUChar(this.b, paramByte);
  }
}
