package org.apache.commons.io.input;

import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;

public class Tailer
  implements Runnable
{
  private final long delay;
  private final boolean end;
  private final File file;
  private final TailerListener listener;
  private volatile boolean run = true;
  
  public Tailer(File paramFile, TailerListener paramTailerListener)
  {
    this(paramFile, paramTailerListener, 1000L);
  }
  
  public Tailer(File paramFile, TailerListener paramTailerListener, long paramLong)
  {
    this(paramFile, paramTailerListener, 1000L, false);
  }
  
  public Tailer(File paramFile, TailerListener paramTailerListener, long paramLong, boolean paramBoolean)
  {
    this.file = paramFile;
    this.delay = paramLong;
    this.end = paramBoolean;
    this.listener = paramTailerListener;
    paramTailerListener.init(this);
  }
  
  public static Tailer create(File paramFile, TailerListener paramTailerListener)
  {
    return create(paramFile, paramTailerListener, 1000L, false);
  }
  
  public static Tailer create(File paramFile, TailerListener paramTailerListener, long paramLong)
  {
    return create(paramFile, paramTailerListener, paramLong, false);
  }
  
  public static Tailer create(File paramFile, TailerListener paramTailerListener, long paramLong, boolean paramBoolean)
  {
    paramFile = new Tailer(paramFile, paramTailerListener, paramLong, paramBoolean);
    paramTailerListener = new Thread(paramFile);
    paramTailerListener.setDaemon(true);
    paramTailerListener.start();
    return paramFile;
  }
  
  private String readLine(RandomAccessFile paramRandomAccessFile)
    throws IOException
  {
    StringBuffer localStringBuffer = new StringBuffer();
    int i = 0;
    for (;;)
    {
      int k = paramRandomAccessFile.read();
      if (k == -1) {
        break;
      }
      switch (k)
      {
      case 11: 
      case 12: 
      default: 
        int j = i;
        if (i != 0)
        {
          localStringBuffer.append('\r');
          j = 0;
        }
        localStringBuffer.append((char)k);
        i = j;
        break;
      case 10: 
        return localStringBuffer.toString();
      case 13: 
        i = 1;
      }
    }
    return null;
  }
  
  private long readLines(RandomAccessFile paramRandomAccessFile)
    throws IOException
  {
    long l = paramRandomAccessFile.getFilePointer();
    for (String str = readLine(paramRandomAccessFile); str != null; str = readLine(paramRandomAccessFile))
    {
      l = paramRandomAccessFile.getFilePointer();
      this.listener.handle(str);
    }
    paramRandomAccessFile.seek(l);
    return l;
  }
  
  public long getDelay()
  {
    return this.delay;
  }
  
  public File getFile()
  {
    return this.file;
  }
  
  /* Error */
  public void run()
  {
    // Byte code:
    //   0: lconst_0
    //   1: lstore_3
    //   2: lconst_0
    //   3: lstore 5
    //   5: aconst_null
    //   6: astore 10
    //   8: aload 10
    //   10: astore 12
    //   12: aload 10
    //   14: astore 13
    //   16: aload_0
    //   17: getfield 31	org/apache/commons/io/input/Tailer:run	Z
    //   20: istore 9
    //   22: lload_3
    //   23: lstore 7
    //   25: lload 5
    //   27: lstore_1
    //   28: aload 10
    //   30: astore 11
    //   32: iload 9
    //   34: ifeq +163 -> 197
    //   37: lload_3
    //   38: lstore 7
    //   40: lload 5
    //   42: lstore_1
    //   43: aload 10
    //   45: astore 11
    //   47: aload 10
    //   49: ifnonnull +148 -> 197
    //   52: aload 10
    //   54: astore 12
    //   56: aload 10
    //   58: astore 13
    //   60: new 72	java/io/RandomAccessFile
    //   63: dup
    //   64: aload_0
    //   65: getfield 33	org/apache/commons/io/input/Tailer:file	Ljava/io/File;
    //   68: ldc 112
    //   70: invokespecial 115	java/io/RandomAccessFile:<init>	(Ljava/io/File;Ljava/lang/String;)V
    //   73: astore 11
    //   75: aload 11
    //   77: astore 10
    //   79: aload 10
    //   81: ifnonnull +48 -> 129
    //   84: aload 10
    //   86: astore 12
    //   88: aload 10
    //   90: astore 13
    //   92: aload_0
    //   93: getfield 35	org/apache/commons/io/input/Tailer:delay	J
    //   96: invokestatic 118	java/lang/Thread:sleep	(J)V
    //   99: goto -91 -> 8
    //   102: astore 11
    //   104: aload 10
    //   106: astore 12
    //   108: aload 10
    //   110: astore 13
    //   112: aload_0
    //   113: getfield 39	org/apache/commons/io/input/Tailer:listener	Lorg/apache/commons/io/input/TailerListener;
    //   116: invokeinterface 121 1 0
    //   121: goto -42 -> 79
    //   124: astore 11
    //   126: goto -118 -> 8
    //   129: aload 10
    //   131: astore 12
    //   133: aload 10
    //   135: astore 13
    //   137: aload_0
    //   138: getfield 37	org/apache/commons/io/input/Tailer:end	Z
    //   141: ifeq +50 -> 191
    //   144: aload 10
    //   146: astore 12
    //   148: aload 10
    //   150: astore 13
    //   152: aload_0
    //   153: getfield 33	org/apache/commons/io/input/Tailer:file	Ljava/io/File;
    //   156: invokevirtual 126	java/io/File:length	()J
    //   159: lstore 5
    //   161: aload 10
    //   163: astore 12
    //   165: aload 10
    //   167: astore 13
    //   169: invokestatic 131	java/lang/System:currentTimeMillis	()J
    //   172: lstore_3
    //   173: aload 10
    //   175: astore 12
    //   177: aload 10
    //   179: astore 13
    //   181: aload 10
    //   183: lload 5
    //   185: invokevirtual 101	java/io/RandomAccessFile:seek	(J)V
    //   188: goto -180 -> 8
    //   191: lconst_0
    //   192: lstore 5
    //   194: goto -33 -> 161
    //   197: aload 11
    //   199: astore 12
    //   201: aload 11
    //   203: astore 13
    //   205: aload_0
    //   206: getfield 31	org/apache/commons/io/input/Tailer:run	Z
    //   209: ifeq +246 -> 455
    //   212: aload 11
    //   214: astore 12
    //   216: aload 11
    //   218: astore 13
    //   220: aload_0
    //   221: getfield 33	org/apache/commons/io/input/Tailer:file	Ljava/io/File;
    //   224: invokevirtual 126	java/io/File:length	()J
    //   227: lstore_3
    //   228: lload_3
    //   229: lload_1
    //   230: lcmp
    //   231: ifge +95 -> 326
    //   234: aload 11
    //   236: astore 12
    //   238: aload 11
    //   240: astore 13
    //   242: aload_0
    //   243: getfield 39	org/apache/commons/io/input/Tailer:listener	Lorg/apache/commons/io/input/TailerListener;
    //   246: invokeinterface 134 1 0
    //   251: aload 11
    //   253: astore 12
    //   255: aload 11
    //   257: astore 13
    //   259: new 72	java/io/RandomAccessFile
    //   262: dup
    //   263: aload_0
    //   264: getfield 33	org/apache/commons/io/input/Tailer:file	Ljava/io/File;
    //   267: ldc 112
    //   269: invokespecial 115	java/io/RandomAccessFile:<init>	(Ljava/io/File;Ljava/lang/String;)V
    //   272: astore 10
    //   274: lconst_0
    //   275: lstore_1
    //   276: aload 10
    //   278: astore 12
    //   280: aload 10
    //   282: astore 13
    //   284: aload 11
    //   286: invokestatic 140	org/apache/commons/io/IOUtils:closeQuietly	(Ljava/io/Closeable;)V
    //   289: aload 10
    //   291: astore 11
    //   293: goto -96 -> 197
    //   296: astore 10
    //   298: aload 11
    //   300: astore 10
    //   302: aload 10
    //   304: astore 12
    //   306: aload 10
    //   308: astore 13
    //   310: aload_0
    //   311: getfield 39	org/apache/commons/io/input/Tailer:listener	Lorg/apache/commons/io/input/TailerListener;
    //   314: invokeinterface 121 1 0
    //   319: aload 10
    //   321: astore 11
    //   323: goto -126 -> 197
    //   326: lload_3
    //   327: lload_1
    //   328: lcmp
    //   329: ifle +59 -> 388
    //   332: aload 11
    //   334: astore 12
    //   336: aload 11
    //   338: astore 13
    //   340: invokestatic 131	java/lang/System:currentTimeMillis	()J
    //   343: lstore_3
    //   344: aload 11
    //   346: astore 12
    //   348: aload 11
    //   350: astore 13
    //   352: aload_0
    //   353: aload 11
    //   355: invokespecial 142	org/apache/commons/io/input/Tailer:readLines	(Ljava/io/RandomAccessFile;)J
    //   358: lstore_1
    //   359: aload 11
    //   361: astore 12
    //   363: aload 11
    //   365: astore 13
    //   367: aload_0
    //   368: getfield 35	org/apache/commons/io/input/Tailer:delay	J
    //   371: invokestatic 118	java/lang/Thread:sleep	(J)V
    //   374: lload_3
    //   375: lstore 7
    //   377: goto -180 -> 197
    //   380: astore 10
    //   382: lload_3
    //   383: lstore 7
    //   385: goto -188 -> 197
    //   388: lload 7
    //   390: lstore_3
    //   391: aload 11
    //   393: astore 12
    //   395: aload 11
    //   397: astore 13
    //   399: aload_0
    //   400: getfield 33	org/apache/commons/io/input/Tailer:file	Ljava/io/File;
    //   403: lload 7
    //   405: invokestatic 148	org/apache/commons/io/FileUtils:isFileNewer	(Ljava/io/File;J)Z
    //   408: ifeq -49 -> 359
    //   411: aload 11
    //   413: astore 12
    //   415: aload 11
    //   417: astore 13
    //   419: aload 11
    //   421: lconst_0
    //   422: invokevirtual 101	java/io/RandomAccessFile:seek	(J)V
    //   425: aload 11
    //   427: astore 12
    //   429: aload 11
    //   431: astore 13
    //   433: invokestatic 131	java/lang/System:currentTimeMillis	()J
    //   436: lstore_3
    //   437: aload 11
    //   439: astore 12
    //   441: aload 11
    //   443: astore 13
    //   445: aload_0
    //   446: aload 11
    //   448: invokespecial 142	org/apache/commons/io/input/Tailer:readLines	(Ljava/io/RandomAccessFile;)J
    //   451: lstore_1
    //   452: goto -93 -> 359
    //   455: aload 11
    //   457: invokestatic 140	org/apache/commons/io/IOUtils:closeQuietly	(Ljava/io/Closeable;)V
    //   460: return
    //   461: astore 10
    //   463: aload 12
    //   465: astore 13
    //   467: aload 13
    //   469: astore 12
    //   471: aload_0
    //   472: getfield 39	org/apache/commons/io/input/Tailer:listener	Lorg/apache/commons/io/input/TailerListener;
    //   475: aload 10
    //   477: invokeinterface 151 2 0
    //   482: aload 13
    //   484: invokestatic 140	org/apache/commons/io/IOUtils:closeQuietly	(Ljava/io/Closeable;)V
    //   487: return
    //   488: astore 10
    //   490: aload 13
    //   492: astore 12
    //   494: aload 12
    //   496: invokestatic 140	org/apache/commons/io/IOUtils:closeQuietly	(Ljava/io/Closeable;)V
    //   499: aload 10
    //   501: athrow
    //   502: astore 10
    //   504: goto -10 -> 494
    //   507: astore 10
    //   509: goto -42 -> 467
    //   512: astore 11
    //   514: goto -212 -> 302
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	517	0	this	Tailer
    //   27	425	1	l1	long
    //   1	436	3	l2	long
    //   3	190	5	l3	long
    //   23	381	7	l4	long
    //   20	13	9	bool	boolean
    //   6	284	10	localObject1	Object
    //   296	1	10	localFileNotFoundException1	java.io.FileNotFoundException
    //   300	20	10	localObject2	Object
    //   380	1	10	localInterruptedException1	InterruptedException
    //   461	15	10	localException1	Exception
    //   488	12	10	localObject3	Object
    //   502	1	10	localObject4	Object
    //   507	1	10	localException2	Exception
    //   30	46	11	localObject5	Object
    //   102	1	11	localFileNotFoundException2	java.io.FileNotFoundException
    //   124	161	11	localInterruptedException2	InterruptedException
    //   291	165	11	localObject6	Object
    //   512	1	11	localFileNotFoundException3	java.io.FileNotFoundException
    //   10	485	12	localObject7	Object
    //   14	477	13	localObject8	Object
    // Exception table:
    //   from	to	target	type
    //   60	75	102	java/io/FileNotFoundException
    //   92	99	124	java/lang/InterruptedException
    //   259	274	296	java/io/FileNotFoundException
    //   367	374	380	java/lang/InterruptedException
    //   16	22	461	java/lang/Exception
    //   60	75	461	java/lang/Exception
    //   112	121	461	java/lang/Exception
    //   205	212	461	java/lang/Exception
    //   220	228	461	java/lang/Exception
    //   242	251	461	java/lang/Exception
    //   259	274	461	java/lang/Exception
    //   340	344	461	java/lang/Exception
    //   352	359	461	java/lang/Exception
    //   367	374	461	java/lang/Exception
    //   399	411	461	java/lang/Exception
    //   419	425	461	java/lang/Exception
    //   433	437	461	java/lang/Exception
    //   445	452	461	java/lang/Exception
    //   16	22	488	finally
    //   60	75	488	finally
    //   112	121	488	finally
    //   205	212	488	finally
    //   220	228	488	finally
    //   242	251	488	finally
    //   259	274	488	finally
    //   340	344	488	finally
    //   352	359	488	finally
    //   367	374	488	finally
    //   399	411	488	finally
    //   419	425	488	finally
    //   433	437	488	finally
    //   445	452	488	finally
    //   92	99	502	finally
    //   137	144	502	finally
    //   152	161	502	finally
    //   169	173	502	finally
    //   181	188	502	finally
    //   284	289	502	finally
    //   310	319	502	finally
    //   471	482	502	finally
    //   92	99	507	java/lang/Exception
    //   137	144	507	java/lang/Exception
    //   152	161	507	java/lang/Exception
    //   169	173	507	java/lang/Exception
    //   181	188	507	java/lang/Exception
    //   284	289	507	java/lang/Exception
    //   310	319	507	java/lang/Exception
    //   284	289	512	java/io/FileNotFoundException
  }
  
  public void stop()
  {
    this.run = false;
  }
}
