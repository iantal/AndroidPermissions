package com.a.a.a.e.l;

import java.lang.reflect.Array;
import java.math.BigInteger;

class k
{
  private static int a;
  private static int b;
  private static int c;
  private static int d;
  private static int[] e;
  private static int f;
  private static int g;
  private static int h;
  private static int i;
  private static int j;
  private static int k;
  private static int l;
  private static int m;
  private static long[][] n;
  private static int o;
  private static String p;
  private static String q;
  
  static
  {
    int i6 = 0;
    int i5 = 0;
    a = 42;
    b = 14;
    c = 7;
    d = 14;
    e = new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 57, 63, 64, 65, 66, 73, 74, 75, 76, 77, 78, 79, 82, 126, 127, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 210, 211, 212, 213, 214, 215, 216, 217, 220, 316, 317, 318, 319, 320, 322, 323, 326 };
    f = 0;
    g = 1;
    h = 2;
    i = 3;
    j = 4;
    k = 5;
    l = 6;
    m = 7;
    Object localObject1 = { 1491021L, 1979844L, 11L, 15L, 4L, 5L, 203L, 2408L };
    n = new long[][] { { 0L, 183063L, 17L, 9L, 6L, 3L, 6538L, 28L }, { 183064L, 820063L, 13L, 13L, 5L, 4L, 875L, 728L }, { 820064L, 1000775L, 9L, 17L, 3L, 6L, 28L, 6454L }, { 1000776L, 1491020L, 15L, 11L, 5L, 4L, 2415L, 203L }, localObject1, { 1979845L, 1996938L, 19L, 7L, 8L, 1L, 17094L, 1L }, { 1996939L, 2013570L, 7L, 19L, 1L, 8L, 1L, 16632L } };
    o = 2;
    localObject1 = "-\030>N}(\031".toCharArray();
    int i2 = localObject1.length;
    int i1;
    int i4;
    int i3;
    Object localObject2;
    if (i2 <= 1)
    {
      i1 = 0;
      i4 = i1;
      for (i3 = i1;; i3 = i2)
      {
        localObject2 = localObject1;
        int i7 = localObject2[i3];
        switch (i4 % 5)
        {
        default: 
          i1 = 72;
          localObject2[i3] = ((char)(i1 ^ i7));
          i4 += 1;
          if (i2 != 0) {
            break label1105;
          }
        }
      }
      label1105:
      i3 = i2;
      localObject2 = localObject1;
    }
    for (;;)
    {
      localObject1 = localObject2;
      i2 = i3;
      i1 = i4;
      if (i3 > i4) {
        break;
      }
      p = new String(localObject2).intern();
      localObject1 = "-\030>Hy,\033:Ny/\0219".toCharArray();
      i2 = localObject1.length;
      localObject2 = localObject1;
      i3 = i2;
      i4 = i6;
      if (i2 <= 1)
      {
        i1 = i5;
        label1167:
        i4 = i1;
        i3 = i1;
        label1171:
        localObject2 = localObject1;
        i5 = localObject2[i3];
        switch (i4 % 5)
        {
        default: 
          i1 = 72;
        }
      }
      for (;;)
      {
        localObject2[i3] = ((char)(i1 ^ i5));
        i4 += 1;
        if (i2 == 0)
        {
          i3 = i2;
          break label1171;
        }
        i3 = i2;
        localObject2 = localObject1;
        localObject1 = localObject2;
        i2 = i3;
        i1 = i4;
        if (i3 > i4) {
          break label1167;
        }
        q = new String(localObject2).intern();
        return;
        i1 = 31;
        break;
        i1 = 40;
        break;
        i1 = 15;
        break;
        i1 = 125;
        break;
        i1 = 31;
        continue;
        i1 = 40;
        continue;
        i1 = 15;
        continue;
        i1 = 125;
      }
      i4 = 0;
      localObject2 = localObject1;
      i3 = i2;
    }
  }
  
  k() {}
  
  private static int a(long paramLong)
  {
    boolean bool = a.I;
    int i1 = 0;
    do
    {
      if (i1 >= n.length) {
        break;
      }
      if (paramLong <= n[i1][g]) {
        return i1;
      }
      i1 += 1;
    } while (!bool);
    return -1;
  }
  
  private static int a(int[][] paramArrayOfInt)
  {
    boolean bool = a.I;
    int i2 = 1;
    int i1 = 0;
    int i4 = 0;
    int i3;
    do
    {
      i3 = i1;
      if (i4 >= o) {
        break;
      }
      int i5 = 0;
      int i6;
      do
      {
        i6 = i2;
        i3 = i6;
        i2 = i1;
        if (i5 >= b) {
          break;
        }
        i2 = paramArrayOfInt[i4][i5];
        i3 = i6 * 3 % 89;
        i6 = (i1 + i2 * i6) % 89;
        i5 += 1;
        i2 = i3;
        i1 = i6;
      } while (!bool);
      i2 = i6;
      i1 = i3;
      i3 = i2;
      i4 += 1;
      i2 = i1;
      i1 = i3;
    } while (!bool);
    return i3;
  }
  
  private static int[] a(int paramInt)
  {
    boolean bool = a.I;
    paramInt = e[paramInt];
    int[] arrayOfInt1 = l.a(paramInt / 21, 8, 6, 3, true);
    int[] arrayOfInt2 = l.a(paramInt % 21, 8, 6, 3, true);
    int[] arrayOfInt3 = new int[d];
    paramInt = 0;
    do
    {
      if (paramInt >= 6) {
        break;
      }
      arrayOfInt3[(paramInt * 2)] = arrayOfInt1[paramInt];
      arrayOfInt3[(paramInt * 2 + 1)] = arrayOfInt2[paramInt];
      paramInt += 1;
    } while (!bool);
    arrayOfInt3[(d - 2)] = 1;
    arrayOfInt3[(d - 1)] = 1;
    return arrayOfInt3;
  }
  
  public static int[] a(int[] paramArrayOfInt, boolean paramBoolean)
  {
    paramArrayOfInt = a(b(paramArrayOfInt, paramBoolean));
    return a(paramArrayOfInt, a(paramArrayOfInt));
  }
  
  private static int[] a(int[][] paramArrayOfInt, int paramInt)
  {
    int i4 = 0;
    boolean bool = a.I;
    int[] arrayOfInt1 = new int[a];
    int i2 = 0;
    int i1 = 0;
    int i3;
    if (i2 < b)
    {
      i3 = i1 + 1;
      arrayOfInt1[i1] = paramArrayOfInt[0][i2];
      i2 += 1;
      if (bool) {
        i1 = i3;
      }
    }
    for (;;)
    {
      int[] arrayOfInt2 = a(paramInt);
      i2 = 0;
      paramInt = i1;
      i1 = i2;
      if (i1 < d)
      {
        i2 = paramInt + 1;
        arrayOfInt1[paramInt] = arrayOfInt2[i1];
        i1 += 1;
        if (bool)
        {
          paramInt = i2;
          i1 = i4;
        }
      }
      for (;;)
      {
        if (i1 < b)
        {
          arrayOfInt1[paramInt] = paramArrayOfInt[1][i1];
          i1 += 1;
          if (!bool) {}
        }
        else
        {
          return arrayOfInt1;
        }
        paramInt += 1;
        continue;
        paramInt = i2;
        break;
        i1 = i4;
      }
      i1 = i3;
      break;
    }
  }
  
  private static int[][] a(long[] paramArrayOfLong)
  {
    boolean bool = a.I;
    int i1 = o;
    int i2 = b;
    int[][] arrayOfInt = (int[][])Array.newInstance(Integer.TYPE, new int[] { i1, i2 });
    i1 = 0;
    do
    {
      if (i1 >= o) {
        break;
      }
      i2 = a(paramArrayOfLong[i1]);
      int i3 = (int)n[i2][f];
      long l1 = (paramArrayOfLong[i1] - i3) / n[i2][m];
      long l2 = paramArrayOfLong[i1];
      long l3 = i3;
      long l4 = n[i2][m];
      int[] arrayOfInt1 = l.a((int)l1, (int)n[i2][h], c, (int)n[i2][j], true);
      int[] arrayOfInt2 = l.a((int)((l2 - l3) % l4), (int)n[i2][i], c, (int)n[i2][k], false);
      i2 = 0;
      do
      {
        if (i2 >= c) {
          break;
        }
        arrayOfInt[i1][(i2 * 2)] = arrayOfInt1[i2];
        arrayOfInt[i1][(i2 * 2 + 1)] = arrayOfInt2[i2];
        i2 += 1;
      } while (!bool);
      i1 += 1;
    } while (!bool);
    return arrayOfInt;
  }
  
  private static long[] b(int[] paramArrayOfInt, boolean paramBoolean)
  {
    boolean bool = a.I;
    Object localObject1 = "";
    int i1 = 0;
    do
    {
      localObject2 = localObject1;
      if (i1 >= paramArrayOfInt.length) {
        break;
      }
      localObject2 = (String)localObject1 + (char)paramArrayOfInt[i1];
      i1 += 1;
      localObject1 = localObject2;
    } while (!bool);
    localObject1 = new BigInteger((String)localObject2);
    paramArrayOfInt = (int[])localObject1;
    if (paramBoolean) {
      paramArrayOfInt = ((BigInteger)localObject1).add(new BigInteger(q));
    }
    localObject1 = paramArrayOfInt.divide(new BigInteger(p));
    paramArrayOfInt = paramArrayOfInt.mod(new BigInteger(p));
    Object localObject2 = new long[o];
    localObject2[0] = ((BigInteger)localObject1).longValue();
    localObject2[1] = paramArrayOfInt.longValue();
    return localObject2;
  }
}
