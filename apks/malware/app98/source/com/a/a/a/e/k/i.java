package com.a.a.a.e.k;

class i
{
  i() {}
  
  protected static void a(int[] paramArrayOfInt, int paramInt1, int paramInt2, b paramB)
  {
    boolean bool = a.W;
    paramArrayOfInt = a(paramArrayOfInt, paramInt1, paramInt2);
    paramInt1 = 0;
    do
    {
      if (paramInt1 >= paramArrayOfInt.length - 1) {
        break;
      }
      paramB.a(paramArrayOfInt[paramInt1], 10);
      paramInt1 += 1;
    } while (!bool);
    int i = paramArrayOfInt[(paramArrayOfInt.length - 1)];
    if (paramInt2 % 3 != 0) {
      if (paramInt2 % 3 == 1) {
        paramInt1 = 4;
      }
    }
    for (;;)
    {
      if (paramInt1 == 4)
      {
        paramB.a(i, 4);
        if (!bool) {}
      }
      else if (paramInt1 == 7)
      {
        paramB.a(i, 7);
      }
      return;
      paramInt1 = 7;
      continue;
      paramInt1 = 0;
    }
  }
  
  protected static boolean a(int paramInt)
  {
    return (paramInt >= 48) && (paramInt <= 57);
  }
  
  protected static boolean a(int[] paramArrayOfInt)
  {
    boolean bool = a.W;
    int i = 0;
    do
    {
      if (i >= paramArrayOfInt.length) {
        break;
      }
      if (!a(paramArrayOfInt[i])) {
        return false;
      }
      i += 1;
    } while (!bool);
    return true;
  }
  
  private static int[] a(int[] paramArrayOfInt, int paramInt1, int paramInt2)
  {
    int j = 0;
    boolean bool = a.W;
    int k = paramInt2 / 3;
    int[] arrayOfInt = new int[k + 1];
    int i = 0;
    do
    {
      if (i >= k) {
        break;
      }
      arrayOfInt[i] = (b(paramArrayOfInt[(i * 3 + paramInt1)]) * 100 + b(paramArrayOfInt[(i * 3 + paramInt1 + 1)]) * 10 + b(paramArrayOfInt[(i * 3 + paramInt1 + 2)]));
      i += 1;
    } while (!bool);
    arrayOfInt[k] = 0;
    i = j;
    do
    {
      if (i >= paramInt2 % 3) {
        break;
      }
      arrayOfInt[k] *= 10;
      arrayOfInt[k] += b(paramArrayOfInt[(k * 3 + paramInt1 + i)]);
      i += 1;
    } while (!bool);
    return arrayOfInt;
  }
  
  private static int b(int paramInt)
  {
    return paramInt - 48;
  }
}
