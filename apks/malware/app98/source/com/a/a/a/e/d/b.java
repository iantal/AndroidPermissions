package com.a.a.a.e.d;

import com.a.a.a.b.a;
import com.a.a.a.b.i;
import com.a.a.a.d.d;
import com.a.a.a.e.p;

public class b
  extends p
{
  private static int D = 1;
  private static int E = 3;
  private static int F = 5;
  private static char[] G = { 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 };
  private static int[] H = { D, D, D, D };
  private static int[] I = { E, D, D };
  private static int[][] J;
  public static boolean K;
  
  static
  {
    int i = D;
    int j = D;
    int k = E;
    int m = E;
    int n = D;
    int[] arrayOfInt1 = { E, D, D, D, E };
    int i1 = D;
    int i2 = E;
    int i3 = D;
    int i4 = D;
    int i5 = E;
    int i6 = E;
    int i7 = E;
    int i8 = D;
    int i9 = D;
    int i10 = D;
    int i11 = D;
    int i12 = D;
    int i13 = E;
    int i14 = D;
    int i15 = E;
    int[] arrayOfInt2 = { E, D, E, D, D };
    int i16 = D;
    int i17 = E;
    int i18 = E;
    int i19 = D;
    int i20 = D;
    int i21 = D;
    int i22 = D;
    int i23 = D;
    int i24 = E;
    int i25 = E;
    int i26 = E;
    int i27 = D;
    int i28 = D;
    int i29 = E;
    int i30 = D;
    int i31 = D;
    int i32 = E;
    int i33 = D;
    int i34 = E;
    int i35 = D;
    J = new int[][] { { i, j, k, m, n }, arrayOfInt1, { i1, i2, i3, i4, i5 }, { i6, i7, i8, i9, i10 }, { i11, i12, i13, i14, i15 }, arrayOfInt2, { i16, i17, i18, i19, i20 }, { i21, i22, i23, i24, i25 }, { i26, i27, i28, i29, i30 }, { i31, i32, i33, i34, i35 } };
  }
  
  public b()
  {
    this.e = 19;
    this.u = c;
    this.v = c;
    this.w = c;
    this.x = c;
    this.y = 2;
    this.z = 0;
  }
  
  private int a(int[] paramArrayOfInt)
  {
    return H.length + I.length + paramArrayOfInt.length * F;
  }
  
  private int a(a[] paramArrayOfA, int paramInt, int[] paramArrayOfInt, boolean paramBoolean)
  {
    paramBoolean = K;
    int i = 0;
    int j;
    do
    {
      j = paramInt;
      if (i >= paramArrayOfInt.length) {
        break;
      }
      if (i % 2 == 0)
      {
        paramArrayOfA[paramInt].a(0);
        if (!paramBoolean) {}
      }
      else
      {
        paramArrayOfA[paramInt].a(1);
      }
      paramArrayOfA[paramInt].d(paramArrayOfInt[i]);
      paramArrayOfA[paramInt].a(false);
      j = paramInt + 1;
      i += 1;
      paramInt = j;
    } while (!paramBoolean);
    return j;
  }
  
  protected boolean a(int paramInt)
  {
    return (paramInt >= 48) && (paramInt <= 57);
  }
  
  public int[] a(int[] paramArrayOfInt)
  {
    return d.a(paramArrayOfInt);
  }
  
  public i[] a(int[] paramArrayOfInt, boolean paramBoolean)
  {
    Object localObject = paramArrayOfInt;
    if (paramBoolean)
    {
      localObject = paramArrayOfInt;
      if (this.r) {
        localObject = b(paramArrayOfInt);
      }
    }
    paramArrayOfInt = c((int[])localObject);
    localObject = new i[1];
    localObject[0] = new i();
    localObject[0].q = com.a.a.a.e.n.b.a(paramArrayOfInt);
    localObject[0].w = this.s;
    return localObject;
  }
  
  public int[] b(int[] paramArrayOfInt)
  {
    int i = 0;
    boolean bool = K;
    int n = paramArrayOfInt.length;
    int k = 0;
    for (;;)
    {
      int j = i;
      int i1;
      if (k < n)
      {
        i1 = paramArrayOfInt[(n - 1 - k)];
        if (k % 2 != 0) {
          break label96;
        }
      }
      label96:
      for (int m = 3;; m = 1)
      {
        j = i;
        if (i1 >= 48)
        {
          j = i;
          if (i1 <= 57) {
            j = i + m * (i1 - 48);
          }
        }
        if (!bool) {
          break;
        }
        return com.a.a.a.e.n.b.a(paramArrayOfInt, (10 - j % 10) % 10 + 48);
      }
      k += 1;
      i = j;
    }
  }
  
  public int[] c(d paramD)
  {
    return paramD.a(true);
  }
  
  protected int[] c(int[] paramArrayOfInt)
  {
    int[] arrayOfInt = paramArrayOfInt;
    if (paramArrayOfInt.length % 2 == 1)
    {
      arrayOfInt = new int[paramArrayOfInt.length + 1];
      arrayOfInt[0] = 48;
      System.arraycopy(paramArrayOfInt, 0, arrayOfInt, 1, paramArrayOfInt.length);
    }
    return arrayOfInt;
  }
  
  public a[] c(int[] paramArrayOfInt)
  {
    boolean bool = K;
    paramArrayOfInt = c(paramArrayOfInt);
    a[] arrayOfA = new a[a(paramArrayOfInt)];
    int i = 0;
    do
    {
      if (i >= arrayOfA.length) {
        break;
      }
      arrayOfA[i] = new a();
      i += 1;
    } while (!bool);
    i = a(arrayOfA, 0, H, false);
    int k = 0;
    int j = i;
    int i1;
    int i2;
    int m;
    if (k < paramArrayOfInt.length)
    {
      i1 = paramArrayOfInt[k] - 48;
      i2 = paramArrayOfInt[(k + 1)] - 48;
      if (i1 < 0) {
        break label246;
      }
      m = 1;
      label102:
      if (i1 > 9) {
        break label252;
      }
      n = 1;
      label112:
      j = i;
      if ((n | m) != 0)
      {
        if (i2 < 0) {
          break label258;
        }
        m = 1;
        label130:
        if (i2 > 9) {
          break label264;
        }
      }
    }
    label246:
    label252:
    label258:
    label264:
    for (int n = 1;; n = 0)
    {
      j = i;
      if ((n | m) != 0)
      {
        int[] arrayOfInt = new int[F * 2];
        j = 0;
        do
        {
          if (j >= F) {
            break;
          }
          arrayOfInt[(j * 2)] = J[i1][j];
          arrayOfInt[(j * 2 + 1)] = J[i2][j];
          j += 1;
        } while (!bool);
        j = a(arrayOfA, i, arrayOfInt, false);
      }
      k += 2;
      i = j;
      if (!bool) {
        break;
      }
      a(arrayOfA, j, I, true);
      return arrayOfA;
      m = 0;
      break label102;
      n = 0;
      break label112;
      m = 0;
      break label130;
    }
  }
}
