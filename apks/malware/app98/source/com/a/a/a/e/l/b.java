package com.a.a.a.e.l;

import java.lang.reflect.Array;

public class b
  extends a
{
  private static int J = 3;
  
  public b()
  {
    this.e = 49;
    this.m = false;
    this.u = b;
    this.v = c;
    this.w = b;
    this.x = b;
    this.y = 0;
    this.z = 0;
  }
  
  private int b(com.a.a.a.b.a[] paramArrayOfA, int paramInt, int[] paramArrayOfInt, boolean paramBoolean)
  {
    boolean bool = a.I;
    int i = 0;
    int j;
    do
    {
      j = paramInt;
      if (i >= paramArrayOfInt.length) {
        break;
      }
      if (paramArrayOfInt[i] == 1)
      {
        paramArrayOfA[paramInt].a(0);
        if (!bool) {}
      }
      else
      {
        paramArrayOfA[paramInt].a(1);
      }
      paramArrayOfA[paramInt].d(1.0F);
      if (paramBoolean) {
        paramArrayOfA[paramInt].f(1.0F);
      }
      paramArrayOfA[paramInt].a(false);
      j = paramInt + 1;
      i += 1;
      paramInt = j;
    } while (!bool);
    return j;
  }
  
  public com.a.a.a.b.a[] c(int[] paramArrayOfInt)
  {
    return null;
  }
  
  public com.a.a.a.b.a[][] d(int[] paramArrayOfInt)
  {
    boolean bool = a.I;
    com.a.a.a.b.a[][] arrayOfA = (com.a.a.a.b.a[][])Array.newInstance(com.a.a.a.b.a.class, new int[] { J, 50 });
    int i = J;
    int[][] arrayOfInt = (int[][])Array.newInstance(Integer.TYPE, new int[] { i, 50 });
    i = 0;
    do
    {
      if (i >= J) {
        break;
      }
      arrayOfA[i] = new com.a.a.a.b.a[50];
      int j = 0;
      do
      {
        if (j >= arrayOfA[i].length) {
          break;
        }
        arrayOfA[i][j] = new com.a.a.a.b.a();
        j += 1;
      } while (!bool);
      arrayOfInt[i] = new int[50];
      i += 1;
    } while (!bool);
    h.a(arrayOfInt, g.a(paramArrayOfInt));
    b(arrayOfA[0], 0, arrayOfInt[0], false);
    b(arrayOfA[1], 0, arrayOfInt[1], true);
    b(arrayOfA[2], 0, arrayOfInt[2], false);
    return arrayOfA;
  }
}
