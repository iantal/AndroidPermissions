package com.revmob.internal;

import android.app.Activity;
import android.content.Intent;
import android.net.Uri;
import android.os.AsyncTask;
import android.webkit.WebView;
import com.revmob.RevMobAdsListener;
import com.revmob.ads.fullscreen.FullscreenActivity;
import com.revmob.ads.fullscreen.internal.FullscreenWebview;
import com.revmob.client.AdData;

public class MarketAsyncManager
  extends AsyncTask<Void, Void, Void>
{
  private Activity activity;
  private AdData data;
  private MarketAsyncManagerListener listener;
  private RevMobAdsListener publisherListener;
  
  public MarketAsyncManager(Activity paramActivity, AdData paramAdData, RevMobAdsListener paramRevMobAdsListener)
  {
    this(paramActivity, paramAdData, paramRevMobAdsListener, null);
  }
  
  public MarketAsyncManager(Activity paramActivity, AdData paramAdData, RevMobAdsListener paramRevMobAdsListener, MarketAsyncManagerListener paramMarketAsyncManagerListener)
  {
    this.activity = paramActivity;
    this.publisherListener = paramRevMobAdsListener;
    this.data = paramAdData;
    this.listener = paramMarketAsyncManagerListener;
  }
  
  protected Void doInBackground(Void... paramVarArgs)
  {
    if (this.publisherListener != null) {
      this.publisherListener.onRevMobAdClicked();
    }
    openAdvertisement();
    return null;
  }
  
  protected void onPostExecute(Void paramVoid)
  {
    if (this.listener != null) {
      this.listener.onPostExecute();
    }
  }
  
  protected void onPreExecute()
  {
    if (this.listener != null) {
      this.listener.onPreExecute();
    }
  }
  
  public void openAdvertisement()
  {
    if (this.data.shouldFollowRedirect())
    {
      openClickUrlFollowingRedirect(this.data.getClickUrl());
      return;
    }
    openClickUrlDirectly(this.data.getClickUrl());
  }
  
  public void openClickUrlDirectly(String paramString)
  {
    if (this.data.isOpenInside())
    {
      openUrlInTheWebViewWithPost(this.data.getClickUrl());
      return;
    }
    openUrlInTheBrowser(this.data.getClickUrl());
  }
  
  public void openClickUrlFollowingRedirect(String paramString)
  {
    String str = new MarketRedirector(paramString).getMarketUrl();
    if ((str != null) && (!paramString.equals(str)))
    {
      boolean bool = FullscreenActivity.isFullscreenActivityAvailable(this.activity).booleanValue();
      if ((this.data.getAppOrSite() == "site") && (this.data.isOpenInside()) && (bool)) {
        openUrlInTheWebView(str);
      }
    }
    else
    {
      return;
    }
    openUrlInTheBrowser(str);
  }
  
  public void openUrlInTheBrowser(String paramString)
  {
    paramString = new Intent("android.intent.action.VIEW", Uri.parse(paramString));
    this.activity.startActivity(paramString);
  }
  
  public void openUrlInTheWebView(final String paramString)
  {
    this.activity.runOnUiThread(new Runnable()
    {
      public void run()
      {
        Intent localIntent = new Intent(MarketAsyncManager.this.activity, FullscreenActivity.class);
        localIntent.putExtra("marketURL", paramString);
        MarketAsyncManager.this.activity.startActivityForResult(localIntent, 0);
      }
    });
  }
  
  public void openUrlInTheWebViewWithPost(final String paramString)
  {
    this.activity.runOnUiThread(new Runnable()
    {
      public void run()
      {
        new FullscreenWebview(MarketAsyncManager.this.activity, new RevMobWebViewClient(null, null)
        {
          public void onPageFinished(WebView paramAnonymous2WebView, String paramAnonymous2String)
          {
            MarketAsyncManager.this.openUrlInTheBrowser(paramAnonymous2String);
          }
        }).postUrl(paramString, "".getBytes());
      }
    });
  }
  
  public static abstract interface MarketAsyncManagerListener
  {
    public abstract void onPostExecute();
    
    public abstract void onPreExecute();
  }
}
