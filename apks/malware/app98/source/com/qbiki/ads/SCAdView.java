package com.qbiki.ads;

import android.app.Activity;
import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.AsyncTask;
import android.util.AttributeSet;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import com.qbiki.seattleclouds.App;
import com.qbiki.seattleclouds.AppConfig;
import com.qbiki.util.DeviceUtil;
import com.qbiki.util.DialogUtil;
import com.qbiki.util.asyncrequester.Requester;
import com.qbiki.util.asyncrequester.ResponseListener;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import org.apache.http.HttpResponse;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class SCAdView
  extends RelativeLayout
{
  private static final String ADS_SERVER_HOSTNAME = App.serverHostName;
  private static final String AD_SOURCE_URL = "http://" + ADS_SERVER_HOSTNAME + "/getscad.ashx";
  private static final String AD_STATS_URL = "http://" + ADS_SERVER_HOSTNAME + "/scadstatspost.ashx";
  public static final int BANNER_HEIGHT = 50;
  public static final int BANNER_WIDTH = 320;
  protected static final boolean DEBUG = false;
  private static final int DEFAULT_AUTOREFRESH_INTERVAL = 30000;
  private static final int REQUEST_TIMEOUT = 25000;
  private static final String TAG = "SCAdView";
  private AdGetterAsyncTask mAdGetterTask;
  private int mAdId = -1;
  private int mAutorefreshInterval = 30000;
  private ImageView mBannerImageView;
  private Context mContext;
  private Timer mRefreshTimer;
  
  public SCAdView(Context paramContext)
  {
    super(paramContext);
    init(paramContext);
  }
  
  public SCAdView(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    init(paramContext);
  }
  
  public SCAdView(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
    init(paramContext);
  }
  
  private void init(Context paramContext)
  {
    this.mContext = paramContext;
    setBackgroundColor(Color.argb(0, 0, 0, 0));
    int i = App.appConfig.getScAdRefreshRate();
    if (i > 0) {
      this.mAutorefreshInterval = (i * 1000);
    }
  }
  
  private void loadAdInternal()
  {
    Log.i("SCAdView", "Loading ad...");
    Object localObject = "";
    try
    {
      String str = AD_SOURCE_URL + "?username=" + URLEncoder.encode(App.username, "UTF-8") + "&appid=" + URLEncoder.encode(App.appId, "UTF-8") + "&publisherid=" + URLEncoder.encode(App.publisherId, "UTF-8");
      localObject = str;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      for (;;) {}
    }
    if (this.mAdGetterTask != null) {
      this.mAdGetterTask.cancel(true);
    }
    this.mAdGetterTask = new AdGetterAsyncTask(null);
    this.mAdGetterTask.execute(new String[] { localObject });
  }
  
  private JSONArray logErrorsAndWarnings(JSONObject paramJSONObject)
    throws JSONException
  {
    JSONArray localJSONArray = paramJSONObject.getJSONArray("errors");
    int i = 0;
    JSONObject localJSONObject;
    while (i < localJSONArray.length())
    {
      localJSONObject = localJSONArray.getJSONObject(i);
      Log.w("SCAdView", "SCAd error: " + localJSONObject.getString("code") + " - " + localJSONObject.getString("message"));
      i += 1;
    }
    paramJSONObject = paramJSONObject.getJSONArray("warnings");
    i = 0;
    while (i < paramJSONObject.length())
    {
      localJSONObject = paramJSONObject.getJSONObject(i);
      Log.i("SCAdView", "SCAd warning: " + localJSONObject.getString("code") + " - " + localJSONObject.getString("message"));
      i += 1;
    }
    return localJSONArray;
  }
  
  private void sendAdClick()
  {
    HttpPost localHttpPost = new HttpPost(AD_STATS_URL);
    ArrayList localArrayList = new ArrayList(1);
    localArrayList.add(new BasicNameValuePair("adid", this.mAdId + ""));
    try
    {
      localHttpPost.setEntity(new UrlEncodedFormEntity(localArrayList));
      Requester.sendRequest(localHttpPost, new ResponseListener()
      {
        public void onResponseReceived(HttpResponse paramAnonymousHttpResponse) {}
        
        public void onResponseTimeout() {}
      });
      return;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      for (;;) {}
    }
  }
  
  private void showBannerAd(Drawable paramDrawable, final String paramString)
  {
    if (paramDrawable == null) {
      Log.w("SCAdView", "SC ad image invalid");
    }
    if (paramString == null) {
      Log.w("SCAdView", "SC ad action url invalid");
    }
    if ((paramDrawable == null) || (paramString == null)) {
      return;
    }
    if (this.mBannerImageView == null)
    {
      ViewGroup.LayoutParams localLayoutParams = getLayoutParams();
      localLayoutParams.width = DeviceUtil.dpToPx(this.mContext, 320.0F);
      localLayoutParams.height = DeviceUtil.dpToPx(this.mContext, 50.0F);
      if ((localLayoutParams instanceof LinearLayout.LayoutParams)) {
        ((LinearLayout.LayoutParams)localLayoutParams).gravity = 17;
      }
      setLayoutParams(localLayoutParams);
      this.mBannerImageView = new ImageView(this.mContext);
      this.mBannerImageView.setScaleType(ImageView.ScaleType.FIT_XY);
      addView(this.mBannerImageView, new RelativeLayout.LayoutParams(-1, -1));
    }
    this.mBannerImageView.setImageDrawable(paramDrawable);
    this.mBannerImageView.setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        if (paramString.contains("://")) {}
        for (;;)
        {
          try
          {
            paramAnonymousView = new Intent("android.intent.action.VIEW");
            paramAnonymousView.setFlags(268435456);
            paramAnonymousView.setData(Uri.parse(paramString));
            SCAdView.this.mContext.startActivity(paramAnonymousView);
            SCAdView.this.sendAdClick();
            return;
          }
          catch (ActivityNotFoundException paramAnonymousView)
          {
            Log.w("SCAdView", "Cannot open banner action URL: " + paramString + ", ex: " + paramAnonymousView.toString(), paramAnonymousView);
            continue;
          }
          if (App.resourceExists(paramString))
          {
            if ((SCAdView.this.mContext instanceof Activity)) {
              App.showPageWithId(paramString, (Activity)SCAdView.this.mContext);
            }
          }
          else
          {
            paramAnonymousView = String.format(SCAdView.this.mContext.getString(2131361928), new Object[] { paramString });
            DialogUtil.showAlert(SCAdView.this.mContext, 2131361916, paramAnonymousView);
          }
        }
      }
    });
    Log.i("SCAdView", "New ad received");
  }
  
  public void destroy()
  {
    if (this.mRefreshTimer != null) {
      this.mRefreshTimer.cancel();
    }
  }
  
  public void loadAd()
  {
    if (this.mRefreshTimer != null) {
      this.mRefreshTimer.cancel();
    }
    this.mRefreshTimer = new Timer();
    this.mRefreshTimer.schedule(new TimerTask()
    {
      public void run()
      {
        SCAdView.this.loadAdInternal();
      }
    }, 0L, this.mAutorefreshInterval);
  }
  
  private class AdGetterAsyncTask
    extends AsyncTask<String, Void, Drawable>
  {
    private String mBannerActionUrl = null;
    
    private AdGetterAsyncTask() {}
    
    /* Error */
    protected Drawable doInBackground(String... paramVarArgs)
    {
      // Byte code:
      //   0: aload_0
      //   1: invokevirtual 39	com/qbiki/ads/SCAdView$AdGetterAsyncTask:isCancelled	()Z
      //   4: ifeq +7 -> 11
      //   7: aconst_null
      //   8: astore_1
      //   9: aload_1
      //   10: areturn
      //   11: aconst_null
      //   12: astore 15
      //   14: aconst_null
      //   15: astore 16
      //   17: aconst_null
      //   18: astore 17
      //   20: aconst_null
      //   21: astore 18
      //   23: aconst_null
      //   24: astore 19
      //   26: aconst_null
      //   27: astore 6
      //   29: aconst_null
      //   30: astore 11
      //   32: aconst_null
      //   33: astore 13
      //   35: aconst_null
      //   36: astore 14
      //   38: aconst_null
      //   39: astore 5
      //   41: aconst_null
      //   42: astore 9
      //   44: aload 6
      //   46: astore 7
      //   48: aload 16
      //   50: astore 8
      //   52: aload 17
      //   54: astore 10
      //   56: aload 18
      //   58: astore 12
      //   60: aload 19
      //   62: astore 4
      //   64: new 41	java/net/URL
      //   67: dup
      //   68: aload_1
      //   69: iconst_0
      //   70: aaload
      //   71: invokespecial 44	java/net/URL:<init>	(Ljava/lang/String;)V
      //   74: invokevirtual 48	java/net/URL:openConnection	()Ljava/net/URLConnection;
      //   77: checkcast 50	java/net/HttpURLConnection
      //   80: astore_1
      //   81: aload 6
      //   83: astore 7
      //   85: aload_1
      //   86: astore 9
      //   88: aload 16
      //   90: astore 8
      //   92: aload_1
      //   93: astore 11
      //   95: aload 17
      //   97: astore 10
      //   99: aload_1
      //   100: astore 13
      //   102: aload 18
      //   104: astore 12
      //   106: aload_1
      //   107: astore 14
      //   109: aload 19
      //   111: astore 4
      //   113: aload_1
      //   114: astore 5
      //   116: aload_1
      //   117: sipush 25000
      //   120: invokevirtual 54	java/net/HttpURLConnection:setConnectTimeout	(I)V
      //   123: aload 6
      //   125: astore 7
      //   127: aload_1
      //   128: astore 9
      //   130: aload 16
      //   132: astore 8
      //   134: aload_1
      //   135: astore 11
      //   137: aload 17
      //   139: astore 10
      //   141: aload_1
      //   142: astore 13
      //   144: aload 18
      //   146: astore 12
      //   148: aload_1
      //   149: astore 14
      //   151: aload 19
      //   153: astore 4
      //   155: aload_1
      //   156: astore 5
      //   158: aload_1
      //   159: sipush 25000
      //   162: invokevirtual 57	java/net/HttpURLConnection:setReadTimeout	(I)V
      //   165: aload 6
      //   167: astore 7
      //   169: aload_1
      //   170: astore 9
      //   172: aload 16
      //   174: astore 8
      //   176: aload_1
      //   177: astore 11
      //   179: aload 17
      //   181: astore 10
      //   183: aload_1
      //   184: astore 13
      //   186: aload 18
      //   188: astore 12
      //   190: aload_1
      //   191: astore 14
      //   193: aload 19
      //   195: astore 4
      //   197: aload_1
      //   198: astore 5
      //   200: aload_1
      //   201: invokevirtual 61	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
      //   204: astore 6
      //   206: aload 6
      //   208: astore 7
      //   210: aload_1
      //   211: astore 9
      //   213: aload 6
      //   215: astore 8
      //   217: aload_1
      //   218: astore 11
      //   220: aload 6
      //   222: astore 10
      //   224: aload_1
      //   225: astore 13
      //   227: aload 6
      //   229: astore 12
      //   231: aload_1
      //   232: astore 14
      //   234: aload 6
      //   236: astore 4
      //   238: aload_1
      //   239: astore 5
      //   241: new 63	org/json/JSONObject
      //   244: dup
      //   245: aload 6
      //   247: sipush 1024
      //   250: invokestatic 69	com/qbiki/util/DataUtil:readString	(Ljava/io/InputStream;I)Ljava/lang/String;
      //   253: invokespecial 70	org/json/JSONObject:<init>	(Ljava/lang/String;)V
      //   256: astore 16
      //   258: aload 6
      //   260: astore 7
      //   262: aload_1
      //   263: astore 9
      //   265: aload 6
      //   267: astore 8
      //   269: aload_1
      //   270: astore 11
      //   272: aload 6
      //   274: astore 10
      //   276: aload_1
      //   277: astore 13
      //   279: aload 6
      //   281: astore 12
      //   283: aload_1
      //   284: astore 14
      //   286: aload 6
      //   288: astore 4
      //   290: aload_1
      //   291: astore 5
      //   293: aload_0
      //   294: getfield 16	com/qbiki/ads/SCAdView$AdGetterAsyncTask:this$0	Lcom/qbiki/ads/SCAdView;
      //   297: aload 16
      //   299: invokestatic 74	com/qbiki/ads/SCAdView:access$400	(Lcom/qbiki/ads/SCAdView;Lorg/json/JSONObject;)Lorg/json/JSONArray;
      //   302: invokevirtual 80	org/json/JSONArray:length	()I
      //   305: istore_2
      //   306: iload_2
      //   307: ifeq +23 -> 330
      //   310: aload_1
      //   311: ifnull +7 -> 318
      //   314: aload_1
      //   315: invokevirtual 83	java/net/HttpURLConnection:disconnect	()V
      //   318: aload 6
      //   320: ifnull +8 -> 328
      //   323: aload 6
      //   325: invokevirtual 88	java/io/InputStream:close	()V
      //   328: aconst_null
      //   329: areturn
      //   330: aload 6
      //   332: astore 7
      //   334: aload_1
      //   335: astore 9
      //   337: aload 6
      //   339: astore 8
      //   341: aload_1
      //   342: astore 11
      //   344: aload 6
      //   346: astore 10
      //   348: aload_1
      //   349: astore 13
      //   351: aload 6
      //   353: astore 12
      //   355: aload_1
      //   356: astore 14
      //   358: aload 6
      //   360: astore 4
      //   362: aload_1
      //   363: astore 5
      //   365: aload 16
      //   367: ldc 90
      //   369: invokevirtual 94	org/json/JSONObject:getJSONObject	(Ljava/lang/String;)Lorg/json/JSONObject;
      //   372: astore 16
      //   374: aload 6
      //   376: astore 7
      //   378: aload_1
      //   379: astore 9
      //   381: aload 6
      //   383: astore 8
      //   385: aload_1
      //   386: astore 11
      //   388: aload 6
      //   390: astore 10
      //   392: aload_1
      //   393: astore 13
      //   395: aload 6
      //   397: astore 12
      //   399: aload_1
      //   400: astore 14
      //   402: aload 6
      //   404: astore 4
      //   406: aload_1
      //   407: astore 5
      //   409: aload_0
      //   410: getfield 16	com/qbiki/ads/SCAdView$AdGetterAsyncTask:this$0	Lcom/qbiki/ads/SCAdView;
      //   413: aload 16
      //   415: ldc 96
      //   417: invokevirtual 100	org/json/JSONObject:getInt	(Ljava/lang/String;)I
      //   420: invokestatic 104	com/qbiki/ads/SCAdView:access$502	(Lcom/qbiki/ads/SCAdView;I)I
      //   423: pop
      //   424: aload 6
      //   426: astore 7
      //   428: aload_1
      //   429: astore 9
      //   431: aload 6
      //   433: astore 8
      //   435: aload_1
      //   436: astore 11
      //   438: aload 6
      //   440: astore 10
      //   442: aload_1
      //   443: astore 13
      //   445: aload 6
      //   447: astore 12
      //   449: aload_1
      //   450: astore 14
      //   452: aload 6
      //   454: astore 4
      //   456: aload_1
      //   457: astore 5
      //   459: aload_0
      //   460: aload 16
      //   462: ldc 106
      //   464: invokevirtual 110	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
      //   467: putfield 21	com/qbiki/ads/SCAdView$AdGetterAsyncTask:mBannerActionUrl	Ljava/lang/String;
      //   470: aload 6
      //   472: astore 7
      //   474: aload_1
      //   475: astore 9
      //   477: aload 6
      //   479: astore 8
      //   481: aload_1
      //   482: astore 11
      //   484: aload 6
      //   486: astore 10
      //   488: aload_1
      //   489: astore 13
      //   491: aload 6
      //   493: astore 12
      //   495: aload_1
      //   496: astore 14
      //   498: aload 6
      //   500: astore 4
      //   502: aload_1
      //   503: astore 5
      //   505: aload 16
      //   507: ldc 112
      //   509: invokevirtual 110	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
      //   512: astore 16
      //   514: aload 6
      //   516: astore 7
      //   518: aload_1
      //   519: astore 9
      //   521: aload 6
      //   523: astore 8
      //   525: aload_1
      //   526: astore 11
      //   528: aload 6
      //   530: astore 10
      //   532: aload_1
      //   533: astore 13
      //   535: aload 6
      //   537: astore 12
      //   539: aload_1
      //   540: astore 14
      //   542: aload 6
      //   544: astore 4
      //   546: aload_1
      //   547: astore 5
      //   549: aload_1
      //   550: invokevirtual 83	java/net/HttpURLConnection:disconnect	()V
      //   553: aload 6
      //   555: astore 7
      //   557: aload_1
      //   558: astore 9
      //   560: aload 6
      //   562: astore 8
      //   564: aload_1
      //   565: astore 11
      //   567: aload 6
      //   569: astore 10
      //   571: aload_1
      //   572: astore 13
      //   574: aload 6
      //   576: astore 12
      //   578: aload_1
      //   579: astore 14
      //   581: aload 6
      //   583: astore 4
      //   585: aload_1
      //   586: astore 5
      //   588: aload 6
      //   590: invokevirtual 88	java/io/InputStream:close	()V
      //   593: aload 6
      //   595: astore 7
      //   597: aload_1
      //   598: astore 9
      //   600: aload 6
      //   602: astore 8
      //   604: aload_1
      //   605: astore 11
      //   607: aload 6
      //   609: astore 10
      //   611: aload_1
      //   612: astore 13
      //   614: aload 6
      //   616: astore 12
      //   618: aload_1
      //   619: astore 14
      //   621: aload 6
      //   623: astore 4
      //   625: aload_1
      //   626: astore 5
      //   628: aload_0
      //   629: invokevirtual 39	com/qbiki/ads/SCAdView$AdGetterAsyncTask:isCancelled	()Z
      //   632: istore_3
      //   633: iload_3
      //   634: ifeq +23 -> 657
      //   637: aload_1
      //   638: ifnull +7 -> 645
      //   641: aload_1
      //   642: invokevirtual 83	java/net/HttpURLConnection:disconnect	()V
      //   645: aload 6
      //   647: ifnull +8 -> 655
      //   650: aload 6
      //   652: invokevirtual 88	java/io/InputStream:close	()V
      //   655: aconst_null
      //   656: areturn
      //   657: aload 6
      //   659: astore 7
      //   661: aload_1
      //   662: astore 9
      //   664: aload 6
      //   666: astore 8
      //   668: aload_1
      //   669: astore 11
      //   671: aload 6
      //   673: astore 10
      //   675: aload_1
      //   676: astore 13
      //   678: aload 6
      //   680: astore 12
      //   682: aload_1
      //   683: astore 14
      //   685: aload 6
      //   687: astore 4
      //   689: aload_1
      //   690: astore 5
      //   692: new 41	java/net/URL
      //   695: dup
      //   696: aload 16
      //   698: invokespecial 44	java/net/URL:<init>	(Ljava/lang/String;)V
      //   701: invokevirtual 48	java/net/URL:openConnection	()Ljava/net/URLConnection;
      //   704: checkcast 50	java/net/HttpURLConnection
      //   707: astore_1
      //   708: aload 6
      //   710: astore 7
      //   712: aload_1
      //   713: astore 9
      //   715: aload 6
      //   717: astore 8
      //   719: aload_1
      //   720: astore 11
      //   722: aload 6
      //   724: astore 10
      //   726: aload_1
      //   727: astore 13
      //   729: aload 6
      //   731: astore 12
      //   733: aload_1
      //   734: astore 14
      //   736: aload 6
      //   738: astore 4
      //   740: aload_1
      //   741: astore 5
      //   743: aload_1
      //   744: sipush 25000
      //   747: invokevirtual 54	java/net/HttpURLConnection:setConnectTimeout	(I)V
      //   750: aload 6
      //   752: astore 7
      //   754: aload_1
      //   755: astore 9
      //   757: aload 6
      //   759: astore 8
      //   761: aload_1
      //   762: astore 11
      //   764: aload 6
      //   766: astore 10
      //   768: aload_1
      //   769: astore 13
      //   771: aload 6
      //   773: astore 12
      //   775: aload_1
      //   776: astore 14
      //   778: aload 6
      //   780: astore 4
      //   782: aload_1
      //   783: astore 5
      //   785: aload_1
      //   786: sipush 25000
      //   789: invokevirtual 57	java/net/HttpURLConnection:setReadTimeout	(I)V
      //   792: aload 6
      //   794: astore 7
      //   796: aload_1
      //   797: astore 9
      //   799: aload 6
      //   801: astore 8
      //   803: aload_1
      //   804: astore 11
      //   806: aload 6
      //   808: astore 10
      //   810: aload_1
      //   811: astore 13
      //   813: aload 6
      //   815: astore 12
      //   817: aload_1
      //   818: astore 14
      //   820: aload 6
      //   822: astore 4
      //   824: aload_1
      //   825: astore 5
      //   827: aload_1
      //   828: invokevirtual 61	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
      //   831: astore 6
      //   833: aload 6
      //   835: astore 7
      //   837: aload_1
      //   838: astore 9
      //   840: aload 6
      //   842: astore 8
      //   844: aload_1
      //   845: astore 11
      //   847: aload 6
      //   849: astore 10
      //   851: aload_1
      //   852: astore 13
      //   854: aload 6
      //   856: astore 12
      //   858: aload_1
      //   859: astore 14
      //   861: aload 6
      //   863: astore 4
      //   865: aload_1
      //   866: astore 5
      //   868: aload 6
      //   870: ldc 114
      //   872: invokestatic 120	android/graphics/drawable/Drawable:createFromStream	(Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;
      //   875: astore 16
      //   877: aload 16
      //   879: astore 4
      //   881: aload_1
      //   882: ifnull +7 -> 889
      //   885: aload_1
      //   886: invokevirtual 83	java/net/HttpURLConnection:disconnect	()V
      //   889: aload 4
      //   891: astore_1
      //   892: aload 6
      //   894: ifnull -885 -> 9
      //   897: aload 6
      //   899: invokevirtual 88	java/io/InputStream:close	()V
      //   902: aload 4
      //   904: areturn
      //   905: astore_1
      //   906: aload 4
      //   908: areturn
      //   909: astore_1
      //   910: aload 7
      //   912: astore 4
      //   914: aload 9
      //   916: astore 5
      //   918: ldc 122
      //   920: ldc 124
      //   922: invokestatic 130	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
      //   925: pop
      //   926: aload 9
      //   928: ifnull +8 -> 936
      //   931: aload 9
      //   933: invokevirtual 83	java/net/HttpURLConnection:disconnect	()V
      //   936: aload 15
      //   938: astore_1
      //   939: aload 7
      //   941: ifnull -932 -> 9
      //   944: aload 7
      //   946: invokevirtual 88	java/io/InputStream:close	()V
      //   949: aconst_null
      //   950: areturn
      //   951: astore_1
      //   952: aconst_null
      //   953: areturn
      //   954: astore_1
      //   955: aload 8
      //   957: astore 4
      //   959: aload 11
      //   961: astore 5
      //   963: ldc 122
      //   965: ldc 124
      //   967: invokestatic 130	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
      //   970: pop
      //   971: aload 11
      //   973: ifnull +8 -> 981
      //   976: aload 11
      //   978: invokevirtual 83	java/net/HttpURLConnection:disconnect	()V
      //   981: aload 15
      //   983: astore_1
      //   984: aload 8
      //   986: ifnull -977 -> 9
      //   989: aload 8
      //   991: invokevirtual 88	java/io/InputStream:close	()V
      //   994: aconst_null
      //   995: areturn
      //   996: astore_1
      //   997: aconst_null
      //   998: areturn
      //   999: astore_1
      //   1000: aload 10
      //   1002: astore 4
      //   1004: aload 13
      //   1006: astore 5
      //   1008: ldc 122
      //   1010: new 132	java/lang/StringBuilder
      //   1013: dup
      //   1014: invokespecial 133	java/lang/StringBuilder:<init>	()V
      //   1017: ldc -121
      //   1019: invokevirtual 139	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1022: aload_1
      //   1023: invokevirtual 143	java/io/IOException:toString	()Ljava/lang/String;
      //   1026: invokevirtual 139	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   1029: invokevirtual 144	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   1032: invokestatic 130	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
      //   1035: pop
      //   1036: aload 13
      //   1038: ifnull +8 -> 1046
      //   1041: aload 13
      //   1043: invokevirtual 83	java/net/HttpURLConnection:disconnect	()V
      //   1046: aload 15
      //   1048: astore_1
      //   1049: aload 10
      //   1051: ifnull -1042 -> 9
      //   1054: aload 10
      //   1056: invokevirtual 88	java/io/InputStream:close	()V
      //   1059: aconst_null
      //   1060: areturn
      //   1061: astore_1
      //   1062: aconst_null
      //   1063: areturn
      //   1064: astore_1
      //   1065: aload 12
      //   1067: astore 4
      //   1069: aload 14
      //   1071: astore 5
      //   1073: ldc 122
      //   1075: ldc 124
      //   1077: invokestatic 130	android/util/Log:w	(Ljava/lang/String;Ljava/lang/String;)I
      //   1080: pop
      //   1081: aload 14
      //   1083: ifnull +8 -> 1091
      //   1086: aload 14
      //   1088: invokevirtual 83	java/net/HttpURLConnection:disconnect	()V
      //   1091: aload 15
      //   1093: astore_1
      //   1094: aload 12
      //   1096: ifnull -1087 -> 9
      //   1099: aload 12
      //   1101: invokevirtual 88	java/io/InputStream:close	()V
      //   1104: aconst_null
      //   1105: areturn
      //   1106: astore_1
      //   1107: aconst_null
      //   1108: areturn
      //   1109: astore_1
      //   1110: aload 5
      //   1112: ifnull +8 -> 1120
      //   1115: aload 5
      //   1117: invokevirtual 83	java/net/HttpURLConnection:disconnect	()V
      //   1120: aload 4
      //   1122: ifnull +8 -> 1130
      //   1125: aload 4
      //   1127: invokevirtual 88	java/io/InputStream:close	()V
      //   1130: aload_1
      //   1131: athrow
      //   1132: astore_1
      //   1133: goto -805 -> 328
      //   1136: astore_1
      //   1137: goto -482 -> 655
      //   1140: astore 4
      //   1142: goto -12 -> 1130
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	1145	0	this	AdGetterAsyncTask
      //   0	1145	1	paramVarArgs	String[]
      //   305	2	2	i	int
      //   632	2	3	bool	boolean
      //   62	1064	4	localObject1	Object
      //   1140	1	4	localIOException	java.io.IOException
      //   39	1077	5	localObject2	Object
      //   27	871	6	localInputStream1	java.io.InputStream
      //   46	899	7	localInputStream2	java.io.InputStream
      //   50	940	8	localObject3	Object
      //   42	890	9	arrayOfString1	String[]
      //   54	1001	10	localObject4	Object
      //   30	947	11	arrayOfString2	String[]
      //   58	1042	12	localObject5	Object
      //   33	1009	13	arrayOfString3	String[]
      //   36	1051	14	arrayOfString4	String[]
      //   12	1080	15	localObject6	Object
      //   15	863	16	localObject7	Object
      //   18	162	17	localObject8	Object
      //   21	166	18	localObject9	Object
      //   24	170	19	localObject10	Object
      // Exception table:
      //   from	to	target	type
      //   897	902	905	java/io/IOException
      //   64	81	909	java/net/MalformedURLException
      //   116	123	909	java/net/MalformedURLException
      //   158	165	909	java/net/MalformedURLException
      //   200	206	909	java/net/MalformedURLException
      //   241	258	909	java/net/MalformedURLException
      //   293	306	909	java/net/MalformedURLException
      //   365	374	909	java/net/MalformedURLException
      //   409	424	909	java/net/MalformedURLException
      //   459	470	909	java/net/MalformedURLException
      //   505	514	909	java/net/MalformedURLException
      //   549	553	909	java/net/MalformedURLException
      //   588	593	909	java/net/MalformedURLException
      //   628	633	909	java/net/MalformedURLException
      //   692	708	909	java/net/MalformedURLException
      //   743	750	909	java/net/MalformedURLException
      //   785	792	909	java/net/MalformedURLException
      //   827	833	909	java/net/MalformedURLException
      //   868	877	909	java/net/MalformedURLException
      //   944	949	951	java/io/IOException
      //   64	81	954	java/net/SocketTimeoutException
      //   116	123	954	java/net/SocketTimeoutException
      //   158	165	954	java/net/SocketTimeoutException
      //   200	206	954	java/net/SocketTimeoutException
      //   241	258	954	java/net/SocketTimeoutException
      //   293	306	954	java/net/SocketTimeoutException
      //   365	374	954	java/net/SocketTimeoutException
      //   409	424	954	java/net/SocketTimeoutException
      //   459	470	954	java/net/SocketTimeoutException
      //   505	514	954	java/net/SocketTimeoutException
      //   549	553	954	java/net/SocketTimeoutException
      //   588	593	954	java/net/SocketTimeoutException
      //   628	633	954	java/net/SocketTimeoutException
      //   692	708	954	java/net/SocketTimeoutException
      //   743	750	954	java/net/SocketTimeoutException
      //   785	792	954	java/net/SocketTimeoutException
      //   827	833	954	java/net/SocketTimeoutException
      //   868	877	954	java/net/SocketTimeoutException
      //   989	994	996	java/io/IOException
      //   64	81	999	java/io/IOException
      //   116	123	999	java/io/IOException
      //   158	165	999	java/io/IOException
      //   200	206	999	java/io/IOException
      //   241	258	999	java/io/IOException
      //   293	306	999	java/io/IOException
      //   365	374	999	java/io/IOException
      //   409	424	999	java/io/IOException
      //   459	470	999	java/io/IOException
      //   505	514	999	java/io/IOException
      //   549	553	999	java/io/IOException
      //   588	593	999	java/io/IOException
      //   628	633	999	java/io/IOException
      //   692	708	999	java/io/IOException
      //   743	750	999	java/io/IOException
      //   785	792	999	java/io/IOException
      //   827	833	999	java/io/IOException
      //   868	877	999	java/io/IOException
      //   1054	1059	1061	java/io/IOException
      //   64	81	1064	org/json/JSONException
      //   116	123	1064	org/json/JSONException
      //   158	165	1064	org/json/JSONException
      //   200	206	1064	org/json/JSONException
      //   241	258	1064	org/json/JSONException
      //   293	306	1064	org/json/JSONException
      //   365	374	1064	org/json/JSONException
      //   409	424	1064	org/json/JSONException
      //   459	470	1064	org/json/JSONException
      //   505	514	1064	org/json/JSONException
      //   549	553	1064	org/json/JSONException
      //   588	593	1064	org/json/JSONException
      //   628	633	1064	org/json/JSONException
      //   692	708	1064	org/json/JSONException
      //   743	750	1064	org/json/JSONException
      //   785	792	1064	org/json/JSONException
      //   827	833	1064	org/json/JSONException
      //   868	877	1064	org/json/JSONException
      //   1099	1104	1106	java/io/IOException
      //   64	81	1109	finally
      //   116	123	1109	finally
      //   158	165	1109	finally
      //   200	206	1109	finally
      //   241	258	1109	finally
      //   293	306	1109	finally
      //   365	374	1109	finally
      //   409	424	1109	finally
      //   459	470	1109	finally
      //   505	514	1109	finally
      //   549	553	1109	finally
      //   588	593	1109	finally
      //   628	633	1109	finally
      //   692	708	1109	finally
      //   743	750	1109	finally
      //   785	792	1109	finally
      //   827	833	1109	finally
      //   868	877	1109	finally
      //   918	926	1109	finally
      //   963	971	1109	finally
      //   1008	1036	1109	finally
      //   1073	1081	1109	finally
      //   323	328	1132	java/io/IOException
      //   650	655	1136	java/io/IOException
      //   1125	1130	1140	java/io/IOException
    }
    
    protected void onPostExecute(Drawable paramDrawable)
    {
      if (paramDrawable != null) {
        SCAdView.this.showBannerAd(paramDrawable, this.mBannerActionUrl);
      }
      super.onPostExecute(paramDrawable);
    }
  }
}
