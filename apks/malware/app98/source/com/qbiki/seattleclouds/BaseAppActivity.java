package com.qbiki.seattleclouds;

import android.content.Intent;
import android.os.Bundle;
import com.actionbarsherlock.view.Menu;
import com.actionbarsherlock.view.MenuInflater;
import com.actionbarsherlock.view.MenuItem;
import com.google.analytics.tracking.android.GoogleAnalytics;
import com.google.analytics.tracking.android.Tracker;
import com.qbiki.geofencing.GeofenceManager;
import com.qbiki.util.SCMediaPlayer;

public abstract class BaseAppActivity
  extends SCFragmentActivity
{
  private static final boolean LOGV = false;
  private static final String TAG = "BaseAppActivity";
  private GeofenceManager mGeofenceManager;
  
  public BaseAppActivity() {}
  
  private void syncContent()
  {
    Intent localIntent = new Intent(this, AppStarterActivity.class);
    localIntent.putExtra("startedInApp", true);
    startActivity(localIntent);
    finish();
  }
  
  private void trackView(String paramString)
  {
    if (GoogleAnalytics.getInstance(this).getDefaultTracker() != null) {
      GoogleAnalytics.getInstance(this).getDefaultTracker().trackView(paramString);
    }
  }
  
  protected FragmentInfo getRootPageFragmentInfo(String paramString)
  {
    if (paramString.equals(paramString)) {}
    for (FragmentInfo localFragmentInfo1 = App.getPageFragmentInfo(App.getResourceUrl(paramString), this);; localFragmentInfo1 = App.getPageFragmentInfo(paramString, this))
    {
      FragmentInfo localFragmentInfo2 = localFragmentInfo1;
      if (localFragmentInfo1 == null) {
        localFragmentInfo2 = App.getHtmlPageFragmentInfo(App.getResourceUrl(paramString));
      }
      if (localFragmentInfo2 != null) {
        localFragmentInfo2.getRawArguments().putBoolean("ARG_IS_ROOT_FRAGMENT", true);
      }
      return localFragmentInfo2;
    }
  }
  
  protected void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    if (!this.mGeofenceManager.processActivityResult(paramInt1, paramInt2, paramIntent)) {
      super.onActivityResult(paramInt1, paramInt2, paramIntent);
    }
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    this.mGeofenceManager = new GeofenceManager(this);
    this.mGeofenceManager.refreshGeofences();
  }
  
  public boolean onCreateOptionsMenu(Menu paramMenu)
  {
    if (!App.syncEnabled) {
      return super.onCreateOptionsMenu(paramMenu);
    }
    super.onCreateOptionsMenu(paramMenu);
    getSupportMenuInflater().inflate(2131558437, paramMenu);
    return true;
  }
  
  protected void onDestroy()
  {
    App.soundEffectsPlayer.stop();
    App.backgroundMediaPlayer.stop();
    App.started = false;
    ((App)getApplication()).saveRuntimeSate();
    com.qbiki.modules.login.LoginFragment.sessionUserLogin = null;
    com.qbiki.modules.login.LoginFragment.sessionUserPassword = null;
    super.onDestroy();
  }
  
  public boolean onOptionsItemSelected(MenuItem paramMenuItem)
  {
    switch (paramMenuItem.getItemId())
    {
    default: 
      return super.onOptionsItemSelected(paramMenuItem);
    }
    syncContent();
    return true;
  }
  
  protected void onResume()
  {
    super.onResume();
  }
  
  public void onTabChanged(String paramString)
  {
    trackView(paramString);
  }
}
