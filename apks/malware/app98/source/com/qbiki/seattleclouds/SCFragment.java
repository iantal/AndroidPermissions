package com.qbiki.seattleclouds;

import android.annotation.TargetApi;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import com.actionbarsherlock.app.SherlockFragment;
import com.actionbarsherlock.app.SherlockFragmentActivity;
import com.actionbarsherlock.view.Menu;
import com.actionbarsherlock.view.MenuInflater;

public class SCFragment
  extends SherlockFragment
  implements SCFragmentInterface
{
  private ViewGroup mParent;
  private boolean mSurfaceViewFixEnabled = false;
  private View mView;
  
  public SCFragment() {}
  
  @TargetApi(11)
  public void invalidateOptionsMenu()
  {
    if (getSherlockActivity() != null) {
      getSherlockActivity().invalidateOptionsMenu();
    }
  }
  
  public boolean isSurfaceViewFixEnabled()
  {
    return this.mSurfaceViewFixEnabled;
  }
  
  public void onActiveChanged(boolean paramBoolean)
  {
    SCFragmentHelper.getInstance().onFragmentActiveChanged(this, paramBoolean);
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    super.onConfigurationChanged(paramConfiguration);
    SCFragmentHelper.getInstance().onFragmentConfigurationChanged(this, paramConfiguration);
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setHasOptionsMenu(true);
  }
  
  public void onCreateOptionsMenu(Menu paramMenu, MenuInflater paramMenuInflater)
  {
    super.onCreateOptionsMenu(paramMenu, paramMenuInflater);
    SCFragmentHelper.getInstance().onCreateOptionsMenu(this, paramMenu, paramMenuInflater);
  }
  
  public void onHiddenChanged(boolean paramBoolean)
  {
    if (this.mView != null)
    {
      if (paramBoolean) {
        this.mParent.removeView(this.mView);
      }
    }
    else
    {
      super.onHiddenChanged(paramBoolean);
      if (paramBoolean) {
        break label53;
      }
    }
    label53:
    for (paramBoolean = true;; paramBoolean = false)
    {
      onActiveChanged(paramBoolean);
      return;
      this.mParent.addView(this.mView);
      break;
    }
  }
  
  public void onPause()
  {
    super.onPause();
    SCFragmentHelper.getInstance().onFragmentPaused(this);
  }
  
  public void onResume()
  {
    super.onResume();
    SCFragmentHelper.getInstance().onFragmentResumed(this);
  }
  
  public void onViewCreated(View paramView, Bundle paramBundle)
  {
    super.onViewCreated(paramView, paramBundle);
    if ((this.mSurfaceViewFixEnabled) && (paramView.getParent() != null) && ((paramView.getParent() instanceof ViewGroup)))
    {
      this.mView = paramView;
      this.mParent = ((ViewGroup)paramView.getParent());
    }
  }
  
  public void setSurfaceViewFixEnabled(boolean paramBoolean)
  {
    this.mSurfaceViewFixEnabled = paramBoolean;
  }
  
  public void startActivityForResult(Intent paramIntent, int paramInt)
  {
    if (!SCFragmentHelper.getInstance().startActivityForResult(this, paramIntent, paramInt)) {
      super.startActivityForResult(paramIntent, paramInt);
    }
  }
}
