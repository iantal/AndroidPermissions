package com.qbiki.seattleclouds;

import com.qbiki.modules.sharepoint.SPServerCredentials;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import org.json.JSONObject;

public class AppConfig
{
  public static final String DEFAULT_ADMOB_PUBLISHER_ID = "a14bf035fb16b4d";
  public static final String DEFAULT_DFP_ADUNIT_ID = "";
  public static final int DEFAULT_QUIZ_PAGES_NUM = 20;
  public static final int DEFAULT_TABS_NUMBER = 4;
  public static final int MAX_TABS_NUMBER = 5;
  public static final int MIN_TABS_NUMBER = 2;
  public static final int NAVIGATION_TYPE_CUSTOM_TABS = 4;
  public static final int NAVIGATION_TYPE_LEGACY_TABS = 5;
  public static final int NAVIGATION_TYPE_SIMPLE = 2;
  public static final int NAVIGATION_TYPE_TABS = 1;
  public static final int NAVIGATION_TYPE_UNKNOWN = 0;
  public static final int NAVIGATION_TYPE_WHEEL = 3;
  private String adMobPublisherId = "a14bf035fb16b4d";
  private String dfpAdUnitId = "";
  private String facebookAppID = "";
  private boolean geofencingEnabled = false;
  private int globalBottomAdType = 0;
  private int globalTopAdType = 0;
  private String googleAnalyticsId = "";
  private boolean initialized = false;
  private boolean isQuizRandomize;
  private String messengerNotificationPageId = null;
  private List<NavigationItem> navigationItems = new ArrayList();
  private NavigationSettings navigationSettings = new NavigationSettings();
  private int navigationType = 0;
  private Map<String, Page> pages = new HashMap();
  private Map<String, HashSet<Integer>> passedQuizCategoryQuestions = new HashMap();
  private ArrayList<String> pnTopics = new ArrayList();
  private String pollfishApiKey;
  private int pollfishPadding;
  private String pollfishPosition;
  private Map<String, String> props = new HashMap();
  private ArrayList<String> quizPages = new ArrayList();
  private int quizPagesNumber = 20;
  private Map<String, JSONObject> rssItemsContainer = new HashMap();
  private int scAdRefreshRate = 30;
  private boolean scaleWebPagesToBaseResolution = true;
  private String sentPageId;
  private SPServerCredentials sharepointGlobalServerCredentials = new SPServerCredentials();
  
  public AppConfig() {}
  
  public String getAdMobPublisherId()
  {
    return this.adMobPublisherId;
  }
  
  public String getDfpAdUnitId()
  {
    return this.dfpAdUnitId;
  }
  
  public String getFacebookAppID()
  {
    return this.facebookAppID;
  }
  
  public Page getFirstOrderPage()
  {
    Iterator localIterator = this.pages.entrySet().iterator();
    while (localIterator.hasNext())
    {
      Page localPage = (Page)((Map.Entry)localIterator.next()).getValue();
      if (localPage.getType().equalsIgnoreCase("order")) {
        return localPage;
      }
      localIterator.remove();
    }
    return null;
  }
  
  public int getGlobalBottomAdType()
  {
    return this.globalBottomAdType;
  }
  
  public int getGlobalTopAdType()
  {
    return this.globalTopAdType;
  }
  
  public String getGoogleAnalyticsId()
  {
    return this.googleAnalyticsId;
  }
  
  public String getMessengerNotificationPageId()
  {
    return this.messengerNotificationPageId;
  }
  
  public List<NavigationItem> getNavigationItems()
  {
    return this.navigationItems;
  }
  
  public NavigationSettings getNavigationSettings()
  {
    return this.navigationSettings;
  }
  
  public int getNavigationType()
  {
    return this.navigationType;
  }
  
  public ArrayList<String> getPNTopics()
  {
    return this.pnTopics;
  }
  
  public Map<String, Page> getPages()
  {
    return this.pages;
  }
  
  public Map<String, HashSet<Integer>> getPassedCategoryQuestions()
  {
    return this.passedQuizCategoryQuestions;
  }
  
  public String getPollfishApiKey()
  {
    return this.pollfishApiKey;
  }
  
  public int getPollfishPadding()
  {
    return this.pollfishPadding;
  }
  
  public String getPollfishPosition()
  {
    return this.pollfishPosition;
  }
  
  public Map<String, String> getProps()
  {
    return this.props;
  }
  
  public ArrayList<String> getQuizPages()
  {
    return this.quizPages;
  }
  
  public int getQuizPagesNumber()
  {
    return this.quizPagesNumber;
  }
  
  public Map<String, JSONObject> getRssItemsContainer()
  {
    return this.rssItemsContainer;
  }
  
  public JSONObject getRssJsonForPage(String paramString)
  {
    if (this.rssItemsContainer.containsKey(paramString)) {
      return (JSONObject)this.rssItemsContainer.get(paramString);
    }
    return null;
  }
  
  public int getScAdRefreshRate()
  {
    return this.scAdRefreshRate;
  }
  
  public boolean getScaleWebPagesToBaseResolution()
  {
    return this.scaleWebPagesToBaseResolution;
  }
  
  public String getSentPageId()
  {
    return this.sentPageId;
  }
  
  public SPServerCredentials getSharepointGlobalServerCredentials()
  {
    return this.sharepointGlobalServerCredentials;
  }
  
  public boolean isGeofencingEnabled()
  {
    return this.geofencingEnabled;
  }
  
  public boolean isInitialized()
  {
    return this.initialized;
  }
  
  public boolean isQuizRandomize()
  {
    return this.isQuizRandomize;
  }
  
  public void setAdMobPublisherId(String paramString)
  {
    this.adMobPublisherId = paramString;
  }
  
  public void setDfpAdUnitId(String paramString)
  {
    this.dfpAdUnitId = paramString;
  }
  
  public void setFacebookAppID(String paramString)
  {
    this.facebookAppID = paramString;
  }
  
  public void setGeofencingEnabled(boolean paramBoolean)
  {
    this.geofencingEnabled = paramBoolean;
  }
  
  public void setGlobalBottomAdType(int paramInt)
  {
    this.globalBottomAdType = paramInt;
  }
  
  public void setGlobalTopAdType(int paramInt)
  {
    this.globalTopAdType = paramInt;
  }
  
  public void setGoogleAnalyticsId(String paramString)
  {
    this.googleAnalyticsId = paramString;
  }
  
  public void setInitialized(boolean paramBoolean)
  {
    this.initialized = paramBoolean;
  }
  
  public void setMessengerNotificationPageId(String paramString)
  {
    this.messengerNotificationPageId = paramString;
  }
  
  public void setNavigationItems(List<NavigationItem> paramList)
  {
    this.navigationItems = paramList;
  }
  
  public void setNavigationSettings(NavigationSettings paramNavigationSettings)
  {
    this.navigationSettings = paramNavigationSettings;
  }
  
  public void setNavigationType(int paramInt)
  {
    this.navigationType = paramInt;
  }
  
  public void setPNTopics(ArrayList<String> paramArrayList)
  {
    this.pnTopics = paramArrayList;
  }
  
  public void setPages(Map<String, Page> paramMap)
  {
    this.pages = paramMap;
  }
  
  public void setPassedQuizCategoryQuestions(Map<String, HashSet<Integer>> paramMap)
  {
    this.passedQuizCategoryQuestions = paramMap;
  }
  
  public void setPollfishApiKey(String paramString)
  {
    this.pollfishApiKey = paramString;
  }
  
  public void setPollfishPadding(int paramInt)
  {
    this.pollfishPadding = paramInt;
  }
  
  public void setPollfishPosition(String paramString)
  {
    this.pollfishPosition = paramString;
  }
  
  public void setProps(Map<String, String> paramMap)
  {
    this.props = paramMap;
  }
  
  public void setQuizPages(ArrayList<String> paramArrayList)
  {
    this.quizPages = paramArrayList;
  }
  
  public void setQuizPagesNumber(int paramInt)
  {
    this.quizPagesNumber = paramInt;
  }
  
  public void setQuizRandomize(boolean paramBoolean)
  {
    this.isQuizRandomize = paramBoolean;
  }
  
  public void setRssItemsContainer(Map<String, JSONObject> paramMap)
  {
    this.rssItemsContainer = paramMap;
  }
  
  public void setRssJsonForPage(String paramString, JSONObject paramJSONObject)
  {
    this.rssItemsContainer.put(paramString, paramJSONObject);
  }
  
  public void setScAdRefreshRate(int paramInt)
  {
    this.scAdRefreshRate = paramInt;
  }
  
  public void setScaleWebPagesToBaseResolution(boolean paramBoolean)
  {
    this.scaleWebPagesToBaseResolution = paramBoolean;
  }
  
  public void setSentPageId(String paramString)
  {
    this.sentPageId = paramString;
  }
  
  public void setSharepointGlobalServerCredentials(SPServerCredentials paramSPServerCredentials)
  {
    this.sharepointGlobalServerCredentials = paramSPServerCredentials;
  }
}
