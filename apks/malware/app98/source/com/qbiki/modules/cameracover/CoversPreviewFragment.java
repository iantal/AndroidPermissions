package com.qbiki.modules.cameracover;

import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewTreeObserver;
import android.view.ViewTreeObserver.OnGlobalLayoutListener;
import android.widget.BaseAdapter;
import android.widget.Gallery.LayoutParams;
import android.widget.ImageView;
import android.widget.Toast;
import com.actionbarsherlock.view.Menu;
import com.actionbarsherlock.view.MenuInflater;
import com.actionbarsherlock.view.MenuItem;
import com.qbiki.seattleclouds.App;
import com.qbiki.seattleclouds.SCFragment;
import com.qbiki.util.DialogUtil;
import com.qbiki.util.ImageCache;
import com.qbiki.widget.SingleFlingGallery;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import org.apache.commons.io.FileUtils;

public class CoversPreviewFragment
  extends SCFragment
{
  public static final String COVERS_ARRAY_IDENTIFIER = "COVERS_ARRAY_IDENTIFIER";
  public static final String COVERS_INITIAL_INDEX_IDENTIFIER = "COVERS_INITIAL_INDEX_IDENTIFIER";
  private ArrayList<String> coversList = new ArrayList();
  private String emailToSend = "";
  private View fView = null;
  private SingleFlingGallery gallery = null;
  private ImageCache imageCache = new ImageCache();
  private int initialIndex = 0;
  final ViewTreeObserver.OnGlobalLayoutListener layoutListener = new ViewTreeObserver.OnGlobalLayoutListener()
  {
    public void onGlobalLayout()
    {
      CoversPreviewFragment.this.gallery.setAdapter(new CoversPreviewFragment.ImageAdapter(CoversPreviewFragment.this, CoversPreviewFragment.this.getActivity()));
      CoversPreviewFragment.this.gallery.setSelection(CoversPreviewFragment.this.initialIndex);
      CoversPreviewFragment.this.gallery.getViewTreeObserver().removeGlobalOnLayoutListener(CoversPreviewFragment.this.layoutListener);
    }
  };
  
  public CoversPreviewFragment() {}
  
  /* Error */
  private Bitmap loadImageFromNetwork(String paramString)
  {
    // Byte code:
    //   0: aload_0
    //   1: getfield 50	com/qbiki/modules/cameracover/CoversPreviewFragment:imageCache	Lcom/qbiki/util/ImageCache;
    //   4: aload_1
    //   5: invokevirtual 83	com/qbiki/util/ImageCache:get	(Ljava/lang/String;)Landroid/graphics/Bitmap;
    //   8: astore_3
    //   9: aload_3
    //   10: astore 4
    //   12: aload_3
    //   13: ifnonnull +103 -> 116
    //   16: aload_1
    //   17: ldc 85
    //   19: invokevirtual 91	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   22: ifeq +97 -> 119
    //   25: ldc 93
    //   27: aload_1
    //   28: invokestatic 99	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
    //   31: pop
    //   32: new 101	java/net/URL
    //   35: dup
    //   36: aload_1
    //   37: invokespecial 104	java/net/URL:<init>	(Ljava/lang/String;)V
    //   40: invokevirtual 108	java/net/URL:getContent	()Ljava/lang/Object;
    //   43: checkcast 110	java/io/InputStream
    //   46: invokestatic 116	android/graphics/BitmapFactory:decodeStream	(Ljava/io/InputStream;)Landroid/graphics/Bitmap;
    //   49: astore 4
    //   51: aload 4
    //   53: astore_3
    //   54: aload_3
    //   55: astore 4
    //   57: aload_3
    //   58: ifnull +58 -> 116
    //   61: aload_0
    //   62: getfield 45	com/qbiki/modules/cameracover/CoversPreviewFragment:gallery	Lcom/qbiki/widget/SingleFlingGallery;
    //   65: invokevirtual 122	com/qbiki/widget/SingleFlingGallery:getWidth	()I
    //   68: i2f
    //   69: aload_3
    //   70: invokevirtual 125	android/graphics/Bitmap:getWidth	()I
    //   73: i2f
    //   74: fdiv
    //   75: fstore_2
    //   76: aload_3
    //   77: astore 4
    //   79: aload_3
    //   80: aload_3
    //   81: invokevirtual 125	android/graphics/Bitmap:getWidth	()I
    //   84: i2f
    //   85: fload_2
    //   86: fmul
    //   87: f2i
    //   88: aload_3
    //   89: invokevirtual 128	android/graphics/Bitmap:getHeight	()I
    //   92: i2f
    //   93: fload_2
    //   94: fmul
    //   95: f2i
    //   96: iconst_1
    //   97: invokestatic 132	android/graphics/Bitmap:createScaledBitmap	(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;
    //   100: astore_3
    //   101: aload_3
    //   102: astore 4
    //   104: aload_0
    //   105: getfield 50	com/qbiki/modules/cameracover/CoversPreviewFragment:imageCache	Lcom/qbiki/util/ImageCache;
    //   108: aload_1
    //   109: aload_3
    //   110: invokevirtual 136	com/qbiki/util/ImageCache:put	(Ljava/lang/String;Landroid/graphics/Bitmap;)V
    //   113: aload_3
    //   114: astore 4
    //   116: aload 4
    //   118: areturn
    //   119: new 138	java/io/File
    //   122: dup
    //   123: aload_1
    //   124: invokespecial 139	java/io/File:<init>	(Ljava/lang/String;)V
    //   127: invokevirtual 143	java/io/File:exists	()Z
    //   130: ifeq +15 -> 145
    //   133: aload_1
    //   134: invokestatic 146	android/graphics/BitmapFactory:decodeFile	(Ljava/lang/String;)Landroid/graphics/Bitmap;
    //   137: astore 4
    //   139: aload 4
    //   141: astore_3
    //   142: goto -88 -> 54
    //   145: aload_1
    //   146: invokestatic 152	com/qbiki/seattleclouds/App:getResourceStream	(Ljava/lang/String;)Ljava/io/InputStream;
    //   149: invokestatic 116	android/graphics/BitmapFactory:decodeStream	(Ljava/io/InputStream;)Landroid/graphics/Bitmap;
    //   152: astore 4
    //   154: aload 4
    //   156: astore_3
    //   157: goto -103 -> 54
    //   160: astore 4
    //   162: goto -108 -> 54
    //   165: astore_1
    //   166: aload 4
    //   168: areturn
    //   169: astore 4
    //   171: goto -117 -> 54
    //   174: astore 4
    //   176: goto -122 -> 54
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	179	0	this	CoversPreviewFragment
    //   0	179	1	paramString	String
    //   75	19	2	f	float
    //   8	149	3	localObject1	Object
    //   10	145	4	localObject2	Object
    //   160	7	4	localException1	Exception
    //   169	1	4	localException2	Exception
    //   174	1	4	localException3	Exception
    // Exception table:
    //   from	to	target	type
    //   133	139	160	java/lang/Exception
    //   79	101	165	java/lang/Exception
    //   104	113	165	java/lang/Exception
    //   145	154	169	java/lang/Exception
    //   25	51	174	java/lang/Exception
  }
  
  private void shareCurrentImage()
  {
    if (!App.isExternalStorageWritable())
    {
      DialogUtil.showAlert(getActivity(), 2131362139, 2131362145);
      return;
    }
    Object localObject1 = App.getAppExternalStoragePath() + "/CameraCovers";
    Object localObject2 = new File((String)localObject1);
    if (!((File)localObject2).exists()) {
      ((File)localObject2).mkdirs();
    }
    localObject2 = new File((String)this.coversList.get(this.gallery.getSelectedItemPosition()));
    localObject1 = new File((String)localObject1 + "/" + ((File)localObject2).getName());
    try
    {
      FileUtils.copyFile((File)localObject2, (File)localObject1);
      localObject2 = new Intent("android.intent.action.SEND");
      ((Intent)localObject2).setType("image/*");
      ((Intent)localObject2).putExtra("android.intent.extra.EMAIL", new String[] { this.emailToSend });
      ((Intent)localObject2).putExtra("android.intent.extra.STREAM", Uri.fromFile((File)localObject1));
      startActivity(Intent.createChooser((Intent)localObject2, null));
      return;
    }
    catch (IOException localIOException)
    {
      Log.e("CoverImage", "Error sharing image: " + localIOException.toString(), localIOException);
      Toast.makeText(getActivity(), "Error sharing image", 0).show();
    }
  }
  
  protected void init()
  {
    this.gallery = ((SingleFlingGallery)this.fView.findViewById(2131099823));
    this.gallery.getViewTreeObserver().addOnGlobalLayoutListener(this.layoutListener);
    Bundle localBundle = getArguments();
    if (localBundle != null)
    {
      Object localObject = localBundle.getStringArrayList("COVERS_ARRAY_IDENTIFIER");
      if (localObject != null) {
        this.coversList = ((ArrayList)localObject);
      }
      localObject = localBundle.getString("EMAIL_TO_SEND");
      if (localObject != null) {
        this.emailToSend = ((String)localObject);
      }
      this.initialIndex = localBundle.getInt("COVERS_INITIAL_INDEX_IDENTIFIER");
    }
  }
  
  public void onCreateOptionsMenu(Menu paramMenu, MenuInflater paramMenuInflater)
  {
    paramMenuInflater.inflate(2131558405, paramMenu);
    super.onCreateOptionsMenu(paramMenu, paramMenuInflater);
  }
  
  public View onCreateView(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, Bundle paramBundle)
  {
    this.fView = paramLayoutInflater.inflate(2130903086, paramViewGroup, false);
    init();
    return this.fView;
  }
  
  public void onDestroy()
  {
    super.onDestroy();
    ((ImageAdapter)this.gallery.getAdapter()).removeAll();
    this.gallery.setAdapter(null);
    this.imageCache.clear();
  }
  
  public boolean onOptionsItemSelected(MenuItem paramMenuItem)
  {
    switch (paramMenuItem.getItemId())
    {
    default: 
      return super.onOptionsItemSelected(paramMenuItem);
    }
    shareCurrentImage();
    return true;
  }
  
  static class CellHolder
  {
    ImageView image;
    
    CellHolder() {}
  }
  
  private class DownloadImageTask
    extends AsyncTask<String, Void, Bitmap>
  {
    private ImageView imageView;
    public int position = -1;
    
    private DownloadImageTask() {}
    
    protected Bitmap doInBackground(String... paramVarArgs)
    {
      return CoversPreviewFragment.this.loadImageFromNetwork(paramVarArgs[0]);
    }
    
    protected void onPostExecute(Bitmap paramBitmap)
    {
      if ((this.imageView != null) && (this.imageView.getTag() != null) && (this.position == ((Integer)this.imageView.getTag()).intValue())) {
        this.imageView.setImageBitmap(paramBitmap);
      }
    }
    
    public void setImageView(ImageView paramImageView)
    {
      this.imageView = paramImageView;
    }
  }
  
  public class ImageAdapter
    extends BaseAdapter
  {
    private Context mContext;
    
    public ImageAdapter(Context paramContext)
    {
      this.mContext = paramContext;
    }
    
    public int getCount()
    {
      return CoversPreviewFragment.this.coversList.size();
    }
    
    public Object getItem(int paramInt)
    {
      return Integer.valueOf(paramInt);
    }
    
    public long getItemId(int paramInt)
    {
      return paramInt;
    }
    
    public View getView(int paramInt, View paramView, ViewGroup paramViewGroup)
    {
      if (paramView == null)
      {
        paramViewGroup = new ImageView(this.mContext);
        paramViewGroup.setLayoutParams(new Gallery.LayoutParams(-2, -2));
        paramView = new CoversPreviewFragment.CellHolder();
        paramView.image = paramViewGroup;
        paramViewGroup.setTag(paramView);
      }
      for (;;)
      {
        paramView.image.setImageBitmap(null);
        paramView.image.setTag(Integer.valueOf(paramInt));
        if (paramInt < CoversPreviewFragment.this.coversList.size()) {
          break;
        }
        Log.d("CoversPreview", "Something is wrong with the list and adapter.");
        return paramView.image;
        paramView = (CoversPreviewFragment.CellHolder)paramView.getTag();
      }
      paramViewGroup = (String)CoversPreviewFragment.this.coversList.get(paramInt);
      if (CoversPreviewFragment.this.imageCache.get(paramViewGroup) != null) {
        paramView.image.setImageBitmap(CoversPreviewFragment.this.imageCache.get(paramViewGroup));
      }
      for (;;)
      {
        return paramView.image;
        CoversPreviewFragment.DownloadImageTask localDownloadImageTask = new CoversPreviewFragment.DownloadImageTask(CoversPreviewFragment.this, null);
        localDownloadImageTask.position = paramInt;
        localDownloadImageTask.setImageView(paramView.image);
        localDownloadImageTask.execute(new String[] { paramViewGroup });
      }
    }
    
    public void removeAll()
    {
      CoversPreviewFragment.this.coversList.clear();
      notifyDataSetChanged();
    }
  }
}
