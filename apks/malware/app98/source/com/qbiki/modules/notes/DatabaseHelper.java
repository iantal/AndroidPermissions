package com.qbiki.modules.notes;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import java.util.Date;

public class DatabaseHelper
  extends SQLiteOpenHelper
{
  private static final int DATABASE_VERSION = 1;
  private static final String TAG = "DatabaseHelper";
  
  public DatabaseHelper(Context paramContext, String paramString)
  {
    super(paramContext, paramString, null, 1);
    Log.v("DatabaseHelper", "Using notes database: " + paramString);
  }
  
  private ContentValues createContentValues(String paramString, Date paramDate)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("text", paramString);
    localContentValues.put("date", Long.valueOf(paramDate.getTime()));
    return localContentValues;
  }
  
  public boolean deleteAllNotes()
  {
    return getWritableDatabase().delete("notes", null, null) > 0;
  }
  
  public boolean deleteNote(long paramLong)
  {
    return getWritableDatabase().delete("notes", "_id=" + paramLong, null) > 0;
  }
  
  public Cursor fetchAllNotes()
  {
    return getReadableDatabase().query("notes", new String[] { "_id", "text", "date" }, null, null, null, null, "date DESC");
  }
  
  public Cursor fetchNoteById(long paramLong)
  {
    Object localObject = getReadableDatabase();
    String str = "_id = " + paramLong;
    localObject = ((SQLiteDatabase)localObject).query("notes", new String[] { "_id", "text", "date" }, str, null, null, null, null);
    if (localObject != null) {
      ((Cursor)localObject).moveToFirst();
    }
    return localObject;
  }
  
  public long insertNote(String paramString, Date paramDate)
  {
    paramString = createContentValues(paramString, paramDate);
    return getWritableDatabase().insert("notes", null, paramString);
  }
  
  public void onCreate(SQLiteDatabase paramSQLiteDatabase)
  {
    paramSQLiteDatabase.execSQL("CREATE TABLE notes (_id INTEGER PRIMARY KEY AUTOINCREMENT,title TEXT,text TEXT NOT NULL,date INTEGER NOT NULL,extra TEXT)");
  }
  
  public void onUpgrade(SQLiteDatabase paramSQLiteDatabase, int paramInt1, int paramInt2) {}
  
  public int updateNote(long paramLong, String paramString, Date paramDate)
  {
    paramString = createContentValues(paramString, paramDate);
    return getWritableDatabase().update("notes", paramString, "_id=" + paramLong, null);
  }
  
  static abstract interface NotesColumns
  {
    public static final String DATE = "date";
    public static final String EXTRA = "extra";
    public static final String TEXT = "text";
    public static final String TITLE = "title";
  }
  
  static abstract interface Tables
  {
    public static final String NOTES = "notes";
  }
}
