package com.qbiki.modules.epubreader;

import android.util.Log;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

public class Decompress
{
  private InputStream _in = null;
  private String _location;
  
  public Decompress(InputStream paramInputStream, String paramString)
  {
    this._in = paramInputStream;
    this._location = paramString;
    _dirChecker("");
  }
  
  public Decompress(String paramString1, String paramString2)
  {
    try
    {
      this._in = new FileInputStream(paramString1);
      this._location = paramString2;
      _dirChecker("");
      return;
    }
    catch (FileNotFoundException paramString1)
    {
      for (;;) {}
    }
  }
  
  private void _dirChecker(String paramString)
  {
    paramString = new File(this._location + paramString);
    if (!paramString.exists()) {
      paramString.mkdirs();
    }
  }
  
  private String rpath(String paramString)
  {
    int i = paramString.lastIndexOf("/");
    if (i > -1) {
      return paramString.substring(0, i);
    }
    return "";
  }
  
  public void unzip()
  {
    for (;;)
    {
      Object localObject;
      try
      {
        ZipInputStream localZipInputStream = new ZipInputStream(this._in);
        localObject = localZipInputStream.getNextEntry();
        if (localObject == null) {
          break;
        }
        if (((ZipEntry)localObject).isDirectory())
        {
          _dirChecker(((ZipEntry)localObject).getName());
          continue;
        }
        if (((ZipEntry)localObject).getName().contains("css")) {
          break label110;
        }
      }
      catch (Exception localException)
      {
        Log.e("Decompress", "unzip", localException);
        return;
      }
      if ((((ZipEntry)localObject).getName().contains("js")) || (((ZipEntry)localObject).getName().contains("png")) || (((ZipEntry)localObject).getName().contains("gif")) || (((ZipEntry)localObject).getName().contains("jpg")))
      {
        label110:
        Log.v("Decompress", "Unzipping " + ((ZipEntry)localObject).getName());
        _dirChecker(rpath(((ZipEntry)localObject).getName()));
        localObject = new FileOutputStream(this._location + ((ZipEntry)localObject).getName());
        byte[] arrayOfByte = new byte['Ð€'];
        for (;;)
        {
          int i = localException.read(arrayOfByte, 0, 1024);
          if (i < 0) {
            break;
          }
          ((FileOutputStream)localObject).write(arrayOfByte, 0, i);
        }
        localException.closeEntry();
        ((FileOutputStream)localObject).close();
      }
    }
    localException.close();
  }
}
