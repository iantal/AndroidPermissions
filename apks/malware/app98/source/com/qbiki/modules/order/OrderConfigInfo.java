package com.qbiki.modules.order;

import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import org.xml.sax.Attributes;

public class OrderConfigInfo
  implements Parcelable
{
  public static final Parcelable.Creator<OrderConfigInfo> CREATOR = new Parcelable.Creator()
  {
    public OrderConfigInfo createFromParcel(Parcel paramAnonymousParcel)
    {
      return new OrderConfigInfo(paramAnonymousParcel);
    }
    
    public OrderConfigInfo[] newArray(int paramAnonymousInt)
    {
      return new OrderConfigInfo[paramAnonymousInt];
    }
  };
  public static final int PAYMENT_METHOD_CASH = 1;
  public static final int PAYMENT_METHOD_CREDIT_CARD = 2;
  private String mCurrencyCode;
  private String mDeliveryMethodDeliverMessage;
  private String mDeliveryMethodPickupMessage;
  private double mDeliveryPrice;
  private double mFreeDelivery;
  private int mPaymentMethod;
  private String mPickUpAddress;
  private double mTaxPercent;
  
  public OrderConfigInfo()
  {
    this.mTaxPercent = 0.0D;
    this.mDeliveryMethodPickupMessage = "The order will be ready in 30 min";
    this.mDeliveryMethodDeliverMessage = "The order will be delivered in 30 min";
    this.mPaymentMethod = 1;
    this.mPickUpAddress = "";
    this.mDeliveryPrice = 0.0D;
    this.mFreeDelivery = 0.0D;
    this.mCurrencyCode = "USD";
  }
  
  public OrderConfigInfo(Parcel paramParcel)
  {
    this.mTaxPercent = paramParcel.readDouble();
    this.mDeliveryPrice = paramParcel.readDouble();
    this.mFreeDelivery = paramParcel.readDouble();
    this.mDeliveryMethodPickupMessage = paramParcel.readString();
    this.mDeliveryMethodPickupMessage = paramParcel.readString();
    this.mPickUpAddress = paramParcel.readString();
    this.mPaymentMethod = paramParcel.readInt();
    this.mCurrencyCode = paramParcel.readString();
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public String getCurrencyCode()
  {
    return this.mCurrencyCode;
  }
  
  public String getDeliveryMethodDeliverMessage()
  {
    return this.mDeliveryMethodDeliverMessage;
  }
  
  public String getDeliveryMethodPickupMessage()
  {
    return this.mDeliveryMethodPickupMessage;
  }
  
  public double getDeliveryPrice()
  {
    return this.mDeliveryPrice;
  }
  
  public double getFreeDelivery()
  {
    return this.mFreeDelivery;
  }
  
  public double getOrderTaxPercent()
  {
    return this.mTaxPercent;
  }
  
  public int getPaymentMethod()
  {
    return this.mPaymentMethod;
  }
  
  public String getPickUpAddress()
  {
    return this.mPickUpAddress;
  }
  
  public void initFrom(Attributes paramAttributes)
  {
    if (paramAttributes != null)
    {
      for (;;)
      {
        try
        {
          localObject1 = paramAttributes.getValue("orderTaxPercent");
          if ((localObject1 != null) && (((String)localObject1).length() != 0)) {
            this.mTaxPercent = Double.parseDouble((String)localObject1);
          }
        }
        catch (NumberFormatException localNumberFormatException1)
        {
          Object localObject1;
          int j;
          int i;
          this.mTaxPercent = 0.0D;
          continue;
        }
        try
        {
          localObject1 = paramAttributes.getValue("deliveryPrice");
          if ((localObject1 != null) && (((String)localObject1).length() != 0)) {
            this.mDeliveryPrice = Double.parseDouble((String)localObject1);
          }
        }
        catch (NumberFormatException localNumberFormatException2)
        {
          this.mDeliveryPrice = 0.0D;
          continue;
        }
        try
        {
          localObject1 = paramAttributes.getValue("freeDelivery");
          if ((localObject1 != null) && (((String)localObject1).length() != 0)) {
            this.mFreeDelivery = Double.parseDouble((String)localObject1);
          }
        }
        catch (NumberFormatException localNumberFormatException3)
        {
          this.mFreeDelivery = 0.0D;
          continue;
          paramAttributes = paramAttributes.getValue("currencyCode");
          if ((paramAttributes == null) || (paramAttributes.length() == 0)) {
            return;
          }
          this.mCurrencyCode = paramAttributes;
        }
      }
      localObject1 = paramAttributes.getValue("deliveryMethodPickupMessage");
      if ((localObject1 != null) && (((String)localObject1).length() != 0)) {
        this.mDeliveryMethodPickupMessage = ((String)localObject1);
      }
      localObject1 = paramAttributes.getValue("deliveryMethodDeliverMessage");
      if ((localObject1 != null) && (((String)localObject1).length() != 0)) {
        this.mDeliveryMethodDeliverMessage = ((String)localObject1);
      }
      localObject1 = paramAttributes.getValue("paymentMethods");
      if ((localObject1 != null) && (((String)localObject1).length() != 0))
      {
        localObject1 = ((String)localObject1).split(",");
        j = localObject1.length;
        i = 0;
        while (i < j)
        {
          Object localObject2 = localObject1[i];
          if (localObject2.equalsIgnoreCase("cash")) {
            this.mPaymentMethod |= 0x1;
          }
          if (localObject2.equalsIgnoreCase("authorizeNet")) {
            this.mPaymentMethod |= 0x2;
          }
          i += 1;
        }
      }
    }
  }
  
  public void setCurrencyCode(String paramString)
  {
    this.mCurrencyCode = paramString;
  }
  
  public void setDeliveryMethodDeliverMessage(String paramString)
  {
    this.mDeliveryMethodDeliverMessage = paramString;
  }
  
  public void setDeliveryMethodPickupMessage(String paramString)
  {
    this.mDeliveryMethodPickupMessage = paramString;
  }
  
  public void setDeliveryPrice(double paramDouble)
  {
    this.mDeliveryPrice = paramDouble;
  }
  
  public void setFreeDelivery(double paramDouble)
  {
    this.mFreeDelivery = paramDouble;
  }
  
  public void setOrderTaxPercent(double paramDouble)
  {
    this.mTaxPercent = paramDouble;
  }
  
  public void setPaymentMethod(int paramInt)
  {
    this.mPaymentMethod = paramInt;
  }
  
  public void setPickUpAddress(String paramString)
  {
    this.mPickUpAddress = paramString;
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    paramParcel.writeDouble(this.mTaxPercent);
    paramParcel.writeDouble(this.mDeliveryPrice);
    paramParcel.writeDouble(this.mFreeDelivery);
    paramParcel.writeString(this.mDeliveryMethodPickupMessage);
    paramParcel.writeString(this.mDeliveryMethodPickupMessage);
    paramParcel.writeString(this.mPickUpAddress);
    paramParcel.writeInt(this.mPaymentMethod);
    paramParcel.writeString(this.mCurrencyCode);
  }
}
