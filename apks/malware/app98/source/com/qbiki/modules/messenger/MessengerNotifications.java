package com.qbiki.modules.messenger;

import android.app.NotificationManager;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.net.Uri.Builder;
import android.os.Bundle;
import android.support.v4.app.NotificationCompat.Builder;
import android.support.v4.app.TaskStackBuilder;
import android.support.v4.content.IntentCompat;
import com.qbiki.gcm.GCMBroadcastReceiver;
import com.qbiki.scapi.AppUser;
import com.qbiki.scapi.SCApi;
import com.qbiki.seattleclouds.App;
import com.qbiki.seattleclouds.AppConfig;
import com.qbiki.seattleclouds.AppStarterActivity;
import com.qbiki.seattleclouds.FragmentInfo;
import com.qbiki.seattleclouds.Page;
import java.util.Map;

public class MessengerNotifications
{
  private static final boolean DEBUG = false;
  private static final String TAG = "MessengerNotifications";
  
  public MessengerNotifications() {}
  
  private static void generateNewMessageNotification(Context paramContext, Bundle paramBundle)
  {
    String str3 = paramContext.getString(2131361834) + paramContext.getString(2131362270);
    String str2 = paramBundle.getString("text");
    String str1 = str2;
    if (str2.length() > 50) {
      str1 = str2.substring(0, 50);
    }
    int i = GCMBroadcastReceiver.getNextNotificationId(paramContext);
    str2 = paramBundle.getString("conversationId");
    if (!App.appConfig.isInitialized()) {
      ((App)paramContext.getApplicationContext()).restoreRuntimeStateForced();
    }
    paramBundle = null;
    if (App.appConfig.getMessengerNotificationPageId() != null) {
      paramBundle = (Page)App.appConfig.getPages().get(App.appConfig.getMessengerNotificationPageId());
    }
    TaskStackBuilder localTaskStackBuilder = TaskStackBuilder.create(paramContext);
    localTaskStackBuilder.addNextIntent(IntentCompat.makeRestartActivityTask(new ComponentName(paramContext, AppStarterActivity.class)));
    Bundle localBundle = new Bundle();
    if (paramBundle != null)
    {
      localBundle.putInt("ARG_MAX_MESSAGE_LENGTH", paramBundle.getMaxMessageLength());
      localBundle.putString("PAGE_ID", paramBundle.getId());
    }
    localTaskStackBuilder.addNextIntent(App.getPageIntent(new FragmentInfo(MessengerFragment.class.getName(), localBundle), paramContext));
    localBundle = new Bundle();
    if (paramBundle != null)
    {
      localBundle.putInt("ARG_MAX_MESSAGE_LENGTH", paramBundle.getMaxMessageLength());
      localBundle.putString("PAGE_ID", paramBundle.getId());
    }
    localBundle.putString("ARG_CONVERSATION_ID", str2);
    paramBundle = App.getPageIntent(new FragmentInfo(ConversationFragment.class.getName(), localBundle), paramContext);
    paramBundle.setData(new Uri.Builder().scheme("data").appendQueryParameter("id", i + "").build());
    localTaskStackBuilder.addNextIntent(paramBundle);
    paramBundle = localTaskStackBuilder.getPendingIntent(0, 268435456);
    paramBundle = new NotificationCompat.Builder(paramContext).setSmallIcon(2130837706).setContentTitle(str3).setContentText(str1).setAutoCancel(true).setDefaults(-1).setContentIntent(paramBundle).build();
    ((NotificationManager)paramContext.getSystemService("notification")).notify(i, paramBundle);
  }
  
  public static void processGcmMessage(Context paramContext, Bundle paramBundle)
  {
    String str = paramBundle.getString("user.id");
    AppUser localAppUser = SCApi.getInstance().getSignedInAppUser();
    if ((localAppUser != null) && (localAppUser.getId().equals(str))) {
      return;
    }
    generateNewMessageNotification(paramContext, paramBundle);
  }
}
