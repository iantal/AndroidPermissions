package com.qbiki.modules.sharepoint;

import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import java.util.HashMap;

public class SPListItem
  implements Parcelable
{
  public static final Parcelable.Creator<SPListItem> CREATOR = new Parcelable.Creator()
  {
    public SPListItem createFromParcel(Parcel paramAnonymousParcel)
    {
      return new SPListItem(paramAnonymousParcel, null);
    }
    
    public SPListItem[] newArray(int paramAnonymousInt)
    {
      return new SPListItem[paramAnonymousInt];
    }
  };
  public Integer ID = Integer.valueOf(0);
  public String[] arrHiddenFields = { "LinkTitle", "ID", "DocIcon", "Author", "Created", "Created_x0020_Date", "Editor", "Modified", "ContentType", "LinkTitleNoMenu", "FolderChildCount", "ItemChildCount", "Edit", "Attachments", "_UIVersionString" };
  public Integer attachments = Integer.valueOf(0);
  public String author = "";
  public String contentType = "";
  private String createDate = "";
  public String docIcon = "";
  public String editor = "";
  public String fileLeafRef = "";
  public String fileRef = "";
  public Integer fileSize = Integer.valueOf(0);
  public boolean isFile;
  public boolean isImage;
  public boolean isWebPage;
  public Integer level = Integer.valueOf(0);
  private String modifiedDate = "";
  public String name = "";
  public String title = "";
  public String type = "";
  public String uniqueId = "";
  public HashMap<String, String> userData;
  public String version = "";
  
  public SPListItem()
  {
    this.ID = Integer.valueOf(1);
    this.isWebPage = false;
  }
  
  private SPListItem(Parcel paramParcel)
  {
    this.name = paramParcel.readString();
    this.title = paramParcel.readString();
    this.type = paramParcel.readString();
    this.modifiedDate = paramParcel.readString();
    this.createDate = paramParcel.readString();
    this.editor = paramParcel.readString();
    this.author = paramParcel.readString();
    this.uniqueId = paramParcel.readString();
    this.fileRef = paramParcel.readString();
    this.fileSize = Integer.valueOf(paramParcel.readInt());
    this.ID = Integer.valueOf(paramParcel.readInt());
    this.level = Integer.valueOf(paramParcel.readInt());
    this.fileLeafRef = paramParcel.readString();
    this.docIcon = paramParcel.readString();
    if (paramParcel.readInt() == 1)
    {
      bool1 = true;
      this.isImage = bool1;
      if (paramParcel.readInt() != 1) {
        break label427;
      }
      bool1 = true;
      label355:
      this.isWebPage = bool1;
      if (paramParcel.readInt() != 1) {
        break label432;
      }
    }
    label427:
    label432:
    for (boolean bool1 = bool2;; bool1 = false)
    {
      this.isFile = bool1;
      this.userData = ((HashMap)paramParcel.readSerializable());
      this.attachments = Integer.valueOf(paramParcel.readInt());
      this.version = paramParcel.readString();
      this.contentType = paramParcel.readString();
      paramParcel.readStringArray(this.arrHiddenFields);
      return;
      bool1 = false;
      break;
      bool1 = false;
      break label355;
    }
  }
  
  public SPListItem(Integer paramInteger)
  {
    this();
    this.ID = paramInteger;
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public String getCreateDate()
  {
    return this.createDate;
  }
  
  public String getModifiedDate()
  {
    return this.modifiedDate;
  }
  
  public void setCreateDate(String paramString)
  {
    this.createDate = paramString;
  }
  
  public void setModifiedDate(String paramString)
  {
    this.modifiedDate = paramString;
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    int i = 1;
    paramParcel.writeString(this.name);
    paramParcel.writeString(this.title);
    paramParcel.writeString(this.type);
    paramParcel.writeString(this.modifiedDate);
    paramParcel.writeString(this.createDate);
    paramParcel.writeString(this.editor);
    paramParcel.writeString(this.author);
    paramParcel.writeString(this.uniqueId);
    paramParcel.writeString(this.fileRef);
    paramParcel.writeInt(this.fileSize.intValue());
    paramParcel.writeInt(this.ID.intValue());
    paramParcel.writeInt(this.level.intValue());
    paramParcel.writeString(this.fileLeafRef);
    paramParcel.writeString(this.docIcon);
    if (this.isImage)
    {
      paramInt = 1;
      paramParcel.writeInt(paramInt);
      if (!this.isWebPage) {
        break label214;
      }
      paramInt = 1;
      label146:
      paramParcel.writeInt(paramInt);
      if (!this.isFile) {
        break label219;
      }
    }
    label214:
    label219:
    for (paramInt = i;; paramInt = 0)
    {
      paramParcel.writeInt(paramInt);
      paramParcel.writeSerializable(this.userData);
      paramParcel.writeInt(this.attachments.intValue());
      paramParcel.writeString(this.version);
      paramParcel.writeString(this.contentType);
      paramParcel.writeStringArray(this.arrHiddenFields);
      return;
      paramInt = 0;
      break;
      paramInt = 0;
      break label146;
    }
  }
}
