package com.qbiki.modules.sharepoint;

import android.util.Log;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.ArrayList;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import org.ksoap2.serialization.AttributeInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

public class SPParserXMLtoSOAPObject
  extends DefaultHandler
{
  private static final String tag = "SPParserXMLtoSOAPObject";
  int index = -1;
  ArrayList<Object> objects = new ArrayList();
  private Object resultObject = null;
  String xmlStr;
  
  public SPParserXMLtoSOAPObject(String paramString)
  {
    this.xmlStr = paramString;
    parseDocument();
  }
  
  private void parseDocument()
  {
    SAXParserFactory localSAXParserFactory = SAXParserFactory.newInstance();
    try
    {
      localSAXParserFactory.newSAXParser().parse(new ByteArrayInputStream(this.xmlStr.getBytes()), this);
      return;
    }
    catch (ParserConfigurationException localParserConfigurationException)
    {
      Log.e("SPParserXMLtoSOAPObject", "ParserConfig error");
      return;
    }
    catch (SAXException localSAXException)
    {
      Log.e("SPParserXMLtoSOAPObject", "SAXException : xml not well formed");
      return;
    }
    catch (IOException localIOException)
    {
      Log.e("SPParserXMLtoSOAPObject", "IO error");
    }
  }
  
  public void characters(char[] paramArrayOfChar, int paramInt1, int paramInt2)
    throws SAXException
  {
    Object localObject = new String(paramArrayOfChar, paramInt1, paramInt2);
    if (this.objects.size() < this.index) {}
    do
    {
      return;
      paramArrayOfChar = (SoapObject)this.objects.get(this.index);
    } while (paramArrayOfChar == null);
    localObject = new SoapPrimitive("", paramArrayOfChar.getName(), (String)localObject);
    paramInt1 = 0;
    while (paramInt1 < paramArrayOfChar.getAttributeCount())
    {
      AttributeInfo localAttributeInfo = new AttributeInfo();
      paramArrayOfChar.getAttributeInfo(paramInt1, localAttributeInfo);
      ((SoapPrimitive)localObject).addAttributeIfValue(localAttributeInfo);
      paramInt1 += 1;
    }
    this.objects.remove(this.index);
    this.objects.add(localObject);
  }
  
  public void endElement(String paramString1, String paramString2, String paramString3)
    throws SAXException
  {
    if (this.objects.size() < this.index) {
      return;
    }
    paramString1 = this.objects.get(this.index);
    if (this.index - 1 >= 0) {
      if ((paramString1 instanceof SoapObject))
      {
        paramString1 = (SoapObject)paramString1;
        paramString2 = (SoapObject)this.objects.get(this.index - 1);
        if (paramString2 != null) {
          paramString2.addSoapObject(paramString1);
        }
      }
    }
    for (;;)
    {
      this.objects.remove(this.index);
      this.index -= 1;
      return;
      if ((paramString1 instanceof SoapPrimitive))
      {
        paramString1 = (SoapPrimitive)paramString1;
        paramString2 = (SoapObject)this.objects.get(this.index - 1);
        if (paramString2 != null)
        {
          paramString2.addProperty(paramString1.getName(), paramString1);
          continue;
          this.resultObject = this.objects.get(this.index);
        }
      }
    }
  }
  
  public Object getResultObject()
  {
    return this.resultObject;
  }
  
  public void setResultObject(SoapObject paramSoapObject)
  {
    this.resultObject = paramSoapObject;
  }
  
  public void startElement(String paramString1, String paramString2, String paramString3, Attributes paramAttributes)
    throws SAXException
  {
    this.index += 1;
    paramString1 = new SoapObject("", paramString3);
    int i = 0;
    while (i < paramAttributes.getLength())
    {
      paramString1.addAttribute(paramAttributes.getQName(i), paramAttributes.getValue(i));
      i += 1;
    }
    this.objects.add(paramString1);
  }
}
