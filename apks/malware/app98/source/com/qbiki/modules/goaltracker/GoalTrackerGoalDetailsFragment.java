package com.qbiki.modules.goaltracker;

import android.app.Activity;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.TextView;
import com.qbiki.seattleclouds.App;
import com.qbiki.seattleclouds.SCFragment;
import com.qbiki.util.DialogUtil;
import java.util.HashMap;

public class GoalTrackerGoalDetailsFragment
  extends SCFragment
{
  public static final String CATEGORY_ID_KEY = "CATEGORY_ID_KEY";
  public static final String GOAL_ID_KEY = "GOAL_ID_KEY";
  private Button mApplyButton;
  private GoalTrackerCategories mCategoriesInstance;
  private HashMap<String, String> mCurrentGoal;
  private TextView mCurrentProgressEditText;
  private SeekBar mCurrentProgressSeekBar;
  private String mGoalId;
  private TextView mGoalNotesTextView;
  private TextView mGoalTitleTextView;
  private int mProgress;
  
  public GoalTrackerGoalDetailsFragment() {}
  
  private void initUIFromGoal(String paramString, Activity paramActivity)
  {
    this.mCurrentGoal = this.mCategoriesInstance.getGoal(paramString);
    if (this.mCurrentGoal == null) {
      return;
    }
    this.mGoalTitleTextView.setText((CharSequence)this.mCurrentGoal.get("title"));
    this.mGoalNotesTextView.setText((CharSequence)this.mCurrentGoal.get("note"));
    paramString = (String)this.mCurrentGoal.get("progress");
    try
    {
      i = Integer.parseInt(paramString);
      if (i < 100)
      {
        paramActivity = String.format(paramActivity.getString(2131362399), new Object[] { paramString }) + "%";
        this.mCurrentProgressEditText.setText(paramActivity);
        try
        {
          this.mProgress = Integer.parseInt(paramString);
          this.mCurrentProgressSeekBar.setProgress(this.mProgress);
          return;
        }
        catch (NumberFormatException paramString)
        {
          this.mCurrentProgressSeekBar.setProgress(0);
          this.mProgress = 0;
          return;
        }
      }
    }
    catch (NumberFormatException localNumberFormatException)
    {
      for (;;)
      {
        int i = 0;
      }
      this.mCurrentProgressSeekBar.setVisibility(8);
      this.mCurrentProgressEditText.setText(paramActivity.getString(2131362400));
      this.mApplyButton.setVisibility(8);
    }
  }
  
  public View onCreateView(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, final Bundle paramBundle)
  {
    paramBundle = getArguments();
    if (paramBundle != null) {
      this.mGoalId = paramBundle.getString("GOAL_ID_KEY");
    }
    paramBundle = getActivity();
    this.mCategoriesInstance = GoalTrackerCategories.getInstance(paramBundle);
    this.mCategoriesInstance.load();
    paramLayoutInflater = paramLayoutInflater.inflate(2130903147, paramViewGroup, false);
    this.mCurrentProgressEditText = ((TextView)paramLayoutInflater.findViewById(2131099969));
    this.mCurrentProgressSeekBar = ((SeekBar)paramLayoutInflater.findViewById(2131099970));
    this.mGoalTitleTextView = ((TextView)paramLayoutInflater.findViewById(2131099967));
    this.mGoalNotesTextView = ((TextView)paramLayoutInflater.findViewById(2131099968));
    this.mApplyButton = ((Button)paramLayoutInflater.findViewById(2131099971));
    this.mApplyButton.setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        GoalTrackerGoalDetailsFragment.this.mCurrentGoal.put("progress", GoalTrackerGoalDetailsFragment.this.mProgress + "");
        GoalTrackerGoalDetailsFragment.this.mCategoriesInstance.updateGoal(GoalTrackerGoalDetailsFragment.this.mCurrentGoal);
        GoalTrackerGoalDetailsFragment.this.mCategoriesInstance.save();
        App.closePage(GoalTrackerGoalDetailsFragment.this);
      }
    });
    this.mCurrentProgressSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener()
    {
      public void onProgressChanged(SeekBar paramAnonymousSeekBar, int paramAnonymousInt, boolean paramAnonymousBoolean)
      {
        if (paramAnonymousBoolean)
        {
          GoalTrackerGoalDetailsFragment.access$002(GoalTrackerGoalDetailsFragment.this, paramAnonymousInt);
          String str = String.format(paramBundle.getString(2131362399), new Object[] { Integer.valueOf(paramAnonymousInt) }) + "%";
          GoalTrackerGoalDetailsFragment.this.mCurrentProgressEditText.setText(str);
          paramAnonymousSeekBar.setProgress(GoalTrackerGoalDetailsFragment.this.mProgress);
          if (GoalTrackerGoalDetailsFragment.this.mProgress == 100) {
            DialogUtil.showAlert(paramBundle, paramBundle.getString(2131361917), String.format(paramBundle.getString(2131362401), new Object[] { GoalTrackerGoalDetailsFragment.this.mCurrentGoal.get("title") }), new DialogInterface.OnClickListener()
            {
              public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
              {
                GoalTrackerGoalDetailsFragment.this.mCurrentGoal.put("progress", GoalTrackerGoalDetailsFragment.this.mProgress + "");
                GoalTrackerGoalDetailsFragment.this.mCategoriesInstance.updateGoal(GoalTrackerGoalDetailsFragment.this.mCurrentGoal);
                GoalTrackerGoalDetailsFragment.this.mCategoriesInstance.save();
                App.closePage(GoalTrackerGoalDetailsFragment.this);
              }
            });
          }
        }
      }
      
      public void onStartTrackingTouch(SeekBar paramAnonymousSeekBar) {}
      
      public void onStopTrackingTouch(SeekBar paramAnonymousSeekBar) {}
    });
    return paramLayoutInflater;
  }
  
  public void onViewCreated(View paramView, Bundle paramBundle)
  {
    initUIFromGoal(this.mGoalId, getActivity());
    super.onViewCreated(paramView, paramBundle);
  }
}
