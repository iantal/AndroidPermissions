package com.qbiki.util;

import android.content.ContentProvider;
import android.content.ContentValues;
import android.content.Context;
import android.content.res.AssetFileDescriptor;
import android.content.res.AssetManager;
import android.database.Cursor;
import android.net.Uri;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import com.android.vending.expansion.zipfile.ZipResourceFile;
import com.qbiki.seattleclouds.App;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URI;

public class InternalFileContentProvider
  extends ContentProvider
{
  private static final String TAG = "InternalFileContentProvider";
  private AssetFileDescriptor currentFD;
  
  public InternalFileContentProvider() {}
  
  public int delete(Uri paramUri, String paramString, String[] paramArrayOfString)
  {
    throw new UnsupportedOperationException("Not supported by this provider");
  }
  
  public String getType(Uri paramUri)
  {
    return "vnd.android.cursor.item/asset";
  }
  
  public Uri insert(Uri paramUri, ContentValues paramContentValues)
  {
    throw new UnsupportedOperationException("Not supported by this provider");
  }
  
  public boolean onCreate()
  {
    return true;
  }
  
  public AssetFileDescriptor openAssetFile(Uri paramUri, String paramString)
    throws FileNotFoundException
  {
    if (this.currentFD != null) {}
    try
    {
      this.currentFD.close();
      this.currentFD = null;
      if ((App.isPreviewer) || (App.syncEnabled))
      {
        Log.i("InternalFileContentProvider", "providing access to internal file: " + paramUri.getPath());
        this.currentFD = new AssetFileDescriptor(ParcelFileDescriptor.open(new File(URI.create("file://" + paramUri.getPath())), 268435456), 0L, -1L);
        return this.currentFD;
      }
    }
    catch (IOException paramString)
    {
      for (;;)
      {
        Log.e("InternalFileContentProvider", "openAssetFile: error closing file descriptor: ", paramString);
        continue;
        if (App.apkExpansionFilesEnabled)
        {
          this.currentFD = App.apkExpansionFile.getAssetFileDescriptor(paramUri.getPath().substring(1));
          if (this.currentFD == null) {
            Log.e("InternalFileContentProvider", "openAssetFile: File not found in expansion file: " + paramUri.getPath().substring(1));
          }
        }
        else
        {
          Log.i("InternalFileContentProvider", "providing access to asset file: " + paramUri.getPath());
          try
          {
            this.currentFD = getContext().getAssets().openFd(paramUri.getPath().substring(1));
          }
          catch (IOException paramString)
          {
            Log.e("InternalFileContentProvider", "openAssetFile: error getting file from asset: " + paramUri.getPath(), paramString);
          }
        }
      }
    }
  }
  
  public ParcelFileDescriptor openFile(Uri paramUri, String paramString)
    throws FileNotFoundException
  {
    paramUri = openAssetFile(paramUri, paramString);
    if (paramUri != null) {
      return paramUri.getParcelFileDescriptor();
    }
    return null;
  }
  
  public Cursor query(Uri paramUri, String[] paramArrayOfString1, String paramString1, String[] paramArrayOfString2, String paramString2)
  {
    return null;
  }
  
  public int update(Uri paramUri, ContentValues paramContentValues, String paramString, String[] paramArrayOfString)
  {
    throw new UnsupportedOperationException("Not supported by this provider");
  }
}
