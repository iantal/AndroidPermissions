package com.qbiki.util;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.Context;
import android.content.DialogInterface;
import android.content.DialogInterface.OnCancelListener;
import android.content.DialogInterface.OnClickListener;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.TableLayout.LayoutParams;

public class DialogUtil
{
  public DialogUtil() {}
  
  public static void showAlert(Context paramContext, int paramInt1, int paramInt2)
  {
    showAlert(paramContext, paramContext.getResources().getString(paramInt1), paramContext.getResources().getString(paramInt2));
  }
  
  public static void showAlert(Context paramContext, int paramInt1, int paramInt2, DialogInterface.OnClickListener paramOnClickListener)
  {
    showAlert(paramContext, paramContext.getResources().getString(paramInt1), paramContext.getResources().getString(paramInt2), paramOnClickListener);
  }
  
  public static void showAlert(Context paramContext, int paramInt1, int paramInt2, DialogInterface.OnClickListener paramOnClickListener, int paramInt3)
  {
    showAlert(paramContext, paramContext.getResources().getString(paramInt1), paramContext.getResources().getString(paramInt2), paramOnClickListener, null, paramContext.getResources().getDrawable(paramInt3));
  }
  
  public static void showAlert(Context paramContext, int paramInt1, int paramInt2, DialogInterface.OnClickListener paramOnClickListener, boolean paramBoolean)
  {
    showAlert(paramContext, paramContext.getResources().getString(paramInt1), paramContext.getResources().getString(paramInt2), paramOnClickListener, null, null, paramBoolean);
  }
  
  public static void showAlert(Context paramContext, int paramInt, String paramString)
  {
    showAlert(paramContext, paramContext.getResources().getString(paramInt), paramString);
  }
  
  public static void showAlert(Context paramContext, int paramInt, String paramString, DialogInterface.OnClickListener paramOnClickListener)
  {
    showAlert(paramContext, paramContext.getResources().getString(paramInt), paramString, paramOnClickListener);
  }
  
  public static void showAlert(Context paramContext, String paramString1, String paramString2)
  {
    showAlert(paramContext, paramString1, paramString2, null, null, null);
  }
  
  public static void showAlert(Context paramContext, String paramString1, String paramString2, DialogInterface.OnClickListener paramOnClickListener)
  {
    showAlert(paramContext, paramString1, paramString2, paramOnClickListener, null, null);
  }
  
  public static void showAlert(Context paramContext, String paramString1, String paramString2, DialogInterface.OnClickListener paramOnClickListener, DialogInterface.OnCancelListener paramOnCancelListener)
  {
    showAlert(paramContext, paramString1, paramString2, paramOnClickListener, paramOnCancelListener, null);
  }
  
  public static void showAlert(Context paramContext, String paramString1, String paramString2, DialogInterface.OnClickListener paramOnClickListener, DialogInterface.OnCancelListener paramOnCancelListener, Drawable paramDrawable)
  {
    showAlert(paramContext, paramString1, paramString2, paramOnClickListener, paramOnCancelListener, paramDrawable, true);
  }
  
  public static void showAlert(Context paramContext, String paramString1, String paramString2, DialogInterface.OnClickListener paramOnClickListener, DialogInterface.OnCancelListener paramOnCancelListener, Drawable paramDrawable, boolean paramBoolean)
  {
    if (paramContext == null) {}
    while (((paramContext instanceof Activity)) && (((Activity)paramContext).isFinishing())) {
      return;
    }
    Object localObject = paramOnClickListener;
    if (paramOnClickListener == null) {
      localObject = new DialogInterface.OnClickListener()
      {
        public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt) {}
      };
    }
    paramContext = new AlertDialog.Builder(paramContext);
    paramContext.setMessage(paramString2).setCancelable(paramBoolean).setPositiveButton(17039370, (DialogInterface.OnClickListener)localObject);
    if (paramString1 != null) {
      paramContext.setTitle(paramString1);
    }
    if (paramDrawable != null) {
      paramContext.setIcon(paramDrawable);
    }
    if (paramOnCancelListener != null) {
      paramContext.setOnCancelListener(paramOnCancelListener);
    }
    paramContext.create().show();
  }
  
  public static void showAlertWithPosNeutButtons(Context paramContext, String paramString1, String paramString2, Drawable paramDrawable, DialogInterface.OnClickListener paramOnClickListener1, String paramString3, DialogInterface.OnClickListener paramOnClickListener2, String paramString4)
  {
    showAlertWithPosNeutNegButtons(paramContext, paramString1, paramString2, paramDrawable, paramOnClickListener1, paramString3, paramOnClickListener2, paramString4, null, null);
  }
  
  public static void showAlertWithPosNeutNegButtons(Context paramContext, String paramString1, String paramString2, Drawable paramDrawable, DialogInterface.OnClickListener paramOnClickListener1, String paramString3, DialogInterface.OnClickListener paramOnClickListener2, String paramString4, DialogInterface.OnClickListener paramOnClickListener3, String paramString5)
  {
    paramContext = new AlertDialog.Builder(paramContext);
    if (paramString1 != null) {
      paramContext.setTitle(paramString1);
    }
    if (paramDrawable != null) {
      paramContext.setIcon(paramDrawable);
    }
    if (paramDrawable != null) {
      paramContext.setIcon(paramDrawable);
    }
    if (paramString2 != null) {
      paramContext.setMessage(paramString2);
    }
    if ((paramOnClickListener1 != null) && (paramString3 != null)) {
      paramContext.setPositiveButton(paramString3, paramOnClickListener1);
    }
    if ((paramOnClickListener2 != null) && (paramString4 != null)) {
      paramContext.setNeutralButton(paramString4, paramOnClickListener2);
    }
    if ((paramOnClickListener3 != null) && (paramString5 != null)) {
      paramContext.setNegativeButton(paramString5, paramOnClickListener2);
    }
    paramContext.create().show();
  }
  
  public static void showPrompt(Context paramContext, int paramInt1, int paramInt2, boolean paramBoolean, int paramInt3, PromptListener paramPromptListener)
  {
    showPrompt(paramContext, paramContext.getResources().getString(paramInt1), paramContext.getResources().getString(paramInt2), paramBoolean, paramContext.getResources().getString(paramInt3), paramPromptListener);
  }
  
  public static void showPrompt(Context paramContext, int paramInt1, int paramInt2, boolean paramBoolean, PromptListener paramPromptListener)
  {
    showPrompt(paramContext, paramContext.getResources().getString(paramInt1), paramContext.getResources().getString(paramInt2), paramBoolean, paramPromptListener);
  }
  
  public static void showPrompt(Context paramContext, String paramString1, String paramString2, boolean paramBoolean, PromptListener paramPromptListener)
  {
    showPrompt(paramContext, paramString1, paramString2, paramBoolean, paramContext.getResources().getString(2131361909), paramPromptListener);
  }
  
  public static void showPrompt(Context paramContext, String paramString1, String paramString2, boolean paramBoolean, String paramString3, PromptListener paramPromptListener)
  {
    showPrompt(paramContext, paramString1, paramString2, paramBoolean, "", paramString3, paramPromptListener);
  }
  
  public static void showPrompt(final Context paramContext, String paramString1, String paramString2, boolean paramBoolean, String paramString3, String paramString4, PromptListener paramPromptListener)
  {
    if (paramContext == null) {}
    final EditText localEditText;
    do
    {
      return;
      localEditText = new EditText(paramContext);
      localEditText.setText(paramString3);
      localEditText.selectAll();
      paramString3 = new LinearLayout(paramContext);
      Object localObject = new LinearLayout.LayoutParams(-1, -2);
      int i = DeviceUtil.dpToPx(paramContext, 5.0F);
      int j = DeviceUtil.dpToPx(paramContext, 10.0F);
      ((LinearLayout.LayoutParams)localObject).setMargins(j, i, j, i);
      paramString3.addView(localEditText, (ViewGroup.LayoutParams)localObject);
      localObject = new AlertDialog.Builder(paramContext);
      ((AlertDialog.Builder)localObject).setCancelable(true).setView(paramString3).setPositiveButton(paramString4, new DialogInterface.OnClickListener()
      {
        public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
        {
          if (this.val$listener != null) {
            this.val$listener.onStringInput(localEditText.getText().toString());
          }
          ((InputMethodManager)paramContext.getSystemService("input_method")).hideSoftInputFromWindow(localEditText.getWindowToken(), 0);
        }
      }).setNegativeButton(17039360, new DialogInterface.OnClickListener()
      {
        public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
        {
          if (this.val$listener != null) {
            this.val$listener.onCancel();
          }
          ((InputMethodManager)paramContext.getSystemService("input_method")).hideSoftInputFromWindow(localEditText.getWindowToken(), 0);
          paramAnonymousDialogInterface.cancel();
        }
      });
      if (paramString1 != null) {
        ((AlertDialog.Builder)localObject).setTitle(paramString1);
      }
      if (paramString2 != null) {
        ((AlertDialog.Builder)localObject).setMessage(paramString2);
      }
      paramContext = ((AlertDialog.Builder)localObject).create();
      paramContext.getWindow().setSoftInputMode(5);
      paramContext.show();
    } while (paramBoolean);
    paramContext.getButton(-1).setEnabled(false);
    localEditText.addTextChangedListener(new TextWatcher()
    {
      public void afterTextChanged(Editable paramAnonymousEditable) {}
      
      public void beforeTextChanged(CharSequence paramAnonymousCharSequence, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3) {}
      
      public void onTextChanged(CharSequence paramAnonymousCharSequence, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3)
      {
        Button localButton = this.val$alert.getButton(-1);
        if (paramAnonymousCharSequence.length() != 0) {}
        for (boolean bool = true;; bool = false)
        {
          localButton.setEnabled(bool);
          return;
        }
      }
    });
  }
  
  public static void showPromptAuth(final Context paramContext, String paramString1, String paramString2, boolean paramBoolean, String paramString3, PromptAuthListener paramPromptAuthListener)
  {
    if (paramContext == null) {}
    final EditText localEditText1;
    do
    {
      return;
      Object localObject = new TableLayout.LayoutParams();
      ((TableLayout.LayoutParams)localObject).setMargins(10, 5, 10, 5);
      localEditText1 = new EditText(paramContext);
      localEditText1.setHint("Username");
      localEditText1.setLayoutParams((ViewGroup.LayoutParams)localObject);
      final EditText localEditText2 = new EditText(paramContext);
      localEditText2.setHint("Password");
      localEditText2.setLayoutParams((ViewGroup.LayoutParams)localObject);
      localEditText2.setInputType(129);
      localObject = new LinearLayout(paramContext);
      ((LinearLayout)localObject).setOrientation(1);
      ((LinearLayout)localObject).addView(localEditText1);
      ((LinearLayout)localObject).addView(localEditText2);
      AlertDialog.Builder localBuilder = new AlertDialog.Builder(paramContext);
      localBuilder.setCancelable(true).setView((View)localObject).setPositiveButton(paramString3, new DialogInterface.OnClickListener()
      {
        public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
        {
          if (this.val$listener != null) {
            this.val$listener.onStringInputAuth(localEditText1.getText().toString(), localEditText2.getText().toString());
          }
          paramAnonymousDialogInterface = (InputMethodManager)paramContext.getSystemService("input_method");
          paramAnonymousDialogInterface.hideSoftInputFromWindow(localEditText1.getWindowToken(), 0);
          paramAnonymousDialogInterface.hideSoftInputFromWindow(localEditText2.getWindowToken(), 0);
        }
      }).setNegativeButton(17039360, new DialogInterface.OnClickListener()
      {
        public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
        {
          if (this.val$listener != null) {
            this.val$listener.onCancel();
          }
          InputMethodManager localInputMethodManager = (InputMethodManager)paramContext.getSystemService("input_method");
          localInputMethodManager.hideSoftInputFromWindow(localEditText1.getWindowToken(), 0);
          localInputMethodManager.hideSoftInputFromWindow(localEditText2.getWindowToken(), 0);
          paramAnonymousDialogInterface.cancel();
        }
      });
      if (paramString1 != null) {
        localBuilder.setTitle(paramString1);
      }
      if (paramString2 != null) {
        localBuilder.setMessage(paramString2);
      }
      paramContext = localBuilder.create();
      paramContext.getWindow().setSoftInputMode(5);
      paramContext.show();
    } while (paramBoolean);
    paramContext.getButton(-1).setEnabled(false);
    localEditText1.addTextChangedListener(new TextWatcher()
    {
      public void afterTextChanged(Editable paramAnonymousEditable) {}
      
      public void beforeTextChanged(CharSequence paramAnonymousCharSequence, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3) {}
      
      public void onTextChanged(CharSequence paramAnonymousCharSequence, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3)
      {
        Button localButton = this.val$alert.getButton(-1);
        if (paramAnonymousCharSequence.length() != 0) {}
        for (boolean bool = true;; bool = false)
        {
          localButton.setEnabled(bool);
          return;
        }
      }
    });
  }
  
  public static abstract interface PromptAuthListener
  {
    public abstract void onCancel();
    
    public abstract void onStringInputAuth(String paramString1, String paramString2);
  }
  
  public static abstract interface PromptListener
  {
    public abstract void onCancel();
    
    public abstract void onStringInput(String paramString);
  }
}
