package com.qbiki.mbfx;

import android.util.Log;
import com.facebook.android.Facebook;
import com.qbiki.seattleclouds.App;
import com.qbiki.seattleclouds.AppConfig;
import com.qbiki.util.DataUtil;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import org.apache.commons.io.FileUtils;
import org.json.JSONException;
import org.json.JSONObject;

public class MBFXContext
{
  private static final String CONTEXT_JS_FILE_NAME = "/MBFX/context.js";
  private static final String TAG = "MBFXContext";
  static Facebook facebook = null;
  private static User user = null;
  
  public MBFXContext() {}
  
  public static Facebook getFacebook()
  {
    if (facebook == null)
    {
      Log.v("MBFXContext", "FBID: " + App.appConfig.getFacebookAppID());
      facebook = new Facebook(App.appConfig.getFacebookAppID());
    }
    return facebook;
  }
  
  public static JSONObject getJSONDictionary()
  {
    JSONObject localJSONObject3 = new JSONObject();
    try
    {
      if (user != null)
      {
        JSONObject localJSONObject2 = user.getJSONDictionary();
        JSONObject localJSONObject1 = localJSONObject2;
        if (localJSONObject2 == null) {
          localJSONObject1 = new JSONObject();
        }
        localJSONObject3.put("user", localJSONObject1);
      }
      return localJSONObject3;
    }
    catch (JSONException localJSONException)
    {
      Log.e("MBFXContext", "getJSONDictionary: " + localJSONException);
    }
    return localJSONObject3;
  }
  
  public static User getSessionUser()
  {
    return user;
  }
  
  public static void invalidateSession()
  {
    user = null;
    saveContextToJS();
  }
  
  public static boolean isSessionValid()
  {
    return user != null;
  }
  
  public static void readContextFromJS()
  {
    Object localObject1 = new File(App.getAppProtectedStoragePath() + "/MBFX/context.js");
    if (((File)localObject1).exists()) {}
    try
    {
      Object localObject2 = new JSONObject(DataUtil.readString(new FileInputStream((File)localObject1)).substring(12)).getJSONObject("user");
      if (localObject2 != null)
      {
        localObject1 = new User();
        ((User)localObject1).username = ((JSONObject)localObject2).optString("username");
        ((User)localObject1).firstName = ((JSONObject)localObject2).optString("firstName");
        ((User)localObject1).lastName = ((JSONObject)localObject2).optString("lastName");
        localObject2 = ((JSONObject)localObject2).getString("userid");
        if (localObject2 != null)
        {
          ((User)localObject1).userid = ((String)localObject2);
          setSessionUser((User)localObject1);
        }
      }
      return;
    }
    catch (FileNotFoundException localFileNotFoundException)
    {
      Log.e("MBFXContext", "readContextFromJS: " + localFileNotFoundException);
      return;
    }
    catch (IOException localIOException)
    {
      Log.e("MBFXContext", "readContextFromJS: " + localIOException);
      return;
    }
    catch (JSONException localJSONException)
    {
      Log.e("MBFXContext", "readContextFromJS: " + localJSONException);
    }
  }
  
  public static void saveContextToJS()
  {
    try
    {
      Object localObject = getJSONDictionary();
      Log.v("MBFXContext", "JSON: " + ((JSONObject)localObject).toString());
      localObject = ((JSONObject)localObject).toString();
      localObject = "var context=" + (String)localObject;
      FileUtils.openOutputStream(new File(App.getAppProtectedStoragePath() + "/MBFX/context.js"), false).write(((String)localObject).getBytes());
      return;
    }
    catch (Exception localException)
    {
      Log.e("MBFXContext", "saveContextToJS: " + localException);
    }
  }
  
  public static void setSessionUser(User paramUser)
  {
    user = paramUser;
    saveContextToJS();
  }
}
