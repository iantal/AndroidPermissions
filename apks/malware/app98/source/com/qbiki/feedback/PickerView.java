package com.qbiki.feedback;

import android.annotation.SuppressLint;
import android.app.DatePickerDialog.OnDateSetListener;
import android.app.TimePickerDialog.OnTimeSetListener;
import android.content.Context;
import android.net.Uri;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.TimePicker;
import java.util.Calendar;

public class PickerView
  extends LinearLayout
{
  public static final int Camera = 4;
  public static final int Date = 0;
  public static final int DateTime = 12;
  public static final int Email = 6;
  public static final int Image = 3;
  public static final int Label = 10;
  public static final int List = 7;
  public static final int Location = 2;
  public static final int MultiList = 8;
  public static final int Multilinerichtext = 14;
  public static final int Multilinetext = 11;
  public static final int Signature = 9;
  public static final int Switch = 13;
  public static final int Text = 5;
  public static final int Time = 1;
  public Button btn;
  private Object checkButton;
  private Context context = null;
  public EditText ev;
  public String fJsonSourcePath;
  public String fTargetParam;
  public String fTargetURL;
  public Field field;
  public Uri imageUri = null;
  public ImageView imgView;
  public double latitude;
  public double longitude;
  public DatePickerDialog.OnDateSetListener mDateSetListener = new DatePickerDialog.OnDateSetListener()
  {
    public void onDateSet(DatePicker paramAnonymousDatePicker, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3)
    {
      PickerView.this.mYear = paramAnonymousInt1;
      PickerView.this.mMonth = paramAnonymousInt2;
      PickerView.this.mDay = paramAnonymousInt3;
      PickerView.this.updateDateDisplay();
    }
  };
  public int mDay;
  public int mHour;
  public int mMinute;
  public int mMonth;
  public TimePickerDialog.OnTimeSetListener mTimeSetListener = new TimePickerDialog.OnTimeSetListener()
  {
    public void onTimeSet(TimePicker paramAnonymousTimePicker, int paramAnonymousInt1, int paramAnonymousInt2)
    {
      PickerView.this.mHour = paramAnonymousInt1;
      PickerView.this.mMinute = paramAnonymousInt2;
      PickerView.this.updateTimeDisplay();
    }
  };
  public int mYear;
  public EditText richEditor = null;
  public String selectedID;
  public TextView tv;
  public int type;
  
  public PickerView(Context paramContext)
  {
    super(paramContext);
  }
  
  public PickerView(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
  }
  
  @SuppressLint({"NewApi"})
  public PickerView(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
  }
  
  @SuppressLint({"NewApi"})
  public PickerView(Context paramContext, Field paramField, int paramInt)
  {
    super(paramContext);
    this.context = paramContext;
    this.field = paramField;
    this.type = paramInt;
    paramContext = (LayoutInflater)paramContext.getSystemService("layout_inflater");
    if (this.type == 0)
    {
      paramContext.inflate(2130903118, this);
      this.tv = ((TextView)findViewById(2131099877));
      this.tv.setText(this.field.fieldLabel);
      this.tv.setGravity(51);
      this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
      this.ev = ((EditText)findViewById(2131099878));
      this.btn = ((Button)findViewById(2131099879));
      paramContext = Calendar.getInstance();
      this.mYear = paramContext.get(1);
      this.mMonth = paramContext.get(2);
      this.mDay = paramContext.get(5);
      updateDateDisplay();
    }
    do
    {
      return;
      if (this.type == 1)
      {
        paramContext.inflate(2130903127, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.tv.setGravity(51);
        this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
        this.ev = ((EditText)findViewById(2131099878));
        this.btn = ((Button)findViewById(2131099879));
        paramContext = Calendar.getInstance();
        this.mHour = paramContext.get(11);
        this.mMinute = paramContext.get(12);
        updateTimeDisplay();
        return;
      }
      if (this.type == 12)
      {
        paramContext.inflate(2130903112, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.tv.setGravity(51);
        this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
        this.ev = ((EditText)findViewById(2131099878));
        this.btn = ((Button)findViewById(2131099879));
        paramContext = Calendar.getInstance();
        this.mYear = paramContext.get(1);
        this.mMonth = paramContext.get(2);
        this.mDay = paramContext.get(5);
        this.mHour = paramContext.get(11);
        this.mMinute = paramContext.get(12);
        updateDateTimeDisplay();
        return;
      }
      if (this.type == 13)
      {
        paramContext.inflate(2130903115, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.checkButton = findViewById(2131099885);
        ((View)this.checkButton).setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return false;
          }
        });
        return;
      }
      if (this.type == 2)
      {
        paramContext.inflate(2130903122, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.tv.setGravity(51);
        this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
        this.ev = ((EditText)findViewById(2131099878));
        this.btn = ((Button)findViewById(2131099879));
        return;
      }
      if (this.type == 3)
      {
        paramContext.inflate(2130903120, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.tv.setGravity(51);
        this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
        this.imgView = ((ImageView)findViewById(2131099895));
        this.btn = ((Button)findViewById(2131099879));
        return;
      }
      if (this.type == 9)
      {
        paramContext.inflate(2130903124, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.tv.setGravity(51);
        this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
        this.imgView = ((ImageView)findViewById(2131099895));
        this.btn = ((Button)findViewById(2131099879));
        return;
      }
      if (this.type == 4)
      {
        paramContext.inflate(2130903117, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.tv.setGravity(51);
        this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
        this.imgView = ((ImageView)findViewById(2131099895));
        this.btn = ((Button)findViewById(2131099879));
        return;
      }
      if (this.type == 5)
      {
        paramContext.inflate(2130903126, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.tv.setGravity(51);
        this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
        this.ev = ((EditText)findViewById(2131099878));
        this.ev.setRawInputType(1);
        return;
      }
      int i;
      if (this.type == 11)
      {
        paramContext.inflate(2130903126, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.tv.setGravity(51);
        this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
        this.ev = ((EditText)findViewById(2131099878));
        this.ev.setRawInputType(1);
        this.ev.setSingleLine(false);
        this.ev.setGravity(48);
        i = this.field.getLineCount();
        paramInt = i;
        if (i < 0) {
          paramInt = 4;
        }
        this.ev.setLines(paramInt);
        return;
      }
      if (this.type == 14)
      {
        paramContext.inflate(2130903114, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.tv.setGravity(51);
        this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
        this.richEditor = ((EditText)findViewById(2131099878));
        this.richEditor.setRawInputType(1);
        this.richEditor.setSingleLine(false);
        this.richEditor.setGravity(48);
        i = this.field.getLineCount();
        paramInt = i;
        if (i < 0) {
          paramInt = 4;
        }
        this.richEditor.setLines(paramInt);
        return;
      }
      if (this.type == 6)
      {
        paramContext.inflate(2130903126, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.tv.setGravity(51);
        this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
        this.ev = ((EditText)findViewById(2131099878));
        this.ev.setRawInputType(33);
        return;
      }
      if (this.type == 7)
      {
        paramContext.inflate(2130903121, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.tv.setGravity(51);
        this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
        this.ev = ((EditText)findViewById(2131099878));
        this.ev.setFocusable(false);
        this.btn = ((Button)findViewById(2131099879));
        return;
      }
      if (this.type == 8)
      {
        paramContext.inflate(2130903121, this);
        this.tv = ((TextView)findViewById(2131099877));
        this.tv.setText(this.field.fieldLabel);
        this.tv.setGravity(51);
        this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
        this.ev = ((EditText)findViewById(2131099878));
        this.btn = ((Button)findViewById(2131099879));
        return;
      }
    } while (this.type != 10);
    paramContext.inflate(2130903126, this);
    this.tv = ((TextView)findViewById(2131099877));
    this.tv.setText(this.field.fieldLabel);
    this.tv.setGravity(51);
    this.tv.setLayoutParams(new LinearLayout.LayoutParams(-1, -2));
    this.ev = ((EditText)findViewById(2131099878));
    this.ev.setRawInputType(1);
    this.ev.setVisibility(8);
  }
  
  private void updateDateDisplay()
  {
    this.ev.setText(new StringBuilder().append(this.mYear).append("-").append(this.mDay).append("-").append(this.mMonth + 1));
  }
  
  private void updateDateTimeDisplay()
  {
    String str = this.mYear + "-" + this.mDay + "-" + (this.mMonth + 1);
    Calendar localCalendar = Calendar.getInstance();
    localCalendar.set(11, this.mHour);
    localCalendar.set(12, this.mMinute);
    this.ev.setText(str + " " + android.text.format.DateFormat.getTimeFormat(this.context).format(localCalendar.getTime()));
  }
  
  private void updateTimeDisplay()
  {
    Calendar localCalendar = Calendar.getInstance();
    localCalendar.set(11, this.mHour);
    localCalendar.set(12, this.mMinute);
    this.ev.setText(android.text.format.DateFormat.getTimeFormat(this.context).format(localCalendar.getTime()));
  }
  
  public String getRequirementMessage()
  {
    return this.context.getString(2131362103, new Object[] { this.field.fieldLabel });
  }
  
  @SuppressLint({"NewApi"})
  public boolean getSwithPosition()
  {
    if ((this.checkButton instanceof Switch)) {
      return ((Switch)this.checkButton).isChecked();
    }
    return ((CheckBox)this.checkButton).isChecked();
  }
  
  public boolean requirementSatisfied()
  {
    if (this.field.fieldRequired.equalsIgnoreCase("yes"))
    {
      if ((this.type != 0) && (this.type != 1) && (this.type != 2) && (this.type != 5) && (this.type != 6) && (this.type != 12) && (this.type != 11) && (this.type != 8)) {
        break label116;
      }
      if ((this.ev == null) || (this.ev.getText().toString().trim().equals(""))) {
        break label114;
      }
    }
    label114:
    label116:
    while (((this.type != 3) && (this.type != 4) && (this.type != 9)) || (this.imageUri != null))
    {
      return true;
      return false;
    }
    return false;
  }
  
  @SuppressLint({"NewApi"})
  public void setSwithPosition(boolean paramBoolean)
  {
    if ((this.checkButton instanceof Switch))
    {
      ((Switch)this.checkButton).setChecked(paramBoolean);
      return;
    }
    ((CheckBox)this.checkButton).setChecked(paramBoolean);
  }
}
