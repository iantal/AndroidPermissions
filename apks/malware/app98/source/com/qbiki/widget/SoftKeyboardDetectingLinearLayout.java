package com.qbiki.widget;

import android.app.Activity;
import android.content.Context;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.view.Display;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.Window;
import android.view.WindowManager;
import android.widget.LinearLayout;

public class SoftKeyboardDetectingLinearLayout
  extends LinearLayout
{
  private SoftKeyboardVisibilityListener listener;
  
  public SoftKeyboardDetectingLinearLayout(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
  }
  
  protected void onMeasure(int paramInt1, int paramInt2)
  {
    if (isInEditMode())
    {
      super.onMeasure(paramInt1, paramInt2);
      return;
    }
    int i = View.MeasureSpec.getSize(paramInt2);
    Object localObject = (Activity)getContext();
    Rect localRect = new Rect();
    ((Activity)localObject).getWindow().getDecorView().getWindowVisibleDisplayFrame(localRect);
    int j = localRect.top;
    int k = ((Activity)localObject).getWindowManager().getDefaultDisplay().getHeight();
    if (this.listener != null)
    {
      localObject = this.listener;
      if (k - j - i <= k / 3) {
        break label118;
      }
    }
    label118:
    for (boolean bool = true;; bool = false)
    {
      ((SoftKeyboardVisibilityListener)localObject).onSoftKeyboardVisibilityChanged(bool);
      super.onMeasure(paramInt1, paramInt2);
      return;
    }
  }
  
  public void setSoftKeyboardVisibilityListener(SoftKeyboardVisibilityListener paramSoftKeyboardVisibilityListener)
  {
    this.listener = paramSoftKeyboardVisibilityListener;
  }
  
  public static abstract interface SoftKeyboardVisibilityListener
  {
    public abstract void onSoftKeyboardVisibilityChanged(boolean paramBoolean);
  }
}
