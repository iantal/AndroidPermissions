package com.qbiki.widget;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.widget.RadioButton;
import com.qbiki.seattleclouds.R.styleable;

public class SegmentedControlButton
  extends RadioButton
{
  private int mLineHeightSelected;
  private int mLineHeightUnselected;
  private Paint mLinePaint;
  private boolean mTextAllCaps;
  
  public SegmentedControlButton(Context paramContext, AttributeSet paramAttributeSet)
  {
    this(paramContext, paramAttributeSet, 2130772138);
  }
  
  public SegmentedControlButton(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
    init(paramAttributeSet, paramInt);
  }
  
  public int getLineColor()
  {
    return this.mLinePaint.getColor();
  }
  
  public int getLineHeightUnselected()
  {
    return this.mLineHeightUnselected;
  }
  
  public void init(AttributeSet paramAttributeSet, int paramInt)
  {
    if (paramAttributeSet != null)
    {
      paramAttributeSet = getContext().obtainStyledAttributes(paramAttributeSet, R.styleable.SegmentedControlButton, paramInt, 2131492975);
      this.mTextAllCaps = paramAttributeSet.getBoolean(1, false);
      setTextCompat(getText());
      paramInt = paramAttributeSet.getColor(2, 0);
      this.mLineHeightUnselected = paramAttributeSet.getDimensionPixelSize(3, 0);
      this.mLineHeightSelected = paramAttributeSet.getDimensionPixelSize(4, 0);
      this.mLinePaint = new Paint();
      this.mLinePaint.setColor(paramInt);
      this.mLinePaint.setStyle(Paint.Style.FILL);
      paramAttributeSet.recycle();
    }
  }
  
  public void onDraw(Canvas paramCanvas)
  {
    super.onDraw(paramCanvas);
    if ((this.mLinePaint.getColor() != 0) && ((this.mLineHeightSelected > 0) || (this.mLineHeightUnselected > 0))) {
      if (!isChecked()) {
        break label76;
      }
    }
    label76:
    for (int i = this.mLineHeightSelected;; i = this.mLineHeightUnselected)
    {
      if (i > 0) {
        paramCanvas.drawRect(new Rect(0, getHeight() - i, getWidth(), getHeight()), this.mLinePaint);
      }
      return;
    }
  }
  
  public void setLineColor(int paramInt)
  {
    this.mLinePaint.setColor(paramInt);
  }
  
  public void setTextCompat(CharSequence paramCharSequence)
  {
    if (this.mTextAllCaps)
    {
      setText(paramCharSequence.toString().toUpperCase());
      return;
    }
    setText(paramCharSequence);
  }
}
