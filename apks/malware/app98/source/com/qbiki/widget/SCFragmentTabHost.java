package com.qbiki.widget;

import android.annotation.SuppressLint;
import android.content.Context;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.util.AttributeSet;
import android.widget.FrameLayout;
import android.widget.FrameLayout.LayoutParams;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.TabHost.TabSpec;
import android.widget.TabWidget;
import com.qbiki.seattleclouds.NavigationItem;
import com.qbiki.seattleclouds.NavigationSettings;
import com.qbiki.util.DeviceUtil;
import java.util.List;

public class SCFragmentTabHost
  extends FragmentTabHostCompat
{
  private static final boolean DEBUG = false;
  private static final String TAG = "SCFragmentTabHost";
  private Context mContext;
  private NavigationSettings mNavigationSettings;
  private LinearLayout mRootLayout;
  
  public SCFragmentTabHost(Context paramContext)
  {
    super(paramContext);
    init(paramContext);
  }
  
  public SCFragmentTabHost(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    init(paramContext);
  }
  
  private void fixTabIndicatorPadding()
  {
    TabWidget localTabWidget = getTabWidget();
    int i = 0;
    while (i < localTabWidget.getChildCount())
    {
      Object localObject = localTabWidget.getChildAt(i);
      if ((localObject instanceof LinearLayout))
      {
        localObject = (LinearLayout)localObject;
        int j = DeviceUtil.dpToPx(this.mContext, 6.0F);
        if ((((LinearLayout)localObject).getPaddingLeft() > j) || (((LinearLayout)localObject).getPaddingRight() > j) || (((LinearLayout)localObject).getPaddingLeft() == 0) || (((LinearLayout)localObject).getPaddingRight() == 0)) {
          ((LinearLayout)localObject).setPadding(j, ((LinearLayout)localObject).getPaddingTop(), j, ((LinearLayout)localObject).getPaddingBottom());
        }
      }
      i += 1;
    }
  }
  
  private void init(Context paramContext)
  {
    this.mContext = paramContext;
    setDestroyFragmentViewOnTabChange(false);
  }
  
  private void initLayout(int paramInt, NavigationSettings paramNavigationSettings)
  {
    removeAllViews();
    this.mRootLayout = new LinearLayout(this.mContext);
    this.mRootLayout.setOrientation(1);
    addView(this.mRootLayout, new FrameLayout.LayoutParams(-1, -1));
    FrameLayout localFrameLayout = new FrameLayout(this.mContext);
    localFrameLayout.setId(16908305);
    this.mRootLayout.addView(localFrameLayout, new LinearLayout.LayoutParams(0, 0, 0.0F));
    localFrameLayout.addView(new TabPatchView(this.mContext), new FrameLayout.LayoutParams(0, 0));
    localFrameLayout = new FrameLayout(this.mContext);
    localFrameLayout.setId(paramInt);
    LinearLayout.LayoutParams localLayoutParams = new LinearLayout.LayoutParams(-1, 0, 1.0F);
    if (!paramNavigationSettings.isLegacyTabWidgetEnabled()) {
      localLayoutParams.bottomMargin = (DeviceUtil.dpToPx(this.mContext, paramNavigationSettings.getContentOverlap()) * -1);
    }
    this.mRootLayout.addView(localFrameLayout, localLayoutParams);
  }
  
  @SuppressLint({"NewApi"})
  private void initTabWidget(NavigationSettings paramNavigationSettings, List<NavigationItem> paramList)
  {
    if (paramNavigationSettings.isLegacyTabWidgetEnabled()) {
      paramList = new TabWidget(this.mContext);
    }
    for (;;)
    {
      if ((!paramNavigationSettings.isLegacyTabWidgetEnabled()) || (paramNavigationSettings.isNavigationItemsOnBottom())) {
        paramList.setStripEnabled(false);
      }
      paramList.setId(16908307);
      paramList.setOrientation(0);
      int i = 0;
      if (paramNavigationSettings.isNavigationItemsOnBottom()) {
        i = this.mRootLayout.getChildCount();
      }
      this.mRootLayout.addView(paramList, i);
      return;
      paramList = new SCTabWidget(this.mContext, paramNavigationSettings, paramList);
      paramList.setTabHost(this);
    }
  }
  
  public void addTab(TabHost.TabSpec paramTabSpec, Class<?> paramClass, Bundle paramBundle)
  {
    super.addTab(paramTabSpec, paramClass, paramBundle);
    if ((this.mNavigationSettings.isLegacyTabWidgetEnabled()) && (Build.VERSION.SDK_INT >= 11) && (DeviceUtil.pxToDp(this.mContext, DeviceUtil.getSmallestScreenDimension(this.mContext)) < 600)) {
      fixTabIndicatorPadding();
    }
  }
  
  @Deprecated
  public void setup()
  {
    throw new IllegalStateException("Must call setup() that takes a Context, FragmentManager and NavigationItems");
  }
  
  @Deprecated
  public void setup(Context paramContext, FragmentManager paramFragmentManager)
  {
    setup();
  }
  
  @Deprecated
  public void setup(Context paramContext, FragmentManager paramFragmentManager, int paramInt)
  {
    setup();
  }
  
  public void setup(Context paramContext, FragmentManager paramFragmentManager, int paramInt, NavigationSettings paramNavigationSettings, List<NavigationItem> paramList)
  {
    this.mNavigationSettings = paramNavigationSettings;
    initLayout(paramInt, paramNavigationSettings);
    initTabWidget(paramNavigationSettings, paramList);
    super.setup(paramContext, paramFragmentManager, paramInt);
  }
}
