package com.qbiki.geofencing;

import android.app.IntentService;
import android.app.NotificationManager;
import android.content.ComponentName;
import android.content.Intent;
import android.net.Uri.Builder;
import android.os.Bundle;
import android.support.v4.app.NotificationCompat.Builder;
import android.support.v4.app.TaskStackBuilder;
import android.support.v4.content.IntentCompat;
import android.support.v4.content.LocalBroadcastManager;
import android.text.TextUtils;
import android.util.Log;
import com.google.android.gms.location.Geofence;
import com.google.android.gms.location.LocationClient;
import com.qbiki.gcm.GCMBroadcastReceiver;
import com.qbiki.seattleclouds.App;
import com.qbiki.seattleclouds.AppStarterActivity;
import com.qbiki.seattleclouds.FragmentInfo;
import java.util.List;
import java.util.Map;

public class ReceiveTransitionsIntentService
  extends IntentService
{
  public ReceiveTransitionsIntentService()
  {
    super("ReceiveTransitionsIntentService");
  }
  
  private String getTransitionString(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      return getString(2131361876);
    case 1: 
      return getString(2131361871);
    }
    return getString(2131361873);
  }
  
  private void showGeofenceMessageNotification(SCGeofence paramSCGeofence)
  {
    String str = getString(2131361834);
    Object localObject2 = paramSCGeofence.getTitle();
    Object localObject1 = localObject2;
    if (localObject2 == null) {
      localObject1 = "";
    }
    localObject2 = localObject1;
    if (((String)localObject1).length() > 100) {
      localObject2 = ((String)localObject1).substring(0, 100);
    }
    localObject1 = TaskStackBuilder.create(this);
    ((TaskStackBuilder)localObject1).addNextIntent(IntentCompat.makeRestartActivityTask(new ComponentName(this, AppStarterActivity.class)));
    Object localObject3 = new Bundle();
    ((Bundle)localObject3).putString("ARG_TITLE", paramSCGeofence.getTitle());
    ((Bundle)localObject3).putString("ARG_MESSAGE", paramSCGeofence.getMessage());
    localObject3 = App.getPageIntent(new FragmentInfo(GeofenceMessageFragment.class.getName(), (Bundle)localObject3), this);
    ((Intent)localObject3).setData(new Uri.Builder().scheme("data").appendQueryParameter("id", paramSCGeofence.getId()).build());
    ((TaskStackBuilder)localObject1).addNextIntent((Intent)localObject3);
    paramSCGeofence = ((TaskStackBuilder)localObject1).getPendingIntent(0, 134217728);
    paramSCGeofence = new NotificationCompat.Builder(this).setSmallIcon(2130837700).setContentTitle(str).setContentText((CharSequence)localObject2).setAutoCancel(true).setDefaults(-1).setContentIntent(paramSCGeofence).build();
    ((NotificationManager)getSystemService("notification")).notify(GCMBroadcastReceiver.getNextNotificationId(this), paramSCGeofence);
  }
  
  private void showNotification(SCGeofence paramSCGeofence)
  {
    if (paramSCGeofence.getAction().equals("message"))
    {
      showGeofenceMessageNotification(paramSCGeofence);
      return;
    }
    Log.w("Geofencing", "Unsupported geofence notification action: " + paramSCGeofence);
  }
  
  private void showNotifications(final String[] paramArrayOfString)
  {
    GeofenceManager.loadGeofences(new OnLoadGeofencesResultListener()
    {
      public void OnLoadGeofencesResult(int paramAnonymousInt, Map<String, SCGeofence> paramAnonymousMap)
      {
        if (paramAnonymousInt == 0)
        {
          String[] arrayOfString = paramArrayOfString;
          int i = arrayOfString.length;
          paramAnonymousInt = 0;
          if (paramAnonymousInt < i)
          {
            String str = arrayOfString[paramAnonymousInt];
            SCGeofence localSCGeofence = (SCGeofence)paramAnonymousMap.get(str);
            if (localSCGeofence == null) {
              Log.w("Geofencing", "Geofence not found: " + str);
            }
            for (;;)
            {
              paramAnonymousInt += 1;
              break;
              ReceiveTransitionsIntentService.this.showNotification(localSCGeofence);
            }
          }
        }
      }
    });
  }
  
  protected void onHandleIntent(Intent paramIntent)
  {
    Object localObject = new Intent();
    ((Intent)localObject).addCategory("com.qbiki.seattleclouds.geofence.CATEGORY_LOCATION_SERVICES");
    int i;
    if (LocationClient.hasError(paramIntent))
    {
      i = LocationClient.getErrorCode(paramIntent);
      paramIntent = LocationServiceErrorMessages.getErrorString(this, i);
      Log.e("Geofencing", getString(2131361872, new Object[] { Integer.valueOf(i), paramIntent }));
      ((Intent)localObject).setAction("com.qbiki.seattleclouds.geofence.ACTION_GEOFENCES_ERROR").putExtra("com.qbiki.seattleclouds.geofence.EXTRA_GEOFENCE_STATUS", paramIntent);
      LocalBroadcastManager.getInstance(this).sendBroadcast((Intent)localObject);
      return;
    }
    int j = LocationClient.getGeofenceTransition(paramIntent);
    if ((j == 1) || (j == 2))
    {
      localObject = LocationClient.getTriggeringGeofences(paramIntent);
      paramIntent = new String[((List)localObject).size()];
      i = 0;
      while (i < ((List)localObject).size())
      {
        paramIntent[i] = ((Geofence)((List)localObject).get(i)).getRequestId();
        i += 1;
      }
      localObject = TextUtils.join(GeofenceUtils.GEOFENCE_ID_DELIMITER, paramIntent);
      Log.d("Geofencing", getString(2131361875, new Object[] { getTransitionString(j), localObject }));
      showNotifications(paramIntent);
      return;
    }
    Log.e("Geofencing", getString(2131361874, new Object[] { Integer.valueOf(j) }));
  }
}
