package com.pollfish.f.a;

import android.app.Activity;
import android.graphics.Rect;
import android.os.Handler;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.Window;
import android.view.animation.AlphaAnimation;
import android.view.animation.Animation;
import android.view.animation.Animation.AnimationListener;
import com.pollfish.constants.Position;
import com.pollfish.f.c;
import com.pollfish.interfaces.a.a;
import com.pollfish.interfaces.a.b;

public class b
{
  public static int a(Activity paramActivity)
  {
    try
    {
      Rect localRect = new Rect();
      paramActivity.getWindow().getDecorView().getWindowVisibleDisplayFrame(localRect);
      int i = localRect.top;
      return i;
    }
    catch (Exception paramActivity)
    {
      com.pollfish.f.b.b("LayoutUtils", "error while trying to get status height");
      com.pollfish.f.b.a.a(paramActivity);
    }
    return 0;
  }
  
  public static com.pollfish.d.a a(Activity paramActivity, com.pollfish.a.b paramB, boolean paramBoolean, a.b paramB1, a.a paramA)
  {
    com.pollfish.f.b.a("LayoutUtils", "createLayout - shouldHide: " + paramBoolean);
    if (paramB == null) {
      return null;
    }
    ViewGroup localViewGroup = (ViewGroup)((ViewGroup)paramActivity.getWindow().getDecorView()).getChildAt(0);
    if (localViewGroup != null) {}
    for (paramActivity = new a(paramActivity, localViewGroup, paramB.C(), paramB.D(), paramB, paramBoolean, paramB1, paramA).a();; paramActivity = null) {
      return paramActivity;
    }
  }
  
  public static com.pollfish.d.a a(ViewGroup paramViewGroup)
  {
    int i = 0;
    while (i < paramViewGroup.getChildCount())
    {
      Object localObject = paramViewGroup.getChildAt(i);
      if ((localObject instanceof com.pollfish.d.a))
      {
        com.pollfish.f.b.a("LayoutUtils", "child instanceof OverlayLayout");
        return (com.pollfish.d.a)localObject;
      }
      if ((localObject instanceof ViewGroup))
      {
        localObject = a((ViewGroup)localObject);
        if (localObject != null) {
          return (com.pollfish.d.a)localObject;
        }
      }
      i += 1;
    }
    return null;
  }
  
  public static void a(final View paramView, Position paramPosition, boolean paramBoolean, int paramInt1, final View.OnClickListener paramOnClickListener, int paramInt2)
  {
    if (paramBoolean) {
      paramView.setVisibility(0);
    }
    String str = c.a();
    boolean bool = c.a(paramView);
    com.pollfish.f.b.a("LayoutUtils", "androidOS: " + str + " isHardwAccOn: " + bool);
    if (((!bool) && (str.equalsIgnoreCase("4.1.2"))) || (paramInt2 == 1))
    {
      if (paramBoolean) {}
      for (paramPosition = new AlphaAnimation(0.0F, 1.0F);; paramPosition = new AlphaAnimation(1.0F, 0.0F))
      {
        paramPosition.setDuration('Ê¼');
        if (!paramBoolean) {
          paramPosition.setAnimationListener(new Animation.AnimationListener()
          {
            public void onAnimationEnd(Animation paramAnonymousAnimation)
            {
              this.a.setVisibility(4);
              this.a.setOnClickListener(null);
            }
            
            public void onAnimationRepeat(Animation paramAnonymousAnimation) {}
            
            public void onAnimationStart(Animation paramAnonymousAnimation) {}
          });
        }
        paramView.startAnimation(paramPosition);
        new Handler().post(new Runnable()
        {
          public void run()
          {
            this.a.setOnClickListener(paramOnClickListener);
          }
        });
        return;
      }
    }
    if (paramBoolean) {}
    for (paramPosition = c.a(paramView, paramPosition, 0, paramInt1);; paramPosition = c.b(paramView, paramPosition, 0, paramInt1))
    {
      paramPosition.setAnimationListener(new Animation.AnimationListener()
      {
        public void onAnimationEnd(Animation paramAnonymousAnimation)
        {
          if (!this.a) {
            paramView.setVisibility(4);
          }
          paramView.setSoundEffectsEnabled(true);
          new Handler().post(new Runnable()
          {
            public void run()
            {
              b.3.this.b.setOnClickListener(b.3.this.c);
            }
          });
        }
        
        public void onAnimationRepeat(Animation paramAnonymousAnimation) {}
        
        public void onAnimationStart(Animation paramAnonymousAnimation) {}
      });
      return;
    }
  }
  
  public static void a(com.pollfish.d.a paramA)
  {
    com.pollfish.f.b.a("LayoutUtils", "bringAppViewsToPriorOverlayState");
    try
    {
      ViewGroup localViewGroup1 = (ViewGroup)paramA.getParent();
      if (localViewGroup1 != null)
      {
        ViewGroup localViewGroup2 = (ViewGroup)localViewGroup1.getParent();
        com.pollfish.f.b.a("LayoutUtils", "rootOverlayView.getChildCount(): " + localViewGroup1.getChildCount());
        if (localViewGroup2 != null)
        {
          com.pollfish.f.b.a("LayoutUtils", "removing Pollfish overlay view from app views hierarchy...");
          localViewGroup2.removeView(localViewGroup1);
          if (localViewGroup1.getChildCount() > 1)
          {
            localViewGroup1.removeView(paramA);
            int i = 0;
            while (i < localViewGroup1.getChildCount())
            {
              paramA = localViewGroup1.getChildAt(i);
              if (paramA != null)
              {
                String str = (String)paramA.getTag();
                if ((str != null) && (str.equalsIgnoreCase("pollfish_prior_overlay")))
                {
                  com.pollfish.f.b.a("LayoutUtils", "Found previous original app view - reordering view tree");
                  localViewGroup1.removeAllViews();
                  localViewGroup2.addView(paramA);
                  localViewGroup2.removeView(localViewGroup1);
                }
              }
              i += 1;
            }
          }
        }
      }
      return;
    }
    catch (Exception paramA)
    {
      com.pollfish.f.b.b("LayoutUtils", " Error while bringAppViewsToPriorOverlayState: " + paramA);
      com.pollfish.f.b.a.a(paramA);
    }
  }
  
  public static com.pollfish.d.a b(Activity paramActivity)
  {
    com.pollfish.f.b.a("LayoutUtils", "getExistingOverlay");
    return a((ViewGroup)paramActivity.getWindow().getDecorView());
  }
}
