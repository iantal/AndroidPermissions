package com.pollfish.main;

import android.app.Activity;
import android.util.Log;
import com.pollfish.constants.Position;
import com.pollfish.f.b;
import com.pollfish.f.c;
import com.pollfish.interfaces.a.e;

public class PollFish
{
  protected static String TAG = "PollFish";
  protected static com.pollfish.d.a overlayLayout = null;
  
  public PollFish() {}
  
  private static void Initialise(Activity paramActivity, String paramString, Position paramPosition, int paramInt, boolean paramBoolean1, boolean paramBoolean2)
  {
    overlayLayout = null;
    com.pollfish.f.b.a.a(paramActivity, "8288f9f5ef393b70d5121604a25da736", paramBoolean2, paramString);
    paramString = paramString.trim();
    if (paramBoolean2) {
      Log.w(TAG, "Pollfish runs in developer mode");
    }
    if (paramBoolean1) {
      Log.w(TAG, "Pollfish runs in custom mode");
    }
    if (c.a(paramActivity))
    {
      b.a(TAG, "All permissions in place");
      try
      {
        new com.pollfish.f.a(paramActivity, paramString, paramBoolean2, paramPosition, paramInt, paramBoolean1, new a.e()
        {
          public void a(com.pollfish.d.a paramAnonymousA)
          {
            b.a(PollFish.TAG, "OnSurveyRenderedListenerListener - use generated overlayLayout");
            PollFish.overlayLayout = paramAnonymousA;
          }
        }).a();
        return;
      }
      catch (Exception paramActivity)
      {
        b.b(TAG, " Error while trying to begin LifeCycle: " + paramActivity);
        com.pollfish.f.b.a.a(paramActivity);
        return;
      }
    }
    Log.w(TAG, "Pollfish requires the following permissions: INTERNET and ACCESS_WIFI_STATE. Please place them in your manifest file");
  }
  
  public static void customInit(Activity paramActivity, String paramString, Position paramPosition, int paramInt, boolean paramBoolean)
  {
    Initialise(paramActivity, paramString, paramPosition, paramInt, true, paramBoolean);
  }
  
  public static void hide()
  {
    b.a(TAG, "manually called hide()");
    b.a(TAG, "overlayLayout: " + overlayLayout);
    if (overlayLayout != null) {
      overlayLayout.h();
    }
  }
  
  public static void init(Activity paramActivity, String paramString, Position paramPosition, int paramInt, boolean paramBoolean)
  {
    Initialise(paramActivity, paramString, paramPosition, paramInt, false, paramBoolean);
  }
  
  public static void show()
  {
    b.a(TAG, "manually called show()");
    if (overlayLayout != null) {
      overlayLayout.i();
    }
  }
}
