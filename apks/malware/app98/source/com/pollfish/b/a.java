package com.pollfish.b;

import com.pollfish.f.b.b;
import java.security.Key;
import java.security.spec.KeySpec;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.PBEParameterSpec;

public class a
{
  private Cipher a;
  private Cipher b;
  private byte[] c = { -87, -101, -56, 50, 86, 53, -29, 3 };
  
  public a()
  {
    Object localObject = new PBEKeySpec("skasdh*h3jkas^7938UbnJGshas72123".toCharArray(), this.c, 2);
    localObject = SecretKeyFactory.getInstance("PBEWithMD5AndDES").generateSecret((KeySpec)localObject);
    this.a = Cipher.getInstance(((SecretKey)localObject).getAlgorithm());
    this.b = Cipher.getInstance(((SecretKey)localObject).getAlgorithm());
    PBEParameterSpec localPBEParameterSpec = new PBEParameterSpec(this.c, 2);
    this.a.init(1, (Key)localObject, localPBEParameterSpec);
    this.b.init(2, (Key)localObject, localPBEParameterSpec);
  }
  
  public String a(String paramString)
  {
    return b.b(this.a.doFinal(paramString.getBytes()), 0).trim();
  }
  
  public String b(String paramString)
  {
    return new String(this.b.doFinal(b.a(paramString, 0)));
  }
}
