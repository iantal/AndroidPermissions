package com.google.android.gms.internal;

import android.os.Parcel;
import android.os.Parcelable.Creator;
import java.util.HashSet;
import java.util.Set;

public class eo
  implements Parcelable.Creator<eq.e>
{
  public eo() {}
  
  static void a(eq.e paramE, Parcel paramParcel, int paramInt)
  {
    paramInt = ad.d(paramParcel);
    Set localSet = paramE.by();
    if (localSet.contains(Integer.valueOf(1))) {
      ad.c(paramParcel, 1, paramE.u());
    }
    if (localSet.contains(Integer.valueOf(2))) {
      ad.a(paramParcel, 2, paramE.getFamilyName(), true);
    }
    if (localSet.contains(Integer.valueOf(3))) {
      ad.a(paramParcel, 3, paramE.getFormatted(), true);
    }
    if (localSet.contains(Integer.valueOf(4))) {
      ad.a(paramParcel, 4, paramE.getGivenName(), true);
    }
    if (localSet.contains(Integer.valueOf(5))) {
      ad.a(paramParcel, 5, paramE.getHonorificPrefix(), true);
    }
    if (localSet.contains(Integer.valueOf(6))) {
      ad.a(paramParcel, 6, paramE.getHonorificSuffix(), true);
    }
    if (localSet.contains(Integer.valueOf(7))) {
      ad.a(paramParcel, 7, paramE.getMiddleName(), true);
    }
    ad.C(paramParcel, paramInt);
  }
  
  public eq.e D(Parcel paramParcel)
  {
    String str1 = null;
    int j = ac.c(paramParcel);
    HashSet localHashSet = new HashSet();
    int i = 0;
    String str2 = null;
    String str3 = null;
    String str4 = null;
    String str5 = null;
    String str6 = null;
    while (paramParcel.dataPosition() < j)
    {
      int k = ac.b(paramParcel);
      switch (ac.j(k))
      {
      default: 
        ac.b(paramParcel, k);
        break;
      case 1: 
        i = ac.f(paramParcel, k);
        localHashSet.add(Integer.valueOf(1));
        break;
      case 2: 
        str6 = ac.l(paramParcel, k);
        localHashSet.add(Integer.valueOf(2));
        break;
      case 3: 
        str5 = ac.l(paramParcel, k);
        localHashSet.add(Integer.valueOf(3));
        break;
      case 4: 
        str4 = ac.l(paramParcel, k);
        localHashSet.add(Integer.valueOf(4));
        break;
      case 5: 
        str3 = ac.l(paramParcel, k);
        localHashSet.add(Integer.valueOf(5));
        break;
      case 6: 
        str2 = ac.l(paramParcel, k);
        localHashSet.add(Integer.valueOf(6));
        break;
      case 7: 
        str1 = ac.l(paramParcel, k);
        localHashSet.add(Integer.valueOf(7));
      }
    }
    if (paramParcel.dataPosition() != j) {
      throw new ac.a("Overread allowed size end=" + j, paramParcel);
    }
    return new eq.e(localHashSet, i, str6, str5, str4, str3, str2, str1);
  }
  
  public eq.e[] X(int paramInt)
  {
    return new eq.e[paramInt];
  }
}
