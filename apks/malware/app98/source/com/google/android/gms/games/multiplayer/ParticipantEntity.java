package com.google.android.gms.games.multiplayer;

import android.database.CharArrayBuffer;
import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import com.google.android.gms.games.Player;
import com.google.android.gms.games.PlayerEntity;
import com.google.android.gms.internal.ax;
import com.google.android.gms.internal.w;
import com.google.android.gms.internal.w.a;

public final class ParticipantEntity
  implements Parcelable, Participant
{
  public static final Parcelable.Creator<ParticipantEntity> CREATOR = new Parcelable.Creator()
  {
    public ParticipantEntity[] D(int paramAnonymousInt)
    {
      return new ParticipantEntity[paramAnonymousInt];
    }
    
    public ParticipantEntity q(Parcel paramAnonymousParcel)
    {
      int i = 1;
      String str1 = paramAnonymousParcel.readString();
      String str2 = paramAnonymousParcel.readString();
      Object localObject1 = paramAnonymousParcel.readString();
      Object localObject2;
      label42:
      int j;
      String str3;
      boolean bool;
      if (localObject1 == null)
      {
        localObject1 = null;
        localObject2 = paramAnonymousParcel.readString();
        if (localObject2 != null) {
          break label120;
        }
        localObject2 = null;
        j = paramAnonymousParcel.readInt();
        str3 = paramAnonymousParcel.readString();
        if (paramAnonymousParcel.readInt() <= 0) {
          break label130;
        }
        bool = true;
        label63:
        if (paramAnonymousParcel.readInt() <= 0) {
          break label136;
        }
        label70:
        if (i == 0) {
          break label141;
        }
      }
      label120:
      label130:
      label136:
      label141:
      for (paramAnonymousParcel = (PlayerEntity)PlayerEntity.CREATOR.createFromParcel(paramAnonymousParcel);; paramAnonymousParcel = null)
      {
        return new ParticipantEntity(str1, str2, (Uri)localObject1, (Uri)localObject2, j, str3, bool, paramAnonymousParcel, null);
        localObject1 = Uri.parse((String)localObject1);
        break;
        localObject2 = Uri.parse((String)localObject2);
        break label42;
        bool = false;
        break label63;
        i = 0;
        break label70;
      }
    }
  };
  private final String bm;
  private final Uri cj;
  private final Uri ck;
  private final PlayerEntity dM;
  private final int dN;
  private final String dO;
  private final boolean dP;
  private final String dm;
  
  public ParticipantEntity(Participant paramParticipant)
  {
    Object localObject = paramParticipant.getPlayer();
    if (localObject == null) {}
    for (localObject = null;; localObject = new PlayerEntity((Player)localObject))
    {
      this.dM = ((PlayerEntity)localObject);
      this.dm = paramParticipant.getParticipantId();
      this.bm = paramParticipant.getDisplayName();
      this.cj = paramParticipant.getIconImageUri();
      this.ck = paramParticipant.getHiResImageUri();
      this.dN = paramParticipant.getStatus();
      this.dO = paramParticipant.getClientAddress();
      this.dP = paramParticipant.isConnectedToRoom();
      return;
    }
  }
  
  private ParticipantEntity(String paramString1, String paramString2, Uri paramUri1, Uri paramUri2, int paramInt, String paramString3, boolean paramBoolean, PlayerEntity paramPlayerEntity)
  {
    this.dm = paramString1;
    this.bm = paramString2;
    this.cj = paramUri1;
    this.ck = paramUri2;
    this.dN = paramInt;
    this.dO = paramString3;
    this.dP = paramBoolean;
    this.dM = paramPlayerEntity;
  }
  
  public static int a(Participant paramParticipant)
  {
    return w.hashCode(new Object[] { paramParticipant.getPlayer(), Integer.valueOf(paramParticipant.getStatus()), paramParticipant.getClientAddress(), Boolean.valueOf(paramParticipant.isConnectedToRoom()), paramParticipant.getDisplayName(), paramParticipant.getIconImageUri(), paramParticipant.getHiResImageUri() });
  }
  
  public static boolean a(Participant paramParticipant, Object paramObject)
  {
    boolean bool2 = true;
    boolean bool1;
    if (!(paramObject instanceof Participant)) {
      bool1 = false;
    }
    do
    {
      do
      {
        return bool1;
        bool1 = bool2;
      } while (paramParticipant == paramObject);
      paramObject = (Participant)paramObject;
      if ((!w.a(paramObject.getPlayer(), paramParticipant.getPlayer())) || (!w.a(Integer.valueOf(paramObject.getStatus()), Integer.valueOf(paramParticipant.getStatus()))) || (!w.a(paramObject.getClientAddress(), paramParticipant.getClientAddress())) || (!w.a(Boolean.valueOf(paramObject.isConnectedToRoom()), Boolean.valueOf(paramParticipant.isConnectedToRoom()))) || (!w.a(paramObject.getDisplayName(), paramParticipant.getDisplayName())) || (!w.a(paramObject.getIconImageUri(), paramParticipant.getIconImageUri()))) {
        break;
      }
      bool1 = bool2;
    } while (w.a(paramObject.getHiResImageUri(), paramParticipant.getHiResImageUri()));
    return false;
  }
  
  public static String b(Participant paramParticipant)
  {
    return w.c(paramParticipant).a("Player", paramParticipant.getPlayer()).a("Status", Integer.valueOf(paramParticipant.getStatus())).a("ClientAddress", paramParticipant.getClientAddress()).a("ConnectedToRoom", Boolean.valueOf(paramParticipant.isConnectedToRoom())).a("DisplayName", paramParticipant.getDisplayName()).a("IconImage", paramParticipant.getIconImageUri()).a("HiResImage", paramParticipant.getHiResImageUri()).toString();
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public boolean equals(Object paramObject)
  {
    return a(this, paramObject);
  }
  
  public Participant freeze()
  {
    return this;
  }
  
  public String getClientAddress()
  {
    return this.dO;
  }
  
  public String getDisplayName()
  {
    if (this.dM == null) {
      return this.bm;
    }
    return this.dM.getDisplayName();
  }
  
  public void getDisplayName(CharArrayBuffer paramCharArrayBuffer)
  {
    if (this.dM == null)
    {
      ax.b(this.bm, paramCharArrayBuffer);
      return;
    }
    this.dM.getDisplayName(paramCharArrayBuffer);
  }
  
  public Uri getHiResImageUri()
  {
    if (this.dM == null) {
      return this.ck;
    }
    return this.dM.getHiResImageUri();
  }
  
  public Uri getIconImageUri()
  {
    if (this.dM == null) {
      return this.cj;
    }
    return this.dM.getIconImageUri();
  }
  
  public String getParticipantId()
  {
    return this.dm;
  }
  
  public Player getPlayer()
  {
    return this.dM;
  }
  
  public int getStatus()
  {
    return this.dN;
  }
  
  public int hashCode()
  {
    return a(this);
  }
  
  public boolean isConnectedToRoom()
  {
    return this.dP;
  }
  
  public String toString()
  {
    return b(this);
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    Object localObject2 = null;
    int j = 0;
    paramParcel.writeString(this.dm);
    paramParcel.writeString(this.bm);
    Object localObject1;
    if (this.cj == null)
    {
      localObject1 = null;
      paramParcel.writeString((String)localObject1);
      if (this.ck != null) {
        break label129;
      }
      localObject1 = localObject2;
      label49:
      paramParcel.writeString((String)localObject1);
      paramParcel.writeInt(this.dN);
      paramParcel.writeString(this.dO);
      if (!this.dP) {
        break label141;
      }
      i = 1;
      label80:
      paramParcel.writeInt(i);
      if (this.dM != null) {
        break label146;
      }
    }
    label129:
    label141:
    label146:
    for (int i = j;; i = 1)
    {
      paramParcel.writeInt(i);
      if (this.dM != null) {
        this.dM.writeToParcel(paramParcel, paramInt);
      }
      return;
      localObject1 = this.cj.toString();
      break;
      localObject1 = this.ck.toString();
      break label49;
      i = 0;
      break label80;
    }
  }
}
