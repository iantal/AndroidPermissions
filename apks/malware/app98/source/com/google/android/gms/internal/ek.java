package com.google.android.gms.internal;

import android.os.Parcel;
import android.os.Parcelable.Creator;
import java.util.HashSet;
import java.util.Set;

public class ek
  implements Parcelable.Creator<eq.b.a>
{
  public ek() {}
  
  static void a(eq.b.a paramA, Parcel paramParcel, int paramInt)
  {
    paramInt = ad.d(paramParcel);
    Set localSet = paramA.by();
    if (localSet.contains(Integer.valueOf(1))) {
      ad.c(paramParcel, 1, paramA.u());
    }
    if (localSet.contains(Integer.valueOf(2))) {
      ad.c(paramParcel, 2, paramA.getLeftImageOffset());
    }
    if (localSet.contains(Integer.valueOf(3))) {
      ad.c(paramParcel, 3, paramA.getTopImageOffset());
    }
    ad.C(paramParcel, paramInt);
  }
  
  public eq.b.a[] T(int paramInt)
  {
    return new eq.b.a[paramInt];
  }
  
  public eq.b.a z(Parcel paramParcel)
  {
    int k = 0;
    int m = ac.c(paramParcel);
    HashSet localHashSet = new HashSet();
    int j = 0;
    int i = 0;
    while (paramParcel.dataPosition() < m)
    {
      int n = ac.b(paramParcel);
      switch (ac.j(n))
      {
      default: 
        ac.b(paramParcel, n);
        break;
      case 1: 
        i = ac.f(paramParcel, n);
        localHashSet.add(Integer.valueOf(1));
        break;
      case 2: 
        j = ac.f(paramParcel, n);
        localHashSet.add(Integer.valueOf(2));
        break;
      case 3: 
        k = ac.f(paramParcel, n);
        localHashSet.add(Integer.valueOf(3));
      }
    }
    if (paramParcel.dataPosition() != m) {
      throw new ac.a("Overread allowed size end=" + m, paramParcel);
    }
    return new eq.b.a(localHashSet, i, j, k);
  }
}
