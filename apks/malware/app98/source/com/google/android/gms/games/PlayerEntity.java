package com.google.android.gms.games;

import android.database.CharArrayBuffer;
import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable.Creator;
import com.google.android.gms.internal.ax;
import com.google.android.gms.internal.n;
import com.google.android.gms.internal.w;
import com.google.android.gms.internal.w.a;

public final class PlayerEntity
  implements Player
{
  public static final Parcelable.Creator<PlayerEntity> CREATOR = new Parcelable.Creator()
  {
    public PlayerEntity o(Parcel paramAnonymousParcel)
    {
      String str1 = paramAnonymousParcel.readString();
      String str2 = paramAnonymousParcel.readString();
      Object localObject1 = paramAnonymousParcel.readString();
      Object localObject2 = paramAnonymousParcel.readString();
      if (localObject1 == null)
      {
        localObject1 = null;
        if (localObject2 != null) {
          break label61;
        }
      }
      label61:
      for (localObject2 = null;; localObject2 = Uri.parse((String)localObject2))
      {
        return new PlayerEntity(str1, str2, (Uri)localObject1, (Uri)localObject2, paramAnonymousParcel.readLong(), null);
        localObject1 = Uri.parse((String)localObject1);
        break;
      }
    }
    
    public PlayerEntity[] w(int paramAnonymousInt)
    {
      return new PlayerEntity[paramAnonymousInt];
    }
  };
  private final String bm;
  private final Uri cj;
  private final Uri ck;
  private final String cw;
  private final long cx;
  
  public PlayerEntity(Player paramPlayer)
  {
    this.cw = paramPlayer.getPlayerId();
    this.bm = paramPlayer.getDisplayName();
    this.cj = paramPlayer.getIconImageUri();
    this.ck = paramPlayer.getHiResImageUri();
    this.cx = paramPlayer.getRetrievedTimestamp();
    n.b(this.cw);
    n.b(this.bm);
    if (this.cx > 0L) {}
    for (boolean bool = true;; bool = false)
    {
      n.a(bool);
      return;
    }
  }
  
  private PlayerEntity(String paramString1, String paramString2, Uri paramUri1, Uri paramUri2, long paramLong)
  {
    this.cw = paramString1;
    this.bm = paramString2;
    this.cj = paramUri1;
    this.ck = paramUri2;
    this.cx = paramLong;
  }
  
  public static int a(Player paramPlayer)
  {
    return w.hashCode(new Object[] { paramPlayer.getPlayerId(), paramPlayer.getDisplayName(), paramPlayer.getIconImageUri(), paramPlayer.getHiResImageUri(), Long.valueOf(paramPlayer.getRetrievedTimestamp()) });
  }
  
  public static boolean a(Player paramPlayer, Object paramObject)
  {
    boolean bool2 = true;
    boolean bool1;
    if (!(paramObject instanceof Player)) {
      bool1 = false;
    }
    do
    {
      do
      {
        return bool1;
        bool1 = bool2;
      } while (paramPlayer == paramObject);
      paramObject = (Player)paramObject;
      if ((!w.a(paramObject.getPlayerId(), paramPlayer.getPlayerId())) || (!w.a(paramObject.getDisplayName(), paramPlayer.getDisplayName())) || (!w.a(paramObject.getIconImageUri(), paramPlayer.getIconImageUri())) || (!w.a(paramObject.getHiResImageUri(), paramPlayer.getHiResImageUri()))) {
        break;
      }
      bool1 = bool2;
    } while (w.a(Long.valueOf(paramObject.getRetrievedTimestamp()), Long.valueOf(paramPlayer.getRetrievedTimestamp())));
    return false;
  }
  
  public static String b(Player paramPlayer)
  {
    return w.c(paramPlayer).a("PlayerId", paramPlayer.getPlayerId()).a("DisplayName", paramPlayer.getDisplayName()).a("IconImageUri", paramPlayer.getIconImageUri()).a("HiResImageUri", paramPlayer.getHiResImageUri()).a("RetrievedTimestamp", Long.valueOf(paramPlayer.getRetrievedTimestamp())).toString();
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public boolean equals(Object paramObject)
  {
    return a(this, paramObject);
  }
  
  public Player freeze()
  {
    return this;
  }
  
  public String getDisplayName()
  {
    return this.bm;
  }
  
  public void getDisplayName(CharArrayBuffer paramCharArrayBuffer)
  {
    ax.b(this.bm, paramCharArrayBuffer);
  }
  
  public Uri getHiResImageUri()
  {
    return this.ck;
  }
  
  public Uri getIconImageUri()
  {
    return this.cj;
  }
  
  public String getPlayerId()
  {
    return this.cw;
  }
  
  public long getRetrievedTimestamp()
  {
    return this.cx;
  }
  
  public boolean hasHiResImage()
  {
    return getHiResImageUri() != null;
  }
  
  public boolean hasIconImage()
  {
    return getIconImageUri() != null;
  }
  
  public int hashCode()
  {
    return a(this);
  }
  
  public String toString()
  {
    return b(this);
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    Object localObject2 = null;
    paramParcel.writeString(this.cw);
    paramParcel.writeString(this.bm);
    if (this.cj == null)
    {
      localObject1 = null;
      paramParcel.writeString((String)localObject1);
      if (this.ck != null) {
        break label68;
      }
    }
    label68:
    for (Object localObject1 = localObject2;; localObject1 = this.ck.toString())
    {
      paramParcel.writeString((String)localObject1);
      paramParcel.writeLong(this.cx);
      return;
      localObject1 = this.cj.toString();
      break;
    }
  }
}
