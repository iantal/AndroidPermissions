package uk.co.senab.actionbarpulltorefresh.extras.actionbarsherlock;

import android.app.Activity;
import android.content.Context;
import android.os.Build.VERSION;
import android.view.View;
import android.widget.FrameLayout;
import com.actionbarsherlock.app.ActionBar;
import com.actionbarsherlock.app.SherlockActivity;
import com.actionbarsherlock.app.SherlockExpandableListActivity;
import com.actionbarsherlock.app.SherlockFragmentActivity;
import com.actionbarsherlock.app.SherlockListActivity;
import com.actionbarsherlock.app.SherlockPreferenceActivity;
import uk.co.senab.actionbarpulltorefresh.library.EnvironmentDelegate;
import uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer;
import uk.co.senab.actionbarpulltorefresh.library.Options;
import uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher;

class AbsPullToRefreshAttacher
  extends PullToRefreshAttacher
{
  private FrameLayout mHeaderViewWrapper;
  
  protected AbsPullToRefreshAttacher(Activity paramActivity, Options paramOptions)
  {
    super(paramActivity, paramOptions);
  }
  
  protected void addHeaderViewToActivity(View paramView)
  {
    if (Build.VERSION.SDK_INT >= 14)
    {
      super.addHeaderViewToActivity(paramView);
      return;
    }
    this.mHeaderViewWrapper = new FrameLayout(getAttachedActivity());
    this.mHeaderViewWrapper.addView(paramView);
    super.addHeaderViewToActivity(this.mHeaderViewWrapper);
  }
  
  protected EnvironmentDelegate createDefaultEnvironmentDelegate()
  {
    return new AbsEnvironmentDelegate();
  }
  
  protected HeaderTransformer createDefaultHeaderTransformer()
  {
    return new AbsDefaultHeaderTransformer();
  }
  
  protected void removeHeaderViewFromActivity(View paramView)
  {
    if (Build.VERSION.SDK_INT >= 14) {
      super.removeHeaderViewFromActivity(paramView);
    }
    while (this.mHeaderViewWrapper == null) {
      return;
    }
    super.removeHeaderViewFromActivity(this.mHeaderViewWrapper);
    this.mHeaderViewWrapper = null;
  }
  
  protected void updateHeaderViewPosition(View paramView)
  {
    if (Build.VERSION.SDK_INT >= 14) {
      super.updateHeaderViewPosition(paramView);
    }
    while (this.mHeaderViewWrapper == null) {
      return;
    }
    super.updateHeaderViewPosition(this.mHeaderViewWrapper);
  }
  
  public static class AbsEnvironmentDelegate
    implements EnvironmentDelegate
  {
    public AbsEnvironmentDelegate() {}
    
    public Context getContextForInflater(Activity paramActivity)
    {
      Object localObject = null;
      if ((paramActivity instanceof SherlockActivity)) {
        localObject = ((SherlockActivity)paramActivity).getSupportActionBar();
      }
      for (;;)
      {
        Context localContext = null;
        if (localObject != null) {
          localContext = ((ActionBar)localObject).getThemedContext();
        }
        localObject = localContext;
        if (localContext == null) {
          localObject = paramActivity;
        }
        return localObject;
        if ((paramActivity instanceof SherlockListActivity)) {
          localObject = ((SherlockListActivity)paramActivity).getSupportActionBar();
        } else if ((paramActivity instanceof SherlockFragmentActivity)) {
          localObject = ((SherlockFragmentActivity)paramActivity).getSupportActionBar();
        } else if ((paramActivity instanceof SherlockExpandableListActivity)) {
          localObject = ((SherlockExpandableListActivity)paramActivity).getSupportActionBar();
        } else if ((paramActivity instanceof SherlockPreferenceActivity)) {
          localObject = ((SherlockPreferenceActivity)paramActivity).getSupportActionBar();
        }
      }
    }
  }
}
