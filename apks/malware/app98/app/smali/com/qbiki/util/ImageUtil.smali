.class public Lcom/qbiki/util/ImageUtil;
.super Ljava/lang/Object;
.source "ImageUtil.java"


# static fields
.field private static final DEBUG:Z = false

.field private static final TAG:Ljava/lang/String; = "ImageUtil"


# direct methods
.method public constructor <init>()V
    .locals 0

    .prologue
    .line 26
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static base64EncodeFromResources(Ljava/lang/String;)Ljava/lang/String;
    .locals 7
    .param p0, "fileName"    # Ljava/lang/String;

    .prologue
    .line 288
    invoke-static {p0}, Lcom/qbiki/seattleclouds/App;->getResourceStream(Ljava/lang/String;)Ljava/io/InputStream;

    move-result-object v3

    .line 289
    .local v3, "is":Ljava/io/InputStream;
    if-nez v3, :cond_1

    .line 291
    const-string v5, ""

    .line 331
    :cond_0
    :goto_0
    return-object v5

    .line 293
    :cond_1
    new-instance v0, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v0}, Ljava/io/ByteArrayOutputStream;-><init>()V

    .line 295
    .local v0, "buffer":Ljava/io/ByteArrayOutputStream;
    const/16 v5, 0x4000

    new-array v1, v5, [B

    .line 298
    .local v1, "data":[B
    :goto_1
    const/4 v5, 0x0

    :try_start_0
    array-length v6, v1

    invoke-virtual {v3, v1, v5, v6}, Ljava/io/InputStream;->read([BII)I

    move-result v4

    .local v4, "nRead":I
    const/4 v5, -0x1

    if-eq v4, v5, :cond_2

    .line 300
    const/4 v5, 0x0

    invoke-virtual {v0, v1, v5, v4}, Ljava/io/ByteArrayOutputStream;->write([BII)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_1

    .line 304
    .end local v4    # "nRead":I
    :catch_0
    move-exception v2

    .line 306
    .local v2, "e":Ljava/io/IOException;
    :try_start_1
    const-string v5, "ImageUtil"

    const-string v6, "base64EncodeFromResources error"

    invoke-static {v5, v6, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 307
    const-string v5, ""
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 311
    if-eqz v3, :cond_0

    .line 315
    :try_start_2
    invoke-virtual {v3}, Ljava/io/InputStream;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_3

    .line 316
    const/4 v3, 0x0

    goto :goto_0

    .line 302
    .end local v2    # "e":Ljava/io/IOException;
    .restart local v4    # "nRead":I
    :cond_2
    :try_start_3
    invoke-virtual {v0}, Ljava/io/ByteArrayOutputStream;->flush()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 311
    if-eqz v3, :cond_3

    .line 315
    :try_start_4
    invoke-virtual {v3}, Ljava/io/InputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    .line 316
    const/4 v3, 0x0

    .line 325
    :cond_3
    :goto_2
    :try_start_5
    new-instance v5, Ljava/lang/String;

    invoke-virtual {v0}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v6

    invoke-static {v6}, Lorg/apache/commons/codec/binary/Base64;->encodeBase64([B)[B

    move-result-object v6

    invoke-direct {v5, v6}, Ljava/lang/String;-><init>([B)V
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_1

    goto :goto_0

    .line 327
    :catch_1
    move-exception v2

    .line 329
    .local v2, "e":Ljava/lang/Exception;
    const-string v5, "ImageUtil"

    const-string v6, "base64EncodeFromResources error"

    invoke-static {v5, v6, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 331
    const-string v5, ""

    goto :goto_0

    .line 311
    .end local v2    # "e":Ljava/lang/Exception;
    .end local v4    # "nRead":I
    :catchall_0
    move-exception v5

    if-eqz v3, :cond_4

    .line 315
    :try_start_6
    invoke-virtual {v3}, Ljava/io/InputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_4

    .line 316
    const/4 v3, 0x0

    .line 320
    :cond_4
    :goto_3
    throw v5

    .line 318
    .restart local v4    # "nRead":I
    :catch_2
    move-exception v5

    goto :goto_2

    .end local v4    # "nRead":I
    .local v2, "e":Ljava/io/IOException;
    :catch_3
    move-exception v6

    goto :goto_0

    .end local v2    # "e":Ljava/io/IOException;
    :catch_4
    move-exception v6

    goto :goto_3
.end method

.method public static clearBitmap(Landroid/graphics/Bitmap;)V
    .locals 0
    .param p0, "bm"    # Landroid/graphics/Bitmap;

    .prologue
    .line 337
    if-eqz p0, :cond_0

    .line 338
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->recycle()V

    .line 340
    :cond_0
    invoke-static {}, Ljava/lang/System;->gc()V

    .line 342
    return-void
.end method

.method public static correctImageOrientation(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;
    .locals 6
    .param p0, "filePath"    # Ljava/lang/String;
    .param p1, "bitmap"    # Landroid/graphics/Bitmap;

    .prologue
    .line 354
    const/4 v2, 0x0

    .line 357
    .local v2, "exif":Landroid/media/ExifInterface;
    :try_start_0
    new-instance v3, Landroid/media/ExifInterface;

    invoke-direct {v3, p0}, Landroid/media/ExifInterface;-><init>(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 370
    .end local v2    # "exif":Landroid/media/ExifInterface;
    .local v3, "exif":Landroid/media/ExifInterface;
    const-string v4, "Orientation"

    invoke-virtual {v3, v4}, Landroid/media/ExifInterface;->getAttribute(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    const-string v5, "6"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 372
    const/16 v4, 0x5a

    invoke-static {p1, v4}, Lcom/qbiki/util/ImageUtil;->rotate(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;

    move-result-object p1

    :cond_0
    :goto_0
    move-object v2, v3

    .end local v3    # "exif":Landroid/media/ExifInterface;
    .restart local v2    # "exif":Landroid/media/ExifInterface;
    move-object v0, p1

    .line 388
    .end local p1    # "bitmap":Landroid/graphics/Bitmap;
    .local v0, "bitmap":Landroid/graphics/Bitmap;
    :goto_1
    return-object v0

    .line 359
    .end local v0    # "bitmap":Landroid/graphics/Bitmap;
    .restart local p1    # "bitmap":Landroid/graphics/Bitmap;
    :catch_0
    move-exception v1

    .local v1, "e":Ljava/io/IOException;
    move-object v0, p1

    .line 364
    .end local p1    # "bitmap":Landroid/graphics/Bitmap;
    .restart local v0    # "bitmap":Landroid/graphics/Bitmap;
    goto :goto_1

    .line 374
    .end local v0    # "bitmap":Landroid/graphics/Bitmap;
    .end local v1    # "e":Ljava/io/IOException;
    .end local v2    # "exif":Landroid/media/ExifInterface;
    .restart local v3    # "exif":Landroid/media/ExifInterface;
    .restart local p1    # "bitmap":Landroid/graphics/Bitmap;
    :cond_1
    const-string v4, "Orientation"

    invoke-virtual {v3, v4}, Landroid/media/ExifInterface;->getAttribute(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    const-string v5, "8"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2

    .line 376
    const/16 v4, 0x10e

    invoke-static {p1, v4}, Lcom/qbiki/util/ImageUtil;->rotate(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;

    move-result-object p1

    goto :goto_0

    .line 378
    :cond_2
    const-string v4, "Orientation"

    invoke-virtual {v3, v4}, Landroid/media/ExifInterface;->getAttribute(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    const-string v5, "3"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 380
    const/16 v4, 0xb4

    invoke-static {p1, v4}, Lcom/qbiki/util/ImageUtil;->rotate(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;

    move-result-object p1

    goto :goto_0
.end method

.method public static decodeBitmapFromStream(Landroid/net/Uri;ILandroid/app/Activity;)Landroid/graphics/Bitmap;
    .locals 11
    .param p0, "uri"    # Landroid/net/Uri;
    .param p1, "maxImageSize"    # I
    .param p2, "act"    # Landroid/app/Activity;

    .prologue
    .line 203
    const/4 v0, 0x0

    .line 206
    .local v0, "b":Landroid/graphics/Bitmap;
    new-instance v2, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v2}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 207
    .local v2, "o":Landroid/graphics/BitmapFactory$Options;
    const/4 v5, 0x1

    iput-boolean v5, v2, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 208
    invoke-virtual {p0}, Landroid/net/Uri;->toString()Ljava/lang/String;

    move-result-object v5

    const-string v6, "content://"

    invoke-virtual {v5, v6}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v5

    if-nez v5, :cond_2

    .line 212
    :try_start_0
    invoke-virtual {p2}, Landroid/app/Activity;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    invoke-virtual {v5, p0}, Landroid/content/ContentResolver;->openInputStream(Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v5

    const/4 v6, 0x0

    invoke-static {v5, v6, v2}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 236
    :goto_0
    const/4 v4, 0x1

    .line 237
    .local v4, "scale":I
    iget v5, v2, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    if-gt v5, p1, :cond_0

    iget v5, v2, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    if-le v5, p1, :cond_1

    .line 247
    :cond_0
    const-wide/high16 v5, 0x4000000000000000L    # 2.0

    int-to-double v7, p1

    iget v9, v2, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    iget v10, v2, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    invoke-static {v9, v10}, Ljava/lang/Math;->min(II)I

    move-result v9

    int-to-double v9, v9

    div-double/2addr v7, v9

    invoke-static {v7, v8}, Ljava/lang/Math;->log(D)D

    move-result-wide v7

    const-wide/high16 v9, 0x3fe0000000000000L    # 0.5

    invoke-static {v9, v10}, Ljava/lang/Math;->log(D)D

    move-result-wide v9

    div-double/2addr v7, v9

    double-to-int v7, v7

    int-to-double v7, v7

    invoke-static {v5, v6, v7, v8}, Ljava/lang/Math;->pow(DD)D

    move-result-wide v5

    double-to-int v4, v5

    .line 255
    :cond_1
    new-instance v3, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v3}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 256
    .local v3, "o2":Landroid/graphics/BitmapFactory$Options;
    iput v4, v3, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 257
    sget-object v5, Landroid/graphics/Bitmap$Config;->RGB_565:Landroid/graphics/Bitmap$Config;

    iput-object v5, v3, Landroid/graphics/BitmapFactory$Options;->inPreferredConfig:Landroid/graphics/Bitmap$Config;

    .line 258
    invoke-virtual {p0}, Landroid/net/Uri;->toString()Ljava/lang/String;

    move-result-object v5

    const-string v6, "content://"

    invoke-virtual {v5, v6}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v5

    if-nez v5, :cond_3

    .line 262
    :try_start_1
    invoke-virtual {p2}, Landroid/app/Activity;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    invoke-virtual {v5, p0}, Landroid/content/ContentResolver;->openInputStream(Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v5

    const/4 v6, 0x0

    invoke-static {v5, v6, v3}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;
    :try_end_1
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_2

    move-result-object v0

    .line 283
    :goto_1
    return-object v0

    .line 214
    .end local v3    # "o2":Landroid/graphics/BitmapFactory$Options;
    .end local v4    # "scale":I
    :catch_0
    move-exception v1

    .line 217
    .local v1, "e":Ljava/io/FileNotFoundException;
    invoke-virtual {v1}, Ljava/io/FileNotFoundException;->printStackTrace()V

    goto :goto_0

    .line 224
    .end local v1    # "e":Ljava/io/FileNotFoundException;
    :cond_2
    :try_start_2
    new-instance v5, Ljava/io/FileInputStream;

    new-instance v6, Ljava/io/File;

    invoke-virtual {p0}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v6, v7}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-direct {v5, v6}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V

    const/4 v6, 0x0

    invoke-static {v5, v6, v2}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;
    :try_end_2
    .catch Ljava/io/FileNotFoundException; {:try_start_2 .. :try_end_2} :catch_1

    goto :goto_0

    .line 226
    :catch_1
    move-exception v1

    .line 229
    .restart local v1    # "e":Ljava/io/FileNotFoundException;
    invoke-virtual {v1}, Ljava/io/FileNotFoundException;->printStackTrace()V

    goto :goto_0

    .line 264
    .end local v1    # "e":Ljava/io/FileNotFoundException;
    .restart local v3    # "o2":Landroid/graphics/BitmapFactory$Options;
    .restart local v4    # "scale":I
    :catch_2
    move-exception v1

    .line 266
    .restart local v1    # "e":Ljava/io/FileNotFoundException;
    const-string v5, "ImageUtil"

    const-string v6, "decodeBitmapFromStream error"

    invoke-static {v5, v6, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_1

    .line 273
    .end local v1    # "e":Ljava/io/FileNotFoundException;
    :cond_3
    :try_start_3
    new-instance v5, Ljava/io/FileInputStream;

    new-instance v6, Ljava/io/File;

    invoke-virtual {p0}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v6, v7}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-direct {v5, v6}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V

    const/4 v6, 0x0

    invoke-static {v5, v6, v3}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;
    :try_end_3
    .catch Ljava/io/FileNotFoundException; {:try_start_3 .. :try_end_3} :catch_3

    move-result-object v0

    goto :goto_1

    .line 275
    :catch_3
    move-exception v1

    .line 277
    .restart local v1    # "e":Ljava/io/FileNotFoundException;
    const-string v5, "ImageUtil"

    const-string v6, "decodeBitmapFromStream error"

    invoke-static {v5, v6, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_1
.end method

.method public static decodeBitmapResource(Ljava/lang/String;I)Landroid/graphics/Bitmap;
    .locals 12
    .param p0, "fileName"    # Ljava/lang/String;
    .param p1, "maxImageSize"    # I

    .prologue
    const/4 v11, 0x0

    const/4 v10, 0x1

    .line 115
    const/4 v0, 0x0

    .line 118
    .local v0, "b":Landroid/graphics/Bitmap;
    new-instance v1, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v1}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 119
    .local v1, "o":Landroid/graphics/BitmapFactory$Options;
    iput-boolean v10, v1, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 120
    invoke-static {p0}, Lcom/qbiki/seattleclouds/App;->getResourceStream(Ljava/lang/String;)Ljava/io/InputStream;

    move-result-object v4

    invoke-static {v4, v11, v1}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    .line 125
    const/4 v3, 0x1

    .line 126
    .local v3, "scale":I
    iget v4, v1, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    if-gt v4, p1, :cond_0

    iget v4, v1, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    if-le v4, p1, :cond_1

    .line 136
    :cond_0
    const-wide/high16 v4, 0x4000000000000000L    # 2.0

    int-to-double v6, p1

    iget v8, v1, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    iget v9, v1, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    invoke-static {v8, v9}, Ljava/lang/Math;->min(II)I

    move-result v8

    int-to-double v8, v8

    div-double/2addr v6, v8

    invoke-static {v6, v7}, Ljava/lang/Math;->log(D)D

    move-result-wide v6

    const-wide/high16 v8, 0x3fe0000000000000L    # 0.5

    invoke-static {v8, v9}, Ljava/lang/Math;->log(D)D

    move-result-wide v8

    div-double/2addr v6, v8

    double-to-int v6, v6

    int-to-double v6, v6

    invoke-static {v4, v5, v6, v7}, Ljava/lang/Math;->pow(DD)D

    move-result-wide v4

    double-to-int v3, v4

    .line 144
    :cond_1
    new-instance v2, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v2}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 145
    .local v2, "o2":Landroid/graphics/BitmapFactory$Options;
    iput v3, v2, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 146
    iput-boolean v10, v2, Landroid/graphics/BitmapFactory$Options;->inPurgeable:Z

    .line 148
    invoke-static {p0}, Lcom/qbiki/seattleclouds/App;->getResourceStream(Ljava/lang/String;)Ljava/io/InputStream;

    move-result-object v4

    invoke-static {v4, v11, v2}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v0

    .line 153
    return-object v0
.end method

.method public static decodeExternalBitmap(Ljava/lang/String;I)Landroid/graphics/Bitmap;
    .locals 11
    .param p0, "filePath"    # Ljava/lang/String;
    .param p1, "maxImageSize"    # I

    .prologue
    const/4 v10, 0x1

    .line 158
    const/4 v0, 0x0

    .line 161
    .local v0, "b":Landroid/graphics/Bitmap;
    new-instance v1, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v1}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 162
    .local v1, "o":Landroid/graphics/BitmapFactory$Options;
    iput-boolean v10, v1, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 164
    invoke-static {p0, v1}, Landroid/graphics/BitmapFactory;->decodeFile(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    .line 169
    const/4 v3, 0x1

    .line 170
    .local v3, "scale":I
    iget v4, v1, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    if-gt v4, p1, :cond_0

    iget v4, v1, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    if-le v4, p1, :cond_1

    .line 180
    :cond_0
    const-wide/high16 v4, 0x4000000000000000L    # 2.0

    int-to-double v6, p1

    iget v8, v1, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    iget v9, v1, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    invoke-static {v8, v9}, Ljava/lang/Math;->min(II)I

    move-result v8

    int-to-double v8, v8

    div-double/2addr v6, v8

    invoke-static {v6, v7}, Ljava/lang/Math;->log(D)D

    move-result-wide v6

    const-wide/high16 v8, 0x3fe0000000000000L    # 0.5

    invoke-static {v8, v9}, Ljava/lang/Math;->log(D)D

    move-result-wide v8

    div-double/2addr v6, v8

    invoke-static {v4, v5, v6, v7}, Ljava/lang/Math;->pow(DD)D

    move-result-wide v4

    double-to-int v3, v4

    .line 188
    :cond_1
    new-instance v2, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v2}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 189
    .local v2, "o2":Landroid/graphics/BitmapFactory$Options;
    iput v3, v2, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 190
    iput-boolean v10, v2, Landroid/graphics/BitmapFactory$Options;->inPurgeable:Z

    .line 193
    invoke-static {p0, v2}, Landroid/graphics/BitmapFactory;->decodeFile(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v0

    .line 198
    return-object v0
.end method

.method public static getScaledBitmap(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;
    .locals 8
    .param p0, "b"    # Landroid/graphics/Bitmap;
    .param p1, "targetWidth"    # I
    .param p2, "targetHeight"    # I
    .param p3, "scaleToMinimumDimension"    # Z

    .prologue
    .line 71
    if-nez p0, :cond_0

    .line 72
    const/4 p0, 0x0

    .line 97
    .end local p0    # "b":Landroid/graphics/Bitmap;
    :goto_0
    return-object p0

    .line 74
    .restart local p0    # "b":Landroid/graphics/Bitmap;
    :cond_0
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v4

    int-to-double v4, v4

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v6

    int-to-double v6, v6

    div-double v0, v4, v6

    .line 77
    .local v0, "aspectRatio":D
    const/4 v3, 0x0

    .line 78
    .local v3, "newWidth":I
    const/4 v2, 0x0

    .line 80
    .local v2, "newHeight":I
    if-eqz p3, :cond_1

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v4

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v5

    if-lt v4, v5, :cond_2

    :cond_1
    if-nez p3, :cond_3

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v4

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v5

    if-le v4, v5, :cond_3

    .line 83
    :cond_2
    move v3, p1

    .line 84
    int-to-double v4, v3

    div-double/2addr v4, v0

    double-to-int v2, v4

    .line 95
    :goto_1
    const/4 v4, 0x1

    invoke-static {p0, v3, v2, v4}, Landroid/graphics/Bitmap;->createScaledBitmap(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;

    move-result-object p0

    .line 97
    goto :goto_0

    .line 88
    :cond_3
    move v2, p2

    .line 89
    int-to-double v4, v2

    mul-double/2addr v4, v0

    double-to-int v3, v4

    goto :goto_1
.end method

.method public static getScaledBitmapResource(Ljava/lang/String;IIZ)Landroid/graphics/Bitmap;
    .locals 2
    .param p0, "fileName"    # Ljava/lang/String;
    .param p1, "targetWidth"    # I
    .param p2, "targetHeight"    # I
    .param p3, "scaleToMinimumDimension"    # Z

    .prologue
    .line 53
    invoke-static {p1, p2}, Ljava/lang/Math;->max(II)I

    move-result v1

    invoke-static {p0, v1}, Lcom/qbiki/util/ImageUtil;->decodeBitmapResource(Ljava/lang/String;I)Landroid/graphics/Bitmap;

    move-result-object v0

    .line 54
    .local v0, "b":Landroid/graphics/Bitmap;
    if-nez v0, :cond_0

    .line 55
    const/4 v1, 0x0

    .line 56
    :goto_0
    return-object v1

    :cond_0
    invoke-static {v0, p1, p2, p3}, Lcom/qbiki/util/ImageUtil;->getScaledBitmap(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;

    move-result-object v1

    goto :goto_0
.end method

.method public static getScaledExternalBitmap(Ljava/lang/String;IIZ)Landroid/graphics/Bitmap;
    .locals 2
    .param p0, "fileName"    # Ljava/lang/String;
    .param p1, "targetWidth"    # I
    .param p2, "targetHeight"    # I
    .param p3, "scaleToMinimumDimension"    # Z

    .prologue
    .line 62
    invoke-static {p1, p2}, Ljava/lang/Math;->max(II)I

    move-result v1

    invoke-static {p0, v1}, Lcom/qbiki/util/ImageUtil;->decodeExternalBitmap(Ljava/lang/String;I)Landroid/graphics/Bitmap;

    move-result-object v0

    .line 63
    .local v0, "b":Landroid/graphics/Bitmap;
    if-nez v0, :cond_0

    .line 64
    const/4 v1, 0x0

    .line 65
    :goto_0
    return-object v1

    :cond_0
    invoke-static {v0, p1, p2, p3}, Lcom/qbiki/util/ImageUtil;->getScaledBitmap(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;

    move-result-object v1

    goto :goto_0
.end method

.method public static rotate(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;
    .locals 7
    .param p0, "bitmap"    # Landroid/graphics/Bitmap;
    .param p1, "degree"    # I

    .prologue
    const/4 v1, 0x0

    .line 393
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v3

    .line 394
    .local v3, "w":I
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v4

    .line 396
    .local v4, "h":I
    new-instance v5, Landroid/graphics/Matrix;

    invoke-direct {v5}, Landroid/graphics/Matrix;-><init>()V

    .line 397
    .local v5, "mtx":Landroid/graphics/Matrix;
    int-to-float v0, p1

    invoke-virtual {v5, v0}, Landroid/graphics/Matrix;->postRotate(F)Z

    .line 399
    const/4 v6, 0x1

    move-object v0, p0

    move v2, v1

    invoke-static/range {v0 .. v6}, Landroid/graphics/Bitmap;->createBitmap(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;

    move-result-object v0

    return-object v0
.end method
