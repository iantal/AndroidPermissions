.class public Lcom/qbiki/util/ResourceImageResizer;
.super Lcom/google/android/bitmapfun/ImageResizer;
.source "ResourceImageResizer.java"


# static fields
.field private static final TAG:Ljava/lang/String; = "ResourceImageResizer"


# direct methods
.method public constructor <init>(Landroid/content/Context;I)V
    .locals 0
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "imageSize"    # I

    .prologue
    .line 50
    invoke-direct {p0, p1, p2}, Lcom/google/android/bitmapfun/ImageResizer;-><init>(Landroid/content/Context;I)V

    .line 51
    return-void
.end method

.method public constructor <init>(Landroid/content/Context;II)V
    .locals 0
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "imageWidth"    # I
    .param p3, "imageHeight"    # I

    .prologue
    .line 38
    invoke-direct {p0, p1, p2, p3}, Lcom/google/android/bitmapfun/ImageResizer;-><init>(Landroid/content/Context;II)V

    .line 39
    return-void
.end method

.method public static decodeSampledBitmapFromResource(Ljava/lang/String;IILcom/google/android/bitmapfun/ImageCache;)Landroid/graphics/Bitmap;
    .locals 7
    .param p0, "resourceName"    # Ljava/lang/String;
    .param p1, "reqWidth"    # I
    .param p2, "reqHeight"    # I
    .param p3, "cache"    # Lcom/google/android/bitmapfun/ImageCache;

    .prologue
    const/4 v6, 0x1

    const/4 v0, 0x0

    .line 100
    invoke-static {p0}, Lcom/qbiki/seattleclouds/App;->getResourceStream(Ljava/lang/String;)Ljava/io/InputStream;

    move-result-object v1

    .line 101
    .local v1, "is":Ljava/io/InputStream;
    if-nez v1, :cond_1

    .line 157
    :cond_0
    :goto_0
    return-object v0

    .line 105
    :cond_1
    new-instance v2, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v2}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 106
    .local v2, "options":Landroid/graphics/BitmapFactory$Options;
    iput-boolean v6, v2, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 107
    invoke-static {v1, v0, v2}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    .line 111
    :try_start_0
    invoke-virtual {v1}, Ljava/io/InputStream;->close()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1

    .line 118
    :goto_1
    invoke-static {v2, p1, p2}, Lcom/qbiki/util/ResourceImageResizer;->calculateInSampleSize(Landroid/graphics/BitmapFactory$Options;II)I

    move-result v5

    iput v5, v2, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 120
    iget v4, v2, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    .line 121
    .local v4, "originalWidth":I
    iget v3, v2, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    .line 124
    .local v3, "originalHeight":I
    const/4 v5, 0x0

    iput-boolean v5, v2, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 130
    invoke-static {}, Lcom/google/android/bitmapfun/Utils;->hasHoneycomb()Z

    move-result v5

    if-eqz v5, :cond_2

    iget v5, v2, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    if-ne v5, v6, :cond_2

    .line 132
    invoke-static {v2, p3}, Lcom/qbiki/util/ResourceImageResizer;->addInBitmapOptions(Landroid/graphics/BitmapFactory$Options;Lcom/google/android/bitmapfun/ImageCache;)V

    .line 135
    :cond_2
    invoke-static {p0}, Lcom/qbiki/seattleclouds/App;->getResourceStream(Ljava/lang/String;)Ljava/io/InputStream;

    move-result-object v1

    .line 136
    if-eqz v1, :cond_0

    .line 139
    invoke-static {v1, v0, v2}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v0

    .line 151
    .local v0, "bitmap":Landroid/graphics/Bitmap;
    :try_start_1
    invoke-virtual {v1}, Ljava/io/InputStream;->close()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_0

    .line 153
    :catch_0
    move-exception v5

    goto :goto_0

    .line 113
    .end local v0    # "bitmap":Landroid/graphics/Bitmap;
    .end local v3    # "originalHeight":I
    .end local v4    # "originalWidth":I
    :catch_1
    move-exception v5

    goto :goto_1
.end method

.method private processBitmap(Ljava/lang/String;)Landroid/graphics/Bitmap;
    .locals 3
    .param p1, "resourceName"    # Ljava/lang/String;

    .prologue
    .line 70
    iget v0, p0, Lcom/qbiki/util/ResourceImageResizer;->mImageWidth:I

    iget v1, p0, Lcom/qbiki/util/ResourceImageResizer;->mImageHeight:I

    invoke-virtual {p0}, Lcom/qbiki/util/ResourceImageResizer;->getImageCache()Lcom/google/android/bitmapfun/ImageCache;

    move-result-object v2

    invoke-static {p1, v0, v1, v2}, Lcom/qbiki/util/ResourceImageResizer;->decodeSampledBitmapFromResource(Ljava/lang/String;IILcom/google/android/bitmapfun/ImageCache;)Landroid/graphics/Bitmap;

    move-result-object v0

    return-object v0
.end method


# virtual methods
.method protected processBitmap(Ljava/lang/Object;)Landroid/graphics/Bitmap;
    .locals 1
    .param p1, "data"    # Ljava/lang/Object;

    .prologue
    .line 76
    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/qbiki/util/ResourceImageResizer;->processBitmap(Ljava/lang/String;)Landroid/graphics/Bitmap;

    move-result-object v0

    return-object v0
.end method
