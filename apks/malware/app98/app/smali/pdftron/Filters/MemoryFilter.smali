.class public Lpdftron/Filters/MemoryFilter;
.super Lpdftron/Filters/Filter;
.source "SourceFile"


# direct methods
.method public constructor <init>(JZ)V
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lpdftron/Common/PDFNetException;
        }
    .end annotation

    .prologue
    .line 23
    invoke-static {p1, p2, p3}, Lpdftron/Filters/MemoryFilter;->MemoryFilterCreate(JZ)J

    move-result-wide v0

    const/4 v2, 0x0

    invoke-direct {p0, v0, v1, v2}, Lpdftron/Filters/Filter;-><init>(JLpdftron/Filters/Filter;)V

    .line 24
    return-void
.end method

.method private static native GetBuffer(J)[B
.end method

.method private static native MemoryFilterCreate(JZ)J
.end method

.method private static native SetAsInputFilter(J)V
.end method


# virtual methods
.method public getBuffer()[B
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lpdftron/Common/PDFNetException;
        }
    .end annotation

    .prologue
    .line 35
    iget-wide v0, p0, Lpdftron/Filters/Filter;->impl:J

    invoke-static {v0, v1}, Lpdftron/Filters/MemoryFilter;->GetBuffer(J)[B

    move-result-object v0

    return-object v0
.end method

.method public setAsInputFilter()V
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lpdftron/Common/PDFNetException;
        }
    .end annotation

    .prologue
    .line 49
    iget-wide v0, p0, Lpdftron/Filters/Filter;->impl:J

    invoke-static {v0, v1}, Lpdftron/Filters/MemoryFilter;->SetAsInputFilter(J)V

    .line 50
    return-void
.end method
