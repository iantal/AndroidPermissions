package cdf.fs;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Handler.Callback;
import android.os.Message;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.ProgressBar;

public class BxActivity
  extends Activity
{
  private static final int LOAD_COMPLETE = 100;
  private Handler hdl;
  private String[] msg;
  private ProgressBar probar;
  private WebView web;
  
  public BxActivity() {}
  
  private void initData()
  {
    Object localObject = getIntent().getStringExtra("flag");
    if (TextUtils.isEmpty((CharSequence)localObject)) {
      finish();
    }
    while (this.hdl != null) {
      return;
    }
    this.hdl = new Handler(new Handler.Callback()
    {
      public boolean handleMessage(Message paramAnonymousMessage)
      {
        if (paramAnonymousMessage.what == 100) {
          BxActivity.this.probar.setVisibility(8);
        }
        return true;
      }
    });
    this.msg = ((String)localObject).split("\\|");
    localObject = this.web.getSettings();
    ((WebSettings)localObject).setJavaScriptEnabled(true);
    ((WebSettings)localObject).setJavaScriptCanOpenWindowsAutomatically(true);
    ((WebSettings)localObject).setAllowFileAccess(true);
    ((WebSettings)localObject).setDefaultTextEncodingName("UTF-8");
    ((WebSettings)localObject).setLoadWithOverviewMode(true);
    ((WebSettings)localObject).setUseWideViewPort(false);
    this.web.setWebViewClient(new WebViewClient()
    {
      public boolean shouldOverrideUrlLoading(WebView paramAnonymousWebView, String paramAnonymousString)
      {
        paramAnonymousWebView.loadUrl(paramAnonymousString);
        return false;
      }
    });
    this.web.setWebChromeClient(new WebChromeClient()
    {
      public void onProgressChanged(WebView paramAnonymousWebView, int paramAnonymousInt)
      {
        if (paramAnonymousInt == 100)
        {
          Message localMessage = new Message();
          localMessage.arg1 = paramAnonymousInt;
          localMessage.what = 100;
          BxActivity.this.hdl.sendMessage(localMessage);
        }
        super.onProgressChanged(paramAnonymousWebView, paramAnonymousInt);
      }
    });
    this.web.loadUrl(this.msg[2]);
  }
  
  private void initView()
  {
    this.web = ((WebView)getView(2131361793));
    this.probar = ((ProgressBar)getView(2131361794));
  }
  
  public <T> T getView(int paramInt)
  {
    return findViewById(paramInt);
  }
  
  public void onBackPressed()
  {
    this.web.loadData("", "text/html; charset=UTF-8", null);
    super.onBackPressed();
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setContentView(2130903041);
    initView();
    initData();
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if ((paramInt == 4) && (this.web.canGoBack()))
    {
      this.web.goBack();
      return true;
    }
    return super.onKeyDown(paramInt, paramKeyEvent);
  }
  
  protected void onPause()
  {
    super.onPause();
    if (this.web != null) {
      this.web.onPause();
    }
  }
  
  protected void onResume()
  {
    super.onResume();
    if (this.web != null) {
      this.web.onResume();
    }
  }
}
