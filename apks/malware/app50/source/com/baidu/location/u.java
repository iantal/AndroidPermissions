package com.baidu.location;

import android.location.Location;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.Locale;

public class u
  implements au, l
{
  private static StringBuffer eA;
  private static final int eB = 5;
  private static File eC;
  private static final int eD = 3600;
  private static int eE = 0;
  private static long eF = 0L;
  private static long eG = 0L;
  private static boolean eH = false;
  private static final int eI = 1024;
  private static int eJ = 0;
  private static double eK = 0.0D;
  private static double eL = 0.0D;
  private static String eM;
  private static int eN = 0;
  private static int eO = 0;
  private static final int eP = 5;
  private static final int eQ = 750;
  private static final int eR = 1000;
  private static final int eT = 100;
  private static int eV = 0;
  private static u eW = null;
  private static long eX = 0L;
  private static final int ez = 12;
  private String eS = null;
  private boolean eU = true;
  
  static
  {
    eM = "Temp_in.dat";
    eC = new File(f.H, eM);
    eA = null;
    eH = true;
    eN = 0;
    eV = 0;
    eG = 0L;
    eF = 0L;
    eX = 0L;
    eK = 0.0D;
    eL = 0.0D;
  }
  
  private u(String paramString)
  {
    if (paramString != null)
    {
      str = paramString;
      if (paramString.length() <= 100) {}
    }
    for (String str = paramString.substring(0, 100);; str = "")
    {
      this.eS = str;
      return;
    }
  }
  
  private boolean aA()
  {
    if (eC.exists()) {
      eC.delete();
    }
    aw();
    return !eC.exists();
  }
  
  private static boolean au()
  {
    if (eC.exists()) {
      eC.delete();
    }
    if (!eC.getParentFile().exists()) {
      eC.getParentFile().mkdirs();
    }
    try
    {
      eC.createNewFile();
      RandomAccessFile localRandomAccessFile = new RandomAccessFile(eC, "rw");
      localRandomAccessFile.seek(0L);
      localRandomAccessFile.writeInt(0);
      localRandomAccessFile.writeInt(0);
      localRandomAccessFile.writeInt(1);
      localRandomAccessFile.close();
      aw();
      return eC.exists();
    }
    catch (IOException localIOException) {}
    return false;
  }
  
  private void av()
  {
    if ((eA != null) && (eA.length() >= 100)) {
      e(eA.toString());
    }
    aw();
  }
  
  private static void aw()
  {
    eH = true;
    eA = null;
    eN = 0;
    eV = 0;
    eG = 0L;
    eF = 0L;
    eX = 0L;
    eK = 0.0D;
    eL = 0.0D;
    eE = 0;
    eJ = 0;
    eO = 0;
  }
  
  public static u ax()
  {
    if (eW == null) {
      eW = new u(aw.b6().b2());
    }
    return eW;
  }
  
  private void ay() {}
  
  public static String az()
  {
    if (eC == null) {
      return null;
    }
    if (!eC.exists()) {
      return null;
    }
    for (;;)
    {
      int j;
      try
      {
        localRandomAccessFile = new RandomAccessFile(eC, "rw");
        localRandomAccessFile.seek(0L);
        k = localRandomAccessFile.readInt();
        j = localRandomAccessFile.readInt();
        i = localRandomAccessFile.readInt();
        if (jdMethod_if(k, j, i)) {
          break label220;
        }
        localRandomAccessFile.close();
        au();
        return null;
      }
      catch (IOException localIOException)
      {
        RandomAccessFile localRandomAccessFile;
        int k;
        long l;
        int m;
        Object localObject;
        return null;
      }
      localRandomAccessFile.close();
      return null;
      l = 0L + ((j - 1) * 1024 + 12);
      localRandomAccessFile.seek(l);
      m = localRandomAccessFile.readInt();
      localObject = new byte[m];
      localRandomAccessFile.seek(l + 4L);
      int i = 0;
      if (i < m)
      {
        localObject[i] = localRandomAccessFile.readByte();
        i += 1;
      }
      else
      {
        localObject = new String((byte[])localObject);
        if (k < c.ax)
        {
          i = j + 1;
          localRandomAccessFile.seek(4L);
          localRandomAccessFile.writeInt(i);
          localRandomAccessFile.close();
          return localObject;
        }
        i = c.ax;
        if (j == i)
        {
          i = 1;
        }
        else
        {
          i = j + 1;
          continue;
          label220:
          if (j != 0) {
            if (j != i) {}
          }
        }
      }
    }
  }
  
  private boolean e(String paramString)
  {
    if ((paramString == null) || (!paramString.startsWith("&nr"))) {}
    while ((!eC.exists()) && (!au())) {
      return false;
    }
    for (;;)
    {
      int m;
      try
      {
        RandomAccessFile localRandomAccessFile = new RandomAccessFile(eC, "rw");
        localRandomAccessFile.seek(0L);
        int k = localRandomAccessFile.readInt();
        j = localRandomAccessFile.readInt();
        m = localRandomAccessFile.readInt();
        if (!jdMethod_if(k, j, m))
        {
          localRandomAccessFile.close();
          au();
          return false;
        }
        if (c.aX) {
          if (k != c.ax)
          {
            if ((m > 1) && (paramString.equals(jdMethod_for(m - 1))))
            {
              localRandomAccessFile.close();
              return false;
            }
          }
          else
          {
            if (m != 1) {
              break label493;
            }
            i = c.ax;
            if (paramString.equals(jdMethod_for(i)))
            {
              localRandomAccessFile.close();
              return false;
            }
          }
        }
        localRandomAccessFile.seek((m - 1) * 1024 + 12 + 0L);
        if (paramString.length() > 750)
        {
          localRandomAccessFile.close();
          return false;
        }
        paramString = Jni.h(paramString);
        i = paramString.length();
        if (i > 1020)
        {
          localRandomAccessFile.close();
          return false;
        }
        localRandomAccessFile.writeInt(i);
        localRandomAccessFile.writeBytes(paramString);
        if (k == 0)
        {
          localRandomAccessFile.seek(0L);
          localRandomAccessFile.writeInt(1);
          localRandomAccessFile.writeInt(1);
          localRandomAccessFile.writeInt(2);
          localRandomAccessFile.close();
          return true;
        }
        if (k < c.ax - 1)
        {
          localRandomAccessFile.seek(0L);
          localRandomAccessFile.writeInt(k + 1);
          localRandomAccessFile.seek(8L);
          localRandomAccessFile.writeInt(k + 2);
          continue;
        }
        if (k == c.ax - 1)
        {
          localRandomAccessFile.seek(0L);
          localRandomAccessFile.writeInt(c.ax);
          if ((j == 0) || (j == 1)) {
            localRandomAccessFile.writeInt(2);
          }
          localRandomAccessFile.seek(8L);
          localRandomAccessFile.writeInt(1);
          continue;
        }
        if (m == j)
        {
          if (m != c.ax) {
            break label501;
          }
          i = 1;
          if (i != c.ax) {
            break label509;
          }
          j = 1;
          localRandomAccessFile.seek(4L);
          localRandomAccessFile.writeInt(j);
          localRandomAccessFile.writeInt(i);
          continue;
        }
        if (m == c.ax)
        {
          i = 1;
          if (i == j)
          {
            if (i == c.ax)
            {
              j = 1;
              localRandomAccessFile.seek(4L);
              localRandomAccessFile.writeInt(j);
            }
          }
          else
          {
            localRandomAccessFile.seek(8L);
            localRandomAccessFile.writeInt(i);
          }
        }
        else
        {
          i = m + 1;
          continue;
        }
        j = i + 1;
        continue;
        i = m - 1;
      }
      catch (IOException paramString)
      {
        return false;
      }
      label493:
      continue;
      label501:
      int i = m + 1;
      continue;
      label509:
      int j = i + 1;
    }
  }
  
  private String jdMethod_for(int paramInt)
  {
    if (!eC.exists()) {
      return null;
    }
    for (;;)
    {
      try
      {
        localObject = new RandomAccessFile(eC, "rw");
        ((RandomAccessFile)localObject).seek(0L);
        i = ((RandomAccessFile)localObject).readInt();
        if (jdMethod_if(i, ((RandomAccessFile)localObject).readInt(), ((RandomAccessFile)localObject).readInt())) {
          break label160;
        }
        ((RandomAccessFile)localObject).close();
        au();
        return null;
      }
      catch (IOException localIOException)
      {
        Object localObject;
        long l;
        byte[] arrayOfByte;
        return null;
      }
      ((RandomAccessFile)localObject).close();
      return null;
      l = 12L + 0L + (paramInt - 1) * 1024;
      ((RandomAccessFile)localObject).seek(l);
      int i = ((RandomAccessFile)localObject).readInt();
      arrayOfByte = new byte[i];
      ((RandomAccessFile)localObject).seek(l + 4L);
      paramInt = 0;
      if (paramInt < i)
      {
        arrayOfByte[paramInt] = ((RandomAccessFile)localObject).readByte();
        paramInt += 1;
      }
      else
      {
        ((RandomAccessFile)localObject).close();
        localObject = new String(arrayOfByte);
        return localObject;
        label160:
        if (paramInt != 0) {
          if (paramInt != i + 1) {}
        }
      }
    }
  }
  
  private static boolean jdMethod_if(int paramInt1, int paramInt2, int paramInt3)
  {
    boolean bool = true;
    if ((paramInt1 < 0) || (paramInt1 > c.ax)) {
      bool = false;
    }
    do
    {
      return bool;
      if ((paramInt2 < 0) || (paramInt2 > paramInt1 + 1)) {
        return false;
      }
    } while ((paramInt3 >= 1) && (paramInt3 <= paramInt1 + 1) && (paramInt3 <= c.ax));
    return false;
  }
  
  private boolean jdMethod_if(Location paramLocation, int paramInt1, int paramInt2)
  {
    if ((paramLocation == null) || (!c.ay) || (!this.eU) || (!w.fZ)) {
      return false;
    }
    if (c.au < 5)
    {
      c.au = 5;
      if (c.ar >= 5) {
        break label224;
      }
      c.ar = 5;
    }
    double d1;
    double d2;
    long l1;
    for (;;)
    {
      d1 = paramLocation.getLongitude();
      d2 = paramLocation.getLatitude();
      l1 = paramLocation.getTime() / 1000L;
      if (!eH) {
        break label242;
      }
      eN = 1;
      eA = new StringBuffer("");
      eA.append(String.format(Locale.CHINA, "&nr=%s&traj=%d,%.5f,%.5f|", new Object[] { this.eS, Long.valueOf(l1), Double.valueOf(d1), Double.valueOf(d2) }));
      eV = eA.length();
      eG = l1;
      eK = d1;
      eL = d2;
      eF = Math.floor(d1 * 100000.0D + 0.5D);
      eX = Math.floor(d2 * 100000.0D + 0.5D);
      eH = false;
      return true;
      if (c.au <= 1000) {
        break;
      }
      c.au = 1000;
      break;
      label224:
      if (c.ar > 3600) {
        c.ar = 3600;
      }
    }
    label242:
    paramLocation = new float[1];
    Location.distanceBetween(d2, d1, eL, eK, paramLocation);
    long l2 = eG;
    if ((paramLocation[0] >= c.au) || (l1 - l2 >= c.ar))
    {
      if (eA == null)
      {
        eN += 1;
        eV = 0;
        eA = new StringBuffer("");
        eA.append(String.format(Locale.CHINA, "&nr=%s&traj=%d,%.5f,%.5f|", new Object[] { this.eS, Long.valueOf(l1), Double.valueOf(d1), Double.valueOf(d2) }));
        eV = eA.length();
        eG = l1;
        eK = d1;
        eL = d2;
        eF = Math.floor(d1 * 100000.0D + 0.5D);
      }
      long l3;
      for (eX = Math.floor(d2 * 100000.0D + 0.5D);; eX = l3)
      {
        if (eV + 15 > 750)
        {
          e(eA.toString());
          eA = null;
        }
        if (eN >= c.ax) {
          this.eU = false;
        }
        return true;
        eK = d1;
        eL = d2;
        l2 = Math.floor(d1 * 100000.0D + 0.5D);
        l3 = Math.floor(d2 * 100000.0D + 0.5D);
        eE = (int)(l1 - eG);
        eJ = (int)(l2 - eF);
        eO = (int)(l3 - eX);
        eA.append(String.format(Locale.CHINA, "%d,%d,%d|", new Object[] { Integer.valueOf(eE), Integer.valueOf(eJ), Integer.valueOf(eO) }));
        eV = eA.length();
        eG = l1;
        eF = l2;
      }
    }
    return false;
  }
  
  public void aB()
  {
    av();
  }
  
  public boolean jdMethod_do(Location paramLocation)
  {
    return jdMethod_if(paramLocation, c.au, c.ar);
  }
}
