package com.baidu.location;

import android.content.ContentValues;
import android.content.Context;
import android.content.SharedPreferences;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.Looper;
import android.os.Message;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import com.baidu.location.b.a.a;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

class ar
  implements au, l
{
  private static final String h = "GeofenceMan";
  private static final String hJ = "GeofenceMan";
  private static final int hK = 3;
  public static final int hL = 10;
  private static final String hM = "http://loc.map.baidu.com/fence";
  private static final String hN = "geofence_id";
  private static final String hO = ";";
  private static final String hQ = "status_code";
  private static ar hR;
  private static final int hT = 5;
  private static final int hU = 2;
  private static final int hV = 1;
  private static final String hX = "geofence_ids";
  private Context hI;
  private Object hP = new Object();
  private HandlerThread hS;
  private a hW;
  
  ar() {}
  
  private String bN()
  {
    Context localContext1 = this.hI;
    String str = LocationClient.PREF_FILE_NAME;
    Context localContext2 = this.hI;
    return localContext1.getSharedPreferences(str, 0).getString(LocationClient.PREF_KEY_NAME, null);
  }
  
  private void bP()
  {
    this.hS = new HandlerThread("GeofenceMan", 10);
    this.hS.start();
    this.hW = new a(this.hS.getLooper());
  }
  
  /* Error */
  private void bQ()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield 72	com/baidu/location/ar:hI	Landroid/content/Context;
    //   6: invokestatic 120	com/baidu/location/k:a	(Landroid/content/Context;)Lcom/baidu/location/k;
    //   9: invokevirtual 124	com/baidu/location/k:getWritableDatabase	()Landroid/database/sqlite/SQLiteDatabase;
    //   12: astore_3
    //   13: aload_3
    //   14: ifnull +98 -> 112
    //   17: aload_3
    //   18: invokevirtual 129	android/database/sqlite/SQLiteDatabase:beginTransaction	()V
    //   21: invokestatic 135	java/lang/System:currentTimeMillis	()J
    //   24: lstore_1
    //   25: aload_3
    //   26: ldc -119
    //   28: iconst_5
    //   29: anewarray 4	java/lang/Object
    //   32: dup
    //   33: iconst_0
    //   34: ldc -117
    //   36: aastore
    //   37: dup
    //   38: iconst_1
    //   39: ldc -115
    //   41: aastore
    //   42: dup
    //   43: iconst_2
    //   44: ldc -113
    //   46: aastore
    //   47: dup
    //   48: iconst_3
    //   49: ldc -111
    //   51: aastore
    //   52: dup
    //   53: iconst_4
    //   54: lload_1
    //   55: invokestatic 151	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   58: aastore
    //   59: invokestatic 157	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   62: invokevirtual 161	android/database/sqlite/SQLiteDatabase:execSQL	(Ljava/lang/String;)V
    //   65: aload_3
    //   66: ldc -93
    //   68: iconst_4
    //   69: anewarray 4	java/lang/Object
    //   72: dup
    //   73: iconst_0
    //   74: ldc -115
    //   76: aastore
    //   77: dup
    //   78: iconst_1
    //   79: ldc -113
    //   81: aastore
    //   82: dup
    //   83: iconst_2
    //   84: ldc -111
    //   86: aastore
    //   87: dup
    //   88: iconst_3
    //   89: lload_1
    //   90: invokestatic 151	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   93: aastore
    //   94: invokestatic 157	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   97: invokevirtual 161	android/database/sqlite/SQLiteDatabase:execSQL	(Ljava/lang/String;)V
    //   100: aload_3
    //   101: invokevirtual 166	android/database/sqlite/SQLiteDatabase:setTransactionSuccessful	()V
    //   104: aload_3
    //   105: invokevirtual 169	android/database/sqlite/SQLiteDatabase:endTransaction	()V
    //   108: aload_3
    //   109: invokevirtual 172	android/database/sqlite/SQLiteDatabase:close	()V
    //   112: aload_0
    //   113: monitorexit
    //   114: return
    //   115: astore 4
    //   117: aload_3
    //   118: invokevirtual 169	android/database/sqlite/SQLiteDatabase:endTransaction	()V
    //   121: aload_3
    //   122: invokevirtual 172	android/database/sqlite/SQLiteDatabase:close	()V
    //   125: goto -13 -> 112
    //   128: astore_3
    //   129: aload_0
    //   130: monitorexit
    //   131: aload_3
    //   132: athrow
    //   133: astore 4
    //   135: aload_3
    //   136: invokevirtual 169	android/database/sqlite/SQLiteDatabase:endTransaction	()V
    //   139: aload_3
    //   140: invokevirtual 172	android/database/sqlite/SQLiteDatabase:close	()V
    //   143: aload 4
    //   145: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	146	0	this	ar
    //   24	66	1	l	long
    //   12	110	3	localSQLiteDatabase	SQLiteDatabase
    //   128	12	3	localObject1	Object
    //   115	1	4	localException	Exception
    //   133	11	4	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   21	104	115	java/lang/Exception
    //   2	13	128	finally
    //   17	21	128	finally
    //   104	112	128	finally
    //   117	125	128	finally
    //   135	146	128	finally
    //   21	104	133	finally
  }
  
  private void bR()
  {
    this.hW.sendEmptyMessage(3);
  }
  
  private final void bS()
  {
    if (!q.jdMethod_if(this.hI)) {
      throw new IllegalStateException("Not net connection");
    }
  }
  
  /* Error */
  private long bT()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: lconst_0
    //   3: lstore_3
    //   4: lload_3
    //   5: lstore_1
    //   6: aload_0
    //   7: getfield 72	com/baidu/location/ar:hI	Landroid/content/Context;
    //   10: invokestatic 120	com/baidu/location/k:a	(Landroid/content/Context;)Lcom/baidu/location/k;
    //   13: invokevirtual 194	com/baidu/location/k:getReadableDatabase	()Landroid/database/sqlite/SQLiteDatabase;
    //   16: astore 5
    //   18: lload_3
    //   19: lstore_1
    //   20: aload 5
    //   22: ifnull +22 -> 44
    //   25: lload_3
    //   26: lstore_1
    //   27: aload 5
    //   29: ldc -115
    //   31: invokestatic 200	android/database/DatabaseUtils:queryNumEntries	(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)J
    //   34: lstore_3
    //   35: lload_3
    //   36: lstore_1
    //   37: aload 5
    //   39: invokevirtual 172	android/database/sqlite/SQLiteDatabase:close	()V
    //   42: lload_3
    //   43: lstore_1
    //   44: aload_0
    //   45: monitorexit
    //   46: lload_1
    //   47: lreturn
    //   48: astore 5
    //   50: aload_0
    //   51: monitorexit
    //   52: aload 5
    //   54: athrow
    //   55: astore 5
    //   57: goto -13 -> 44
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	60	0	this	ar
    //   5	42	1	l1	long
    //   3	40	3	l2	long
    //   16	22	5	localSQLiteDatabase	SQLiteDatabase
    //   48	5	5	localObject	Object
    //   55	1	5	localException	Exception
    // Exception table:
    //   from	to	target	type
    //   6	18	48	finally
    //   27	35	48	finally
    //   37	42	48	finally
    //   6	18	55	java/lang/Exception
    //   27	35	55	java/lang/Exception
    //   37	42	55	java/lang/Exception
  }
  
  public static int jdMethod_do(Context paramContext)
  {
    paramContext = ((TelephonyManager)paramContext.getSystemService("phone")).getSubscriberId();
    if (paramContext != null)
    {
      if ((paramContext.startsWith("46000")) || (paramContext.startsWith("46002")) || (paramContext.startsWith("46007"))) {
        return 1;
      }
      if (paramContext.startsWith("46001")) {
        return 2;
      }
      if (paramContext.startsWith("46003")) {
        return 3;
      }
    }
    return 5;
  }
  
  private int jdMethod_do(List paramList)
  {
    for (;;)
    {
      try
      {
        SQLiteDatabase localSQLiteDatabase = k.a(this.hI).getWritableDatabase();
        if (localSQLiteDatabase != null)
        {
          localSQLiteDatabase.beginTransaction();
          try
          {
            paramList = paramList.iterator();
            if (paramList.hasNext())
            {
              String str = (String)paramList.next();
              String[] arrayOfString = new String[1];
              arrayOfString[0] = str;
              localSQLiteDatabase.delete("geofence", String.format("%s=?", new Object[] { "geofence_id" }), arrayOfString);
              localSQLiteDatabase.delete("geofence_detail", String.format("%s=?", new Object[] { "geofence_id" }), arrayOfString);
              continue;
            }
            paramList = finally;
          }
          catch (Exception paramList)
          {
            localSQLiteDatabase.endTransaction();
            i = 1;
            localSQLiteDatabase.close();
            return i;
            localSQLiteDatabase.setTransactionSuccessful();
            localSQLiteDatabase.endTransaction();
            i = 0;
            continue;
          }
          finally
          {
            localSQLiteDatabase.endTransaction();
          }
        }
        int i = 0;
      }
      finally {}
    }
  }
  
  public static ar jdMethod_for(Context paramContext)
  {
    if (hR == null)
    {
      hR = new ar();
      hR.bP();
      hR.hI = paramContext;
    }
    return hR;
  }
  
  private int jdMethod_if(an paramAn, String paramString)
  {
    int i = 0;
    int j = 0;
    for (;;)
    {
      SQLiteDatabase localSQLiteDatabase;
      try
      {
        localSQLiteDatabase = k.a(this.hI).getWritableDatabase();
        long l;
        if (localSQLiteDatabase != null)
        {
          localSQLiteDatabase.beginTransaction();
          l = System.currentTimeMillis();
        }
        try
        {
          Object localObject = new ContentValues();
          String str = paramAn.getGeofenceId();
          ((ContentValues)localObject).put("geofence_id", str);
          ((ContentValues)localObject).put("longitude", Double.valueOf(paramAn.a()));
          ((ContentValues)localObject).put("latitude", Double.valueOf(paramAn.jdMethod_byte()));
          ((ContentValues)localObject).put("radius", Float.valueOf(paramAn.jdMethod_do()));
          ((ContentValues)localObject).put("radius_type", Integer.valueOf(paramAn.jdMethod_new()));
          ((ContentValues)localObject).put("valid_date", Long.valueOf(l));
          ((ContentValues)localObject).put("duration_millis", Long.valueOf(paramAn.jdMethod_else()));
          ((ContentValues)localObject).put("coord_type", paramAn.jdMethod_int());
          if (!paramAn.jdMethod_try()) {
            break label393;
          }
          i = 1;
          ((ContentValues)localObject).put("is_lac", Integer.valueOf(i));
          if (!paramAn.jdMethod_if()) {
            break label398;
          }
          i = 1;
          ((ContentValues)localObject).put("is_cell", Integer.valueOf(i));
          if (!paramAn.jdMethod_for()) {
            break label403;
          }
          i = 1;
          ((ContentValues)localObject).put("is_wifi", Integer.valueOf(i));
          ((ContentValues)localObject).put("next_active_time", Integer.valueOf(0));
          localSQLiteDatabase.insert("geofence", null, (ContentValues)localObject);
          localObject = paramString.split(";");
          int k = localObject.length;
          i = 0;
          if (i < k)
          {
            paramString = localObject[i];
            ContentValues localContentValues = new ContentValues();
            localContentValues.put("geofence_id", str);
            localContentValues.put("ap_backup", paramString);
            int m = paramString.lastIndexOf("|");
            paramAn = paramString;
            if (m != -1) {
              paramAn = paramString.substring(0, m);
            }
            localContentValues.put("ap", paramAn);
            localSQLiteDatabase.insert("geofence_detail", null, localContentValues);
            i += 1;
            continue;
          }
          localSQLiteDatabase.setTransactionSuccessful();
          localSQLiteDatabase.endTransaction();
          i = j;
        }
        catch (Exception paramAn)
        {
          localSQLiteDatabase.endTransaction();
          i = 1;
          continue;
        }
        finally
        {
          localSQLiteDatabase.endTransaction();
        }
        localSQLiteDatabase.close();
        return i;
      }
      finally {}
      label393:
      i = 0;
      continue;
      label398:
      i = 0;
      continue;
      label403:
      i = 0;
    }
  }
  
  private void jdMethod_if(int paramInt, String paramString, GeofenceClient.OnAddBDGeofencesResultListener paramOnAddBDGeofencesResultListener)
  {
    if (paramInt == 1) {}
    paramOnAddBDGeofencesResultListener.onAddBDGeofencesResult(paramInt, paramString);
  }
  
  private void jdMethod_if(int paramInt, String[] paramArrayOfString, GeofenceClient.OnRemoveBDGeofencesResultListener paramOnRemoveBDGeofencesResultListener)
  {
    paramOnRemoveBDGeofencesResultListener.onRemoveBDGeofencesByRequestIdsResult(paramInt, paramArrayOfString);
  }
  
  private void jdMethod_if(GeofenceClient.OnAddBDGeofencesResultListener paramOnAddBDGeofencesResultListener, int paramInt, String paramString)
  {
    Message localMessage = Message.obtain(this.hW);
    localMessage.what = 0;
    localMessage.obj = paramOnAddBDGeofencesResultListener;
    paramOnAddBDGeofencesResultListener = new Bundle();
    paramOnAddBDGeofencesResultListener.putInt("status_code", paramInt);
    paramOnAddBDGeofencesResultListener.putString("geofence_id", paramString);
    localMessage.setData(paramOnAddBDGeofencesResultListener);
    this.hW.sendMessage(localMessage);
  }
  
  public static void jdMethod_int(Context paramContext)
  {
    ax.cf().jdMethod_byte(f.getServiceContext());
  }
  
  public void bO()
  {
    synchronized (this.hP)
    {
      this.hW.post(new ar.2(this));
      return;
    }
  }
  
  public void jdMethod_if(an paramAn)
  {
    this.hW.post(new ar.1(this, paramAn));
  }
  
  public void jdMethod_if(an paramAn, GeofenceClient.OnAddBDGeofencesResultListener paramOnAddBDGeofencesResultListener)
  {
    bS();
    ak.a(paramOnAddBDGeofencesResultListener, "OnAddBDGeofenceRecesResultListener not provided.");
    if (bT() >= 10L)
    {
      paramOnAddBDGeofencesResultListener.onAddBDGeofencesResult(1001, paramAn.getGeofenceId());
      return;
    }
    new b(paramAn, paramOnAddBDGeofencesResultListener).V();
    bR();
  }
  
  public void jdMethod_if(List paramList, GeofenceClient.OnRemoveBDGeofencesResultListener paramOnRemoveBDGeofencesResultListener)
  {
    if ((paramList != null) && (paramList.size() > 0)) {}
    for (boolean bool = true;; bool = false)
    {
      ak.jdMethod_if(bool, "geofenceRequestIds can't be null nor empty.");
      ak.a(paramOnRemoveBDGeofencesResultListener, "onRemoveBDGeofencesResultListener not provided.");
      this.hW.post(new d(paramList, paramOnRemoveBDGeofencesResultListener));
      return;
    }
  }
  
  /* Error */
  public void p(String paramString)
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_1
    //   3: invokestatic 503	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   6: istore_2
    //   7: iload_2
    //   8: ifeq +6 -> 14
    //   11: aload_0
    //   12: monitorexit
    //   13: return
    //   14: aload_0
    //   15: getfield 72	com/baidu/location/ar:hI	Landroid/content/Context;
    //   18: invokestatic 120	com/baidu/location/k:a	(Landroid/content/Context;)Lcom/baidu/location/k;
    //   21: invokevirtual 124	com/baidu/location/k:getWritableDatabase	()Landroid/database/sqlite/SQLiteDatabase;
    //   24: astore_3
    //   25: aload_3
    //   26: ifnull -15 -> 11
    //   29: new 264	android/content/ContentValues
    //   32: dup
    //   33: invokespecial 265	android/content/ContentValues:<init>	()V
    //   36: astore 4
    //   38: aload 4
    //   40: ldc_w 345
    //   43: invokestatic 135	java/lang/System:currentTimeMillis	()J
    //   46: ldc2_w 504
    //   49: ladd
    //   50: invokestatic 151	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   53: invokevirtual 322	android/content/ContentValues:put	(Ljava/lang/String;Ljava/lang/Long;)V
    //   56: aload_3
    //   57: ldc -115
    //   59: aload 4
    //   61: ldc_w 507
    //   64: iconst_1
    //   65: anewarray 153	java/lang/String
    //   68: dup
    //   69: iconst_0
    //   70: aload_1
    //   71: aastore
    //   72: invokevirtual 511	android/database/sqlite/SQLiteDatabase:update	(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
    //   75: pop
    //   76: aload_3
    //   77: invokevirtual 172	android/database/sqlite/SQLiteDatabase:close	()V
    //   80: goto -69 -> 11
    //   83: astore_1
    //   84: aload_0
    //   85: monitorexit
    //   86: aload_1
    //   87: athrow
    //   88: astore_1
    //   89: aload_3
    //   90: invokevirtual 172	android/database/sqlite/SQLiteDatabase:close	()V
    //   93: goto -82 -> 11
    //   96: astore_1
    //   97: aload_3
    //   98: invokevirtual 172	android/database/sqlite/SQLiteDatabase:close	()V
    //   101: aload_1
    //   102: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	103	0	this	ar
    //   0	103	1	paramString	String
    //   6	2	2	bool	boolean
    //   24	74	3	localSQLiteDatabase	SQLiteDatabase
    //   36	24	4	localContentValues	ContentValues
    // Exception table:
    //   from	to	target	type
    //   2	7	83	finally
    //   14	25	83	finally
    //   76	80	83	finally
    //   89	93	83	finally
    //   97	103	83	finally
    //   29	76	88	java/lang/Exception
    //   29	76	96	finally
  }
  
  private class a
    extends Handler
  {
    public static final int jdField_do = 2;
    public static final int jdField_for = 3;
    public static final int jdField_if = 0;
    
    public a(Looper paramLooper)
    {
      super();
    }
    
    public void handleMessage(Message paramMessage)
    {
      super.handleMessage(paramMessage);
      int i = paramMessage.what;
      Object localObject = paramMessage.getData();
      switch (i)
      {
      case 1: 
      default: 
        return;
      case 0: 
        if (localObject != null) {
          i = ((Bundle)localObject).getInt("status_code", 1);
        }
        break;
      }
      for (localObject = ((Bundle)localObject).getString("geofence_id");; localObject = null)
      {
        paramMessage = (GeofenceClient.OnAddBDGeofencesResultListener)paramMessage.obj;
        ar.jdMethod_if(ar.this, i, (String)localObject, paramMessage);
        return;
        if (localObject != null) {
          i = ((Bundle)localObject).getInt("status_code", 1);
        }
        for (localObject = ((Bundle)localObject).getStringArray("geofence_ids");; localObject = null)
        {
          paramMessage = (GeofenceClient.OnRemoveBDGeofencesResultListener)paramMessage.obj;
          ar.jdMethod_if(ar.this, i, (String[])localObject, paramMessage);
          return;
          ar.this.bO();
          return;
          i = 1;
        }
        i = 1;
      }
    }
  }
  
  class b
    extends q
  {
    private static final String dA = "lac";
    private static final String dC = "wf";
    private static final String dE = "radius";
    private static final String dv = "error";
    private static final int dw = -3;
    private static final String dx = "ext";
    private static final String dy = "cl";
    private static final String dz = "fence";
    private int dD;
    private final an dF;
    private GeofenceClient.OnAddBDGeofencesResultListener du;
    
    public b(an paramAn, GeofenceClient.OnAddBDGeofencesResultListener paramOnAddBDGeofencesResultListener)
    {
      this.dF = paramAn;
      this.du = paramOnAddBDGeofencesResultListener;
      this.cP = new ArrayList();
    }
    
    public void O()
    {
      this.cN = "http://loc.map.baidu.com/fence";
      Object localObject = new DecimalFormat("0.00000");
      localObject = Jni.h(String.format("&x=%s&y=%s&r=%s&coord=%s&type=%s&cu=%s", new Object[] { ((DecimalFormat)localObject).format(this.dF.a()), ((DecimalFormat)localObject).format(this.dF.jdMethod_byte()), String.valueOf(this.dF.jdMethod_new()), String.valueOf(this.dF.jdMethod_int()), Integer.valueOf(ar.jdMethod_do(ar.jdMethod_if(ar.this))), a.jdMethod_if(ar.jdMethod_if(ar.this)) }));
      this.cP.add(new BasicNameValuePair("fence", (String)localObject));
      this.cP.add(new BasicNameValuePair("ext", Jni.h(String.format("&ki=%s&sn=%s", new Object[] { ar.jdMethod_do(ar.this), t.jdMethod_if(ar.jdMethod_if(ar.this)) }))));
    }
    
    public void V()
    {
      J();
    }
    
    public void jdMethod_do(boolean paramBoolean)
    {
      if ((paramBoolean) && (this.cO != null))
      {
        Object localObject = null;
        try
        {
          JSONObject localJSONObject = new JSONObject(EntityUtils.toString(this.cO, "UTF-8"));
          if (localJSONObject != null)
          {
            localObject = new StringBuilder();
            if (localJSONObject.has("lac"))
            {
              str = localJSONObject.getString("lac");
              if (!TextUtils.isEmpty(str))
              {
                ((StringBuilder)localObject).append(str);
                this.dF.jdMethod_do(true);
              }
            }
            if (localJSONObject.has("cl"))
            {
              str = localJSONObject.getString("cl");
              if (!TextUtils.isEmpty(str))
              {
                ((StringBuilder)localObject).append(str);
                this.dF.a(true);
              }
            }
            if (localJSONObject.has("wf"))
            {
              str = localJSONObject.getString("wf");
              if (!TextUtils.isEmpty(str))
              {
                ((StringBuilder)localObject).append(str);
                this.dF.jdMethod_if(true);
              }
            }
            String str = ((StringBuilder)localObject).toString();
            if (localJSONObject.has("radius"))
            {
              float f = Float.valueOf(localJSONObject.getString("radius")).floatValue();
              this.dF.a(f);
            }
            localObject = str;
            if (localJSONObject.has("error"))
            {
              this.dD = Integer.valueOf(localJSONObject.getString("error")).intValue();
              localObject = str;
            }
          }
          if (!TextUtils.isEmpty((CharSequence)localObject)) {
            break label320;
          }
          if (this.dD == -3)
          {
            ar.jdMethod_if(ar.this, this.du, 1002, this.dF.getGeofenceId());
            return;
          }
        }
        catch (Exception localException)
        {
          ar.jdMethod_if(ar.this, this.du, 1, this.dF.getGeofenceId());
          return;
        }
        ar.jdMethod_if(ar.this, this.du, 1, this.dF.getGeofenceId());
        return;
        label320:
        ar.jdMethod_for(ar.this).post(new ar.c(ar.this, this.dF, localException, this.du));
        return;
      }
      ar.jdMethod_if(ar.this, this.du, 1, this.dF.getGeofenceId());
    }
  }
  
  private class c
    implements Runnable
  {
    private final an jdField_do;
    private final GeofenceClient.OnAddBDGeofencesResultListener jdField_for;
    private final String jdField_if;
    
    public c(an paramAn, String paramString, GeofenceClient.OnAddBDGeofencesResultListener paramOnAddBDGeofencesResultListener)
    {
      this.jdField_do = paramAn;
      this.jdField_if = paramString;
      this.jdField_for = paramOnAddBDGeofencesResultListener;
    }
    
    public void run()
    {
      int i = ar.jdMethod_if(ar.this, this.jdField_do, this.jdField_if);
      ar.jdMethod_if(ar.this, this.jdField_for, i, this.jdField_do.getGeofenceId());
    }
  }
  
  private class d
    implements Runnable
  {
    private final GeofenceClient.OnRemoveBDGeofencesResultListener jdField_do;
    private final List jdField_if;
    
    public d(List paramList, GeofenceClient.OnRemoveBDGeofencesResultListener paramOnRemoveBDGeofencesResultListener)
    {
      this.jdField_if = paramList;
      this.jdField_do = paramOnRemoveBDGeofencesResultListener;
    }
    
    public void run()
    {
      int i = ar.jdMethod_if(ar.this, this.jdField_if);
      Message localMessage = Message.obtain(ar.jdMethod_for(ar.this));
      localMessage.what = 2;
      localMessage.obj = this.jdField_do;
      Bundle localBundle = new Bundle();
      localBundle.putInt("status_code", i);
      localBundle.putStringArray("geofence_ids", (String[])this.jdField_if.toArray(new String[this.jdField_if.size()]));
      localMessage.setData(localBundle);
      ar.jdMethod_for(ar.this).sendMessage(localMessage);
    }
  }
}
