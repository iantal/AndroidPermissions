package net.tsz.afinal.bitmap.download;

import android.util.Log;
import java.io.File;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.net.URISyntaxException;

public class SimpleDownloader
  implements Downloader
{
  private static final int IO_BUFFER_SIZE = 8192;
  private static final String TAG = SimpleDownloader.class.getSimpleName();
  
  public SimpleDownloader() {}
  
  /* Error */
  private byte[] getFromFile(File paramFile)
  {
    // Byte code:
    //   0: aload_1
    //   1: ifnonnull +5 -> 6
    //   4: aconst_null
    //   5: areturn
    //   6: aconst_null
    //   7: astore_3
    //   8: aconst_null
    //   9: astore 6
    //   11: new 36	java/io/FileInputStream
    //   14: dup
    //   15: aload_1
    //   16: invokespecial 39	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   19: astore 4
    //   21: new 41	java/io/ByteArrayOutputStream
    //   24: dup
    //   25: invokespecial 42	java/io/ByteArrayOutputStream:<init>	()V
    //   28: astore_3
    //   29: sipush 1024
    //   32: newarray byte
    //   34: astore 5
    //   36: aload 4
    //   38: aload 5
    //   40: invokevirtual 46	java/io/FileInputStream:read	([B)I
    //   43: istore_2
    //   44: iload_2
    //   45: iconst_m1
    //   46: if_icmpne +20 -> 66
    //   49: aload_3
    //   50: invokevirtual 50	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   53: astore_3
    //   54: aload 4
    //   56: ifnull +108 -> 164
    //   59: aload 4
    //   61: invokevirtual 53	java/io/FileInputStream:close	()V
    //   64: aload_3
    //   65: areturn
    //   66: aload_3
    //   67: aload 5
    //   69: iconst_0
    //   70: iload_2
    //   71: invokevirtual 57	java/io/ByteArrayOutputStream:write	([BII)V
    //   74: goto -38 -> 36
    //   77: astore 5
    //   79: aload 4
    //   81: astore_3
    //   82: getstatic 24	net/tsz/afinal/bitmap/download/SimpleDownloader:TAG	Ljava/lang/String;
    //   85: new 59	java/lang/StringBuilder
    //   88: dup
    //   89: ldc 61
    //   91: invokespecial 64	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   94: aload_1
    //   95: invokevirtual 68	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   98: ldc 70
    //   100: invokevirtual 73	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   103: aload 5
    //   105: invokevirtual 68	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   108: invokevirtual 76	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   111: invokestatic 82	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;)I
    //   114: pop
    //   115: aload 4
    //   117: ifnull -113 -> 4
    //   120: aload 4
    //   122: invokevirtual 53	java/io/FileInputStream:close	()V
    //   125: aconst_null
    //   126: areturn
    //   127: astore_1
    //   128: aload_3
    //   129: areturn
    //   130: astore_1
    //   131: aload_3
    //   132: ifnull +7 -> 139
    //   135: aload_3
    //   136: invokevirtual 53	java/io/FileInputStream:close	()V
    //   139: aload_1
    //   140: athrow
    //   141: astore_1
    //   142: aconst_null
    //   143: areturn
    //   144: astore_3
    //   145: goto -6 -> 139
    //   148: astore_1
    //   149: aload 4
    //   151: astore_3
    //   152: goto -21 -> 131
    //   155: astore 5
    //   157: aload 6
    //   159: astore 4
    //   161: goto -82 -> 79
    //   164: aload_3
    //   165: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	166	0	this	SimpleDownloader
    //   0	166	1	paramFile	File
    //   43	28	2	i	int
    //   7	129	3	localObject1	Object
    //   144	1	3	localIOException	IOException
    //   151	14	3	localObject2	Object
    //   19	141	4	localObject3	Object
    //   34	34	5	arrayOfByte	byte[]
    //   77	27	5	localException1	Exception
    //   155	1	5	localException2	Exception
    //   9	149	6	localObject4	Object
    // Exception table:
    //   from	to	target	type
    //   21	36	77	java/lang/Exception
    //   36	44	77	java/lang/Exception
    //   49	54	77	java/lang/Exception
    //   66	74	77	java/lang/Exception
    //   59	64	127	java/io/IOException
    //   11	21	130	finally
    //   82	115	130	finally
    //   120	125	141	java/io/IOException
    //   135	139	144	java/io/IOException
    //   21	36	148	finally
    //   36	44	148	finally
    //   49	54	148	finally
    //   66	74	148	finally
    //   11	21	155	java/lang/Exception
  }
  
  /* Error */
  private byte[] getFromHttp(String paramString)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 6
    //   3: aconst_null
    //   4: astore 4
    //   6: aconst_null
    //   7: astore 7
    //   9: aconst_null
    //   10: astore 8
    //   12: aload 7
    //   14: astore 5
    //   16: new 86	java/net/URL
    //   19: dup
    //   20: aload_1
    //   21: invokespecial 87	java/net/URL:<init>	(Ljava/lang/String;)V
    //   24: invokevirtual 91	java/net/URL:openConnection	()Ljava/net/URLConnection;
    //   27: checkcast 93	java/net/HttpURLConnection
    //   30: astore_3
    //   31: aload 7
    //   33: astore 5
    //   35: aload_3
    //   36: astore 4
    //   38: aload_3
    //   39: astore 6
    //   41: new 8	net/tsz/afinal/bitmap/download/SimpleDownloader$FlushedInputStream
    //   44: dup
    //   45: aload_0
    //   46: new 95	java/io/BufferedInputStream
    //   49: dup
    //   50: aload_3
    //   51: invokevirtual 99	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
    //   54: sipush 8192
    //   57: invokespecial 102	java/io/BufferedInputStream:<init>	(Ljava/io/InputStream;I)V
    //   60: invokespecial 105	net/tsz/afinal/bitmap/download/SimpleDownloader$FlushedInputStream:<init>	(Lnet/tsz/afinal/bitmap/download/SimpleDownloader;Ljava/io/InputStream;)V
    //   63: astore 7
    //   65: new 41	java/io/ByteArrayOutputStream
    //   68: dup
    //   69: invokespecial 42	java/io/ByteArrayOutputStream:<init>	()V
    //   72: astore 4
    //   74: aload 7
    //   76: invokevirtual 108	net/tsz/afinal/bitmap/download/SimpleDownloader$FlushedInputStream:read	()I
    //   79: istore_2
    //   80: iload_2
    //   81: iconst_m1
    //   82: if_icmpne +43 -> 125
    //   85: aload 4
    //   87: invokevirtual 50	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   90: astore 4
    //   92: aload_3
    //   93: ifnull +7 -> 100
    //   96: aload_3
    //   97: invokevirtual 111	java/net/HttpURLConnection:disconnect	()V
    //   100: iconst_0
    //   101: ifeq +11 -> 112
    //   104: new 113	java/lang/NullPointerException
    //   107: dup
    //   108: invokespecial 114	java/lang/NullPointerException:<init>	()V
    //   111: athrow
    //   112: aload 7
    //   114: ifnull +8 -> 122
    //   117: aload 7
    //   119: invokevirtual 115	net/tsz/afinal/bitmap/download/SimpleDownloader$FlushedInputStream:close	()V
    //   122: aload 4
    //   124: areturn
    //   125: aload 4
    //   127: iload_2
    //   128: invokevirtual 118	java/io/ByteArrayOutputStream:write	(I)V
    //   131: goto -57 -> 74
    //   134: astore 4
    //   136: aload_3
    //   137: astore 6
    //   139: aload 7
    //   141: astore_3
    //   142: aload 4
    //   144: astore 7
    //   146: aload_3
    //   147: astore 5
    //   149: aload 6
    //   151: astore 4
    //   153: getstatic 24	net/tsz/afinal/bitmap/download/SimpleDownloader:TAG	Ljava/lang/String;
    //   156: new 59	java/lang/StringBuilder
    //   159: dup
    //   160: ldc 120
    //   162: invokespecial 64	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   165: aload_1
    //   166: invokevirtual 73	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   169: ldc 70
    //   171: invokevirtual 73	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   174: aload 7
    //   176: invokevirtual 68	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   179: invokevirtual 76	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   182: invokestatic 82	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;)I
    //   185: pop
    //   186: aload 6
    //   188: ifnull +8 -> 196
    //   191: aload 6
    //   193: invokevirtual 111	java/net/HttpURLConnection:disconnect	()V
    //   196: iconst_0
    //   197: ifeq +11 -> 208
    //   200: new 113	java/lang/NullPointerException
    //   203: dup
    //   204: invokespecial 114	java/lang/NullPointerException:<init>	()V
    //   207: athrow
    //   208: aload_3
    //   209: ifnull +7 -> 216
    //   212: aload_3
    //   213: invokevirtual 115	net/tsz/afinal/bitmap/download/SimpleDownloader$FlushedInputStream:close	()V
    //   216: aconst_null
    //   217: areturn
    //   218: astore_1
    //   219: aload 4
    //   221: astore_3
    //   222: aload_3
    //   223: ifnull +7 -> 230
    //   226: aload_3
    //   227: invokevirtual 111	java/net/HttpURLConnection:disconnect	()V
    //   230: iconst_0
    //   231: ifeq +11 -> 242
    //   234: new 113	java/lang/NullPointerException
    //   237: dup
    //   238: invokespecial 114	java/lang/NullPointerException:<init>	()V
    //   241: athrow
    //   242: aload 5
    //   244: ifnull +8 -> 252
    //   247: aload 5
    //   249: invokevirtual 115	net/tsz/afinal/bitmap/download/SimpleDownloader$FlushedInputStream:close	()V
    //   252: aload_1
    //   253: athrow
    //   254: astore_3
    //   255: goto -3 -> 252
    //   258: astore_1
    //   259: aload 7
    //   261: astore 5
    //   263: goto -41 -> 222
    //   266: astore_1
    //   267: goto -51 -> 216
    //   270: astore 7
    //   272: aload 8
    //   274: astore_3
    //   275: goto -129 -> 146
    //   278: astore_1
    //   279: goto -157 -> 122
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	282	0	this	SimpleDownloader
    //   0	282	1	paramString	String
    //   79	49	2	i	int
    //   30	197	3	localObject1	Object
    //   254	1	3	localIOException1	IOException
    //   274	1	3	localObject2	Object
    //   4	122	4	localObject3	Object
    //   134	9	4	localIOException2	IOException
    //   151	69	4	localObject4	Object
    //   14	248	5	localObject5	Object
    //   1	191	6	localObject6	Object
    //   7	253	7	localObject7	Object
    //   270	1	7	localIOException3	IOException
    //   10	263	8	localObject8	Object
    // Exception table:
    //   from	to	target	type
    //   65	74	134	java/io/IOException
    //   74	80	134	java/io/IOException
    //   85	92	134	java/io/IOException
    //   125	131	134	java/io/IOException
    //   16	31	218	finally
    //   41	65	218	finally
    //   153	186	218	finally
    //   234	242	254	java/io/IOException
    //   247	252	254	java/io/IOException
    //   65	74	258	finally
    //   74	80	258	finally
    //   85	92	258	finally
    //   125	131	258	finally
    //   200	208	266	java/io/IOException
    //   212	216	266	java/io/IOException
    //   16	31	270	java/io/IOException
    //   41	65	270	java/io/IOException
    //   104	112	278	java/io/IOException
    //   117	122	278	java/io/IOException
  }
  
  public byte[] download(String paramString)
  {
    if (paramString == null) {}
    do
    {
      for (;;)
      {
        return null;
        if (paramString.trim().toLowerCase().startsWith("http")) {
          return getFromHttp(paramString);
        }
        if (paramString.trim().toLowerCase().startsWith("file:")) {
          try
          {
            Object localObject = new File(new URI(paramString));
            if ((((File)localObject).exists()) && (((File)localObject).canRead()))
            {
              localObject = getFromFile((File)localObject);
              return localObject;
            }
          }
          catch (URISyntaxException localURISyntaxException)
          {
            Log.e(TAG, "Error in read from file - " + paramString + " : " + localURISyntaxException);
            return null;
          }
        }
      }
      paramString = new File(paramString);
    } while ((!paramString.exists()) || (!paramString.canRead()));
    return getFromFile(paramString);
  }
  
  public class FlushedInputStream
    extends FilterInputStream
  {
    public FlushedInputStream(InputStream paramInputStream)
    {
      super();
    }
    
    public long skip(long paramLong)
      throws IOException
    {
      long l2;
      for (long l1 = 0L;; l1 += l2)
      {
        if (l1 >= paramLong) {}
        do
        {
          return l1;
          long l3 = this.in.skip(paramLong - l1);
          l2 = l3;
          if (l3 != 0L) {
            break;
          }
        } while (read() < 0);
        l2 = 1L;
      }
    }
  }
}
