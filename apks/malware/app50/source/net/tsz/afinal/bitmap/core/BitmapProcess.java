package net.tsz.afinal.bitmap.core;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import net.tsz.afinal.bitmap.download.Downloader;

public class BitmapProcess
{
  private static final int BYTESBUFFER_SIZE = 204800;
  private static final int BYTESBUFFE_POOL_SIZE = 4;
  private static final BytesBufferPool sMicroThumbBufferPool = new BytesBufferPool(4, 204800);
  private BitmapCache mCache;
  private Downloader mDownloader;
  
  public BitmapProcess(Downloader paramDownloader, BitmapCache paramBitmapCache)
  {
    this.mDownloader = paramDownloader;
    this.mCache = paramBitmapCache;
  }
  
  public Bitmap getBitmap(String paramString, BitmapDisplayConfig paramBitmapDisplayConfig)
  {
    Bitmap localBitmap2 = getFromDisk(paramString, paramBitmapDisplayConfig);
    Bitmap localBitmap1 = localBitmap2;
    byte[] arrayOfByte;
    if (localBitmap2 == null)
    {
      arrayOfByte = this.mDownloader.download(paramString);
      localBitmap1 = localBitmap2;
      if (arrayOfByte != null)
      {
        localBitmap1 = localBitmap2;
        if (arrayOfByte.length > 0)
        {
          if (paramBitmapDisplayConfig == null) {
            break label79;
          }
          localBitmap1 = BitmapDecoder.decodeSampledBitmapFromByteArray(arrayOfByte, 0, arrayOfByte.length, paramBitmapDisplayConfig.getBitmapWidth(), paramBitmapDisplayConfig.getBitmapHeight());
          this.mCache.addToDiskCache(paramString, arrayOfByte);
        }
      }
    }
    return localBitmap1;
    label79:
    return BitmapFactory.decodeByteArray(arrayOfByte, 0, arrayOfByte.length);
  }
  
  /* Error */
  public Bitmap getFromDisk(String paramString, BitmapDisplayConfig paramBitmapDisplayConfig)
  {
    // Byte code:
    //   0: getstatic 25	net/tsz/afinal/bitmap/core/BitmapProcess:sMicroThumbBufferPool	Lnet/tsz/afinal/bitmap/core/BytesBufferPool;
    //   3: invokevirtual 75	net/tsz/afinal/bitmap/core/BytesBufferPool:get	()Lnet/tsz/afinal/bitmap/core/BytesBufferPool$BytesBuffer;
    //   6: astore 5
    //   8: aconst_null
    //   9: astore 4
    //   11: aload 4
    //   13: astore_3
    //   14: aload_0
    //   15: getfield 33	net/tsz/afinal/bitmap/core/BitmapProcess:mCache	Lnet/tsz/afinal/bitmap/core/BitmapCache;
    //   18: aload_1
    //   19: aload 5
    //   21: invokevirtual 79	net/tsz/afinal/bitmap/core/BitmapCache:getImageData	(Ljava/lang/String;Lnet/tsz/afinal/bitmap/core/BytesBufferPool$BytesBuffer;)Z
    //   24: ifeq +51 -> 75
    //   27: aload 4
    //   29: astore_3
    //   30: aload 5
    //   32: getfield 84	net/tsz/afinal/bitmap/core/BytesBufferPool$BytesBuffer:length	I
    //   35: aload 5
    //   37: getfield 87	net/tsz/afinal/bitmap/core/BytesBufferPool$BytesBuffer:offset	I
    //   40: isub
    //   41: ifle +34 -> 75
    //   44: aload_2
    //   45: ifnull +40 -> 85
    //   48: aload 5
    //   50: getfield 91	net/tsz/afinal/bitmap/core/BytesBufferPool$BytesBuffer:data	[B
    //   53: aload 5
    //   55: getfield 87	net/tsz/afinal/bitmap/core/BytesBufferPool$BytesBuffer:offset	I
    //   58: aload 5
    //   60: getfield 84	net/tsz/afinal/bitmap/core/BytesBufferPool$BytesBuffer:length	I
    //   63: aload_2
    //   64: invokevirtual 50	net/tsz/afinal/bitmap/core/BitmapDisplayConfig:getBitmapWidth	()I
    //   67: aload_2
    //   68: invokevirtual 53	net/tsz/afinal/bitmap/core/BitmapDisplayConfig:getBitmapHeight	()I
    //   71: invokestatic 59	net/tsz/afinal/bitmap/core/BitmapDecoder:decodeSampledBitmapFromByteArray	([BIIII)Landroid/graphics/Bitmap;
    //   74: astore_3
    //   75: getstatic 25	net/tsz/afinal/bitmap/core/BitmapProcess:sMicroThumbBufferPool	Lnet/tsz/afinal/bitmap/core/BytesBufferPool;
    //   78: aload 5
    //   80: invokevirtual 95	net/tsz/afinal/bitmap/core/BytesBufferPool:recycle	(Lnet/tsz/afinal/bitmap/core/BytesBufferPool$BytesBuffer;)V
    //   83: aload_3
    //   84: areturn
    //   85: aload 5
    //   87: getfield 91	net/tsz/afinal/bitmap/core/BytesBufferPool$BytesBuffer:data	[B
    //   90: aload 5
    //   92: getfield 87	net/tsz/afinal/bitmap/core/BytesBufferPool$BytesBuffer:offset	I
    //   95: aload 5
    //   97: getfield 84	net/tsz/afinal/bitmap/core/BytesBufferPool$BytesBuffer:length	I
    //   100: invokestatic 71	android/graphics/BitmapFactory:decodeByteArray	([BII)Landroid/graphics/Bitmap;
    //   103: astore_3
    //   104: goto -29 -> 75
    //   107: astore_1
    //   108: getstatic 25	net/tsz/afinal/bitmap/core/BitmapProcess:sMicroThumbBufferPool	Lnet/tsz/afinal/bitmap/core/BytesBufferPool;
    //   111: aload 5
    //   113: invokevirtual 95	net/tsz/afinal/bitmap/core/BytesBufferPool:recycle	(Lnet/tsz/afinal/bitmap/core/BytesBufferPool$BytesBuffer;)V
    //   116: aload_1
    //   117: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	118	0	this	BitmapProcess
    //   0	118	1	paramString	String
    //   0	118	2	paramBitmapDisplayConfig	BitmapDisplayConfig
    //   13	91	3	localObject1	Object
    //   9	19	4	localObject2	Object
    //   6	106	5	localBytesBuffer	BytesBufferPool.BytesBuffer
    // Exception table:
    //   from	to	target	type
    //   14	27	107	finally
    //   30	44	107	finally
    //   48	75	107	finally
    //   85	104	107	finally
  }
}
