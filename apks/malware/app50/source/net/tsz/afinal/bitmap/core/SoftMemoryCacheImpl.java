package net.tsz.afinal.bitmap.core;

import android.graphics.Bitmap;
import java.lang.ref.SoftReference;
import net.tsz.afinal.utils.Utils;

public class SoftMemoryCacheImpl
  implements IMemoryCache
{
  private final LruMemoryCache<String, SoftReference<Bitmap>> mMemoryCache;
  
  public SoftMemoryCacheImpl(int paramInt)
  {
    this.mMemoryCache = new LruMemoryCache(paramInt)
    {
      protected int sizeOf(String paramAnonymousString, SoftReference<Bitmap> paramAnonymousSoftReference)
      {
        if (paramAnonymousSoftReference == null) {}
        for (paramAnonymousString = null; paramAnonymousString == null; paramAnonymousString = (Bitmap)paramAnonymousSoftReference.get()) {
          return 1;
        }
        return Utils.getBitmapSize(paramAnonymousString);
      }
    };
  }
  
  public void evictAll()
  {
    this.mMemoryCache.evictAll();
  }
  
  public Bitmap get(String paramString)
  {
    paramString = (SoftReference)this.mMemoryCache.get(paramString);
    if (paramString != null) {
      return (Bitmap)paramString.get();
    }
    return null;
  }
  
  public void put(String paramString, Bitmap paramBitmap)
  {
    this.mMemoryCache.put(paramString, new SoftReference(paramBitmap));
  }
  
  public void remove(String paramString)
  {
    this.mMemoryCache.remove(paramString);
  }
}
