package xcs.ff;

import android.content.ContentResolver;
import android.content.Context;
import android.database.Cursor;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Uri;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import android.util.Log;

public class W
{
  public static final String C = "tqkjyxgs";
  public static final String CMNET = "cmnet";
  public static final String CMWAP = "cmwap";
  public static final String CTNET = "ctnet";
  public static final String CTWAP = "ctwap";
  public static final String NET_3G = "3gnet";
  public static Uri PREFERRED_APN_URI = Uri.parse("content://telephony/carriers/preferapn");
  public static final int TYPE_CM_NET = 10;
  public static final int TYPE_CM_NET_2G = 12;
  public static final int TYPE_CM_WAP = 9;
  public static final int TYPE_CM_WAP_2G = 11;
  public static final int TYPE_CT_NET = 6;
  public static final int TYPE_CT_NET_2G = 8;
  public static final int TYPE_CT_WAP = 5;
  public static final int TYPE_CT_WAP_2G = 7;
  public static final int TYPE_CU_NET = 14;
  public static final int TYPE_CU_NET_2G = 16;
  public static final int TYPE_CU_WAP = 13;
  public static final int TYPE_CU_WAP_2G = 15;
  public static final int TYPE_NET_WORK_DISABLED = 0;
  public static final int TYPE_OTHER = 17;
  public static final int TYPE_WIFI = 4;
  public static final String UNINET = "uninet";
  public static final String UNIWAP = "uniwap";
  public static final String WAP_3G = "3gwap";
  public static int checkNetworkType = 0;
  private static final String numberName = "midiannumber";
  private static final String oneName = "midiantime";
  private static final String xmlName = "midianuser";
  
  public W() {}
  
  public static int checkNetworkType(Context paramContext)
  {
    boolean bool1;
    try
    {
      NetworkInfo localNetworkInfo = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
      if ((localNetworkInfo == null) || (!localNetworkInfo.isAvailable())) {
        break label272;
      }
      int i = localNetworkInfo.getType();
      if (i == 1) {
        return 4;
      }
      if (i == 0)
      {
        bool1 = isFastMobileNetwork(paramContext);
        paramContext = paramContext.getContentResolver().query(PREFERRED_APN_URI, null, null, null, null);
        if (paramContext != null)
        {
          paramContext.moveToFirst();
          String str = paramContext.getString(paramContext.getColumnIndex("user"));
          if (!TextUtils.isEmpty(str))
          {
            if (str.startsWith("ctwap"))
            {
              if (!bool1) {
                break label274;
              }
              return 5;
            }
            if (str.startsWith("ctnet"))
            {
              if (!bool1) {
                break label277;
              }
              return 6;
            }
          }
        }
        paramContext.close();
        paramContext = localNetworkInfo.getExtraInfo();
        Log.i("", "==================netmode:" + paramContext);
        if (paramContext != null)
        {
          paramContext = paramContext.toLowerCase();
          if (paramContext.equals("cmwap"))
          {
            if (!bool1) {
              break label280;
            }
            return 9;
          }
          if (paramContext.equals("cmnet"))
          {
            if (!bool1) {
              break label283;
            }
            return 10;
          }
          if ((paramContext.equals("3gnet")) || (paramContext.equals("uninet"))) {
            break label286;
          }
          if (!paramContext.equals("3gwap"))
          {
            boolean bool2 = paramContext.equals("uniwap");
            if (!bool2) {}
          }
          else
          {
            if (bool1) {
              return 13;
            }
            return 15;
          }
        }
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
      return 17;
    }
    return 17;
    label272:
    return 0;
    label274:
    return 7;
    label277:
    return 8;
    label280:
    return 11;
    label283:
    return 12;
    label286:
    if (bool1) {
      return 14;
    }
    return 16;
  }
  
  private static boolean isFastMobileNetwork(Context paramContext)
  {
    switch (((TelephonyManager)paramContext.getSystemService("phone")).getNetworkType())
    {
    case 0: 
    case 1: 
    case 2: 
    case 4: 
    case 7: 
    case 11: 
    default: 
      return false;
    case 5: 
      return true;
    case 6: 
      return true;
    case 8: 
      return true;
    case 10: 
      return true;
    case 9: 
      return true;
    case 3: 
      return true;
    case 14: 
      return true;
    case 12: 
      return true;
    case 15: 
      return true;
    }
    return true;
  }
  
  public String getWifi(Context paramContext)
  {
    checkNetworkType = checkNetworkType(paramContext);
    switch (checkNetworkType)
    {
    case 1: 
    case 2: 
    case 3: 
    default: 
      return "other";
    case 4: 
      Log.i("NetType", "================wifi");
      return "wifi";
    case 0: 
      Log.i("NetType", "================nonetwork");
      return "nonetwork";
    case 5: 
      Log.i("NetType", "================ctwap_3g");
      return "ctwap_3g";
    case 7: 
      Log.i("NetType", "================ctwap_2g");
      return "ctwap_2g";
    case 6: 
      Log.i("NetType", "================ctnet_3g");
      return "ctnet_3g";
    case 8: 
      Log.i("NetType", "================ctnet_2g");
      return "ctnet_2g";
    case 9: 
      Log.i("NetType", "================cmwap_3g");
      return "cmwap_3g";
    case 11: 
      Log.i("NetType", "================cmwap_2g");
      return "cmwap_2g";
    case 10: 
      Log.i("NetType", "================cmnet_3g");
      return "cmnet_3g";
    case 12: 
      Log.i("NetType", "================cmnet_2g");
      return "cmnet_2g";
    case 14: 
      Log.i("NetType", "================cunet_3g");
      return "cunet_3g";
    case 16: 
      Log.i("NetType", "================cunet_2g");
      return "cunet_2g";
    case 13: 
      Log.i("NetType", "================cuwap_3g");
      return "cuwap_3g";
    case 15: 
      Log.i("NetType", "================cuwap_2g");
      return "cuwap_2g";
    }
    Log.i("NetType", "================other");
    return "other";
  }
}
