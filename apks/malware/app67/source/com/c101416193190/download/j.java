package com.c101416193190.download;

import com.c101416193190.util.NetUtil;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.RandomAccessFile;
import java.net.ProtocolException;
import java.net.URL;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.util.ByteArrayBuffer;

public final class j
  extends Thread
{
  HttpClient a = null;
  HttpGet b = null;
  private l c;
  private File d;
  private boolean e = false;
  private int f;
  private k g;
  private URL h;
  private int i = 0;
  
  public j(String paramString, URL paramURL, l paramL, File paramFile)
  {
    super(paramString);
    this.c = paramL;
    this.d = paramFile;
    this.h = paramURL;
  }
  
  public final void a()
  {
    try
    {
      if ((this.b != null) && (this.b.isAborted()))
      {
        this.b.abort();
        this.b = null;
      }
      this.e = true;
      return;
    }
    finally {}
  }
  
  public final void a(k paramK)
  {
    this.g = paramK;
  }
  
  public final void run()
  {
    int j;
    for (;;)
    {
      if (this.e)
      {
        interrupt();
        return;
      }
      try
      {
        this.a = NetUtil.createHttpClient(180000, 60000);
        this.b = new HttpGet(this.h.toURI());
        this.b.setHeader("Accept", "*/*");
        this.b.setHeader("User-Agent", "(C)NokiaE5-00/SymbianOS/9.1 Series60/3.0");
        this.b.setHeader("Range", "bytes=" + this.f + "-");
        this.b.setHeader("Content-Type", "application/octet-stream");
        Object localObject1 = this.a.execute(this.b);
        j = ((HttpResponse)localObject1).getStatusLine().getStatusCode();
        localObject1 = ((HttpResponse)localObject1).getEntity().getContent();
        if ((j < 200) || (j > 300)) {
          break;
        }
        localObject2 = new byte['â€€'];
        localObject3 = new RandomAccessFile(this.d, "rw");
        ((RandomAccessFile)localObject3).seek(this.f);
        j = ((InputStream)localObject1).read((byte[])localObject2, 0, 8192);
        if ((j == -1) || (this.e))
        {
          this.e = true;
          ((RandomAccessFile)localObject3).close();
          if (localObject1 != null) {
            ((InputStream)localObject1).close();
          }
          if (this.b == null) {
            continue;
          }
          this.b.abort();
        }
      }
      catch (ProtocolException localProtocolException)
      {
        for (;;)
        {
          if (10 < this.i) {
            this.g.a(1, localProtocolException.toString());
          }
          localProtocolException.printStackTrace();
          break;
          if (!this.d.exists()) {
            break label350;
          }
          ((RandomAccessFile)localObject3).write((byte[])localObject2, 0, j);
          this.f += j;
          this.g.a(j);
        }
      }
      catch (IOException localIOException)
      {
        for (;;)
        {
          if (10 < this.i) {
            this.g.a(2, localIOException.toString());
          }
          localIOException.printStackTrace();
          break;
          this.g.a(4, "the file not exists");
        }
      }
      catch (Exception localException)
      {
        label350:
        if (10 < this.i) {
          this.g.a(3, localException.toString());
        }
        localException.printStackTrace();
      }
    }
    Object localObject2 = new BufferedInputStream(localException);
    Object localObject3 = new ByteArrayBuffer(20);
    for (;;)
    {
      j = ((BufferedInputStream)localObject2).read();
      if (j == -1)
      {
        if (10 >= this.i) {
          break;
        }
        this.g.a(3, " code error");
        break;
      }
      ((ByteArrayBuffer)localObject3).append((byte)j);
    }
  }
}
