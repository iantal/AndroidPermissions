.class public Lcom/studio/motionwelder/MSpriteLoader;
.super Ljava/lang/Object;


# direct methods
.method public constructor <init>()V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static a(Ljava/lang/String;ZLcom/studio/motionwelder/MSpriteImageLoader;)Lcom/studio/motionwelder/MSpriteData;
    .locals 28

    if-nez p2, :cond_0

    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Image Loader cannot be null"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_0
    new-instance v13, Lcom/studio/motionwelder/MSpriteData;

    const/4 v1, 0x1

    invoke-direct {v13, v1}, Lcom/studio/motionwelder/MSpriteData;-><init>(Z)V

    new-instance v14, Ljava/io/DataInputStream;

    new-instance v1, Ljava/lang/String;

    invoke-direct {v1}, Ljava/lang/String;-><init>()V

    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    invoke-static/range {p0 .. p0}, Ljavax/microedition/enhance/MIDPHelper;->i(Ljava/lang/String;)Ljava/io/InputStream;

    move-result-object v1

    invoke-direct {v14, v1}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V

    :try_start_0
    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readByte()B

    move-result v2

    shl-int/lit8 v1, v2, 0x1

    new-array v15, v1, [S

    const/4 v1, 0x0

    :goto_0
    if-lt v1, v2, :cond_1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v2

    mul-int/lit8 v1, v2, 0x4

    new-array v0, v1, [S

    move-object/from16 v16, v0

    const/4 v1, 0x0

    :goto_1
    if-lt v1, v2, :cond_2

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v1

    shr-int/lit8 v17, v1, 0x2

    new-array v0, v1, [S

    move-object/from16 v18, v0

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v4

    const/4 v2, 0x0

    shl-int/lit8 v1, v4, 0x1

    new-array v0, v1, [S

    move-object/from16 v19, v0

    const/4 v1, 0x0

    move v3, v1

    :goto_2
    if-lt v3, v4, :cond_3

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readByte()B

    move-result v20

    shl-int/lit8 v1, v1, 0x2

    new-array v0, v1, [S

    move-object/from16 v21, v0

    const/4 v3, 0x0

    move/from16 v0, v20

    new-array v0, v0, [S

    move-object/from16 v22, v0

    const/4 v1, 0x0

    const/4 v2, 0x0

    move v11, v1

    move v12, v2

    move v2, v3

    :goto_3
    move/from16 v0, v20

    if-lt v12, v0, :cond_5

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v2

    mul-int/lit8 v1, v2, 0x5

    new-array v3, v1, [I

    const/4 v1, 0x0

    :goto_4
    if-lt v1, v2, :cond_9

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v2

    mul-int/lit8 v1, v2, 0x3

    new-array v4, v1, [I

    const/4 v1, 0x0

    :goto_5
    if-lt v1, v2, :cond_a

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v2

    mul-int/lit8 v1, v2, 0x3

    new-array v5, v1, [I

    const/4 v1, 0x0

    :goto_6
    if-lt v1, v2, :cond_b

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v2

    mul-int/lit8 v1, v2, 0x5

    new-array v6, v1, [I

    const/4 v1, 0x0

    :goto_7
    if-lt v1, v2, :cond_c

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v2

    shl-int/lit8 v1, v2, 0x1

    new-array v7, v1, [S
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const/4 v1, 0x0

    :goto_8
    if-lt v1, v2, :cond_d

    invoke-virtual {v14}, Ljava/io/DataInputStream;->close()V

    iput-object v15, v13, Lcom/studio/motionwelder/MSpriteData;->fk:[S

    move-object/from16 v0, v16

    iput-object v0, v13, Lcom/studio/motionwelder/MSpriteData;->fl:[S

    move-object/from16 v0, v19

    iput-object v0, v13, Lcom/studio/motionwelder/MSpriteData;->fu:[S

    move-object/from16 v0, v18

    iput-object v0, v13, Lcom/studio/motionwelder/MSpriteData;->fm:[S

    move-object/from16 v0, v21

    iput-object v0, v13, Lcom/studio/motionwelder/MSpriteData;->fn:[S

    iput-object v3, v13, Lcom/studio/motionwelder/MSpriteData;->fo:[I

    iput-object v4, v13, Lcom/studio/motionwelder/MSpriteData;->fp:[I

    iput-object v5, v13, Lcom/studio/motionwelder/MSpriteData;->fq:[I

    iput-object v6, v13, Lcom/studio/motionwelder/MSpriteData;->fr:[I

    iput-object v7, v13, Lcom/studio/motionwelder/MSpriteData;->fs:[S

    move-object/from16 v0, v22

    iput-object v0, v13, Lcom/studio/motionwelder/MSpriteData;->ft:[S

    return-object v13

    :cond_1
    mul-int/lit8 v3, v1, 0x2

    :try_start_1
    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v4

    aput-short v4, v15, v3

    mul-int/lit8 v3, v1, 0x2

    add-int/lit8 v3, v3, 0x1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v4

    aput-short v4, v15, v3

    add-int/lit8 v1, v1, 0x1

    goto/16 :goto_0

    :cond_2
    mul-int/lit8 v3, v1, 0x4

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v4

    aput-short v4, v16, v3

    mul-int/lit8 v3, v1, 0x4

    add-int/lit8 v3, v3, 0x1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readByte()B

    move-result v4

    aput-short v4, v16, v3

    mul-int/lit8 v3, v1, 0x4

    add-int/lit8 v3, v3, 0x2

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v4

    aput-short v4, v16, v3

    mul-int/lit8 v3, v1, 0x4

    add-int/lit8 v3, v3, 0x3

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v4

    aput-short v4, v16, v3

    add-int/lit8 v1, v1, 0x1

    goto/16 :goto_1

    :cond_3
    mul-int/lit8 v1, v3, 0x2

    aput-short v2, v19, v1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v5

    const/4 v1, 0x0

    :goto_9
    if-lt v1, v5, :cond_4

    mul-int/lit8 v1, v3, 0x2

    add-int/lit8 v1, v1, 0x1

    add-int/lit8 v5, v2, -0x1

    int-to-short v5, v5

    aput-short v5, v19, v1

    add-int/lit8 v1, v3, 0x1

    move v3, v1

    goto/16 :goto_2

    :cond_4
    add-int/lit8 v6, v2, 0x1

    int-to-short v6, v6

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v7

    aput-short v7, v18, v2

    add-int/lit8 v2, v6, 0x1

    int-to-short v2, v2

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v7

    aput-short v7, v18, v6

    add-int/lit8 v6, v2, 0x1

    int-to-short v6, v6

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v7

    aput-short v7, v18, v2

    add-int/lit8 v2, v6, 0x1

    int-to-short v2, v2

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readByte()B

    move-result v7

    aput-short v7, v18, v6

    add-int/lit8 v1, v1, 0x1

    goto :goto_9

    :cond_5
    aput-short v11, v22, v12

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v23

    filled-new-array/range {v23 .. v23}, [I

    move-result-object v1

    const-class v3, [Lcom/a/a/a/j;

    invoke-static {v3, v1}, Ljava/lang/reflect/Array;->newInstance(Ljava/lang/Class;[I)Ljava/lang/Object;

    move-result-object v1

    move-object v0, v1

    check-cast v0, [[Lcom/a/a/a/j;

    move-object v8, v0

    const/4 v1, 0x0

    move v9, v1

    move v1, v2

    :goto_a
    move/from16 v0, v23

    if-lt v9, v0, :cond_6

    add-int v2, v11, v23

    int-to-short v2, v2

    iget-object v3, v13, Lcom/studio/motionwelder/MSpriteData;->fw:Ljava/util/Vector;

    invoke-virtual {v3, v8}, Ljava/util/Vector;->addElement(Ljava/lang/Object;)V

    add-int/lit8 v3, v12, 0x1

    move v11, v2

    move v12, v3

    move v2, v1

    goto/16 :goto_3

    :cond_6
    add-int/lit8 v2, v1, 0x1

    int-to-short v2, v2

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v3

    aput-short v3, v21, v1

    add-int/lit8 v1, v2, 0x1

    int-to-short v1, v1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v4

    aput-short v4, v21, v2

    add-int/lit8 v2, v1, 0x1

    int-to-short v2, v2

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v5

    aput-short v5, v21, v1

    add-int/lit8 v1, v2, 0x1

    int-to-short v10, v1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v6

    aput-short v6, v21, v2

    const/4 v2, 0x0

    const/4 v1, 0x0

    move/from16 v27, v1

    move v1, v2

    move/from16 v2, v27

    :goto_b
    move/from16 v0, v17

    if-lt v2, v0, :cond_7

    shr-int/lit8 v1, v1, 0x1

    int-to-byte v7, v1

    move-object/from16 v1, p2

    move-object/from16 v2, p0

    invoke-interface/range {v1 .. v7}, Lcom/studio/motionwelder/MSpriteImageLoader;->a(Ljava/lang/String;IIIII)[Lcom/a/a/a/j;

    move-result-object v1

    aput-object v1, v8, v9

    add-int/lit8 v1, v9, 0x1

    move v9, v1

    move v1, v10

    goto :goto_a

    :cond_7
    shl-int/lit8 v7, v2, 0x2

    aget-short v24, v18, v7

    add-int/lit8 v7, v7, 0x3

    aget-short v7, v18, v7

    and-int/lit16 v0, v7, 0xf8

    move/from16 v25, v0

    shr-int/lit8 v25, v25, 0x3

    move/from16 v0, v25

    int-to-byte v0, v0

    move/from16 v25, v0

    aget-short v26, v22, v25

    sub-int v24, v24, v26

    move/from16 v0, v24

    if-ne v0, v9, :cond_8

    and-int/lit8 v24, v7, 0x1

    if-nez v24, :cond_8

    move/from16 v0, v25

    if-ne v0, v12, :cond_8

    and-int/lit8 v7, v7, 0x7

    int-to-byte v7, v7

    or-int/2addr v1, v7

    int-to-byte v1, v1

    :cond_8
    add-int/lit8 v2, v2, 0x1

    goto :goto_b

    :cond_9
    mul-int/lit8 v4, v1, 0x5

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v5

    aput v5, v3, v4

    mul-int/lit8 v4, v1, 0x5

    add-int/lit8 v4, v4, 0x1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v5

    aput v5, v3, v4

    mul-int/lit8 v4, v1, 0x5

    add-int/lit8 v4, v4, 0x2

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v5

    aput v5, v3, v4

    mul-int/lit8 v4, v1, 0x5

    add-int/lit8 v4, v4, 0x3

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v5

    aput v5, v3, v4

    mul-int/lit8 v4, v1, 0x5

    add-int/lit8 v4, v4, 0x4

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readInt()I

    move-result v5

    aput v5, v3, v4

    add-int/lit8 v1, v1, 0x1

    goto/16 :goto_4

    :cond_a
    mul-int/lit8 v5, v1, 0x3

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v6

    aput v6, v4, v5

    mul-int/lit8 v5, v1, 0x3

    add-int/lit8 v5, v5, 0x1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v6

    aput v6, v4, v5

    mul-int/lit8 v5, v1, 0x3

    add-int/lit8 v5, v5, 0x2

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readInt()I

    move-result v6

    aput v6, v4, v5

    add-int/lit8 v1, v1, 0x1

    goto/16 :goto_5

    :cond_b
    mul-int/lit8 v6, v1, 0x3

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v7

    aput v7, v5, v6

    mul-int/lit8 v6, v1, 0x3

    add-int/lit8 v6, v6, 0x1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v7

    aput v7, v5, v6

    mul-int/lit8 v6, v1, 0x3

    add-int/lit8 v6, v6, 0x2

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readInt()I

    move-result v7

    aput v7, v5, v6

    add-int/lit8 v1, v1, 0x1

    goto/16 :goto_6

    :cond_c
    mul-int/lit8 v7, v1, 0x5

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v8

    aput v8, v6, v7

    mul-int/lit8 v7, v1, 0x5

    add-int/lit8 v7, v7, 0x1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v8

    aput v8, v6, v7

    mul-int/lit8 v7, v1, 0x5

    add-int/lit8 v7, v7, 0x2

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v8

    aput v8, v6, v7

    mul-int/lit8 v7, v1, 0x5

    add-int/lit8 v7, v7, 0x3

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v8

    aput v8, v6, v7

    mul-int/lit8 v7, v1, 0x5

    add-int/lit8 v7, v7, 0x4

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readInt()I

    move-result v8

    aput v8, v6, v7

    add-int/lit8 v1, v1, 0x1

    goto/16 :goto_7

    :cond_d
    mul-int/lit8 v8, v1, 0x2

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v9

    aput-short v9, v7, v8

    mul-int/lit8 v8, v1, 0x2

    add-int/lit8 v8, v8, 0x1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->readShort()S

    move-result v9

    aput-short v9, v7, v8
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    add-int/lit8 v1, v1, 0x1

    goto/16 :goto_8

    :catch_0
    move-exception v1

    :try_start_2
    throw v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :catchall_0
    move-exception v1

    invoke-virtual {v14}, Ljava/io/DataInputStream;->close()V

    throw v1
.end method
