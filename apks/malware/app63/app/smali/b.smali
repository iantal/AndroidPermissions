.class public final Lb;
.super Ljava/lang/Object;


# instance fields
.field private W:B

.field private c:I

.field private d:I

.field private e:I

.field private f:I

.field private g:I

.field private h:I

.field private i:I

.field private j:I


# direct methods
.method constructor <init>()V
    .locals 3

    const/4 v2, 0x1

    const/4 v1, 0x0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-byte v2, p0, Lb;->W:B

    iput v1, p0, Lb;->c:I

    iput v1, p0, Lb;->d:I

    const/16 v0, 0x8

    iput v0, p0, Lb;->e:I

    iput v2, p0, Lb;->f:I

    const/4 v0, 0x5

    iput v0, p0, Lb;->g:I

    iput v1, p0, Lb;->h:I

    const/16 v0, 0xf0

    iput v0, p0, Lb;->i:I

    const/16 v0, 0x140

    iput v0, p0, Lb;->j:I

    return-void
.end method


# virtual methods
.method protected final a(Lcom/a/a/a/i;Lcom/a/a/a/j;)V
    .locals 7

    const/4 v6, 0x1

    const/16 v5, 0x14

    const/4 v1, 0x0

    iget-byte v0, p0, Lb;->W:B

    packed-switch v0, :pswitch_data_0

    :cond_0
    :goto_0
    iget v0, p0, Lb;->h:I

    add-int/lit8 v0, v0, 0x5

    iput v0, p0, Lb;->h:I

    move v0, v1

    :goto_1
    invoke-virtual {p2}, Lcom/a/a/a/j;->getHeight()I

    move-result v2

    if-lt v0, v2, :cond_1

    iget v0, p0, Lb;->i:I

    iget v2, p0, Lb;->j:I

    invoke-virtual {p1, v1, v1, v0, v2}, Lcom/a/a/a/i;->f(IIII)V

    iget v0, p0, Lb;->c:I

    iget v1, p0, Lb;->g:I

    add-int/2addr v0, v1

    iput v0, p0, Lb;->c:I

    return-void

    :pswitch_0
    iget v0, p0, Lb;->f:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lb;->f:I

    iget v0, p0, Lb;->g:I

    add-int/lit8 v0, v0, 0x3

    iput v0, p0, Lb;->g:I

    iget v0, p0, Lb;->e:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lb;->e:I

    iget v0, p0, Lb;->f:I

    if-lt v0, v5, :cond_0

    iput v5, p0, Lb;->f:I

    const/4 v0, 0x2

    iput-byte v0, p0, Lb;->W:B

    goto :goto_0

    :pswitch_1
    iget v0, p0, Lb;->d:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lb;->d:I

    iget v0, p0, Lb;->c:I

    const/16 v2, 0x1e

    if-le v0, v2, :cond_0

    const/4 v0, 0x3

    iput-byte v0, p0, Lb;->W:B

    goto :goto_0

    :pswitch_2
    iget v0, p0, Lb;->e:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lb;->e:I

    iget v0, p0, Lb;->f:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lb;->f:I

    iget v0, p0, Lb;->g:I

    add-int/lit8 v0, v0, -0x3

    iput v0, p0, Lb;->g:I

    iget v0, p0, Lb;->f:I

    if-gtz v0, :cond_0

    iput v6, p0, Lb;->f:I

    iput-byte v1, p0, Lb;->W:B

    goto :goto_0

    :cond_1
    iget v2, p0, Lb;->h:I

    if-ge v2, v5, :cond_2

    iget v2, p0, Lb;->h:I

    add-int/lit8 v2, v2, -0x4

    iput v2, p0, Lb;->f:I

    :cond_2
    iget v2, p0, Lb;->i:I

    div-int/lit8 v2, v2, 0x2

    iget v3, p0, Lb;->h:I

    div-int/lit8 v3, v3, 0x2

    sub-int/2addr v2, v3

    iget v3, p0, Lb;->e:I

    mul-int/2addr v3, v0

    iget v4, p0, Lb;->c:I

    add-int/2addr v3, v4

    invoke-static {v3}, La;->b(I)I

    move-result v3

    iget v4, p0, Lb;->f:I

    mul-int/2addr v3, v4

    div-int/lit16 v3, v3, 0x2710

    add-int/2addr v2, v3

    iget v3, p0, Lb;->h:I

    invoke-virtual {p1, v2, v0, v3, v6}, Lcom/a/a/a/i;->f(IIII)V

    iget v2, p0, Lb;->e:I

    mul-int/2addr v2, v0

    iget v3, p0, Lb;->c:I

    add-int/2addr v2, v3

    invoke-static {v2}, La;->b(I)I

    move-result v2

    iget v3, p0, Lb;->f:I

    mul-int/2addr v2, v3

    div-int/lit16 v2, v2, 0x2710

    invoke-virtual {p1, p2, v2, v1, v1}, Lcom/a/a/a/i;->a(Lcom/a/a/a/j;III)V

    iget v2, p0, Lb;->e:I

    mul-int/2addr v2, v0

    iget v3, p0, Lb;->c:I

    add-int/2addr v2, v3

    invoke-static {v2}, La;->b(I)I

    move-result v2

    mul-int/lit8 v2, v2, 0x1e

    div-int/lit16 v2, v2, 0x2710

    if-lez v2, :cond_3

    iget v2, p0, Lb;->i:I

    neg-int v2, v2

    iget v3, p0, Lb;->e:I

    mul-int/2addr v3, v0

    iget v4, p0, Lb;->c:I

    add-int/2addr v3, v4

    invoke-static {v3}, La;->b(I)I

    move-result v3

    iget v4, p0, Lb;->f:I

    mul-int/2addr v3, v4

    div-int/lit16 v3, v3, 0x2710

    add-int/2addr v2, v3

    invoke-virtual {p1, p2, v2, v1, v1}, Lcom/a/a/a/i;->a(Lcom/a/a/a/j;III)V

    :cond_3
    iget v2, p0, Lb;->e:I

    mul-int/2addr v2, v0

    iget v3, p0, Lb;->c:I

    add-int/2addr v2, v3

    invoke-static {v2}, La;->b(I)I

    move-result v2

    mul-int/lit8 v2, v2, 0x1e

    div-int/lit16 v2, v2, 0x2710

    if-gez v2, :cond_4

    iget v2, p0, Lb;->i:I

    iget v3, p0, Lb;->e:I

    mul-int/2addr v3, v0

    iget v4, p0, Lb;->c:I

    add-int/2addr v3, v4

    invoke-static {v3}, La;->b(I)I

    move-result v3

    iget v4, p0, Lb;->f:I

    mul-int/2addr v3, v4

    div-int/lit16 v3, v3, 0x2710

    add-int/2addr v2, v3

    invoke-virtual {p1, p2, v2, v1, v1}, Lcom/a/a/a/i;->a(Lcom/a/a/a/j;III)V

    :cond_4
    add-int/lit8 v0, v0, 0x1

    goto/16 :goto_1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method
