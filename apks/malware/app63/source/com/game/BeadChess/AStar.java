package com.game.BeadChess;

import java.util.Vector;

public class AStar
{
  private byte bY = -1;
  private byte bZ = 1;
  private int ca = 0;
  private int cb = 0;
  private byte[][] cc;
  private final byte cd = 1;
  private int ce;
  private int cf;
  Vector cg = new Vector();
  Vector ch = new Vector();
  
  public AStar() {}
  
  private int a(int paramInt1, int paramInt2)
  {
    return Math.abs(this.ce - paramInt1) + Math.abs(this.cf - paramInt2);
  }
  
  private void a(a paramA)
  {
    int i = paramA.y - 1;
    int j = paramA.x;
    if (b(i, j)) {
      a(paramA, i, j);
    }
    i = paramA.y + 1;
    j = paramA.x;
    if (b(i, j)) {
      a(paramA, i, j);
    }
    i = paramA.y;
    j = paramA.x - 1;
    if (b(i, j)) {
      a(paramA, i, j);
    }
    i = paramA.y;
    j = paramA.x + 1;
    if (b(i, j)) {
      a(paramA, i, j);
    }
    this.cg.addElement(paramA);
    i = 0;
    for (;;)
    {
      if (i >= this.ch.size()) {
        return;
      }
      if ((((a)this.ch.elementAt(i)).y == paramA.y) && (((a)this.ch.elementAt(i)).x == paramA.x))
      {
        this.ch.removeElementAt(i);
        return;
      }
      i += 1;
    }
  }
  
  private void a(a paramA, int paramInt1, int paramInt2)
  {
    int j = 0;
    int k = paramA.h + 1;
    int i = 0;
    if (i >= this.cg.size())
    {
      i = 0;
      label29:
      if (i == 0) {
        i = j;
      }
    }
    for (;;)
    {
      if (i >= this.ch.size()) {}
      for (localA = null;; localA = (a)this.ch.elementAt(i))
      {
        if (localA == null) {
          break label212;
        }
        if (localA.h < k)
        {
          localA.eH = paramA;
          localA.h = k;
          localA.g = (localA.i + k);
        }
        return;
        if ((((a)this.cg.elementAt(i)).y == paramInt1) && (((a)this.cg.elementAt(i)).x == paramInt2))
        {
          i = 1;
          break label29;
        }
        i += 1;
        break;
        if ((((a)this.ch.elementAt(i)).y != paramInt1) || (((a)this.ch.elementAt(i)).x != paramInt2)) {
          break label203;
        }
      }
      label203:
      i += 1;
    }
    label212:
    a localA = new a();
    localA.eH = paramA;
    localA.h = k;
    localA.i = a(paramInt1, paramInt2);
    localA.g = (localA.h + localA.i);
    localA.y = paramInt1;
    localA.x = paramInt2;
    this.ch.addElement(localA);
  }
  
  private boolean b(int paramInt1, int paramInt2)
  {
    if ((paramInt1 < 0) || (paramInt1 >= this.cb)) {}
    while ((paramInt2 < 0) || (paramInt2 >= this.ca) || (this.cc[paramInt2][paramInt1] != this.bY)) {
      return false;
    }
    return true;
  }
  
  private a n()
  {
    a localA = null;
    int i = 999999999;
    int j = 0;
    if (j >= this.ch.size()) {
      return localA;
    }
    if (((a)this.ch.elementAt(j)).g < i)
    {
      i = ((a)this.ch.elementAt(j)).g;
      localA = (a)this.ch.elementAt(j);
    }
    for (;;)
    {
      j += 1;
      break;
    }
  }
  
  public final Vector a(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    Vector localVector = new Vector();
    this.ce = paramInt4;
    this.cf = paramInt3;
    a localA = new a();
    localA.y = paramInt2;
    localA.x = paramInt1;
    localA.h = 0;
    localA.i = a(localA.y, localA.x);
    localA.g = (localA.h + localA.i);
    this.ch.addElement(localA);
    for (;;)
    {
      localA = n();
      if (localA == null) {
        return null;
      }
      if ((localA.y == paramInt4) && (localA.x == paramInt3))
      {
        localVector.addElement(localA);
        for (;;)
        {
          if (localA.eH == null) {
            return localVector;
          }
          localA = localA.eH;
          localVector.addElement(localA);
        }
      }
      a(localA);
    }
  }
  
  public final void a(byte[][] paramArrayOfByte, int paramInt1, int paramInt2)
  {
    this.cc = paramArrayOfByte;
    this.ca = paramInt1;
    this.cb = paramInt2;
    this.cg.removeAllElements();
    this.ch.removeAllElements();
  }
}
