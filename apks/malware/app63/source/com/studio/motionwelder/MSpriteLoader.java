package com.studio.motionwelder;

import com.a.a.a.j;
import java.io.DataInputStream;
import java.lang.reflect.Array;
import java.util.Vector;
import javax.microedition.enhance.MIDPHelper;

public class MSpriteLoader
{
  public MSpriteLoader() {}
  
  public static MSpriteData a(String paramString, boolean paramBoolean, MSpriteImageLoader paramMSpriteImageLoader)
  {
    if (paramMSpriteImageLoader == null) {
      throw new IllegalArgumentException("Image Loader cannot be null");
    }
    MSpriteData localMSpriteData = new MSpriteData(true);
    new String().getClass();
    DataInputStream localDataInputStream = new DataInputStream(MIDPHelper.i(paramString));
    for (;;)
    {
      int i2;
      int i1;
      short[] arrayOfShort3;
      int i3;
      int i;
      short[] arrayOfShort4;
      short[] arrayOfShort6;
      try
      {
        localDataInputStream.readShort();
        localDataInputStream.readUTF();
        i2 = localDataInputStream.readByte();
        short[] arrayOfShort1 = new short[i2 << 1];
        i1 = 0;
        short[] arrayOfShort2;
        int i7;
        short[] arrayOfShort5;
        int[] arrayOfInt;
        short[] arrayOfShort7;
        if (i1 >= i2)
        {
          i2 = localDataInputStream.readShort();
          arrayOfShort2 = new short[i2 * 4];
          i1 = 0;
          if (i1 >= i2)
          {
            i7 = localDataInputStream.readShort();
            arrayOfShort3 = new short[i7];
            i3 = localDataInputStream.readShort();
            i = 0;
            arrayOfShort4 = new short[i3 << 1];
            i1 = 0;
            if (i1 < i3) {
              continue;
            }
            i1 = localDataInputStream.readShort();
            int i8 = localDataInputStream.readByte();
            arrayOfShort5 = new short[i1 << 2];
            arrayOfShort6 = new short[i8];
            i = 0;
            i2 = 0;
            i1 = 0;
            if (i2 < i8) {
              continue;
            }
            i2 = localDataInputStream.readShort();
            paramString = new int[i2 * 5];
            i1 = 0;
            if (i1 < i2) {
              continue;
            }
            i2 = localDataInputStream.readShort();
            paramMSpriteImageLoader = new int[i2 * 3];
            i1 = 0;
            if (i1 < i2) {
              continue;
            }
            i2 = localDataInputStream.readShort();
            localObject = new int[i2 * 3];
            i1 = 0;
            if (i1 < i2) {
              continue;
            }
            i2 = localDataInputStream.readShort();
            arrayOfInt = new int[i2 * 5];
            i1 = 0;
            if (i1 < i2) {
              continue;
            }
            i2 = localDataInputStream.readShort();
            arrayOfShort7 = new short[i2 << 1];
            i1 = 0;
            if (i1 < i2) {
              continue;
            }
            localDataInputStream.close();
            localMSpriteData.fk = arrayOfShort1;
            localMSpriteData.fl = arrayOfShort2;
            localMSpriteData.fu = arrayOfShort4;
            localMSpriteData.fm = arrayOfShort3;
            localMSpriteData.fn = arrayOfShort5;
            localMSpriteData.fo = paramString;
            localMSpriteData.fp = paramMSpriteImageLoader;
            localMSpriteData.fq = ((int[])localObject);
            localMSpriteData.fr = arrayOfInt;
            localMSpriteData.fs = arrayOfShort7;
            localMSpriteData.ft = arrayOfShort6;
            return localMSpriteData;
          }
        }
        else
        {
          arrayOfShort1[(i1 * 2)] = localDataInputStream.readShort();
          arrayOfShort1[(i1 * 2 + 1)] = localDataInputStream.readShort();
          i1 += 1;
          continue;
        }
        arrayOfShort2[(i1 * 4)] = localDataInputStream.readShort();
        arrayOfShort2[(i1 * 4 + 1)] = localDataInputStream.readByte();
        arrayOfShort2[(i1 * 4 + 2)] = localDataInputStream.readShort();
        arrayOfShort2[(i1 * 4 + 3)] = localDataInputStream.readShort();
        i1 += 1;
        continue;
        arrayOfShort4[(i1 * 2)] = i;
        i4 = localDataInputStream.readShort();
        i2 = 0;
        break label1085;
        int i6 = (short)(i + 1);
        arrayOfShort3[i] = localDataInputStream.readShort();
        i5 = (short)(i6 + 1);
        arrayOfShort3[i6] = localDataInputStream.readShort();
        i6 = (short)(i5 + 1);
        arrayOfShort3[i5] = localDataInputStream.readShort();
        i = (short)(i6 + 1);
        arrayOfShort3[i6] = localDataInputStream.readByte();
        i2 += 1;
        break label1085;
        arrayOfShort6[i2] = i;
        int i9 = localDataInputStream.readShort();
        Object localObject = (j[][])Array.newInstance([Lcom.a.a.a.j.class, new int[] { i9 });
        i3 = 0;
        if (i3 >= i9)
        {
          i = (short)(i + i9);
          localMSpriteData.fw.addElement(localObject);
          i2 += 1;
          continue;
        }
        i4 = (short)(i1 + 1);
        int j = localDataInputStream.readShort();
        arrayOfShort5[i1] = j;
        i1 = (short)(i4 + 1);
        int k = localDataInputStream.readShort();
        arrayOfShort5[i4] = k;
        i4 = (short)(i1 + 1);
        int m = localDataInputStream.readShort();
        arrayOfShort5[i1] = m;
        i6 = (short)(i4 + 1);
        int n = localDataInputStream.readShort();
        arrayOfShort5[i4] = n;
        i4 = 0;
        i1 = 0;
        if (i1 < i7 >> 2) {
          break label1114;
        }
        localObject[i3] = paramMSpriteImageLoader.a(paramString, j, k, m, n, (byte)(i4 >> 1));
        i3 += 1;
        i1 = i6;
        continue;
        paramString[(i1 * 5)] = localDataInputStream.readShort();
        paramString[(i1 * 5 + 1)] = localDataInputStream.readShort();
        paramString[(i1 * 5 + 2)] = localDataInputStream.readShort();
        paramString[(i1 * 5 + 3)] = localDataInputStream.readShort();
        paramString[(i1 * 5 + 4)] = localDataInputStream.readInt();
        i1 += 1;
        continue;
        paramMSpriteImageLoader[(i1 * 3)] = localDataInputStream.readShort();
        paramMSpriteImageLoader[(i1 * 3 + 1)] = localDataInputStream.readShort();
        paramMSpriteImageLoader[(i1 * 3 + 2)] = localDataInputStream.readInt();
        i1 += 1;
        continue;
        localObject[(i1 * 3)] = localDataInputStream.readShort();
        localObject[(i1 * 3 + 1)] = localDataInputStream.readShort();
        localObject[(i1 * 3 + 2)] = localDataInputStream.readInt();
        i1 += 1;
        continue;
        arrayOfInt[(i1 * 5)] = localDataInputStream.readShort();
        arrayOfInt[(i1 * 5 + 1)] = localDataInputStream.readShort();
        arrayOfInt[(i1 * 5 + 2)] = localDataInputStream.readShort();
        arrayOfInt[(i1 * 5 + 3)] = localDataInputStream.readShort();
        arrayOfInt[(i1 * 5 + 4)] = localDataInputStream.readInt();
        i1 += 1;
        continue;
        arrayOfShort7[(i1 * 2)] = localDataInputStream.readShort();
        arrayOfShort7[(i1 * 2 + 1)] = localDataInputStream.readShort();
        i1 += 1;
        continue;
        if (i2 < i4) {
          continue;
        }
      }
      catch (Exception paramString)
      {
        throw paramString;
      }
      finally
      {
        localDataInputStream.close();
      }
      label1085:
      arrayOfShort4[(i1 * 2 + 1)] = ((short)(i - 1));
      i1 += 1;
      continue;
      label1114:
      int i5 = i1 << 2;
      int i10 = arrayOfShort3[i5];
      int i11 = arrayOfShort3[(i5 + 3)];
      int i12 = (byte)((i11 & 0xF8) >> 3);
      i5 = i4;
      if (i10 - arrayOfShort6[i12] == i3)
      {
        i5 = i4;
        if ((i11 & 0x1) == 0)
        {
          i5 = i4;
          if (i12 == i2) {
            i5 = (byte)(i4 | (byte)(i11 & 0x7));
          }
        }
      }
      i1 += 1;
      int i4 = i5;
    }
  }
}
