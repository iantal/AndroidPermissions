package com.android.apps.activity;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import com.android.apps.bean.AdAdvertisement;
import com.android.apps.connect.HttpUtil;
import com.android.apps.listenerinterface.OnAdStateListener;
import com.android.apps.threadpool.InfoTask;
import com.android.apps.threadpool.MercuryExecutorService;
import com.android.apps.util.AdManager;
import com.android.apps.util.ApkUtil;
import com.android.apps.util.CheckNet;
import com.android.apps.util.LoggerUtil;
import com.android.apps.util.UserInfo;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class InstallRecevice
  extends BroadcastReceiver
{
  private String tag = "InstallRecevice";
  
  public InstallRecevice() {}
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    for (boolean bool = true;; bool = false)
    {
      try
      {
        UserInfo localUserInfo = new UserInfo();
        HttpUtil localHttpUtil = new HttpUtil();
        AdAdvertisement localAdAdvertisement = AdManager.currentAd;
        ApkUtil localApkUtil = new ApkUtil(AdManager.adContext);
        if (localAdAdvertisement == null) {
          break label508;
        }
        Object localObject = localAdAdvertisement.getApkPackage();
        String str = paramIntent.getDataString().substring(8);
        new StringBuilder("intent.getAction().equals(android.intent.action.PACKAGE_ADDED):").append(paramIntent.getAction().equals("android.intent.action.PACKAGE_ADDED")).toString();
        new StringBuilder("mercuryAdPackage:").append((String)localObject).toString();
        new StringBuilder("packageName:").append(str).toString();
        StringBuilder localStringBuilder = new StringBuilder("userInfo.checkAd(packageName)==nu:");
        if (localUserInfo.checkAd(str) != null) {
          continue;
        }
        localStringBuilder.append(bool).toString();
        if ((paramIntent.getAction().equals("android.intent.action.PACKAGE_ADDED")) && (((String)localObject).equals(str)) && (localUserInfo.checkAd(str) == null))
        {
          AdManager.successInstallAd = localAdAdvertisement;
          AdManager.successActivate = true;
          AdManager.suPackageName = str;
          paramIntent = new ArrayList();
          paramIntent.add(localAdAdvertisement);
          AdManager.listNvAd.removeAll(paramIntent);
          if (AdManager.listNvAd.size() == 0)
          {
            paramIntent = localApkUtil.setNullAd("暂时没有推荐", "暂时没有推荐，请您联网试试");
            AdManager.listNvAd.add(paramIntent);
          }
          paramIntent = AdManager.adactivation;
          localObject = new HashMap();
          ((HashMap)localObject).put("AdName", localAdAdvertisement.getName());
          ((HashMap)localObject).put("Mercury_ID", AdManager.getMercuryId(paramContext));
          ((HashMap)localObject).put("AdId", String.valueOf(localAdAdvertisement.getId()));
          ((HashMap)localObject).put("Price", String.valueOf(localAdAdvertisement.getSeparatePrice()));
          ((HashMap)localObject).put("AppPackageName", paramContext.getPackageName());
          LoggerUtil.log(paramContext, "M_Activate_Succeed", (Map)localObject);
          if (paramIntent != null) {
            paramIntent.onActivateSucceed(localAdAdvertisement);
          }
          if (localAdAdvertisement.isApkStart())
          {
            new StringBuilder("需要自启广告名字~~~~~~~").append(str).toString();
            localApkUtil.launchExternalApplication(str);
          }
          paramContext = localApkUtil.getKindOfApkName(localAdAdvertisement.getApkName());
          if (CheckNet.isConnect())
          {
            paramIntent = this.tag;
            MercuryExecutorService.execute(new InfoTask("installSuccess", AdManager.successInstallAd.getId(), AdManager.mercuryViewType, paramContext.substring(0, 1), localHttpUtil));
          }
          for (;;)
          {
            localUserInfo.initAdInfo(localAdAdvertisement.getApkPackage(), localAdAdvertisement.getApkPackage());
            if (AdManager.mercuryViewType.equals("banner")) {
              break;
            }
            AdManager.adViewDestory();
            return;
            localUserInfo.setLastConnect();
            localUserInfo.initInedAdinfo();
          }
        }
        paramContext = AdManager.adactivation;
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
        return;
      }
      if (paramContext != null) {
        paramContext.onActivateFailed("Maybe install the repeated advertising or Package error。");
      }
      label508:
      return;
    }
  }
}
