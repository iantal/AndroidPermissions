package com.android.apps.activity;

import android.app.Activity;
import android.app.ActivityManager;
import android.app.ActivityManager.RunningTaskInfo;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.AsyncTask;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.Toast;
import com.android.apps.bean.AdAdvertisement;
import com.android.apps.util.AdManager;
import com.android.apps.util.ApkUtil;
import com.android.apps.util.ImageLoader;
import com.android.apps.util.ImageLoader.CallbackImpl;
import com.android.apps.util.ImageLoader.ImageCallback;
import java.util.ArrayList;
import java.util.List;

public class ViewBanner
  extends LinearLayout
{
  public static int adNum = -1;
  public static ImageView bannerimage;
  public static LinearLayout layout;
  public static List<AdAdvertisement> listNvAd;
  public static int nvAdNum = 0;
  private ApkUtil apkUtil;
  private Context mContext;
  
  public ViewBanner(Context paramContext)
  {
    super(paramContext);
    this.mContext = paramContext;
    initView(paramContext);
  }
  
  public void initView(Context paramContext)
  {
    this.apkUtil = new ApkUtil(paramContext);
    this.apkUtil.initState();
    com.android.apps.util.UserInfo.mContext = paramContext;
    ImageLoader.context = paramContext;
    listNvAd = new ArrayList();
    paramContext = AdManager.listNvAd;
    listNvAd = paramContext;
    if ((paramContext != null) && (listNvAd.size() > 0) && (!AdManager.successActivate) && (!" ".equals(((AdAdvertisement)listNvAd.get(0)).getApkUrl()))) {
      new AdViewBannerTask().execute(new Void[0]);
    }
  }
  
  public boolean isMercury()
  {
    Object localObject = null;
    List localList = ((ActivityManager)this.mContext.getSystemService("activity")).getRunningTasks(100);
    PackageManager localPackageManager = this.mContext.getPackageManager();
    try
    {
      String str = this.mContext.getPackageManager().getPackageInfo(this.mContext.getPackageName(), 0).packageName;
      localObject = str;
    }
    catch (PackageManager.NameNotFoundException localNameNotFoundException)
    {
      for (;;)
      {
        localNameNotFoundException.printStackTrace();
      }
    }
    new Intent("android.intent.action.MAIN").addCategory("android.intent.category.HOME").resolveActivityInfo(localPackageManager, 0);
    return ((ActivityManager.RunningTaskInfo)localList.get(0)).baseActivity.toString().startsWith("ComponentInfo{" + localObject);
  }
  
  public class AdViewBannerTask
    extends AsyncTask<Void, Integer, Void>
  {
    public AdViewBannerTask() {}
    
    protected Void doInBackground(Void... paramVarArgs)
    {
      if ((ViewBanner.listNvAd.size() > 0) && (!AdManager.successActivate)) {
        try
        {
          publishProgress(new Integer[] { Integer.valueOf(2) });
          while ((!AdManager.successActivate) && (ViewBanner.listNvAd.size() > 0)) {
            try
            {
              Thread.sleep(5000L);
              publishProgress(new Integer[] { Integer.valueOf(1) });
              Thread.sleep(3000L);
              publishProgress(new Integer[] { Integer.valueOf(0) });
            }
            catch (InterruptedException paramVarArgs)
            {
              paramVarArgs.printStackTrace();
            }
          }
        }
        catch (Exception paramVarArgs)
        {
          for (;;)
          {
            paramVarArgs.printStackTrace();
          }
          if (AdManager.successActivate) {
            ViewBanner.layout.setVisibility(4);
          }
        }
      }
      return null;
    }
    
    protected void onPostExecute(Void paramVoid)
    {
      super.onPostExecute(paramVoid);
    }
    
    protected void onProgressUpdate(Integer... paramVarArgs)
    {
      switch (paramVarArgs[0].intValue())
      {
      default: 
        return;
      case 0: 
        ViewBanner.layout.setVisibility(4);
        return;
      case 1: 
        ViewBanner.nvAdNum = ViewBanner.listNvAd.size();
        if (ViewBanner.adNum < ViewBanner.nvAdNum - 1) {}
        for (ViewBanner.adNum += 1; ViewBanner.listNvAd.get(ViewBanner.adNum) != null; ViewBanner.adNum = 0)
        {
          Object localObject = ((AdAdvertisement)ViewBanner.listNvAd.get(ViewBanner.adNum)).getbIconUrl();
          paramVarArgs = (Integer[])localObject;
          if (!((String)localObject).startsWith("http"))
          {
            paramVarArgs = (Integer[])localObject;
            if (!((String)localObject).equals(" ")) {
              paramVarArgs = AdManager.dpiStr + (String)localObject;
            }
          }
          localObject = new ImageLoader.CallbackImpl(ViewBanner.bannerimage);
          ImageLoader localImageLoader = new ImageLoader();
          new StringBuilder("banner的图片~~~~~~~~~~~~").append(paramVarArgs).toString();
          paramVarArgs = localImageLoader.initImage(paramVarArgs, ViewBanner.bannerimage, ViewBanner.this.mContext, (ImageLoader.ImageCallback)localObject);
          ViewBanner.bannerimage.setImageBitmap(paramVarArgs);
          if (ViewBanner.this.isMercury()) {
            Toast.makeText(ViewBanner.this.mContext, "免费免流量安装" + ViewBanner.listNvAd.size() + "款推荐应用即可屏蔽广告，免费畅玩游戏。", 1).show();
          }
          ViewBanner.bannerimage.setOnClickListener(new View.OnClickListener()
          {
            public final void onClick(View paramAnonymousView)
            {
              paramAnonymousView = ViewBanner.this.apkUtil.getKindOfApkName(((AdAdvertisement)ViewBanner.listNvAd.get(ViewBanner.adNum)).getApkName());
              if (paramAnonymousView != null) {
                ViewBanner.this.apkUtil.opApk(paramAnonymousView, ((AdAdvertisement)ViewBanner.listNvAd.get(ViewBanner.adNum)).getId());
              }
              AdManager.currentAd = (AdAdvertisement)ViewBanner.listNvAd.get(ViewBanner.adNum);
              if (AdManager.successActivate) {
                ViewBanner.layout.setVisibility(4);
              }
            }
          });
          if (!AdManager.successActivate) {
            break label293;
          }
          ViewBanner.layout.setVisibility(4);
          return;
        }
        label293:
        ViewBanner.layout.setVisibility(0);
        return;
      }
      ViewBanner.layout = new LinearLayout(ViewBanner.this.mContext);
      ViewBanner.bannerimage = new ImageView(ViewBanner.this.mContext);
      paramVarArgs = new RelativeLayout.LayoutParams(-1, -2);
      paramVarArgs.addRule(14, -1);
      ViewBanner.layout.addView(ViewBanner.bannerimage, paramVarArgs);
      ((Activity)ViewBanner.this.mContext).addContentView(ViewBanner.layout, paramVarArgs);
    }
  }
}
