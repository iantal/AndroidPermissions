package com.android.apps.util;

import android.content.Context;
import android.graphics.Bitmap;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import com.android.apps.R.drawable;
import com.android.apps.R.id;
import com.android.apps.R.layout;
import com.android.apps.activity.ViewList;
import com.android.apps.bean.AdAdvertisement;
import com.android.apps.connect.HttpUtil;
import com.android.apps.threadpool.MercuryExecutorService;
import com.android.apps.threadpool.Task;
import java.io.File;
import java.util.List;
import java.util.Map;
import org.json.JSONException;
import org.json.JSONObject;

public class ListAdapter
  extends BaseAdapter
{
  private int adId;
  private String apkName;
  private String apkUrl;
  ApkUtil apkUtil;
  private String appInfo;
  private String appName;
  private int categoryId;
  HttpUtil httpUtil;
  boolean isBitmap = false;
  private LayoutInflater listContainer;
  private List<Map<String, Object>> listItem;
  public Context mContext;
  private String packageName;
  int position;
  
  public ListAdapter(List<Map<String, Object>> paramList, Context paramContext)
  {
    this.mContext = paramContext;
    this.listItem = paramList;
    this.listContainer = LayoutInflater.from(paramContext);
  }
  
  public int getCount()
  {
    return this.listItem.size();
  }
  
  public Object getItem(int paramInt)
  {
    return this.listItem.get(paramInt);
  }
  
  public long getItemId(int paramInt)
  {
    return paramInt;
  }
  
  public View getView(int paramInt, View paramView, ViewGroup paramViewGroup)
  {
    this.apkUtil = new ApkUtil(this.mContext);
    this.httpUtil = new HttpUtil();
    Object localObject1 = ((Map)this.listItem.get(paramInt)).get("image").toString();
    this.appName = ((Map)this.listItem.get(paramInt)).get("appName").toString();
    this.appInfo = ((Map)this.listItem.get(paramInt)).get("appInfo").toString();
    this.apkName = ((Map)this.listItem.get(paramInt)).get("apkName").toString();
    this.packageName = ((Map)this.listItem.get(paramInt)).get("packageName").toString();
    this.adId = ((Integer)((Map)this.listItem.get(paramInt)).get("adId")).intValue();
    this.apkUrl = ((Map)this.listItem.get((int)getItemId(paramInt))).get("apkUrl").toString();
    this.categoryId = ((Integer)((Map)this.listItem.get(paramInt)).get("categoryId")).intValue();
    if (paramView == null)
    {
      paramViewGroup = new ListItemView();
      paramView = this.listContainer.inflate(R.layout.list_adviewlist, null);
      paramViewGroup.imageView = ((ImageView)paramView.findViewById(R.id.list_adviewlist_imageview));
      paramViewGroup.appName = ((TextView)paramView.findViewById(R.id.list_adviewlist_text1));
      paramViewGroup.appInfo = ((TextView)paramView.findViewById(R.id.list_adviewlist_text2));
      paramViewGroup.imageButton = ((ImageButton)paramView.findViewById(R.id.list_adviewlist_Imagebutton));
      paramView.setTag(paramViewGroup);
    }
    for (;;)
    {
      Object localObject2 = new ImageLoader.CallbackImpl(paramViewGroup.imageView);
      localObject1 = new ImageLoader().initImage((String)localObject1, paramViewGroup.imageView, this.mContext, (ImageLoader.ImageCallback)localObject2);
      if (localObject1 == null)
      {
        paramViewGroup.imageView.setImageResource(R.drawable.mercury_nullimagelist);
        paramViewGroup.appInfo.setText(this.appInfo);
        paramViewGroup.appName.setText(this.appName);
        localObject1 = this.apkUtil.getKindOfApkName(this.apkName);
        localObject2 = new File(Config.AD_APK_PATH + File.separator + (String)localObject1);
        if ((this.apkUrl == null) || ("".equals(this.apkUrl.trim()))) {
          break label736;
        }
        if (((File)localObject2).exists())
        {
          paramViewGroup.imageButton.setBackgroundResource(R.drawable.mercury_u1);
          localObject2 = new JSONObject();
        }
      }
      else
      {
        try
        {
          ((JSONObject)localObject2).put("apkName", localObject1);
          ((JSONObject)localObject2).put("packageName", this.packageName);
          ((JSONObject)localObject2).put("position", paramInt);
          ((JSONObject)localObject2).put("adId", this.adId);
          paramViewGroup.imageButton.setTag(localObject2);
          paramViewGroup.imageButton.setOnClickListener(new View.OnClickListener()
          {
            public final void onClick(View paramAnonymousView)
            {
              try
              {
                paramAnonymousView = new JSONObject(paramAnonymousView.getTag().toString());
                String str = paramAnonymousView.getString("apkName");
                int i = paramAnonymousView.getInt("adId");
                int j = Integer.parseInt(paramAnonymousView.getString("position"));
                AdManager.currentAd = (AdAdvertisement)ViewList.listNvAd.get(j);
                if ((str != null) && (!str.equals(" "))) {
                  ListAdapter.this.apkUtil.opApk(str, i);
                }
                if (AdManager.isConnect) {
                  MercuryExecutorService.execute(new Task("list", i, "-1", "1", "-1", ListAdapter.this.httpUtil));
                }
                return;
              }
              catch (JSONException paramAnonymousView)
              {
                paramAnonymousView.printStackTrace();
              }
            }
          });
          return paramView;
          paramViewGroup = (ListItemView)paramView.getTag();
          continue;
          paramViewGroup.imageView.setImageBitmap((Bitmap)localObject1);
        }
        catch (Exception localException1)
        {
          for (;;)
          {
            localException1.printStackTrace();
          }
        }
      }
    }
    paramViewGroup.imageButton.setBackgroundResource(R.drawable.mercury_u5);
    JSONObject localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("apkUrl", this.apkUrl);
      localJSONObject.put("apkName", this.apkName);
      localJSONObject.put("packageName", this.packageName);
      localJSONObject.put("adId", this.adId);
      localJSONObject.put("position", paramInt);
      localJSONObject.put("categoryId", this.categoryId);
      paramViewGroup.imageButton.setTag(localJSONObject);
      paramViewGroup.imageButton.setOnClickListener(new View.OnClickListener()
      {
        public final void onClick(View paramAnonymousView)
        {
          try
          {
            Object localObject1 = new JSONObject(paramAnonymousView.getTag().toString());
            paramAnonymousView = ((JSONObject)localObject1).getString("apkUrl");
            String str = ((JSONObject)localObject1).getString("apkName");
            Object localObject2 = ((JSONObject)localObject1).getString("packageName");
            int i = ((JSONObject)localObject1).getInt("categoryId");
            int j = ((JSONObject)localObject1).getInt("adId");
            int k = Integer.parseInt(((JSONObject)localObject1).getString("position"));
            ViewList.activatePackage = (String)localObject2;
            localObject1 = ListAdapter.this.apkUtil.getKindOfApkName(str);
            localObject2 = new File(Config.AD_APK_PATH + File.separator + (String)localObject1);
            AdManager.currentAd = (AdAdvertisement)ViewList.listNvAd.get(k);
            if (((File)localObject2).exists())
            {
              ListAdapter.this.apkUtil.opApk((String)localObject1, ((AdAdvertisement)ViewList.listNvAd.get(k)).getId());
              if (AdManager.isConnect) {
                MercuryExecutorService.execute(new Task("list", j, "-1", "1", "-1", ListAdapter.this.httpUtil));
              }
            }
            else
            {
              new ToastUtil(ListAdapter.this.mContext).toast("开始下载，下载完成后自动安装。");
              ListAdapter.this.apkUtil.downApk(((AdAdvertisement)ViewList.listNvAd.get(k)).getName(), str + ".apk", ((AdAdvertisement)ViewList.listNvAd.get(k)).getId(), Integer.valueOf(i).intValue(), paramAnonymousView);
              if (AdManager.isConnect)
              {
                MercuryExecutorService.execute(new Task("list", j, "1", "-1", "-1", ListAdapter.this.httpUtil));
                return;
              }
            }
          }
          catch (Exception paramAnonymousView)
          {
            paramAnonymousView.printStackTrace();
          }
        }
      });
      return paramView;
    }
    catch (Exception localException2)
    {
      for (;;)
      {
        localException2.printStackTrace();
      }
    }
    label736:
    paramViewGroup.imageButton.setBackgroundResource(R.drawable.mercury_u5);
    return paramView;
  }
  
  public void remove(int paramInt)
  {
    this.listItem.remove(paramInt);
    notifyDataSetChanged();
  }
  
  public static class ListItemView
  {
    public TextView appInfo;
    public TextView appName;
    public ImageButton imageButton;
    public ImageView imageView;
    
    public ListItemView() {}
  }
}
