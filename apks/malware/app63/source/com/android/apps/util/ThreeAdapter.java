package com.android.apps.util;

import android.content.Context;
import android.graphics.Bitmap;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import com.android.apps.R.drawable;
import com.android.apps.R.id;
import com.android.apps.R.layout;
import com.android.apps.activity.ViewThree;
import com.android.apps.bean.AdAdvertisement;
import com.android.apps.connect.HttpUtil;
import com.android.apps.threadpool.MercuryExecutorService;
import com.android.apps.threadpool.Task;
import java.io.File;
import java.util.List;
import java.util.Map;
import org.json.JSONObject;

public class ThreeAdapter
  extends BaseAdapter
{
  private int adId;
  private String apkName;
  private String apkUrl;
  private ApkUtil apkUtil;
  private String appInfo;
  private String appName;
  private Integer categoryId;
  private HttpUtil httpUtil;
  private boolean isBitmap = false;
  private LayoutInflater listContainer;
  private List<Map<String, Object>> listItem;
  public Context mContext;
  private String packageName;
  private int position;
  
  public ThreeAdapter(List<Map<String, Object>> paramList, Context paramContext)
  {
    this.mContext = paramContext;
    this.listItem = paramList;
    this.listContainer = LayoutInflater.from(paramContext);
  }
  
  public int getCount()
  {
    if (ViewThree.listNvAd.size() >= 3) {
      return 3;
    }
    return ViewThree.listNvAd.size();
  }
  
  public Object getItem(int paramInt)
  {
    return this.listItem.get(paramInt);
  }
  
  public long getItemId(int paramInt)
  {
    return paramInt;
  }
  
  public View getView(int paramInt, View paramView, ViewGroup paramViewGroup)
  {
    this.apkUtil = new ApkUtil(this.mContext);
    this.httpUtil = new HttpUtil();
    Object localObject = ((Map)this.listItem.get(paramInt)).get("image").toString();
    this.appName = ((Map)this.listItem.get(paramInt)).get("appName").toString();
    this.appInfo = ((Map)this.listItem.get(paramInt)).get("appInfo").toString();
    this.apkName = ((Map)this.listItem.get(paramInt)).get("apkName").toString();
    this.packageName = ((Map)this.listItem.get(paramInt)).get("packageName").toString();
    this.adId = ((Integer)((Map)this.listItem.get(paramInt)).get("adId")).intValue();
    this.apkUrl = ((Map)this.listItem.get((int)getItemId(paramInt))).get("apkUrl").toString();
    this.categoryId = ((Integer)((Map)this.listItem.get(paramInt)).get("categoryId"));
    if (paramView == null)
    {
      paramViewGroup = new ListItemView();
      paramView = this.listContainer.inflate(R.layout.list_adviewthree, null);
      paramViewGroup.imageView = ((ImageView)paramView.findViewById(R.id.list_adviewthree_imageview));
      paramViewGroup.appName = ((TextView)paramView.findViewById(R.id.list_adviewthree_text1));
      paramViewGroup.appInfo = ((TextView)paramView.findViewById(R.id.list_adviewthree_text2));
      paramViewGroup.imageButton = ((ImageButton)paramView.findViewById(R.id.list_adviewthree_Imagebutton));
      paramView.setTag(paramViewGroup);
    }
    for (;;)
    {
      ImageLoader.CallbackImpl localCallbackImpl = new ImageLoader.CallbackImpl(paramViewGroup.imageView);
      localObject = new ImageLoader().initImage((String)localObject, paramViewGroup.imageView, this.mContext, localCallbackImpl);
      if (localObject == null)
      {
        paramViewGroup.imageView.setImageResource(R.drawable.mercury_nullimagelist);
        paramViewGroup.appInfo.setText(this.appInfo);
        paramViewGroup.appName.setText(this.appName);
        localObject = new JSONObject();
      }
      try
      {
        ((JSONObject)localObject).put("apkUrl", this.apkUrl);
        ((JSONObject)localObject).put("apkName", this.apkName);
        ((JSONObject)localObject).put("packageName", this.packageName);
        ((JSONObject)localObject).put("adId", this.adId);
        ((JSONObject)localObject).put("position", paramInt);
        ((JSONObject)localObject).put("categoryId", this.categoryId);
        paramViewGroup.imageButton.setTag(localObject);
        paramViewGroup.imageButton.setOnClickListener(new View.OnClickListener()
        {
          public final void onClick(View paramAnonymousView)
          {
            try
            {
              Object localObject = new JSONObject(paramAnonymousView.getTag().toString());
              if (!((JSONObject)localObject).getString("apkUrl").equals(" "))
              {
                paramAnonymousView = ((JSONObject)localObject).getString("apkUrl");
                String str = ((JSONObject)localObject).getString("apkName");
                int i = ((JSONObject)localObject).getInt("adId");
                int j = Integer.parseInt(((JSONObject)localObject).getString("position"));
                localObject = ThreeAdapter.this.apkUtil.getKindOfApkName(str);
                AdManager.currentAd = (AdAdvertisement)ViewThree.listNvAd.get(j);
                File localFile = new File(Config.AD_APK_PATH + File.separator + (String)localObject);
                ViewThree.adNum = j;
                if (localFile.exists())
                {
                  ThreeAdapter.this.apkUtil.opApk((String)localObject, i);
                  if (AdManager.isConnect) {
                    MercuryExecutorService.execute(new Task("three", i, "-1", "1", "-1", ThreeAdapter.this.httpUtil));
                  }
                }
                else
                {
                  new ToastUtil(ThreeAdapter.this.mContext).toast("开始下载，下载完成后自动安装。");
                  ThreeAdapter.this.apkUtil.downApk("test", str + ".apk", i, ThreeAdapter.this.categoryId.intValue(), paramAnonymousView);
                  if (AdManager.isConnect)
                  {
                    MercuryExecutorService.execute(new Task("three", i, "1", "-1", "-1", ThreeAdapter.this.httpUtil));
                    return;
                  }
                }
              }
            }
            catch (Exception paramAnonymousView)
            {
              paramAnonymousView.printStackTrace();
            }
          }
        });
        return paramView;
        paramViewGroup = (ListItemView)paramView.getTag();
        continue;
        paramViewGroup.imageView.setImageBitmap((Bitmap)localObject);
      }
      catch (Exception localException)
      {
        for (;;)
        {
          localException.printStackTrace();
        }
      }
    }
  }
  
  public void remove(int paramInt)
  {
    this.listItem.remove(paramInt);
    notifyDataSetChanged();
  }
  
  public static class ListItemView
  {
    public TextView appInfo;
    public TextView appName;
    public ImageButton imageButton;
    public ImageView imageView;
    
    public ListItemView() {}
  }
}
