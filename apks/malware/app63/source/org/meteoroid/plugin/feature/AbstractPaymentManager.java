package org.meteoroid.plugin.feature;

import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.os.Message;
import android.util.Log;
import com.a.a.d.b;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Set;
import org.meteoroid.core.d;
import org.meteoroid.core.h;
import org.meteoroid.core.h.a;
import org.meteoroid.core.k;
import org.meteoroid.core.l;

public abstract class AbstractPaymentManager
  implements DialogInterface.OnClickListener, b, h.a
{
  private com.a.a.e.a jU;
  private Set<String> kd;
  private boolean ke = false;
  private LinkedList<Payment> kf;
  
  public AbstractPaymentManager() {}
  
  private void bl()
  {
    Iterator localIterator1 = d.at().iterator();
    b localB;
    while (localIterator1.hasNext())
    {
      localB = (b)localIterator1.next();
      if ((localB instanceof Payment))
      {
        Iterator localIterator2 = this.kd.iterator();
        String str;
        do
        {
          if (!localIterator2.hasNext()) {
            break;
          }
          str = (String)localIterator2.next();
        } while (!localB.getClass().getSimpleName().equalsIgnoreCase(str));
      }
    }
    for (int i = 1;; i = 0)
    {
      if (i == 0)
      {
        a((Payment)localB);
        break;
      }
      getName();
      new StringBuilder().append(localB.getClass().getSimpleName()).append(" is excluded.").toString();
      break;
      return;
    }
  }
  
  private void bn()
  {
    this.ke = true;
    l.a(null, k.getString(2131034135), false, true);
  }
  
  private void bo()
  {
    this.ke = false;
    l.aU();
  }
  
  public void B(String paramString)
  {
    this.jU = new com.a.a.e.a(paramString);
    paramString = this.jU.D("EXCLUDE");
    this.kd = new HashSet();
    if (paramString != null) {
      this.kd.addAll(Arrays.asList(paramString.split(";")));
    }
    this.kf = new LinkedList();
    h.b(61696, "MSG_PAYMENT_REQUEST");
    h.b(61697, "MSG_PAYMENT_QUERY");
    h.b(61698, "MSG_PAYMENT_SUCCESS");
    h.b(61699, "MSG_PAYMENT_FAIL");
    h.a(this);
  }
  
  public final String C(String paramString)
  {
    return this.jU.D(paramString);
  }
  
  public final void a(Payment paramPayment)
  {
    if (this.kf.contains(paramPayment)) {
      return;
    }
    getName();
    new StringBuilder().append(paramPayment.E()).append(" has added into availiable payments.").toString();
    this.kf.add(paramPayment);
  }
  
  public boolean a(Message paramMessage)
  {
    if ((paramMessage.what == 61698) && (this.ke))
    {
      getName();
      new StringBuilder("Payment:").append(((Payment)paramMessage.obj).E()).append(" is successed.").toString();
      bo();
      bk();
      if (org.meteoroid.core.a.ht == null) {
        h.b(h.a(47872, null));
      }
      return true;
    }
    if ((paramMessage.what == 61699) && (this.ke))
    {
      getName();
      new StringBuilder("Payment:").append(((Payment)paramMessage.obj).E()).append(" is failed.").toString();
      bo();
      fail();
      return true;
    }
    if (paramMessage.what == 47876) {
      bl();
    }
    return false;
  }
  
  public abstract void bk();
  
  public final void bm()
  {
    getName();
    new StringBuilder("There is ").append(this.kf.size()).append(" payment(s) in all.").toString();
    if (this.kf.size() == 1)
    {
      bn();
      ((Payment)this.kf.get(0)).bp();
      return;
    }
    if (this.kf.size() > 1)
    {
      String[] arrayOfString = new String[this.kf.size()];
      int i = 0;
      while (i < arrayOfString.length)
      {
        arrayOfString[i] = ((Payment)this.kf.get(i)).E();
        i += 1;
      }
      l.a(null, null, arrayOfString, this, false);
      return;
    }
    k.a("没有可用的计费插件，计费插件初始化失败", 0);
    k.aF();
  }
  
  public abstract void fail();
  
  public void onClick(DialogInterface paramDialogInterface, int paramInt)
  {
    if ((paramInt < this.kf.size()) && (paramInt >= 0))
    {
      bn();
      getName();
      new StringBuilder("Paying with ").append(((Payment)this.kf.get(paramInt)).E()).toString();
      ((Payment)this.kf.get(paramInt)).bp();
      return;
    }
    Log.w(getName(), "Selected an unknown payment." + paramInt);
    fail();
  }
  
  public void onDestroy()
  {
    this.kf.clear();
    this.kf = null;
  }
  
  public static abstract interface Payment
    extends b
  {
    public static final int MSG_PAYMENT_FAIL = 61699;
    public static final int MSG_PAYMENT_NO_MORE = 61700;
    public static final int MSG_PAYMENT_QUERY = 61697;
    public static final int MSG_PAYMENT_REQUEST = 61696;
    public static final int MSG_PAYMENT_SUCCESS = 61698;
    
    public abstract String E();
    
    public abstract void bp();
  }
}
