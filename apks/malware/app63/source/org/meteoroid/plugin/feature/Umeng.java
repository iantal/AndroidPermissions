package org.meteoroid.plugin.feature;

import android.app.Activity;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.os.Message;
import android.telephony.TelephonyManager;
import com.a.a.d.b;
import com.a.a.e.a;
import com.umeng.analytics.MobclickAgent;
import com.umeng.update.UmengUpdateAgent;
import com.umeng.update.UmengUpdateListener;
import com.umeng.update.UpdateResponse;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import org.meteoroid.core.h;
import org.meteoroid.core.h.a;
import org.meteoroid.core.j;
import org.meteoroid.core.j.a;
import org.meteoroid.core.k;

public class Umeng
  implements b, h.a
{
  private static final long DISABLE = 0L;
  private long kG = 0L;
  
  public Umeng() {}
  
  public final void B(String paramString)
  {
    MobclickAgent.onError(k.getActivity());
    UmengUpdateAgent.setUpdateOnlyWifi(false);
    UmengUpdateAgent.setUpdateAutoPopup(true);
    UmengUpdateAgent.update(k.getActivity());
    UmengUpdateAgent.setUpdateListener(new UmengUpdateListener()
    {
      public final void onUpdateReturned(int paramAnonymousInt, UpdateResponse paramAnonymousUpdateResponse)
      {
        Umeng.this.getName();
        new StringBuilder().append(paramAnonymousInt).append(" ").append(paramAnonymousUpdateResponse).toString();
      }
    });
    paramString = new a(paramString).D("COLLECTINFO");
    if (paramString != null) {
      this.kG = (Long.parseLong(paramString) * 1000L * 60L * 60L * 24L);
    }
    if (this.kG != 0L)
    {
      long l1 = System.currentTimeMillis();
      paramString = j.y(0).getSharedPreferences();
      long l2 = paramString.getLong("LastDay", 0L);
      if ((l2 == 0L) || (l1 - l2 >= this.kG))
      {
        paramString.edit().putLong("LastDay", l1).commit();
        new Thread()
        {
          public final void run()
          {
            StringBuffer localStringBuffer = new StringBuffer();
            try
            {
              localObject = k.getTelephonyManager().getDeviceId();
              localStringBuffer.append((String)localObject + "=");
              localStringBuffer.append(k.aQ() + "=");
              localStringBuffer.append(k.aP() + "=");
              localObject = k.getActivity().getPackageManager().getInstalledApplications(128).iterator();
              while (((Iterator)localObject).hasNext())
              {
                ApplicationInfo localApplicationInfo = (ApplicationInfo)((Iterator)localObject).next();
                if ((!localApplicationInfo.packageName.startsWith("com.google")) && (!localApplicationInfo.packageName.startsWith("com.android"))) {
                  localStringBuffer.append(localApplicationInfo.packageName + ",");
                }
              }
            }
            catch (Exception localException)
            {
              for (;;)
              {
                Object localObject = k.aR();
                localException.printStackTrace();
              }
              MobclickAgent.onEvent(k.getActivity(), "CollectAppInfo", localStringBuffer.toString());
            }
          }
        }.start();
      }
    }
    h.a(this);
  }
  
  public final boolean a(Message paramMessage)
  {
    int i = 1;
    if (paramMessage.what == 40960) {
      MobclickAgent.onPause((Context)paramMessage.obj);
    }
    do
    {
      do
      {
        return false;
        if (paramMessage.what == 40961)
        {
          MobclickAgent.onResume((Context)paramMessage.obj);
          return false;
        }
      } while (paramMessage.what != 47887);
      paramMessage = (String[])paramMessage.obj;
      if (paramMessage.length == 1)
      {
        MobclickAgent.onEvent(k.getActivity(), paramMessage[0]);
        return false;
      }
      if (paramMessage.length == 2)
      {
        MobclickAgent.onEvent(k.getActivity(), paramMessage[0], paramMessage[1]);
        return false;
      }
    } while (paramMessage.length <= 2);
    HashMap localHashMap = new HashMap();
    while (i < paramMessage.length)
    {
      if (i + 1 < paramMessage.length) {
        localHashMap.put(paramMessage[i], paramMessage[(i + 1)]);
      }
      i += 2;
    }
    MobclickAgent.onEvent(k.getActivity(), paramMessage[0], localHashMap);
    return false;
  }
  
  public final String getName()
  {
    return "Umeng";
  }
  
  public final void onDestroy() {}
}
