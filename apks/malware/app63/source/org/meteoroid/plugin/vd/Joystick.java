package org.meteoroid.plugin.vd;

import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.util.AttributeSet;
import com.a.a.d.c;
import com.a.a.e.b;

public class Joystick
  extends AbstractRoundWidget
{
  public static final int EIGHT_DIR_CONTROL = 8;
  public static final int EIGHT_DIR_CONTROL_NUM = 10;
  public static final int FOUR_DIR_CONTROL = 4;
  public static final int FOUR_DIR_CONTROL_NUM = 6;
  private static final VirtualKey[] kX = new VirtualKey[5];
  private static final VirtualKey[] lh = new VirtualKey[9];
  private boolean kT = true;
  int li;
  int lj;
  Bitmap[] lk;
  Bitmap[] ll;
  int mode;
  
  public Joystick() {}
  
  static VirtualKey a(float paramFloat, int paramInt)
  {
    if (paramInt == 8) {
      return lh[((int)((paramFloat + 22.5D) / 45.0D))];
    }
    return kX[((int)((45.0F + paramFloat) / 90.0F))];
  }
  
  public void a(AttributeSet paramAttributeSet, String paramString)
  {
    super.a(paramAttributeSet, paramString);
    this.lk = b.K(paramAttributeSet.getAttributeValue(paramString, "stick"));
    this.ll = b.K(paramAttributeSet.getAttributeValue(paramString, "base"));
    this.mode = paramAttributeSet.getAttributeIntValue(paramString, "mode", 4);
  }
  
  public final void a(c paramC)
  {
    super.a(paramC);
    if (this.mode == 8)
    {
      lh[0] = new VirtualKey();
      lh[0].lE = "RIGHT";
      lh[1] = new VirtualKey();
      lh[1].lE = "NUM_3";
      lh[2] = new VirtualKey();
      lh[2].lE = "UP";
      lh[3] = new VirtualKey();
      lh[3].lE = "NUM_1";
      lh[4] = new VirtualKey();
      lh[4].lE = "LEFT";
      lh[5] = new VirtualKey();
      lh[5].lE = "NUM_7";
      lh[6] = new VirtualKey();
      lh[6].lE = "DOWN";
      lh[7] = new VirtualKey();
      lh[7].lE = "NUM_9";
      lh[8] = lh[0];
    }
    for (;;)
    {
      reset();
      return;
      if (this.mode == 10)
      {
        lh[0] = new VirtualKey();
        lh[0].lE = "NUM_6";
        lh[1] = new VirtualKey();
        lh[1].lE = "NUM_3";
        lh[2] = new VirtualKey();
        lh[2].lE = "NUM_2";
        lh[3] = new VirtualKey();
        lh[3].lE = "NUM_1";
        lh[4] = new VirtualKey();
        lh[4].lE = "NUM_4";
        lh[5] = new VirtualKey();
        lh[5].lE = "NUM_7";
        lh[6] = new VirtualKey();
        lh[6].lE = "NUM_8";
        lh[7] = new VirtualKey();
        lh[7].lE = "NUM_9";
        lh[8] = lh[0];
      }
      else if (this.mode == 6)
      {
        kX[0] = new VirtualKey();
        kX[0].lE = "NUM_6";
        kX[1] = new VirtualKey();
        kX[1].lE = "NUM_2";
        kX[2] = new VirtualKey();
        kX[2].lE = "NUM_4";
        kX[3] = new VirtualKey();
        kX[3].lE = "NUM_8";
        kX[4] = kX[0];
      }
      else
      {
        kX[0] = new VirtualKey();
        kX[0].lE = "RIGHT";
        kX[1] = new VirtualKey();
        kX[1].lE = "UP";
        kX[2] = new VirtualKey();
        kX[2].lE = "LEFT";
        kX[3] = new VirtualKey();
        kX[3].lE = "DOWN";
        kX[4] = kX[0];
      }
    }
  }
  
  public final boolean bf()
  {
    return (this.ll != null) || (this.lk != null);
  }
  
  public boolean h(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    double d = Math.sqrt(Math.pow(paramInt2 - this.centerX, 2.0D) + Math.pow(paramInt3 - this.centerY, 2.0D));
    Thread.yield();
    if ((d <= this.kU) && (d >= this.kV))
    {
      switch (paramInt1)
      {
      }
      do
      {
        do
        {
          return true;
          this.id = paramInt4;
        } while (this.id != paramInt4);
        this.state = 0;
        this.li = paramInt2;
        this.lj = paramInt3;
        VirtualKey localVirtualKey = a(a(paramInt2, paramInt3), this.mode);
        if (this.kW != localVirtualKey)
        {
          if ((this.kW != null) && (this.kW.state == 0))
          {
            this.kW.state = 1;
            VirtualKey.b(this.kW);
          }
          this.kW = localVirtualKey;
        }
        this.kW.state = 0;
        VirtualKey.b(this.kW);
        return true;
      } while (this.id != paramInt4);
      release();
      return true;
    }
    if ((paramInt1 == 1) && (this.id == paramInt4)) {
      release();
    }
    return false;
  }
  
  public void onDraw(Canvas paramCanvas)
  {
    Object localObject2 = null;
    if (this.delay > 0) {
      this.delay -= 1;
    }
    do
    {
      return;
      if (this.state == 0)
      {
        this.kQ = 0;
        this.kT = true;
      }
    } while (!this.kT);
    if ((this.kP > 0) && (this.state == 1))
    {
      this.kQ += 1;
      this.fy.setAlpha(255 - this.kQ * 255 / this.kP);
      if (this.kQ >= this.kP)
      {
        this.kQ = 0;
        this.kT = false;
      }
    }
    Bitmap localBitmap;
    float f1;
    float f2;
    if (a(this.ll))
    {
      localBitmap = this.ll[this.state];
      f1 = this.centerX - this.ll[this.state].getWidth() / 2;
      f2 = this.centerY - this.ll[this.state].getHeight() / 2;
      if ((this.kP == -1) || (this.state != 1)) {
        break label316;
      }
    }
    label316:
    for (Object localObject1 = this.fy;; localObject1 = null)
    {
      paramCanvas.drawBitmap(localBitmap, f1, f2, (Paint)localObject1);
      if (!a(this.lk)) {
        break;
      }
      localBitmap = this.lk[this.state];
      f1 = this.li - this.lk[this.state].getWidth() / 2;
      f2 = this.lj - this.lk[this.state].getHeight() / 2;
      localObject1 = localObject2;
      if (this.kP != -1)
      {
        localObject1 = localObject2;
        if (this.state == 1) {
          localObject1 = this.fy;
        }
      }
      paramCanvas.drawBitmap(localBitmap, f1, f2, (Paint)localObject1);
      return;
    }
  }
  
  public final void reset()
  {
    this.li = this.centerX;
    this.lj = this.centerY;
    this.state = 1;
  }
  
  public final void setVisible(boolean paramBoolean)
  {
    this.kT = paramBoolean;
  }
}
