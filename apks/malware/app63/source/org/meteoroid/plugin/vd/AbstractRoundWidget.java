package org.meteoroid.plugin.vd;

import android.util.AttributeSet;
import org.meteoroid.core.k;

public abstract class AbstractRoundWidget
  extends AbstractButton
{
  int centerX;
  int centerY;
  int kU;
  int kV;
  VirtualKey kW;
  
  public AbstractRoundWidget() {}
  
  public final float a(float paramFloat1, float paramFloat2)
  {
    paramFloat1 -= this.centerX;
    paramFloat2 -= this.centerY;
    double d2 = Math.toDegrees(Math.atan(paramFloat2 / paramFloat1));
    double d1;
    if ((paramFloat1 >= 0.0F) && (paramFloat2 < 0.0F)) {
      d1 = Math.abs(d2);
    }
    for (;;)
    {
      return (float)d1;
      if ((paramFloat1 < 0.0F) && (paramFloat2 <= 0.0F))
      {
        d1 = 180.0D - d2;
      }
      else if ((paramFloat1 <= 0.0F) && (paramFloat2 > 0.0F))
      {
        d1 = Math.abs(d2) + 180.0D;
      }
      else
      {
        d1 = d2;
        if (paramFloat1 > 0.0F)
        {
          d1 = d2;
          if (paramFloat2 >= 0.0F) {
            d1 = 360.0D - Math.abs(d2);
          }
        }
      }
    }
  }
  
  public void a(AttributeSet paramAttributeSet, String paramString)
  {
    this.centerX = paramAttributeSet.getAttributeIntValue(paramString, "x", k.aK() / 2);
    this.centerY = paramAttributeSet.getAttributeIntValue(paramString, "y", k.aL() / 2);
    this.kU = paramAttributeSet.getAttributeIntValue(paramString, "max", 60);
    this.kV = paramAttributeSet.getAttributeIntValue(paramString, "min", 5);
    paramAttributeSet = paramAttributeSet.getAttributeValue(paramString, "fade");
    if (paramAttributeSet != null)
    {
      paramAttributeSet = paramAttributeSet.split(",");
      if (paramAttributeSet.length <= 0) {
        break label118;
      }
    }
    label118:
    for (this.kP = Integer.parseInt(paramAttributeSet[0]);; this.kP = -1)
    {
      if (paramAttributeSet.length >= 2) {
        this.delay = Integer.parseInt(paramAttributeSet[1]);
      }
      return;
    }
  }
  
  public boolean h(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    return false;
  }
  
  public final void release()
  {
    this.id = -1;
    if ((this.kW != null) && (this.kW.state == 0))
    {
      this.kW.state = 1;
      VirtualKey.b(this.kW);
    }
    reset();
  }
  
  public abstract void reset();
}
