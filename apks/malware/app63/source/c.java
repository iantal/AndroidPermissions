import com.a.a.a.f;
import com.a.a.a.g;
import com.a.a.a.i;
import com.a.a.a.j;
import com.app.GameMenu;
import com.app.KeyPressed;
import com.app.app;
import java.io.IOException;

public final class c
  extends com.a.a.a.b
  implements Runnable
{
  public app X;
  public GameMenu Y;
  public j Z;
  public j aa;
  public j ab;
  public j ac;
  public j ad;
  public j ae;
  public byte af;
  public final byte ag = 1;
  public final byte ah = 2;
  public final byte ai = 3;
  public g aj;
  byte ak;
  b al = new b();
  long am;
  public final byte w = 4;
  byte z;
  
  public c(app paramApp)
  {
    this.X = paramApp;
    new Thread(this).start();
    this.aj = g.a(0, 0, 8);
    this.af = 3;
    try
    {
      this.ad = j.l("/logo.png");
      this.Z = j.l("/over.png");
      this.aa = j.l("/ruanjian.png");
      this.ab = j.l("/5.png");
      this.ac = j.l("/title0.png");
      this.ae = j.l("/anykey.png");
      KeyPressed.d((byte)0);
      this.z = 0;
      this.Y = new GameMenu(this);
      this.Y.f(1);
      this.am = System.currentTimeMillis();
      return;
    }
    catch (IOException paramApp)
    {
      for (;;)
      {
        paramApp.printStackTrace();
      }
    }
  }
  
  protected final void a(i paramI)
  {
    switch (this.af)
    {
    default: 
    case 3: 
    case 2: 
      do
      {
        do
        {
          return;
          paramI.setColor(16777215);
          paramI.e(0, 0, 240, 320);
          if (this.ad != null) {
            this.al.a(paramI, this.ad);
          }
        } while (System.currentTimeMillis() - this.am <= 3000L);
        this.ad = null;
        this.af = 4;
        return;
        paramI.setColor(0);
        paramI.e(0, 0, getWidth(), getHeight());
        paramI.a(this.ac, 0, 0, 0);
        byte b = (byte)(this.ak + 1);
        this.ak = b;
        if (b < 10) {
          paramI.a(this.ae, (getWidth() - this.ae.getWidth()) / 2, (getHeight() - this.ae.getHeight()) / 2, 0);
        }
      } while (this.ak <= 20);
      this.ak = 0;
      return;
    case 4: 
      paramI.setColor(0);
      paramI.a(this.aj);
      paramI.e(0, 0, getWidth(), getHeight());
      paramI.setColor(16777215);
      paramI.a("是否开启音乐？", (getWidth() - this.aj.k("是否开启音乐？")) / 2, getHeight() / 2, 0);
      paramI.a("开启", 0, getHeight() - this.aj.getHeight(), 0);
      paramI.a("关闭", getWidth() - this.aj.k("关闭") - 2, getHeight() - this.aj.getHeight(), 0);
      return;
    }
    this.Y.a(paramI);
  }
  
  public final void c(int paramInt)
  {
    switch (this.af)
    {
    case 3: 
    default: 
      return;
    case 2: 
      this.af = 1;
      return;
    case 4: 
      switch (KeyPressed.g(paramInt))
      {
      default: 
        return;
      case 10: 
        this.Y.bS = true;
        this.Y.play();
        this.af = 2;
        return;
      }
      this.Y.bS = false;
      this.af = 2;
      return;
    }
    paramInt = KeyPressed.g(paramInt);
    this.Y.e(paramInt);
  }
  
  public final void d(int paramInt)
  {
    switch (this.af)
    {
    case 2: 
    default: 
      return;
    }
    paramInt = KeyPressed.g(paramInt);
    this.Y.d(paramInt);
  }
  
  public final void f()
  {
    if (this.Y != null) {
      this.Y.b();
    }
  }
  
  public final void g()
  {
    if (this.Y != null) {
      this.Y.a();
    }
  }
  
  public final void run()
  {
    for (;;)
    {
      B();
      try
      {
        Thread.sleep(50L);
      }
      catch (InterruptedException localInterruptedException)
      {
        localInterruptedException.printStackTrace();
      }
    }
  }
}
