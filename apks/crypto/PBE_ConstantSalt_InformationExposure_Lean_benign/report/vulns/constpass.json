{"findings": [{"title": "\n            Constant Passwords or Salts for PBE\n        ", "stat": "high", "description": "\n            Password-based encryption (PBE) misses the intended purpose if the induced password or salt\n            value is statically defined. Basically, a cryptographically secure key is deduced from a given secret\n            by repeating a key derivation function (KDF) multiple times. A randomly chosen salt value\n            ensures that the derived key is unique and slows down brute-force and dictionary-based attacks\n            dramatically. However, if the password is hard-coded, the derived encryption key has to be considered\n            broken since the confidentiality of the encrypted data is no longer guaranteed. Likewise,\n            specifying a constant salt value contradicts the goal of using PBE to hinder table-based attacks.\n            Practically occurring in the same construction, our rule targets both misconceptions.\n        ", "recommendation": "Test recommendation", "evidence": ["/home/miki/Documents/GITHUB/AndroidPermissions/apks/crypto/PBE_ConstantSalt_InformationExposure_Lean_benign/app/smali/edu/ksu/cs/benign/Util/Encrypt.smali"]}]}